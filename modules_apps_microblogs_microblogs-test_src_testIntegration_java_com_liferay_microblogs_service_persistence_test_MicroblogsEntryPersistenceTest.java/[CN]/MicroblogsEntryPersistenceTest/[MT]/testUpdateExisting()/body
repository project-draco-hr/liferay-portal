{
  long pk=RandomTestUtil.nextLong();
  MicroblogsEntry newMicroblogsEntry=_persistence.create(pk);
  newMicroblogsEntry.setCompanyId(RandomTestUtil.nextLong());
  newMicroblogsEntry.setUserId(RandomTestUtil.nextLong());
  newMicroblogsEntry.setUserName(RandomTestUtil.randomString());
  newMicroblogsEntry.setCreateDate(RandomTestUtil.nextDate());
  newMicroblogsEntry.setModifiedDate(RandomTestUtil.nextDate());
  newMicroblogsEntry.setCreatorClassNameId(RandomTestUtil.nextLong());
  newMicroblogsEntry.setCreatorClassPK(RandomTestUtil.nextLong());
  newMicroblogsEntry.setContent(RandomTestUtil.randomString());
  newMicroblogsEntry.setType(RandomTestUtil.nextInt());
  newMicroblogsEntry.setParentMicroblogsEntryId(RandomTestUtil.nextLong());
  newMicroblogsEntry.setSocialRelationType(RandomTestUtil.nextInt());
  _microblogsEntries.add(_persistence.update(newMicroblogsEntry));
  MicroblogsEntry existingMicroblogsEntry=_persistence.findByPrimaryKey(newMicroblogsEntry.getPrimaryKey());
  Assert.assertEquals(existingMicroblogsEntry.getMicroblogsEntryId(),newMicroblogsEntry.getMicroblogsEntryId());
  Assert.assertEquals(existingMicroblogsEntry.getCompanyId(),newMicroblogsEntry.getCompanyId());
  Assert.assertEquals(existingMicroblogsEntry.getUserId(),newMicroblogsEntry.getUserId());
  Assert.assertEquals(existingMicroblogsEntry.getUserName(),newMicroblogsEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMicroblogsEntry.getCreateDate()),Time.getShortTimestamp(newMicroblogsEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMicroblogsEntry.getModifiedDate()),Time.getShortTimestamp(newMicroblogsEntry.getModifiedDate()));
  Assert.assertEquals(existingMicroblogsEntry.getCreatorClassNameId(),newMicroblogsEntry.getCreatorClassNameId());
  Assert.assertEquals(existingMicroblogsEntry.getCreatorClassPK(),newMicroblogsEntry.getCreatorClassPK());
  Assert.assertEquals(existingMicroblogsEntry.getContent(),newMicroblogsEntry.getContent());
  Assert.assertEquals(existingMicroblogsEntry.getType(),newMicroblogsEntry.getType());
  Assert.assertEquals(existingMicroblogsEntry.getParentMicroblogsEntryId(),newMicroblogsEntry.getParentMicroblogsEntryId());
  Assert.assertEquals(existingMicroblogsEntry.getSocialRelationType(),newMicroblogsEntry.getSocialRelationType());
}

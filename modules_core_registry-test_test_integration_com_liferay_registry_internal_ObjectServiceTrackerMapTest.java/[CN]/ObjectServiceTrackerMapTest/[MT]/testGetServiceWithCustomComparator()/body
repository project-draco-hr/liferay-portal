{
  ServiceTrackerMap<String,TrackedOne> serviceTrackerMap=ServiceTrackerCollections.singleValueMap(TrackedOne.class,"(target=*)",new ServiceTrackerCollections.PropertyServiceReferenceMapper<String>("target"),new Comparator<ServiceReference<TrackedOne>>(){
    @Override public int compare(    ServiceReference<TrackedOne> serviceReference1,    ServiceReference<TrackedOne> serviceReference2){
      return -1;
    }
  }
);
  serviceTrackerMap.open();
  TrackedOne trackedOne1=new TrackedOne();
  ServiceRegistration<TrackedOne> serviceRegistration1=registerService(trackedOne1);
  TrackedOne trackedOne2=new TrackedOne();
  ServiceRegistration<TrackedOne> serviceRegistration2=registerService(trackedOne2);
  Assert.assertEquals(trackedOne2,serviceTrackerMap.getService("aTarget"));
  serviceRegistration1.unregister();
  serviceRegistration2.unregister();
  registerService(trackedOne2);
  registerService(trackedOne1);
  Assert.assertEquals(trackedOne1,serviceTrackerMap.getService("aTarget"));
  serviceTrackerMap.close();
}

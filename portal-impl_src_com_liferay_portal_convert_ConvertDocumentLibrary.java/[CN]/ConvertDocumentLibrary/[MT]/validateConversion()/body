{
  String sourceStoreClassName=getSourceStoreClassName();
  if (!sourceStoreClassName.endsWith(_FILE_SYSTEM_STORE_SUFFIX)) {
    return;
  }
  String targetStoreClassName=getTargetStoreClassName();
  if (!targetStoreClassName.endsWith(_FILE_SYSTEM_STORE_SUFFIX)) {
    return;
  }
  if (Validator.isBlank(PropsValues.DL_STORE_ADVANCED_FILE_SYSTEM_ROOT_DIR)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Property \"" + PropsKeys.DL_STORE_ADVANCED_FILE_SYSTEM_ROOT_DIR + " is not set");
    }
    throw new InvalidFileSystemStoreRootDirException();
  }
  if (Validator.isBlank(PropsValues.DL_STORE_FILE_SYSTEM_ROOT_DIR)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Property \"" + PropsKeys.DL_STORE_FILE_SYSTEM_ROOT_DIR + " is not set");
    }
    throw new InvalidFileSystemStoreRootDirException();
  }
  boolean identicalRootDirNames=true;
  if (OSDetector.isWindows()) {
    identicalRootDirNames=StringUtil.equalsIgnoreCase(PropsValues.DL_STORE_ADVANCED_FILE_SYSTEM_ROOT_DIR,PropsValues.DL_STORE_FILE_SYSTEM_ROOT_DIR);
  }
 else {
    identicalRootDirNames=PropsValues.DL_STORE_ADVANCED_FILE_SYSTEM_ROOT_DIR.equals(PropsValues.DL_STORE_FILE_SYSTEM_ROOT_DIR);
  }
  if (identicalRootDirNames) {
    if (_log.isWarnEnabled()) {
      StringBundler sb=new StringBundler(5);
      sb.append("Both properties \"");
      sb.append(PropsKeys.DL_STORE_ADVANCED_FILE_SYSTEM_ROOT_DIR);
      sb.append("\" and \"");
      sb.append(PropsKeys.DL_STORE_FILE_SYSTEM_ROOT_DIR);
      sb.append("\" have the same value");
      _log.warn(sb.toString());
    }
    throw new InvalidFileSystemStoreRootDirException();
  }
}

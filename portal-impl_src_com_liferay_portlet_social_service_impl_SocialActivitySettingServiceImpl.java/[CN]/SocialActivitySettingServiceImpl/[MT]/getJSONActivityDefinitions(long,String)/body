{
  SocialActivityPermissionUtil.check(getPermissionChecker(),groupId,ActionKeys.VIEW);
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  List<SocialActivityDefinition> activityDefinitions=socialActivitySettingLocalService.getActivityDefinitions(groupId,className);
  Collections.sort(activityDefinitions,new SocialActivityDefinitionNameComparator(LocaleUtil.getMostRelevantLocale()));
  for (  SocialActivityDefinition activityDefinition : activityDefinitions) {
    if (!activityDefinition.isCountersEnabled()) {
      continue;
    }
    JSONObject activityDefinitionJSONObject=JSONFactoryUtil.createJSONObject(JSONFactoryUtil.looseSerialize(activityDefinition));
    JSONArray activityCounterDefinitionsJSONArray=JSONFactoryUtil.createJSONArray();
    for (    SocialActivityCounterDefinition activityCounterDefinition : activityDefinition.getActivityCounterDefinitions()) {
      JSONObject activityCounterDefinitionJSONObject=JSONFactoryUtil.createJSONObject(JSONFactoryUtil.looseSerialize(activityCounterDefinition));
      activityCounterDefinitionsJSONArray.put(activityCounterDefinitionJSONObject);
    }
    activityDefinitionJSONObject.put("counters",activityCounterDefinitionsJSONArray);
    jsonArray.put(activityDefinitionJSONObject);
  }
  return jsonArray;
}

{
  setAllowBrowseDocuments(true);
  setWikiPageResourcePrimKey(1);
  mockWikiPageLocalService(1,"creole");
  PortletURL creoleEngineItemSelectorPortletURL=mock(PortletURL.class);
  when(creoleEngineItemSelectorPortletURL.toString()).thenReturn("itemSelectorPortletURLWithWikiUrlAndUploadSelectionViews");
  when(_itemSelector.getItemSelectorURL(Mockito.any(RequestBackedPortletURLFactory.class),Mockito.anyString(),Mockito.any(ItemSelectorCriterion.class),Mockito.any(ItemSelectorCriterion.class),Mockito.any(ItemSelectorCriterion.class))).thenReturn(creoleEngineItemSelectorPortletURL);
  JSONObject jsonObject=getJSONObjectWithDefaultItemSelectorURL();
  WikiAttachmentEditorConfigContributor wikiAttachmentEditorConfigContributor=new WikiAttachmentEditorConfigContributor();
  wikiAttachmentEditorConfigContributor.setItemSelector(_itemSelector);
  wikiAttachmentEditorConfigContributor.setWikiPageLocalService(_wikiPageLocalService);
  wikiAttachmentEditorConfigContributor.populateConfigJSONObject(jsonObject,_inputEditorTaglibAttributes,_themeDisplay,_requestBackedPortletURLFactory);
  JSONObject expectedJSONObject=JSONFactoryUtil.createJSONObject();
  expectedJSONObject.put("filebrowserImageBrowseLinkUrl","itemSelectorPortletURLWithWikiUrlAndUploadSelectionViews");
  expectedJSONObject.put("filebrowserImageBrowseUrl","itemSelectorPortletURLWithWikiUrlAndUploadSelectionViews");
  expectedJSONObject.put("removePlugins","plugin1,ae_addimages");
  JSONAssert.assertEquals(expectedJSONObject.toJSONString(),jsonObject.toJSONString(),true);
}

{
  Map<Long,Long> recordSetIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDLRecordSet.class);
  long recordSetId=MapUtil.getLong(recordSetIds,record.getRecordSetId(),record.getRecordSetId());
  Element recordElement=portletDataContext.getImportDataElement(record);
  DDMFormValues ddmFormValues=getImportDDMFormValues(portletDataContext,recordElement,recordSetId,record);
  DDLRecord importedRecord=(DDLRecord)record.clone();
  importedRecord.setGroupId(portletDataContext.getScopeGroupId());
  importedRecord.setRecordSetId(recordSetId);
  DDLRecord existingRecord=_ddlRecordStagedModelRepository.fetchStagedModelByUuidAndGroupId(record.getUuid(),portletDataContext.getScopeGroupId());
  if ((existingRecord == null) || !portletDataContext.isDataStrategyMirror()) {
    importedRecord=_ddlRecordStagedModelRepository.addStagedModel(portletDataContext,importedRecord,ddmFormValues);
  }
 else {
    importedRecord.setRecordId(existingRecord.getRecordId());
    importedRecord=_ddlRecordStagedModelRepository.updateStagedModel(portletDataContext,importedRecord,ddmFormValues);
  }
  portletDataContext.importClassedModel(record,importedRecord);
}

{
  if (!portletDataContext.isWithinDateRange(page.getModifiedDate())) {
    return;
  }
  String path=getPagePath(portletDataContext,page);
  if (portletDataContext.isPathNotProcessed(path)) {
    Element pageElement=pagesElement.addElement("page");
    pageElement.addAttribute("path",path);
    page.setUserUuid(page.getUserUuid());
    portletDataContext.addPermissions(WikiPage.class,page.getResourcePrimKey());
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"categories") && page.isHead()) {
      portletDataContext.addAssetCategories(WikiPage.class,page.getResourcePrimKey());
    }
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"comments") && page.isHead()) {
      portletDataContext.addComments(WikiPage.class,page.getResourcePrimKey());
    }
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"ratings") && page.isHead()) {
      portletDataContext.addRatingsEntries(WikiPage.class,page.getResourcePrimKey());
    }
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"tags") && page.isHead()) {
      portletDataContext.addAssetTags(WikiPage.class,page.getResourcePrimKey());
    }
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"attachments") && page.isHead()) {
      for (      String attachment : page.getAttachmentsFiles()) {
        int pos=attachment.lastIndexOf(CharPool.SLASH);
        String name=attachment.substring(pos + 1);
        String binPath=getPageAttachementBinPath(portletDataContext,page,name);
        Element attachmentEl=pageElement.addElement("attachment");
        attachmentEl.addAttribute("name",name);
        attachmentEl.addAttribute("bin-path",binPath);
        byte[] bytes=DLLocalServiceUtil.getFile(portletDataContext.getCompanyId(),CompanyConstants.SYSTEM,attachment);
        portletDataContext.addZipEntry(binPath,bytes);
      }
      page.setAttachmentsDir(page.getAttachmentsDir());
    }
    portletDataContext.addZipEntry(path,page);
  }
  exportNode(portletDataContext,nodesElement,page.getNodeId());
}

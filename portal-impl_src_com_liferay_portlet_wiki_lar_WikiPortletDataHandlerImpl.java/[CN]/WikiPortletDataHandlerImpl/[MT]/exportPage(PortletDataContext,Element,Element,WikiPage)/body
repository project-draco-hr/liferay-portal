{
  if (!context.isWithinDateRange(page.getModifiedDate())) {
    return;
  }
  String path=getPagePath(context,page);
  if (context.isPathNotProcessed(path)) {
    Element pageEl=pagesEl.addElement("page");
    pageEl.addAttribute("path",path);
    page.setUserUuid(page.getUserUuid());
    if (context.getBooleanParameter(_NAMESPACE,"comments")) {
      context.addComments(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"tags")) {
      context.addTagsEntries(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"attachments") && page.isHead()) {
      for (      String attachment : page.getAttachmentsFiles()) {
        int pos=attachment.lastIndexOf(StringPool.SLASH);
        String name=attachment.substring(pos + 1);
        String binPath=getPageAttachementBinPath(context,page,name);
        Element attachmentEl=pageEl.addElement("attachment");
        attachmentEl.addAttribute("name",name);
        attachmentEl.addAttribute("bin-path",binPath);
        byte[] bytes=DLServiceUtil.getFile(context.getCompanyId(),CompanyConstants.SYSTEM,attachment);
        context.addZipEntry(binPath,bytes);
      }
      page.setAttachmentsDir(page.getAttachmentsDir());
    }
    context.addZipEntry(path,page);
  }
  exportNode(context,nodesEl,page.getNodeId());
}

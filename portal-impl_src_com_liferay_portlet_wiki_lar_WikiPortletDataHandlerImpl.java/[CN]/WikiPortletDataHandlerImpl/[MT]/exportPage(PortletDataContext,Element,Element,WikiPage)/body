{
  if (!context.isWithinDateRange(page.getModifiedDate())) {
    return;
  }
  String path=getPagePath(context,page);
  if (context.isPathNotProcessed(path)) {
    Element pageElement=pagesElement.addElement("page");
    pageElement.addAttribute("path",path);
    page.setUserUuid(page.getUserUuid());
    context.addPermissions(WikiPage.class,page.getResourcePrimKey());
    if (context.getBooleanParameter(_NAMESPACE,"categories") && page.isHead()) {
      context.addAssetCategories(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"comments") && page.isHead()) {
      context.addComments(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"ratings") && page.isHead()) {
      context.addRatingsEntries(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"tags") && page.isHead()) {
      context.addAssetTags(WikiPage.class,page.getResourcePrimKey());
    }
    if (context.getBooleanParameter(_NAMESPACE,"attachments") && page.isHead()) {
      for (      String attachment : page.getAttachmentsFiles()) {
        int pos=attachment.lastIndexOf(CharPool.SLASH);
        String name=attachment.substring(pos + 1);
        String binPath=getPageAttachementBinPath(context,page,name);
        Element attachmentEl=pageElement.addElement("attachment");
        attachmentEl.addAttribute("name",name);
        attachmentEl.addAttribute("bin-path",binPath);
        byte[] bytes=DLLocalServiceUtil.getFile(context.getCompanyId(),CompanyConstants.SYSTEM,attachment);
        context.addZipEntry(binPath,bytes);
      }
      page.setAttachmentsDir(page.getAttachmentsDir());
    }
    context.addZipEntry(path,page);
  }
  exportNode(context,nodesElement,page.getNodeId());
}

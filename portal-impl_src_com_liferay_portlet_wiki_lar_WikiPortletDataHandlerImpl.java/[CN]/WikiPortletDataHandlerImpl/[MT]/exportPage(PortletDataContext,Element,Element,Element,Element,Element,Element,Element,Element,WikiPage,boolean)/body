{
  if (!portletDataContext.isWithinDateRange(page.getModifiedDate())) {
    return;
  }
  String path=getPagePath(portletDataContext,page);
  page=(WikiPage)page.clone();
  Element pageElement=(Element)pagesElement.selectSingleNode("//page[@path='".concat(path).concat("']"));
  if (portletDataContext.isPathNotProcessed(path)) {
    if (pageElement == null) {
      pageElement=pagesElement.addElement("page");
    }
    String content=DDMPortletDataHandlerImpl.exportReferencedContent(portletDataContext,dlFileEntryTypesElement,dlFoldersElement,dlFileEntriesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,pageElement,page.getContent());
    page.setContent(content);
    String imagePath=getPageImagePath(portletDataContext,page);
    pageElement.addAttribute("image-path",imagePath);
    if (portletDataContext.getBooleanParameter(_NAMESPACE,"attachments") && page.isHead()) {
      int i=0;
      for (      FileEntry fileEntry : page.getAttachmentsFileEntries()) {
        Element attachmentElement=pageElement.addElement("attachment");
        attachmentElement.addAttribute("name",fileEntry.getTitle());
        String binPath=getPageAttachementBinPath(portletDataContext,page,i++);
        attachmentElement.addAttribute("bin-path",binPath);
        portletDataContext.addZipEntry(binPath,fileEntry.getContentStream());
      }
      page.setAttachmentsFolderId(page.getAttachmentsFolderId());
    }
    portletDataContext.addClassedModel(pageElement,path,page,_NAMESPACE);
  }
  exportNode(portletDataContext,nodesElement,page.getNodeId());
}

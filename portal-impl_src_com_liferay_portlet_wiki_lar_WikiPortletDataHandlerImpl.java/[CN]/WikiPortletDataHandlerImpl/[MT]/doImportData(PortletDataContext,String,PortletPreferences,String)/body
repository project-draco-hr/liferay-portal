{
  portletDataContext.importPermissions("com.liferay.portlet.wiki",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  if (Validator.isNull(data)) {
    return null;
  }
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element nodesElement=rootElement.element("nodes");
  for (  Element nodeElement : nodesElement.elements("node")) {
    String path=nodeElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    WikiNode node=(WikiNode)portletDataContext.getZipEntryAsObject(path);
    importNode(portletDataContext,node);
  }
  Element pagesElement=rootElement.element("pages");
  Element dlFoldersElement=pagesElement.element("dl-folders");
  List<Element> dlFolderElements=dlFoldersElement.elements("folder");
  for (  Element dlFolderElement : dlFolderElements) {
    DLPortletDataHandlerImpl.importFolder(portletDataContext,dlFolderElement);
  }
  Element dlFileEntriesElement=pagesElement.element("dl-file-entries");
  List<Element> dlFileEntryElements=dlFileEntriesElement.elements("file-entry");
  for (  Element dlFileEntryElement : dlFileEntryElements) {
    DLPortletDataHandlerImpl.importFileEntry(portletDataContext,dlFileEntryElement);
  }
  Element dlFileRanksElement=pagesElement.element("dl-file-ranks");
  List<Element> dlFileRankElements=dlFileRanksElement.elements("file-rank");
  for (  Element dlFileRankElement : dlFileRankElements) {
    DLPortletDataHandlerImpl.importFileRank(portletDataContext,dlFileRankElement);
  }
  Element igFoldersElement=pagesElement.element("ig-folders");
  List<Element> igFolderElements=igFoldersElement.elements("folder");
  for (  Element igFolderElement : igFolderElements) {
    IGPortletDataHandlerImpl.importFolder(portletDataContext,igFolderElement);
  }
  Element igImagesElement=pagesElement.element("ig-images");
  List<Element> igImageElements=igImagesElement.elements("image");
  for (  Element igImageElement : igImageElements) {
    IGPortletDataHandlerImpl.importImage(portletDataContext,igImageElement);
  }
  for (  Element pageElement : pagesElement.elements("page")) {
    String path=pageElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    WikiPage page=(WikiPage)portletDataContext.getZipEntryAsObject(path);
    importPage(portletDataContext,pageElement,page);
  }
  Map<Long,Long> nodePKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(WikiNode.class);
  for (  long nodeId : nodePKs.values()) {
    WikiCacheUtil.clearCache(nodeId);
  }
  return null;
}

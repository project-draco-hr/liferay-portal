{
  long userId=context.getUserId(node.getUserUuid());
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddCommunityPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setCreateDate(node.getCreateDate());
  serviceContext.setModifiedDate(node.getModifiedDate());
  serviceContext.setScopeGroupId(context.getScopeGroupId());
  WikiNode importedNode=null;
  if (context.isDataStrategyMirror()) {
    WikiNode existingNode=WikiNodeUtil.fetchByUUID_G(node.getUuid(),context.getScopeGroupId());
    String nodeName=PropsUtil.get(PropsKeys.WIKI_INITIAL_NODE_NAME);
    if ((existingNode == null) && node.getName().equals(nodeName)) {
      try {
        WikiNodeUtil.removeByG_N(context.getScopeGroupId(),node.getName());
      }
 catch (      NoSuchNodeException nsne) {
      }
    }
    if (existingNode == null) {
      serviceContext.setUuid(node.getUuid());
      importedNode=WikiNodeLocalServiceUtil.addNode(userId,node.getName(),node.getDescription(),serviceContext);
    }
 else {
      importedNode=WikiNodeLocalServiceUtil.updateNode(existingNode.getNodeId(),node.getName(),node.getDescription(),serviceContext);
    }
  }
 else {
    String nodeName=PropsUtil.get(PropsKeys.WIKI_INITIAL_NODE_NAME);
    if (node.getName().equals(nodeName)) {
      try {
        WikiNodeUtil.removeByG_N(context.getScopeGroupId(),node.getName());
      }
 catch (      NoSuchNodeException nsne) {
      }
    }
    importedNode=WikiNodeLocalServiceUtil.addNode(userId,node.getName(),node.getDescription(),serviceContext);
  }
  Map<Long,Long> nodePKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(WikiNode.class);
  nodePKs.put(node.getNodeId(),importedNode.getNodeId());
  context.importPermissions(WikiNode.class,node.getNodeId(),importedNode.getNodeId());
}

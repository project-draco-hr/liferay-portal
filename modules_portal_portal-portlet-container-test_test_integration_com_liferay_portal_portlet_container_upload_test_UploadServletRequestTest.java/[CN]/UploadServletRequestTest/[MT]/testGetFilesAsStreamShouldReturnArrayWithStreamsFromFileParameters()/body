{
  Map<String,FileItem[]> fileParameters=new HashMap<>();
  for (int i=0; i < 10; i++) {
    PortletContainerTestUtil.putFileParameter(getClass(),_TXT_DEPENDENCY,fileParameters);
  }
  LiferayServletRequest liferayServletRequest=PortletContainerTestUtil.mockLiferayServletRequest(getClass(),_TXT_DEPENDENCY);
  UploadServletRequestImpl uploadServletRequest=new UploadServletRequestImpl((HttpServletRequest)liferayServletRequest.getRequest(),fileParameters,new HashMap<String,List<String>>());
  Map<String,FileItem[]> map=uploadServletRequest.getMultipartParameterMap();
  Assert.assertEquals(10,map.size());
  for (  Map.Entry<String,FileItem[]> entry : map.entrySet()) {
    String key=entry.getKey();
    InputStream[] inputStreams=uploadServletRequest.getFilesAsStream(key);
    FileItem[] fileItems=entry.getValue();
    Assert.assertEquals(fileItems.length,inputStreams.length);
    Assert.assertEquals(2,inputStreams.length);
    for (int i=0; i < inputStreams.length; i++) {
      Assert.assertTrue(IOUtils.contentEquals(fileItems[i].getInputStream(),inputStreams[i]));
    }
  }
}

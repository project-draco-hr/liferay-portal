{
  List<K> emittedKeys=keyedServiceReferenceServiceTuple.getEmittedKeys();
  for (  K emittedKey : emittedKeys) {
    ServiceTrackerBucket<SR,TS,R> serviceTrackerBucket=_serviceTrackerBuckets.get(emittedKey);
    if (serviceTrackerBucket == null) {
      continue;
    }
    serviceTrackerBucket.remove(keyedServiceReferenceServiceTuple);
    if (serviceTrackerBucket.isDisposable()) {
      _serviceTrackerBuckets.remove(emittedKey);
    }
    if (_serviceTrackerMapListener != null) {
      try {
        _serviceTrackerMapListener.keyRemoved(ServiceTrackerMapImpl.this,emittedKey,keyedServiceReferenceServiceTuple.getService(),serviceTrackerBucket.getContent());
      }
 catch (      Throwable t) {
        _logger.log(Logger.LOG_ERROR,"Invocation to listener threw exception",t);
      }
    }
  }
  emittedKeys.clear();
}

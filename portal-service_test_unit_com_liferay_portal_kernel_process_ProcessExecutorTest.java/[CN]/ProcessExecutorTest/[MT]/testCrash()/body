{
  JDKLoggerTestUtil.configureJDKLogger(ProcessExecutor.class.getName(),Level.OFF);
  KillJVMProcessCallable killJVMProcessCallable=new KillJVMProcessCallable(-1);
  Future<Serializable> future=ProcessExecutor.execute(_classPath,killJVMProcessCallable);
  try {
    future.get();
    fail();
  }
 catch (  ExecutionException ee) {
    assertFalse(future.isCancelled());
    assertTrue(future.isDone());
    Throwable throwable=ee.getCause();
    assertTrue(throwable instanceof ProcessException);
  }
  killJVMProcessCallable=new KillJVMProcessCallable(0);
  future=ProcessExecutor.execute(_classPath,killJVMProcessCallable);
  try {
    future.get();
    fail();
  }
 catch (  ExecutionException ee) {
    assertFalse(future.isCancelled());
    assertTrue(future.isDone());
    Throwable throwable=ee.getCause();
    assertTrue(throwable instanceof ProcessException);
    throwable=throwable.getCause();
    assertTrue(throwable instanceof EOFException);
  }
}

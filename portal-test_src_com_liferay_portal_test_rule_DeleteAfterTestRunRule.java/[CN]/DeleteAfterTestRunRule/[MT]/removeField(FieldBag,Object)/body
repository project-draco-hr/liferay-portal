{
  try {
    Class<?> fieldClass=fieldBag.getFieldClass();
    PersistedModelLocalService persistedModelLocalService=PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(fieldClass.getName());
    List<Field> fields=fieldBag.getFields();
    ListIterator<Field> listIterator=fields.listIterator(fields.size());
    while (listIterator.hasPrevious()) {
      Field field=listIterator.previous();
      Object object=field.get(instance);
      if (object == null) {
        continue;
      }
      Class<?> objectClass=object.getClass();
      if (objectClass.isArray()) {
        for (        PersistedModel persistedModel : (PersistedModel[])object) {
          if (persistedModel == null) {
            continue;
          }
          persistedModelLocalService.deletePersistedModel(persistedModel);
        }
      }
 else       if (Collection.class.isAssignableFrom(objectClass)) {
        Collection<? extends PersistedModel> collection=(Collection<? extends PersistedModel>)object;
        for (        PersistedModel persistedModel : collection) {
          persistedModelLocalService.deletePersistedModel(persistedModel);
        }
      }
 else {
        persistedModelLocalService.deletePersistedModel((PersistedModel)object);
      }
      field.set(instance,null);
    }
  }
 catch (  Exception e) {
    _log.error("Unable to delete",e);
  }
}

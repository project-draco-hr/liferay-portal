{
  try {
    _executorIntraband.registerChannel(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Channel is null",npe.getMessage());
  }
  try {
    _executorIntraband.registerChannel(IntrabandTestUtil.<Channel>createProxy(Channel.class));
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
    Assert.assertEquals("Channel is not of type GatheringByteChannel",iae.getMessage());
  }
  try {
    _executorIntraband.registerChannel(IntrabandTestUtil.<Channel>createProxy(GatheringByteChannel.class));
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
    Assert.assertEquals("Channel is not of type ScatteringByteChannel",iae.getMessage());
  }
  SocketChannel[] peerSocketChannels=IntrabandTestUtil.createSocketChannelPeers();
  SocketChannel socketChannel=peerSocketChannels[0];
  socketChannel.configureBlocking(false);
  try {
    _executorIntraband.registerChannel(socketChannel);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
    Assert.assertEquals("Channel is of type SelectableChannel and configured in " + "nonblocking mode",iae.getMessage());
  }
}

{
  if (USE_LAYOUT_CACHE_FILTER) {
    _log.debug("Layout cache is enabled");
  }
 else {
    _log.debug("Layout cache is disabled");
  }
  HttpServletRequest request=(HttpServletRequest)req;
  HttpServletResponse response=(HttpServletResponse)res;
  if (USE_LAYOUT_CACHE_FILTER && !_isPortletRequest(request) && _isLayout(request)&& !_isSignedIn(request)&& !_isInclude(request)&& !_isAlreadyFiltered(request)) {
    request.setAttribute(_ALREADY_FILTERED,Boolean.TRUE);
    String key=getCacheKey(request);
    LayoutCacheResponseData data=LayoutCacheUtil.getLayoutCacheResponseData(_companyId,key);
    if (data == null) {
      if (!_isCacheable(request)) {
        _log.debug("Layout is not cacheable " + key);
        chain.doFilter(req,res);
        return;
      }
      _log.info("Caching layout " + key);
      LayoutCacheResponse layoutCacheResponse=new LayoutCacheResponse(response);
      chain.doFilter(req,layoutCacheResponse);
      data=new LayoutCacheResponseData(layoutCacheResponse.getData(),layoutCacheResponse.getContentType(),layoutCacheResponse.getHeaders());
      if (data.getData().length > 0) {
        LayoutCacheUtil.putLayoutCacheResponseData(_companyId,key,data);
      }
    }
    Map headers=data.getHeaders();
    Iterator itr=headers.keySet().iterator();
    while (itr.hasNext()) {
      String headerKey=(String)itr.next();
      List headerValues=(List)headers.get(headerKey);
      for (int i=0; i < headerValues.size(); i++) {
        Header header=(Header)headerValues.get(i);
        int type=header.getType();
        if (type == Header.DATE_TYPE) {
          response.addDateHeader(headerKey,header.getDateValue());
        }
 else         if (type == Header.INTEGER_TYPE) {
          response.addIntHeader(headerKey,header.getIntValue());
        }
 else         if (type == Header.STRING_TYPE) {
          response.addHeader(headerKey,header.getStringValue());
        }
      }
    }
    byte[] byteArray=data.getData();
    response.setContentLength(byteArray.length);
    response.setContentType(data.getContentType());
    ServletOutputStream out=response.getOutputStream();
    out.write(byteArray,0,byteArray.length);
    out.flush();
    out.close();
  }
 else {
    _log.debug("Did not request a layout");
    chain.doFilter(req,res);
  }
}

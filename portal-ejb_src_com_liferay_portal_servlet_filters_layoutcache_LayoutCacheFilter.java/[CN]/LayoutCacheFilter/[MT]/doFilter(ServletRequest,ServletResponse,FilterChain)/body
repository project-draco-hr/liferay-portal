{
  if (_log.isDebugEnabled()) {
    if (USE_LAYOUT_CACHE_FILTER) {
      _log.debug("Layout cache is enabled");
    }
 else {
      _log.debug("Layout cache is disabled");
    }
  }
  HttpServletRequest httpReq=(HttpServletRequest)req;
  HttpServletResponse httpRes=(HttpServletResponse)res;
  httpReq.setCharacterEncoding(ENCODING);
  if (USE_LAYOUT_CACHE_FILTER && !isPortletRequest(httpReq) && isLayout(httpReq)&& !isSignedIn(httpReq)&& !isInclude(httpReq)&& !isAlreadyFiltered(httpReq)) {
    httpReq.setAttribute(_ALREADY_FILTERED,Boolean.TRUE);
    String key=getCacheKey(httpReq);
    CacheResponseData data=LayoutCacheUtil.getCacheResponseData(_companyId,key);
    if (data == null) {
      if (!isCacheable(httpReq)) {
        if (_log.isDebugEnabled()) {
          _log.debug("Layout is not cacheable " + key);
        }
        chain.doFilter(req,res);
        return;
      }
      if (_log.isInfoEnabled()) {
        _log.info("Caching layout " + key);
      }
      CacheResponse cacheResponse=new CacheResponse(httpRes,ENCODING);
      chain.doFilter(req,cacheResponse);
      data=new CacheResponseData(cacheResponse.getData(),cacheResponse.getContentType(),cacheResponse.getHeaders());
      if (data.getData().length > 0) {
        LayoutCacheUtil.putCacheResponseData(_companyId,key,data);
      }
    }
    CacheResponseUtil.write(httpRes,data);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Did not request a layout");
    }
    chain.doFilter(req,res);
  }
}

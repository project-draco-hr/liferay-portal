{
  if (USE_LAYOUT_CACHE_FILTER) {
    _log.debug("Layout Cache is enabled");
  }
 else {
    _log.debug("Layout Cache is disabled");
  }
  HttpServletRequest request=(HttpServletRequest)req;
  HttpServletResponse response=(HttpServletResponse)res;
  String companyId=PortalUtil.getCompanyId(request);
  String plid=_getPlid(request.getPathInfo(),request.getServletPath(),ParamUtil.getString(request,"p_l_id"));
  String portletId=ParamUtil.getString(request,"p_p_id");
  String languageId=LanguageUtil.getLanguageId(request);
  if (Validator.isNull(portletId) && Validator.isNotNull(plid)) {
    if (USE_LAYOUT_CACHE_FILTER && !_isAlreadyFiltered(request) && !_isSignedIn(request)&& !_isInclude(request)&& _isCacheable(companyId,plid)) {
      request.setAttribute(_ALREADY_FILTERED,Boolean.TRUE);
      String key=getCacheKey(plid,request);
      LayoutCacheResponseData data=LayoutCacheUtil.getLayoutCacheResponseData(companyId,key);
      if (data == null) {
        _log.info("Caching layout " + plid);
        LayoutCacheResponse layoutCacheResponse=new LayoutCacheResponse(response);
        chain.doFilter(req,layoutCacheResponse);
        data=new LayoutCacheResponseData(layoutCacheResponse.getData(),layoutCacheResponse.getContentType());
        LayoutCacheUtil.putLayoutCacheResponseData(companyId,key,data);
      }
      byte[] byteArray=data.getData();
      res.setContentLength(byteArray.length);
      res.setContentType(data.getContentType());
      ServletOutputStream out=response.getOutputStream();
      out.write(byteArray,0,byteArray.length);
      out.flush();
      out.close();
    }
 else {
      _log.debug("Not checking cached layout " + plid);
      chain.doFilter(req,res);
    }
  }
 else {
    _log.debug("Did not request a layout");
    chain.doFilter(req,res);
  }
}

{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    StringBundler sb=null;
    DB db=DBManagerUtil.getDB();
    if (db.getDBType() == DBType.MYSQL) {
      sb=new StringBundler(7);
      sb.append("update Group_ inner join User_ on Group_.companyId = ");
      sb.append("User_.companyId and Group_.classPK = User_.userId ");
      sb.append("set active_ = [$FALSE$] ");
      sb.append("where Group_.classNameId = ");
      sb.append(PortalUtil.getClassNameId(User.class));
      sb.append(" and User_.status = ");
      sb.append(WorkflowConstants.STATUS_INACTIVE);
    }
 else {
      sb=new StringBundler(9);
      sb.append("update Group_ set active_ = [$FALSE$] where groupId in");
      sb.append(" (select Group_.groupId from Group_ inner join User_ ");
      sb.append("on Group_.companyId = User_.companyId and ");
      sb.append("Group_.classPK = User_.userId ");
      sb.append("where Group_.classNameId = ");
      sb.append(PortalUtil.getClassNameId(User.class));
      sb.append(" and User_.status = ");
      sb.append(WorkflowConstants.STATUS_INACTIVE);
      sb.append(")");
    }
    runSQL(sb.toString());
    EntityCacheUtil.clearCache(UserImpl.class);
    FinderCacheUtil.clearCache(UserImpl.class.getName());
  }
 }

{
  Bundle frameworkBundle=(Bundle)ModuleFrameworkUtilAdapter.getFramework();
  BundleContext frameworkBundleContext=frameworkBundle.getBundleContext();
  Bundle[] frameworkBundles=frameworkBundleContext.getBundles();
  Map<Bundle,Map<String,ExportPackage>> bundlesMap=new HashMap<>();
  Map<String,SplitPackages> allowedSplitPackagesMap=_getAllowedSplitPackagesMap();
  for (  Bundle bundle : frameworkBundles) {
    Map<String,ExportPackage> bundleExportPackages=_getBundleExportPackages(bundle);
    if (bundleExportPackages == null) {
      continue;
    }
    for (    Map.Entry<Bundle,Map<String,ExportPackage>> entry : bundlesMap.entrySet()) {
      Map<String,ExportPackage> mapBundlePackages=new HashMap<>(entry.getValue());
      Set<String> keySet=mapBundlePackages.keySet();
      keySet.retainAll(bundleExportPackages.keySet());
      if (!mapBundlePackages.isEmpty()) {
        _processDuplicatedPackages(entry.getKey(),mapBundlePackages.values(),bundleExportPackages,allowedSplitPackagesMap,bundle.getSymbolicName());
      }
    }
    bundlesMap.put(bundle,bundleExportPackages);
  }
}

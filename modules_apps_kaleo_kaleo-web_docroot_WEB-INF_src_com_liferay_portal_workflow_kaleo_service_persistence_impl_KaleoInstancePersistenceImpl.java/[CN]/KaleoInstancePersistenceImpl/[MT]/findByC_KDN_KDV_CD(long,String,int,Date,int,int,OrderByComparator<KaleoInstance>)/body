{
  boolean pagination=true;
  FinderPath finderPath=null;
  Object[] finderArgs=null;
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) {
    pagination=false;
    finderPath=FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDN_KDV_CD;
    finderArgs=new Object[]{companyId,kaleoDefinitionName,kaleoDefinitionVersion,completionDate};
  }
 else {
    finderPath=FINDER_PATH_WITH_PAGINATION_FIND_BY_C_KDN_KDV_CD;
    finderArgs=new Object[]{companyId,kaleoDefinitionName,kaleoDefinitionVersion,completionDate,start,end,orderByComparator};
  }
  List<KaleoInstance> list=(List<KaleoInstance>)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if ((list != null) && !list.isEmpty()) {
    for (    KaleoInstance kaleoInstance : list) {
      if ((companyId != kaleoInstance.getCompanyId()) || !Validator.equals(kaleoDefinitionName,kaleoInstance.getKaleoDefinitionName()) || (kaleoDefinitionVersion != kaleoInstance.getKaleoDefinitionVersion())|| !Validator.equals(completionDate,kaleoInstance.getCompletionDate())) {
        list=null;
        break;
      }
    }
  }
  if (list == null) {
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(6 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(6);
    }
    query.append(_SQL_SELECT_KALEOINSTANCE_WHERE);
    query.append(_FINDER_COLUMN_C_KDN_KDV_CD_COMPANYID_2);
    boolean bindKaleoDefinitionName=false;
    if (kaleoDefinitionName == null) {
      query.append(_FINDER_COLUMN_C_KDN_KDV_CD_KALEODEFINITIONNAME_1);
    }
 else     if (kaleoDefinitionName.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_C_KDN_KDV_CD_KALEODEFINITIONNAME_3);
    }
 else {
      bindKaleoDefinitionName=true;
      query.append(_FINDER_COLUMN_C_KDN_KDV_CD_KALEODEFINITIONNAME_2);
    }
    query.append(_FINDER_COLUMN_C_KDN_KDV_CD_KALEODEFINITIONVERSION_2);
    boolean bindCompletionDate=false;
    if (completionDate == null) {
      query.append(_FINDER_COLUMN_C_KDN_KDV_CD_COMPLETIONDATE_1);
    }
 else {
      bindCompletionDate=true;
      query.append(_FINDER_COLUMN_C_KDN_KDV_CD_COMPLETIONDATE_2);
    }
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else     if (pagination) {
      query.append(KaleoInstanceModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      if (bindKaleoDefinitionName) {
        qPos.add(kaleoDefinitionName);
      }
      qPos.add(kaleoDefinitionVersion);
      if (bindCompletionDate) {
        qPos.add(new Timestamp(completionDate.getTime()));
      }
      if (!pagination) {
        list=(List<KaleoInstance>)QueryUtil.list(q,getDialect(),start,end,false);
        Collections.sort(list);
        list=Collections.unmodifiableList(list);
      }
 else {
        list=(List<KaleoInstance>)QueryUtil.list(q,getDialect(),start,end);
      }
      cacheResult(list);
      FinderCacheUtil.putResult(finderPath,finderArgs,list);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return list;
}

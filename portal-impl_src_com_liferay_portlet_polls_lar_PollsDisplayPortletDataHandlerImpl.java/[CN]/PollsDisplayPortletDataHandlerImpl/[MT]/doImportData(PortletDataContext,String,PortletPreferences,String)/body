{
  context.importPermissions("com.liferay.portlet.polls",context.getSourceGroupId(),context.getScopeGroupId());
  if (Validator.isNull(data)) {
    return null;
  }
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element questionsElement=rootElement.element("questions");
  for (  Element questionEl : questionsElement.elements("question")) {
    String path=questionEl.attributeValue("path");
    if (!context.isPathNotProcessed(path)) {
      continue;
    }
    PollsQuestion question=(PollsQuestion)context.getZipEntryAsObject(path);
    PollsPortletDataHandlerImpl.importQuestion(context,question);
  }
  Element choicesElement=rootElement.element("choices");
  for (  Element choiceElement : choicesElement.elements("choice")) {
    String path=choiceElement.attributeValue("path");
    if (!context.isPathNotProcessed(path)) {
      continue;
    }
    PollsChoice choice=(PollsChoice)context.getZipEntryAsObject(path);
    PollsPortletDataHandlerImpl.importChoice(context,choice);
  }
  if (context.getBooleanParameter(_NAMESPACE,"votes")) {
    Element votesElement=rootElement.element("votes");
    for (    Element voteElement : votesElement.elements("vote")) {
      String path=voteElement.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      PollsVote vote=(PollsVote)context.getZipEntryAsObject(path);
      PollsPortletDataHandlerImpl.importVote(context,vote);
    }
  }
  long questionId=GetterUtil.getLong(preferences.getValue("question-id",StringPool.BLANK));
  if (questionId > 0) {
    Map<Long,Long> questionPKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(PollsQuestion.class);
    questionId=MapUtil.getLong(questionPKs,questionId,questionId);
    preferences.setValue("question-id",String.valueOf(questionId));
  }
  return preferences;
}

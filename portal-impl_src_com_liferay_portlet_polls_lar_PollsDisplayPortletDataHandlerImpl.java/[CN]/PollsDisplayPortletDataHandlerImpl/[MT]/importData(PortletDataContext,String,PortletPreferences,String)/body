{
  try {
    context.importPermissions("com.liferay.portlet.polls",context.getSourceGroupId(),context.getGroupId());
    if (Validator.isNull(data)) {
      return null;
    }
    Document doc=SAXReaderUtil.read(data);
    Element root=doc.getRootElement();
    List<Element> questionEls=root.element("questions").elements("question");
    Map<Long,Long> questionPKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(PollsQuestion.class);
    for (    Element questionEl : questionEls) {
      String path=questionEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      PollsQuestion question=(PollsQuestion)context.getZipEntryAsObject(path);
      PollsPortletDataHandlerImpl.importQuestion(context,questionPKs,question);
    }
    List<Element> choiceEls=root.element("choices").elements("choice");
    Map<Long,Long> choicePKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(PollsChoice.class);
    for (    Element choiceEl : choiceEls) {
      String path=choiceEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      PollsChoice choice=(PollsChoice)context.getZipEntryAsObject(path);
      PollsPortletDataHandlerImpl.importChoice(context,questionPKs,choicePKs,choice);
    }
    if (context.getBooleanParameter(_NAMESPACE,"votes")) {
      List<Element> voteEls=root.element("votes").elements("vote");
      for (      Element voteEl : voteEls) {
        String path=voteEl.attributeValue("path");
        if (!context.isPathNotProcessed(path)) {
          continue;
        }
        PollsVote vote=(PollsVote)context.getZipEntryAsObject(path);
        PollsPortletDataHandlerImpl.importVote(context,questionPKs,choicePKs,vote);
      }
    }
    long questionId=GetterUtil.getLong(preferences.getValue("question-id",StringPool.BLANK));
    if (questionId > 0) {
      questionId=MapUtil.getLong(questionPKs,questionId,questionId);
      preferences.setValue("question-id",String.valueOf(questionId));
    }
    return preferences;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

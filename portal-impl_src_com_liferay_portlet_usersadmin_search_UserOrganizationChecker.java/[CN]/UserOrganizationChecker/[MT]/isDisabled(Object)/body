{
  if (!PropsValues.ORGANIZATIONS_ASSIGNMENT_STRICT) {
    return false;
  }
  User user=(User)obj;
  Set<Organization> mandatoryOrganizations=MembershipPolicyUtil.getMandatoryOrganizations(user);
  if ((isChecked(user) && mandatoryOrganizations.contains(_organization)) || (!isChecked(user) && !MembershipPolicyUtil.isMembershipAllowed(_organization,user))) {
    return true;
  }
  try {
    PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
    return !UserPermissionUtil.contains(permissionChecker,user.getUserId(),ActionKeys.UPDATE);
  }
 catch (  Exception e) {
    _log.error(e,e);
    return false;
  }
}

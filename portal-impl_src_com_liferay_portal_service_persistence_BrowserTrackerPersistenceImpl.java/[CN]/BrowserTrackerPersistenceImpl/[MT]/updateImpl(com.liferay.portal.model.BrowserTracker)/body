{
  browserTracker=toUnwrappedModel(browserTracker);
  boolean isNew=browserTracker.isNew();
  BrowserTrackerModelImpl browserTrackerModelImpl=(BrowserTrackerModelImpl)browserTracker;
  Session session=null;
  try {
    session=openSession();
    if (browserTracker.isNew()) {
      session.save(browserTracker);
      browserTracker.setNew(false);
    }
 else {
      session.merge(browserTracker);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !BrowserTrackerModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
  EntityCacheUtil.putResult(BrowserTrackerModelImpl.ENTITY_CACHE_ENABLED,BrowserTrackerImpl.class,browserTracker.getPrimaryKey(),browserTracker);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_USERID,new Object[]{Long.valueOf(browserTracker.getUserId())},browserTracker);
  }
 else {
    if ((browserTrackerModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(browserTrackerModelImpl.getOriginalUserId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_USERID,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_USERID,new Object[]{Long.valueOf(browserTracker.getUserId())},browserTracker);
    }
  }
  return browserTracker;
}

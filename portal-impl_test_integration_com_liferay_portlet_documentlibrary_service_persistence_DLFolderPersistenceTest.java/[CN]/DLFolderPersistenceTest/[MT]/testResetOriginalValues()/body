{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  DLFolder newDLFolder=addDLFolder();
  _persistence.clearCache();
  DLFolder existingDLFolder=_persistence.findByPrimaryKey(newDLFolder.getPrimaryKey());
  Assert.assertTrue(Validator.equals(existingDLFolder.getUuid(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(existingDLFolder.getGroupId(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFolder.getRepositoryId(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalRepositoryId",new Class<?>[0]));
  Assert.assertEquals(existingDLFolder.getMountPoint(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalMountPoint",new Class<?>[0]));
  Assert.assertEquals(existingDLFolder.getGroupId(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFolder.getParentFolderId(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalParentFolderId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingDLFolder.getName(),ReflectionTestUtil.invoke(existingDLFolder,"getOriginalName",new Class<?>[0])));
}

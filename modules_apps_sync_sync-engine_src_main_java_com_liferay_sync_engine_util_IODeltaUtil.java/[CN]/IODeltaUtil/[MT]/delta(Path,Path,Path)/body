{
  if (Files.notExists(targetFilePath) || Files.notExists(checksumsFilePath) || Files.notExists(deltaFilePath)) {
    return null;
  }
  InputStream targetInputStream=null;
  ReadableByteChannel targetReadableByteChannel=null;
  InputStream checksumsInputStream=null;
  ReadableByteChannel checksumsReadableByteChannel=null;
  OutputStream deltaOutputStream=null;
  WritableByteChannel deltaWritableByteChannel=null;
  try {
    targetInputStream=Files.newInputStream(targetFilePath);
    targetReadableByteChannel=Channels.newChannel(targetInputStream);
    checksumsInputStream=Files.newInputStream(checksumsFilePath);
    checksumsReadableByteChannel=Channels.newChannel(checksumsInputStream);
    ByteChannelReader checksumsByteChannelReader=new ByteChannelReader(checksumsReadableByteChannel);
    deltaOutputStream=Files.newOutputStream(deltaFilePath);
    deltaWritableByteChannel=Channels.newChannel(deltaOutputStream);
    ByteChannelWriter deltaByteChannelWriter=new ByteChannelWriter(deltaWritableByteChannel);
    DeltaUtil.delta(targetReadableByteChannel,checksumsByteChannelReader,deltaByteChannelWriter);
    deltaByteChannelWriter.finish();
    return deltaFilePath;
  }
 catch (  IOException ioe) {
    _logger.error(ioe.getMessage(),ioe);
    return null;
  }
 finally {
    StreamUtil.cleanUp(targetInputStream);
    StreamUtil.cleanUp(targetReadableByteChannel);
    StreamUtil.cleanUp(checksumsInputStream);
    StreamUtil.cleanUp(checksumsReadableByteChannel);
    StreamUtil.cleanUp(deltaOutputStream);
    StreamUtil.cleanUp(deltaWritableByteChannel);
  }
}

{
  Registry registry=RegistryUtil.getRegistry();
  InterfaceOne a=getInstance();
  InterfaceOne b=getInstance();
  AtomicReference<TrackedOne> referenceA=new AtomicReference<TrackedOne>();
  AtomicReference<TrackedOne> referenceB=new AtomicReference<TrackedOne>();
  Filter filter=registry.getFilter("(a.property=G)");
  ServiceTrackerCustomizer<InterfaceOne,TrackedOne> customizer=new TestCustomizer(a,b,referenceA,referenceB);
  ServiceTracker<InterfaceOne,TrackedOne> serviceTracker=registry.trackServices(filter,customizer);
  serviceTracker.open();
  Assert.assertTrue(serviceTracker.isEmpty());
  Assert.assertEquals(0,serviceTracker.size());
  Map<String,Object> map=new HashMap<String,Object>();
  map.put("a.property","G");
  ServiceRegistration<InterfaceOne> serviceRegistrationA=registry.registerService(InterfaceOne.class,a);
  ServiceRegistration<InterfaceOne> serviceRegistrationB=registry.registerService(InterfaceOne.class,b,map);
  Assert.assertNotNull(serviceRegistrationA);
  Assert.assertNotNull(serviceRegistrationB);
  Assert.assertFalse(serviceTracker.isEmpty());
  Assert.assertEquals(referenceB.get(),serviceTracker.getService());
  Assert.assertEquals(referenceB.get(),serviceTracker.getService(serviceRegistrationB.getServiceReference()));
  Assert.assertEquals(1,serviceTracker.getServiceReferences().length);
  Assert.assertEquals(1,serviceTracker.getServices().length);
  SortedMap<ServiceReference<InterfaceOne>,TrackedOne> trackedServiceReferences=serviceTracker.getTrackedServiceReferences();
  Assert.assertNotNull(trackedServiceReferences);
  Assert.assertEquals(1,trackedServiceReferences.size());
  Assert.assertEquals(referenceB.get(),trackedServiceReferences.get(trackedServiceReferences.firstKey()));
  Assert.assertEquals(referenceB.get(),trackedServiceReferences.get(trackedServiceReferences.lastKey()));
  serviceRegistrationA.unregister();
  Assert.assertEquals(1,serviceTracker.size());
  serviceRegistrationB.unregister();
  Assert.assertEquals(0,serviceTracker.size());
  trackedServiceReferences=serviceTracker.getTrackedServiceReferences();
  Assert.assertNotNull(trackedServiceReferences);
  Assert.assertEquals(0,trackedServiceReferences.size());
  serviceTracker.close();
}

{
  DLFileEntry dlFileEntry=new DLFileEntryImpl();
  boolean escapedModel=false;
  LiferayFileVersion liferayFileVersion=null;
  while (xStreamHierarchicalStreamReader.hasMoreChildren()) {
    xStreamHierarchicalStreamReader.moveDown();
    String nodeName=xStreamHierarchicalStreamReader.getNodeName();
    Class<?> clazz=BeanPropertiesUtil.getObjectType(dlFileEntry,nodeName);
    if (nodeName.equals(FieldConstants.FILE_VERSION)) {
      clazz=FileVersionProxyBean.class;
    }
    Object convertedValue=xStreamUnmarshallingContext.convertAnother(xStreamHierarchicalStreamReader.getValue(),clazz);
    if (fields.contains(nodeName)) {
      if (nodeName.equals(FieldConstants.ESCAPED_MODEL)) {
        escapedModel=(Boolean)convertedValue;
      }
 else       if (nodeName.equals(FieldConstants.FILE_VERSION)) {
        liferayFileVersion=(LiferayFileVersion)convertedValue;
      }
 else {
        BeanPropertiesUtil.setProperty(dlFileEntry,nodeName,convertedValue);
      }
    }
    xStreamHierarchicalStreamReader.moveUp();
  }
  LiferayFileEntry liferayFileEntry=new LiferayFileEntry(dlFileEntry,escapedModel);
  liferayFileEntry.setCachedFileVersion(liferayFileVersion);
  return liferayFileEntry;
}

{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    StringMaker sm=new StringMaker();
    sm.append("(");
    sm.append(CustomSQLUtil.get(COUNT_BY_C_PO_N_L_S_C_Z_R_C));
    String sql=sm.toString();
    if (regionId == null) {
      sql=StringUtil.replace(sql,_REGION_ID_SQL,StringPool.BLANK);
    }
    if (countryId == null) {
      sql=StringUtil.replace(sql,_COUNTRY_ID_SQL,StringPool.BLANK);
    }
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin("groupsPermissions"));
    sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere("groupsPermissions"));
    sm=new StringMaker();
    sm.append(sql);
    sm.append(") UNION (");
    sm.append(CustomSQLUtil.get(COUNT_BY_C_PO_N_L_S_C_Z_R_C));
    sql=sm.toString();
    if (regionId == null) {
      sql=StringUtil.replace(sql,_REGION_ID_SQL,StringPool.BLANK);
    }
    if (countryId == null) {
      sql=StringUtil.replace(sql,_COUNTRY_ID_SQL,StringPool.BLANK);
    }
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin("orgGroupPermission"));
    sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere("orgGroupPermission"));
    sql=StringUtil.replace(sql,"[$PARENT_ORGANIZATION_ID_COMPARATOR$]",parentOrganizationComparator);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sm=new StringMaker();
    sm.append(sql);
    sm.append(")");
    sql=sm.toString();
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Organization_.name)",StringPool.LIKE,false,names);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Address.street1)",StringPool.LIKE,true,streets);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Address.street2)",StringPool.LIKE,true,streets);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Address.street3)",StringPool.LIKE,true,streets);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Address.city)",StringPool.LIKE,false,cities);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(Address.zip)",StringPool.LIKE,true,zips);
    if (regionId == null) {
      sql=StringUtil.replace(sql,_REGION_ID_SQL,StringPool.BLANK);
    }
    if (countryId == null) {
      sql=StringUtil.replace(sql,_COUNTRY_ID_SQL,StringPool.BLANK);
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(HibernateUtil.getCountColumnName(),Hibernate.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    for (int i=0; i < 2; i++) {
      qPos.add(resourceId);
      if (i == 1) {
        qPos.add(groupId);
      }
      qPos.add(companyId);
      qPos.add(parentOrganizationId);
      qPos.add(location);
      qPos.add(names,2);
      qPos.add(streets,6);
      if (regionId != null) {
        qPos.add(regionId);
        qPos.add(regionId);
      }
      if (countryId != null) {
        qPos.add(countryId);
        qPos.add(countryId);
      }
      qPos.add(cities,2);
      qPos.add(zips,2);
    }
    int count=0;
    Iterator itr=q.list().iterator();
    while (itr.hasNext()) {
      Long l=(Long)itr.next();
      if (l != null) {
        count+=l.intValue();
      }
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

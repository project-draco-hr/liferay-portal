{
  try {
    PBKDF2EncryptionConfiguration pbkdf2EncryptionConfiguration=new PBKDF2EncryptionConfiguration();
    pbkdf2EncryptionConfiguration.configure(algorithm,encryptedPassword);
    byte[] saltBytes=pbkdf2EncryptionConfiguration.getSaltBytes();
    PBEKeySpec pbeKeySpec=new PBEKeySpec(plainTextPassword.toCharArray(),saltBytes,pbkdf2EncryptionConfiguration.getRounds(),pbkdf2EncryptionConfiguration.getKeySize());
    String algorithmName=algorithm;
    int index=algorithm.indexOf(CharPool.SLASH);
    if (index > -1) {
      algorithmName=algorithm.substring(0,index);
    }
    SecretKeyFactory secretKeyFactory=SecretKeyFactory.getInstance(algorithmName);
    SecretKey secretKey=secretKeyFactory.generateSecret(pbeKeySpec);
    byte[] secretKeyBytes=secretKey.getEncoded();
    ByteBuffer byteBuffer=ByteBuffer.allocate(2 * 4 + saltBytes.length + secretKeyBytes.length);
    byteBuffer.putInt(pbkdf2EncryptionConfiguration.getKeySize());
    byteBuffer.putInt(pbkdf2EncryptionConfiguration.getRounds());
    byteBuffer.put(saltBytes);
    byteBuffer.put(secretKeyBytes);
    return Base64.encode(byteBuffer.array());
  }
 catch (  Exception e) {
    throw new PwdEncryptorException(e.getMessage(),e);
  }
}

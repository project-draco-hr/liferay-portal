{
  try {
    PBKDF2EncryptionConfiguration pbkdf2EncryptionConfiguration=new PBKDF2EncryptionConfiguration();
    pbkdf2EncryptionConfiguration.configure(algorithm,currentEncryptedPassword);
    byte[] saltBytes=pbkdf2EncryptionConfiguration.getSaltBytes();
    PBEKeySpec keySpec=new PBEKeySpec(clearTextPassword.toCharArray(),saltBytes,pbkdf2EncryptionConfiguration.getRounds(),pbkdf2EncryptionConfiguration.getKeySize());
    String algorithmName=algorithm;
    int slashIndex=algorithm.indexOf(CharPool.SLASH);
    if (slashIndex > -1) {
      algorithmName=algorithm.substring(0,slashIndex);
    }
    SecretKeyFactory keyFactory=SecretKeyFactory.getInstance(algorithmName);
    byte[] key=keyFactory.generateSecret(keySpec).getEncoded();
    ByteBuffer result=ByteBuffer.allocate(2 * 4 + saltBytes.length + key.length);
    result.putInt(pbkdf2EncryptionConfiguration.getKeySize());
    result.putInt(pbkdf2EncryptionConfiguration.getRounds());
    result.put(saltBytes);
    result.put(key);
    return Base64.encode(result.array());
  }
 catch (  Exception e) {
    throw new PwdEncryptorException("Unable to generate hash: " + e.getMessage(),e);
  }
}

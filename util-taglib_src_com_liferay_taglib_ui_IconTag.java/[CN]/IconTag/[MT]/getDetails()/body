{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  String details=null;
  if (_alt != null) {
    details=" alt=\"" + LanguageUtil.get(pageContext,_alt) + "\"";
  }
 else   if (_label) {
    details=" alt=\"\"";
  }
 else {
    StringBundler sb=new StringBundler(6);
    sb.append(" alt=\"");
    sb.append(LanguageUtil.get(pageContext,_message));
    sb.append("\"");
    if (_toolTip) {
      sb.append(" onmouseover=\"Liferay.Portal.ToolTip.show(this, '");
      sb.append(UnicodeLanguageUtil.get(pageContext,_message));
      sb.append("')\"");
    }
 else {
      sb.append(" title=\"");
      sb.append(LanguageUtil.get(pageContext,_message));
      sb.append("\"");
    }
    details=sb.toString();
  }
  boolean auiImage=false;
  if ((_image != null) && _image.startsWith(_AUI_PATH)) {
    auiImage=true;
  }
  if (Validator.isNotNull(_src) && themeDisplay.isThemeImagesFastLoad() && !auiImage) {
    SpriteImage spriteImage=null;
    String spriteFileName=null;
    String spriteFileURL=null;
    String imageFileName=StringUtil.replace(_src,"common/../","");
    if (imageFileName.contains(Http.PROTOCOL_DELIMITER)) {
      String portalURL=PortalUtil.getPortalURL(request);
      if (imageFileName.startsWith(portalURL)) {
        imageFileName=imageFileName.substring(portalURL.length());
      }
 else {
        URL imageURL=null;
        try {
          imageURL=new URL(imageFileName);
          imageFileName=imageURL.getPath();
        }
 catch (        MalformedURLException e) {
        }
      }
    }
    Theme theme=themeDisplay.getTheme();
    String contextPath=theme.getContextPath();
    String imagesPath=contextPath.concat(theme.getImagesPath());
    if (imageFileName.startsWith(imagesPath)) {
      spriteImage=theme.getSpriteImage(imageFileName);
      if (spriteImage != null) {
        spriteFileName=spriteImage.getSpriteFileName();
        if (BrowserSnifferUtil.isIe(request) && (BrowserSnifferUtil.getMajorVersion(request) < 7)) {
          spriteFileName=StringUtil.replace(spriteFileName,".png",".gif");
        }
        String cdnBaseURL=themeDisplay.getCDNBaseURL();
        spriteFileURL=cdnBaseURL.concat(spriteFileName);
      }
    }
    if (spriteImage == null) {
      Portlet portlet=(Portlet)request.getAttribute("liferay-portlet:icon_portlet:portlet");
      if (portlet == null) {
        portlet=(Portlet)request.getAttribute(WebKeys.RENDER_PORTLET);
      }
      if (portlet != null) {
        PortletApp portletApp=portlet.getPortletApp();
        spriteImage=portletApp.getSpriteImage(imageFileName);
        if (spriteImage != null) {
          spriteFileName=spriteImage.getSpriteFileName();
          if (BrowserSnifferUtil.isIe(request) && (BrowserSnifferUtil.getMajorVersion(request) < 7)) {
            spriteFileName=StringUtil.replace(spriteFileName,".png",".gif");
          }
          String cdnBaseURL=themeDisplay.getCDNBaseURL();
          spriteFileURL=cdnBaseURL.concat(spriteFileName);
        }
      }
    }
    if (spriteImage != null) {
      String themeImagesPath=themeDisplay.getPathThemeImages();
      _src=themeImagesPath.concat("/spacer.png");
      StringBundler sb=new StringBundler(10);
      sb.append(details);
      sb.append(" style=\"background-image: url('");
      sb.append(spriteFileURL);
      sb.append("'); background-position: 50% -");
      sb.append(spriteImage.getOffset());
      sb.append("px; background-repeat: no-repeat; height: ");
      sb.append(spriteImage.getHeight());
      sb.append("px; width: ");
      sb.append(spriteImage.getWidth());
      sb.append("px;\"");
      details=sb.toString();
    }
  }
  return details;
}

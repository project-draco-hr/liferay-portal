{
  long pk=ServiceTestUtil.nextLong();
  ShoppingCoupon newShoppingCoupon=_persistence.create(pk);
  newShoppingCoupon.setGroupId(ServiceTestUtil.nextLong());
  newShoppingCoupon.setCompanyId(ServiceTestUtil.nextLong());
  newShoppingCoupon.setUserId(ServiceTestUtil.nextLong());
  newShoppingCoupon.setUserName(ServiceTestUtil.randomString());
  newShoppingCoupon.setCreateDate(ServiceTestUtil.nextDate());
  newShoppingCoupon.setModifiedDate(ServiceTestUtil.nextDate());
  newShoppingCoupon.setCode(ServiceTestUtil.randomString());
  newShoppingCoupon.setName(ServiceTestUtil.randomString());
  newShoppingCoupon.setDescription(ServiceTestUtil.randomString());
  newShoppingCoupon.setStartDate(ServiceTestUtil.nextDate());
  newShoppingCoupon.setEndDate(ServiceTestUtil.nextDate());
  newShoppingCoupon.setActive(ServiceTestUtil.randomBoolean());
  newShoppingCoupon.setLimitCategories(ServiceTestUtil.randomString());
  newShoppingCoupon.setLimitSkus(ServiceTestUtil.randomString());
  newShoppingCoupon.setMinOrder(ServiceTestUtil.nextDouble());
  newShoppingCoupon.setDiscount(ServiceTestUtil.nextDouble());
  newShoppingCoupon.setDiscountType(ServiceTestUtil.randomString());
  _persistence.update(newShoppingCoupon,false);
  ShoppingCoupon existingShoppingCoupon=_persistence.findByPrimaryKey(newShoppingCoupon.getPrimaryKey());
  Assert.assertEquals(existingShoppingCoupon.getCouponId(),newShoppingCoupon.getCouponId());
  Assert.assertEquals(existingShoppingCoupon.getGroupId(),newShoppingCoupon.getGroupId());
  Assert.assertEquals(existingShoppingCoupon.getCompanyId(),newShoppingCoupon.getCompanyId());
  Assert.assertEquals(existingShoppingCoupon.getUserId(),newShoppingCoupon.getUserId());
  Assert.assertEquals(existingShoppingCoupon.getUserName(),newShoppingCoupon.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCoupon.getCreateDate()),Time.getShortTimestamp(newShoppingCoupon.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCoupon.getModifiedDate()),Time.getShortTimestamp(newShoppingCoupon.getModifiedDate()));
  Assert.assertEquals(existingShoppingCoupon.getCode(),newShoppingCoupon.getCode());
  Assert.assertEquals(existingShoppingCoupon.getName(),newShoppingCoupon.getName());
  Assert.assertEquals(existingShoppingCoupon.getDescription(),newShoppingCoupon.getDescription());
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCoupon.getStartDate()),Time.getShortTimestamp(newShoppingCoupon.getStartDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCoupon.getEndDate()),Time.getShortTimestamp(newShoppingCoupon.getEndDate()));
  Assert.assertEquals(existingShoppingCoupon.getActive(),newShoppingCoupon.getActive());
  Assert.assertEquals(existingShoppingCoupon.getLimitCategories(),newShoppingCoupon.getLimitCategories());
  Assert.assertEquals(existingShoppingCoupon.getLimitSkus(),newShoppingCoupon.getLimitSkus());
  AssertUtils.assertEquals(existingShoppingCoupon.getMinOrder(),newShoppingCoupon.getMinOrder());
  AssertUtils.assertEquals(existingShoppingCoupon.getDiscount(),newShoppingCoupon.getDiscount());
  Assert.assertEquals(existingShoppingCoupon.getDiscountType(),newShoppingCoupon.getDiscountType());
}

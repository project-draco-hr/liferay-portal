{
  long pk=nextLong();
  JournalFeed newJournalFeed=_persistence.create(pk);
  newJournalFeed.setUuid(randomString());
  newJournalFeed.setGroupId(nextLong());
  newJournalFeed.setCompanyId(nextLong());
  newJournalFeed.setUserId(nextLong());
  newJournalFeed.setUserName(randomString());
  newJournalFeed.setCreateDate(nextDate());
  newJournalFeed.setModifiedDate(nextDate());
  newJournalFeed.setFeedId(randomString());
  newJournalFeed.setName(randomString());
  newJournalFeed.setDescription(randomString());
  newJournalFeed.setType(randomString());
  newJournalFeed.setStructureId(randomString());
  newJournalFeed.setTemplateId(randomString());
  newJournalFeed.setRendererTemplateId(randomString());
  newJournalFeed.setDelta(nextInt());
  newJournalFeed.setOrderByCol(randomString());
  newJournalFeed.setOrderByType(randomString());
  newJournalFeed.setTargetLayoutFriendlyUrl(randomString());
  newJournalFeed.setTargetPortletId(randomString());
  newJournalFeed.setContentField(randomString());
  newJournalFeed.setFeedType(randomString());
  newJournalFeed.setFeedVersion(nextDouble());
  _persistence.update(newJournalFeed,false);
  JournalFeed existingJournalFeed=_persistence.findByPrimaryKey(newJournalFeed.getPrimaryKey());
  assertEquals(existingJournalFeed.getUuid(),newJournalFeed.getUuid());
  assertEquals(existingJournalFeed.getId(),newJournalFeed.getId());
  assertEquals(existingJournalFeed.getGroupId(),newJournalFeed.getGroupId());
  assertEquals(existingJournalFeed.getCompanyId(),newJournalFeed.getCompanyId());
  assertEquals(existingJournalFeed.getUserId(),newJournalFeed.getUserId());
  assertEquals(existingJournalFeed.getUserName(),newJournalFeed.getUserName());
  assertEquals(existingJournalFeed.getCreateDate(),newJournalFeed.getCreateDate());
  assertEquals(existingJournalFeed.getModifiedDate(),newJournalFeed.getModifiedDate());
  assertEquals(existingJournalFeed.getFeedId(),newJournalFeed.getFeedId());
  assertEquals(existingJournalFeed.getName(),newJournalFeed.getName());
  assertEquals(existingJournalFeed.getDescription(),newJournalFeed.getDescription());
  assertEquals(existingJournalFeed.getType(),newJournalFeed.getType());
  assertEquals(existingJournalFeed.getStructureId(),newJournalFeed.getStructureId());
  assertEquals(existingJournalFeed.getTemplateId(),newJournalFeed.getTemplateId());
  assertEquals(existingJournalFeed.getRendererTemplateId(),newJournalFeed.getRendererTemplateId());
  assertEquals(existingJournalFeed.getDelta(),newJournalFeed.getDelta());
  assertEquals(existingJournalFeed.getOrderByCol(),newJournalFeed.getOrderByCol());
  assertEquals(existingJournalFeed.getOrderByType(),newJournalFeed.getOrderByType());
  assertEquals(existingJournalFeed.getTargetLayoutFriendlyUrl(),newJournalFeed.getTargetLayoutFriendlyUrl());
  assertEquals(existingJournalFeed.getTargetPortletId(),newJournalFeed.getTargetPortletId());
  assertEquals(existingJournalFeed.getContentField(),newJournalFeed.getContentField());
  assertEquals(existingJournalFeed.getFeedType(),newJournalFeed.getFeedType());
  assertEquals(existingJournalFeed.getFeedVersion(),newJournalFeed.getFeedVersion());
}

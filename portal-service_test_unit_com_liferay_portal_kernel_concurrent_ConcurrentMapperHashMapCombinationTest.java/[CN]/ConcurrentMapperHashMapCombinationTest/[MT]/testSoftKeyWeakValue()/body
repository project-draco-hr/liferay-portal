{
  System.setProperty(FinalizeManager.class.getName() + ".thread.enabled",StringPool.FALSE);
  String testKey1=new String("testKey1");
  String testKey2=new String("testKey2");
  Object testValue1=new Object();
  Object testValue2=new Object();
  ConcurrentMap<String,Object> concurrentReferenceMap=new ConcurrentReferenceKeyHashMap<String,Object>(new ConcurrentReferenceValueHashMap<Reference<String>,Object>(FinalizeManager.WEAK_REFERENCE_FACTORY),FinalizeManager.SOFT_REFERENCE_FACTORY);
  Assert.assertNull(concurrentReferenceMap.put(testKey1,testValue1));
  Assert.assertNull(concurrentReferenceMap.put(testKey2,testValue2));
  Assert.assertEquals(2,concurrentReferenceMap.size());
  Assert.assertTrue(concurrentReferenceMap.containsKey(testKey1));
  Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1));
  Assert.assertSame(testValue1,concurrentReferenceMap.get(testKey1));
  Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2));
  Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2));
  Assert.assertSame(testValue2,concurrentReferenceMap.get(testKey2));
  testKey1=null;
  GCUtil.gc(true);
  ReflectionTestUtil.invoke(FinalizeManager.class,"_pollingCleanup",new Class<?>[0]);
  Assert.assertEquals(2,concurrentReferenceMap.size());
  Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1));
  Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2));
  Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2));
  Assert.assertSame(testValue2,concurrentReferenceMap.get(testKey2));
  GCUtil.fullGC(true);
  ReflectionTestUtil.invoke(FinalizeManager.class,"_pollingCleanup",new Class<?>[0]);
  Assert.assertEquals(1,concurrentReferenceMap.size());
  Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2));
  Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2));
  Assert.assertSame(testValue2,concurrentReferenceMap.get(testKey2));
  testValue2=null;
  GCUtil.gc(true);
  ReflectionTestUtil.invoke(FinalizeManager.class,"_pollingCleanup",new Class<?>[0]);
  Assert.assertTrue(concurrentReferenceMap.isEmpty());
}

{
  kaleoDefinition=toUnwrappedModel(kaleoDefinition);
  boolean isNew=kaleoDefinition.isNew();
  KaleoDefinitionModelImpl kaleoDefinitionModelImpl=(KaleoDefinitionModelImpl)kaleoDefinition;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoDefinition.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoDefinition.setCreateDate(now);
    }
 else {
      kaleoDefinition.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoDefinitionModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoDefinition.setModifiedDate(now);
    }
 else {
      kaleoDefinition.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoDefinition.isNew()) {
      session.save(kaleoDefinition);
      kaleoDefinition.setNew(false);
    }
 else {
      kaleoDefinition=(KaleoDefinition)session.merge(kaleoDefinition);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoDefinitionModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoDefinitionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoDefinitionModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{kaleoDefinitionModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoDefinitionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoDefinitionModelImpl.getOriginalCompanyId(),kaleoDefinitionModelImpl.getOriginalName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_N,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N,args);
      args=new Object[]{kaleoDefinitionModelImpl.getCompanyId(),kaleoDefinitionModelImpl.getName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_N,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N,args);
    }
    if ((kaleoDefinitionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoDefinitionModelImpl.getOriginalCompanyId(),kaleoDefinitionModelImpl.getOriginalActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A,args);
      args=new Object[]{kaleoDefinitionModelImpl.getCompanyId(),kaleoDefinitionModelImpl.getActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A,args);
    }
    if ((kaleoDefinitionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoDefinitionModelImpl.getOriginalCompanyId(),kaleoDefinitionModelImpl.getOriginalName(),kaleoDefinitionModelImpl.getOriginalActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_N_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N_A,args);
      args=new Object[]{kaleoDefinitionModelImpl.getCompanyId(),kaleoDefinitionModelImpl.getName(),kaleoDefinitionModelImpl.getActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_N_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_N_A,args);
    }
  }
  entityCache.putResult(KaleoDefinitionModelImpl.ENTITY_CACHE_ENABLED,KaleoDefinitionImpl.class,kaleoDefinition.getPrimaryKey(),kaleoDefinition,false);
  clearUniqueFindersCache(kaleoDefinitionModelImpl);
  cacheUniqueFindersCache(kaleoDefinitionModelImpl,isNew);
  kaleoDefinition.resetOriginalValues();
  return kaleoDefinition;
}

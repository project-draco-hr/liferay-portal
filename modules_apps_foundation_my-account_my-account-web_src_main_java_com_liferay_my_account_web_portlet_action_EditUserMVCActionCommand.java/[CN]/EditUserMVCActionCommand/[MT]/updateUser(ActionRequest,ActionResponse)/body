{
  String currentPassword=actionRequest.getParameter("password0");
  String newPassword=actionRequest.getParameter("password1");
  User user=PortalUtil.getSelectedUser(actionRequest);
  if (Validator.isNotNull(currentPassword)) {
    if (Validator.isNull(newPassword)) {
      throw new UserPasswordException.MustNotBeNull(user.getUserId());
    }
    Company company=PortalUtil.getCompany(actionRequest);
    String authType=company.getAuthType();
    Map<String,String[]> headerMap=new HashMap<>();
    Map<String,String[]> parameterMap=new HashMap<>();
    Map<String,Object> resultsMap=new HashMap<>();
    int authResult=Authenticator.FAILURE;
    if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
      authResult=userLocalService.authenticateByEmailAddress(company.getCompanyId(),user.getEmailAddress(),currentPassword,headerMap,parameterMap,resultsMap);
    }
 else     if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) {
      authResult=userLocalService.authenticateByUserId(company.getCompanyId(),user.getUserId(),currentPassword,headerMap,parameterMap,resultsMap);
    }
 else     if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
      authResult=userLocalService.authenticateByScreenName(company.getCompanyId(),user.getScreenName(),currentPassword,headerMap,parameterMap,resultsMap);
    }
    if (authResult == Authenticator.FAILURE) {
      throw new UserPasswordException.MustMatchCurrentPassword(user.getUserId());
    }
  }
 else   if (Validator.isNotNull(newPassword)) {
    throw new UserPasswordException.MustNotBeNull(user.getUserId());
  }
  return super.updateUser(actionRequest,actionResponse);
}

{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    String portletResource=ParamUtil.getString(actionRequest,"portletResource");
    PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest,portletResource);
    if (cmd.equals("add-selection")) {
      AssetPublisherUtil.addSelection(actionRequest,preferences);
    }
 else     if (cmd.equals("move-selection-down")) {
      moveSelectionDown(actionRequest,preferences);
    }
 else     if (cmd.equals("move-selection-up")) {
      moveSelectionUp(actionRequest,preferences);
    }
 else     if (cmd.equals("remove-selection")) {
      removeSelection(actionRequest,preferences);
    }
 else     if (cmd.equals("selection-style")) {
      setSelectionStyle(actionRequest,preferences);
    }
 else     if (cmd.equals(Constants.UPDATE)) {
      String selectionStyle=preferences.getValue("selection-style","dynamic");
      if (selectionStyle.equals("dynamic")) {
        updateDynamicSettings(actionRequest,preferences);
      }
 else       if (selectionStyle.equals("manual")) {
        updateManualSettings(actionRequest,preferences);
      }
    }
    if (SessionErrors.isEmpty(actionRequest)) {
      preferences.store();
      SessionMessages.add(actionRequest,portletConfig.getPortletName() + ".doConfigure");
    }
  }
 catch (  Exception e) {
    if (e instanceof AssetTagException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

{
  String[] classTypeIds=null;
  String anyAssetTypeParam=getParameter(actionRequest,"anyAssetType");
  boolean anyAssetType=GetterUtil.getBoolean(anyAssetTypeParam);
  if (!anyAssetType) {
    long defaultAssetTypeId=GetterUtil.getLong(anyAssetTypeParam);
    if (defaultAssetTypeId == 0 && classNameIds.length == 1) {
      defaultAssetTypeId=GetterUtil.getLong(classNameIds[0]);
    }
    if (defaultAssetTypeId > 0) {
      ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
      long[] groupdIds=new long[]{themeDisplay.getCompanyGroupId(),themeDisplay.getScopeGroupId()};
      ClassName className=ClassNameServiceUtil.getClassName(defaultAssetTypeId);
      AssetRendererFactory assetRendererFactory=AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className.getClassName());
      if (assetRendererFactory.getClassTypes(groupdIds) != null) {
        String assetClassName=AssetPublisherUtil.getClassName(assetRendererFactory);
        String anyAssetClassTypeParam=getParameter(actionRequest,"anyClassType" + assetClassName);
        boolean anyAssetClassType=GetterUtil.getBoolean(anyAssetClassTypeParam);
        if (!anyAssetClassType) {
          long defaultAssetClassTypeId=GetterUtil.getLong(anyAssetClassTypeParam);
          if (defaultAssetClassTypeId > 0) {
            classTypeIds=new String[]{String.valueOf(defaultAssetClassTypeId)};
          }
 else {
            classTypeIds=StringUtil.split(getParameter(actionRequest,"classTypeIds" + assetClassName));
          }
        }
      }
    }
  }
  return classTypeIds;
}

{
  if (!LDAPSettingsUtil.isImportEnabled(companyId)) {
    return;
  }
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
  if (LockLocalServiceUtil.hasLock(defaultUserId,PortalLDAPImporterUtil.class.getName(),companyId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Skipping LDAP import for company " + companyId + "because another LDAP import is in process");
    }
    return;
  }
  LockLocalServiceUtil.lock(defaultUserId,PortalLDAPImporterUtil.class.getName(),companyId,PortalLDAPImporterImpl.class.getName(),false,Time.DAY);
  try {
    for (int ldapServerId=0; ; ldapServerId++) {
      String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
      String providerUrl=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_PROVIDER_URL + postfix);
      if (Validator.isNull(providerUrl)) {
        break;
      }
      importFromLDAP(ldapServerId,companyId);
    }
    long[] ldapServerIds=StringUtil.split(PrefsPropsUtil.getString(companyId,"ldap.server.ids"),0L);
    for (    long ldapServerId : ldapServerIds) {
      importFromLDAP(ldapServerId,companyId);
    }
  }
  finally {
    LockLocalServiceUtil.unlock(PortalLDAPImporterUtil.class.getName(),companyId);
  }
}

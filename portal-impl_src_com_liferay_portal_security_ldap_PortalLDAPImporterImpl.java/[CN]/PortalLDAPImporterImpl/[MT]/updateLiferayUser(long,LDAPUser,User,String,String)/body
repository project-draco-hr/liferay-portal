{
  Date ldapUserModifiedDate=null;
  try {
    if (Validator.isNull(modifiedDate)) {
      if (_log.isInfoEnabled()) {
        _log.info("LDAP entry never modified, skipping user " + user.getEmailAddress());
      }
      return user;
    }
 else {
      DateFormat dateFormat=DateFormatFactoryUtil.getSimpleDateFormat("yyyyMMddHHmmss");
      ldapUserModifiedDate=dateFormat.parse(modifiedDate);
    }
    if (ldapUserModifiedDate.equals(user.getModifiedDate()) && ldapUser.isAutoPassword()) {
      if (_log.isDebugEnabled()) {
        _log.debug("User is already synchronized, skipping user " + user.getEmailAddress());
      }
      return user;
    }
  }
 catch (  ParseException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to parse LDAP modify timestamp " + modifiedDate,pe);
    }
  }
  if (Validator.isNull(ldapUser.getScreenName())) {
    ldapUser.setAutoScreenName(true);
  }
  if (ldapUser.isAutoScreenName()) {
    ScreenNameGenerator screenNameGenerator=ScreenNameGeneratorFactory.getInstance();
    ldapUser.setScreenName(screenNameGenerator.generate(companyId,user.getUserId(),ldapUser.getEmailAddress()));
  }
  try {
    Calendar birthdayCal=CalendarFactoryUtil.getCalendar();
    birthdayCal.setTime(user.getContact().getBirthday());
    int birthdayMonth=birthdayCal.get(Calendar.MONTH);
    int birthdayDay=birthdayCal.get(Calendar.DAY_OF_MONTH);
    int birthdayYear=birthdayCal.get(Calendar.YEAR);
    if (ldapUser.isUpdatePassword()) {
      UserLocalServiceUtil.updatePassword(user.getUserId(),password,password,ldapUser.isPasswordReset(),true);
    }
    user=UserLocalServiceUtil.updateUser(user.getUserId(),password,StringPool.BLANK,StringPool.BLANK,ldapUser.isPasswordReset(),ldapUser.getReminderQueryQuestion(),ldapUser.getReminderQueryAnswer(),ldapUser.getScreenName(),ldapUser.getEmailAddress(),ldapUser.getOpenId(),ldapUser.getLanguageId(),ldapUser.getTimeZoneId(),ldapUser.getGreeting(),ldapUser.getComments(),ldapUser.getFirstName(),ldapUser.getMiddleName(),ldapUser.getLastName(),ldapUser.getPrefixId(),ldapUser.getSuffixId(),ldapUser.isMale(),birthdayMonth,birthdayDay,birthdayYear,ldapUser.getSmsSn(),ldapUser.getAimSn(),ldapUser.getFacebookSn(),ldapUser.getIcqSn(),ldapUser.getJabberSn(),ldapUser.getMsnSn(),ldapUser.getMySpaceSn(),ldapUser.getSkypeSn(),ldapUser.getTwitterSn(),ldapUser.getYmSn(),ldapUser.getJobTitle(),ldapUser.getGroupIds(),ldapUser.getOrganizationIds(),ldapUser.getRoleIds(),ldapUser.getUserGroupRoles(),ldapUser.getUserGroupIds(),ldapUser.getServiceContext());
    if (ldapUserModifiedDate != null) {
      user=UserLocalServiceUtil.updateModifiedDate(user.getUserId(),ldapUserModifiedDate);
    }
    return user;
  }
 catch (  Exception e) {
    _log.error("Unable to update user with screen name " + ldapUser.getScreenName() + " and email address "+ ldapUser.getEmailAddress(),e);
    return null;
  }
}

{
  AttributesTransformer attributesTransformer=AttributesTransformerFactory.getInstance();
  attributes=attributesTransformer.transformUser(attributes);
  Properties userMappings=LDAPSettingsUtil.getUserMappings(ldapServerId,companyId);
  Properties contactMappings=LDAPSettingsUtil.getContactMappings(ldapServerId,companyId);
  Properties userExpandoMappings=LDAPSettingsUtil.getUserExpandoMappings(ldapServerId,companyId);
  Properties contactExpandoMappings=LDAPSettingsUtil.getContactExpandoMappings(ldapServerId,companyId);
  LDAPUser ldapUser=_ldapToPortalConverter.importLDAPUser(companyId,attributes,userMappings,userExpandoMappings,contactMappings,contactExpandoMappings,password);
  User user=findLiferayUser(companyId,ldapUser);
  if ((user != null) && user.isDefaultUser()) {
    return user;
  }
  if (user != null) {
    String modifiedDate=LDAPUtil.getAttributeValue(attributes,"modifyTimestamp");
    user=updateLiferayUser(companyId,ldapUser,user,password,modifiedDate);
  }
 else {
    user=createLiferayUser(companyId,ldapUser,password);
  }
  updateExpandoAttributes(user,ldapUser);
  if (!importGroupMembership || (user == null)) {
    return user;
  }
  importGroupsAndMembershipFromLDAPUser(ldapServerId,companyId,ldapContext,attributes,ldapUser,user,userMappings);
  return user;
}

{
  Date ldapUserModifiedDate=null;
  boolean passwordReset=ldapUser.isPasswordReset();
  if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.LDAP_EXPORT_ENABLED,PropsValues.LDAP_EXPORT_ENABLED)) {
    passwordReset=user.isPasswordReset();
  }
  try {
    if (Validator.isNull(modifiedDate)) {
      if (_log.isInfoEnabled()) {
        _log.info("Skipping user " + user.getEmailAddress() + " because the LDAP entry was never modified");
      }
      return user;
    }
    ldapUserModifiedDate=LDAPUtil.parseDate(modifiedDate);
    if (ldapUserModifiedDate.equals(user.getModifiedDate())) {
      if (ldapUser.isAutoPassword()) {
        if (_log.isDebugEnabled()) {
          _log.debug("Skipping user " + user.getEmailAddress() + " because he is already synchronized");
        }
        return user;
      }
      UserLocalServiceUtil.updatePassword(user.getUserId(),password,password,passwordReset,true);
      if (_log.isDebugEnabled()) {
        _log.debug("User " + user.getEmailAddress() + " is already synchronized, but updated password "+ "to avoid a blank value");
      }
      return user;
    }
  }
 catch (  ParseException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to parse LDAP modify timestamp " + modifiedDate,pe);
    }
  }
  if (!PropsValues.LDAP_IMPORT_USER_PASSWORD_ENABLED) {
    password=PropsValues.LDAP_IMPORT_USER_PASSWORD_DEFAULT;
    if (password.equalsIgnoreCase(_USER_PASSWORD_SCREEN_NAME)) {
      password=ldapUser.getScreenName();
    }
  }
  if (Validator.isNull(ldapUser.getScreenName())) {
    ldapUser.setAutoScreenName(true);
  }
  if (ldapUser.isAutoScreenName()) {
    ScreenNameGenerator screenNameGenerator=ScreenNameGeneratorFactory.getInstance();
    ldapUser.setScreenName(screenNameGenerator.generate(companyId,user.getUserId(),ldapUser.getEmailAddress()));
  }
  Calendar birthdayCal=CalendarFactoryUtil.getCalendar();
  Contact ldapContact=ldapUser.getContact();
  birthdayCal.setTime(ldapContact.getBirthday());
  int birthdayMonth=birthdayCal.get(Calendar.MONTH);
  int birthdayDay=birthdayCal.get(Calendar.DAY_OF_MONTH);
  int birthdayYear=birthdayCal.get(Calendar.YEAR);
  if (ldapUser.isUpdatePassword()) {
    UserLocalServiceUtil.updatePassword(user.getUserId(),password,password,passwordReset,true);
  }
  Contact contact=user.getContact();
  Set<String> ldapIgnoreAttributes=SetUtil.fromArray(PropsValues.LDAP_USER_IGNORE_ATTRIBUTES);
  for (  String attribute : ldapIgnoreAttributes) {
    Object value=BeanPropertiesUtil.getObjectSilent(user,attribute);
    if (value == null) {
      value=BeanPropertiesUtil.getObjectSilent(contact,attribute);
    }
    if (value != null) {
      BeanPropertiesUtil.setProperty(ldapUser,attribute,value);
    }
  }
  updateLDAPUser(ldapUser.getUser(),ldapContact,user);
  user=UserLocalServiceUtil.updateUser(user.getUserId(),password,StringPool.BLANK,StringPool.BLANK,passwordReset,ldapUser.getReminderQueryQuestion(),ldapUser.getReminderQueryAnswer(),ldapUser.getScreenName(),ldapUser.getEmailAddress(),ldapUser.getFacebookId(),ldapUser.getOpenId(),ldapUser.getLanguageId(),ldapUser.getTimeZoneId(),ldapUser.getGreeting(),ldapUser.getComments(),ldapUser.getFirstName(),ldapUser.getMiddleName(),ldapUser.getLastName(),ldapUser.getPrefixId(),ldapUser.getSuffixId(),ldapUser.isMale(),birthdayMonth,birthdayDay,birthdayYear,ldapUser.getSmsSn(),ldapUser.getAimSn(),ldapUser.getFacebookSn(),ldapUser.getIcqSn(),ldapUser.getJabberSn(),ldapUser.getMsnSn(),ldapUser.getMySpaceSn(),ldapUser.getSkypeSn(),ldapUser.getTwitterSn(),ldapUser.getYmSn(),ldapUser.getJobTitle(),ldapUser.getGroupIds(),ldapUser.getOrganizationIds(),ldapUser.getRoleIds(),ldapUser.getUserGroupRoles(),ldapUser.getUserGroupIds(),ldapUser.getServiceContext());
  if (ldapUserModifiedDate != null) {
    user=UserLocalServiceUtil.updateModifiedDate(user.getUserId(),ldapUserModifiedDate);
  }
  if (ldapUser.isUpdatePortrait()) {
    byte[] portraitBytes=ldapUser.getPortraitBytes();
    if ((portraitBytes != null) && (portraitBytes.length > 0)) {
      UserLocalServiceUtil.updatePortrait(user.getUserId(),portraitBytes);
    }
 else {
      UserLocalServiceUtil.deletePortrait(user.getUserId());
    }
  }
  user=UserLocalServiceUtil.updateStatus(user.getUserId(),ldapUser.getStatus());
  return user;
}

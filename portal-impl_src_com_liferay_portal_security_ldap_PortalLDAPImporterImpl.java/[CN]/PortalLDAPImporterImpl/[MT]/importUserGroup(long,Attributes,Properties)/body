{
  AttributesTransformer attributesTransformer=AttributesTransformerFactory.getInstance();
  attributes=attributesTransformer.transformGroup(attributes);
  LDAPGroup ldapGroup=_ldapToPortalConverter.importLDAPGroup(companyId,attributes,groupMappings);
  UserGroup userGroup=null;
  try {
    userGroup=UserGroupLocalServiceUtil.getUserGroup(companyId,ldapGroup.getGroupName());
    boolean newGroupName=!userGroup.getName().equalsIgnoreCase(ldapGroup.getGroupName());
    boolean newGroupDescription=(userGroup.getDescription() != null && !userGroup.getDescription().equalsIgnoreCase(ldapGroup.getDescription())) || (userGroup.getDescription() == null && ldapGroup.getDescription() != null);
    if (newGroupName || newGroupDescription) {
      UserGroupLocalServiceUtil.updateUserGroup(companyId,userGroup.getUserGroupId(),ldapGroup.getGroupName(),ldapGroup.getDescription(),null);
    }
  }
 catch (  NoSuchUserGroupException nsuge) {
    if (_log.isDebugEnabled()) {
      _log.debug("Adding user group to portal " + ldapGroup.getGroupName());
    }
    long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
    LDAPUserGroupTransactionThreadLocal.setOriginatesFromLDAP(true);
    try {
      userGroup=UserGroupLocalServiceUtil.addUserGroup(defaultUserId,companyId,ldapGroup.getGroupName(),ldapGroup.getDescription(),null);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to create user group " + ldapGroup.getGroupName());
      }
      if (_log.isDebugEnabled()) {
        _log.debug(e,e);
      }
    }
 finally {
      LDAPUserGroupTransactionThreadLocal.setOriginatesFromLDAP(false);
    }
  }
  addRole(companyId,ldapGroup,userGroup);
  return userGroup;
}

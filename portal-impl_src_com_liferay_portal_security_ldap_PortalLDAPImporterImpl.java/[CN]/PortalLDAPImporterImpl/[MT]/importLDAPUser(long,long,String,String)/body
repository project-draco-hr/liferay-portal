{
  LdapContext ldapContext=null;
  NamingEnumeration<SearchResult> enu=null;
  try {
    String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
    String baseDN=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_DN + postfix);
    ldapContext=PortalLDAPUtil.getContext(ldapServerId,companyId);
    if (ldapContext == null) {
      if (_log.isErrorEnabled()) {
        _log.error("Failed to bind to the LDAP server");
      }
      return null;
    }
    String filter=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_AUTH_SEARCH_FILTER + postfix);
    if (_log.isDebugEnabled()) {
      _log.debug("Search filter before transformation " + filter);
    }
    filter=StringUtil.replace(filter,new String[]{"@company_id@","@email_address@","@screen_name@"},new String[]{String.valueOf(companyId),emailAddress,screenName});
    LDAPUtil.validateFilter(filter);
    if (_log.isDebugEnabled()) {
      _log.debug("Search filter after transformation " + filter);
    }
    Properties userMappings=LDAPSettingsUtil.getUserMappings(ldapServerId,companyId);
    String userMappingsScreenName=GetterUtil.getString(userMappings.getProperty("screenName")).toLowerCase();
    SearchControls searchControls=new SearchControls(SearchControls.SUBTREE_SCOPE,1,0,new String[]{userMappingsScreenName},false,false);
    enu=ldapContext.search(baseDN,filter,searchControls);
    if (enu.hasMoreElements()) {
      if (_log.isDebugEnabled()) {
        _log.debug("Search filter returned at least one result");
      }
      Binding binding=enu.nextElement();
      Attributes attributes=PortalLDAPUtil.getUserAttributes(ldapServerId,companyId,ldapContext,PortalLDAPUtil.getNameInNamespace(ldapServerId,companyId,binding));
      return importLDAPUser(ldapServerId,companyId,ldapContext,attributes,StringPool.BLANK);
    }
 else {
      return null;
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Problem accessing LDAP server " + e.getMessage());
    }
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
    throw new SystemException("Problem accessing LDAP server " + e.getMessage());
  }
 finally {
    if (enu != null) {
      enu.close();
    }
    if (ldapContext != null) {
      ldapContext.close();
    }
  }
}

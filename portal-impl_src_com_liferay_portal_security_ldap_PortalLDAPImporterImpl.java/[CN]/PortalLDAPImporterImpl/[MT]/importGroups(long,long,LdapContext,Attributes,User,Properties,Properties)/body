{
  String groupMappingsUser=groupMappings.getProperty("user");
  Set<Long> newUserGroupIds=new LinkedHashSet<Long>();
  if (Validator.isNotNull(groupMappingsUser) && PrefsPropsUtil.getBoolean(companyId,PropsKeys.LDAP_IMPORT_GROUP_SEARCH_FILTER_ENABLED)) {
    String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
    String baseDN=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_DN + postfix);
    Binding binding=PortalLDAPUtil.getUser(ldapServerId,companyId,user.getScreenName(),user.getEmailAddress());
    String fullUserDN=PortalLDAPUtil.getNameInNamespace(ldapServerId,companyId,binding);
    StringBundler sb=new StringBundler(9);
    sb.append(StringPool.OPEN_PARENTHESIS);
    sb.append(StringPool.AMPERSAND);
    sb.append(PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_IMPORT_GROUP_SEARCH_FILTER + postfix));
    sb.append(StringPool.OPEN_PARENTHESIS);
    sb.append(groupMappingsUser);
    sb.append(StringPool.EQUAL);
    sb.append(escapeValue(fullUserDN));
    sb.append(StringPool.CLOSE_PARENTHESIS);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    byte[] cookie=new byte[0];
    while (cookie != null) {
      List<SearchResult> searchResults=new ArrayList<SearchResult>();
      String groupMappingsGroupName=GetterUtil.getString(groupMappings.getProperty("groupName"));
      groupMappingsGroupName=StringUtil.toLowerCase(groupMappingsGroupName);
      cookie=PortalLDAPUtil.searchLDAP(companyId,ldapContext,cookie,0,baseDN,sb.toString(),new String[]{groupMappingsGroupName},searchResults);
      for (      SearchResult searchResult : searchResults) {
        String fullGroupDN=PortalLDAPUtil.getNameInNamespace(ldapServerId,companyId,searchResult);
        newUserGroupIds=importGroup(ldapServerId,companyId,ldapContext,fullGroupDN,user,groupMappings,newUserGroupIds);
      }
    }
  }
 else {
    String userMappingsGroup=userMappings.getProperty("group");
    if (Validator.isNull(userMappingsGroup)) {
      return;
    }
    Attribute userGroupAttribute=attributes.get(userMappingsGroup);
    if (userGroupAttribute == null) {
      return;
    }
    for (int i=0; i < userGroupAttribute.size(); i++) {
      String fullGroupDN=(String)userGroupAttribute.get(i);
      newUserGroupIds=importGroup(ldapServerId,companyId,ldapContext,fullGroupDN,user,groupMappings,newUserGroupIds);
    }
  }
  addUserGroupsNotAddedByLDAPImport(user.getUserId(),newUserGroupIds);
  Set<Long> oldUserGroupIds=new LinkedHashSet<Long>();
  List<UserGroup> oldUserGroups=UserGroupLocalServiceUtil.getUserUserGroups(user.getUserId());
  for (  UserGroup oldUserGroup : oldUserGroups) {
    oldUserGroupIds.add(oldUserGroup.getUserGroupId());
  }
  if (!oldUserGroupIds.equals(newUserGroupIds)) {
    long[] userGroupIds=ArrayUtil.toLongArray(newUserGroupIds);
    UserGroupLocalServiceUtil.setUserUserGroups(user.getUserId(),userGroupIds);
  }
}

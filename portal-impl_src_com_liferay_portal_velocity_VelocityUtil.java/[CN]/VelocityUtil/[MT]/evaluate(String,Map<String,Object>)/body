{
  VelocityEngine velocityEngine=new VelocityEngine();
  velocityEngine.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM_CLASS,PropsUtil.get(PropsKeys.VELOCITY_ENGINE_LOGGER));
  velocityEngine.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM + ".log4j.category",PropsUtil.get(PropsKeys.VELOCITY_ENGINE_LOGGER_CATEGORY));
  velocityEngine.init();
  VelocityContext velocityContext=new VelocityContext();
  if (variables != null) {
    Iterator<Map.Entry<String,Object>> itr=variables.entrySet().iterator();
    while (itr.hasNext()) {
      Map.Entry<String,Object> entry=itr.next();
      String key=entry.getKey();
      Object value=entry.getValue();
      if (Validator.isNotNull(key)) {
        velocityContext.put(key,value);
      }
    }
  }
  UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
  velocityEngine.evaluate(velocityContext,unsyncStringWriter,VelocityUtil.class.getName(),input);
  return unsyncStringWriter.toString();
}

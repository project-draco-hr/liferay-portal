{
  MethodCache.reset();
  try {
    super.contextInitialized(servletContextEvent);
  }
  finally {
    ServletContext servletContext=servletContextEvent.getServletContext();
    String lockKey=getLockKey(servletContext);
    LockRegistry.freeLock(lockKey,lockKey,true);
  }
  PortletBeanFactoryCleaner.readBeans();
  ClassLoader classLoader=PortletClassLoaderUtil.getClassLoader();
  ServletContext servletContext=servletContextEvent.getServletContext();
  ApplicationContext applicationContext=WebApplicationContextUtils.getWebApplicationContext(servletContext);
  BeanLocator beanLocator=new BeanLocatorImpl(classLoader,applicationContext);
  try {
    Class<?> beanLocatorUtilClass=Class.forName("com.liferay.util.bean.PortletBeanLocatorUtil",true,classLoader);
    Method setBeanLocatorMethod=beanLocatorUtilClass.getMethod("setBeanLocator",new Class[]{BeanLocator.class});
    setBeanLocatorMethod.invoke(beanLocatorUtilClass,new Object[]{beanLocator});
    PortletBeanLocatorUtil.setBeanLocator(servletContext.getServletContextName(),beanLocator);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  servletContext.removeAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);
}

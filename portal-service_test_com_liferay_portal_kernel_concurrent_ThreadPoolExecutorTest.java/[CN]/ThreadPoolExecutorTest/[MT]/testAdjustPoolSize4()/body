{
  ThreadPoolExecutor threadPoolExecutor=new ThreadPoolExecutor(2,3,TestUtil.KEEPALIVE_TIME,TimeUnit.MILLISECONDS,false,10);
  try {
    MarkerBlockingJob markerBlockingJob1=new MarkerBlockingJob(true);
    MarkerBlockingJob markerBlockingJob2=new MarkerBlockingJob(true);
    threadPoolExecutor.execute(markerBlockingJob1);
    threadPoolExecutor.execute(markerBlockingJob2);
    TestUtil.waitUtilBlock(markerBlockingJob1,markerBlockingJob2);
    TestUtil.unBlock(markerBlockingJob1,markerBlockingJob2);
    TestUtil.waitUtilEnded(markerBlockingJob1,markerBlockingJob2);
    assertEquals(2,threadPoolExecutor.getPoolSize());
    assertEquals(0,threadPoolExecutor.getActiveCount());
    threadPoolExecutor.adjustPoolSize(1,3);
    assertEquals(1,threadPoolExecutor.getCorePoolSize());
    assertEquals(3,threadPoolExecutor.getMaxPoolSize());
    Thread.sleep(TestUtil.KEEPALIVE_WAIT * 2);
    assertEquals(1,threadPoolExecutor.getPoolSize());
    assertEquals(0,threadPoolExecutor.getActiveCount());
  }
  finally {
    TestUtil.closePool(threadPoolExecutor);
  }
}

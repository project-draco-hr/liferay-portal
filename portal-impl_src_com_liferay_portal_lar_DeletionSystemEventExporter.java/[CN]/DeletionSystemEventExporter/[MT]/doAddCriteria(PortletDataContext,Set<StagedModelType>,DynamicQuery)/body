{
  Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
  Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
  disjunction.add(groupIdProperty.eq(0L));
  disjunction.add(groupIdProperty.eq(portletDataContext.getScopeGroupId()));
  dynamicQuery.add(disjunction);
  if (!deletionSystemEventStagedModelTypes.isEmpty()) {
    Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
    Property referrerClassNameIdProperty=PropertyFactoryUtil.forName("referrerClassNameId");
    Disjunction referrerClassNameIdDisjunction=RestrictionsFactoryUtil.disjunction();
    for (    StagedModelType stagedModelType : deletionSystemEventStagedModelTypes) {
      Conjunction conjunction=RestrictionsFactoryUtil.conjunction();
      conjunction.add(classNameIdProperty.eq(stagedModelType.getClassNameId()));
      if (stagedModelType.getReferrerClassNameId() >= 0) {
        conjunction.add(referrerClassNameIdProperty.eq(stagedModelType.getReferrerClassNameId()));
      }
      referrerClassNameIdDisjunction.add(conjunction);
    }
    dynamicQuery.add(referrerClassNameIdDisjunction);
  }
  Property typeProperty=PropertyFactoryUtil.forName("type");
  dynamicQuery.add(typeProperty.eq(SystemEventConstants.TYPE_DELETE));
  addCreateDateProperty(portletDataContext,dynamicQuery);
}

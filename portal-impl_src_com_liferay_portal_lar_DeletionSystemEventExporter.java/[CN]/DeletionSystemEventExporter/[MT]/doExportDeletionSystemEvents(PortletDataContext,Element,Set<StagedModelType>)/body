{
  ActionableDynamicQuery actionableDynamicQuery=new SystemEventActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
      Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
      disjunction.add(groupIdProperty.eq(0L));
      disjunction.add(groupIdProperty.eq(portletDataContext.getScopeGroupId()));
      dynamicQuery.add(disjunction);
      if (!deletionSystemEventStagedModelTypes.isEmpty()) {
        Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
        Property referrerClassNameIdProperty=PropertyFactoryUtil.forName("referrerClassNameId");
        Disjunction referrerClassNameIdDisjunction=RestrictionsFactoryUtil.disjunction();
        for (        StagedModelType stagedModelType : deletionSystemEventStagedModelTypes) {
          Conjunction conjunction=RestrictionsFactoryUtil.conjunction();
          conjunction.add(classNameIdProperty.eq(stagedModelType.getClassNameId()));
          if (stagedModelType.getReferrerClassNameId() >= 0) {
            conjunction.add(referrerClassNameIdProperty.eq(stagedModelType.getReferrerClassNameId()));
          }
          referrerClassNameIdDisjunction.add(conjunction);
        }
        dynamicQuery.add(referrerClassNameIdDisjunction);
      }
      Property typeProperty=PropertyFactoryUtil.forName("type");
      dynamicQuery.add(typeProperty.eq(SystemEventConstants.TYPE_DELETE));
      _addCreateDateProperty(dynamicQuery);
    }
    @Override protected void performAction(    Object object){
      SystemEvent systemEvent=(SystemEvent)object;
      exportDeletionSystemEvent(portletDataContext,systemEvent,rootElement);
    }
    private void _addCreateDateProperty(    DynamicQuery dynamicQuery){
      if (!portletDataContext.hasDateRange()) {
        return;
      }
      Property createDateProperty=PropertyFactoryUtil.forName("createDate");
      Date startDate=portletDataContext.getStartDate();
      dynamicQuery.add(createDateProperty.ge(startDate));
      Date endDate=portletDataContext.getEndDate();
      dynamicQuery.add(createDateProperty.le(endDate));
    }
  }
;
  actionableDynamicQuery.setCompanyId(portletDataContext.getCompanyId());
  actionableDynamicQuery.performActions();
}

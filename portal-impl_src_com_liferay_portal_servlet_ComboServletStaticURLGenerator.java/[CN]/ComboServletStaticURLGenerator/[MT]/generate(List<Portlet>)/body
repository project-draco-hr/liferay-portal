{
  List<String> urls=new ArrayList<String>();
  StringBundler sb=new StringBundler(_comboURLPrefix);
  boolean hasComboURL=false;
  long timestamp=_timestamp;
  portlets=ListUtil.sort(portlets,_portletNameComparator);
  for (  Portlet portlet : portlets) {
    for (    PortletResourceAccessor portletResourcesAccessor : _portletResourcesAccessors) {
      List<String> resources=ListUtil.sort(portletResourcesAccessor.get(portlet));
      for (      String resource : resources) {
        if (!_predicateFilter.filter(resource)) {
          continue;
        }
        if (_visitedURLs.contains(resource)) {
          continue;
        }
        if (HttpUtil.hasProtocol(resource)) {
          urls.add(resource);
        }
 else {
          sb.append(StringPool.AMPERSAND);
          String curPortletContextPath=portlet.getContextPath();
          if (!portletResourcesAccessor.isPortalResource() && (curPortletContextPath != null) && !curPortletContextPath.equals(PortalUtil.getPathContext())) {
            sb.append(curPortletContextPath);
            sb.append(StringPool.COLON);
          }
          sb.append(HtmlUtil.escape(resource));
          timestamp=Math.max(timestamp,portlet.getTimestamp());
          hasComboURL=true;
        }
        _visitedURLs.add(resource);
      }
    }
  }
  if (hasComboURL) {
    String comboURL=sb.toString();
    comboURL=HttpUtil.addParameter(comboURL,"t",timestamp);
    urls.add(comboURL);
  }
  return urls;
}

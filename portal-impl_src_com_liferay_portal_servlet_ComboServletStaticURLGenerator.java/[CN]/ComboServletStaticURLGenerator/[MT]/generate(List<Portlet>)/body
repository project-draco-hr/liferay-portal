{
  List<String> urls=new ArrayList<>();
  StringBundler sb=new StringBundler();
  long timestamp=_timestamp;
  portlets=ListUtil.sort(portlets,_portletNameComparator);
  for (  Portlet portlet : portlets) {
    for (    PortletResourceAccessor portletResourceAccessor : _portletResourceAccessors) {
      List<String> portletResources=portletResourceAccessor.get(portlet);
      for (      String portletResource : portletResources) {
        if (!_predicateFilter.filter(portletResource)) {
          continue;
        }
        String url=portletResource;
        if (!HttpUtil.hasProtocol(portletResource)) {
          url=portlet.getContextPath() + portletResource;
        }
        if (_visitedURLs.contains(url)) {
          continue;
        }
        if (HttpUtil.hasProtocol(portletResource)) {
          urls.add(portletResource);
        }
 else {
          sb.append(StringPool.AMPERSAND);
          if (!portletResourceAccessor.isPortalResource()) {
            sb.append(portlet.getPortletId());
            sb.append(StringPool.COLON);
          }
          sb.append(HtmlUtil.escapeURL(portletResource));
          timestamp=Math.max(timestamp,portlet.getTimestamp());
        }
        _visitedURLs.add(url);
      }
    }
  }
  if (sb.length() > 0) {
    String url=_urlPrefix + sb.toString();
    url=HttpUtil.addParameter(url,"t",timestamp);
    urls.add(url);
  }
  return urls;
}

{
  s=s.trim();
  List<String> tokens=new ArrayList<String>();
  Matcher annotationNameMatcher=_ANNOTATION_NAME_REGEXP.matcher(s);
  Matcher annotationParametersMatcher=_ANNOTATION_PARAMETERS_REGEXP.matcher(s);
  if (annotationNameMatcher.matches()) {
    String annotationName=annotationNameMatcher.group();
    tokens.add(annotationName.replace("@",""));
  }
 else   if (annotationParametersMatcher.matches()) {
    if (!s.trim().endsWith(")")) {
      while (st.nextToken() != StreamTokenizer.TT_EOF) {
        if (st.ttype == StreamTokenizer.TT_WORD) {
          s+=st.sval;
          if (s.trim().endsWith(")")) {
            break;
          }
        }
      }
    }
    annotationParametersMatcher=_ANNOTATION_PARAMETERS_REGEXP.matcher(s);
    if (annotationParametersMatcher.matches()) {
      String annotationName=annotationParametersMatcher.group(1);
      String annotationParameters=annotationParametersMatcher.group(2);
      tokens.add(annotationName.replace("@",""));
      tokens=_processAnnotationParameters(annotationParameters,tokens);
    }
  }
  return tokens.toArray(new String[tokens.size()]);
}

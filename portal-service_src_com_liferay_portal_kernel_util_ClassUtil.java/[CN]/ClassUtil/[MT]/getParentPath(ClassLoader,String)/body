{
  if (_log.isDebugEnabled()) {
    _log.debug("Class name " + className);
  }
  if (!className.endsWith(_CLASS_EXTENSION)) {
    className+=_CLASS_EXTENSION;
  }
  className=StringUtil.replace(className,CharPool.PERIOD,CharPool.SLASH);
  className=StringUtil.replace(className,"/class",_CLASS_EXTENSION);
  URL url=classLoader.getResource(className);
  String path=null;
  try {
    path=url.getPath();
    URI uri=new URI(path);
    String scheme=uri.getScheme();
    if (path.contains(StringPool.EXCLAMATION) && ((scheme == null) || (scheme.length() <= 1))) {
      if (!path.startsWith(StringPool.SLASH)) {
        path=StringPool.SLASH + path;
      }
    }
 else {
      path=uri.getPath();
      if (path == null) {
        path=url.getFile();
      }
    }
  }
 catch (  URISyntaxException urise) {
    path=url.getFile();
  }
  if (ServerDetector.isJBoss()) {
    if (path.startsWith("file:") && !path.startsWith("file:/")) {
      path=path.substring(5);
      path="file:/".concat(path);
      path=StringUtil.replace(path,"%5C",StringPool.SLASH);
    }
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Path " + path);
  }
  int pos=path.indexOf(className);
  String parentPath=path.substring(0,pos);
  if (parentPath.startsWith("jar:")) {
    parentPath=parentPath.substring(4);
  }
  if (parentPath.startsWith("file:/")) {
    parentPath=parentPath.substring(6);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Parent path " + parentPath);
  }
  return parentPath;
}

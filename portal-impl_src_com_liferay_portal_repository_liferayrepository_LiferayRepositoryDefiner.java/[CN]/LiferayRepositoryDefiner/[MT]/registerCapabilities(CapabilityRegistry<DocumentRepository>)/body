{
  DocumentRepository documentRepository=capabilityRegistry.getTarget();
  DLFileEntryServiceAdapter dlFileEntryServiceAdapter=DLFileEntryServiceAdapter.create(documentRepository);
  DLFolderServiceAdapter dlFolderServiceAdapter=DLFolderServiceAdapter.create(documentRepository);
  BulkOperationCapability bulkOperationCapability=new LiferayBulkOperationCapability(documentRepository,dlFileEntryServiceAdapter,dlFolderServiceAdapter);
  capabilityRegistry.addExportedCapability(BulkOperationCapability.class,bulkOperationCapability);
  if (PropsValues.DL_FILE_ENTRY_COMMENTS_ENABLED) {
    capabilityRegistry.addExportedCapability(CommentCapability.class,_commentCapability);
  }
  RepositoryEntryConverter repositoryEntryConverter=new RepositoryEntryConverter();
  RepositoryEntryChecker repositoryEntryChecker=new RepositoryEntryChecker(documentRepository);
  capabilityRegistry.addExportedCapability(RelatedModelCapability.class,new LiferayRelatedModelCapability(repositoryEntryConverter,repositoryEntryChecker));
  capabilityRegistry.addExportedCapability(ThumbnailCapability.class,new LiferayThumbnailCapability(repositoryEntryConverter,repositoryEntryChecker));
  TrashCapability trashCapability=new LiferayTrashCapability(DLAppHelperLocalServiceUtil.getService(),DLAppServiceAdapter.create(documentRepository),dlFileEntryServiceAdapter,dlFolderServiceAdapter,RepositoryServiceAdapter.create(documentRepository),TrashEntryLocalServiceUtil.getService(),TrashVersionLocalServiceUtil.getService());
  capabilityRegistry.addExportedCapability(TrashCapability.class,trashCapability);
  capabilityRegistry.addExportedCapability(WorkflowCapability.class,new LiferayWorkflowCapability(dlFileEntryServiceAdapter,DLFileVersionServiceAdapter.create(documentRepository)));
  capabilityRegistry.addSupportedCapability(ProcessorCapability.class,_processorCapability);
  capabilityRegistry.addSupportedCapability(SyncCapability.class,new LiferaySyncCapability(GroupServiceAdapter.create(documentRepository),DLSyncEventLocalServiceUtil.getService()));
}

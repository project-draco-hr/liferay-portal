{
  JSONWebServiceMode jsonWebServiceMode=JSONWebServiceMode.MANUAL;
  if (jsonWebService != null) {
    jsonWebServiceMode=jsonWebService.mode();
  }
  JSONWebServiceScannerStrategy.MethodDescriptor[] methodDescriptors=_jsonWebServiceScannerStrategy.scan(serviceBean);
  for (  JSONWebServiceScannerStrategy.MethodDescriptor methodDescriptor : methodDescriptors) {
    final Method method=methodDescriptor.getMethod();
    if (!_jsonWebServiceNaming.isIncludedMethod(method)) {
      continue;
    }
    JSONWebService methodJSONWebService=method.getAnnotation(JSONWebService.class);
    Class<?> declaringClass=methodDescriptor.getDeclaringClass();
    if (jsonWebServiceMode.equals(JSONWebServiceMode.AUTO)) {
      if (methodJSONWebService == null) {
        registerJSONWebServiceAction(contextName,contextPath,serviceBean,declaringClass,method);
      }
 else {
        JSONWebServiceMode methodJSONWebServiceMode=methodJSONWebService.mode();
        if (!methodJSONWebServiceMode.equals(JSONWebServiceMode.IGNORE)) {
          registerJSONWebServiceAction(contextName,contextPath,serviceBean,declaringClass,method);
        }
      }
    }
 else     if (methodJSONWebService != null) {
      JSONWebServiceMode methodJSONWebServiceMode=methodJSONWebService.mode();
      if (!methodJSONWebServiceMode.equals(JSONWebServiceMode.IGNORE)) {
        registerJSONWebServiceAction(contextName,contextPath,serviceBean,declaringClass,method);
      }
    }
  }
}

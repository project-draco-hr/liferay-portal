{
  JSONWebServiceMode jsonWebServiceMode=JSONWebServiceMode.MANUAL;
  if (jsonWebService != null) {
    jsonWebServiceMode=jsonWebService.mode();
  }
  JSONWebServiceScannerStrategy.MethodDescriptor[] methodDescriptors=_jsonWebServiceScannerStrategy.scan(serviceBean);
  for (  JSONWebServiceScannerStrategy.MethodDescriptor methodDescriptor : methodDescriptors) {
    Method method=methodDescriptor.getMethod();
    JSONWebService methodJSONWebService=method.getAnnotation(JSONWebService.class);
    if (methodJSONWebService == null) {
      if (!jsonWebServiceMode.equals(JSONWebServiceMode.AUTO)) {
        continue;
      }
    }
 else {
      JSONWebServiceMode methodJSONWebServiceMode=methodJSONWebService.mode();
      if (methodJSONWebServiceMode.equals(JSONWebServiceMode.IGNORE)) {
        continue;
      }
    }
    Class<?> serviceBeanClass=methodDescriptor.getDeclaringClass();
    String httpMethod=_jsonWebServiceMappingResolver.resolveHttpMethod(method);
    if (!_jsonWebServiceNaming.isValidHttpMethod(httpMethod)) {
      continue;
    }
    if (_wireViaUtil) {
      Class<?> utilClass=loadUtilClass(serviceBeanClass);
      try {
        method=utilClass.getMethod(method.getName(),method.getParameterTypes());
      }
 catch (      NoSuchMethodException nsme) {
        continue;
      }
    }
    String path=_jsonWebServiceMappingResolver.resolvePath(serviceBeanClass,method);
    if (!_jsonWebServiceNaming.isIncludedPath(contextPath,path)) {
      continue;
    }
    if (_jsonWebServiceNaming.isIncludedMethod(method)) {
      if (_wireViaUtil) {
        JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(contextName,contextPath,method.getDeclaringClass(),method,path,httpMethod);
      }
 else {
        JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(contextName,contextPath,serviceBean,serviceBeanClass,method,path,httpMethod);
      }
    }
  }
}

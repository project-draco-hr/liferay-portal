{
  if (object == null) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    return jsonObject.toString();
  }
  if (object instanceof JSONSerializable) {
    return ((JSONSerializable)object).toJSONString();
  }
  if (object instanceof Number || object instanceof Boolean) {
    return object.toString();
  }
  if (object instanceof String) {
    return JSONFactoryUtil.serialize(object);
  }
  if (object instanceof List) {
    List list=(List)object;
    StringBundler jsonArray=new StringBundler(list.size() * 2 + 2);
    jsonArray.append(StringPool.OPEN_BRACKET);
    for (int i=0; i < list.size(); i++) {
      Object o=list.get(i);
      if (i != 0) {
        jsonArray.append(StringPool.COMMA);
      }
      jsonArray.append(createJSONString(o));
    }
    jsonArray.append(StringPool.CLOSE_BRACKET);
    return jsonArray.toString();
  }
  Class type=object.getClass();
  if (type.isArray()) {
    Object[] array=(Object[])object;
    StringBundler jsonArray=new StringBundler(array.length * 2 + 2);
    jsonArray.append(StringPool.OPEN_BRACKET);
    for (int i=0; i < array.length; i++) {
      Object o=array[i];
      if (i != 0) {
        jsonArray.append(StringPool.COMMA);
      }
      jsonArray.append(createJSONString(o));
    }
    jsonArray.append(StringPool.CLOSE_BRACKET);
    return jsonArray.toString();
  }
  JSONSerializer jsonSerializer=_serializerManager.lookup(object);
  return jsonSerializer.toJSONString(object);
}

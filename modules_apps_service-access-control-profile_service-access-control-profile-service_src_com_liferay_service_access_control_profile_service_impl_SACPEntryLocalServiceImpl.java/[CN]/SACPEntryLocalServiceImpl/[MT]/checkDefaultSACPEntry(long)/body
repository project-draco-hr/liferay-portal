{
  SACPConfiguration sacpConfiguration=settingsFactory.getSettings(SACPConfiguration.class,new CompanyServiceSettingsLocator(companyId,SACPConstants.SERVICE_NAME));
  SACPEntry applicationSACPEntry=sacpEntryPersistence.fetchByC_N(companyId,sacpConfiguration.defaultApplicationSACPEntryName());
  SACPEntry userSACPEntry=sacpEntryPersistence.fetchByC_N(companyId,sacpConfiguration.defaultUserSACPEntryName());
  if ((applicationSACPEntry != null) && (userSACPEntry != null)) {
    return;
  }
  long defaultUserId=userLocalService.getDefaultUserId(companyId);
  Role guestRole=roleLocalService.getRole(companyId,RoleConstants.GUEST);
  if (applicationSACPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sacpConfiguration.defaultApplicationSACPEntryDescription());
    applicationSACPEntry=addSACPEntry(defaultUserId,sacpConfiguration.defaultApplicationSACPEntryServiceSignatures(),true,sacpConfiguration.defaultApplicationSACPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(applicationSACPEntry.getCompanyId(),SACPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(applicationSACPEntry.getSacpEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
  if (userSACPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sacpConfiguration.defaultUserSACPEntryDescription());
    userSACPEntry=addSACPEntry(defaultUserId,sacpConfiguration.defaultUserSACPEntryServiceSignatures(),true,sacpConfiguration.defaultUserSACPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(userSACPEntry.getCompanyId(),SACPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(userSACPEntry.getSacpEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
}

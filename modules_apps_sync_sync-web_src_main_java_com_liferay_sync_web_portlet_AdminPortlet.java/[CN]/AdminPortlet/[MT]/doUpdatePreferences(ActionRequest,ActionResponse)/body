{
  PortletPreferences portletPreferences=PrefsPropsUtil.getPreferences(CompanyThreadLocal.getCompanyId());
  boolean allowUserPersonalSites=ParamUtil.getBoolean(actionRequest,"allowUserPersonalSites");
  portletPreferences.setValue(SyncConfigurationKeys.SYNC_ALLOW_USER_PERSONAL_SITES,String.valueOf(allowUserPersonalSites));
  boolean enabled=ParamUtil.getBoolean(actionRequest,"enabled");
  portletPreferences.setValue(SyncConfigurationKeys.SYNC_SERVICES_ENABLED,String.valueOf(enabled));
  int maxConnections=ParamUtil.getInteger(actionRequest,"maxConnections");
  portletPreferences.setValue(SyncConfigurationKeys.SYNC_CLIENT_MAX_CONNECTIONS,String.valueOf(maxConnections));
  boolean oAuthEnabled=ParamUtil.getBoolean(actionRequest,"oAuthEnabled");
  portletPreferences.setValue(SyncConfigurationKeys.SYNC_OAUTH_ENABLED,String.valueOf(oAuthEnabled));
  int pollInterval=ParamUtil.getInteger(actionRequest,"pollInterval");
  portletPreferences.setValue(SyncConfigurationKeys.SYNC_CLIENT_POLL_INTERVAL,String.valueOf(pollInterval));
  portletPreferences.store();
  if (oAuthEnabled) {
    PluginPackage oAuthPortletPluginPackage=DeployManagerUtil.getInstalledPluginPackage("oauth-portlet");
    if (oAuthPortletPluginPackage == null) {
      SessionErrors.add(actionRequest,OAuthPortletUndeployedException.class);
      return;
    }
    ServiceContext serviceContext=ServiceContextFactory.getInstance(actionRequest);
    SyncPreferencesLocalServiceUtil.enableOAuth(CompanyThreadLocal.getCompanyId(),serviceContext);
  }
}

{
  Object[] finderArgs=new Object[]{pk,String.valueOf(start),String.valueOf(end),String.valueOf(orderByComparator)};
  List<com.liferay.portlet.asset.model.AssetCategory> list=(List<com.liferay.portlet.asset.model.AssetCategory>)FinderCacheUtil.getResult(FINDER_PATH_GET_ASSETCATEGORIES,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      String sql=null;
      if (orderByComparator != null) {
        sql=_SQL_GETASSETCATEGORIES.concat(ORDER_BY_CLAUSE).concat(orderByComparator.getOrderBy());
      }
 else {
        sql=_SQL_GETASSETCATEGORIES.concat(com.liferay.portlet.asset.model.impl.AssetCategoryModelImpl.ORDER_BY_SQL);
      }
      SQLQuery q=session.createSQLQuery(sql);
      q.addEntity("AssetCategory",com.liferay.portlet.asset.model.impl.AssetCategoryImpl.class);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(pk);
      list=(List<com.liferay.portlet.asset.model.AssetCategory>)QueryUtil.list(q,getDialect(),start,end);
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_GET_ASSETCATEGORIES,finderArgs);
      }
 else {
        assetCategoryPersistence.cacheResult(list);
        FinderCacheUtil.putResult(FINDER_PATH_GET_ASSETCATEGORIES,finderArgs,list);
      }
      closeSession(session);
    }
  }
  return list;
}

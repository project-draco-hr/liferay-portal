{
  SetRecordUncaughtExceptionThreadFactory threadFactory=new SetRecordUncaughtExceptionThreadFactory();
  ThreadPoolExecutor threadPoolExecutor=new ThreadPoolExecutor(1,1,TestUtil.KEEPALIVE_TIME,TimeUnit.MILLISECONDS,true,10,new AbortPolicy(),threadFactory,new ThreadPoolHandlerAdapter());
  RecordUncaughtExceptionHandler recordUncaughtExceptionHandler=threadFactory.getRecordUncaughtExceptionHandler();
  Queue<MarkerBlockingJob> markerBlockingJobQueue=new LinkedList<>();
  try {
    for (int i=0; i < 10; i++) {
      MarkerBlockingJob markerBlockingJob=new MarkerBlockingJob(false,true);
      markerBlockingJobQueue.add(markerBlockingJob);
      threadPoolExecutor.execute(markerBlockingJob);
    }
  }
  finally {
    TestUtil.closePool(threadPoolExecutor);
    for (    Thread thread : threadFactory.getCreatedThreads()) {
      thread.join();
    }
  }
  Assert.assertEquals(1,threadPoolExecutor.getLargestPoolSize());
  Assert.assertEquals(10,recordUncaughtExceptionHandler.getUncaughtMap().size());
  for (  MarkerBlockingJob markerBlockingJob : markerBlockingJobQueue) {
    Assert.assertTrue(markerBlockingJob.isStarted());
    Assert.assertFalse(markerBlockingJob.isEnded());
  }
}

{
  PortletURL portletURL=((ActionResponseImpl)actionResponse).createRenderURL(PortletKeys.USERS_ADMIN);
  UserSearch userSearch=new UserSearch(actionRequest,portletURL);
  UserSearchTerms searchTerms=(UserSearchTerms)userSearch.getSearchTerms();
  searchTerms.setStatus(WorkflowConstants.STATUS_APPROVED);
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  long organizationId=searchTerms.getOrganizationId();
  if (organizationId > 0) {
    params.put("usersOrgs",new Long(organizationId));
  }
 else   if (!exportAllUsers) {
    User currentUser=themeDisplay.getUser();
    long organizationIds[]=currentUser.getOrganizationIds();
    if (organizationIds.length > 0) {
      params.put("usersOrgs",organizationIds);
    }
  }
  long roleId=searchTerms.getRoleId();
  if (roleId > 0) {
    params.put("usersRoles",new Long(roleId));
  }
  long userGroupId=searchTerms.getUserGroupId();
  if (userGroupId > 0) {
    params.put("usersUserGroups",new Long(userGroupId));
  }
  if (searchTerms.isAdvancedSearch()) {
    return UserLocalServiceUtil.search(themeDisplay.getCompanyId(),searchTerms.getFirstName(),searchTerms.getMiddleName(),searchTerms.getLastName(),searchTerms.getScreenName(),searchTerms.getEmailAddress(),searchTerms.getStatus(),params,searchTerms.isAndOperator(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,(OrderByComparator)null);
  }
 else {
    return UserLocalServiceUtil.search(themeDisplay.getCompanyId(),searchTerms.getKeywords(),searchTerms.getStatus(),params,QueryUtil.ALL_POS,QueryUtil.ALL_POS,(OrderByComparator)null);
  }
}

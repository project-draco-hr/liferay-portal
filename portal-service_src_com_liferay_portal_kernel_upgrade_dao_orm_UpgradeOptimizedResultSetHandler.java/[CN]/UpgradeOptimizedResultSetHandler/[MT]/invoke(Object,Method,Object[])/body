{
  String methodName=method.getName();
  if (methodName.equals("close")) {
    _resultSet.close();
    return null;
  }
 else   if (methodName.equals("next")) {
    if (_resultSet.isBeforeFirst()) {
      _next=_resultSet.next();
    }
    Object returnValue=_next;
    _cacheColumnValues();
    if (_next) {
      _next=_resultSet.next();
    }
    return returnValue;
  }
 else {
    Object column=arguments[0];
    if (column instanceof String) {
      String columnString=(String)column;
      column=columnString.toLowerCase();
    }
    Object returnValue=_columnValues.get(column);
    if (methodName.equals("getBoolean")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getBoolean(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        double doubleValue=number.doubleValue();
        if (doubleValue == 0.0) {
          return false;
        }
 else {
          return true;
        }
      }
    }
 else     if (methodName.equals("getDouble")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getDouble(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        return number.doubleValue();
      }
    }
 else     if (methodName.equals("getFloat")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getFloat(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        return number.floatValue();
      }
    }
 else     if (methodName.equals("getInt")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getInteger(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        return number.intValue();
      }
    }
 else     if (methodName.equals("getLong")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getLong(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        return number.longValue();
      }
    }
 else     if (methodName.equals("getShort")) {
      if ((returnValue == null) || !(returnValue instanceof Number)) {
        return GetterUtil.getShort(returnValue);
      }
 else {
        Number number=(Number)returnValue;
        return number.shortValue();
      }
    }
 else     if (methodName.equals("getString")) {
      if ((returnValue == null) || (returnValue instanceof String)) {
        return returnValue;
      }
 else {
        return String.valueOf(returnValue);
      }
    }
    return returnValue;
  }
}

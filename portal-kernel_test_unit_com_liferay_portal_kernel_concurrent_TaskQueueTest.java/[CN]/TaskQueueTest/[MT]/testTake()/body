{
  final TaskQueue<Object> taskQueue=new TaskQueue<>();
  final Object object=new Object();
  Assert.assertTrue(taskQueue.offer(object,new boolean[1]));
  Assert.assertSame(object,taskQueue.take());
  SyncThrowableThread<Void> syncThrowableThread=new SyncThrowableThread<>(new Callable<Void>(){
    @Override public Void call() throws Exception {
      for (int i=0; i < 10; i++) {
        Assert.assertEquals(i,taskQueue.take());
      }
      try {
        taskQueue.take();
        Assert.fail();
      }
 catch (      InterruptedException ie) {
      }
      return null;
    }
  }
);
  syncThrowableThread.start();
  for (int i=0; i < 10; i++) {
    Assert.assertTrue(taskQueue.offer(i,new boolean[1]));
  }
  Thread.sleep(TestUtil.SHORT_WAIT);
  syncThrowableThread.interrupt();
  syncThrowableThread.sync();
}

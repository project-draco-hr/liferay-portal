{
  DynamicQuery dynamicQuery=_layoutLocalService.dynamicQuery();
  Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
  dynamicQuery.add(groupIdProperty.eq(layoutSetPrototype.getGroupId()));
  Conjunction conjunction=RestrictionsFactoryUtil.conjunction();
  Property layoutPrototypeUuidProperty=PropertyFactoryUtil.forName("layoutPrototypeUuid");
  conjunction.add(layoutPrototypeUuidProperty.isNotNull());
  conjunction.add(layoutPrototypeUuidProperty.ne(StringPool.BLANK));
  dynamicQuery.add(conjunction);
  List<Layout> layouts=_layoutLocalService.dynamicQuery(dynamicQuery);
  boolean exportLayoutPrototypes=portletDataContext.getBooleanParameter("layout_set_prototypes","page-templates");
  for (  Layout layout : layouts) {
    String layoutPrototypeUuid=layout.getLayoutPrototypeUuid();
    LayoutPrototype layoutPrototype=_layoutPrototypeLocalService.getLayoutPrototypeByUuidAndCompanyId(layoutPrototypeUuid,portletDataContext.getCompanyId());
    portletDataContext.addReferenceElement(layout,layoutSetPrototypeElement,layoutPrototype,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,!exportLayoutPrototypes);
    if (exportLayoutPrototypes) {
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,layoutPrototype);
    }
  }
}

{
  String requestURI=request.getRequestURI();
  String requestPath=requestURI;
  String contextPath=request.getContextPath();
  if (!contextPath.equals(StringPool.SLASH)) {
    requestPath=requestPath.substring(contextPath.length());
  }
  URL resourceURL=_servletContext.getResource(requestPath);
  if (resourceURL == null) {
    return null;
  }
  URLConnection urlConnection=resourceURL.openConnection();
  String cacheCommonFileName=getCacheFileName(request);
  File cacheContentTypeFile=new File(_tempDir,cacheCommonFileName + "_E_CONTENT_TYPE");
  File cacheDataFile=new File(_tempDir,cacheCommonFileName + "_E_DATA");
  if (cacheDataFile.exists() && (cacheDataFile.lastModified() >= urlConnection.getLastModified())) {
    if (cacheContentTypeFile.exists()) {
      String contentType=FileUtil.read(cacheContentTypeFile);
      response.setContentType(contentType);
    }
    return cacheDataFile;
  }
  String dynamicContent=null;
  String content=null;
  try {
    if (requestPath.endsWith(_CSS_EXTENSION)) {
      if (_log.isInfoEnabled()) {
        _log.info("Parsing SASS on CSS " + requestPath);
      }
      content=StringUtil.read(urlConnection.getInputStream());
      dynamicContent=DynamicCSSUtil.parseSass(_servletContext,request,requestPath,content);
      response.setContentType(ContentTypes.TEXT_CSS);
      FileUtil.write(cacheContentTypeFile,ContentTypes.TEXT_CSS);
    }
 else     if (requestPath.endsWith(_JSP_EXTENSION)) {
      if (_log.isInfoEnabled()) {
        _log.info("Parsing SASS on JSP or servlet " + requestPath);
      }
      BufferCacheServletResponse bufferCacheServletResponse=new BufferCacheServletResponse(response);
      processFilter(DynamicCSSFilter.class,request,bufferCacheServletResponse,filterChain);
      bufferCacheServletResponse.finishResponse();
      content=bufferCacheServletResponse.getString();
      dynamicContent=DynamicCSSUtil.parseSass(_servletContext,request,requestPath,content);
      FileUtil.write(cacheContentTypeFile,bufferCacheServletResponse.getContentType());
    }
 else {
      return null;
    }
  }
 catch (  Exception e) {
    _log.error("Unable to parse SASS on CSS " + requestPath,e);
    if (_log.isDebugEnabled()) {
      _log.debug(content);
    }
    response.setHeader(HttpHeaders.CACHE_CONTROL,HttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);
  }
  if (dynamicContent != null) {
    FileUtil.write(cacheDataFile,dynamicContent);
  }
 else {
    dynamicContent=content;
  }
  return dynamicContent;
}

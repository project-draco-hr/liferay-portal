{
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<Map<String,Object>> imageEditorToolsContext=new ArrayList();
  List<ImageEditorCapability> imageEditorTools=_imageEditorCapabilityTracker.getCapabilities("tool");
  if (imageEditorTools != null) {
    List<List<ImageEditorCapability>> toolCategories=groupCapabilities(imageEditorTools);
    for (    List<ImageEditorCapability> toolCategory : toolCategories) {
      Map<String,Object> toolContext=new HashMap<String,Object>();
      List<Map<String,Object>> categoryControls=new ArrayList();
      String categoryIcon=StringPool.BLANK;
      for (      ImageEditorCapability imageEditorCapability : toolCategory) {
        Map<String,Object> capabilityProperties=_imageEditorCapabilityTracker.getCapabilityProperties(imageEditorCapability.getName());
        String icon=GetterUtil.getString(capabilityProperties.get("com.liferay.image.editor.capability.icon"));
        categoryIcon=icon;
        String label=imageEditorCapability.getLabel(themeDisplay.getLocale());
        ServletContext imageEditorCapabilityServletContext=imageEditorCapability.getServletContext();
        String variant=GetterUtil.getString(capabilityProperties.get("com.liferay.image.editor.capability.controls"));
        Map<String,Object> controlContext=new HashMap<>();
        controlContext.put("label",label);
        controlContext.put("modulePath",imageEditorCapabilityServletContext.getContextPath());
        controlContext.put("variant",variant);
        HttpServletRequest httpServletRequest=PortalUtil.getHttpServletRequest(renderRequest);
        imageEditorCapability.prepareContext(controlContext,httpServletRequest);
        categoryControls.add(controlContext);
      }
      toolContext.put("controls",categoryControls);
      toolContext.put("icon",categoryIcon);
      imageEditorToolsContext.add(toolContext);
    }
  }
  return imageEditorToolsContext;
}

{
  checkCalledFlushBuffer(include,portletResponse);
  PortletRequestImpl portletRequestImpl=PortletRequestImpl.getPortletRequestImpl(portletRequest);
  PortletResponseImpl portletResponseImpl=PortletResponseImpl.getPortletResponseImpl(portletResponse);
  HttpServletRequest request=PortalUtil.getHttpServletRequest(portletRequest);
  HttpServletResponse response=PortalUtil.getHttpServletResponse(portletResponse);
  request.setAttribute(JavaConstants.JAVAX_PORTLET_REQUEST,portletRequest);
  request.setAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE,portletResponse);
  String pathInfo=null;
  String queryString=null;
  String requestURI=null;
  String servletPath=null;
  if (_path != null) {
    String pathNoQueryString=_path;
    int pos=_path.indexOf(CharPool.QUESTION);
    if (pos != -1) {
      pathNoQueryString=_path.substring(0,pos);
      queryString=_path.substring(pos + 1);
      Map<String,String[]> queryParams=extractQueryParameters(queryString);
      request=createDynamicRequest(queryParams,request,portletRequestImpl);
    }
    Portlet portlet=portletRequestImpl.getPortlet();
    PortletApp portletApp=portlet.getPortletApp();
    Set<String> servletURLPatterns=portletApp.getServletURLPatterns();
    for (    String urlPattern : servletURLPatterns) {
      if (urlPattern.endsWith("/*")) {
        urlPattern=urlPattern.substring(0,urlPattern.length() - 2);
        if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) {
          pathInfo=pathNoQueryString.substring(urlPattern.length());
          servletPath=urlPattern;
          break;
        }
      }
    }
    if (pathInfo == null) {
      pathInfo=pathNoQueryString;
    }
    String contextPath=portletRequest.getContextPath();
    if (contextPath.equals(StringPool.SLASH)) {
      requestURI=pathNoQueryString;
    }
 else {
      requestURI=contextPath + pathNoQueryString;
    }
  }
  PortletServletRequest portletServletRequest=new PortletServletRequest(request,portletRequest,pathInfo,queryString,requestURI,servletPath,_named,include);
  PortletServletResponse portletServletResponse=new PortletServletResponse(response,portletResponse,include);
  URLEncoder urlEncoder=_portlet.getURLEncoderInstance();
  if (urlEncoder != null) {
    portletResponseImpl.setURLEncoder(urlEncoder);
  }
 else   if (strutsURLEncoder) {
    ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
    URLEncoder strutsURLEncoderObj=new StrutsURLEncoder(portletServletRequest.getContextPath(),themeDisplay.getPathMain(),(String)_liferayPortletContext.getAttribute(Globals.SERVLET_KEY),(LiferayPortletURL)portletResponseImpl.createRenderURL());
    portletResponseImpl.setURLEncoder(strutsURLEncoderObj);
  }
  try {
    if (include) {
      _requestDispatcher.include(portletServletRequest,portletServletResponse);
    }
 else {
      _requestDispatcher.forward(portletServletRequest,portletServletResponse);
    }
  }
 catch (  ServletException se) {
    _log.error(se,se);
    throw new PortletException(se);
  }
}

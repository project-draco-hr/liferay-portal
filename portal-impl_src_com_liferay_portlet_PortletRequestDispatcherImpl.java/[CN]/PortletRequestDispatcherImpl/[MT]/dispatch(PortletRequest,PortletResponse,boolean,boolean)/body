{
  if (!include) {
    if (portletResponse instanceof MimeResponseImpl) {
      MimeResponseImpl mimeResponseImpl=(MimeResponseImpl)portletResponse;
      if (mimeResponseImpl.isCalledFlushBuffer()) {
        throw new IllegalStateException();
      }
    }
  }
  PortletRequestImpl portletRequestImpl=PortletRequestImpl.getPortletRequestImpl(portletRequest);
  PortletResponseImpl portletResponseImpl=PortletResponseImpl.getPortletResponseImpl(portletResponse);
  HttpServletRequest request=PortalUtil.getHttpServletRequest(portletRequest);
  HttpServletResponse response=PortalUtil.getHttpServletResponse(portletResponse);
  request.setAttribute(JavaConstants.JAVAX_PORTLET_REQUEST,portletRequest);
  request.setAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE,portletResponse);
  String pathInfo=null;
  String queryString=null;
  String requestURI=null;
  String servletPath=null;
  if (_path != null) {
    String pathNoQueryString=_path;
    int pos=_path.indexOf(CharPool.QUESTION);
    if (pos != -1) {
      pathNoQueryString=_path.substring(0,pos);
      queryString=_path.substring(pos + 1);
      Map<String,String[]> queryParams=new HashMap<>();
      String[] queryParamsArray=StringUtil.split(queryString,CharPool.AMPERSAND);
      for (      String element : queryParamsArray) {
        String[] nameValuePair=StringUtil.split(element,CharPool.EQUAL);
        String name=nameValuePair[0];
        String value=StringPool.BLANK;
        if (nameValuePair.length == 2) {
          value=nameValuePair[1];
        }
        String[] values=queryParams.get(name);
        if (values == null) {
          queryParams.put(name,new String[]{value});
        }
 else {
          String[] newValues=new String[values.length + 1];
          System.arraycopy(values,0,newValues,0,values.length);
          newValues[newValues.length - 1]=value;
          queryParams.put(name,newValues);
        }
      }
      DynamicServletRequest dynamicRequest=null;
      if (portletRequestImpl.isPrivateRequestAttributes()) {
        String portletNamespace=PortalUtil.getPortletNamespace(portletRequestImpl.getPortletName());
        dynamicRequest=new NamespaceServletRequest(request,portletNamespace,portletNamespace);
      }
 else {
        dynamicRequest=new DynamicServletRequest(request);
      }
      for (      Map.Entry<String,String[]> entry : queryParams.entrySet()) {
        String name=entry.getKey();
        String[] values=entry.getValue();
        String[] oldValues=dynamicRequest.getParameterValues(name);
        if (oldValues == null) {
          dynamicRequest.setParameterValues(name,values);
        }
 else {
          String[] newValues=ArrayUtil.append(values,oldValues);
          dynamicRequest.setParameterValues(name,newValues);
        }
      }
      request=dynamicRequest;
    }
    Portlet portlet=portletRequestImpl.getPortlet();
    PortletApp portletApp=portlet.getPortletApp();
    Set<String> servletURLPatterns=portletApp.getServletURLPatterns();
    for (    String urlPattern : servletURLPatterns) {
      if (urlPattern.endsWith("/*")) {
        urlPattern=urlPattern.substring(0,urlPattern.length() - 2);
        if (pathNoQueryString.startsWith(urlPattern.concat(StringPool.SLASH))) {
          pathInfo=pathNoQueryString.substring(urlPattern.length());
          servletPath=urlPattern;
          break;
        }
      }
    }
    if ((pathInfo == null) && (servletPath == null)) {
      pathInfo=pathNoQueryString;
    }
    String contextPath=portletRequest.getContextPath();
    if (contextPath.equals(StringPool.SLASH)) {
      requestURI=pathNoQueryString;
    }
 else {
      requestURI=contextPath + pathNoQueryString;
    }
  }
  PortletServletRequest portletServletRequest=new PortletServletRequest(request,portletRequest,pathInfo,queryString,requestURI,servletPath,_named,include);
  PortletServletResponse portletServletResponse=new PortletServletResponse(response,portletResponse,include);
  URLEncoder urlEncoder=_portlet.getURLEncoderInstance();
  if (urlEncoder != null) {
    portletResponseImpl.setURLEncoder(urlEncoder);
  }
 else   if (strutsURLEncoder) {
    ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
    URLEncoder strutsURLEncoderObj=new StrutsURLEncoder(portletServletRequest.getContextPath(),themeDisplay.getPathMain(),(String)_liferayPortletContext.getAttribute(Globals.SERVLET_KEY),(LiferayPortletURL)portletResponseImpl.createRenderURL());
    portletResponseImpl.setURLEncoder(strutsURLEncoderObj);
  }
  if (include) {
    _requestDispatcher.include(portletServletRequest,portletServletResponse);
  }
 else {
    _requestDispatcher.forward(portletServletRequest,portletServletResponse);
  }
}

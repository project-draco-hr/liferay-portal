{
  KaleoTaskInstanceToken kaleoTaskInstanceToken=kaleoTaskInstanceTokenLocalService.getKaleoTaskInstanceToken(workflowTaskInstanceId);
  if (Validator.isNotNull(transitionName)) {
    KaleoTask kaleoTask=kaleoTaskInstanceToken.getKaleoTask();
    KaleoNode currentKaleoNode=kaleoTask.getKaleoNode();
    currentKaleoNode.getKaleoTransition(transitionName);
  }
  workflowContext=updateWorkflowContext(workflowContext,kaleoTaskInstanceToken);
  if (kaleoTaskInstanceToken.isCompleted()) {
    throw new WorkflowException("Cannot complete an already completed task " + workflowTaskInstanceId + " for user "+ serviceContext.getUserId());
  }
  serviceContext.setScopeGroupId(kaleoTaskInstanceToken.getGroupId());
  kaleoTaskInstanceToken=kaleoTaskInstanceTokenLocalService.completeKaleoTaskInstanceToken(kaleoTaskInstanceToken.getKaleoTaskInstanceTokenId(),serviceContext);
  kaleoLogLocalService.addTaskCompletionKaleoLog(kaleoTaskInstanceToken,comment,workflowContext,serviceContext);
  return WorkflowModelUtil.toWorkflowTask(kaleoTaskInstanceToken,workflowContext);
}

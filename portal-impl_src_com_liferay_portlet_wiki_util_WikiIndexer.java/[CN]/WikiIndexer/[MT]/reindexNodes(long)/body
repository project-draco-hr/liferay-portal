{
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(WikiNode.class,PortalClassLoaderUtil.getClassLoader());
  Projection minNodeIdProjection=ProjectionFactoryUtil.min("nodeId");
  Projection maxNodeIdProjection=ProjectionFactoryUtil.max("nodeId");
  ProjectionList projectionList=ProjectionFactoryUtil.projectionList();
  projectionList.add(minNodeIdProjection);
  projectionList.add(maxNodeIdProjection);
  dynamicQuery.setProjection(projectionList);
  addReindexCriteria(dynamicQuery,companyId);
  List<Object[]> results=WikiNodeLocalServiceUtil.dynamicQuery(dynamicQuery);
  Object[] minAndMaxNodeIds=results.get(0);
  if ((minAndMaxNodeIds[0] == null) || (minAndMaxNodeIds[1] == null)) {
    return;
  }
  long minNodeId=(Long)minAndMaxNodeIds[0];
  long maxNodeId=(Long)minAndMaxNodeIds[1];
  long startNodeId=minNodeId;
  long endNodeId=startNodeId + DEFAULT_INTERVAL;
  while (startNodeId <= maxNodeId) {
    reindexNodes(companyId,startNodeId,endNodeId);
    startNodeId=endNodeId;
    endNodeId+=DEFAULT_INTERVAL;
  }
}

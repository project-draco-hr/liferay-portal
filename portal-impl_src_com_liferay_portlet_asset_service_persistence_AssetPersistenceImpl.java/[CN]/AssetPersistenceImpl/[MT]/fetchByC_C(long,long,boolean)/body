{
  Object[] finderArgs=new Object[]{new Long(classNameId),new Long(classPK)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_C,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT asset FROM Asset asset WHERE ");
      query.append("asset.classNameId = ?");
      query.append(" AND ");
      query.append("asset.classPK = ?");
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<Asset> list=q.list();
      result=list;
      Asset asset=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,finderArgs,list);
      }
 else {
        asset=list.get(0);
        cacheResult(asset);
        if ((asset.getClassNameId() != classNameId) || (asset.getClassPK() != classPK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,finderArgs,asset);
        }
      }
      return asset;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,finderArgs,new ArrayList<Asset>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List) {
      return null;
    }
 else {
      return (Asset)result;
    }
  }
}

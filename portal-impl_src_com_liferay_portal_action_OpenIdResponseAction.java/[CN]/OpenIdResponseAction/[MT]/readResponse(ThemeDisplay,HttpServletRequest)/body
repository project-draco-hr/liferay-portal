{
  HttpSession ses=req.getSession();
  ConsumerManager manager=OpenIdUtil.getConsumerManager();
  ParameterList params=new ParameterList(req.getParameterMap());
  DiscoveryInformation discovered=(DiscoveryInformation)ses.getAttribute(WebKeys.OPEN_ID_DISCO);
  if (discovered == null) {
    return null;
  }
  StringBuffer receivingURL=req.getRequestURL();
  String queryString=req.getQueryString();
  if ((queryString != null) && (queryString.length() > 0)) {
    receivingURL.append(StringPool.QUESTION);
    receivingURL.append(req.getQueryString());
  }
  VerificationResult verification=manager.verify(receivingURL.toString(),params,discovered);
  Identifier verified=verification.getVerifiedId();
  if (verified == null) {
    return null;
  }
  AuthSuccess authSuccess=(AuthSuccess)verification.getAuthResponse();
  String firstName=null;
  String lastName=null;
  String emailAddress=null;
  if (authSuccess.hasExtension(SRegMessage.OPENID_NS_SREG)) {
    MessageExtension ext=authSuccess.getExtension(SRegMessage.OPENID_NS_SREG);
    if (ext instanceof SRegResponse) {
      SRegResponse sregResp=(SRegResponse)ext;
      String fullName=sregResp.getAttributeValue("fullname");
      firstName=fullName.substring(0,fullName.indexOf(StringPool.SPACE));
      lastName=fullName.substring(fullName.indexOf(StringPool.SPACE) + 1);
      emailAddress=sregResp.getAttributeValue("email");
    }
  }
  if (authSuccess.hasExtension(AxMessage.OPENID_NS_AX)) {
    MessageExtension ext=authSuccess.getExtension(AxMessage.OPENID_NS_AX);
    if (ext instanceof FetchResponse) {
      FetchResponse fetchResp=(FetchResponse)ext;
      firstName=getFirstValue(fetchResp.getAttributeValues("firstName"));
      lastName=getFirstValue(fetchResp.getAttributeValues("lastName"));
      emailAddress=getFirstValue(fetchResp.getAttributeValues("email"));
    }
  }
  String screenName=OpenIdUtil.getScreenName(authSuccess.getIdentity());
  User user=null;
  try {
    user=UserLocalServiceUtil.getUserByScreenName(themeDisplay.getCompanyId(),screenName);
  }
 catch (  NoSuchUserException nsue) {
    if (Validator.isNull(firstName) || Validator.isNull(lastName) || Validator.isNull(emailAddress)) {
      _log.error("The OpenID provider did not send the required " + "attributes to create an account");
      return null;
    }
    user=addUser(themeDisplay.getCompanyId(),firstName,lastName,emailAddress,screenName,themeDisplay.getLocale());
  }
  ses.setAttribute(WebKeys.OPEN_ID_LOGIN,new Long(user.getUserId()));
  return user;
}

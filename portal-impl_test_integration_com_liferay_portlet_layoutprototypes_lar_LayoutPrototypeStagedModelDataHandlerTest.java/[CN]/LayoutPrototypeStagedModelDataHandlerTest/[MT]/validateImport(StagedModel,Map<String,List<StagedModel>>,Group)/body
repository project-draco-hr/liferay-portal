{
  LayoutPrototype importedLayoutPrototype=(LayoutPrototype)getStagedModel(stagedModel.getUuid(),group);
  Assert.assertNotNull(importedLayoutPrototype);
  List<StagedModel> dependentLayouts=dependentStagedModelsMap.get(Layout.class.getSimpleName());
  Assert.assertEquals(1,dependentLayouts.size());
  Layout dependentLayout=(Layout)dependentLayouts.get(0);
  Layout importedLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(dependentLayout.getUuid(),importedLayoutPrototype.getGroupId(),dependentLayout.isPrivateLayout());
  Assert.assertNotNull(importedLayout);
  Assert.assertEquals(dependentLayout.getTypeSettingsProperty("layoutPrototypeExportTest"),importedLayout.getTypeSettingsProperty("layoutPrototypeExportTest"));
  List<StagedModel> layoutFriendlyURLs=dependentStagedModelsMap.get(LayoutFriendlyURL.class.getSimpleName());
  LayoutFriendlyURL layoutFriendlyURL=(LayoutFriendlyURL)layoutFriendlyURLs.get(0);
  LayoutFriendlyURL importedLayoutFriendlyURL=LayoutFriendlyURLLocalServiceUtil.fetchLayoutFriendlyURLByUuidAndGroupId(layoutFriendlyURL.getUuid(),importedLayout.getGroupId());
  Assert.assertNotNull(importedLayoutFriendlyURL);
  Assert.assertEquals(layoutFriendlyURL.getFriendlyURL(),importedLayoutFriendlyURL.getFriendlyURL());
}

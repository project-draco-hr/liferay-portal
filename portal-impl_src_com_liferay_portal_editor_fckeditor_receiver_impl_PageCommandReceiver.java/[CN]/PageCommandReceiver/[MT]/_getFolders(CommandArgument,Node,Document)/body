{
  Element foldersEl=doc.createElement("Folders");
  root.appendChild(foldersEl);
  if (arg.getCurrentFolder().equals("/")) {
    LinkedHashMap groupParams=new LinkedHashMap();
    groupParams.put("usersGroups",new Long(arg.getUserId()));
    groupParams.put("layoutSet",Boolean.FALSE);
    List groups=GroupLocalServiceUtil.search(arg.getCompanyId(),null,null,groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    for (int i=0; i < groups.size(); ++i) {
      Group group=(Group)groups.get(i);
      Element folderEl=doc.createElement("Folder");
      foldersEl.appendChild(folderEl);
      folderEl.setAttribute("name",group.getName());
    }
  }
 else {
    Group group=GroupServiceUtil.getGroup(arg.getCompanyId(),arg.getCurrentGroupName());
    List layouts=LayoutLocalServiceUtil.getLayouts(group.getGroupId(),false,LayoutImpl.DEFAULT_PARENT_LAYOUT_ID);
    if (("/" + arg.getCurrentGroupName() + "/").equals(arg.getCurrentFolder())) {
      for (int i=0; i < layouts.size(); i++) {
        Layout layout=(Layout)layouts.get(i);
        Element folderEl=doc.createElement("Folder");
        foldersEl.appendChild(folderEl);
        folderEl.setAttribute("name","~" + _getLayoutName(layout).replace('/','>'));
      }
    }
 else {
      String layoutName=_getLayoutName(arg.getCurrentFolder());
      Layout layout=null;
      for (int i=0; i < layouts.size(); i++) {
        layout=_getLayout(layoutName,(Layout)layouts.get(i));
        if (layout != null) {
          break;
        }
      }
      if (layout != null) {
        List layoutChildren=layout.getChildren();
        for (int i=0; i < layoutChildren.size(); i++) {
          layout=(Layout)layoutChildren.get(i);
          Element folderEl=doc.createElement("Folder");
          foldersEl.appendChild(folderEl);
          folderEl.setAttribute("name","~" + _getLayoutName(layout).replace('/','>'));
        }
      }
    }
  }
}

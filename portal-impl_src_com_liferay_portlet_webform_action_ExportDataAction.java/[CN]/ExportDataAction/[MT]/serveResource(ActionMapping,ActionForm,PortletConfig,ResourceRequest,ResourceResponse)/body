{
  PortletConfigImpl portletConfigImpl=(PortletConfigImpl)portletConfig;
  String portletId=portletConfigImpl.getPortletId();
  PortletPreferences prefs=resourceRequest.getPreferences();
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String databaseTableName=prefs.getValue("databaseTableName",StringPool.BLANK);
  String title=prefs.getValue("title","no-title");
  boolean uploadToDL=GetterUtil.getBoolean(prefs.getValue("uploadToDL",StringPool.BLANK));
  boolean uploadToDisk=GetterUtil.getBoolean(prefs.getValue("uploadToDisk",StringPool.BLANK));
  String uploadDiskDir=GetterUtil.getString(prefs.getValue("uploadDiskDir",StringPool.BLANK));
  if (uploadToDisk)   uploadToDisk=Validator.isNotNull(uploadDiskDir);
  StringBuilder sb=new StringBuilder();
  boolean hasFiles=false;
  List<String> fieldLabels=new ArrayList<String>();
  List<Boolean> fieldFiles=new ArrayList<Boolean>();
  for (int i=1; i <= WebFormUtil.MAX_FIELDS; i++) {
    String fieldLabel=prefs.getValue("fieldLabel" + i,StringPool.BLANK);
    if (Validator.isNotNull(fieldLabel)) {
      fieldLabels.add(fieldLabel);
      sb.append("\"");
      sb.append(fieldLabel.replaceAll("\"","\\\""));
      sb.append("\";");
      String fieldType=prefs.getValue("fieldType" + i,null);
      boolean isFile="file".equals(fieldType);
      fieldFiles.add(Boolean.valueOf(isFile));
      if (isFile)       hasFiles=true;
    }
  }
  sb.deleteCharAt(sb.length() - 1);
  sb.append("\n");
  ZipWriter zipWriter=null;
  if (hasFiles)   zipWriter=new ZipWriter();
  if (Validator.isNotNull(databaseTableName)) {
    List<ExpandoRow> rows=ExpandoRowLocalServiceUtil.getRows(WebFormUtil.class.getName(),databaseTableName,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    for (    ExpandoRow row : rows) {
      for (int i=0; i < fieldLabels.size(); i++) {
        String fieldName=fieldLabels.get(i);
        boolean fieldIsFile=fieldFiles.get(i).booleanValue();
        String data=ExpandoValueLocalServiceUtil.getData(WebFormUtil.class.getName(),databaseTableName,fieldName,row.getClassPK(),StringPool.BLANK);
        if (fieldIsFile && Validator.isNotNull(data)) {
          byte[] bytes=null;
          if (uploadToDL) {
            bytes=WebFormLocalServiceUtil.retrieveUploadedFile(themeDisplay.getCompanyId(),portletId,data);
          }
          if (bytes == null && uploadToDisk) {
            bytes=FileUtil.getBytes(new File(uploadDiskDir + "/" + data));
          }
          if (bytes != null) {
            zipWriter.addEntry(data,bytes);
          }
        }
        data=data.replaceAll("\"","\\\"");
        sb.append("\"");
        sb.append(data);
        sb.append("\";");
      }
      sb.deleteCharAt(sb.length() - 1);
      sb.append("\n");
    }
  }
  byte[] csvBytes=sb.toString().getBytes();
  String fileName;
  byte[] bytes;
  String contentType;
  if (hasFiles) {
    zipWriter.addEntry("submissions.csv",csvBytes);
    fileName=title + ".zip";
    bytes=zipWriter.finish();
    contentType=ContentTypes.APPLICATION_ZIP;
  }
 else {
    fileName=title + ".csv";
    bytes=csvBytes;
    contentType=ContentTypes.APPLICATION_TEXT;
  }
  HttpServletResponse response=PortalUtil.getHttpServletResponse(resourceResponse);
  ServletResponseUtil.sendFile(response,fileName,new ByteArrayInputStream(bytes),contentType);
}

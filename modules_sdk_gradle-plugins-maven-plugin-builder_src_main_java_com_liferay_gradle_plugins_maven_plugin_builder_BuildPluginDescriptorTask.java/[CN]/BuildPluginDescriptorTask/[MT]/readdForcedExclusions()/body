{
  Set<String> forcedExclusions=getForcedExclusions();
  if (forcedExclusions.isEmpty()) {
    return;
  }
  File file=new File(getOutputDir(),"plugin.xml");
  Path path=file.toPath();
  String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);
  int pos=content.lastIndexOf("</dependencies>");
  if (pos == -1) {
    if (_logger.isWarnEnabled()) {
      _logger.warn("Unable to readd forced exclusions");
    }
    return;
  }
  StringBuilder sb=new StringBuilder();
  sb.append(content,0,pos - 1);
  for (  String dependencyNotation : forcedExclusions) {
    String[] tokens=parseDependencyNotation(dependencyNotation);
    String groupId=tokens[0];
    String artifactId=tokens[1];
    String version=tokens[2];
    sb.append("<dependency>");
    sb.append("<groupId>");
    sb.append(groupId);
    sb.append("</groupId>");
    sb.append("<artifactId>");
    sb.append(artifactId);
    sb.append("</artifactId>");
    sb.append("<type>jar</type>");
    sb.append("<version>");
    sb.append(version);
    sb.append("</version>");
    sb.append("</dependency>");
  }
  sb.append(content,pos,content.length());
  content=sb.toString();
  Files.write(path,content.getBytes(StandardCharsets.UTF_8));
}

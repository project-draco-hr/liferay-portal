{
  Project project=getProject();
  if (sourceDir == null) {
    sourceDir=getSourceDir();
  }
  Document document=XMLUtil.createDocument();
  Element projectElement=document.createElementNS("http://maven.apache.org/POM/4.0.0","project");
  document.appendChild(projectElement);
  XMLUtil.appendElement(document,projectElement,"modelVersion","4.0.0");
  XMLUtil.appendElement(document,projectElement,"groupId",getPomGroupId());
  XMLUtil.appendElement(document,projectElement,"artifactId",getPomArtifactId());
  XMLUtil.appendElement(document,projectElement,"version",getPomVersion());
  XMLUtil.appendElement(document,projectElement,"packaging","maven-plugin");
  Element buildElement=document.createElement("build");
  projectElement.appendChild(buildElement);
  XMLUtil.appendElement(document,buildElement,"outputDirectory",project.relativePath(getClassesDir()));
  XMLUtil.appendElement(document,buildElement,"sourceDirectory",project.relativePath(sourceDir));
  Element pluginsElement=document.createElement("plugins");
  buildElement.appendChild(pluginsElement);
  Element pluginElement=document.createElement("plugin");
  pluginsElement.appendChild(pluginElement);
  XMLUtil.appendElement(document,pluginElement,"groupId","org.apache.maven.plugins");
  XMLUtil.appendElement(document,pluginElement,"artifactId","maven-plugin-plugin");
  XMLUtil.appendElement(document,pluginElement,"version",getMavenPluginPluginVersion());
  String goalPrefix=getGoalPrefix();
  if (Validator.isNotNull(goalPrefix)) {
    Element configurationElement=document.createElement("configuration");
    pluginElement.appendChild(configurationElement);
    XMLUtil.appendElement(document,configurationElement,"goalPrefix",goalPrefix);
  }
  Element dependenciesElement=document.createElement("dependencies");
  projectElement.appendChild(dependenciesElement);
  Map<String,String> pomConfigurationScopeMappings=getConfigurationScopeMappings();
  for (  Map.Entry<String,String> entry : pomConfigurationScopeMappings.entrySet()) {
    String configurationName=entry.getKey();
    String scope=entry.getValue();
    appendDependencyElements(document,dependenciesElement,configurationName,scope);
  }
  Element repositoriesElement=document.createElement("repositories");
  projectElement.appendChild(repositoriesElement);
  Element repositoryElement=document.createElement("repository");
  repositoriesElement.appendChild(repositoryElement);
  Map<String,String> pomRepositories=getPomRepositories();
  for (  Map.Entry<String,String> entry : pomRepositories.entrySet()) {
    String id=entry.getKey();
    String url=entry.getValue();
    XMLUtil.appendElement(document,repositoryElement,"id",id);
    XMLUtil.appendElement(document,repositoryElement,"url",url);
  }
  XMLUtil.write(document,pomFile);
}

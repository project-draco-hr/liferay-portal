{
  try {
    ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
    Group group=ServiceTestUtil.addGroup("BlogsEntryTrashHandlerTest#testRestoreBlogsEntryFromTrash");
    serviceContext.setScopeGroupId(group.getGroupId());
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
    BlogsEntry blogsEntry=addBlogsEntry(serviceContext);
    int oldStatus=blogsEntry.getStatus();
    BlogsEntryServiceUtil.moveEntryToTrash(blogsEntry.getEntryId());
    int initialBlogsEntriesCount=getBlogsEntriesNotInTrashCount(blogsEntry.getGroupId());
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(blogsEntry.getModelClassName());
    trashHandler.restoreTrashEntry(blogsEntry.getEntryId());
    blogsEntry=BlogsEntryServiceUtil.getEntry(blogsEntry.getEntryId());
    Assert.assertEquals(oldStatus,blogsEntry.getStatus());
    int finalBlogsEntriesCount=getBlogsEntriesNotInTrashCount(blogsEntry.getGroupId());
    Assert.assertEquals(initialBlogsEntriesCount + 1,finalBlogsEntriesCount);
  }
 catch (  Exception e) {
    Assert.fail("Unexpected error restoring blogsEntry from Trash: " + e.getMessage());
  }
}

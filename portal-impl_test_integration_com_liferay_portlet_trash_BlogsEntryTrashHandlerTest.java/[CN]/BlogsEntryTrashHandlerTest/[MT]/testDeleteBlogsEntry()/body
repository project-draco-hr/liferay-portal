{
  try {
    ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
    Group group=ServiceTestUtil.addGroup("Delete BlogsEntry Group");
    serviceContext.setScopeGroupId(group.getGroupId());
    int initialTrashItemsCount=getTrashEntriesCount(group.getGroupId());
    BlogsEntry blogsEntry=createBlogsEntry(serviceContext);
    int afterCreatingBlogsEntryCount=getBlogsEntriesNotInTrashCount(blogsEntry.getGroupId());
    BlogsEntryServiceUtil.moveEntryToTrash(blogsEntry.getEntryId());
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(blogsEntry.getModelClassName());
    trashHandler.deleteTrashEntry(blogsEntry.getEntryId());
    int finalTrashItemsCount=getTrashEntriesCount(blogsEntry.getGroupId());
    Assert.assertEquals(initialTrashItemsCount,finalTrashItemsCount);
    int afterDeletingBlogsEntryCount=getBlogsEntriesNotInTrashCount(blogsEntry.getGroupId());
    Assert.assertEquals(afterCreatingBlogsEntryCount,afterDeletingBlogsEntryCount + 1);
  }
 catch (  Exception e) {
    Assert.fail("Unexpected error testing deleting blogsEntry: " + e.getMessage());
  }
}

{
  Channel channel=channelHandlerContext.channel();
  SocketAddress socketAddress=channel.localAddress();
  Path repositoryPath=Paths.get(_repositoryParentPath.toString(),StringUtil.replace(socketAddress.toString(),CharPool.COLON,CharPool.DASH));
  Files.createDirectories(repositoryPath);
  Repository<Channel> repository=new NettyRepository(repositoryPath,_getFileTimeout);
  ChannelPipeline channelPipeline=channel.pipeline();
  channelPipeline.addLast(new FileResponseChannelHandler(repository.getAsyncBroker(),_eventExecutorGroup));
  NettyFabricAgentStub nettyFabricAgentStub=new NettyFabricAgentStub(channel,repository,nettyFabricAgentConfig.getRepositoryPath(),_rpcRelayTimeout,_startupTimeout);
  if (!_fabricAgentRegistry.registerFabricAgent(nettyFabricAgentStub,new OnRegistration(channel,nettyFabricAgentStub,repository))) {
    if (_log.isWarnEnabled()) {
      _log.warn("Rejected duplicated fabric agent on " + channel);
    }
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Registered fabric agent on " + channel);
  }
}

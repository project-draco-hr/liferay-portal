{
  final AtomicReference<ProcessCallable<?>> atomicReference=new AtomicReference<ProcessCallable<?>>();
  ProcessChannel<Serializable> processChannel=new ProcessChannel<Serializable>(){
    @Override public NoticeableFuture<Serializable> getProcessNoticeableFuture(){
      return null;
    }
    @Override public <V extends Serializable>NoticeableFuture<V> write(    ProcessCallable<V> processCallable){
      atomicReference.set(processCallable);
      return null;
    }
  }
;
  ProcessCallableExecutor processCallableExecutor=JMXProxyUtil.toProcessCallableExecutor(processChannel);
  ProcessCallable<Serializable> processCallable=new ProcessCallable<Serializable>(){
    @Override public Serializable call(){
      return null;
    }
  }
;
  Assert.assertNull(processCallableExecutor.execute(processCallable));
  Assert.assertSame(processCallable,atomicReference.get());
}

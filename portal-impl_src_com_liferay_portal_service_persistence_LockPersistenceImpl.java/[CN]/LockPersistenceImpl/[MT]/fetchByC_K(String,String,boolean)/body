{
  Object[] finderArgs=new Object[]{className,key};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_K,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_LOCK_WHERE);
      if (className == null) {
        query.append(_FINDER_COLUMN_C_K_CLASSNAME_1);
      }
 else {
        if (className.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_C_K_CLASSNAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_C_K_CLASSNAME_2);
        }
      }
      if (key == null) {
        query.append(_FINDER_COLUMN_C_K_KEY_1);
      }
 else {
        if (key.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_C_K_KEY_3);
        }
 else {
          query.append(_FINDER_COLUMN_C_K_KEY_2);
        }
      }
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      if (className != null) {
        qPos.add(className);
      }
      if (key != null) {
        qPos.add(key);
      }
      List<Lock> list=q.list();
      result=list;
      Lock lock=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_K,finderArgs,list);
      }
 else {
        lock=list.get(0);
        cacheResult(lock);
        if ((lock.getClassName() == null) || !lock.getClassName().equals(className) || (lock.getKey() == null)|| !lock.getKey().equals(key)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_K,finderArgs,lock);
        }
      }
      return lock;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_K,finderArgs,new ArrayList<Lock>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Lock)result;
    }
  }
}

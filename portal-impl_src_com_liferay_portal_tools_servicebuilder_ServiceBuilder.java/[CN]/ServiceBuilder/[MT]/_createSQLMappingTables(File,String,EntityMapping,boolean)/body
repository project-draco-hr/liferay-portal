{
  if (!sqlFile.exists()) {
    FileUtil.write(sqlFile,StringPool.BLANK);
  }
  String content=FileUtil.read(sqlFile);
  int x=content.indexOf(_SQL_CREATE_TABLE + entityMapping.getTable() + " (");
  int y=content.indexOf(");",x);
  if (x != -1) {
    String oldCreateTableString=content.substring(x + 1,y);
    if (!oldCreateTableString.equals(newCreateTableString)) {
      content=content.substring(0,x) + newCreateTableString + content.substring(y + 2);
      FileUtil.write(sqlFile,content);
    }
  }
 else   if (addMissingTables) {
    StringBundler sb=new StringBundler();
    String line=null;
    boolean appendNewTable=true;
    try (UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(content))){
      while ((line=unsyncBufferedReader.readLine()) != null) {
        if (appendNewTable && line.startsWith(_SQL_CREATE_TABLE)) {
          x=_SQL_CREATE_TABLE.length();
          y=line.indexOf(" ",x);
          String tableName=line.substring(x,y);
          if (tableName.compareTo(entityMapping.getTable()) > 0) {
            sb.append(newCreateTableString);
            sb.append("\n\n");
            appendNewTable=false;
          }
        }
        sb.append(line);
        sb.append("\n");
      }
      if (appendNewTable) {
        sb.append("\n");
        sb.append(newCreateTableString);
      }
    }
     FileUtil.write(sqlFile,sb.toString(),true);
  }
}

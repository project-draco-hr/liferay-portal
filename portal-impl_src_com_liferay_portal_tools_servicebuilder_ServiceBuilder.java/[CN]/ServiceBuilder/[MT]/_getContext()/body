{
  BeansWrapper wrapper=BeansWrapper.getDefaultInstance();
  TemplateHashModel staticModels=wrapper.getStaticModels();
  Map<String,Object> context=new HashMap<String,Object>();
  context.put("hbmFileName",_hbmFileName);
  context.put("modelHintsFileName",_modelHintsFileName);
  context.put("springFileName",_springFileName);
  context.put("springDataSourceFileName",_springDataSourceFileName);
  context.put("springMiscFileName",_springMiscFileName);
  context.put("apiDir",_apiDir);
  context.put("implDir",_implDir);
  context.put("jsonFileName",_jsonFileName);
  context.put("sqlDir",_sqlDir);
  context.put("sqlFileName",_sqlFileName);
  context.put("beanLocatorUtil",_beanLocatorUtil);
  context.put("propsUtil",_propsUtil);
  context.put("portletName",_portletName);
  context.put("portletShortName",_portletShortName);
  context.put("portletPackageName",_portletPackageName);
  context.put("outputPath",_outputPath);
  context.put("serviceOutputPath",_serviceOutputPath);
  context.put("packagePath",_packagePath);
  context.put("serviceBuilder",this);
  context.put("arrayUtil",ArrayUtil_IW.getInstance());
  context.put("modelHintsUtil",staticModels.get("com.liferay.portal.model.ModelHintsUtil"));
  context.put("stringUtil",StringUtil_IW.getInstance());
  context.put("system",staticModels.get("java.lang.System"));
  context.put("tempMap",wrapper.wrap(new HashMap<String,Object>()));
  context.put("validator",staticModels.get("com.liferay.portal.kernel.util.Validator"));
  return context;
}

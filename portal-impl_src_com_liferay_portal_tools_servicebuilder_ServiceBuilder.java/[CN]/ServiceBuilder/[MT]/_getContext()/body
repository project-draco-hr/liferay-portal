{
  Map context=new HashMap();
  context.put("hbmFileName",_hbmFileName);
  context.put("modelHintsFileName",_modelHintsFileName);
  context.put("springFileName",_springFileName);
  context.put("springDataSourceFileName",_springDataSourceFileName);
  context.put("apiDir",_apiDir);
  context.put("implDir",_implDir);
  context.put("jsonFileName",_jsonFileName);
  context.put("sqlDir",_sqlDir);
  context.put("sqlFileName",_sqlFileName);
  context.put("baseModelImplPackage",_baseModelImplPackage);
  context.put("basePersistencePackage",_basePersistencePackage);
  context.put("beanLocatorUtilPackage",_beanLocatorUtilPackage);
  context.put("principalBeanPackage",_principalBeanPackage);
  context.put("propsUtilPackage",_propsUtilPackage);
  context.put("springHibernatePackage",_springHibernatePackage);
  context.put("springUtilPackage",_springUtilPackage);
  context.put("portletName",_portletName);
  context.put("portletShortName",_portletShortName);
  context.put("portletPackageName",_portletPackageName);
  context.put("outputPath",_outputPath);
  context.put("serviceOutputPath",_serviceOutputPath);
  context.put("packagePath",_packagePath);
  context.put("serviceBuilder",this);
  context.put("stringUtil",StringUtil_IW.getInstance());
  try {
    BeansWrapper wrapper=BeansWrapper.getDefaultInstance();
    TemplateHashModel staticModels=wrapper.getStaticModels();
    context.put("modelHintsUtil",staticModels.get("com.liferay.portal.model.ModelHintsUtil"));
    context.put("validator",staticModels.get("com.liferay.portal.kernel.util.Validator"));
  }
 catch (  TemplateModelException tme) {
  }
  return context;
}

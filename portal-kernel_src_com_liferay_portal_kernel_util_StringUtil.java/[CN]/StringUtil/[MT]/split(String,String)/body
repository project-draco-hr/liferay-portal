{
  if ((Validator.isNull(s)) || (delimiter == null) || (delimiter.equals(StringPool.BLANK))) {
    return new String[0];
  }
  s=s.trim();
  if (s.equals(delimiter)) {
    return new String[0];
  }
  List<String> nodeValues=new ArrayList<String>();
  if (delimiter.equals(StringPool.NEW_LINE) || delimiter.equals(StringPool.RETURN)) {
    try {
      UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(s));
      String line=null;
      while ((line=unsyncBufferedReader.readLine()) != null) {
        nodeValues.add(line);
      }
      unsyncBufferedReader.close();
    }
 catch (    IOException ioe) {
      _log.error(ioe.getMessage());
    }
  }
 else {
    int offset=0;
    int pos=s.indexOf(delimiter,offset);
    while (pos != -1) {
      nodeValues.add(s.substring(offset,pos));
      offset=pos + delimiter.length();
      pos=s.indexOf(delimiter,offset);
    }
    if (offset < s.length()) {
      nodeValues.add(s.substring(offset));
    }
  }
  return nodeValues.toArray(new String[nodeValues.size()]);
}

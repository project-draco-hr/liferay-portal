{
  Object newValue=oldValue;
  if (_upgradeScopeColumn.isScopeGroup()) {
    newValue=_groupIdMapper.getNewValue(new Long((String)oldValue));
  }
 else   if (_upgradeScopeColumn.isScopeIndividual()) {
    String primKey=(String)oldValue;
    if (primKey.startsWith(LayoutImpl.PUBLIC) || primKey.startsWith(LayoutImpl.PRIVATE)) {
      String[] keyParts=StringUtil.split(primKey,StringPool.PERIOD);
      Long groupId=(Long)_groupIdMapper.getNewValue(new Long(keyParts[1]));
      keyParts[1]=String.valueOf(groupId);
      primKey=StringUtil.merge(keyParts,StringPool.PERIOD);
    }
 else     if (primKey.indexOf("groupId=") != -1 || primKey.indexOf("ownerId=") != -1) {
      String[] keyParts=StringUtil.split(primKey.substring(1,primKey.length() - 1),StringPool.COMMA + StringPool.SPACE);
      for (int i=0; i < keyParts.length; i++) {
        String[] kvp=StringUtil.split(keyParts[i],StringPool.EQUAL);
        if (kvp[0].equals("groupId")) {
          kvp[1]=String.valueOf(_groupIdMapper.getNewValue(new Long(kvp[1])));
          keyParts[i]=StringUtil.merge(kvp,StringPool.EQUAL);
        }
 else         if (kvp[0].equals("ownerId")) {
          kvp[1]=(String)_ownerIdMapper.getNewValue(kvp[1]);
          keyParts[i]=StringUtil.merge(kvp,StringPool.EQUAL);
        }
      }
      primKey=StringPool.OPEN_CURLY_BRACE + StringUtil.merge(keyParts,StringPool.COMMA + StringPool.SPACE) + StringPool.CLOSE_CURLY_BRACE;
    }
  }
  return newValue;
}

{
  int status=GetterUtil.getInteger(searchContext.getAttribute(Field.STATUS),WorkflowConstants.STATUS_APPROVED);
  if (status != WorkflowConstants.STATUS_ANY) {
    contextQuery.addRequiredTerm(Field.STATUS,status);
  }
  boolean discussion=GetterUtil.getBoolean(searchContext.getAttribute("discussion"),false);
  contextQuery.addRequiredTerm("discussion",discussion);
  if (discussion) {
    String relatedEntryClassName=(String)searchContext.getAttribute("relatedEntryClassName");
    if (Validator.isNotNull(relatedEntryClassName)) {
      contextQuery.addRequiredTerm(Field.CLASS_NAME_ID,PortalUtil.getClassNameId(relatedEntryClassName));
      Indexer indexer=IndexerRegistryUtil.getIndexer(relatedEntryClassName);
      if (indexer != null) {
        indexer.postProcessContextQuery(contextQuery,searchContext);
      }
    }
  }
  long threadId=GetterUtil.getLong((String)searchContext.getAttribute("threadId"));
  if (threadId > 0) {
    contextQuery.addRequiredTerm("threadId",threadId);
  }
  long[] categoryIds=searchContext.getCategoryIds();
  if ((categoryIds != null) && (categoryIds.length > 0)) {
    if (categoryIds[0] == MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {
      return;
    }
    BooleanQuery categoriesQuery=BooleanQueryFactoryUtil.create(searchContext);
    for (    long categoryId : categoryIds) {
      try {
        MBCategoryServiceUtil.getCategory(categoryId);
      }
 catch (      Exception e) {
        continue;
      }
      categoriesQuery.addTerm(Field.CATEGORY_ID,categoryId);
    }
    contextQuery.add(categoriesQuery,BooleanClauseOccur.MUST);
  }
}

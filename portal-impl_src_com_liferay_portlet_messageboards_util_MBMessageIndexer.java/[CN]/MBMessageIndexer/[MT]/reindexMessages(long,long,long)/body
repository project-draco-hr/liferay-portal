{
  final IndexableActionableDynamicQuery indexableActionableDynamicQuery=MBMessageLocalServiceUtil.getIndexableActionableDynamicQuery();
  indexableActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property categoryIdProperty=PropertyFactoryUtil.forName("categoryId");
      dynamicQuery.add(categoryIdProperty.eq(categoryId));
      Property statusProperty=PropertyFactoryUtil.forName("status");
      Integer[] statuses={WorkflowConstants.STATUS_APPROVED,WorkflowConstants.STATUS_IN_TRASH};
      dynamicQuery.add(statusProperty.in(statuses));
    }
  }
);
  indexableActionableDynamicQuery.setCompanyId(companyId);
  indexableActionableDynamicQuery.setGroupId(groupId);
  indexableActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<MBMessage>(){
    @Override public void performAction(    MBMessage message){
      if (message.isDiscussion() && message.isRoot()) {
        return;
      }
      try {
        Document document=getDocument(message);
        indexableActionableDynamicQuery.addDocuments(document);
      }
 catch (      PortalException pe) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to index message boards message " + message.getMessageId(),pe);
        }
      }
    }
  }
);
  indexableActionableDynamicQuery.setSearchEngineId(getSearchEngineId());
  indexableActionableDynamicQuery.performActions();
}

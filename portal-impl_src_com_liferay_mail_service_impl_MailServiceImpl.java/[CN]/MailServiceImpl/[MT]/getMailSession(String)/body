{
  Session session=InfrastructureUtil.getMailSession();
  Properties properties=PropsUtil.getProperties(_propertyPrefix,true);
  if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST))) {
    if (PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_STARTTLS_ENABLE,"false").equals("true")) {
      properties.setProperty("mail.transport.protocol",Account.PROTOCOL_SMTPS);
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_AUTH))) {
        properties.setProperty("mail.smtps.auth",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_AUTH));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST))) {
        properties.setProperty("mail.smtps.host",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PASSWORD))) {
        properties.setProperty("mail.smtps.password",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PASSWORD));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT))) {
        properties.setProperty("mail.smtps.port",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_STARTTLS_ENABLE))) {
        properties.setProperty("mail.smtps.starttls.enable",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_STARTTLS_ENABLE));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_USER))) {
        properties.setProperty("mail.smtps.user",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_USER));
      }
    }
 else {
      properties.setProperty("mail.transport.protocol",Account.PROTOCOL_SMTP);
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_AUTH))) {
        properties.setProperty("mail.smtp.auth",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_AUTH));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST))) {
        properties.setProperty("mail.smtp.host",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PASSWORD))) {
        properties.setProperty("mail.smtp.password",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PASSWORD));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT))) {
        properties.setProperty("mail.smtp.port",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_STARTTLS_ENABLE))) {
        properties.setProperty("mail.smtp.starttls.enable",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_STARTTLS_ENABLE));
      }
      if (Validator.isNotNull(PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_USER))) {
        properties.setProperty("mail.smtp.user",PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_USER));
      }
    }
    session=Session.getInstance(properties);
    BeanLocator locator=PortalBeanLocatorUtil.getBeanLocator();
    InfrastructureUtil infrastructureUtil=(InfrastructureUtil)locator.locate(InfrastructureUtil.class.getName());
    infrastructureUtil.setMailSession(session);
  }
  return session;
}

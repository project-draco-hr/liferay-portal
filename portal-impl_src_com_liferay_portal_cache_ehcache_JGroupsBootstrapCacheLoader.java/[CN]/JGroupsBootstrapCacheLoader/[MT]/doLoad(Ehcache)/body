{
  List<JGroupManager> cachePeers=acquireCachePeers(cache);
  if ((cachePeers == null) || cachePeers.isEmpty()) {
    if (_log.isInfoEnabled()) {
      _log.info("Empty list of cache peers for cache " + cache.getName() + ". No cache peer to bootstrap from.");
    }
    return;
  }
  JGroupManager jGroupManager=cachePeers.get(0);
  Address localAddress=jGroupManager.getBusLocalAddress();
  if (_log.isInfoEnabled()) {
    _log.info("(" + cache.getName() + ") local address: "+ localAddress);
  }
  List<Address> addresses=_buildCachePeerAddressList(cache,jGroupManager,localAddress);
  if ((addresses == null) || addresses.isEmpty()) {
    if (_log.isInfoEnabled()) {
      _log.info("This is the first node to start. No cache bootstrap for " + cache.getName() + ".");
    }
    return;
  }
  Address address=null;
  Random random=new Random();
  while (!addresses.isEmpty() && ((address == null) || (cache.getSize() == 0))) {
    int randomPeerNumber=random.nextInt(addresses.size());
    address=addresses.get(randomPeerNumber);
    addresses.remove(randomPeerNumber);
    JGroupEventMessage event=new JGroupEventMessage(JGroupEventMessage.ASK_FOR_BOOTSTRAP,localAddress,null,cache,cache.getName());
    if (_log.isInfoEnabled()) {
      _log.info("Contact " + address + " to boot cache "+ cache.getName());
    }
    List<JGroupEventMessage> events=new ArrayList<JGroupEventMessage>();
    events.add(event);
    try {
      jGroupManager.send(address,events);
      try {
        Thread.sleep(3000);
      }
 catch (      InterruptedException ie) {
        _log.error(ie,ie);
      }
    }
 catch (    RemoteException re) {
      _log.error(re,re);
    }
  }
  if (cache.getSize() == 0) {
    if (_log.isInfoEnabled()) {
      _log.info("Cache failed to bootstrap from its peers " + cache.getName());
    }
  }
 else {
    if (_log.isInfoEnabled()) {
      _log.info("Bootstrap for cache " + cache.getName() + " has loaded "+ cache.getSize()+ " elements");
    }
  }
}

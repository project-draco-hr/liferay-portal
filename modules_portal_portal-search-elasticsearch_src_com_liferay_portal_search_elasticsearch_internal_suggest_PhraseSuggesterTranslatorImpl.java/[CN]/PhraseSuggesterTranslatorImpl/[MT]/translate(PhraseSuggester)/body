{
  SuggestBuilder suggestBuilder=new SuggestBuilder(phraseSuggester.getName());
  PhraseSuggestionBuilder phraseSuggestionBuilder=SuggestBuilders.phraseSuggestion(phraseSuggester.getName());
  phraseSuggestionBuilder.field(phraseSuggester.getField());
  if (Validator.isNotNull(phraseSuggester.getAnalyzer())) {
    phraseSuggestionBuilder.analyzer(phraseSuggester.getAnalyzer());
  }
  translate(phraseSuggester.getCandidateGenerators(),phraseSuggestionBuilder);
  translate(phraseSuggester.getCollate(),phraseSuggestionBuilder);
  if (phraseSuggester.getConfidence() != null) {
    phraseSuggestionBuilder.confidence(phraseSuggester.getConfidence());
  }
  if (phraseSuggester.isForceUnigrams() != null) {
    phraseSuggestionBuilder.forceUnigrams(phraseSuggester.isForceUnigrams());
  }
  if (phraseSuggester.getGramSize() != null) {
    phraseSuggestionBuilder.gramSize(phraseSuggester.getGramSize());
  }
  if (phraseSuggester.getMaxErrors() != null) {
    phraseSuggestionBuilder.maxErrors(phraseSuggester.getMaxErrors());
  }
  if (Validator.isNotNull(phraseSuggester.getPostHighlightFilter()) && Validator.isNotNull(phraseSuggester.getPreHighlightFilter())) {
    phraseSuggestionBuilder.highlight(phraseSuggester.getPreHighlightFilter(),phraseSuggester.getPostHighlightFilter());
  }
  if (phraseSuggester.getRealWordErrorLikelihood() != null) {
    phraseSuggestionBuilder.realWordErrorLikelihood(phraseSuggester.getRealWordErrorLikelihood());
  }
  if (phraseSuggester.getSeparator() != null) {
    phraseSuggestionBuilder.separator(phraseSuggester.getSeparator());
  }
  if (phraseSuggester.getShardSize() != null) {
    phraseSuggestionBuilder.shardSize(phraseSuggester.getShardSize());
  }
  if (phraseSuggester.getSize() != null) {
    phraseSuggestionBuilder.size(phraseSuggester.getSize());
  }
  if (phraseSuggester.getTokenLimit() != null) {
    phraseSuggestionBuilder.tokenLimit(phraseSuggester.getTokenLimit());
  }
  phraseSuggestionBuilder.text(phraseSuggester.getValue());
  suggestBuilder.addSuggestion(phraseSuggestionBuilder);
  return suggestBuilder;
}

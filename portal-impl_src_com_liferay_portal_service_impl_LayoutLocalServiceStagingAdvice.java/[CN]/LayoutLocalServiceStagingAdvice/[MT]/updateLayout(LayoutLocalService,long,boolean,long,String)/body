{
  Layout layout=LayoutUtil.findByG_P_L(groupId,privateLayout,layoutId);
  layout=wrapLayout(layout);
  LayoutRevision layoutRevision=LayoutStagingUtil.getLayoutRevision(layout);
  if (layoutRevision == null) {
    return layoutLocalService.updateLayout(groupId,privateLayout,layoutId,typeSettings);
  }
  layout.setTypeSettings(typeSettings);
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  boolean hasWorkflowTask=StagingUtil.hasWorkflowTask(serviceContext.getUserId(),layoutRevision);
  serviceContext.setAttribute("revisionInProgress",hasWorkflowTask);
  if (!MergeLayoutPrototypesThreadLocal.isInProgress()) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  }
  LayoutRevisionLocalServiceUtil.updateLayoutRevision(serviceContext.getUserId(),layoutRevision.getLayoutRevisionId(),layoutRevision.getLayoutBranchId(),layoutRevision.getName(),layoutRevision.getTitle(),layoutRevision.getDescription(),layoutRevision.getKeywords(),layoutRevision.getRobots(),layoutRevision.getTypeSettings(),layoutRevision.getIconImage(),layoutRevision.getIconImageId(),layoutRevision.getThemeId(),layoutRevision.getColorSchemeId(),layoutRevision.getCss(),serviceContext);
  return layout;
}

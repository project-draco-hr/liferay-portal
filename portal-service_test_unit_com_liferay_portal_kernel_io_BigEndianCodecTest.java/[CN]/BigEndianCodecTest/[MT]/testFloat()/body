{
  float[] floats=new float[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    floats[i]=_random.nextFloat();
  }
  byte[] bytes=new byte[TEST_ELEMENT_COUNT * 4];
  ByteBuffer byteBuffer=ByteBuffer.allocate(bytes.length);
  byteBuffer.order(ByteOrder.BIG_ENDIAN);
  FloatBuffer floatBuffer=byteBuffer.asFloatBuffer();
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    floatBuffer.put(floats[i]);
    BigEndianCodec.putFloat(bytes,i * 4,floats[i]);
  }
  Assert.assertArrayEquals(byteBuffer.array(),bytes);
  float[] newFloats=new float[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    newFloats[i]=BigEndianCodec.getFloat(bytes,i * 4);
  }
  Assert.assertTrue(Arrays.equals(floats,newFloats));
}

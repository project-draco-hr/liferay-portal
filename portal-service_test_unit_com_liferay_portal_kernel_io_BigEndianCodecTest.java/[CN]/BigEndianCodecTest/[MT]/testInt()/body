{
  int[] ints=new int[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    ints[i]=_random.nextInt();
  }
  byte[] bytes=new byte[TEST_ELEMENT_COUNT * 4];
  ByteBuffer byteBuffer=ByteBuffer.allocate(bytes.length);
  byteBuffer.order(ByteOrder.BIG_ENDIAN);
  IntBuffer intBuffer=byteBuffer.asIntBuffer();
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    intBuffer.put(ints[i]);
    BigEndianCodec.putInt(bytes,i * 4,ints[i]);
  }
  Assert.assertArrayEquals(byteBuffer.array(),bytes);
  int[] newInts=new int[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    newInts[i]=BigEndianCodec.getInt(bytes,i * 4);
  }
  Assert.assertTrue(Arrays.equals(ints,newInts));
}

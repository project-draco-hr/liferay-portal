{
  long[] longs=new long[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    longs[i]=_random.nextLong();
  }
  byte[] bytes=new byte[TEST_ELEMENT_COUNT * 8];
  ByteBuffer byteBuffer=ByteBuffer.allocate(bytes.length);
  byteBuffer.order(ByteOrder.BIG_ENDIAN);
  LongBuffer longBuffer=byteBuffer.asLongBuffer();
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    longBuffer.put(longs[i]);
    BigEndianCodec.putLong(bytes,i * 8,longs[i]);
  }
  Assert.assertArrayEquals(byteBuffer.array(),bytes);
  long[] newLongs=new long[TEST_ELEMENT_COUNT];
  for (int i=0; i < TEST_ELEMENT_COUNT; i++) {
    newLongs[i]=BigEndianCodec.getLong(bytes,i * 8);
  }
  Assert.assertTrue(Arrays.equals(longs,newLongs));
}

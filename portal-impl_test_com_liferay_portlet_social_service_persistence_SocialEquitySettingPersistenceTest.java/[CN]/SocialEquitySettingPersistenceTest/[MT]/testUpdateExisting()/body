{
  long pk=nextLong();
  SocialEquitySetting newSocialEquitySetting=_persistence.create(pk);
  newSocialEquitySetting.setGroupId(nextLong());
  newSocialEquitySetting.setCompanyId(nextLong());
  newSocialEquitySetting.setClassNameId(nextLong());
  newSocialEquitySetting.setActionId(randomString());
  newSocialEquitySetting.setType(nextInt());
  newSocialEquitySetting.setValue(nextInt());
  newSocialEquitySetting.setValidity(nextInt());
  newSocialEquitySetting.setActive(randomBoolean());
  _persistence.update(newSocialEquitySetting,false);
  SocialEquitySetting existingSocialEquitySetting=_persistence.findByPrimaryKey(newSocialEquitySetting.getPrimaryKey());
  assertEquals(existingSocialEquitySetting.getEquitySettingId(),newSocialEquitySetting.getEquitySettingId());
  assertEquals(existingSocialEquitySetting.getGroupId(),newSocialEquitySetting.getGroupId());
  assertEquals(existingSocialEquitySetting.getCompanyId(),newSocialEquitySetting.getCompanyId());
  assertEquals(existingSocialEquitySetting.getClassNameId(),newSocialEquitySetting.getClassNameId());
  assertEquals(existingSocialEquitySetting.getActionId(),newSocialEquitySetting.getActionId());
  assertEquals(existingSocialEquitySetting.getType(),newSocialEquitySetting.getType());
  assertEquals(existingSocialEquitySetting.getValue(),newSocialEquitySetting.getValue());
  assertEquals(existingSocialEquitySetting.getValidity(),newSocialEquitySetting.getValidity());
  assertEquals(existingSocialEquitySetting.getActive(),newSocialEquitySetting.getActive());
}

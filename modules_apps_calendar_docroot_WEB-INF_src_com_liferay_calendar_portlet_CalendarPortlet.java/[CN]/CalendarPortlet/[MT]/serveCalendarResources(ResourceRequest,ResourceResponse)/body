{
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String keywords=ParamUtil.getString(resourceRequest,"keywords");
  Set<Calendar> calendarsSet=new LinkedHashSet<>();
  Hits hits=search(themeDisplay.getCompanyId(),themeDisplay.getUserId(),keywords);
  for (  Document document : hits.getDocs()) {
    long calendarId=GetterUtil.getLong(document.get(Field.ENTRY_CLASS_PK));
    Calendar calendar=CalendarServiceUtil.getCalendar(calendarId);
    CalendarResource calendarResource=calendar.getCalendarResource();
    if (calendarResource.isActive()) {
      calendarsSet.add(calendar);
    }
  }
  long groupClassNameId=PortalUtil.getClassNameId(Group.class);
  String name=StringUtil.merge(CustomSQLUtil.keywords(keywords),StringPool.BLANK);
  LinkedHashMap<String,Object> params=new LinkedHashMap<>();
  params.put("usersGroups",themeDisplay.getUserId());
  List<Group> groups=GroupLocalServiceUtil.search(themeDisplay.getCompanyId(),name,null,params,true,0,SearchContainer.DEFAULT_DELTA);
  for (  Group group : groups) {
    addCalendar(resourceRequest,calendarsSet,groupClassNameId,group.getGroupId());
  }
  long userClassNameId=PortalUtil.getClassNameId(User.class);
  List<User> users=UserLocalServiceUtil.search(themeDisplay.getCompanyId(),keywords,0,null,0,SearchContainer.DEFAULT_DELTA,new UserFirstNameComparator());
  for (  User user : users) {
    addCalendar(resourceRequest,calendarsSet,userClassNameId,user.getUserId());
  }
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  Calendar calendar : calendarsSet) {
    JSONObject jsonObject=CalendarUtil.toCalendarJSONObject(themeDisplay,calendar);
    jsonArray.put(jsonObject);
  }
  writeJSON(resourceRequest,resourceResponse,jsonArray);
}

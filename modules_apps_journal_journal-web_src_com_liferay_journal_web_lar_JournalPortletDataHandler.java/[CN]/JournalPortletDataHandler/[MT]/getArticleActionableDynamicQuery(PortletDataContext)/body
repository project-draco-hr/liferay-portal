{
  ActionableDynamicQuery actionableDynamicQuery=JournalArticleLocalServiceUtil.getExportActionableDynamicQuery(portletDataContext);
  final ActionableDynamicQuery.AddCriteriaMethod addCriteriaMethod=actionableDynamicQuery.getAddCriteriaMethod();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      addCriteriaMethod.addCriteria(dynamicQuery);
      if (portletDataContext.getBooleanParameter(NAMESPACE,"version-history")) {
        return;
      }
      DynamicQuery versionArticleDynamicQuery=DynamicQueryFactoryUtil.forClass(JournalArticle.class,"versionArticle",getClass().getClassLoader());
      versionArticleDynamicQuery.setProjection(ProjectionFactoryUtil.alias(ProjectionFactoryUtil.max("versionArticle.version"),"versionArticle.version"));
      versionArticleDynamicQuery.add(RestrictionsFactoryUtil.eqProperty("this.resourcePrimKey","versionArticle.resourcePrimKey"));
      Property versionProperty=PropertyFactoryUtil.forName("version");
      dynamicQuery.add(versionProperty.eq(versionArticleDynamicQuery));
    }
  }
);
  return actionableDynamicQuery;
}

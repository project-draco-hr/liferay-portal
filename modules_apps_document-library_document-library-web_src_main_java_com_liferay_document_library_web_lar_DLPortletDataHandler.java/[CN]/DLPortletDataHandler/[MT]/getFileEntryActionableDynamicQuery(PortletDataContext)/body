{
  final ExportActionableDynamicQuery exportActionableDynamicQuery=_dlFileEntryLocalService.getExportActionableDynamicQuery(portletDataContext);
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      DynamicQuery fileVersionDynamicQuery=DynamicQueryFactoryUtil.forClass(DLFileVersion.class,"dlFileVersion",PortalClassLoaderUtil.getClassLoader());
      fileVersionDynamicQuery.setProjection(ProjectionFactoryUtil.property("fileEntryId"));
      fileVersionDynamicQuery.add(RestrictionsFactoryUtil.eqProperty("dlFileVersion.fileEntryId","fileEntryId"));
      fileVersionDynamicQuery.add(RestrictionsFactoryUtil.eqProperty("dlFileVersion.version","version"));
      Property statusProperty=PropertyFactoryUtil.forName("status");
      StagedModelDataHandler<?> stagedModelDataHandler=StagedModelDataHandlerRegistryUtil.getStagedModelDataHandler(DLFileEntry.class.getName());
      fileVersionDynamicQuery.add(statusProperty.in(stagedModelDataHandler.getExportableStatuses()));
      Criterion modifiedDateCriterion=portletDataContext.getDateRangeCriteria("modifiedDate");
      Criterion statusDateCriterion=portletDataContext.getDateRangeCriteria("statusDate");
      if ((modifiedDateCriterion != null) && (statusDateCriterion != null)) {
        Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
        disjunction.add(modifiedDateCriterion);
        disjunction.add(statusDateCriterion);
        fileVersionDynamicQuery.add(disjunction);
      }
      Property fileEntryIdProperty=PropertyFactoryUtil.forName("fileEntryId");
      dynamicQuery.add(fileEntryIdProperty.in(fileVersionDynamicQuery));
      Property repositoryIdProperty=PropertyFactoryUtil.forName("repositoryId");
      dynamicQuery.add(repositoryIdProperty.eq(portletDataContext.getScopeGroupId()));
    }
  }
);
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<DLFileEntry>(){
    @Override public void performAction(    DLFileEntry dlFileEntry) throws PortalException {
      FileEntry fileEntry=_dlAppLocalService.getFileEntry(dlFileEntry.getFileEntryId());
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,fileEntry);
    }
  }
);
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(DLFileEntryConstants.getClassName()));
  return exportActionableDynamicQuery;
}

{
  long pk=RandomTestUtil.nextLong();
  KaleoTaskAssignment newKaleoTaskAssignment=_persistence.create(pk);
  newKaleoTaskAssignment.setGroupId(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setCompanyId(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setUserId(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setUserName(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setCreateDate(RandomTestUtil.nextDate());
  newKaleoTaskAssignment.setModifiedDate(RandomTestUtil.nextDate());
  newKaleoTaskAssignment.setKaleoClassName(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setKaleoClassPK(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setKaleoDefinitionId(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setKaleoNodeId(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setAssigneeClassName(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setAssigneeClassPK(RandomTestUtil.nextLong());
  newKaleoTaskAssignment.setAssigneeActionId(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setAssigneeScript(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setAssigneeScriptLanguage(RandomTestUtil.randomString());
  newKaleoTaskAssignment.setAssigneeScriptRequiredContexts(RandomTestUtil.randomString());
  _kaleoTaskAssignments.add(_persistence.update(newKaleoTaskAssignment));
  KaleoTaskAssignment existingKaleoTaskAssignment=_persistence.findByPrimaryKey(newKaleoTaskAssignment.getPrimaryKey());
  Assert.assertEquals(existingKaleoTaskAssignment.getKaleoTaskAssignmentId(),newKaleoTaskAssignment.getKaleoTaskAssignmentId());
  Assert.assertEquals(existingKaleoTaskAssignment.getGroupId(),newKaleoTaskAssignment.getGroupId());
  Assert.assertEquals(existingKaleoTaskAssignment.getCompanyId(),newKaleoTaskAssignment.getCompanyId());
  Assert.assertEquals(existingKaleoTaskAssignment.getUserId(),newKaleoTaskAssignment.getUserId());
  Assert.assertEquals(existingKaleoTaskAssignment.getUserName(),newKaleoTaskAssignment.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoTaskAssignment.getCreateDate()),Time.getShortTimestamp(newKaleoTaskAssignment.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoTaskAssignment.getModifiedDate()),Time.getShortTimestamp(newKaleoTaskAssignment.getModifiedDate()));
  Assert.assertEquals(existingKaleoTaskAssignment.getKaleoClassName(),newKaleoTaskAssignment.getKaleoClassName());
  Assert.assertEquals(existingKaleoTaskAssignment.getKaleoClassPK(),newKaleoTaskAssignment.getKaleoClassPK());
  Assert.assertEquals(existingKaleoTaskAssignment.getKaleoDefinitionId(),newKaleoTaskAssignment.getKaleoDefinitionId());
  Assert.assertEquals(existingKaleoTaskAssignment.getKaleoNodeId(),newKaleoTaskAssignment.getKaleoNodeId());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeClassName(),newKaleoTaskAssignment.getAssigneeClassName());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeClassPK(),newKaleoTaskAssignment.getAssigneeClassPK());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeActionId(),newKaleoTaskAssignment.getAssigneeActionId());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeScript(),newKaleoTaskAssignment.getAssigneeScript());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeScriptLanguage(),newKaleoTaskAssignment.getAssigneeScriptLanguage());
  Assert.assertEquals(existingKaleoTaskAssignment.getAssigneeScriptRequiredContexts(),newKaleoTaskAssignment.getAssigneeScriptRequiredContexts());
}

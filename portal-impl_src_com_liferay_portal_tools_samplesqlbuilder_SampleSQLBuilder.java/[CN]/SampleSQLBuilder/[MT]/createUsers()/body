{
  createUser(_defaultContactId,"default@liferay.com",StringPool.BLANK,0,null,StringPool.BLANK,null,null,null,null,String.valueOf(_defaultUserId),_defaultUserId);
  write(StringPool.NEW_LINE);
  String dependenciesDir="../portal-impl/src/com/liferay/portal/tools/samplesqlbuilder/" + "dependencies/";
  List<String> firstNames=ListUtil.fromFile(dependenciesDir + "first_names.txt");
  List<String> lastNames=ListUtil.fromFile(dependenciesDir + "last_names.txt");
  List<Group> groups=new ArrayList<Group>();
  Group group=new GroupImpl();
  group.setGroupId(_guestGroupId);
  group.setName(GroupConstants.GUEST);
  groups.add(group);
  List<Role> roles=new ArrayList<Role>();
  Role role=new RoleImpl();
  role.setRoleId(_userRoleId);
  role.setName(RoleConstants.USER);
  roles.add(role);
  int userCount=0;
  for (  String lastName : lastNames) {
    for (    String firstName : firstNames) {
      userCount++;
      long contactId=_counter.get();
      long groupId=_counter.get();
      long userId=_counter.get();
      List<Layout> privateLayouts=new ArrayList<Layout>();
      List<Layout> publicLayouts=new ArrayList<Layout>();
      Layout layout=new LayoutImpl();
      layout.setPlid(_counter.get());
      layout.setPrivateLayout(false);
      layout.setName("Home");
      layout.setFriendlyURL("/home");
      publicLayouts.add(layout);
      createUser(contactId,userId + "@liferay.com",firstName,groupId,groups,lastName,null,privateLayouts,publicLayouts,roles,String.valueOf(userId),userId);
      write(StringPool.NEW_LINE);
      long categoryId=createMBCategory("Test description",groupId,"Test name",userId);
      long threadId=_counter.get();
      long rootMessageId=0;
      int messageCount=10;
      for (int i=0; i < messageCount; i++) {
        long messageId=createMBMessage("Test body " + i,categoryId,"Test subject " + i,threadId,userId);
        if (i == 0) {
          rootMessageId=messageId;
        }
      }
      createMBThread(categoryId,messageCount,rootMessageId,threadId,userId);
      if (userCount >= _maxUserCount) {
        break;
      }
    }
    if (userCount >= _maxUserCount) {
      break;
    }
  }
}

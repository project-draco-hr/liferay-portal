{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  InitUtil.initWithSpring();
  String baseDir=arguments.get("sample.sql.base.dir");
  String dbType=arguments.get("sample.sql.db.type");
  int maxBlogsEntryCommentCount=GetterUtil.getInteger(arguments.get("sample.sql.max.blogs.entry.comment.count"));
  int maxBlogsEntryCount=GetterUtil.getInteger(arguments.get("sample.sql.max.blogs.entry.count"));
  int maxDDLRecordCount=GetterUtil.getInteger(arguments.get("sample.sql.max.ddl.record.count"));
  int maxDDLRecordSetCount=GetterUtil.getInteger(arguments.get("sample.sql.max.ddl.record.set.count"));
  int maxDLFileEntryCount=GetterUtil.getInteger(arguments.get("sample.sql.max.dl.file.entry.count"));
  int maxDLFileEntrySize=GetterUtil.getInteger(arguments.get("sample.sql.max.dl.file.entry.size"));
  int maxDLFolderCount=GetterUtil.getInteger(arguments.get("sample.sql.max.dl.folder.count"));
  int maxDLFolderDepth=GetterUtil.getInteger(arguments.get("sample.sql.max.dl.folder.depth"));
  int maxGroupCount=GetterUtil.getInteger(arguments.get("sample.sql.max.group.count"));
  int maxJournalArticleCount=GetterUtil.getInteger(arguments.get("sample.sql.max.journal.article.count"));
  int maxJournalArticleSize=GetterUtil.getInteger(arguments.get("sample.sql.max.journal.article.size"));
  int maxMBCategoryCount=GetterUtil.getInteger(arguments.get("sample.sql.max.mb.category.count"));
  int maxMBMessageCount=GetterUtil.getInteger(arguments.get("sample.sql.max.mb.message.count"));
  int maxMBThreadCount=GetterUtil.getInteger(arguments.get("sample.sql.max.mb.thread.count"));
  int maxUserCount=GetterUtil.getInteger(arguments.get("sample.sql.max.user.count"));
  int maxUserToGroupCount=GetterUtil.getInteger(arguments.get("sample.sql.max.user.to.group.count"));
  int maxWikiNodeCount=GetterUtil.getInteger(arguments.get("sample.sql.max.wiki.node.count"));
  int maxWikiPageCommentCount=GetterUtil.getInteger(arguments.get("sample.sql.max.wiki.page.comment.count"));
  int maxWikiPageCount=GetterUtil.getInteger(arguments.get("sample.sql.max.wiki.page.count"));
  int optimizeBufferSize=GetterUtil.getInteger(arguments.get("sample.sql.optimize.buffer.size"));
  String outputDir=arguments.get("sample.sql.output.dir");
  boolean outputMerge=GetterUtil.getBoolean(arguments.get("sample.sql.output.merge"));
  new SampleSQLBuilder(arguments,baseDir,dbType,maxBlogsEntryCommentCount,maxBlogsEntryCount,maxDDLRecordCount,maxDDLRecordSetCount,maxDLFileEntryCount,maxDLFileEntrySize,maxDLFolderCount,maxDLFolderDepth,maxGroupCount,maxJournalArticleCount,maxJournalArticleSize,maxMBCategoryCount,maxMBMessageCount,maxMBThreadCount,maxUserCount,maxUserToGroupCount,maxWikiNodeCount,maxWikiPageCommentCount,maxWikiPageCount,optimizeBufferSize,outputDir,outputMerge);
}

{
  final Writer writer=createUnsyncBufferedWriter(charPipe.getWriter());
  Thread thread=new Thread(){
    @Override public void run(){
      try {
        _writerSampleSQL=new UnsyncTeeWriter(writer,createFileWriter(_outputDir + "/sample.sql"));
        createSample();
        _writerSampleSQL.close();
        charPipe.close();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    protected void createSample() throws Exception {
      _writerBlogsCSV=getWriter("blogs.csv");
      _writerCompanyCSV=getWriter("company.csv");
      _writerDocumentLibraryCSV=getWriter("document_library.csv");
      _writerDynamicDataListsCSV=getWriter("dynamic_data_lists.csv");
      _writerLayoutCSV=getWriter("layout.csv");
      _writerMessageBoardsCSV=getWriter("message_boards.csv");
      _writerRepositoryCSV=getWriter("repository.csv");
      _writerUserCSV=getWriter("user.csv");
      _writerWikiCSV=getWriter("wiki.csv");
      Map<String,Object> context=getContext();
      processTemplate(_tplSample,context);
      _writerBlogsCSV.close();
      _writerCompanyCSV.close();
      _writerDocumentLibraryCSV.close();
      _writerDynamicDataListsCSV.close();
      _writerLayoutCSV.close();
      _writerMessageBoardsCSV.close();
      _writerRepositoryCSV.close();
      _writerUserCSV.close();
      _writerWikiCSV.close();
    }
    protected Writer getWriter(    String fileName) throws Exception {
      return createFileWriter(new File(_outputDir + "/" + fileName));
    }
  }
;
  thread.start();
}

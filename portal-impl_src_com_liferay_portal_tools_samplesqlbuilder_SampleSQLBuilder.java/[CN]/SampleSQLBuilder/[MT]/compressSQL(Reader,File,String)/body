{
  DB db=DBFactoryUtil.getDB(_dbType);
  if (db instanceof MySQLDB) {
    db=new SampleMySQLDB();
  }
  Map<String,StringBundler> insertSQLs=new HashMap<String,StringBundler>();
  Map<String,Writer> insertSQLWriters=new HashMap<String,Writer>();
  List<String> otherSQLs=new ArrayList<String>();
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(reader);
  String s=null;
  while ((s=unsyncBufferedReader.readLine()) != null) {
    s=s.trim();
    if (s.length() > 0) {
      if (s.startsWith("insert into ")) {
        compressInsertSQL(db,directory,s.substring(12),insertSQLs,insertSQLWriters);
      }
 else {
        otherSQLs.add(s);
      }
    }
  }
  unsyncBufferedReader.close();
  for (  Map.Entry<String,StringBundler> entry : insertSQLs.entrySet()) {
    String tableName=entry.getKey();
    StringBundler sb=entry.getValue();
    String sql=db.buildSQL(sb.toString());
    writeToInsertSQLFile(directory,insertSQLWriters,tableName,sql);
    Writer insertSQLWriter=insertSQLWriters.remove(tableName);
    insertSQLWriter.write(";\n");
    insertSQLWriter.close();
  }
  Writer endSQLFileWriter=new FileWriter(new File(directory,endSQLFileName));
  for (  String sql : otherSQLs) {
    sql=db.buildSQL(sql);
    endSQLFileWriter.write(sql);
    endSQLFileWriter.write(StringPool.NEW_LINE);
  }
  endSQLFileWriter.close();
}

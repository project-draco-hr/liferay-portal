{
  try {
    _outputDir=outputDir;
    _outputMerge=outputMerge;
    _dbType=dbType;
    _maxBlogsEntryCommentCount=maxBlogsEntryCommentCount;
    _maxBlogsEntryCount=maxBlogsEntryCount;
    _maxDDLRecordCount=maxDDLRecordCount;
    _maxDDLRecordSetCount=maxDDLRecordSetCount;
    _maxDLFileEntryCount=maxDLFileEntryCount;
    _maxDLFileEntrySize=maxDLFileEntrySize;
    _maxDLFolderCount=maxDLFolderCount;
    _maxDLFolderDepth=maxDLFolderDepth;
    _maxGroupCount=maxGroupCount;
    _maxJournalArticleCount=maxJournalArticleCount;
    _maxMBCategoryCount=maxMBCategoryCount;
    _maxMBMessageCount=maxMBMessageCount;
    _maxMBThreadCount=maxMBThreadCount;
    _maxUserCount=maxUserCount;
    _maxUserToGroupCount=maxUserToGroupCount;
    _maxWikiNodeCount=maxWikiNodeCount;
    _maxWikiPageCommentCount=maxWikiPageCommentCount;
    _maxWikiPageCount=maxWikiPageCount;
    _securityEnabled=securityEnabled;
    int totalMThreadCount=maxMBCategoryCount * maxMBThreadCount;
    int totalMBMessageCount=totalMThreadCount * maxMBMessageCount;
    int counterOffset=_maxGroupCount + (_maxGroupCount * (maxMBCategoryCount + totalMThreadCount + totalMBMessageCount)) + 1;
    _counter=new SimpleCounter(counterOffset);
    _dlDateCounter=new SimpleCounter();
    _permissionCounter=new SimpleCounter();
    _resourceCounter=new SimpleCounter();
    _resourcePermissionCounter=new SimpleCounter();
    _socialActivityCounter=new SimpleCounter();
    _userScreenNameIncrementer=new SimpleCounter();
    _dataFactory=new DataFactory(baseDir,_maxGroupCount,maxJournalArticleSize,_maxUserToGroupCount,_counter,_dlDateCounter,_permissionCounter,_resourceCounter,_resourcePermissionCounter,_socialActivityCounter);
    _db=DBFactoryUtil.getDB(_dbType);
    if (_db instanceof MySQLDB) {
      _db=new SampleMySQLDB();
    }
    FileUtil.delete(_outputDir + "/sample-" + _dbType+ ".sql");
    FileUtil.deltree(_outputDir + "/output");
    _tempDir=new File(_outputDir,"temp");
    _tempDir.mkdirs();
    final CharPipe charPipe=new CharPipe(_PIPE_BUFFER_SIZE);
    generateSQL(charPipe);
    try {
      compressSQL(charPipe.getReader());
      mergeSQL();
    }
  finally {
      FileUtil.deltree(_tempDir);
    }
    StringBundler sb=new StringBundler();
    List<String> keys=ListUtil.fromMapKeys(arguments);
    Collections.sort(keys);
    for (    String key : keys) {
      if (!key.startsWith("sample.sql")) {
        continue;
      }
      String value=arguments.get(key);
      sb.append(key);
      sb.append(StringPool.EQUAL);
      sb.append(value);
      sb.append(StringPool.NEW_LINE);
    }
    FileUtil.write(new File(_outputDir,"benchmarks-actual.properties"),sb.toString());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

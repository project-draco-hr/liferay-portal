{
  String servletContextName=GetterUtil.getString(theme.getServletContextName());
  if (ServletContextPool.get(servletContextName) == null) {
    ServletContextPool.put(servletContextName,servletContext);
  }
  String resourcePath=getResourcePath(theme,path);
  if (!FreeMarkerEngineUtil.resourceExists(resourcePath)) {
    _log.error(resourcePath + " does not exist");
    return null;
  }
  FreeMarkerContext freeMarkerContext=FreeMarkerEngineUtil.getWrappedStandardToolsContext();
  FreeMarkerVariables.insertVariables(freeMarkerContext,request);
  ServletContext themeServletContext=ServletContextPool.get(servletContextName);
  freeMarkerContext.put("themeServletContext",themeServletContext);
  HttpServletResponse response=(HttpServletResponse)pageContext.getResponse();
  Writer writer=null;
  if (write) {
    writer=new UnsyncPrintWriter(pageContext.getOut());
  }
 else {
    writer=new UnsyncStringWriter();
  }
  VelocityTaglib velocityTaglib=new VelocityTaglib(servletContext,request,new PipingServletResponse(response,writer),pageContext);
  request.setAttribute(WebKeys.VELOCITY_TAGLIB,velocityTaglib);
  freeMarkerContext.put("taglibLiferay",velocityTaglib);
  freeMarkerContext.put("theme",velocityTaglib);
  TaglibFactory portalTaglib=new TaglibFactory(servletContext);
  freeMarkerContext.put("PortalJspTagLibs",portalTaglib);
  TaglibFactory themeTaglib=new TaglibFactory(themeServletContext);
  freeMarkerContext.put("ThemeJspTaglibs",themeTaglib);
  ServletContextHashModel servletContextHashModel=new ServletContextHashModel((GenericServlet)pageContext.getPage(),ObjectWrapper.DEFAULT_WRAPPER);
  freeMarkerContext.put("Application",servletContextHashModel);
  HttpRequestHashModel httpRequestHashModel=new HttpRequestHashModel(request,response,ObjectWrapper.DEFAULT_WRAPPER);
  freeMarkerContext.put("Request",httpRequestHashModel);
  FreeMarkerEngineUtil.mergeTemplate(resourcePath,freeMarkerContext,writer);
  if (write) {
    return null;
  }
 else {
    return ((UnsyncStringWriter)writer).toString();
  }
}

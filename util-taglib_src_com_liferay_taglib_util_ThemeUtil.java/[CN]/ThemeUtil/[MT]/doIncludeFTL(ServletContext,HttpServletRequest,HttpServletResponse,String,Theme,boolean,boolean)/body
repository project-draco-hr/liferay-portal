{
  String servletContextName=GetterUtil.getString(theme.getServletContextName());
  if (ServletContextPool.get(servletContextName) == null) {
    ServletContextPool.put(servletContextName,servletContext);
  }
  String portletId=getPortletId(request);
  String resourcePath=theme.getResourcePath(servletContext,portletId,path);
  if (Validator.isNotNull(portletId) && PortletConstants.hasInstanceId(portletId) && !TemplateResourceLoaderUtil.hasTemplateResource(TemplateConstants.LANG_TYPE_FTL,resourcePath)) {
    String rootPortletId=PortletConstants.getRootPortletId(portletId);
    resourcePath=theme.getResourcePath(servletContext,rootPortletId,path);
  }
  if (Validator.isNotNull(portletId) && !TemplateResourceLoaderUtil.hasTemplateResource(TemplateConstants.LANG_TYPE_FTL,resourcePath)) {
    resourcePath=theme.getResourcePath(servletContext,null,path);
  }
  if (!TemplateResourceLoaderUtil.hasTemplateResource(TemplateConstants.LANG_TYPE_FTL,resourcePath)) {
    _log.error(resourcePath + " does not exist");
    return null;
  }
  TemplateResource templateResource=TemplateResourceLoaderUtil.getTemplateResource(TemplateConstants.LANG_TYPE_FTL,resourcePath);
  Template template=TemplateManagerUtil.getTemplate(TemplateConstants.LANG_TYPE_FTL,templateResource,restricted);
  template.prepare(request);
  for (  TemplateContextContributor templateContextContributor : _templateContextContributors) {
    templateContextContributor.prepare(template,request);
  }
  ServletContext themeServletContext=ServletContextPool.get(servletContextName);
  template.put("themeServletContext",themeServletContext);
  Writer writer=null;
  if (write) {
    writer=response.getWriter();
  }
 else {
    writer=new UnsyncStringWriter();
  }
  TemplateManager templateManager=TemplateManagerUtil.getTemplateManager(TemplateConstants.LANG_TYPE_FTL);
  templateManager.addTaglibSupport(template,request,response);
  templateManager.addTaglibTheme(template,"taglibLiferay",request,new PipingServletResponse(response,writer));
  template.put(TemplateConstants.WRITER,writer);
  template.processTemplate(writer);
  if (write) {
    return null;
  }
 else {
    return writer.toString();
  }
}

{
  String ctxName=GetterUtil.getString(theme.getServletContextName());
  if (VelocityContextPool.get(ctxName) == null) {
    VelocityContextPool.put(ctxName,ctx);
  }
  int pos=page.lastIndexOf(StringPool.PERIOD);
  String source=ctxName + VelocityResourceListener.SERVLET_SEPARATOR + theme.getTemplatesPath()+ StringPool.SLASH+ page.substring(0,pos)+ ".vm";
  if (!Velocity.resourceExists(source)) {
    _log.error(source + " does not exist");
    return null;
  }
  Template template=Velocity.getTemplate(source);
  StringWriter sw=new StringWriter();
  VelocityContext vc=new VelocityContext();
  VelocityVariables.insertVariables(vc,ctx,req,pageContext);
  StringServletResponse stringServletResponse=new StringServletResponse((HttpServletResponse)pageContext.getResponse());
  VelocityTaglib velocityTaglib=new VelocityTaglib(ctx,req,stringServletResponse,pageContext);
  vc.put("taglibLiferay",velocityTaglib);
  vc.put("theme",velocityTaglib);
  template.merge(vc,sw);
  String output=sw.toString();
  if (write) {
    pageContext.getOut().print(output);
    return null;
  }
 else {
    return output;
  }
}

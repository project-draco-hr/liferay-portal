{
  long backgroundTaskId=(Long)message.get("backgroundTaskId");
  ServiceContext serviceContext=new ServiceContext();
  BackgroundTaskLocalServiceUtil.updateBackgroundTask(backgroundTaskId,null,BackgroundTaskConstants.STATUS_IN_PROGRESS,serviceContext);
  BackgroundTask backgroundTask=BackgroundTaskLocalServiceUtil.getBackgroundTask(backgroundTaskId);
  int status=backgroundTask.getStatus();
  String statusMessage=null;
  try {
    ClassLoader classLoader=ClassLoaderUtil.getPortalClassLoader();
    String servletContextNames=backgroundTask.getServletContextNames();
    if (Validator.isNotNull(servletContextNames)) {
      classLoader=ClassLoaderUtil.getAggregatePluginsClassLoader(StringUtil.split(servletContextNames),false);
    }
    BackgroundTaskExecutor backgroundTaskExecutor=(BackgroundTaskExecutor)InstanceFactory.newInstance(classLoader,backgroundTask.getTaskExecutorClassName());
    backgroundTaskExecutor=wrapBackgroundTaskExecutor(backgroundTaskExecutor,classLoader);
    backgroundTaskExecutor.execute(backgroundTask);
    status=BackgroundTaskConstants.STATUS_SUCCESSFUL;
  }
 catch (  DuplicateLockException e) {
    status=BackgroundTaskConstants.STATUS_QUEUED;
  }
catch (  Exception e) {
    status=BackgroundTaskConstants.STATUS_FAILED;
    statusMessage="Unable to executed background task: " + StackTraceUtil.getStackTrace(e);
    if (_log.isErrorEnabled()) {
      _log.error("Unable to execute background task",e);
    }
  }
 finally {
    BackgroundTaskLocalServiceUtil.updateBackgroundTask(backgroundTaskId,null,status,statusMessage,serviceContext);
    Message responseMessage=new Message();
    responseMessage.put("backgroundTaskId",backgroundTask.getBackgroundTaskId());
    responseMessage.put("name",backgroundTask.getName());
    responseMessage.put("status",status);
    responseMessage.put("taskExecutorClassName",backgroundTask.getTaskExecutorClassName());
    MessageBusUtil.sendMessage(DestinationNames.BACKGROUND_TASK_STATUS,responseMessage);
  }
}

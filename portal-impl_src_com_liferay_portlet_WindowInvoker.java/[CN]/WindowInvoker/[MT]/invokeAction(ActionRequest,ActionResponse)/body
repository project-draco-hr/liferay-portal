{
  if (isPortletExternal()) {
    ActionRequestImpl actionReqImpl=(ActionRequestImpl)req;
    ActionResponseImpl actionResImpl=(ActionResponseImpl)res;
    try {
      HttpServletRequest request=actionReqImpl.getOriginalHttpServletRequest();
      HttpServletResponse response=actionResImpl.getHttpServletResponse();
      ExecuteActionRequest executeActionRequest=ContainerRequestFactory.createExecuteActionRequest(request,_portletModel,actionReqImpl.getWindowState(),actionReqImpl.getPortletMode(),actionResImpl.getLifecycle(),getPlid(req),_isRemotePortlet);
      populateContainerRequest(request,response,executeActionRequest,actionReqImpl);
      ExecuteActionResponse executeActionResponse=ContainerResponseFactory.createExecuteActionResponse(response);
      ChannelURLType urlType=executeActionRequest.getWindowRequestReader().readURLType(request);
      _container.executeAction(executeActionRequest,executeActionResponse,urlType);
      URL returnURL=executeActionResponse.getRedirectURL();
      if (returnURL != null) {
        actionResImpl.setRedirectLocation(returnURL.toString());
      }
      ChannelMode newPortletWindowMode=executeActionResponse.getNewChannelMode();
      if (newPortletWindowMode != null) {
        actionResImpl.setPortletMode(PortletAppEngineUtils.getPortletMode(newPortletWindowMode));
      }
      ChannelState newWindowState=executeActionResponse.getNewWindowState();
      if (newWindowState != null) {
        actionResImpl.setWindowState(PortletAppEngineUtils.getWindowState(newWindowState));
      }
    }
 catch (    ContentException ce) {
      logError(ce);
      throw new PortletException(ce);
    }
catch (    ContainerException ce) {
      logError(ce);
      throw new PortletException(ce);
    }
catch (    PortalException pe) {
      logError(pe);
      throw new PortletException(pe);
    }
catch (    SystemException se) {
      logError(se);
      throw new PortletException(se);
    }
 finally {
      setPortletAttributes(req,res);
    }
  }
 else {
    invoke(req,res,PortletRequest.ACTION_PHASE);
  }
}

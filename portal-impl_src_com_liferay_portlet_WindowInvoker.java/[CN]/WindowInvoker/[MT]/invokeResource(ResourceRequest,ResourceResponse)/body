{
  if (isPortletExternal()) {
    ResourceRequestImpl resourceReqImpl=(ResourceRequestImpl)req;
    ResourceResponseImpl resourceResImpl=(ResourceResponseImpl)res;
    try {
      HttpServletRequest request=resourceReqImpl.getOriginalHttpServletRequest();
      HttpServletResponse response=resourceResImpl.getHttpServletResponse();
      GetResourceRequest getResourceRequest=ContainerRequestFactory.createGetResourceRequest(request,_portletModel,resourceReqImpl.getWindowState(),resourceReqImpl.getPortletMode(),resourceResImpl.getLifecycle(),getPlid(req),_isRemotePortlet);
      populateContainerRequest(request,response,getResourceRequest,resourceReqImpl);
      GetResourceResponse getResourceResponse=ContainerResponseFactory.createGetResourceResponse(response);
      _container.getResources(getResourceRequest,getResourceResponse);
      String contentType=response.getContentType();
      if (contentType != null)       resourceResImpl.setContentType(contentType);
      StringBuffer buffer=getResourceResponse.getContentAsBuffer();
      byte[] bytes=getResourceResponse.getContentAsBytes();
      if (buffer != null) {
        response.getWriter().print(buffer);
      }
 else       if (bytes != null && bytes.length > 0) {
        response.getOutputStream().write(bytes);
      }
 else {
        response.getWriter().print("");
      }
    }
 catch (    ContentException ce) {
      logError(ce);
      throw new PortletException(ce);
    }
catch (    ContainerException ce) {
      logError(ce);
      throw new PortletException(ce);
    }
catch (    PortalException pe) {
      logError(pe);
      throw new PortletException(pe);
    }
catch (    SystemException se) {
      logError(se);
      throw new PortletException(se);
    }
 finally {
      setPortletAttributes(req,res);
    }
  }
 else {
    invoke(req,res,PortletRequest.RESOURCE_PHASE);
  }
}

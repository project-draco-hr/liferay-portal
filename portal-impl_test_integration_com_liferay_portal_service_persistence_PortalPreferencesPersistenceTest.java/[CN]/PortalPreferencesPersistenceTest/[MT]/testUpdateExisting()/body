{
  long pk=ServiceTestUtil.nextLong();
  PortalPreferences newPortalPreferences=_persistence.create(pk);
  newPortalPreferences.setMvccVersion(ServiceTestUtil.nextLong());
  newPortalPreferences.setOwnerId(ServiceTestUtil.nextLong());
  newPortalPreferences.setOwnerType(ServiceTestUtil.nextInt());
  newPortalPreferences.setPreferences(ServiceTestUtil.randomString());
  _persistence.update(newPortalPreferences);
  PortalPreferences existingPortalPreferences=_persistence.findByPrimaryKey(newPortalPreferences.getPrimaryKey());
  Assert.assertEquals(existingPortalPreferences.getMvccVersion(),newPortalPreferences.getMvccVersion());
  Assert.assertEquals(existingPortalPreferences.getPortalPreferencesId(),newPortalPreferences.getPortalPreferencesId());
  Assert.assertEquals(existingPortalPreferences.getOwnerId(),newPortalPreferences.getOwnerId());
  Assert.assertEquals(existingPortalPreferences.getOwnerType(),newPortalPreferences.getOwnerType());
  Assert.assertEquals(existingPortalPreferences.getPreferences(),newPortalPreferences.getPreferences());
}

{
  String destinationName=GetterUtil.getString(message.getString(SchedulerEngine.DESTINATION_NAME));
  if (destinationName.equals(DestinationNames.SCHEDULER_DISPATCH)) {
    String receiverKey=GetterUtil.getString(message.getString(SchedulerEngine.RECEIVER_KEY));
    if (!receiverKey.equals(_key)) {
      return;
    }
  }
  try {
    _messageListener.receive(message);
  }
 catch (  Exception e) {
    handleException(message,e);
    if (e instanceof MessageListenerException) {
      throw (MessageListenerException)e;
    }
 else {
      throw new MessageListenerException(e);
    }
  }
 finally {
    TriggerState triggerState=null;
    if (message.getBoolean(SchedulerEngine.DISABLE)) {
      triggerState=TriggerState.COMPLETE;
      if (destinationName.equals(DestinationNames.SCHEDULER_DISPATCH)) {
        MessageBusUtil.unregisterMessageListener(destinationName,this);
      }
    }
 else {
      triggerState=TriggerState.NORMAL;
    }
    try {
      SchedulerEngineUtil.auditSchedulerJobs(message,triggerState.toString());
    }
 catch (    Exception e) {
      throw new MessageListenerException(e);
    }
  }
}

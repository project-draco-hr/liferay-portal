{
  if (Validator.isNull(page.getContent())) {
    return Collections.emptyMap();
  }
  Map<String,Boolean> links=new HashMap<String,Boolean>();
  Source source=new Source(page.getContent());
  List<StartTag> startTags=source.getAllStartTags("a");
  for (  StartTag startTag : startTags) {
    String href=startTag.getAttributeValue("href");
    if (Validator.isNull(href)) {
      continue;
    }
    int pos=href.lastIndexOf(_friendlyURLMapping);
    if (pos == -1) {
      continue;
    }
    String friendlyURL=href.substring(pos + _friendlyURLMapping.length());
    if (friendlyURL.endsWith(StringPool.SLASH)) {
      friendlyURL=friendlyURL.substring(0,friendlyURL.length() - 1);
    }
    Map<String,String> routeParameters=new HashMap<String,String>();
    if (!_router.urlToParameters(friendlyURL,routeParameters)) {
      if (_log.isWarnEnabled()) {
        _log.warn("No route could be found to match URL " + friendlyURL);
      }
      continue;
    }
    String title=routeParameters.get("title");
    String nodeName=routeParameters.get("nodeName");
    if (Validator.isNull(title) || Validator.isNull(nodeName)) {
      continue;
    }
    try {
      WikiNodeLocalServiceUtil.getNode(page.getGroupId(),nodeName);
      links.put(title.toLowerCase(),Boolean.TRUE);
    }
 catch (    NoSuchNodeException nsne) {
      if (_log.isWarnEnabled()) {
        _log.warn(nsne.getMessage());
      }
    }
  }
  return links;
}

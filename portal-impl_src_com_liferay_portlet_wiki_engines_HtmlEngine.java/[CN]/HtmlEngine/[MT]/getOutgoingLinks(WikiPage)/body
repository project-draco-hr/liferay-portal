{
  if (Validator.isNull(page.getContent())) {
    return Collections.emptyMap();
  }
  try {
    _check(page);
    Source source=new Source(page.getContent());
    List<StartTag> tags=source.getAllStartTags("a");
    Map<String,Boolean> links=new HashMap<String,Boolean>();
    for (    StartTag tag : tags) {
      String targetUri=tag.getAttributeValue("href");
      if (Validator.isNotNull(targetUri)) {
        int indexOfFriendlyURLPath=targetUri.lastIndexOf(_friendlyURLMapping);
        String friendlyURLPath=targetUri.substring(indexOfFriendlyURLPath + _friendlyURLMapping.length());
        if (friendlyURLPath.endsWith(StringPool.SLASH)) {
          friendlyURLPath=friendlyURLPath.substring(0,friendlyURLPath.length() - 1);
        }
        Map<String,String> routeParameters=new HashMap<String,String>();
        if (!_router.urlToParameters(friendlyURLPath,routeParameters)) {
          if (_log.isWarnEnabled()) {
            _log.warn("No route could be found to match URL " + friendlyURLPath);
          }
        }
 else {
          String title=routeParameters.get("title");
          String nodeName=routeParameters.get("nodeName");
          if (Validator.isNotNull(title) && Validator.isNotNull(nodeName)) {
            try {
              WikiNodeLocalServiceUtil.getNode(page.getGroupId(),nodeName);
              links.put(title.toLowerCase(),Boolean.TRUE);
            }
 catch (            NoSuchNodeException nsne) {
              if (_log.isWarnEnabled()) {
                _log.warn("There is no wiki node " + "with groupId" + page.getGroupId() + " and nodeName '"+ nodeName);
              }
            }
          }
        }
      }
    }
    return links;
  }
 catch (  Exception e) {
    throw new PageContentException(e);
  }
}

{
  long companyId=message.getLong("companyId");
  long userId=message.getLong("userId");
  String categoryIds=message.getString("categoryIds");
  String threadId=message.getString("threadId");
  String fromName=message.getString("fromName");
  String fromAddress=message.getString("fromAddress");
  String subject=message.getString("subject");
  String body=message.getString("body");
  String replyToAddress=message.getString("replyToAddress");
  String mailId=message.getString("mailId");
  String inReplyTo=message.getString("inReplyTo");
  boolean htmlFormat=message.getBoolean("htmlFormat");
  boolean sourceMailingList=message.getBoolean("sourceMailingList");
  subject=subject + StringPool.SPACE + mailId;
  Set<Long> sent=new HashSet<Long>();
  if (_log.isInfoEnabled()) {
    _log.info("Sending notifications for {mailId=" + mailId + ", threadId="+ threadId+ ", categoryIds="+ categoryIds+ "}");
  }
  List<Subscription> subscriptions=SubscriptionLocalServiceUtil.getSubscriptions(companyId,MBThread.class.getName(),GetterUtil.getLong(threadId));
  sendEmail(userId,fromName,fromAddress,subject,body,subscriptions,sent,replyToAddress,mailId,inReplyTo,htmlFormat);
  long[] categoryIdsArray=StringUtil.split(categoryIds,0L);
  for (  long categoryId : categoryIdsArray) {
    subscriptions=SubscriptionLocalServiceUtil.getSubscriptions(companyId,MBCategory.class.getName(),categoryId);
    sendEmail(userId,fromName,fromAddress,subject,body,subscriptions,sent,replyToAddress,mailId,inReplyTo,htmlFormat);
  }
  if (!sourceMailingList) {
    for (    long categoryId : categoryIdsArray) {
      try {
        notifyMailingList(subject,body,replyToAddress,mailId,inReplyTo,htmlFormat,categoryId);
      }
 catch (      NoSuchMailingListException nsmle) {
      }
    }
  }
  if (_log.isInfoEnabled()) {
    _log.info("Finished sending notifications");
  }
}

{
  boolean accept=ParamUtil.getBoolean(actionRequest,"accept",false);
  String key=ParamUtil.getString(actionRequest,"key");
  long userId=PortalUtil.getUserId(actionRequest);
  try {
    if (accept) {
      MembershipInvitationLocalServiceUtil.accept(key,userId);
    }
 else {
      MembershipInvitationLocalServiceUtil.decline(key,userId);
    }
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    if (Validator.isNotNull(redirect)) {
      actionResponse.sendRedirect(redirect);
    }
 else {
      actionResponse.sendRedirect(StringPool.SLASH);
    }
  }
 catch (  Exception e) {
    if (e instanceof MembershipInvitationAlreadyUsedException || e instanceof MembershipInvitationUserNotInvitedException || e instanceof NoSuchMembershipInvitationException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
      actionResponse.setWindowState(WindowState.MAXIMIZED);
    }
 else {
      throw e;
    }
  }
}

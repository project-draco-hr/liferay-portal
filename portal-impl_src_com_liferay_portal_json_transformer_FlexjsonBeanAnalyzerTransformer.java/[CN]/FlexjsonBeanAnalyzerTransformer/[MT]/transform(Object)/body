{
  Class type=null;
  if (object instanceof Class) {
    type=(Class)object;
  }
 else {
    type=object.getClass();
  }
  JSONContext context=getContext();
  Path contextPath=context.getPath();
  String path=getPath();
  addIncludesAndExcludesForType(type,_pathExpressions,path);
  BeanAnalyzer analyzer=BeanAnalyzer.analyze(type);
  for (  BeanProperty prop : analyzer.getProperties()) {
    String name=prop.getName();
    if (name.equals("class")) {
      continue;
    }
    contextPath.enqueue(name);
    if (getContext().isIncluded(prop) && prop.isReadable()) {
      Map<String,String> propertyMap=new LinkedHashMap<String,String>();
      propertyMap.put("type",getTypeName(prop.getPropertyType()));
      _propertiesMap.put(name,propertyMap);
    }
    contextPath.pop();
  }
}

{
  Class<?> type=null;
  if (object instanceof Class) {
    type=(Class<?>)object;
  }
 else {
    type=object.getClass();
  }
  addExcludesAndIncludes(type,_pathExpressions,getPath());
  JSONContext jsonContext=getContext();
  Path path=jsonContext.getPath();
  BeanAnalyzer beanAnalyzer=BeanAnalyzer.analyze(type);
  for (  BeanProperty beanProperty : beanAnalyzer.getProperties()) {
    String name=beanProperty.getName();
    if (name.equals("class")) {
      continue;
    }
    path.enqueue(name);
    if (jsonContext.isIncluded(beanProperty) && beanProperty.isReadable()) {
      Map<String,String> properties=new LinkedHashMap<String,String>();
      properties.put("type",getTypeName(beanProperty.getPropertyType()));
      _propertiesMap.put(name,properties);
    }
    path.pop();
  }
}

{
  NavBarTag navBarTag=(NavBarTag)findAncestorWithClass(this,NavBarTag.class);
  if ((navBarTag != null) && (!_calledCollapsibleSetter || getCollapsible())) {
    setCollapsible(true);
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    StringBundler sb=navBarTag.getResponsiveButtonsSB();
    sb.append("<a class=\"btn navbar-btn navbar-toggle");
    String cssClass=getCssClass();
    if (Validator.isNotNull(cssClass)) {
      String[] cssClassParts=StringUtil.split(cssClass,CharPool.SPACE);
      for (int i=0; i < cssClassParts.length; i++) {
        sb.append(StringPool.SPACE);
        sb.append(cssClassParts[i]);
        sb.append("-btn");
      }
    }
    if (_hasSearchResults()) {
      sb.append(" hide");
    }
    sb.append("\" id=\"");
    sb.append(_getNamespacedId());
    sb.append("NavbarBtn\" ");
    sb.append("data-navId=\"");
    sb.append(_getNamespacedId());
    sb.append("\" tabindex=\"0\">");
    String icon=getIcon();
    if (Validator.isNull(icon)) {
      sb.append("<i class=\"icon-reorder\"></i>");
    }
 else     if (icon.equals("user") && themeDisplay.isSignedIn()) {
      try {
        User user=themeDisplay.getUser();
        ResourceBundle resourceBundle=TagResourceBundleUtil.getResourceBundle(pageContext);
        sb.append("<img alt=\"");
        sb.append(LanguageUtil.get(resourceBundle,"my-account"));
        sb.append("\" class=\"user-avatar-image\" ");
        sb.append("src=\"");
        sb.append(user.getPortraitURL(themeDisplay));
        sb.append("\">");
      }
 catch (      Exception e) {
        throw new JspException(e);
      }
    }
 else {
      sb.append("<i class=\"icon-");
      sb.append(icon);
      sb.append("\"></i>");
    }
    sb.append("</a>");
  }
  return super.doStartTag();
}

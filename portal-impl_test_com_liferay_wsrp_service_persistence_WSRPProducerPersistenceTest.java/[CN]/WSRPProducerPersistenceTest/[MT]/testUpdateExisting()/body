{
  long pk=nextLong();
  WSRPProducer newWSRPProducer=_persistence.create(pk);
  newWSRPProducer.setPortalId(randomString());
  newWSRPProducer.setStatus(randomBoolean());
  newWSRPProducer.setNamespace(randomString());
  newWSRPProducer.setInstanceName(randomString());
  newWSRPProducer.setRequiresRegistration(randomBoolean());
  newWSRPProducer.setSupportsInbandRegistration(randomBoolean());
  newWSRPProducer.setVersion(randomString());
  newWSRPProducer.setOfferedPortlets(randomString());
  newWSRPProducer.setProducerProfileMap(randomString());
  newWSRPProducer.setRegistrationProperties(randomString());
  newWSRPProducer.setRegistrationValidatorClass(randomString());
  _persistence.update(newWSRPProducer,false);
  WSRPProducer existingWSRPProducer=_persistence.findByPrimaryKey(newWSRPProducer.getPrimaryKey());
  assertEquals(existingWSRPProducer.getProducerId(),newWSRPProducer.getProducerId());
  assertEquals(existingWSRPProducer.getPortalId(),newWSRPProducer.getPortalId());
  assertEquals(existingWSRPProducer.getStatus(),newWSRPProducer.getStatus());
  assertEquals(existingWSRPProducer.getNamespace(),newWSRPProducer.getNamespace());
  assertEquals(existingWSRPProducer.getInstanceName(),newWSRPProducer.getInstanceName());
  assertEquals(existingWSRPProducer.getRequiresRegistration(),newWSRPProducer.getRequiresRegistration());
  assertEquals(existingWSRPProducer.getSupportsInbandRegistration(),newWSRPProducer.getSupportsInbandRegistration());
  assertEquals(existingWSRPProducer.getVersion(),newWSRPProducer.getVersion());
  assertEquals(existingWSRPProducer.getOfferedPortlets(),newWSRPProducer.getOfferedPortlets());
  assertEquals(existingWSRPProducer.getProducerProfileMap(),newWSRPProducer.getProducerProfileMap());
  assertEquals(existingWSRPProducer.getRegistrationProperties(),newWSRPProducer.getRegistrationProperties());
  assertEquals(existingWSRPProducer.getRegistrationValidatorClass(),newWSRPProducer.getRegistrationValidatorClass());
}

{
  if (!password1.equals(password2)) {
    throw new UserPasswordException(UserPasswordException.PASSWORDS_DO_NOT_MATCH);
  }
  if (passwordPolicy.getCheckSyntax()) {
    if (!passwordPolicy.getAllowDictionaryWords() && WordsUtil.isDictionaryWord(password1)) {
      throw new UserPasswordException(UserPasswordException.PASSWORD_CONTAINS_TRIVIAL_WORDS);
    }
    if (password1.length() < passwordPolicy.getMinLength()) {
      throw new UserPasswordException(UserPasswordException.PASSWORD_LENGTH);
    }
  }
  if (!passwordPolicy.getChangeable()) {
    throw new UserPasswordException(UserPasswordException.PASSWORD_NOT_CHANGEABLE);
  }
  if (userId != 0) {
    if (passwordPolicy.getChangeable()) {
      User user=UserLocalServiceUtil.getUserById(userId);
      Date passwordModfiedDate=user.getPasswordModifiedDate();
      if (passwordModfiedDate != null) {
        Date now=new Date();
        long elapsedTime=now.getTime() - passwordModfiedDate.getTime();
        if (elapsedTime < passwordPolicy.getMinAge() * 1000) {
          throw new UserPasswordException(UserPasswordException.PASSWORD_TOO_YOUNG);
        }
      }
    }
    if (PasswordTrackerLocalServiceUtil.isSameAsCurrentPassword(userId,password1)) {
      throw new UserPasswordException(UserPasswordException.PASSWORD_SAME_AS_CURRENT);
    }
 else     if (!PasswordTrackerLocalServiceUtil.isValidPassword(userId,password1)) {
      throw new UserPasswordException(UserPasswordException.PASSWORD_ALREADY_USED);
    }
  }
}

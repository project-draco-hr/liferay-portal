{
  int alphanumericActualMinLength=passwordPolicy.getMinLowerCase() + passwordPolicy.getMinNumbers() + passwordPolicy.getMinUpperCase();
  int alphanumericMinLength=Math.max(passwordPolicy.getMinAlphanumeric(),alphanumericActualMinLength);
  int passwordMinLength=Math.max(passwordPolicy.getMinLength(),alphanumericMinLength + passwordPolicy.getMinSymbols());
  StringBundler sb=new StringBundler(6);
  if (passwordPolicy.getMinLowerCase() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinLowerCase(),_lowerCaseGeneratorCharsetArray));
  }
  if (passwordPolicy.getMinNumbers() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinNumbers(),_numbersGeneratorCharsetArray));
  }
  if (passwordPolicy.getMinSymbols() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinSymbols(),_symbolsGeneratorCharsetArray));
  }
  if (passwordPolicy.getMinUpperCase() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinUpperCase(),_upperCaseGeneratorCharsetArray));
  }
  if (alphanumericMinLength > alphanumericActualMinLength) {
    int count=alphanumericMinLength - alphanumericActualMinLength;
    sb.append(getRandomString(count,_alphanumericGeneratorCharsetArray));
  }
  if (passwordMinLength > (alphanumericMinLength + passwordPolicy.getMinSymbols())) {
    int count=passwordMinLength - (alphanumericMinLength + passwordPolicy.getMinSymbols());
    sb.append(PwdGenerator.getPassword(_completeGeneratorCharset,count));
  }
  if (sb.index() == 0) {
    sb.append(PwdGenerator.getPassword(_completeGeneratorCharset,PropsValues.PASSWORDS_DEFAULT_POLICY_MIN_LENGTH));
  }
  return RandomUtil.shuffle(new SecureRandom(),sb.toString());
}

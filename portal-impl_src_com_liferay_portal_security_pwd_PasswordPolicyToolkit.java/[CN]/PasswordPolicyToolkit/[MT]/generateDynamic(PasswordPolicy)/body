{
  int alphanumericMinLength=Math.max(passwordPolicy.getMinAlphanumeric(),passwordPolicy.getMinLowerCase() + passwordPolicy.getMinNumbers() + passwordPolicy.getMinUpperCase());
  int passwordMinLength=Math.max(passwordPolicy.getMinLength(),alphanumericMinLength + passwordPolicy.getMinSymbols());
  StringBundler sb=new StringBundler(passwordMinLength);
  if (passwordPolicy.getMinLowerCase() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinLowerCase(),_lowerCaseCharsetArray));
  }
  if (passwordPolicy.getMinNumbers() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinNumbers(),_numbersCharsetArray));
  }
  if (passwordPolicy.getMinSymbols() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinSymbols(),_symbolsCharsetArray));
  }
  if (passwordPolicy.getMinUpperCase() > 0) {
    sb.append(getRandomString(passwordPolicy.getMinUpperCase(),_upperCaseCharsetArray));
  }
  if (alphanumericMinLength > passwordPolicy.getMinAlphanumeric()) {
    int count=alphanumericMinLength - passwordPolicy.getMinAlphanumeric();
    sb.append(getRandomString(count,_alphanumericCharsetArray));
  }
  if (passwordMinLength > (alphanumericMinLength + passwordPolicy.getMinSymbols())) {
    int count=passwordMinLength - (alphanumericMinLength + passwordPolicy.getMinSymbols());
    sb.append(PwdGenerator.getPassword(_completeCharset,count));
  }
  Randomizer randomizer=Randomizer.getInstance();
  return randomizer.randomize(sb.toString());
}

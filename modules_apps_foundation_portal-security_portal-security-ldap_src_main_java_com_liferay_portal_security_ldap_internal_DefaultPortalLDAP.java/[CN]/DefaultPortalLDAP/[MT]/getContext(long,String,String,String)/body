{
  SystemLDAPConfiguration systemLDAPConfiguration=_systemLDAPConfigurationProvider.getConfiguration(companyId);
  Properties environmentProperties=new Properties();
  environmentProperties.put(Context.INITIAL_CONTEXT_FACTORY,systemLDAPConfiguration.factoryInitial());
  environmentProperties.put(Context.PROVIDER_URL,providerURL);
  environmentProperties.put(Context.REFERRAL,systemLDAPConfiguration.referral());
  environmentProperties.put(Context.SECURITY_CREDENTIALS,credentials);
  environmentProperties.put(Context.SECURITY_PRINCIPAL,principal);
  String[] connectionProperties=systemLDAPConfiguration.connectionProperties();
  for (  String connectionProperty : connectionProperties) {
    String[] connectionPropertySplit=StringUtil.split(connectionProperty,CharPool.EQUAL);
    if (connectionPropertySplit.length != 2) {
      if (_log.isWarnEnabled()) {
        _log.warn("Invalid LDAP connection property: " + connectionProperty);
        continue;
      }
    }
    environmentProperties.put(connectionPropertySplit[0],connectionPropertySplit[1]);
  }
  if (_log.isDebugEnabled()) {
    String debugString=MapUtil.toString(environmentProperties,null,Context.SECURITY_PRINCIPAL + "|" + Context.SECURITY_CREDENTIALS);
    _log.debug(debugString);
  }
  LdapContext ldapContext=null;
  try {
    ldapContext=new InitialLdapContext(environmentProperties,null);
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to bind to the LDAP server");
    }
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
  }
  return ldapContext;
}

{
  Properties userMappings=_ldapSettings.getUserMappings(ldapServerId,companyId);
  Properties userExpandoMappings=_ldapSettings.getUserExpandoMappings(ldapServerId,companyId);
  PropertiesUtil.merge(userMappings,userExpandoMappings);
  Properties contactMappings=_ldapSettings.getContactMappings(ldapServerId,companyId);
  Properties contactExpandoMappings=_ldapSettings.getContactExpandoMappings(ldapServerId,companyId);
  PropertiesUtil.merge(contactMappings,contactExpandoMappings);
  PropertiesUtil.merge(userMappings,contactMappings);
  String[] mappedUserAttributeIds=ArrayUtil.toStringArray(userMappings.values().toArray(new Object[userMappings.size()]));
  Attributes attributes=_getAttributes(ldapContext,fullDistinguishedName,mappedUserAttributeIds);
  if (_log.isDebugEnabled()) {
    if ((attributes == null) || (attributes.size() == 0)) {
      _log.debug("No LDAP user attributes found for:: " + fullDistinguishedName);
    }
 else {
      for (      String attributeId : mappedUserAttributeIds) {
        Attribute attribute=attributes.get(attributeId);
        if (attribute == null) {
          continue;
        }
        String attributeID=StringUtil.toLowerCase(attribute.getID());
        if (attributeID.indexOf("password") > -1) {
          Attribute clonedAttribute=(Attribute)attribute.clone();
          clonedAttribute.clear();
          clonedAttribute.add("********");
          _log.debug("LDAP user attribute " + clonedAttribute.toString());
          continue;
        }
        _log.debug("LDAP user attribute " + attribute.toString());
      }
    }
  }
  return attributes;
}

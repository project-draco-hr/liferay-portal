{
  for (  Map.Entry<String,Map<Object,ConcurrentCounter>> counterCacheEntry : _counterCaches.entrySet()) {
    String key=counterCacheEntry.getKey();
    String serviceName=StringUtil.extractFirst(key,StringPool.POUND);
    String updateMethodName=StringUtil.extractLast(key,StringPool.POUND);
    if ("none".equalsIgnoreCase(updateMethodName)) {
      continue;
    }
    Object service=PortalBeanLocatorUtil.locate(serviceName);
    for (    Method method : service.getClass().getMethods()) {
      if (method.getName().equalsIgnoreCase(updateMethodName)) {
        for (        Map.Entry<Object,ConcurrentCounter> counterEntry : counterCacheEntry.getValue().entrySet()) {
          Number count=counterEntry.getValue().getValue();
          if (count.doubleValue() > 0) {
            Object[] args=null;
            if (count instanceof SocialEquity) {
              args=new Object[]{counterEntry.getKey(),((SocialEquity)count).getK(),((SocialEquity)count).getB()};
            }
 else {
              args=new Object[]{counterEntry.getKey(),count};
            }
            try {
              method.invoke(service,args);
            }
 catch (            Exception e) {
              _log.error("Cannot flush buffered counter " + "value to the database",e);
            }
            counterEntry.getValue().decrement(count);
          }
        }
      }
    }
  }
}

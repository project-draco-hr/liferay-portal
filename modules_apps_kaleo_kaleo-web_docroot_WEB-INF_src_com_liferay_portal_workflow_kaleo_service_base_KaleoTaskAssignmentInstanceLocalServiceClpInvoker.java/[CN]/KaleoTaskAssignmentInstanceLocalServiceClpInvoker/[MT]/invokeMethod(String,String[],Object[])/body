{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.addKaleoTaskAssignmentInstance((com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignmentInstance)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.createKaleoTaskAssignmentInstance(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.deleteKaleoTaskAssignmentInstance(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.deleteKaleoTaskAssignmentInstance((com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignmentInstance)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.fetchKaleoTaskAssignmentInstance(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getKaleoTaskAssignmentInstance(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getKaleoTaskAssignmentInstances(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getKaleoTaskAssignmentInstancesCount();
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.updateKaleoTaskAssignmentInstance((com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignmentInstance)arguments[0]);
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    KaleoTaskAssignmentInstanceLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName111.equals(name) && Arrays.deepEquals(_methodParameterTypes111,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.addKaleoTaskAssignmentInstance(((Long)arguments[0]).longValue(),(com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[1],(java.lang.String)arguments[2],((Long)arguments[3]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName112.equals(name) && Arrays.deepEquals(_methodParameterTypes112,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.addTaskAssignmentInstances((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0],(java.util.Collection<com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignment>)arguments[1],(java.util.Map<java.lang.String,java.io.Serializable>)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName113.equals(name) && Arrays.deepEquals(_methodParameterTypes113,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.assignKaleoTaskAssignmentInstance((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0],(java.lang.String)arguments[1],((Long)arguments[2]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName114.equals(name) && Arrays.deepEquals(_methodParameterTypes114,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.completeKaleoTaskInstanceToken(((Long)arguments[0]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName115.equals(name) && Arrays.deepEquals(_methodParameterTypes115,parameterTypes)) {
    KaleoTaskAssignmentInstanceLocalServiceUtil.deleteCompanyKaleoTaskAssignmentInstances(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName116.equals(name) && Arrays.deepEquals(_methodParameterTypes116,parameterTypes)) {
    KaleoTaskAssignmentInstanceLocalServiceUtil.deleteKaleoDefinitionKaleoTaskAssignmentInstances(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName117.equals(name) && Arrays.deepEquals(_methodParameterTypes117,parameterTypes)) {
    KaleoTaskAssignmentInstanceLocalServiceUtil.deleteKaleoInstanceKaleoTaskAssignmentInstances(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName118.equals(name) && Arrays.deepEquals(_methodParameterTypes118,parameterTypes)) {
    KaleoTaskAssignmentInstanceLocalServiceUtil.deleteKaleoTaskAssignmentInstances((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0]);
    return null;
  }
  if (_methodName119.equals(name) && Arrays.deepEquals(_methodParameterTypes119,parameterTypes)) {
    return KaleoTaskAssignmentInstanceLocalServiceUtil.getKaleoTaskAssignmentInstances(((Long)arguments[0]).longValue());
  }
  throw new UnsupportedOperationException();
}

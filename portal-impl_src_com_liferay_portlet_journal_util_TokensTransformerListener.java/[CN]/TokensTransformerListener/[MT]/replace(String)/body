{
  Map<String,String> tokens=getTokens();
  Set<Map.Entry<String,String>> tokensSet=tokens.entrySet();
  if (tokensSet.size() == 0) {
    return s;
  }
  List<String> escapedKeysList=new ArrayList<String>();
  List<String> escapedValuesList=new ArrayList<String>();
  List<String> keysList=new ArrayList<String>();
  List<String> valuesList=new ArrayList<String>();
  List<String> tempEscapedKeysList=new ArrayList<String>();
  List<String> tempEscapedValuesList=new ArrayList<String>();
  for (  Map.Entry<String,String> entry : tokensSet) {
    String key=entry.getKey();
    String value=GetterUtil.getString(entry.getValue());
    if (Validator.isNotNull(key)) {
      String escapedKey=StringPool.AT + StringPool.AT + key+ StringPool.AT+ StringPool.AT;
      String actualKey=StringPool.AT + key + StringPool.AT;
      String tempEscapedKey=TEMP_ESCAPED_AT_OPEN + key + TEMP_ESCAPED_AT_CLOSE;
      escapedKeysList.add(escapedKey);
      escapedValuesList.add(tempEscapedKey);
      keysList.add(actualKey);
      valuesList.add(value);
      tempEscapedKeysList.add(tempEscapedKey);
      tempEscapedValuesList.add(actualKey);
    }
  }
  s=StringUtil.replace(s,escapedKeysList.toArray(new String[escapedKeysList.size()]),escapedValuesList.toArray(new String[escapedValuesList.size()]));
  s=StringUtil.replace(s,keysList.toArray(new String[keysList.size()]),valuesList.toArray(new String[valuesList.size()]));
  s=StringUtil.replace(s,tempEscapedKeysList.toArray(new String[tempEscapedKeysList.size()]),tempEscapedValuesList.toArray(new String[tempEscapedValuesList.size()]));
  return s;
}

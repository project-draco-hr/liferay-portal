{
  Layout layout=addLayout();
  long companyId=TestPropsValues.getCompanyId();
  long userId=TestPropsValues.getUserId();
  LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
  Map<Long,String[]> roleIdsToActionIds=new HashMap<Long,String[]>();
  Role role=RoleLocalServiceUtil.getRole(companyId,RoleConstants.GUEST);
  roleIdsToActionIds.put(role.getRoleId(),new String[]{ActionKeys.CONFIGURATION});
  Portlet portlet=null;
  String[] portletIds=_PORTLET_IDS;
  for (  String oldPortletId : portletIds) {
    String portletId=getPortletId(oldPortletId);
    portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
    layoutTypePortlet.addPortletId(userId,portletId,false);
    addPortletPreferences(layout,portletId);
    String portletPrimaryKey=PortletPermissionUtil.getPrimaryKey(layout.getPlid(),portletId);
    ResourcePermissionServiceUtil.setIndividualResourcePermissions(layout.getGroupId(),companyId,oldPortletId,portletPrimaryKey,roleIdsToActionIds);
    PortletLocalServiceUtil.destroyPortlet(portlet);
  }
  LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getTypeSettings());
  doUpgrade();
  CacheRegistryUtil.clear();
  layout=LayoutLocalServiceUtil.getLayout(layout.getPlid());
  layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
  for (  String portletId : portletIds) {
    String newRootPortletId=portletId;
    if (_testInstanceable) {
      newRootPortletId+="_test";
    }
    String newPortletId=getNewPortletId(layoutTypePortlet,newRootPortletId);
    portlet.setCompanyId(companyId);
    portlet.setPortletId(newPortletId);
    List<String> portletActions=ResourceActionsUtil.getPortletResourceActions(newRootPortletId);
    ResourceActionLocalServiceUtil.checkResourceActions(newRootPortletId,portletActions);
    PortletLocalServiceUtil.checkPortlet(portlet);
    Assert.assertTrue(layoutTypePortlet.hasPortletId(newPortletId));
    String portletPrimaryKey=PortletPermissionUtil.getPrimaryKey(layout.getPlid(),newPortletId);
    boolean hasViewPermission=ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,newRootPortletId,ResourceConstants.SCOPE_INDIVIDUAL,portletPrimaryKey,role.getRoleId(),ActionKeys.VIEW);
    Assert.assertFalse(hasViewPermission);
    boolean hasConfigurationPermission=ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,newRootPortletId,ResourceConstants.SCOPE_INDIVIDUAL,portletPrimaryKey,role.getRoleId(),ActionKeys.CONFIGURATION);
    Assert.assertTrue(hasConfigurationPermission);
  }
  GroupLocalServiceUtil.deleteGroup(layout.getGroup());
}

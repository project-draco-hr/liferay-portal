{
  Layout layout=addLayout();
  LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
  layoutTypePortlet.addPortletId(TestPropsValues.getUserId(),_OLD_PORTLET_ID);
  LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getTypeSettings());
  addPortletPreferences(layout,_OLD_PORTLET_ID);
  Map<Long,String[]> roleIdsToActionIds=new HashMap<Long,String[]>();
  Role role=RoleLocalServiceUtil.getRole(TestPropsValues.getCompanyId(),RoleConstants.GUEST);
  roleIdsToActionIds.put(role.getRoleId(),new String[]{ActionKeys.CONFIGURATION});
  ResourcePermissionServiceUtil.setIndividualResourcePermissions(layout.getGroupId(),TestPropsValues.getCompanyId(),_OLD_ROOT_PORTLET_ID,_OLD_PORTLET_ID,roleIdsToActionIds);
  Portlet portlet=PortletLocalServiceUtil.getPortletById(_OLD_ROOT_PORTLET_ID);
  PortletLocalServiceUtil.destroyPortlet(portlet);
  doUpgrade();
  CacheRegistryUtil.clear();
  portlet.setCompanyId(TestPropsValues.getCompanyId());
  portlet.setPortletId(_NEW_ROOT_PORTLET_ID);
  List<String> portletActions=ResourceActionsUtil.getPortletResourceActions(portlet.getPortletId());
  ResourceActionLocalServiceUtil.checkResourceActions(portlet.getPortletId(),portletActions);
  PortletLocalServiceUtil.checkPortlet(portlet);
  layout=LayoutLocalServiceUtil.getLayout(layout.getPlid());
  layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
  Assert.assertTrue(layoutTypePortlet.hasPortletId(_NEW_PORTLET_ID));
  boolean hasViewPermission=ResourcePermissionLocalServiceUtil.hasResourcePermission(TestPropsValues.getCompanyId(),_NEW_ROOT_PORTLET_ID,ResourceConstants.SCOPE_INDIVIDUAL,_NEW_PORTLET_ID,role.getRoleId(),ActionKeys.VIEW);
  Assert.assertFalse(hasViewPermission);
  boolean hasConfigurationPermission=ResourcePermissionLocalServiceUtil.hasResourcePermission(TestPropsValues.getCompanyId(),_NEW_ROOT_PORTLET_ID,ResourceConstants.SCOPE_INDIVIDUAL,_NEW_PORTLET_ID,role.getRoleId(),ActionKeys.CONFIGURATION);
  Assert.assertTrue(hasConfigurationPermission);
  GroupLocalServiceUtil.deleteGroup(layout.getGroup());
}

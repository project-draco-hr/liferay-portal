{
  String propertiesFileString=_fileUtil.read(propertiesFile);
  String[] sectionStrings=propertiesFileString.split("\n\n");
  List<PropertiesSection> propertiesSections=new ArrayList<PropertiesSection>(sectionStrings.length);
  for (  String sectionString : sectionStrings) {
    sectionString=StringUtil.trimLeading(sectionString,CharPool.SPACE);
    PropertiesSection propertiesSection=new PropertiesSection(sectionString);
    String sectionText=propertiesSection.getText();
    String[] sectionLines=sectionText.split(StringPool.NEW_LINE);
    if (sectionString.startsWith("##")) {
      int lineCount=_getLineCount(sectionString);
      if (lineCount == 3) {
        propertiesSection.setTitle(_extractTitle(sectionLines));
        propertiesSections.add(propertiesSection);
      }
 else       if (lineCount > 3) {
        propertiesSection.setComments(_extractComments(sectionLines));
        propertiesSections.add(propertiesSection);
      }
 else {
        StringBundler sb=new StringBundler(8);
        sb.append("Error: PropertiesSection should consist of 3 ");
        sb.append("or more lines:");
        sb.append(StringPool.NEW_LINE);
        sb.append("##");
        sb.append(StringPool.NEW_LINE);
        sb.append("## Comment(s)");
        sb.append(StringPool.NEW_LINE);
        sb.append("##");
        System.out.println(sb.toString());
        return null;
      }
    }
 else {
      propertiesSection.setDefaultProperties(_extractDefaultProperties(sectionLines));
      propertiesSection.setExampleProperties(_extractExampleProperties(sectionLines));
      propertiesSection.setPropertyComments(_extractPropertyComments(sectionLines));
      propertiesSections.add(propertiesSection);
    }
  }
  return propertiesSections;
}

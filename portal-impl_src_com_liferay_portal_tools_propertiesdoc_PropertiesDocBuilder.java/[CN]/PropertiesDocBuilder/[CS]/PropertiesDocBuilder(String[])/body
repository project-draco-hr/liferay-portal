{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  String propertiesDestDir=GetterUtil.getString(arguments.get("properties.dest.dir"));
  String propertiesFileName=GetterUtil.getString(arguments.get("properties.file"));
  String title=GetterUtil.getString(arguments.get("properties.title"));
  boolean toc=GetterUtil.getBoolean(arguments.get("properties.toc"));
  System.out.println("Converting " + propertiesFileName + " to HTML");
  File propertiesFile=new File(propertiesFileName);
  Map<String,Object> context=new HashMap<String,Object>();
  context.put("pageTitle",title);
  int pos=propertiesFileName.lastIndexOf(StringPool.SLASH);
  if (pos != -1) {
    propertiesFileName=propertiesFileName.substring(pos + 1);
  }
  context.put("propertiesFileName",propertiesFileName);
  List<PropertiesSection> propertiesSections=getPropertiesSections(propertiesFile);
  if (propertiesSections == null) {
    return;
  }
  context.put("sections",propertiesSections);
  context.put("toc",toc);
  try {
    StringBundler sb=new StringBundler(4);
    sb.append(propertiesDestDir);
    sb.append(StringPool.SLASH);
    sb.append(propertiesFileName);
    sb.append(".html");
    String propertiesHTMLFileName=sb.toString();
    File propertiesHTMLFile=new File(propertiesHTMLFileName);
    propertiesHTMLFileName=StringUtil.replace(propertiesHTMLFileName,StringPool.BACK_SLASH,StringPool.SLASH);
    System.out.println("Writing " + propertiesHTMLFileName);
    Writer writer=new FileWriter(propertiesHTMLFile);
    try {
      FreeMarkerUtil.process("com/liferay/portal/tools/propertiesdoc/dependencies/" + "properties_html.ftl",context,writer);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    writer.flush();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
}

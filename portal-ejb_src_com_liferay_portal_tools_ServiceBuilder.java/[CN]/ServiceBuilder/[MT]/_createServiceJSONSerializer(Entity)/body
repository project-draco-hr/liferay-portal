{
  List regularColList=entity.getRegularColList();
  StringBuffer sb=new StringBuffer();
  sb.append("package " + _packagePath + ".service.http;");
  sb.append("import " + _packagePath + ".model."+ entity.getName()+ ";");
  sb.append("import com.liferay.portal.kernel.util.StringPool;");
  sb.append("import java.util.Date;");
  sb.append("import java.util.List;");
  sb.append("import org.json.JSONArray;");
  sb.append("import org.json.JSONObject;");
  sb.append("public class " + entity.getName() + "JSONSerializer {");
  sb.append("public static JSONObject toJSONObject(" + entity.getName() + " model) {");
  sb.append("JSONObject jsonObj = new JSONObject();");
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    if (col.isPrimitiveType()) {
      sb.append("jsonObj.put(\"" + col.getName() + "\", model.get"+ col.getMethodName()+ "());");
    }
 else {
      sb.append(col.getType() + " " + col.getName()+ " = model.get"+ col.getMethodName()+ "();");
      sb.append("if (" + col.getName() + " == null) {");
      sb.append("jsonObj.put(\"" + col.getName() + "\", StringPool.BLANK);");
      sb.append("}");
      sb.append("else {");
      sb.append("jsonObj.put(\"" + col.getName() + "\", "+ col.getName()+ ".toString());");
      sb.append("}");
    }
  }
  sb.append("return jsonObj;");
  sb.append("}");
  sb.append("public static JSONArray toJSONArray(List models) {");
  sb.append("JSONArray jsonArray = new JSONArray();");
  sb.append("for (int i = 0; i < models.size(); i++) {");
  sb.append(entity.getName() + " model = (" + entity.getName()+ ")models.get(i);");
  sb.append("jsonArray.put(toJSONObject(model));");
  sb.append("}");
  sb.append("return jsonArray;");
  sb.append("}");
  sb.append("}");
  File ejbFile=new File(_outputPath + "/service/http/" + entity.getName()+ "JSONSerializer.java");
  writeFile(ejbFile,sb.toString());
}

{
  StringMaker sm=new StringMaker();
  if (_ejbList.size() > 0) {
    sm.append("Liferay.Service." + _portletShortName + " = {\n");
    sm.append("\tservicePackage: \"" + _packagePath + ".service.http.\"\n");
    sm.append("};\n\n");
  }
  for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=(Entity)_ejbList.get(i);
    if (entity.hasRemoteService()) {
      JavaClass javaClass=_getJavaClass(_outputPath + "/service/http/" + entity.getName()+ "ServiceJSON.java");
      JavaMethod[] methods=javaClass.getMethods();
      Set jsonMethods=new LinkedHashSet();
      for (int j=0; j < methods.length; j++) {
        JavaMethod javaMethod=methods[j];
        String methodName=javaMethod.getName();
        if (javaMethod.isPublic()) {
          jsonMethods.add(methodName);
        }
      }
      if (jsonMethods.size() > 0) {
        sm.append("Liferay.Service." + _portletShortName + "."+ entity.getName()+ " = {\n");
        sm.append("\tserviceClassName: Liferay.Service." + _portletShortName + ".servicePackage + \""+ entity.getName()+ "\" + Liferay.Service.classNameSuffix,\n\n");
        Iterator itr=jsonMethods.iterator();
        while (itr.hasNext()) {
          String methodName=(String)itr.next();
          sm.append("\t" + methodName + ": function(params, callback) {\n");
          sm.append("\t\tparams.serviceParameters = Liferay.Service.getParameters(params);\n");
          sm.append("\t\tparams.serviceClassName = this.serviceClassName;\n");
          sm.append("\t\tparams.serviceMethodName = \"" + methodName + "\";\n\n");
          sm.append("\t\t_$J.getJSON(Liferay.Service.url, params, callback);\n");
          sm.append("\t}");
          if (itr.hasNext()) {
            sm.append(",\n");
          }
          sm.append("\n");
        }
        sm.append("};\n\n");
      }
    }
  }
  File xmlFile=new File(_jsonFileName);
  if (!xmlFile.exists()) {
    String content="";
    FileUtil.write(xmlFile,content);
  }
  String oldContent=FileUtil.read(xmlFile);
  String newContent=new String(oldContent);
  int oldBegin=oldContent.indexOf("Liferay.Service." + _portletShortName);
  int oldEnd=oldContent.lastIndexOf("Liferay.Service." + _portletShortName);
  oldEnd=oldContent.indexOf("};",oldEnd);
  int newBegin=newContent.indexOf("Liferay.Service." + _portletShortName);
  int newEnd=newContent.lastIndexOf("Liferay.Service." + _portletShortName);
  newEnd=newContent.indexOf("};",newEnd);
  if (newBegin == -1) {
    newContent=oldContent + "\n\n" + sm.toString().trim();
  }
 else {
    newContent=newContent.substring(0,oldBegin) + sm.toString().trim() + newContent.substring(oldEnd + 2,newContent.length());
  }
  if (!oldContent.equals(newContent)) {
    FileUtil.write(xmlFile,newContent);
  }
}

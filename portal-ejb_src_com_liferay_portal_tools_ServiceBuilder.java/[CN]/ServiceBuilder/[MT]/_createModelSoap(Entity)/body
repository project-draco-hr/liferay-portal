{
  List pkList=entity.getPKList();
  List regularColList=entity.getRegularColList();
  StringMaker sm=new StringMaker();
  sm.append("package " + _packagePath + ".model;");
  if (entity.hasCompoundPK()) {
    sm.append("import " + _packagePath + ".service.persistence."+ entity.getName()+ "PK;");
  }
  sm.append("import java.io.Serializable;");
  sm.append("import java.util.ArrayList;");
  sm.append("import java.util.Date;");
  sm.append("import java.util.List;");
  sm.append("public class " + entity.getName() + "Soap implements Serializable {");
  sm.append("public static " + entity.getName() + "Soap toSoapModel("+ entity.getName()+ " model) {");
  sm.append(entity.getName() + "Soap soapModel = new " + entity.getName()+ "Soap();");
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    sm.append("soapModel.set" + col.getMethodName() + "(model.get"+ col.getMethodName()+ "());");
  }
  sm.append("return soapModel;");
  sm.append("}");
  sm.append("public static " + entity.getName() + "Soap[] toSoapModels(List models) {");
  sm.append("List soapModels = new ArrayList(models.size());");
  sm.append("for (int i = 0; i < models.size(); i++) {");
  sm.append(entity.getName() + " model = (" + entity.getName()+ ")models.get(i);");
  sm.append("soapModels.add(toSoapModel(model));");
  sm.append("}");
  sm.append("return (" + entity.getName() + "Soap[])soapModels.toArray(new "+ entity.getName()+ "Soap[0]);");
  sm.append("}");
  sm.append("public " + entity.getName() + "Soap() {");
  sm.append("}");
  sm.append("public " + entity.getPKClassName() + " getPrimaryKey() {");
  if (entity.hasCompoundPK()) {
    sm.append("return new " + entity.getPKClassName() + "(");
    for (int i=0; i < pkList.size(); i++) {
      EntityColumn col=(EntityColumn)pkList.get(i);
      sm.append("_" + col.getName());
      if ((i + 1) != (pkList.size())) {
        sm.append(", ");
      }
    }
    sm.append(");");
  }
 else {
    EntityColumn col=(EntityColumn)pkList.get(0);
    sm.append("return _" + col.getName() + ";");
  }
  sm.append("}");
  sm.append("public void setPrimaryKey(" + entity.getPKClassName() + " pk) {");
  if (entity.hasCompoundPK()) {
    for (int i=0; i < pkList.size(); i++) {
      EntityColumn col=(EntityColumn)pkList.get(i);
      sm.append("set" + col.getMethodName() + "(pk."+ col.getName()+ ");");
    }
  }
 else {
    EntityColumn col=(EntityColumn)pkList.get(0);
    sm.append("set" + col.getMethodName() + "(pk);");
  }
  sm.append("}");
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    String colType=col.getType();
    sm.append("public " + colType + " get"+ col.getMethodName()+ "() {");
    sm.append("return _" + col.getName() + ";");
    sm.append("}");
    if (colType.equals("boolean")) {
      sm.append("public " + colType + " is"+ col.getMethodName()+ "() {");
      sm.append("return _" + col.getName() + ";");
      sm.append("}");
    }
    sm.append("public void set" + col.getMethodName() + "("+ colType+ " "+ col.getName()+ ") {");
    sm.append("_" + col.getName() + " = "+ col.getName()+ ";");
    sm.append("}");
  }
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    sm.append("private " + col.getType() + " _"+ col.getName()+ ";");
  }
  sm.append("}");
  File modelFile=new File(_serviceOutputPath + "/model/" + entity.getName()+ "Soap.java");
  writeFile(modelFile,sm.toString());
}

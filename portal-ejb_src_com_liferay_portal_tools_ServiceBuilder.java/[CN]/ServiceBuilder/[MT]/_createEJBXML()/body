{
  StringMaker sm=new StringMaker();
  for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=(Entity)_ejbList.get(i);
    List referenceList=entity.getReferenceList();
    if (entity.hasLocalService()) {
      _createEJBXMLSession(entity,referenceList,sm,_LOCAL);
    }
    if (entity.hasRemoteService()) {
      _createEJBXMLSession(entity,referenceList,sm,_REMOTE);
    }
  }
  File xmlFile=new File("classes/META-INF/ejb-jar.xml");
  if (!xmlFile.exists()) {
    String content="<?xml version=\"1.0\"?>\n" + "<!DOCTYPE ejb-jar PUBLIC \"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN\" \"http://java.sun.com/dtd/ejb-jar_2_0.dtd\">\n" + "\n"+ "<ejb-jar>\n"+ "\t<enterprise-beans>\n"+ "\t</enterprise-beans>\n"+ "</ejb-jar>";
    FileUtil.write(xmlFile,content);
  }
  String oldContent=FileUtil.read(xmlFile);
  String newContent=new String(oldContent);
  int x=oldContent.indexOf("<session>");
  int y=oldContent.lastIndexOf("</session>");
  if (x == -1) {
    x=newContent.indexOf("<enterprise-beans/>");
    if (x != -1) {
      newContent=StringUtil.replace(newContent,"<enterprise-beans/>","<enterprise-beans />");
    }
    x=newContent.indexOf("<enterprise-beans />");
    if (x != -1) {
      newContent=StringUtil.replace(newContent,"<enterprise-beans />","<enterprise-beans>\n\t</enterprise-beans>");
    }
    x=newContent.indexOf("</enterprise-beans>") - 1;
    newContent=newContent.substring(0,x) + sm.toString() + newContent.substring(x,newContent.length());
  }
 else {
    int firstSession=newContent.indexOf("<ejb-name>" + StringUtil.replace(_packagePath + ".service.ejb.",".","_"),x);
    int lastSession=newContent.lastIndexOf("<ejb-name>" + StringUtil.replace(_packagePath + ".service.ejb.",".","_"),y);
    if (firstSession == -1 || firstSession > y) {
      x=newContent.indexOf("</enterprise-beans>") - 1;
      newContent=newContent.substring(0,x) + sm.toString() + newContent.substring(x,newContent.length());
    }
 else {
      firstSession=newContent.lastIndexOf("<session>",firstSession) - 2;
      lastSession=newContent.indexOf("</session>",lastSession) + 11;
      newContent=newContent.substring(0,firstSession) + sm.toString() + newContent.substring(lastSession,newContent.length());
    }
  }
  if (!oldContent.equals(newContent)) {
    FileUtil.write(xmlFile,newContent);
  }
}

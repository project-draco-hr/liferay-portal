{
  StringBuffer sb=new StringBuffer();
  for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=(Entity)_ejbList.get(i);
    if (entity.hasLocalService()) {
      _createSpringXMLSession(entity,sb,_LOCAL,enterprise);
    }
    if (entity.hasRemoteService()) {
      _createSpringXMLSession(entity,sb,_REMOTE,enterprise);
    }
    _createSpringXMLSession(entity,sb);
  }
  File xmlFile=null;
  if (enterprise) {
    xmlFile=new File(_springEntFileName);
  }
 else {
    xmlFile=new File(_springProFileName);
  }
  if (!xmlFile.exists()) {
    String content="<?xml version=\"1.0\"?>\n" + "<!DOCTYPE beans PUBLIC \"-//SPRING//DTD BEAN//EN\" \"http://www.springframework.org/dtd/spring-beans.dtd\">\n" + "\n"+ "<beans>\n"+ "\t<bean id=\"liferaySessionFactory\" class=\"com.liferay.portal.spring.hibernate.HibernateConfiguration\" lazy-init=\"true\" />\n"+ "\t<bean id=\"liferayTransactionManager\" class=\"org.springframework.orm.hibernate3.HibernateTransactionManager\" lazy-init=\"true\">\n"+ "\t\t<property name=\"sessionFactory\">\n"+ "\t\t\t<ref bean=\"liferaySessionFactory\" />\n"+ "\t\t</property>\n"+ "\t</bean>\n"+ "</beans>";
    FileUtil.write(xmlFile,content);
  }
  String oldContent=FileUtil.read(xmlFile);
  String newContent=new String(oldContent);
  int x=oldContent.indexOf("<beans>");
  int y=oldContent.lastIndexOf("</beans>");
  int firstSession=newContent.indexOf("<bean id=\"" + _packagePath + ".service.spring.",x);
  int lastSession=-1;
  int lastSession1=newContent.lastIndexOf("<bean id=\"" + _packagePath + ".service.spring.",y);
  int lastSession2=newContent.lastIndexOf("<bean id=\"" + _packagePath + ".service.persistence.",y);
  if (lastSession1 != lastSession2) {
    if (lastSession1 > lastSession2) {
      lastSession=lastSession1;
    }
 else {
      lastSession=lastSession2;
    }
  }
  if (firstSession == -1 || firstSession > y) {
    x=newContent.indexOf("</beans>");
    newContent=newContent.substring(0,x) + sb.toString() + newContent.substring(x,newContent.length());
  }
 else {
    firstSession=newContent.lastIndexOf("<bean",firstSession) - 1;
    lastSession=newContent.indexOf("</bean>",lastSession) + 8;
    newContent=newContent.substring(0,firstSession) + sb.toString() + newContent.substring(lastSession,newContent.length());
  }
  if (!oldContent.equals(newContent)) {
    FileUtil.write(xmlFile,newContent);
  }
}

{
  List regularColList=entity.getRegularColList();
  StringBuffer sb=new StringBuffer();
  sb.append("package " + _packagePath + ".model;");
  if (entity.hasCompoundPK()) {
    sb.append("import " + _packagePath + ".service.persistence."+ entity.getName()+ "PK;");
  }
  sb.append("import com.liferay.portal.model.BaseModel;");
  sb.append("import java.util.Date;");
  sb.append("public interface " + entity.getName() + "Model extends BaseModel {");
  sb.append("public " + entity.getPKClassName() + " getPrimaryKey();");
  sb.append("public void setPrimaryKey(" + entity.getPKClassName() + " pk);");
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    String colType=col.getType();
    sb.append("public " + colType + " get"+ col.getMethodName()+ "();");
    if (colType.equals("boolean")) {
      sb.append("public " + colType + " is"+ col.getMethodName()+ "();");
    }
    sb.append("public void set" + col.getMethodName() + "("+ colType+ " "+ col.getName()+ ");");
  }
  sb.append("}");
  File modelFile=new File(_serviceOutputPath + "/model/" + entity.getName()+ "Model.java");
  writeFile(modelFile,sb.toString());
  if (Validator.isNotNull(_serviceDir)) {
    modelFile=new File(_outputPath + "/model/" + entity.getName()+ "Model.java");
    if (modelFile.exists()) {
      System.out.println("Relocating " + modelFile);
      modelFile.delete();
    }
  }
}

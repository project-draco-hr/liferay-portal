{
  List pkList=entity.getPKList();
  StringBuffer sb=new StringBuffer();
  sb.append("package " + _packagePath + ".service.persistence;");
  sb.append("import com.liferay.util.DateUtil;");
  sb.append("import com.liferay.util.StringPool;");
  sb.append("import java.io.Serializable;");
  sb.append("import java.util.Date;");
  sb.append("public class " + entity.getPKClassName() + " implements Comparable, Serializable {");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sb.append("public " + col.getType() + " "+ col.getName()+ ";");
  }
  sb.append("public " + entity.getPKClassName() + "() {}");
  sb.append("public " + entity.getPKClassName() + "(");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sb.append(col.getType() + " " + col.getName());
    if ((i + 1) != pkList.size()) {
      sb.append(", ");
    }
  }
  sb.append(") {");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sb.append("this." + col.getName() + " = "+ col.getName()+ ";");
  }
  sb.append("}");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (!col.isCollection()) {
      sb.append("public " + col.getType() + " get"+ col.getMethodName()+ "() {");
      sb.append("return " + col.getName() + ";");
      sb.append("}");
      sb.append("public void set" + col.getMethodName() + "("+ col.getType()+ " "+ col.getName()+ ") {");
      sb.append("this." + col.getName() + " = "+ col.getName()+ ";");
      sb.append("}");
    }
  }
  sb.append("public int compareTo(Object obj) {");
  sb.append("if (obj == null) {");
  sb.append("return -1;");
  sb.append("}");
  sb.append(entity.getPKClassName() + " pk = (" + entity.getPKClassName()+ ")obj;");
  sb.append("int value = 0;");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    String colType=col.getType();
    if (!col.isPrimitiveType()) {
      if (colType.equals("Date")) {
        sb.append("value = DateUtil.compareTo(" + col.getName() + ", pk."+ col.getName()+ ");");
      }
 else {
        sb.append("value = " + col.getName() + ".compareTo(pk."+ col.getName()+ ");");
      }
    }
 else {
      if (colType.equals("boolean")) {
        sb.append("if (!" + col.getName() + " && pk."+ col.getName()+ ") {");
        sb.append("value = -1;");
        sb.append("}");
        sb.append("else if (" + col.getName() + " && !pk."+ col.getName()+ ") {");
        sb.append("value = 1;");
        sb.append("}");
        sb.append("else {");
        sb.append("value = 0;");
        sb.append("}");
      }
 else {
        sb.append("if (" + col.getName() + " < pk."+ col.getName()+ ") {");
        sb.append("value = -1;");
        sb.append("}");
        sb.append("else if (" + col.getName() + " > pk."+ col.getName()+ ") {");
        sb.append("value = 1;");
        sb.append("}");
        sb.append("else {");
        sb.append("value = 0;");
        sb.append("}");
      }
    }
    sb.append("if (value != 0) {");
    sb.append("return value;");
    sb.append("}");
  }
  sb.append("return 0;");
  sb.append("}");
  sb.append("public boolean equals(Object obj) {");
  sb.append("if (obj == null) {");
  sb.append("return false;");
  sb.append("}");
  sb.append(entity.getPKClassName() + " pk = null;");
  sb.append("try {");
  sb.append("pk = (" + entity.getPKClassName() + ")obj;");
  sb.append("}");
  sb.append("catch (ClassCastException cce) {");
  sb.append("return false;");
  sb.append("}");
  sb.append("if (");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (!col.isPrimitiveType()) {
      sb.append("(" + col.getName() + ".equals(pk."+ col.getName()+ "))");
    }
 else {
      sb.append("(" + col.getName() + " == pk."+ col.getName()+ ")");
    }
    if ((i + 1) != pkList.size()) {
      sb.append(" && ");
    }
  }
  sb.append(") {");
  sb.append("return true;");
  sb.append("} else {");
  sb.append("return false;");
  sb.append("}");
  sb.append("}");
  sb.append("public int hashCode() {");
  sb.append("return (");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (i != 0) {
      sb.append(" + ");
    }
    if (!col.isPrimitiveType() && !col.getType().equals("String")) {
      sb.append(col.getName() + ".toString()");
    }
 else {
      sb.append(col.getName());
    }
  }
  sb.append(").hashCode();");
  sb.append("}");
  sb.append("public String toString() {");
  sb.append("StringBuffer sb = new StringBuffer();");
  sb.append("sb.append(StringPool.OPEN_CURLY_BRACE);");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sb.append("sb.append(\"" + col.getName() + "\");");
    sb.append("sb.append(StringPool.EQUAL);");
    sb.append("sb.append(" + col.getName() + ");");
    if ((i + 1) != pkList.size()) {
      sb.append("sb.append(StringPool.COMMA);");
      sb.append("sb.append(StringPool.SPACE);");
    }
  }
  sb.append("sb.append(StringPool.CLOSE_CURLY_BRACE);");
  sb.append("return sb.toString();");
  sb.append("}");
  sb.append("}");
  File ejbFile=new File(_outputPath + "/service/persistence/" + entity.getPKClassName()+ ".java");
  writeFile(ejbFile,sb.toString());
}

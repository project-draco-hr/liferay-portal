{
  JSLoaderModulesServlet jsLoaderModulesServlet=buildJSLoaderModulesServlet();
  JSLoaderModulesTracker jsLoaderModulesTracker=jsLoaderModulesServlet.getJSLoaderModulesTracker();
  ServiceReference<ServletContext> serviceReference=buildServiceReference("test",new Version("1.0.0"),true,0,getResource("dependencies/config1.js"));
  jsLoaderModulesTracker.addingService(serviceReference);
  serviceReference=buildServiceReference("foo",new Version("13.2.23"),true,0,getResource("dependencies/config2.js"));
  jsLoaderModulesTracker.addingService(serviceReference);
  MockHttpServletRequest mockHttpServletRequest=new MockHttpServletRequest();
  MockHttpServletResponse mockHttpServletResponse=new MockHttpServletResponse();
  jsLoaderModulesServlet.service(mockHttpServletRequest,mockHttpServletResponse);
  String content=mockHttpServletResponse.getContentAsString();
  content=content.replace('"','\'');
  assertContains("'test': '/test-1.0.0'",content);
  assertContains("'test@1.0.0': '/test-1.0.0'",content);
  assertContains("'test/some.es':{'dependencies':['exports','test@1.0.0/other.es']}",content);
  assertContains("'test@1.0.0/some.es':{'dependencies':['exports'," + "'test@1.0.0/other.es']}",content);
  assertContains("'foo': '/foo-13.2.23'",content);
  assertContains("'foo@13.2.23': '/foo-13.2.23'",content);
  assertContains("'foo/foo.es':{'dependencies':['exports','foo@13.2.23/fum.es'," + "'jquery@2.15.3/jquery.js']}",content);
  assertContains("'foo@13.2.23/foo.es':{'dependencies':['exports'," + "'foo@13.2.23/fum.es','jquery@2.15.3/jquery.js']}",content);
}

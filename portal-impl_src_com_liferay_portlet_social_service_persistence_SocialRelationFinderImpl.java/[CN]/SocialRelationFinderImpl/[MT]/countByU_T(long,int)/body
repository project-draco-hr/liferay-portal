{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_U_T);
    if (type == SocialRelationConstants.TYPE_UNI_CHILD || type == SocialRelationConstants.TYPE_UNI_PARENT) {
      sql=StringUtil.replace(sql,"(SocialRelation.userId2 = ?) OR",StringPool.BLANK);
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(HibernateUtil.getCountColumnName(),Hibernate.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId);
    if (type != SocialRelationConstants.TYPE_UNI_CHILD && type != SocialRelationConstants.TYPE_UNI_PARENT) {
      qPos.add(userId);
    }
    qPos.add(type);
    Iterator<Long> itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

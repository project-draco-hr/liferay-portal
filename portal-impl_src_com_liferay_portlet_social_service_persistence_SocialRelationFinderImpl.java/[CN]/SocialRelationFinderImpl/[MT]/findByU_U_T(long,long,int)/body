{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=CustomSQLUtil.get(FIND_BY_U_U_T_BI);
    if (type == SocialRelationConstants.TYPE_UNI_CHILD || type == SocialRelationConstants.TYPE_UNI_PARENT) {
      sql=CustomSQLUtil.get(FIND_BY_U_U_T_UNI);
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("SocialRelation",SocialRelationImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId1);
    qPos.add(userId2);
    qPos.add(type);
    if (type != SocialRelationConstants.TYPE_UNI_CHILD && type != SocialRelationConstants.TYPE_UNI_PARENT) {
      qPos.add(userId2);
      qPos.add(userId1);
      qPos.add(type);
    }
    Iterator<SocialRelation> itr=q.list().iterator();
    if (itr.hasNext()) {
      SocialRelation relation=itr.next();
      return relation;
    }
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
  StringMaker sm=new StringMaker();
  sm.append("No SocialRelation exists with the key {userId1=");
  sm.append(userId1);
  sm.append(", userId2=");
  sm.append(userId2);
  sm.append(", type=");
  sm.append(type);
  sm.append("}");
  throw new NoSuchRelationException(sm.toString());
}

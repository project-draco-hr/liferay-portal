{
  if (Validator.isNull(friendlyURL)) {
    return friendlyURL;
  }
  friendlyURL=GetterUtil.getString(friendlyURL);
  friendlyURL=friendlyURL.toLowerCase();
  friendlyURL=Normalizer.normalizeToAscii(friendlyURL);
  StringBuilder sb=null;
  int lastReplacementIndex=0;
  for (int i=0; i < friendlyURL.length(); i++) {
    char oldChar=friendlyURL.charAt(i);
    if ((Arrays.binarySearch(_REPLACE_CHARS,oldChar) >= 0) || ((replaceChars != null) && ArrayUtil.contains(replaceChars,oldChar))) {
      if (sb == null) {
        sb=new StringBuilder();
      }
      if (i > lastReplacementIndex) {
        sb.append(friendlyURL.substring(lastReplacementIndex,i));
      }
      sb.append(CharPool.DASH);
      lastReplacementIndex=i + 1;
    }
  }
  if (sb != null) {
    if (lastReplacementIndex < friendlyURL.length()) {
      sb.append(friendlyURL.substring(lastReplacementIndex));
    }
    friendlyURL=sb.toString();
  }
  while (friendlyURL.indexOf(StringPool.DOUBLE_DASH) >= 0) {
    friendlyURL=StringUtil.replace(friendlyURL,StringPool.DOUBLE_DASH,StringPool.DASH);
  }
  return friendlyURL;
}

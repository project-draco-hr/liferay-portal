{
  super(req);
  folderName=ParamUtil.getString(req,FOLDER_NAME);
  from=ParamUtil.getString(req,FROM);
  to=ParamUtil.getString(req,TO);
  subject=ParamUtil.getString(req,SUBJECT);
  entireMessage=ParamUtil.getString(req,ENTIRE_MESSAGE);
  try {
    String range=ParamUtil.getString(req,"dateRange");
    if (Validator.isNotNull(range) && !DATE_RANGE_OPTIONS[0].equals(range)) {
      ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
      int dateMonth=ParamUtil.getInteger(req,"dateMonth");
      int dateDay=ParamUtil.getInteger(req,"dateDay");
      int dateYear=ParamUtil.getInteger(req,"dateYear");
      Date date=PortalUtil.getDate(dateMonth,dateDay,dateYear,themeDisplay.getTimeZone(),null);
      Calendar startCal=Calendar.getInstance(themeDisplay.getTimeZone(),themeDisplay.getLocale());
      startCal.setTime(date);
      Calendar endCal=(Calendar)startCal.clone();
      int ordinal=GetterUtil.getInteger(range.substring(0,1));
      if (ordinal > 0) {
        if (range.indexOf("day") != -1) {
          startCal.add(Calendar.DATE,-ordinal);
          endCal.add(Calendar.DATE,ordinal);
        }
 else         if (range.indexOf("week") != -1) {
          startCal.add(Calendar.WEEK_OF_YEAR,-ordinal);
          endCal.add(Calendar.WEEK_OF_YEAR,ordinal);
        }
 else         if (range.indexOf("month") != -1) {
          startCal.add(Calendar.MONTH,-ordinal);
          endCal.add(Calendar.MONTH,ordinal);
        }
 else         if (range.indexOf("year") != -1) {
          startCal.add(Calendar.YEAR,-ordinal);
          endCal.add(Calendar.YEAR,ordinal);
        }
        startDate=startCal.getTime();
        endDate=endCal.getTime();
      }
    }
  }
 catch (  PortalException pe) {
  }
}

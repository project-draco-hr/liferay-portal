{
  List<MethodInterceptor> interceptors=_interceptorsCache.get(serviceBeanMethodInvocation);
  if (interceptors == null) {
    List<Object> list=_advisorChainFactory.getInterceptorsAndDynamicInterceptionAdvice(_advisedSupport,serviceBeanMethodInvocation.getMethod(),serviceBeanMethodInvocation.getTargetClass());
    Iterator<Object> iterator=list.iterator();
    while (iterator.hasNext()) {
      Object obj=iterator.next();
      if (!(obj instanceof MethodInterceptor)) {
        if (_log.isWarnEnabled()) {
          _log.warn("Skipping unsupported interceptor type " + obj.getClass());
        }
        iterator.remove();
      }
    }
    if (list.isEmpty()) {
      interceptors=Collections.emptyList();
    }
 else {
      interceptors=new ArrayList<MethodInterceptor>(list.size());
      for (      Object obj : list) {
        interceptors.add((MethodInterceptor)obj);
      }
    }
    _interceptorsCache.put(serviceBeanMethodInvocation.toCacheKeyModel(),interceptors);
  }
  serviceBeanMethodInvocation.setInterceptors(interceptors);
}

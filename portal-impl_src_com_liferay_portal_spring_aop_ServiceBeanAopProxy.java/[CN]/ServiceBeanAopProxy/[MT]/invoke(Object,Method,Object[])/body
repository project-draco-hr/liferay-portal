{
  String methodName=method.getName();
  if (methodName.equals("getTargetSource") && (arguments == null)) {
    Class<?> clazz=method.getDeclaringClass();
    if (clazz.equals(Advised.class)) {
      return _advisedSupport.getTargetSource();
    }
  }
  TargetSource targetSource=_advisedSupport.getTargetSource();
  Object target=null;
  try {
    Class<?> targetClass=null;
    target=targetSource.getTarget();
    if (target != null) {
      targetClass=target.getClass();
    }
    ServiceBeanMethodInvocation serviceBeanMethodInvocation=new ServiceBeanMethodInvocation(target,targetClass,method,arguments);
    Skip skip=ServiceBeanAopCacheManager.getAnnotation(serviceBeanMethodInvocation,Skip.class,null);
    if (skip != null) {
      serviceBeanMethodInvocation.setMethodInterceptors(Collections.<MethodInterceptor>emptyList());
    }
 else {
      _setMethodInterceptors(serviceBeanMethodInvocation);
    }
    return serviceBeanMethodInvocation.proceed();
  }
  finally {
    if ((target != null) && !targetSource.isStatic()) {
      targetSource.releaseTarget(target);
    }
  }
}

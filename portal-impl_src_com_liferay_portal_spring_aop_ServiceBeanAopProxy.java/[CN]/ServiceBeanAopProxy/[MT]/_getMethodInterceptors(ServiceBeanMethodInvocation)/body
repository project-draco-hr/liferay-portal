{
  List<MethodInterceptor> methodInterceptors=new ArrayList<MethodInterceptor>(_fullMethodInterceptors);
  if (!_mergeSpringMethodInterceptors) {
    return methodInterceptors;
  }
  List<Object> list=_advisorChainFactory.getInterceptorsAndDynamicInterceptionAdvice(_advisedSupport,serviceBeanMethodInvocation.getMethod(),serviceBeanMethodInvocation.getTargetClass());
  Iterator<Object> itr=list.iterator();
  while (itr.hasNext()) {
    Object obj=itr.next();
    if (obj instanceof MethodInterceptor) {
      continue;
    }
    if (_log.isWarnEnabled()) {
      _log.warn("Skipping unsupported interceptor type " + obj.getClass());
    }
    itr.remove();
  }
  if (list.isEmpty()) {
    return methodInterceptors;
  }
  for (  Object object : list) {
    methodInterceptors.add((MethodInterceptor)object);
  }
  return methodInterceptors;
}

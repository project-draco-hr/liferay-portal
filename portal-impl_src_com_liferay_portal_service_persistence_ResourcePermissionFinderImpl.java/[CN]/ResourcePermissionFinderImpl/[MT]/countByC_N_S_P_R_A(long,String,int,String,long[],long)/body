{
  Object[] finderArgs=new Object[]{companyId,name,scope,primKey,roleIds,actionIdMask};
  Long count=(Long)FinderCacheUtil.getResult(ResourcePermissionPersistenceImpl.FINDER_PATH_COUNT_BY_C_N_S_P_R_A,finderArgs,this);
  if (count == null) {
    String sql=CustomSQLUtil.get(COUNT_BY_C_N_S_P_R_A);
    if (roleIds.length > 1) {
      StringBundler roleIdsOR=new StringBundler((roleIds.length * 2) - 1);
      for (int i=0; i < roleIds.length; i++) {
        if (i > 0) {
          roleIdsOR.append(" OR ");
        }
        roleIdsOR.append("ResourcePermission.roleId = ?");
      }
      sql=StringUtil.replace(sql,"ResourcePermission.roleId = ?",roleIdsOR.toString());
    }
    Session session=null;
    try {
      session=openSession();
      SQLQuery q=session.createSQLQuery(sql);
      q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      qPos.add(name);
      qPos.add(scope);
      qPos.add(primKey);
      qPos.add(roleIds);
      qPos.add(actionIdMask);
      qPos.add(actionIdMask);
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(ResourcePermissionPersistenceImpl.FINDER_PATH_COUNT_BY_C_N_S_P_R_A,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}

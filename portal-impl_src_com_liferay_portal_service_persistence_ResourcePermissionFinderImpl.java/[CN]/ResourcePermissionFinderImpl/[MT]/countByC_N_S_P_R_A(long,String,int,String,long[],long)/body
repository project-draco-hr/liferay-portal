{
  Object[] finderArgs=new Object[]{companyId,name,scope,primKey,roleIds,actionId};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_C_N_S_P_R_A,finderArgs,this);
  if (count != null) {
    return count.intValue();
  }
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_C_N_S_P_R_A);
    if (roleIds.length > 1) {
      StringBundler sb=new StringBundler(roleIds.length * 2 - 1);
      for (int i=0; i < roleIds.length; i++) {
        if (i > 0) {
          sb.append(" OR ");
        }
        sb.append("ResourcePermission.roleId = ?");
      }
      sql=StringUtil.replace(sql,"ResourcePermission.roleId = ?",sb.toString());
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    qPos.add(name);
    qPos.add(scope);
    qPos.add(primKey);
    qPos.add(roleIds);
    qPos.add(actionId);
    qPos.add(actionId);
    count=(Long)q.uniqueResult();
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    if (count == null) {
      count=Long.valueOf(0);
    }
    FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_C_N_S_P_R_A,finderArgs,count);
    closeSession(session);
  }
  return count.intValue();
}

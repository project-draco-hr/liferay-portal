{
  DirectoryScanner ds=new DirectoryScanner();
  ds.setBasedir(_basedir);
  ds.setExcludes(new String[]{"**\\classes\\**","**\\portal-client\\**","**\\portal-web\\**"});
  List<String> includes=new ArrayList<String>();
  if (Validator.isNotNull(limit) && !limit.startsWith("$")) {
    String[] limitArray=StringUtil.split(limit,'/');
    for (    String curLimit : limitArray) {
      includes.add("**\\" + StringUtil.replace(curLimit,".","\\") + "\\**\\*.java");
      includes.add("**\\" + curLimit + ".java");
    }
  }
 else {
    includes.add("**\\*.java");
  }
  ds.setIncludes(includes.toArray(new String[includes.size()]));
  ds.scan();
  String[] fileNames=ds.getIncludedFiles();
  for (  String fileName : fileNames) {
    fileName=StringUtil.replace(fileName,"\\","/");
    if ((ignoreAutogenerated != null) && (ignoreAutogenerated.booleanValue())) {
      File file=new File(_basedir + fileName);
      if (file.exists()) {
        String oldContent=_fileUtil.read(_basedir + fileName + "doc");
        if (_isGenerated(oldContent)) {
          continue;
        }
      }
    }
    if (command.equals("cleanup")) {
      _processGet(fileName);
      _processSave(fileName);
      _processDelete(fileName);
    }
 else     if (command.equals("commit")) {
      _processSave(fileName);
      _processDelete(fileName);
    }
 else     if (command.equals("delete")) {
      _processDelete(fileName);
    }
 else     if (command.equals("get")) {
      _processGet(fileName);
    }
 else     if (command.equals("save")) {
      _processSave(fileName);
    }
  }
}

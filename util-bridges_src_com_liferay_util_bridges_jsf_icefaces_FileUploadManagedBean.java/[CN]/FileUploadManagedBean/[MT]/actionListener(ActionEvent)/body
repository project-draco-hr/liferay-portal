{
  InputFile inputFile=(InputFile)actionEvent.getSource();
  int status=inputFile.getStatus();
  try {
    if (status == InputFile.INVALID) {
      addErrorMessage(LanguageUtil.get(_locale,"file-type-is-invalid"));
      _percent=100;
    }
 else     if (status == InputFile.SAVED) {
      _percent=100;
    }
 else     if (status == InputFile.SIZE_LIMIT_EXCEEDED) {
      long maxFileSizeInBytes=_inputFile.getSizeMax();
      DecimalFormat decimalFormat=new DecimalFormat();
      decimalFormat.setGroupingUsed(false);
      decimalFormat.setMaximumFractionDigits(2);
      decimalFormat.setMinimumFractionDigits(0);
      String maxFileSizeInMegs=decimalFormat.format((double)maxFileSizeInBytes / 1024 / 1024);
      addErrorMessage(LanguageUtil.format(_locale,"file-size-is-larger-than-x-megabytes",maxFileSizeInMegs));
      _percent=100;
    }
 else     if (status == InputFile.UNKNOWN_SIZE) {
      addErrorMessage(LanguageUtil.get(_locale,"file-size-was-not-specified-in-the-request"));
      _percent=100;
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    addErrorMessage(e.getMessage());
  }
}

{
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  long checkGroupId=0;
  if (groupIds.length == 1) {
    checkGroupId=groupIds[0];
  }
  long companyId=permissionChecker.getCompanyId();
  long[] roleIds=permissionChecker.getRoleIds(getUserId(),checkGroupId);
  try {
    for (    long roleId : roleIds) {
      if (ResourceTypePermissionLocalServiceUtil.hasCompanyScopePermission(companyId,className,roleId,ActionKeys.VIEW)) {
        return sql;
      }
    }
  }
 catch (  Exception e) {
  }
  Set<Long> userResourceBlockIds=getResourceBlockIds(companyId,groupIds,className);
  String permissionWhere=StringPool.BLANK;
  if (Validator.isNotNull(bridgeJoin)) {
    permissionWhere=bridgeJoin;
  }
  Set<Long> ownerResourceBlockIds=getOwnerResourceBlockIds(companyId,groupIds,className);
  ownerResourceBlockIds.removeAll(userResourceBlockIds);
  if (userResourceBlockIds.size() == 0) {
    userResourceBlockIds.add(_NO_RESOURCE_BLOCKS_ID);
  }
  if (Validator.isNotNull(userIdField) && ownerResourceBlockIds.size() > 0) {
    permissionWhere=permissionWhere.concat(CustomSQLUtil.get(FILTER_BY_RESOURCE_BLOCK_ID_OWNER));
    permissionWhere=StringUtil.replace(permissionWhere,new String[]{"[$OWNER_RESOURCE_BLOCK_ID$]","[$USER_ID$]","[$USER_ID_FIELD$]","[$USER_RESOURCE_BLOCK_ID$]"},new String[]{StringUtil.merge(ownerResourceBlockIds),String.valueOf(permissionChecker.getUserId()),userIdField,StringUtil.merge(userResourceBlockIds)});
  }
 else {
    permissionWhere=permissionWhere.concat(CustomSQLUtil.get(FILTER_BY_RESOURCE_BLOCK_ID));
    permissionWhere=StringUtil.replace(permissionWhere,"[$USER_RESOURCE_BLOCK_ID$]",StringUtil.merge(userResourceBlockIds));
  }
  int pos=sql.indexOf(_WHERE_CLAUSE);
  if (pos != -1) {
    StringBundler sb=new StringBundler(4);
    sb.append(sql.substring(0,pos));
    sb.append(permissionWhere);
    sb.append(" AND ");
    sb.append(sql.substring(pos + 7));
    return sb.toString();
  }
  pos=sql.indexOf(_GROUP_BY_CLAUSE);
  if (pos != -1) {
    return sql.substring(0,pos + 1).concat(permissionWhere).concat(sql.substring(pos + 1));
  }
  pos=sql.indexOf(_ORDER_BY_CLAUSE);
  if (pos != -1) {
    return sql.substring(0,pos + 1).concat(permissionWhere).concat(sql.substring(pos + 1));
  }
  return sql.concat(StringPool.SPACE).concat(permissionWhere);
}

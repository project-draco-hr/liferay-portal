{
  try (FileChannel fromFileChannel=new FileChannelWrapper(FileChannel.open(_fromFilePath,StandardOpenOption.READ)){
    @Override public long transferTo(    long position,    long count,    WritableByteChannel target) throws IOException {
      return super.transferTo(position,_data.length / 4,target);
    }
  }
;FileChannel toFileChannel=FileChannel.open(_toFilePath,StandardOpenOption.CREATE,StandardOpenOption.WRITE)){
    ByteBuffer byteBuffer=ByteBuffer.allocate(_data.length / 2);
    while (byteBuffer.hasRemaining()) {
      fromFileChannel.read(byteBuffer);
    }
    byteBuffer.flip();
    toFileChannel.write(byteBuffer);
    StreamUtil.transferFileChannel(fromFileChannel,toFileChannel,_data.length - byteBuffer.capacity());
  }
   Assert.assertArrayEquals(_data,Files.readAllBytes(_toFilePath));
}

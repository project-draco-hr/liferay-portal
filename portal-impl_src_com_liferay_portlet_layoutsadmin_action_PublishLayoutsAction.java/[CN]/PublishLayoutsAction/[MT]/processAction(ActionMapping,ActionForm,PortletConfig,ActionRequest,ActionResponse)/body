{
  try {
    checkPermissions(actionRequest);
  }
 catch (  PrincipalException pe) {
    return;
  }
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  String redirect=ParamUtil.getString(actionRequest,"redirect");
  String closeRedirect=ParamUtil.getString(actionRequest,"closeRedirect");
  try {
    if (Validator.isNotNull(cmd)) {
      if (cmd.equals("copy_from_live")) {
        StagingUtil.copyFromLive(actionRequest);
      }
 else       if (cmd.equals("publish_to_live")) {
        hideDefaultSuccessMessage(actionRequest);
        StagingUtil.publishToLive(actionRequest);
      }
 else       if (cmd.equals("publish_to_remote")) {
        hideDefaultSuccessMessage(actionRequest);
        StagingUtil.publishToRemote(actionRequest);
      }
 else       if (cmd.equals("schedule_copy_from_live")) {
        StagingUtil.scheduleCopyFromLive(actionRequest);
      }
 else       if (cmd.equals("schedule_publish_to_live")) {
        StagingUtil.schedulePublishToLive(actionRequest);
      }
 else       if (cmd.equals("schedule_publish_to_remote")) {
        StagingUtil.schedulePublishToRemote(actionRequest);
      }
 else       if (cmd.equals("unschedule_copy_from_live")) {
        StagingUtil.unscheduleCopyFromLive(actionRequest);
      }
 else       if (cmd.equals("unschedule_publish_to_live")) {
        StagingUtil.unschedulePublishToLive(actionRequest);
      }
 else       if (cmd.equals("unschedule_publish_to_remote")) {
        StagingUtil.unschedulePublishToRemote(actionRequest);
      }
      sendRedirect(portletConfig,actionRequest,actionResponse,redirect,closeRedirect);
    }
  }
 catch (  Exception e) {
    if (e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portlet.layouts_admin.error");
    }
 else     if (e instanceof AuthException || e instanceof DuplicateLockException || e instanceof LayoutPrototypeException|| e instanceof RemoteAuthException|| e instanceof RemoteExportException|| e instanceof RemoteOptionsException|| e instanceof SystemException) {
      if (e instanceof RemoteAuthException) {
        SessionErrors.add(actionRequest,AuthException.class,e);
      }
 else {
        SessionErrors.add(actionRequest,e.getClass(),e);
      }
      redirect=ParamUtil.getString(actionRequest,"pagesRedirect",redirect);
      redirect=StringUtil.replace(redirect,"tabs2=current-and-previous","tabs2=new-publication-process");
      sendRedirect(portletConfig,actionRequest,actionResponse,redirect,closeRedirect);
    }
 else {
      throw e;
    }
  }
}

{
  if (isEscapedModel()) {
    return (User)this;
  }
 else {
    User model=new UserImpl();
    model.setNew(isNew());
    model.setEscapedModel(true);
    model.setUuid(HtmlUtil.escape(getUuid()));
    model.setUserId(getUserId());
    model.setCompanyId(getCompanyId());
    model.setCreateDate(getCreateDate());
    model.setModifiedDate(getModifiedDate());
    model.setDefaultUser(getDefaultUser());
    model.setContactId(getContactId());
    model.setPassword(HtmlUtil.escape(getPassword()));
    model.setPasswordEncrypted(getPasswordEncrypted());
    model.setPasswordReset(getPasswordReset());
    model.setPasswordModifiedDate(getPasswordModifiedDate());
    model.setGraceLoginCount(getGraceLoginCount());
    model.setScreenName(HtmlUtil.escape(getScreenName()));
    model.setEmailAddress(HtmlUtil.escape(getEmailAddress()));
    model.setOpenId(HtmlUtil.escape(getOpenId()));
    model.setPortraitId(getPortraitId());
    model.setLanguageId(HtmlUtil.escape(getLanguageId()));
    model.setTimeZoneId(HtmlUtil.escape(getTimeZoneId()));
    model.setGreeting(HtmlUtil.escape(getGreeting()));
    model.setComments(HtmlUtil.escape(getComments()));
    model.setLoginDate(getLoginDate());
    model.setLoginIP(HtmlUtil.escape(getLoginIP()));
    model.setLastLoginDate(getLastLoginDate());
    model.setLastLoginIP(HtmlUtil.escape(getLastLoginIP()));
    model.setLastFailedLoginDate(getLastFailedLoginDate());
    model.setFailedLoginAttempts(getFailedLoginAttempts());
    model.setLockout(getLockout());
    model.setLockoutDate(getLockoutDate());
    model.setAgreedToTermsOfUse(getAgreedToTermsOfUse());
    model.setActive(getActive());
    model=(User)Proxy.newProxyInstance(User.class.getClassLoader(),new Class[]{User.class},new ReadOnlyBeanHandler(model));
    return model;
  }
}

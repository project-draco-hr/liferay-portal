{
  long groupId=_getAssetBrowserGroupId(assetRendererFactory);
  Map<Long,String> assetAvailableClassTypes=assetRendererFactory.getClassTypes(PortalUtil.getCurrentAndAncestorSiteGroupIds(groupId),_locale);
  if (assetAvailableClassTypes.isEmpty()) {
    return null;
  }
  List<Map<String,Object>> entries=new ArrayList<Map<String,Object>>();
  for (  Map.Entry<Long,String> assetAvailableClassType : assetAvailableClassTypes.entrySet()) {
    Map<String,Object> entry=new HashMap<String,Object>();
    entry.put("data",_getSelectorClassTypeData(assetRendererFactory,assetAvailableClassType));
    entry.put("id",_getSelectorClassTypeId(assetRendererFactory,assetAvailableClassType));
    entry.put("message",_getSelectorClassTypeMessage(assetAvailableClassType));
    entry.put("src",_getSelectorAssetSrc(assetRendererFactory));
    entries.add(entry);
  }
  return entries;
}

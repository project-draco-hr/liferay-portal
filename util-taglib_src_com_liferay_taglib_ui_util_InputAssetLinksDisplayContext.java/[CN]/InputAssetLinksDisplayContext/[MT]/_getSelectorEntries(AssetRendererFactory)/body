{
  long groupId=_getAssetBrowserGroupId(assetRendererFactory);
  Map<Long,String> classTypes=assetRendererFactory.getClassTypes(PortalUtil.getCurrentAndAncestorSiteGroupIds(groupId),_locale);
  if (classTypes.isEmpty()) {
    return null;
  }
  List<Map<String,Object>> selectorEntries=new ArrayList<Map<String,Object>>();
  for (  Map.Entry<Long,String> assetAvailableClassType : classTypes.entrySet()) {
    Map<String,Object> selectorEntry=new HashMap<String,Object>();
    selectorEntry.put("data",_getSelectorEntryData(assetRendererFactory,assetAvailableClassType));
    selectorEntry.put("id",_getSelectorEntryId(assetRendererFactory,assetAvailableClassType));
    selectorEntry.put("message",_getSelectorEntryMessage(assetAvailableClassType));
    selectorEntry.put("src",_getSelectorEntrySrc(assetRendererFactory));
    selectorEntries.add(selectorEntry);
  }
  return selectorEntries;
}

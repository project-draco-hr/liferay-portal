{
  Set fieldsValues=new HashSet();
  for (int i=0; i < fieldsArray.length; i++) {
    int pos=fieldsArray[i].indexOf("=");
    String fieldValue=fieldsArray[i].substring(pos + 1,fieldsArray[i].length()).trim();
    fieldsValues.add(fieldValue);
  }
  List names=new ArrayList();
  List values=new ArrayList();
  for (int i=0; i < itemFields.length; i++) {
    names.add(itemFields[i].getName());
    values.add(StringUtil.split(itemFields[i].getValues()));
  }
  int numOfRows=1;
  for (int i=0; i < values.size(); i++) {
    String[] vArray=(String[])values.get(i);
    numOfRows=numOfRows * vArray.length;
  }
  int rowPos=0;
  for (int i=0; i < numOfRows; i++) {
    boolean match=true;
    for (int j=0; j < names.size(); j++) {
      int numOfRepeats=1;
      for (int k=j + 1; k < values.size(); k++) {
        String[] vArray=(String[])values.get(k);
        numOfRepeats=numOfRepeats * vArray.length;
      }
      String[] vArray=(String[])values.get(j);
      int arrayPos;
      for (arrayPos=i / numOfRepeats; arrayPos >= vArray.length; arrayPos=arrayPos - vArray.length) {
      }
      if (!fieldsValues.contains(vArray[arrayPos].trim())) {
        match=false;
        break;
      }
    }
    if (match) {
      rowPos=i;
      break;
    }
  }
  return rowPos;
}

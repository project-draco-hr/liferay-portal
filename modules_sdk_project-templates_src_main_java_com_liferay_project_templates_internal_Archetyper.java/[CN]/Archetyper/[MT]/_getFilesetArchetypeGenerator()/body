{
  FilesetArchetypeGenerator filesetArchetypeGenerator=new DefaultFilesetArchetypeGenerator();
  ReflectionUtil.setFieldValue(DefaultFilesetArchetypeGenerator.class,"archetypeArtifactManager",filesetArchetypeGenerator,_getArchetypeArtifactManager());
  ReflectionUtil.setFieldValue(_loggerField,filesetArchetypeGenerator,_logger);
  DefaultArchetypeFilesResolver defaultArchetypeFilesResolver=new DefaultArchetypeFilesResolver();
  ReflectionUtil.setFieldValue(DefaultFilesetArchetypeGenerator.class,"archetypeFilesResolver",filesetArchetypeGenerator,defaultArchetypeFilesResolver);
  DefaultVelocityComponent velocityComponent=new DefaultVelocityComponent();
  ReflectionUtil.setFieldValue(_loggerField,velocityComponent,_logger);
  Properties velocityProps=new Properties();
  velocityProps.setProperty(RuntimeConstants.RESOURCE_LOADER,"classpath");
  velocityProps.setProperty("classpath.resource.loader.class",ClasspathResourceLoader.class.getName());
  ReflectionUtil.setFieldValue(DefaultVelocityComponent.class,"properties",velocityComponent,velocityProps);
  ReflectionUtil.setFieldValue(DefaultFilesetArchetypeGenerator.class,"velocity",filesetArchetypeGenerator,velocityComponent);
  velocityComponent.initialize();
  return filesetArchetypeGenerator;
}

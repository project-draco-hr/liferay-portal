{
  String artifactId=projectTemplatesArgs.getName();
  String className=projectTemplatesArgs.getClassName();
  String hostBundleSymbolicName=projectTemplatesArgs.getHostBundleSymbolicName();
  String hostBundleVersion=projectTemplatesArgs.getHostBundleVersion();
  String packageName=projectTemplatesArgs.getPackageName();
  String projectType="standalone";
  if (projectTemplatesArgs.getWorkspaceDir() != null) {
    projectType="workspace";
  }
  String service=projectTemplatesArgs.getService();
  String templateName=projectTemplatesArgs.getTemplate();
  ArchetypeGenerationRequest archetypeGenerationRequest=new ArchetypeGenerationRequest();
  archetypeGenerationRequest.setArchetypeArtifactId(ProjectTemplates.TEMPLATE_BUNDLE_PREFIX + templateName);
  archetypeGenerationRequest.setArchetypeGroupId("com.liferay");
  archetypeGenerationRequest.setArchetypeVersion("0");
  archetypeGenerationRequest.setArtifactId(artifactId);
  archetypeGenerationRequest.setGroupId(packageName);
  archetypeGenerationRequest.setInteractiveMode(false);
  archetypeGenerationRequest.setOutputDirectory(destinationDir.getPath());
  archetypeGenerationRequest.setPackage(packageName);
  Properties properties=new Properties();
  _setProperty(properties,"className",className);
  _setProperty(properties,"hostBundleSymbolicName",hostBundleSymbolicName);
  _setProperty(properties,"hostBundleVersion",hostBundleVersion);
  _setProperty(properties,"package",packageName);
  _setProperty(properties,"projectType",projectType);
  _setProperty(properties,"serviceClass",service);
  archetypeGenerationRequest.setProperties(properties);
  archetypeGenerationRequest.setVersion("1.0.0");
  ArchetypeManager archetypeManager=_createArchetypeManager();
  return archetypeManager.generateProjectFromArchetype(archetypeGenerationRequest);
}

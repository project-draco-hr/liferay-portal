{
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  long groupId=ParamUtil.getLong(portletRequest,"groupId");
  boolean privateLayout=ParamUtil.getBoolean(portletRequest,"privateLayout");
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  if (group.isCommunity()) {
    if (!GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.APPROVE_PROPOSAL) && !GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.MANAGE_LAYOUTS)) {
      throw new PrincipalException();
    }
  }
 else   if (group.isOrganization()) {
    long organizationId=group.getClassPK();
    if (!OrganizationPermissionUtil.contains(permissionChecker,organizationId,ActionKeys.APPROVE_PROPOSAL) && !OrganizationPermissionUtil.contains(permissionChecker,organizationId,ActionKeys.MANAGE_LAYOUTS)) {
      throw new PrincipalException();
    }
  }
 else   if (group.isUser()) {
    long groupUserId=group.getClassPK();
    User groupUser=UserLocalServiceUtil.getUserById(groupUserId);
    long[] organizationIds=groupUser.getOrganizationIds();
    UserPermissionUtil.check(permissionChecker,groupUserId,organizationIds,ActionKeys.UPDATE);
    if ((privateLayout && !PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_MODIFIABLE) || (!privateLayout && !PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_MODIFIABLE)) {
      throw new PrincipalException();
    }
  }
}

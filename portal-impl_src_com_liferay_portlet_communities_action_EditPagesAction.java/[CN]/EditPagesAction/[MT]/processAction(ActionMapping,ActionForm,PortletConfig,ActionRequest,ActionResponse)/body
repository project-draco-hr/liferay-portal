{
  try {
    checkPermissions(req);
  }
 catch (  PrincipalException pe) {
    return;
  }
  String cmd=ParamUtil.getString(req,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateLayout(req,res);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      CommunitiesUtil.deleteLayout(req,res);
    }
 else     if (cmd.equals("copy_from_live")) {
      copyFromLive(req);
    }
 else     if (cmd.equals("display_order")) {
      updateDisplayOrder(req);
    }
 else     if (cmd.equals("logo")) {
      updateLogo(req);
    }
 else     if (cmd.equals("look_and_feel")) {
      updateLookAndFeel(req);
    }
 else     if (cmd.equals("update_managed_staging_state")) {
      updateManagedStagingState(req);
    }
 else     if (cmd.equals("merge_pages")) {
      updateMergePages(req);
    }
 else     if (cmd.equals("monitoring")) {
      updateMonitoring(req);
    }
 else     if (cmd.equals("update_number_of_approval_stages")) {
      updateNumberOfApprovalStages(req);
    }
 else     if (cmd.equals("publish_to_live")) {
      publishToLive(req);
    }
 else     if (cmd.equals("update_staging_state")) {
      updateStagingState(req);
    }
 else     if (cmd.equals("virtual_host")) {
      updateVirtualHost(req);
    }
    String redirect=ParamUtil.getString(req,"pagesRedirect");
    sendRedirect(req,res,redirect);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchLayoutException || e instanceof NoSuchProposalException || e instanceof PrincipalException) {
      SessionErrors.add(req,e.getClass().getName());
      setForward(req,"portlet.communities.error");
    }
 else     if (e instanceof LayoutFriendlyURLException || e instanceof LayoutHiddenException || e instanceof LayoutNameException|| e instanceof LayoutParentLayoutIdException|| e instanceof LayoutSetVirtualHostException|| e instanceof LayoutTypeException|| e instanceof RequiredLayoutException|| e instanceof UploadException) {
      if (e instanceof LayoutFriendlyURLException) {
        SessionErrors.add(req,LayoutFriendlyURLException.class.getName(),e);
      }
 else {
        SessionErrors.add(req,e.getClass().getName(),e);
      }
    }
 else {
      throw e;
    }
  }
}

{
  try {
    checkPermissions(actionRequest);
  }
 catch (  PrincipalException pe) {
    return;
  }
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateLayout(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      CommunitiesUtil.deleteLayout(actionRequest,actionResponse);
    }
 else     if (cmd.equals("copy_from_live")) {
      StagingUtil.copyFromLive(actionRequest);
    }
 else     if (cmd.equals("display_order")) {
      updateDisplayOrder(actionRequest);
    }
 else     if (cmd.equals("logo")) {
      updateLogo(actionRequest);
    }
 else     if (cmd.equals("look_and_feel")) {
      updateLookAndFeel(actionRequest);
    }
 else     if (cmd.equals("merge_pages")) {
      updateMergePages(actionRequest);
    }
 else     if (cmd.equals("monitoring")) {
      updateMonitoring(actionRequest);
    }
 else     if (cmd.equals("publish_to_live")) {
      StagingUtil.publishToLive(actionRequest);
    }
 else     if (cmd.equals("publish_to_remote")) {
      StagingUtil.publishToRemote(actionRequest);
    }
 else     if (cmd.equals("schedule_copy_from_live")) {
      StagingUtil.scheduleCopyFromLive(actionRequest);
    }
 else     if (cmd.equals("schedule_publish_to_live")) {
      StagingUtil.schedulePublishToLive(actionRequest);
    }
 else     if (cmd.equals("schedule_publish_to_remote")) {
      StagingUtil.schedulePublishToRemote(actionRequest);
    }
 else     if (cmd.equals("staging")) {
      StagingUtil.updateStaging(actionRequest);
    }
 else     if (cmd.equals("unschedule_copy_from_live")) {
      StagingUtil.unscheduleCopyFromLive(actionRequest);
    }
 else     if (cmd.equals("unschedule_publish_to_live")) {
      StagingUtil.unschedulePublishToLive(actionRequest);
    }
 else     if (cmd.equals("unschedule_publish_to_remote")) {
      StagingUtil.unschedulePublishToRemote(actionRequest);
    }
 else     if (cmd.equals("virtual_host")) {
      updateVirtualHost(actionRequest);
    }
 else     if (cmd.equals("workflow")) {
      updateWorkflow(actionRequest);
    }
    String redirect=ParamUtil.getString(actionRequest,"pagesRedirect");
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchLayoutException || e instanceof NoSuchProposalException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      setForward(actionRequest,"portlet.communities.error");
    }
 else     if (e instanceof RemoteExportException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
      String redirect=ParamUtil.getString(actionRequest,"pagesRedirect");
      sendRedirect(actionRequest,actionResponse,redirect);
    }
 else     if (e instanceof LayoutFriendlyURLException || e instanceof LayoutHiddenException || e instanceof LayoutNameException|| e instanceof LayoutParentLayoutIdException|| e instanceof LayoutSetVirtualHostException|| e instanceof LayoutTypeException|| e instanceof RequiredLayoutException|| e instanceof UploadException) {
      if (e instanceof LayoutFriendlyURLException) {
        SessionErrors.add(actionRequest,LayoutFriendlyURLException.class.getName(),e);
      }
 else {
        SessionErrors.add(actionRequest,e.getClass().getName(),e);
      }
    }
 else {
      throw e;
    }
  }
}

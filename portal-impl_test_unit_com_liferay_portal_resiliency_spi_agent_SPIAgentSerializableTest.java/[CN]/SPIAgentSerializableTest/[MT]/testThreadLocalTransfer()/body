{
  ThreadLocalDistributor threadLocalDistributor=new ThreadLocalDistributor();
  threadLocalDistributor.setThreadLocalSources(Arrays.asList(new KeyValuePair(SPIAgentSerializableTest.class.getName(),"_threadLocal")));
  threadLocalDistributor.afterPropertiesSet();
  Serializable[] serializables=(Serializable[])ReflectionTestUtil.getFieldValue(threadLocalDistributor,"_threadLocalValues");
  Assert.assertNotNull(serializables);
  Assert.assertEquals(1,serializables.length);
  Assert.assertNull(serializables[0]);
  String threadLocalValue="threadLocalValue";
  _threadLocal.set(threadLocalValue);
  SPIAgentSerializable agentSerializable=new SPIAgentSerializable(_SERVLET_CONTEXT_NAME);
  Assert.assertNull(agentSerializable.threadLocalDistributors);
  agentSerializable.captureThreadLocals();
  ThreadLocalDistributor[] threadLocalDistributors=agentSerializable.threadLocalDistributors;
  Assert.assertNotNull(threadLocalDistributors);
  Assert.assertEquals(1,threadLocalDistributors.length);
  Assert.assertSame(threadLocalDistributor,threadLocalDistributors[0]);
  serializables=(Serializable[])ReflectionTestUtil.getFieldValue(threadLocalDistributor,"_threadLocalValues");
  Assert.assertNotNull(serializables);
  Assert.assertEquals(1,serializables.length);
  Assert.assertEquals(threadLocalValue,serializables[0]);
  _threadLocal.remove();
  agentSerializable.restoreThreadLocals();
  Assert.assertEquals(threadLocalValue,_threadLocal.get());
  _threadLocal.remove();
}

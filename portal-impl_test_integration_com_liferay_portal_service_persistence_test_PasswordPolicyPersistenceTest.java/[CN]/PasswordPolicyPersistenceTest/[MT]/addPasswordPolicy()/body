{
  long pk=RandomTestUtil.nextLong();
  PasswordPolicy passwordPolicy=_persistence.create(pk);
  passwordPolicy.setMvccVersion(RandomTestUtil.nextLong());
  passwordPolicy.setUuid(RandomTestUtil.randomString());
  passwordPolicy.setCompanyId(RandomTestUtil.nextLong());
  passwordPolicy.setUserId(RandomTestUtil.nextLong());
  passwordPolicy.setUserName(RandomTestUtil.randomString());
  passwordPolicy.setCreateDate(RandomTestUtil.nextDate());
  passwordPolicy.setModifiedDate(RandomTestUtil.nextDate());
  passwordPolicy.setDefaultPolicy(RandomTestUtil.randomBoolean());
  passwordPolicy.setName(RandomTestUtil.randomString());
  passwordPolicy.setDescription(RandomTestUtil.randomString());
  passwordPolicy.setChangeable(RandomTestUtil.randomBoolean());
  passwordPolicy.setChangeRequired(RandomTestUtil.randomBoolean());
  passwordPolicy.setMinAge(RandomTestUtil.nextLong());
  passwordPolicy.setCheckSyntax(RandomTestUtil.randomBoolean());
  passwordPolicy.setAllowDictionaryWords(RandomTestUtil.randomBoolean());
  passwordPolicy.setMinAlphanumeric(RandomTestUtil.nextInt());
  passwordPolicy.setMinLength(RandomTestUtil.nextInt());
  passwordPolicy.setMinLowerCase(RandomTestUtil.nextInt());
  passwordPolicy.setMinNumbers(RandomTestUtil.nextInt());
  passwordPolicy.setMinSymbols(RandomTestUtil.nextInt());
  passwordPolicy.setMinUpperCase(RandomTestUtil.nextInt());
  passwordPolicy.setRegex(RandomTestUtil.randomString());
  passwordPolicy.setHistory(RandomTestUtil.randomBoolean());
  passwordPolicy.setHistoryCount(RandomTestUtil.nextInt());
  passwordPolicy.setExpireable(RandomTestUtil.randomBoolean());
  passwordPolicy.setMaxAge(RandomTestUtil.nextLong());
  passwordPolicy.setWarningTime(RandomTestUtil.nextLong());
  passwordPolicy.setGraceLimit(RandomTestUtil.nextInt());
  passwordPolicy.setLockout(RandomTestUtil.randomBoolean());
  passwordPolicy.setMaxFailure(RandomTestUtil.nextInt());
  passwordPolicy.setLockoutDuration(RandomTestUtil.nextLong());
  passwordPolicy.setRequireUnlock(RandomTestUtil.randomBoolean());
  passwordPolicy.setResetFailureCount(RandomTestUtil.nextLong());
  passwordPolicy.setResetTicketMaxAge(RandomTestUtil.nextLong());
  _passwordPolicies.add(_persistence.update(passwordPolicy));
  return passwordPolicy;
}

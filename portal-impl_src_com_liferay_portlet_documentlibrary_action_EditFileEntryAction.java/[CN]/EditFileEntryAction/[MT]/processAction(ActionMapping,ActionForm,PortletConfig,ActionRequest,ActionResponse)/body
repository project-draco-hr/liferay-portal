{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateFileEntry(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteFileEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.LOCK)) {
      lockFileEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.MOVE)) {
      moveFileEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.REVERT)) {
      revertFileEntry(actionRequest);
    }
 else     if (cmd.equals(Constants.UNLOCK)) {
      unlockFileEntries(actionRequest);
    }
    WindowState windowState=actionRequest.getWindowState();
    if (!windowState.equals(LiferayWindowState.POP_UP)) {
      sendRedirect(actionRequest,actionResponse);
    }
 else {
      String redirect=ParamUtil.getString(actionRequest,"redirect");
      actionResponse.sendRedirect(redirect);
    }
  }
 catch (  Exception e) {
    if (e instanceof DuplicateLockException || e instanceof NoSuchFileEntryException || e instanceof PrincipalException) {
      if (e instanceof DuplicateLockException) {
        DuplicateLockException dle=(DuplicateLockException)e;
        SessionErrors.add(actionRequest,dle.getClass().getName(),dle.getLock());
      }
 else {
        SessionErrors.add(actionRequest,e.getClass().getName());
      }
      setForward(actionRequest,"portlet.document_library.error");
    }
 else     if (e instanceof DuplicateFileException || e instanceof DuplicateFolderNameException || e instanceof FileExtensionException|| e instanceof FileNameException|| e instanceof FileSizeException|| e instanceof NoSuchFolderException|| e instanceof SourceFileNameException) {
      if (e instanceof DuplicateFileException) {
        HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
        response.setStatus(ServletResponseConstants.SC_DUPLICATE_FILE_EXCEPTION);
      }
 else       if (e instanceof FileExtensionException) {
        HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
        response.setStatus(ServletResponseConstants.SC_FILE_EXTENSION_EXCEPTION);
      }
 else       if (e instanceof FileNameException) {
        HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
        response.setStatus(ServletResponseConstants.SC_FILE_NAME_EXCEPTION);
      }
 else       if (e instanceof FileSizeException) {
        HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
        response.setStatus(ServletResponseConstants.SC_FILE_SIZE_EXCEPTION);
      }
      SessionErrors.add(actionRequest,e.getClass().getName());
    }
 else     if (e instanceof AssetTagException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  String cmd=ParamUtil.getString(uploadPortletRequest,Constants.CMD);
  long fileEntryId=ParamUtil.getLong(uploadPortletRequest,"fileEntryId");
  long repositoryId=ParamUtil.getLong(uploadPortletRequest,"repositoryId");
  long folderId=ParamUtil.getLong(uploadPortletRequest,"folderId");
  String sourceFileName=uploadPortletRequest.getFileName("file");
  String title=ParamUtil.getString(uploadPortletRequest,"title");
  String description=ParamUtil.getString(uploadPortletRequest,"description");
  String changeLog=ParamUtil.getString(uploadPortletRequest,"changeLog");
  boolean majorVersion=ParamUtil.getBoolean(uploadPortletRequest,"majorVersion");
  File file=uploadPortletRequest.getFile("file");
  if (Validator.isNotNull(sourceFileName) && !file.exists()) {
    file.createNewFile();
  }
  String contentType=uploadPortletRequest.getContentType("file");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DLFileEntry.class.getName(),actionRequest);
  FileEntry fileEntry=null;
  if (cmd.equals(Constants.ADD)) {
    if (Validator.isNull(title)) {
      title=sourceFileName;
    }
    fileEntry=DLAppServiceUtil.addFileEntry(repositoryId,folderId,sourceFileName,contentType,title,description,changeLog,file,serviceContext);
    AssetPublisherUtil.addAndStoreSelection(actionRequest,DLFileEntry.class.getName(),fileEntry.getFileEntryId(),-1);
  }
 else {
    fileEntry=DLAppServiceUtil.updateFileEntry(fileEntryId,sourceFileName,contentType,title,description,changeLog,majorVersion,file,serviceContext);
  }
  AssetPublisherUtil.addRecentFolderId(actionRequest,DLFileEntry.class.getName(),folderId);
}

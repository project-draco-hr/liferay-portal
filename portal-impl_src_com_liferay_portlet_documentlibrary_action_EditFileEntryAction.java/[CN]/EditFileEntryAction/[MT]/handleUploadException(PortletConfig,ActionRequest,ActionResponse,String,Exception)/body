{
  if (e instanceof AssetCategoryException || e instanceof AssetTagException) {
    SessionErrors.add(actionRequest,e.getClass(),e);
  }
 else   if (e instanceof DuplicateFileException || e instanceof DuplicateFolderNameException || e instanceof FileExtensionException|| e instanceof FileMimeTypeException|| e instanceof FileNameException|| e instanceof FileSizeException|| e instanceof NoSuchFolderException|| e instanceof SourceFileNameException|| e instanceof StorageFieldRequiredException) {
    if (!cmd.equals(Constants.ADD_DYNAMIC) && !cmd.equals(Constants.ADD_MULTIPLE) && !cmd.equals(Constants.ADD_TEMP)) {
      SessionErrors.add(actionRequest,e.getClass());
      return;
    }
    if (e instanceof DuplicateFileException || e instanceof FileExtensionException || e instanceof FileNameException|| e instanceof FileSizeException) {
      HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
      response.setContentType(ContentTypes.TEXT_HTML);
      response.setStatus(HttpServletResponse.SC_OK);
      int errorType=0;
      String errorMessage=StringPool.BLANK;
      ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
      if (e instanceof DuplicateFileException) {
        errorType=ServletResponseConstants.SC_DUPLICATE_FILE_EXCEPTION;
        errorMessage=themeDisplay.translate("please-enter-a-unique-document-name");
      }
 else       if (e instanceof FileExtensionException) {
        errorType=ServletResponseConstants.SC_FILE_EXTENSION_EXCEPTION;
        errorMessage=themeDisplay.translate("document-names-must-end-with-one-of-the-following-" + "extensions",StringUtil.merge(getAllowedFileExtensions(portletConfig,actionRequest,actionResponse)));
      }
 else       if (e instanceof FileNameException) {
        errorType=ServletResponseConstants.SC_FILE_NAME_EXCEPTION;
        errorMessage=themeDisplay.translate("please-enter-a-file-with-a-valid-file-name");
      }
 else       if (e instanceof FileSizeException) {
        errorType=ServletResponseConstants.SC_FILE_SIZE_EXCEPTION;
        long fileMaxSize=PrefsPropsUtil.getLong(PropsKeys.DL_FILE_MAX_SIZE);
        if (fileMaxSize == 0) {
          fileMaxSize=PrefsPropsUtil.getLong(PropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE);
        }
        fileMaxSize/=1024;
        errorMessage=themeDisplay.translate("please-enter-a-file-with-a-valid-file-size-no-larger" + "-than-x",fileMaxSize);
      }
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.put("status",errorType);
      jsonObject.put("message",errorMessage);
      writeJSON(actionRequest,actionResponse,jsonObject);
    }
    SessionErrors.add(actionRequest,e.getClass());
  }
 else   if (e instanceof DuplicateLockException || e instanceof InvalidFileVersionException || e instanceof NoSuchFileEntryException|| e instanceof PrincipalException) {
    if (e instanceof DuplicateLockException) {
      DuplicateLockException dle=(DuplicateLockException)e;
      SessionErrors.add(actionRequest,dle.getClass(),dle.getLock());
    }
 else {
      SessionErrors.add(actionRequest,e.getClass());
    }
    setForward(actionRequest,"portlet.document_library.error");
  }
 else {
    throw e;
  }
}

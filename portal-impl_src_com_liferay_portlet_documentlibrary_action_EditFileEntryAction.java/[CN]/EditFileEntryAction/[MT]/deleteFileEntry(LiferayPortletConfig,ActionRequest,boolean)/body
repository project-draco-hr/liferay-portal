{
  long fileEntryId=ParamUtil.getLong(actionRequest,"fileEntryId");
  if (fileEntryId == 0) {
    return;
  }
  String version=ParamUtil.getString(actionRequest,"version");
  if (Validator.isNotNull(version)) {
    DLAppServiceUtil.deleteFileVersion(fileEntryId,version);
    return;
  }
  if (!moveToTrash) {
    DLAppServiceUtil.deleteFileEntry(fileEntryId);
    return;
  }
  FileEntry fileEntry=DLAppServiceUtil.moveFileEntryToTrash(fileEntryId);
  Map<String,String[]> data=new HashMap<String,String[]>();
  data.put("deleteEntryClassName",new String[]{DLFileEntry.class.getName()});
  if (fileEntry != null) {
    data.put("deleteEntryTitle",new String[]{TrashUtil.getOriginalTitle(fileEntry.getTitle())});
  }
  data.put("restoreFileEntryIds",new String[]{String.valueOf(fileEntryId)});
  SessionMessages.add(actionRequest,liferayPortletConfig.getPortletId() + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS_DATA,data);
  hideDefaultSuccessMessage(liferayPortletConfig,actionRequest);
}

{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long folderId=ParamUtil.getLong(uploadPortletRequest,"folderId");
  String sourceFileName=uploadPortletRequest.getFileName("file");
  String title=sourceFileName;
  StringBundler sb=new StringBundler(5);
  sb.append(FileUtil.stripExtension(sourceFileName));
  sb.append(TEMP_RANDOM_SUFFIX);
  sb.append(StringUtil.randomString());
  String extension=FileUtil.getExtension(sourceFileName);
  if (Validator.isNotNull(extension)) {
    sb.append(StringPool.PERIOD);
    sb.append(extension);
  }
  sourceFileName=sb.toString();
  InputStream inputStream=null;
  try {
    inputStream=uploadPortletRequest.getFileAsStream("file");
    String contentType=uploadPortletRequest.getContentType("file");
    DLAppServiceUtil.addTempFileEntry(themeDisplay.getScopeGroupId(),folderId,_TEMP_FOLDER_NAME,sourceFileName,inputStream,contentType);
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("name",sourceFileName);
    jsonObject.put("title",title);
    writeJSON(actionRequest,actionResponse,jsonObject);
  }
 catch (  Exception e) {
    UploadException uploadException=(UploadException)actionRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
    if ((uploadException != null) && (uploadException.getCause() instanceof IOFileUploadException)) {
    }
 else     if ((uploadException != null) && uploadException.isExceededSizeLimit()) {
      throw new FileSizeException(uploadException.getCause());
    }
 else {
      throw e;
    }
  }
 finally {
    StreamUtil.cleanUp(inputStream);
  }
}

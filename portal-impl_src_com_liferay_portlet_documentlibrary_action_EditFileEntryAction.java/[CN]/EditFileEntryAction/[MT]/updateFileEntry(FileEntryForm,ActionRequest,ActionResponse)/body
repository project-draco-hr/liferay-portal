{
  UploadPortletRequest uploadRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  String cmd=ParamUtil.getString(uploadRequest,Constants.CMD);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long groupId=themeDisplay.getScopeGroupId();
  long folderId=ParamUtil.getLong(uploadRequest,"folderId");
  long newFolderId=ParamUtil.getLong(uploadRequest,"newFolderId");
  String name=ParamUtil.getString(uploadRequest,"name");
  String sourceFileName=uploadRequest.getFileName("file");
  String title=ParamUtil.getString(uploadRequest,"title");
  String description=ParamUtil.getString(uploadRequest,"description");
  String versionDescription=ParamUtil.getString(uploadRequest,"versionDescription");
  String extraSettings=PropertiesUtil.toString(fileEntryForm.getExtraSettingsProperties());
  File file=uploadRequest.getFile("file");
  if (Validator.isNotNull(sourceFileName) && !file.exists()) {
    file.createNewFile();
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DLFileEntry.class.getName(),actionRequest);
  if (cmd.equals(Constants.ADD)) {
    DLFileEntry fileEntry=DLFileEntryServiceUtil.addFileEntry(groupId,newFolderId,sourceFileName,title,description,versionDescription,extraSettings,file,serviceContext);
    AssetPublisherUtil.addAndStoreSelection(actionRequest,DLFileEntry.class.getName(),fileEntry.getFileEntryId(),-1);
  }
 else {
    DLFileEntryServiceUtil.updateFileEntry(groupId,folderId,newFolderId,name,sourceFileName,title,description,versionDescription,extraSettings,file,serviceContext);
  }
  AssetPublisherUtil.addRecentFolderId(actionRequest,DLFileEntry.class.getName(),folderId);
}

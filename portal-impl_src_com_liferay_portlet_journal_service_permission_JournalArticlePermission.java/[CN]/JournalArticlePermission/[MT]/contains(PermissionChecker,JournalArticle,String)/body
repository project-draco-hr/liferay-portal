{
  Boolean hasPermission=StagingPermissionUtil.hasPermission(permissionChecker,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),PortletKeys.JOURNAL,actionId);
  if (hasPermission != null) {
    return hasPermission.booleanValue();
  }
  if (article.isPending()) {
    hasPermission=WorkflowPermissionUtil.hasPermission(permissionChecker,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),actionId);
    if (hasPermission != null) {
      return hasPermission.booleanValue();
    }
  }
  if (actionId.equals(ActionKeys.VIEW) && PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {
    long articleFolderId=article.getFolderId();
    if (articleFolderId != JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      try {
        JournalFolder folder=JournalFolderLocalServiceUtil.getFolder(articleFolderId);
        if (!JournalFolderPermission.contains(permissionChecker,folder,ActionKeys.ACCESS) && !JournalFolderPermission.contains(permissionChecker,folder,ActionKeys.VIEW)) {
          return false;
        }
      }
 catch (      NoSuchFolderException nsfe) {
        if (!article.isInTrash()) {
          throw nsfe;
        }
      }
    }
  }
  if (permissionChecker.hasOwnerPermission(article.getCompanyId(),JournalArticle.class.getName(),article.getResourcePrimKey(),article.getUserId(),actionId)) {
    return true;
  }
  return permissionChecker.hasPermission(article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),actionId);
}

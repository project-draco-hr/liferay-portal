{
  Boolean hasPermission=StagingPermissionUtil.hasPermission(permissionChecker,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),PortletKeys.JOURNAL,actionId);
  if (hasPermission != null) {
    return hasPermission.booleanValue();
  }
  if (article.isPending()) {
    hasPermission=WorkflowPermissionUtil.hasPermission(permissionChecker,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),actionId);
    if (hasPermission != null) {
      return hasPermission.booleanValue();
    }
  }
  if ((article.getFolderId() != JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) && !actionId.equals(ActionKeys.EXPIRE)) {
    try {
      JournalFolder folder=JournalFolderLocalServiceUtil.getFolder(article.getFolderId());
      if (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE && !JournalFolderPermission.contains(permissionChecker,folder,ActionKeys.ACCESS) && !JournalFolderPermission.contains(permissionChecker,folder,ActionKeys.VIEW)) {
        return false;
      }
      if (JournalFolderPermission.contains(permissionChecker,folder,actionId)) {
        return true;
      }
    }
 catch (    NoSuchFolderException nsfe) {
      if (!article.isInTrash()) {
        throw nsfe;
      }
    }
  }
  if (permissionChecker.hasOwnerPermission(article.getCompanyId(),JournalArticle.class.getName(),article.getResourcePrimKey(),article.getUserId(),actionId)) {
    return true;
  }
  return permissionChecker.hasPermission(article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),actionId);
}

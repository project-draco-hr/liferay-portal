{
  boolean privateLayout=false;
  long[] layoutIds=null;
  Map<String,String[]> parameterMap=new HashMap<>();
  Map<String,Serializable> settingsMap=ExportImportConfigurationSettingsMapFactory.buildExportLayoutSettingsMap(TestPropsValues.getUser(),_group.getGroupId(),privateLayout,layoutIds,parameterMap);
  ExportImportConfiguration exportImportConfiguration=ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(TestPropsValues.getUserId(),ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_REMOTE,settingsMap);
  File file=ExportImportLocalServiceUtil.exportLayoutsAsFile(exportImportConfiguration);
  PortletDataContext portletDataContext=PortletDataContextFactoryUtil.createImportPortletDataContext(_group.getCompanyId(),_group.getGroupId(),parameterMap,new CurrentUserIdStrategy(TestPropsValues.getUser()),ZipReaderFactoryUtil.getZipReader(file));
  ExportImportContentProcessorController exportImportContentProcessorController=new ExportImportContentProcessorController();
  String content=exportImportContentProcessorController.replaceImportContentReferences(portletDataContext,new DummyStagedModel(),"abc");
  Assert.assertEquals("abc123",content);
}

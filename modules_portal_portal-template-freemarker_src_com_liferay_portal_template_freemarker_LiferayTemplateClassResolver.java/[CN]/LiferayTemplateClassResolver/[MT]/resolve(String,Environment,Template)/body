{
  if (className.equals(ObjectConstructor.class.getName()) || className.equals(Execute.class.getName())) {
    throw new TemplateException("Instantiating " + className + " is not allowed in the "+ "template for security reasons",environment);
  }
  String[] restrictedClasses=GetterUtil.getStringValues(_freemarkerEngineConfiguration.restrictedClasses());
  for (  String restrictedClassName : restrictedClasses) {
    if (restrictedClassName.equals(StringPool.STAR)) {
      throw new TemplateException("Instantiating " + className + " is not allowed in the "+ "template for security reasons",environment);
    }
 else     if (restrictedClassName.endsWith(StringPool.STAR)) {
      restrictedClassName=restrictedClassName.substring(0,restrictedClassName.length() - 1);
      if (className.startsWith(restrictedClassName)) {
        throw new TemplateException("Instantiating " + className + " is not allowed in "+ "the template for security reasons",environment);
      }
    }
 else     if (className.equals(restrictedClassName)) {
      throw new TemplateException("Instantiating " + className + " is not allowed in the "+ "template for security reasons",environment);
    }
  }
  boolean allowed=false;
  String[] allowedClasses=GetterUtil.getStringValues(_freemarkerEngineConfiguration.allowedClasses());
  for (  String allowedClassName : allowedClasses) {
    if (allowedClassName.equals(StringPool.STAR)) {
      allowed=true;
      break;
    }
 else     if (allowedClassName.endsWith(StringPool.STAR)) {
      allowedClassName=allowedClassName.substring(0,allowedClassName.length() - 1);
      if (className.startsWith(allowedClassName)) {
        allowed=true;
        break;
      }
    }
 else     if (allowedClassName.equals(className)) {
      allowed=true;
      break;
    }
  }
  if (allowed) {
    try {
      return Class.forName(className,true,ClassLoaderUtil.getContextClassLoader());
    }
 catch (    Exception e) {
      throw new TemplateException(e,environment);
    }
  }
  throw new TemplateException("Instantiating " + className + " is not allowed in the template "+ "for security reasons",environment);
}

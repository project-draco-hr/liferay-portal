{
  if (allowedClasses != null) {
    throw new ExecutionException("Constrained execution not supported for Python");
  }
  try {
    PyCode compiledScript=getCompiledScript(script);
    InteractiveInterpreter interactiveInterpreter=new InteractiveInterpreter();
    for (    Map.Entry<String,Object> entry : inputObjects.entrySet()) {
      String key=entry.getKey();
      Object value=entry.getValue();
      interactiveInterpreter.set(key,value);
    }
    interactiveInterpreter.exec(compiledScript);
    if (outputNames == null) {
      return null;
    }
    Map<String,Object> outputObjects=new HashMap<>();
    for (    String outputName : outputNames) {
      PyObject pyObject=interactiveInterpreter.get(outputName);
      outputObjects.put(outputName,pyObject.__tojava__(Object.class));
    }
    return outputObjects;
  }
 catch (  PySyntaxError pySyntaxError) {
    UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
    Py.displayException(pySyntaxError.type,pySyntaxError.value,pySyntaxError.traceback,new PyFile(unsyncByteArrayOutputStream));
    String message=unsyncByteArrayOutputStream.toString();
    throw new ScriptingException(message,pySyntaxError);
  }
}

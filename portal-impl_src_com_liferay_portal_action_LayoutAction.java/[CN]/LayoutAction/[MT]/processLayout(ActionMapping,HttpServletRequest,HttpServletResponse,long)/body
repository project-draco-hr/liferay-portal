{
  HttpSession session=request.getSession();
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  try {
    Layout layout=themeDisplay.getLayout();
    Layout previousLayout=(Layout)session.getAttribute(WebKeys.PREVIOUS_LAYOUT);
    if ((previousLayout == null) || (layout.getPlid() != previousLayout.getPlid())) {
      session.setAttribute(WebKeys.PREVIOUS_LAYOUT,layout);
      if (themeDisplay.isSignedIn() && PropsValues.AUDIT_MESSAGE_COM_LIFERAY_PORTAL_MODEL_LAYOUT_VIEW && MessageBusUtil.hasMessageListener(DestinationNames.AUDIT)) {
        User user=themeDisplay.getUser();
        AuditMessage auditMessage=new AuditMessage(ActionKeys.VIEW,user.getCompanyId(),user.getUserId(),user.getFullName(),Layout.class.getName(),String.valueOf(layout.getPlid()));
        AuditRouterUtil.route(auditMessage);
      }
    }
    boolean resetLayout=ParamUtil.getBoolean(request,"p_l_reset",PropsValues.LAYOUT_DEFAULT_P_L_RESET);
    String portletId=ParamUtil.getString(request,"p_p_id");
    if (!PropsValues.TCK_URL && resetLayout && (Validator.isNull(portletId) || ((previousLayout != null) && (layout.getPlid() != previousLayout.getPlid())))) {
      RenderParametersPool.clear(request,plid);
    }
    Portlet portlet=null;
    if (Validator.isNotNull(portletId)) {
      long companyId=PortalUtil.getCompanyId(request);
      portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
    }
    if (portlet != null) {
      if (themeDisplay.isLifecycleAction()) {
        processPortletRequest(request,response,portlet,PortletRequest.ACTION_PHASE);
        ActionResponseImpl actionResponseImpl=(ActionResponseImpl)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
        String redirectLocation=actionResponseImpl.getRedirectLocation();
        if (Validator.isNotNull(redirectLocation)) {
          response.sendRedirect(redirectLocation);
          return null;
        }
        if (portlet.isActionURLRedirect()) {
          redirectActionURL(request,response,actionResponseImpl,portlet);
          return null;
        }
        if (response.isCommitted()) {
          return null;
        }
      }
 else       if (themeDisplay.isLifecycleRender()) {
        processPortletRequest(request,response,portlet,PortletRequest.RENDER_PHASE);
      }
      if (themeDisplay.isLifecycleResource()) {
        processPortletRequest(request,response,portlet,PortletRequest.RESOURCE_PHASE);
        return null;
      }
    }
    if (layout != null) {
      if (themeDisplay.isStateExclusive()) {
        RuntimePortletUtil.processPortlet(request,response,portlet);
        return null;
      }
 else {
        includeLayoutContent(request,response,themeDisplay,layout,portletId);
      }
    }
    return mapping.findForward("portal.layout");
  }
 catch (  Exception e) {
    PortalUtil.sendError(e,request,response);
    return null;
  }
 finally {
    if (!ServerDetector.isResin()) {
      PortletRequest portletRequest=(PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
      if (portletRequest != null) {
        PortletRequestImpl portletRequestImpl=(PortletRequestImpl)portletRequest;
        portletRequestImpl.cleanUp();
      }
    }
  }
}

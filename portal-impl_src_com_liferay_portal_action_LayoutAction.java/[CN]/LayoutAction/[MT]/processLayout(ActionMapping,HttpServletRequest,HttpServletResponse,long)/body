{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  boolean resetLayout=ParamUtil.getBoolean(req,"p_l_reset",PropsValues.LAYOUT_DEFAULT_P_L_RESET);
  try {
    if (resetLayout) {
      RenderParametersPool.clear(req,plid);
    }
    if (themeDisplay.isLifecycleAction()) {
      Portlet portlet=processPortletRequest(req,res,PortletRequest.ACTION_PHASE);
      if (portlet != null) {
        ActionResponseImpl actionResponseImpl=(ActionResponseImpl)req.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
        String redirectLocation=actionResponseImpl.getRedirectLocation();
        if (Validator.isNotNull(redirectLocation)) {
          res.sendRedirect(redirectLocation);
          return null;
        }
        if (portlet.isActionURLRedirect()) {
          redirectActionURL(req,res,actionResponseImpl,portlet);
          return null;
        }
      }
    }
 else     if (themeDisplay.isLifecycleRender()) {
      processPortletRequest(req,res,PortletRequest.RENDER_PHASE);
    }
    if (themeDisplay.isLifecycleResource()) {
      processPortletRequest(req,res,PortletRequest.RESOURCE_PHASE);
      return null;
    }
 else {
      if (layout != null) {
        includeLayoutContent(req,res,themeDisplay,layout);
        if (themeDisplay.isStateExclusive()) {
          serveExclusiveResource(req,res,themeDisplay);
          return null;
        }
      }
      return mapping.findForward("portal.layout");
    }
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    return mapping.findForward(ActionConstants.COMMON_ERROR);
  }
 finally {
    PortletRequest portletReq=(PortletRequest)req.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
    try {
      if (portletReq != null) {
        if (themeDisplay.isLifecycleAction()) {
          ActionRequestImpl actionRequestImpl=(ActionRequestImpl)portletReq;
          ActionRequestFactory.recycle(actionRequestImpl);
        }
 else         if (themeDisplay.isLifecycleRender()) {
          RenderRequestImpl renderRequestImpl=(RenderRequestImpl)portletReq;
          RenderRequestFactory.recycle(renderRequestImpl);
        }
 else         if (themeDisplay.isLifecycleResource()) {
          ResourceRequestImpl resourceRequestImpl=(ResourceRequestImpl)portletReq;
          ResourceRequestFactory.recycle(resourceRequestImpl);
        }
      }
    }
 catch (    Exception e) {
      _log.error(e);
    }
    req.removeAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
    PortletResponse portletRes=(PortletResponse)req.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
    try {
      if (portletRes != null) {
        if (themeDisplay.isLifecycleAction()) {
          ActionResponseImpl actionResponseImpl=(ActionResponseImpl)portletRes;
          ActionResponseFactory.recycle(actionResponseImpl);
        }
 else         if (themeDisplay.isLifecycleRender()) {
          RenderResponseImpl renderResponseImpl=(RenderResponseImpl)portletRes;
          RenderResponseFactory.recycle(renderResponseImpl);
        }
 else         if (themeDisplay.isLifecycleResource()) {
          ResourceResponseImpl resourceResponseImpl=(ResourceResponseImpl)portletRes;
          ResourceResponseFactory.recycle(resourceResponseImpl);
        }
      }
    }
 catch (    Exception e) {
      _log.error(e);
    }
    req.removeAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  }
}

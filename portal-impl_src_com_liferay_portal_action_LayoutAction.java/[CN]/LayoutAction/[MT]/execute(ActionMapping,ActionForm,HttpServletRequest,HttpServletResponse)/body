{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  Boolean layoutDefault=(Boolean)request.getAttribute(WebKeys.LAYOUT_DEFAULT);
  if ((layoutDefault != null) && (layoutDefault.booleanValue())) {
    Layout requestedLayout=(Layout)request.getAttribute(WebKeys.REQUESTED_LAYOUT);
    if (requestedLayout != null) {
      String redirectParam="redirect";
      String authLoginURL=PortalUtil.getCommunityLoginURL(themeDisplay);
      if (Validator.isNull(authLoginURL)) {
        authLoginURL=PropsValues.AUTH_LOGIN_URL;
      }
      String url=PortalUtil.getCurrentURL(request);
      if (Validator.isNotNull(PropsValues.AUTH_LOGIN_PORTLET_NAME)) {
        redirectParam=PortalUtil.getPortletNamespace(PropsValues.AUTH_LOGIN_PORTLET_NAME) + redirectParam;
      }
      if (Validator.isNotNull(authLoginURL)) {
        authLoginURL=HttpUtil.setParameter(authLoginURL,redirectParam,url);
      }
 else {
        PortletURL loginURL=LoginUtil.getLoginURL(request,themeDisplay.getPlid());
        loginURL.setParameter(redirectParam,url);
        authLoginURL=loginURL.toString();
      }
      if (_log.isDebugEnabled()) {
        _log.debug("Redirect requested layout to " + authLoginURL);
      }
      response.sendRedirect(authLoginURL);
    }
 else {
      String redirect=PortalUtil.getLayoutURL(layout,themeDisplay);
      if (_log.isDebugEnabled()) {
        _log.debug("Redirect default layout to " + redirect);
      }
      response.sendRedirect(redirect);
    }
    return null;
  }
  long plid=ParamUtil.getLong(request,"p_l_id");
  if (_log.isDebugEnabled()) {
    _log.debug("p_l_id is " + plid);
  }
  if (plid > 0) {
    return processLayout(mapping,request,response,plid);
  }
 else {
    try {
      forwardLayout(request);
      return mapping.findForward(ActionConstants.COMMON_FORWARD_JSP);
    }
 catch (    Exception e) {
      PortalUtil.sendError(e,request,response);
      return null;
    }
  }
}

{
  long pk=nextLong();
  UserGroup newUserGroup=_persistence.create(pk);
  newUserGroup.setCompanyId(nextLong());
  newUserGroup.setParentUserGroupId(nextLong());
  newUserGroup.setName(randomString());
  newUserGroup.setDescription(randomString());
  _persistence.update(newUserGroup);
  UserGroup existingUserGroup=_persistence.findByPrimaryKey(newUserGroup.getPrimaryKey());
  assertEquals(existingUserGroup.getUserGroupId(),newUserGroup.getUserGroupId());
  assertEquals(existingUserGroup.getCompanyId(),newUserGroup.getCompanyId());
  assertEquals(existingUserGroup.getParentUserGroupId(),newUserGroup.getParentUserGroupId());
  assertEquals(existingUserGroup.getName(),newUserGroup.getName());
  assertEquals(existingUserGroup.getDescription(),newUserGroup.getDescription());
}

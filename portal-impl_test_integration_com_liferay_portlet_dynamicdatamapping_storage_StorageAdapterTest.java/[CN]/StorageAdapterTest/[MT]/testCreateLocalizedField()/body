{
  String xsd=readText("text-repeatable-structure.xsd");
  DDMStructure structure=addStructure(_classNameId,null,"Test Structure",xsd,StorageType.XML.getValue(),DDMStructureConstants.TYPE_DEFAULT);
  Fields fields=new Fields();
  Map<Locale,List<Serializable>> dataMap=new HashMap<Locale,List<Serializable>>();
  List<Serializable> enValues=ListUtil.fromArray(new Serializable[]{"one","two","three"});
  Locale enLocale=LocaleUtil.fromLanguageId("en_US");
  dataMap.put(enLocale,enValues);
  List<Serializable> ptValues=ListUtil.fromArray(new Serializable[]{"um","dois","tres"});
  Locale ptLocale=LocaleUtil.fromLanguageId("pt_BR");
  dataMap.put(ptLocale,ptValues);
  Field field1=new Field(structure.getStructureId(),"name_1",dataMap,enLocale);
  fields.put(field1);
  Field field2=new Field();
  field2.setDefaultLocale(ptLocale);
  field2.setDDMStructureId(structure.getStructureId());
  field2.setName("name_2");
  field2.addValue(enLocale,"Joe");
  field2.addValue(ptLocale,"Joao");
  fields.put(field2);
  long classPK=create(_xmlStorageAdapater,structure.getStructureId(),fields);
  Fields actualFields=_xmlStorageAdapater.getFields(classPK);
  Assert.assertEquals(fields,actualFields);
  classPK=create(_expandoStorageAdapater,structure.getStructureId(),fields);
  actualFields=_expandoStorageAdapater.getFields(classPK);
  Assert.assertEquals(fields,actualFields);
}

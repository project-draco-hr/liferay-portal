{
  module=toUnwrappedModel(module);
  boolean isNew=module.isNew();
  ModuleModelImpl moduleModelImpl=(ModuleModelImpl)module;
  if (Validator.isNull(module.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    module.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (module.isNew()) {
      session.save(module);
      module.setNew(false);
    }
 else {
      module=(Module)session.merge(module);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !ModuleModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((moduleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{moduleModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{moduleModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((moduleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_APPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{moduleModelImpl.getOriginalAppId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_APPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_APPID,args);
      args=new Object[]{moduleModelImpl.getAppId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_APPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_APPID,args);
    }
    if ((moduleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUNDLESYMBOLICNAME.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{moduleModelImpl.getOriginalBundleSymbolicName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_BUNDLESYMBOLICNAME,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUNDLESYMBOLICNAME,args);
      args=new Object[]{moduleModelImpl.getBundleSymbolicName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_BUNDLESYMBOLICNAME,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUNDLESYMBOLICNAME,args);
    }
    if ((moduleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CONTEXTNAME.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{moduleModelImpl.getOriginalContextName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CONTEXTNAME,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CONTEXTNAME,args);
      args=new Object[]{moduleModelImpl.getContextName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CONTEXTNAME,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CONTEXTNAME,args);
    }
  }
  entityCache.putResult(ModuleModelImpl.ENTITY_CACHE_ENABLED,ModuleImpl.class,module.getPrimaryKey(),module,false);
  clearUniqueFindersCache(moduleModelImpl);
  cacheUniqueFindersCache(moduleModelImpl,isNew);
  module.resetOriginalValues();
  return module;
}

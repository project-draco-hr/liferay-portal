{
  DDMForm ddmForm=createDDMForm();
  DDMFormField nameDDMFormField=createTextDDMFormField("Name");
  List<DDMFormField> nestedNameDDMFormFields=nameDDMFormField.getNestedDDMFormFields();
  nestedNameDDMFormFields.add(createTextDDMFormField("Phone"));
  addDDMFormFields(ddmForm,nameDDMFormField);
  DDMStructure ddmStructure=createStructure("Test Structure",ddmForm);
  DDMFormValues ddmFormValues=createDDMFormValues(ddmForm,_availableLocales,LocaleUtil.US);
  DDMFormFieldValue paulDDMFormFieldValue=createDDMFormFieldValue("rztm","Name",createLocalizedValue("Paul","Paulo",LocaleUtil.US));
  List<DDMFormFieldValue> paulNestedDDMFormFieldValue=paulDDMFormFieldValue.getNestedDDMFormFieldValues();
  paulNestedDDMFormFieldValue.add(createDDMFormFieldValue("ovho","Phone",createLocalizedValue("Paul's Phone 1","Telefone de Paulo 1",LocaleUtil.US)));
  paulNestedDDMFormFieldValue.add(createDDMFormFieldValue("krvx","Phone",createLocalizedValue("Paul's Phone 2","Telefone de Paulo 2",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(paulDDMFormFieldValue);
  DDMFormFieldValue joeDDMFormFieldValue=createDDMFormFieldValue("rght","Name",createLocalizedValue("Joe","Joao",LocaleUtil.US));
  List<DDMFormFieldValue> joeNestedDDMFormFieldValue=joeDDMFormFieldValue.getNestedDDMFormFieldValues();
  joeNestedDDMFormFieldValue.add(createDDMFormFieldValue("latb","Phone",createLocalizedValue("Joe's Phone 1","Telefone de Joao 1",LocaleUtil.US)));
  joeNestedDDMFormFieldValue.add(createDDMFormFieldValue("jewp","Phone",createLocalizedValue("Joe's Phone 2","Telefone de Joao 2",LocaleUtil.US)));
  joeNestedDDMFormFieldValue.add(createDDMFormFieldValue("mkar","Phone",createLocalizedValue("Joe's Phone 3","Telefone de Joao 3",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(joeDDMFormFieldValue);
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(LocaleUtil.class.getName(),Level.WARNING)){
    Fields fields=DDMFormValuesToFieldsConverterUtil.convert(ddmStructure,ddmFormValues);
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(4,logRecords.size());
    for (    LogRecord logRecord : logRecords) {
      Assert.assertEquals("en_US is not a valid language id",logRecord.getMessage());
    }
    Assert.assertNotNull(fields);
    Field nameField=fields.get("Name");
    testField(nameField,createValuesList("Paul","Joe"),createValuesList("Paulo","Joao"),_availableLocales,LocaleUtil.US);
    Field phoneField=fields.get("Phone");
    testField(phoneField,createValuesList("Paul's Phone 1","Paul's Phone 2","Joe's Phone 1","Joe's Phone 2","Joe's Phone 3"),createValuesList("Telefone de Paulo 1","Telefone de Paulo 2","Telefone de Joao 1","Telefone de Joao 2","Telefone de Joao 3"),_availableLocales,LocaleUtil.US);
    Field fieldsDisplayField=fields.get(DDMImpl.FIELDS_DISPLAY_NAME);
    Assert.assertEquals("Name_INSTANCE_rztm,Phone_INSTANCE_ovho,Phone_INSTANCE_krvx," + "Name_INSTANCE_rght,Phone_INSTANCE_latb," + "Phone_INSTANCE_jewp,Phone_INSTANCE_mkar",fieldsDisplayField.getValue());
  }
 }

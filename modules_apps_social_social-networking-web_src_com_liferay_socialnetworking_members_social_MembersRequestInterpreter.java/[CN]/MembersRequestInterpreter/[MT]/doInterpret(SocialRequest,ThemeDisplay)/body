{
  String creatorUserName=getUserName(request.getUserId(),themeDisplay);
  User creatorUser=UserLocalServiceUtil.getUserById(request.getUserId());
  int requestType=request.getType();
  Group group=null;
  String className=request.getClassName();
  if (className.equals(Group.class.getName())) {
    group=GroupLocalServiceUtil.getGroup(request.getClassPK());
  }
 else {
    Organization organization=OrganizationLocalServiceUtil.getOrganization(request.getClassPK());
    group=organization.getGroup();
  }
  String title=StringPool.BLANK;
  if (requestType == MembersRequestKeys.ADD_MEMBER) {
    StringBuilder sb=new StringBuilder();
    sb.append("<a href=\"");
    sb.append(themeDisplay.getPortalURL());
    sb.append(themeDisplay.getPathFriendlyURLPublic());
    sb.append(StringPool.SLASH);
    sb.append(creatorUser.getScreenName());
    sb.append("/profile\">");
    sb.append(creatorUserName);
    sb.append("</a>");
    String creatorUserNameURL=sb.toString();
    sb=new StringBuilder();
    sb.append("<a href=\"");
    sb.append(themeDisplay.getPortalURL());
    sb.append(themeDisplay.getPathFriendlyURLPublic());
    sb.append(group.getFriendlyURL());
    sb.append("/profile\">");
    sb.append(group.getDescriptiveName(themeDisplay.getLocale()));
    sb.append("</a>");
    String organizationNameURL=sb.toString();
    title=themeDisplay.translate("request-social-networking-summary-join-organization",new Object[]{creatorUserNameURL,organizationNameURL});
  }
  String body=StringPool.BLANK;
  return new SocialRequestFeedEntry(title,body);
}

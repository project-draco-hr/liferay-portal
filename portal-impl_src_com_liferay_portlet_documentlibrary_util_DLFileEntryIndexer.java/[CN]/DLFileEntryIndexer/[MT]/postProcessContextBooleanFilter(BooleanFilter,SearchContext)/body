{
  addStatus(contextBooleanFilter,searchContext);
  if (searchContext.isIncludeAttachments()) {
    addRelatedClassNames(contextBooleanFilter,searchContext);
  }
  if (ArrayUtil.contains(searchContext.getFolderIds(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {
    contextBooleanFilter.addRequiredTerm(Field.HIDDEN,searchContext.isIncludeAttachments());
  }
  addSearchClassTypeIds(contextBooleanFilter,searchContext);
  String ddmStructureFieldName=(String)searchContext.getAttribute("ddmStructureFieldName");
  Serializable ddmStructureFieldValue=searchContext.getAttribute("ddmStructureFieldValue");
  if (Validator.isNotNull(ddmStructureFieldName) && Validator.isNotNull(ddmStructureFieldValue)) {
    String[] ddmStructureFieldNameParts=StringUtil.split(ddmStructureFieldName,DDMIndexer.DDM_FIELD_SEPARATOR);
    com.liferay.portlet.dynamicdatamapping.DDMStructure structure=DDMStructureManagerUtil.getStructure(GetterUtil.getLong(ddmStructureFieldNameParts[1]));
    String fieldName=StringUtil.replaceLast(ddmStructureFieldNameParts[2],StringPool.UNDERLINE.concat(LocaleUtil.toLanguageId(searchContext.getLocale())),StringPool.BLANK);
    try {
      ddmStructureFieldValue=DDMUtil.getIndexedFieldValue(ddmStructureFieldValue,structure.getFieldType(fieldName));
    }
 catch (    StructureFieldException sfe) {
      if (_log.isDebugEnabled()) {
        _log.debug(sfe,sfe);
      }
    }
    BooleanQuery booleanQuery=new BooleanQueryImpl();
    booleanQuery.addRequiredTerm(ddmStructureFieldName,StringPool.QUOTE + ddmStructureFieldValue + StringPool.QUOTE);
    contextBooleanFilter.add(new QueryFilter(booleanQuery));
  }
  String[] mimeTypes=(String[])searchContext.getAttribute("mimeTypes");
  if (ArrayUtil.isNotEmpty(mimeTypes)) {
    BooleanFilter mimeTypesBooleanFilter=new BooleanFilter();
    for (    String mimeType : mimeTypes) {
      mimeTypesBooleanFilter.addTerm("mimeType",StringUtil.replace(mimeType,CharPool.FORWARD_SLASH,CharPool.UNDERLINE));
    }
    contextBooleanFilter.add(mimeTypesBooleanFilter,BooleanClauseOccur.MUST);
  }
}

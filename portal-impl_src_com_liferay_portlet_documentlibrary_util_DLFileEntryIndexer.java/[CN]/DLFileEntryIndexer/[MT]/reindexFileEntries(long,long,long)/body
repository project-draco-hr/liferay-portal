{
  final IndexableActionableDynamicQuery indexableActionableDynamicQuery=DLFileEntryLocalServiceUtil.getIndexableActionableDynamicQuery();
  indexableActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property property=PropertyFactoryUtil.forName("folderId");
      long folderId=DLFolderConstants.getFolderId(groupId,dataRepositoryId);
      dynamicQuery.add(property.eq(folderId));
    }
  }
);
  indexableActionableDynamicQuery.setCompanyId(companyId);
  indexableActionableDynamicQuery.setGroupId(groupId);
  indexableActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<DLFileEntry>(){
    @Override public void performAction(    DLFileEntry dlFileEntry){
      try {
        Document document=getDocument(dlFileEntry);
        indexableActionableDynamicQuery.addDocuments(document);
      }
 catch (      PortalException pe) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to index document library file entry " + dlFileEntry.getFileEntryId(),pe);
        }
      }
    }
  }
);
  indexableActionableDynamicQuery.setSearchEngineId(getSearchEngineId());
  indexableActionableDynamicQuery.performActions();
}

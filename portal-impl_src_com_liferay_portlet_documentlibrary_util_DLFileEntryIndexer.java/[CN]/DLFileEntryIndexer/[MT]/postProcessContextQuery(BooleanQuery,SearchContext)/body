{
  int status=GetterUtil.getInteger(searchContext.getAttribute(Field.STATUS),WorkflowConstants.STATUS_APPROVED);
  if (status != WorkflowConstants.STATUS_ANY) {
    contextQuery.addRequiredTerm(Field.STATUS,status);
  }
  if (searchContext.isIncludeAttachments()) {
    addRelatedClassNames(contextQuery,searchContext);
  }
  contextQuery.addRequiredTerm(Field.HIDDEN,searchContext.isIncludeAttachments());
  long[] classTypeIds=searchContext.getClassTypeIds();
  if ((classTypeIds != null) && (classTypeIds.length > 0)) {
    BooleanQuery classTypeIdsQuery=BooleanQueryFactoryUtil.create(searchContext);
    for (    long classTypeId : classTypeIds) {
      classTypeIdsQuery.addTerm(Field.CLASS_TYPE_ID,classTypeId);
    }
    contextQuery.add(classTypeIdsQuery,BooleanClauseOccur.MUST);
  }
  String structureField=(String)searchContext.getAttribute("ddmStructureFieldName");
  String structureValue=(String)searchContext.getAttribute("ddmStructureFieldValue");
  if (Validator.isNotNull(structureField) && Validator.isNotNull(structureValue)) {
    contextQuery.addRequiredTerm(structureField,structureValue);
  }
  long[] folderIds=searchContext.getFolderIds();
  if ((folderIds != null) && (folderIds.length > 0) && (folderIds[0] != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {
    BooleanQuery folderIdsQuery=BooleanQueryFactoryUtil.create(searchContext);
    for (    long folderId : folderIds) {
      try {
        DLFolderServiceUtil.getFolder(folderId);
      }
 catch (      Exception e) {
        continue;
      }
      folderIdsQuery.addTerm(Field.FOLDER_ID,folderId);
    }
    contextQuery.add(folderIdsQuery,BooleanClauseOccur.MUST);
  }
}

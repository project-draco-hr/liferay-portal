{
  int type1=javaTerm1.getType();
  int type2=javaTerm2.getType();
  if (type1 != type2) {
    return type1 - type2;
  }
  String name1=javaTerm1.getName();
  String name2=javaTerm2.getName();
  if (type1 == JavaSourceProcessor.TYPE_VARIABLE_PRIVATE_STATIC) {
    if (name2.equals("_log") || name2.equals("_logger")) {
      return 1;
    }
    if (name1.equals("_instance") || name1.equals("_log") || name1.equals("_logger")) {
      return -1;
    }
    if (name2.equals("_instance")) {
      return 1;
    }
  }
  if (JavaSourceProcessor.isInJavaTermTypeGroup(type1,JavaSourceProcessor.TYPE_VARIABLE)) {
    if (StringUtil.isUpperCase(name1) && !StringUtil.isLowerCase(name1) && !StringUtil.isUpperCase(name2)) {
      return -1;
    }
    if (!StringUtil.isUpperCase(name1) && StringUtil.isUpperCase(name2) && !StringUtil.isLowerCase(name2)) {
      return 1;
    }
  }
  if (name1.compareToIgnoreCase(name2) != 0) {
    NumericalStringComparator numericalStringComparator=new NumericalStringComparator(true,false);
    return numericalStringComparator.compare(name1,name2);
  }
  if (name1.compareTo(name2) != 0) {
    NumericalStringComparator numericalStringComparator=new NumericalStringComparator(true,true);
    return -numericalStringComparator.compare(name1,name2);
  }
  return _compareParameterTypes(javaTerm1,javaTerm2);
}

{
  String autoUserId=CookieKeys.getCookie(request,CookieKeys.ID,false);
  String autoPassword=CookieKeys.getCookie(request,CookieKeys.PASSWORD,false);
  String rememberMe=CookieKeys.getCookie(request,CookieKeys.REMEMBER_ME,false);
  String proxyPath=PortalUtil.getPathProxy();
  String contextPath=PortalUtil.getPathContext();
  if (proxyPath.equals(contextPath)) {
    if (Validator.isNotNull(request.getContextPath())) {
      rememberMe=Boolean.TRUE.toString();
    }
  }
 else {
    if (!contextPath.equals(request.getContextPath())) {
      rememberMe=Boolean.TRUE.toString();
    }
  }
  String[] credentials=null;
  if (Validator.isNotNull(autoUserId) && Validator.isNotNull(autoPassword) && Validator.isNotNull(rememberMe)) {
    Company company=PortalUtil.getCompany(request);
    KeyValuePair kvp=null;
    if (company.isAutoLogin()) {
      kvp=_userLocalService.decryptUserId(company.getCompanyId(),autoUserId,autoPassword);
      credentials=new String[3];
      credentials[0]=kvp.getKey();
      credentials[1]=kvp.getValue();
      credentials[2]=Boolean.FALSE.toString();
    }
  }
  if (credentials != null) {
    Company company=PortalUtil.getCompany(request);
    User defaultUser=_userLocalService.getDefaultUser(company.getCompanyId());
    long userId=GetterUtil.getLong(credentials[0]);
    if (defaultUser.getUserId() == userId) {
      removeCookies(request,response);
      return null;
    }
  }
  return credentials;
}

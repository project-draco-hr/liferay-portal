{
  GradleUtil.applyPlugin(project,ReportingBasePlugin.class);
  BaselineTask baselineTask=GradleUtil.addTask(project,BASELINE_TASK_NAME,BaselineTask.class);
  final Jar jar=(Jar)GradleUtil.getTask(project,JavaPlugin.JAR_TASK_NAME);
  baselineTask.dependsOn(jar);
  baselineTask.setDescription("Compares the public API of this project with the public API of " + "the previous released version, if found.");
  baselineTask.setGroup(JavaBasePlugin.VERIFICATION_GROUP);
  baselineTask.setNewJarFile(new Callable<File>(){
    @Override public File call() throws Exception {
      return jar.getArchivePath();
    }
  }
);
  baselineTask.setOldJarFile(new Callable<File>(){
    @Override public File call() throws Exception {
      return baselineConfiguration.getSingleFile();
    }
  }
);
  baselineTask.setSourceDir(new Callable<File>(){
    @Override public File call() throws Exception {
      SourceSet sourceSet=GradleUtil.getSourceSet(project,SourceSet.MAIN_SOURCE_SET_NAME);
      return GradleUtil.getSrcDir(sourceSet.getResources());
    }
  }
);
  return baselineTask;
}

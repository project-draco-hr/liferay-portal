{
  super.doVerify();
  List<Company> companies=CompanyLocalServiceUtil.getCompanies(false);
  for (  Company company : companies) {
    PortletPreferences portletPreferences=PrefsPropsUtil.getPreferences(company.getCompanyId(),true);
    Assert.assertTrue(Validator.isNull(portletPreferences.getValue("ldap.server.ids",StringPool.BLANK)));
    for (    String key : LegacyLDAPPropsKeys.NONPOSTFIXED_LDAP_KEYS) {
      Assert.assertTrue(Validator.isNull(portletPreferences.getValue(key,StringPool.BLANK)));
    }
    Dictionary<String,Object> ldapAuthProperties=getConfigurationProperties(company,LDAPAuthConfiguration.class);
    Assert.assertNotNull(ldapAuthProperties);
    Assert.assertEquals(true,ldapAuthProperties.get(LDAPConstants.AUTH_ENABLED));
    Assert.assertEquals(true,ldapAuthProperties.get(LDAPConstants.AUTH_REQUIRED));
    Assert.assertEquals(true,ldapAuthProperties.get(LDAPConstants.PASSWORD_POLICY_ENABLED));
    Dictionary<String,Object> ldapExportProperties=getConfigurationProperties(company,LDAPExportConfiguration.class);
    Assert.assertNotNull(ldapExportProperties);
    Assert.assertEquals(true,ldapExportProperties.get(LDAPConstants.EXPORT_ENABLED));
    Dictionary<String,Object> ldapImportProperties=getConfigurationProperties(company,LDAPImportConfiguration.class);
    Assert.assertNotNull(ldapImportProperties);
    Assert.assertEquals(true,ldapImportProperties.get(LDAPConstants.IMPORT_ENABLED));
    Assert.assertEquals(true,ldapImportProperties.get(LDAPConstants.IMPORT_ON_STARTUP));
    Assert.assertEquals(true,ldapImportProperties.get(LDAPConstants.IMPORT_USER_PASSWORD_AUTOGENERATED));
    Dictionary<String,Object> ldapServerProperties0=getConfigurationProperties(company,0L,LDAPServerConfiguration.class);
    _validateLDAPServerProperties(company.getCompanyId(),0L,ldapServerProperties0);
    Dictionary<String,Object> ldapServerProperties1=getConfigurationProperties(company,1L,LDAPServerConfiguration.class);
    _validateLDAPServerProperties(company.getCompanyId(),1L,ldapServerProperties1);
    Dictionary<String,Object> systemLdapProperties=getConfigurationProperties(company,SystemLDAPConfiguration.class);
    Assert.assertNotNull(systemLdapProperties);
    Assert.assertEquals("com.sun.jndi.ldap.LdapCtxFactory",systemLdapProperties.get(LDAPConstants.FACTORY_INITIAL));
  }
}

{
  String[] attachments=getAttachments(companyId,resourcePrimKey);
  if ((attachments == null) || (attachments.length == 0)) {
    return;
  }
  Date date=new Date();
  Timestamp createDate=new Timestamp(date.getTime());
  long repositoryId=getRepositoryId(groupId,companyId,userId,userName,createDate,getClassNameId(),getPortletId());
  long containerFolderId=getContainerFolderId(groupId,companyId,resourcePrimKey,containerId,userId,userName,createDate);
  for (  String attachment : attachments) {
    String name=String.valueOf(increment(DLFileEntry.class.getName()));
    String title=FileUtil.getShortFileName(attachment);
    long size=DLStoreUtil.getFileSize(companyId,CompanyConstants.SYSTEM,attachment);
    String extension=FileUtil.getExtension(title);
    String mimeType=MimeTypesUtil.getContentType(extension);
    long fileEntryId=addDLFileEntry(groupId,companyId,userId,userName,createDate,repositoryId,containerFolderId,name,extension,mimeType,title,size);
    addDLFileVersion(increment(),groupId,companyId,userId,userName,createDate,repositoryId,containerFolderId,fileEntryId,extension,mimeType,title,size);
    byte[] bytes=DLStoreUtil.getFileAsBytes(companyId,CompanyConstants.SYSTEM,attachment);
    DLStoreUtil.addFile(companyId,containerFolderId,name,false,bytes);
    try {
      DLStoreUtil.deleteFile(companyId,CompanyConstants.SYSTEM,attachment);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Can't not delete the attachment " + attachment,e);
      }
    }
  }
  try {
    DLStoreUtil.deleteDirectory(companyId,CompanyConstants.SYSTEM,getDirName(resourcePrimKey));
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Can't delete the directory " + getDirName(resourcePrimKey),e);
    }
  }
}

{
  if (!source.exists()) {
    return;
  }
  final Path outputPath=_outputDir.toPath();
  final Path sourcePath=source.toPath();
  Files.walkFileTree(sourcePath,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult preVisitDirectory(    final Path dir,    final BasicFileAttributes attrs) throws IOException {
      Files.createDirectories(outputPath.resolve(sourcePath.relativize(dir)));
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFile(    final Path file,    final BasicFileAttributes attrs) throws IOException {
      String fileName=file.toString();
      fileName=fileName.toLowerCase();
      if (fileName.endsWith("vm") && _templateExtension.equals("ftl")) {
        return FileVisitResult.CONTINUE;
      }
      if (fileName.endsWith("ftl") && _templateExtension.equals("vm")) {
        return FileVisitResult.CONTINUE;
      }
      Files.copy(file,outputPath.resolve(sourcePath.relativize(file)),StandardCopyOption.REPLACE_EXISTING);
      return FileVisitResult.CONTINUE;
    }
  }
);
}

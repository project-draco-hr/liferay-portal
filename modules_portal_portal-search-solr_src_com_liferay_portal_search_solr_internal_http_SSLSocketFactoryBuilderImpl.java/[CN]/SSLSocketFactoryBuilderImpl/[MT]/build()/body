{
  KeyStore keyStore=_keyStoreLoader.load(_keyStoreType,_keyStorePath,_keyStorePassword);
  if (keyStore == null) {
    if (_log.isDebugEnabled()) {
      _log.debug("Use system defaults because there is no custom key store");
    }
    return SSLConnectionSocketFactory.getSystemSocketFactory();
  }
  KeyStore trustKeyStore=null;
  TrustStrategy trustStrategy=null;
  if (_verifyServerCertificate) {
    trustKeyStore=_keyStoreLoader.load(_trustStoreType,_trustStorePath,_trustStorePassword);
    if (trustKeyStore == null) {
      if (_log.isDebugEnabled()) {
        _log.debug("Use system defaults because there is no custom " + "trust store");
      }
      return SSLConnectionSocketFactory.getSystemSocketFactory();
    }
  }
 else {
    trustStrategy=new TrustSelfSignedStrategy();
  }
  HostnameVerifier hostnameVerifier=null;
  if (_verifyServerHostname) {
    hostnameVerifier=SSLConnectionSocketFactory.getDefaultHostnameVerifier();
  }
  SSLContextBuilder sslContextBuilder=SSLContexts.custom();
  sslContextBuilder.loadKeyMaterial(keyStore,_keyStorePassword);
  sslContextBuilder.loadTrustMaterial(trustStrategy);
  SSLContext sslContext=sslContextBuilder.build();
  try {
    return new SSLConnectionSocketFactory(sslContext,hostnameVerifier);
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Use system defaults because the custom SSL socket " + "factory was not able to initialize",e);
    }
    return SSLConnectionSocketFactory.getSystemSocketFactory();
  }
}

{
  workflowDefinitionLink=toUnwrappedModel(workflowDefinitionLink);
  boolean isNew=workflowDefinitionLink.isNew();
  WorkflowDefinitionLinkModelImpl workflowDefinitionLinkModelImpl=(WorkflowDefinitionLinkModelImpl)workflowDefinitionLink;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (workflowDefinitionLink.getCreateDate() == null)) {
    if (serviceContext == null) {
      workflowDefinitionLink.setCreateDate(now);
    }
 else {
      workflowDefinitionLink.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!workflowDefinitionLinkModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      workflowDefinitionLink.setModifiedDate(now);
    }
 else {
      workflowDefinitionLink.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (workflowDefinitionLink.isNew()) {
      session.save(workflowDefinitionLink);
      workflowDefinitionLink.setNew(false);
    }
 else {
      workflowDefinitionLink=(WorkflowDefinitionLink)session.merge(workflowDefinitionLink);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WorkflowDefinitionLinkModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{workflowDefinitionLinkModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{workflowDefinitionLinkModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{workflowDefinitionLinkModelImpl.getOriginalGroupId(),workflowDefinitionLinkModelImpl.getOriginalCompanyId(),workflowDefinitionLinkModelImpl.getOriginalClassNameId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C,args);
      args=new Object[]{workflowDefinitionLinkModelImpl.getGroupId(),workflowDefinitionLinkModelImpl.getCompanyId(),workflowDefinitionLinkModelImpl.getClassNameId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C,args);
    }
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{workflowDefinitionLinkModelImpl.getOriginalCompanyId(),workflowDefinitionLinkModelImpl.getOriginalWorkflowDefinitionName(),workflowDefinitionLinkModelImpl.getOriginalWorkflowDefinitionVersion()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_W_W,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W,args);
      args=new Object[]{workflowDefinitionLinkModelImpl.getCompanyId(),workflowDefinitionLinkModelImpl.getWorkflowDefinitionName(),workflowDefinitionLinkModelImpl.getWorkflowDefinitionVersion()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_W_W,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W,args);
    }
  }
  entityCache.putResult(WorkflowDefinitionLinkModelImpl.ENTITY_CACHE_ENABLED,WorkflowDefinitionLinkImpl.class,workflowDefinitionLink.getPrimaryKey(),workflowDefinitionLink,false);
  clearUniqueFindersCache(workflowDefinitionLinkModelImpl);
  cacheUniqueFindersCache(workflowDefinitionLinkModelImpl,isNew);
  workflowDefinitionLink.resetOriginalValues();
  return workflowDefinitionLink;
}

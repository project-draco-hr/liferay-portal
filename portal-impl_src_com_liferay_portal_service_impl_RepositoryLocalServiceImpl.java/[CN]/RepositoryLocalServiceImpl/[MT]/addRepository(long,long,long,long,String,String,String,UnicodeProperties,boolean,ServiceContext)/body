{
  User user=userPersistence.findByPrimaryKey(userId);
  long repositoryId=counterLocalService.increment();
  Repository repository=repositoryPersistence.create(repositoryId);
  repository.setUuid(serviceContext.getUuid());
  repository.setGroupId(groupId);
  repository.setCompanyId(user.getCompanyId());
  repository.setUserId(user.getUserId());
  repository.setUserName(user.getFullName());
  repository.setClassNameId(classNameId);
  repository.setName(name);
  repository.setDescription(description);
  repository.setPortletId(portletId);
  repository.setTypeSettingsProperties(typeSettingsProperties);
  repository.setDlFolderId(getDLFolderId(user,groupId,repositoryId,parentFolderId,name,description,hidden,serviceContext));
  repositoryPersistence.update(repository);
  try {
    RepositoryFactoryUtil.createRepository(repositoryId);
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
    throw new InvalidRepositoryException(e);
  }
  return repository;
}

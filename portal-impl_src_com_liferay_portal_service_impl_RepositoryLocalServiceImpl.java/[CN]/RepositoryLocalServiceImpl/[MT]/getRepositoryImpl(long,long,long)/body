{
  long repositoryEntryId=getRepositoryEntryId(folderId,fileEntryId,fileVersionId);
  RepositoryEntry repositoryEntry=repositoryEntryLocalService.fetchRepositoryEntry(repositoryEntryId);
  if ((repositoryEntry == null) && (repositoryEntryId == folderId)) {
    DLFolder folder=dlFolderLocalService.fetchDLFolder(folderId);
    if ((folder != null) && folder.isMountPoint()) {
      return getRepositoryImpl(folder.getRepositoryId());
    }
  }
  com.liferay.portal.kernel.repository.Repository repositoryImpl=_repositoriesByEntryId.get(repositoryEntryId);
  if (repositoryImpl != null) {
    return repositoryImpl;
  }
  repositoryImpl=new LiferayRepository(repositoryLocalService,repositoryService,dlAppHelperLocalService,dlFileEntryLocalService,dlFileEntryService,dlFileVersionLocalService,dlFileVersionService,dlFolderLocalService,dlFolderService,folderId,fileEntryId,fileVersionId);
  if (repositoryImpl.getRepositoryId() == 0) {
    repositoryImpl=null;
  }
  if (repositoryImpl == null) {
    repositoryImpl=createRepositoryImpl(repositoryEntryId);
  }
 else {
    checkRepository(repositoryImpl.getRepositoryId());
  }
  _repositoriesByEntryId.put(repositoryEntryId,repositoryImpl);
  return repositoryImpl;
}

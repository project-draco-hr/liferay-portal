{
  if (Validator.isNull(data)) {
    return null;
  }
  try {
    Recurrence recurrence=new Recurrence();
    int index=data.indexOf(StringPool.NEW_LINE);
    if (index != -1) {
      String exceptionDates=data.substring(index + 1,data.length());
      RDateList rDateList=new RDateList(exceptionDates,timeZone);
      for (      DateValue dateValue : rDateList.getDatesUtc()) {
        Calendar jCalendar=_toJCalendar(dateValue,timeZone);
        recurrence.addExceptionDate(jCalendar);
      }
      data=data.substring(0,index);
    }
    RRule rRule=new RRule(data);
    recurrence.setCount(rRule.getCount());
    recurrence.setFrequency(Frequency.parse(String.valueOf(rRule.getFreq())));
    recurrence.setInterval(rRule.getInterval());
    recurrence.setTimeZone(timeZone);
    DateValue dateValue=rRule.getUntil();
    if (dateValue != null) {
      Calendar jCalendar=_toJCalendar(dateValue,timeZone);
      recurrence.setUntilJCalendar(jCalendar);
    }
    List<PositionalWeekday> positionalWeekdays=new ArrayList<>();
    for (    WeekdayNum weekdayNum : rRule.getByDay()) {
      Weekday weekday=Weekday.parse(weekdayNum.wday.toString());
      PositionalWeekday positionalWeekday=new PositionalWeekday(weekday,weekdayNum.num);
      positionalWeekdays.add(positionalWeekday);
    }
    recurrence.setPositionalWeekdays(positionalWeekdays);
    recurrence.setMonths(ListUtil.toList(rRule.getByMonth()));
    return recurrence;
  }
 catch (  ParseException pe) {
    _log.error("Unable to parse data " + data,pe);
  }
  return null;
}

{
  KaleoTask newKaleoTask=addKaleoTask();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoTask.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoTaskId"));
  Object newKaleoTaskId=newKaleoTask.getKaleoTaskId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoTaskId",new Object[]{newKaleoTaskId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoTaskId=result.get(0);
  Assert.assertEquals(existingKaleoTaskId,newKaleoTaskId);
}

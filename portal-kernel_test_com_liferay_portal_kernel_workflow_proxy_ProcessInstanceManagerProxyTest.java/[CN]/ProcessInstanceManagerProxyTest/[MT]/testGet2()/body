{
  final long testProcessInstanceId=101;
  final int testProcessInstanceVersion=2;
  final boolean retrieveTokenInfo=true;
  final long testTokenId=102;
  final String testTokenName="testTokenName";
  final String testNodeName="testNodeName";
  final Date testStartDate=new Date();
  final Date testEndDate=new Date();
  MessageListener getListener=new MessageListener(){
    public void receive(    Message message){
      ProcessInstanceRequest request=(ProcessInstanceRequest)message.getPayload();
      assertEquals(ProcessInstanceRequestType.GET,request.getType());
      assertEquals(testProcessInstanceId,request.getProcessInstanceId());
      assertEquals(retrieveTokenInfo,request.isRetrieveTokenInfo());
      String responseDestination=message.getResponseDestination();
      if (responseDestination != null) {
        ProcessInstanceInfo instance=new ProcessInstanceInfo(testProcessInstanceId,testProcessInstanceVersion);
        TokenInfo tokenInfo=new TokenInfo(testTokenId,testTokenName,testNodeName,testStartDate,testEndDate);
        instance.setTokenInfo(tokenInfo);
        message.setPayload(new WorkflowResultContainer<ProcessInstanceInfo>(instance));
        messageBus.sendMessage(responseDestination,message);
      }
    }
  }
;
  messageBus.registerMessageListener(DestinationNames.WORKFLOW_INSTANCE,getListener);
  ProcessInstanceInfo instance=_proxy.getProcessInstanceInfo(testProcessInstanceId,retrieveTokenInfo);
  assertNotNull(instance);
  assertEquals(testProcessInstanceId,instance.getProcessInstanceId());
  TokenInfo tokenInfo=instance.getTokenInfo();
  assertNotNull(tokenInfo);
  assertEquals(testTokenId,tokenInfo.getTokenId());
  assertEquals(testTokenName,tokenInfo.getTokenName());
  assertEquals(testNodeName,tokenInfo.getNodeName());
  assertEquals(testStartDate,tokenInfo.getStartDate());
}

{
  super.init(filterConfig);
  Enumeration<String> filterInitParameters=filterConfig.getInitParameterNames();
  while (filterInitParameters.hasMoreElements()) {
    String name=filterInitParameters.nextElement();
    String value=filterConfig.getInitParameter(name);
    _filterConfiguration.put(name,value);
  }
  String propertyPrefix=GetterUtil.getString(_filterConfiguration.get("portal_property_prefix"));
  if (Validator.isNotNull(propertyPrefix)) {
    Properties filterPortalConfiguration=PropsUtil.getProperties(propertyPrefix,true);
    for (    Object name : filterPortalConfiguration.keySet()) {
      Object value=filterPortalConfiguration.get(name);
      _filterConfiguration.put((String)name,value);
    }
  }
  if (_filterConfiguration.containsKey("https.required")) {
    _httpsRequired=GetterUtil.getBoolean(_filterConfiguration.get("https.required"));
    _filterConfiguration.remove("https.required");
  }
  if (_filterConfiguration.containsKey("hosts.allowed")) {
    String[] hostsAllowedArray=StringUtil.split((String)_filterConfiguration.get("hosts.allowed"));
    _hostsAllowed.addAll(ListUtil.fromArray(hostsAllowedArray));
    _filterConfiguration.remove("hosts.allowed");
  }
  if (_filterConfiguration.containsKey("use_permission_checker")) {
    _filterConfiguration.remove("use_permission_checker");
    _log.warn("use_permission_checker was deprecated and has no effect!");
  }
}

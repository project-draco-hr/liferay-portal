{
  String name=permission.getName();
  if (name.startsWith(RUNTIME_PERMISSION_ACCESS_CLASS_IN_PACKAGE)) {
    int pos=name.indexOf(StringPool.PERIOD);
    String pkg=name.substring(pos + 1);
    if (!hasPackageAccess(pkg)) {
      throw new SecurityException("Attempted to access package " + pkg);
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_ACCESS_DECLARED_MEMBERS)) {
    if (!hasReflect(permission.getName(),permission.getActions())) {
      throw new SecurityException("Attempted to access declared members");
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_CREATE_CLASS_LOADER)) {
    if (PortalSecurityManagerThreadLocal.isCheckCreateClassLoader() && !isJSPCompiler(permission.getName(),permission.getActions()) && !hasCreateClassLoader()) {
      throw new SecurityException("Attempted to create a class loader");
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_EXIT_VM)) {
    Thread.dumpStack();
    throw new SecurityException("Attempted to shutdown the VM");
  }
 else   if (name.startsWith(RUNTIME_PERMISSION_GET_CLASSLOADER)) {
    if (PortalSecurityManagerThreadLocal.isCheckGetClassLoader() && !hasGetClassLoader(name)) {
      throw new SecurityException("Attempted to get class loader");
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_SET_CONTEXT_CLASS_LOADER)) {
  }
 else   if (name.equals(RUNTIME_PERMISSION_SET_SECURITY_MANAGER)) {
    throw new SecurityException("Attempted to set another security manager");
  }
}

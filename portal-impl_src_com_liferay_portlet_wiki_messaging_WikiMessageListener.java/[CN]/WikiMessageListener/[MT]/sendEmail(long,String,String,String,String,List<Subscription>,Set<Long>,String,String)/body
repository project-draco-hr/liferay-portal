{
  for (  Subscription subscription : subscriptions) {
    long subscribedUserId=subscription.getUserId();
    if (sent.contains(subscribedUserId)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Do not send a duplicate email to user " + subscribedUserId);
      }
      continue;
    }
 else {
      if (_log.isDebugEnabled()) {
        _log.debug("Add user " + subscribedUserId + " to the list of users who have received an email");
      }
      sent.add(subscribedUserId);
    }
    User user=null;
    try {
      user=UserLocalServiceUtil.getUserById(subscription.getUserId());
    }
 catch (    NoSuchUserException nsue) {
      if (_log.isInfoEnabled()) {
        _log.info("Subscription " + subscription.getSubscriptionId() + " is stale and will be deleted");
      }
      SubscriptionLocalServiceUtil.deleteSubscription(subscription.getSubscriptionId());
      continue;
    }
    if (!user.isActive()) {
      continue;
    }
    try {
      InternetAddress from=new InternetAddress(fromAddress,fromName);
      InternetAddress to=new InternetAddress(user.getEmailAddress(),user.getFullName());
      String curSubject=StringUtil.replace(subject,new String[]{"[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{user.getFullName(),user.getEmailAddress()});
      String curBody=StringUtil.replace(body,new String[]{"[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{user.getFullName(),user.getEmailAddress()});
      InternetAddress replyTo=new InternetAddress(replyToAddress,replyToAddress);
      MailMessage message=new MailMessage(from,to,curSubject,curBody,false);
      message.setReplyTo(new InternetAddress[]{replyTo});
      message.setMessageId(mailId);
      MailServiceUtil.sendEmail(message);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
}

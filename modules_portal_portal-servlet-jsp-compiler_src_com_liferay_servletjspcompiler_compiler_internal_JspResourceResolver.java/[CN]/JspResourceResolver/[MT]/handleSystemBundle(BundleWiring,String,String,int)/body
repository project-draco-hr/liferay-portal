{
  String key=path + StringPool.SLASH + fileRegex;
  Collection<String> resources=_jspResourceCache.getResources(bundleWiring,key);
  if (resources != null) {
    return resources;
  }
  resources=new ArrayList<String>();
  Map<String,List<URL>> extraPackageMap=ModuleFrameworkUtilAdapter.getExtraPackageMap();
  String packageName=path.replace('/','.');
  List<URL> urls=extraPackageMap.get(packageName);
  if ((urls == null) || !urls.isEmpty()) {
    _jspResourceCache.putResources(bundleWiring,key,resources);
    return resources;
  }
  String matcherRegex=fileRegex.replace(StringPool.STAR,"[^/]*");
  matcherRegex=matcherRegex.replace(".","\\.");
  matcherRegex=path + "/" + matcherRegex;
  for (  URL url : urls) {
    try {
      JarURLConnection jarUrlConnection=(JarURLConnection)url.openConnection();
      JarFile jarFile=jarUrlConnection.getJarFile();
      Enumeration<? extends ZipEntry> enumeration=jarFile.entries();
      while (enumeration.hasMoreElements()) {
        ZipEntry zipEntry=enumeration.nextElement();
        String name=zipEntry.getName();
        if (name.matches(matcherRegex)) {
          resources.add(name);
        }
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  _jspResourceCache.putResources(bundleWiring,key,resources);
  return resources;
}

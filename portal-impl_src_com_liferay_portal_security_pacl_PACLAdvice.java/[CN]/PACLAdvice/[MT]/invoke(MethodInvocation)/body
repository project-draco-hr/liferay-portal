{
  if (!PACLPolicyManager.isActive()) {
    ServiceBeanAopProxy.removeMethodInterceptor(methodInvocation,this);
    try {
      return methodInvocation.proceed();
    }
 catch (    Throwable throwable) {
      throw throwable;
    }
  }
  Method method=methodInvocation.getMethod();
  if (_log.isDebugEnabled()) {
    Object thisObject=methodInvocation.getThis();
    Class<?> clazz=thisObject.getClass();
    String className=clazz.getName();
    if (className.equals(PortalServiceImpl.class.getName()) || className.equals(_ENTRY_LOCAL_SERVICE_IMPL_CLASS_NAME) || className.equals(_STATUS_LOCAL_SERVICE_IMPL_CLASS_NAME)) {
      _log.debug("Intercepting " + className + "#"+ method.getName());
    }
  }
  SecurityManager sm=System.getSecurityManager();
  if (sm != null) {
    sm.checkPermission(new PortalServicePermission("hasService",null,methodInvocation.getThis(),method));
  }
  boolean enabled=PortalSecurityManagerThreadLocal.isEnabled();
  try {
    PortalSecurityManagerThreadLocal.setEnabled(false);
    return methodInvocation.proceed();
  }
  finally {
    PortalSecurityManagerThreadLocal.setEnabled(enabled);
  }
}

{
  if (!PACLPolicyManager.isActive()) {
    ServiceBeanAopProxy.removeMethodInterceptor(methodInvocation,this);
    return null;
  }
  Method method=methodInvocation.getMethod();
  boolean debug=false;
  if (_log.isDebugEnabled()) {
    Object thisObject=methodInvocation.getThis();
    Class<?> clazz=thisObject.getClass();
    String className=clazz.getName();
    if (className.equals(PortalServiceImpl.class.getName()) || className.equals(_STATUS_LOCAL_SERVICE_IMPL_CLASS_NAME)) {
      debug=true;
      _log.debug("Intercepting " + className + "#"+ method.getName());
    }
  }
  PACLPolicy paclPolicy=PACLClassUtil.getPACLPolicyByReflection(debug);
  if (debug) {
    if (paclPolicy != null) {
      _log.debug("Retrieved PACL policy for " + paclPolicy.getServletContextName());
    }
  }
  if (paclPolicy != null) {
    if (!paclPolicy.hasAccess(methodInvocation.getThis(),method)) {
      throw new SecurityException("Attempted to invoke " + method);
    }
  }
  return null;
}

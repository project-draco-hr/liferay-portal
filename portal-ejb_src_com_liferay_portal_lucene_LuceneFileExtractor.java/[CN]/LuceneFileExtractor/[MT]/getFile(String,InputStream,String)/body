{
  String text=StringPool.BLANK;
  try {
    fileExt=fileExt.toLowerCase();
    PropertyId id=null;
    PropertyState state=new PropertyState(id,1,true);
    InternalValue value=InternalValue.create(is);
    state.setValues(new InternalValue[]{value});
    TextFilter filter=null;
    if (fileExt.equals(".doc")) {
      filter=new MsWordTextFilter();
    }
 else     if (fileExt.equals(".htm") || fileExt.equals(".html")) {
      filter=new HTMLTextFilter();
    }
 else     if (fileExt.equals(".odp") || fileExt.equals(".ods") || fileExt.equals(".odt")) {
      filter=new OpenOfficeTextFilter();
    }
 else     if (fileExt.equals(".pdf")) {
      filter=new PdfTextFilter();
    }
 else     if (fileExt.equals(".ppt")) {
      filter=new MsPowerPointTextFilter();
    }
 else     if (fileExt.equals(".rtf")) {
      filter=new RTFTextFilter();
    }
 else     if (fileExt.equals(".txt")) {
      filter=new TextPlainTextFilter();
    }
 else     if (fileExt.equals(".xls")) {
      filter=new MsExcelTextFilter();
    }
 else     if (fileExt.equals(".xml")) {
      filter=new XMLTextFilter();
    }
    if (filter != null) {
      if (_log.isInfoEnabled()) {
        _log.info("Using filter " + filter.getClass().getName() + " for extension "+ fileExt);
      }
      StringBuffer sb=new StringBuffer();
      Map fields=filter.doFilter(state,System.getProperty("encoding"));
      Iterator itr=fields.keySet().iterator();
      while (itr.hasNext()) {
        String key=(String)itr.next();
        Reader reader=(Reader)fields.get(key);
        int i;
        while ((i=reader.read()) != -1) {
          sb.append((char)i);
        }
        reader.close();
      }
      text=sb.toString();
    }
 else {
      if (_log.isInfoEnabled()) {
        _log.info("No filter found for extension " + fileExt);
      }
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Filter returned text:\n\n" + text);
  }
  return LuceneFields.getText(field,text);
}

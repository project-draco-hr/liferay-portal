{
  long pk=RandomTestUtil.nextLong();
  KaleoInstanceToken kaleoInstanceToken=_persistence.create(pk);
  kaleoInstanceToken.setGroupId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setCompanyId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setUserId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setUserName(RandomTestUtil.randomString());
  kaleoInstanceToken.setCreateDate(RandomTestUtil.nextDate());
  kaleoInstanceToken.setModifiedDate(RandomTestUtil.nextDate());
  kaleoInstanceToken.setKaleoDefinitionId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setKaleoInstanceId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setParentKaleoInstanceTokenId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setCurrentKaleoNodeId(RandomTestUtil.nextLong());
  kaleoInstanceToken.setCurrentKaleoNodeName(RandomTestUtil.randomString());
  kaleoInstanceToken.setClassName(RandomTestUtil.randomString());
  kaleoInstanceToken.setClassPK(RandomTestUtil.nextLong());
  kaleoInstanceToken.setCompleted(RandomTestUtil.randomBoolean());
  kaleoInstanceToken.setCompletionDate(RandomTestUtil.nextDate());
  _kaleoInstanceTokens.add(_persistence.update(kaleoInstanceToken));
  return kaleoInstanceToken;
}

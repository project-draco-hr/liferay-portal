{
  Matcher urlMatcher=_URL_JOB_NAME_PATTERN.matcher(_url);
  urlMatcher.find();
  File jobReportFile=new File(_sampleDir,_jobCount + "-" + urlMatcher.group("jobName")+ "-report.html");
  Project project=_getProject(null,_url,_sampleDir.getPath());
  GithubJobMessageUtil.getFailedJobMessage(project);
  String reportString=project.getProperty("report.html.content");
  JSONObject jobJSONObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(_url + "/api/json"));
  write(jobReportFile,"<h5 job-result=\\\"" + jobJSONObject.getString("result") + "\\\"><a href=\""+ _url+ "\">"+ urlMatcher.group("jobName")+ "</a></h5>"+ reportString);
  return new FailedJobMessageResult(jobReportFile.getPath(),jobJSONObject.getString("result"));
}

{
class TestClass {
  }
  String jvmClassPath=ClassPathUtil.getJVMClassPath(false);
  URL[] urls=ClassPathUtil.getClassPathURLs(jvmClassPath);
  ClassLoader parentClassLoader=new URLClassLoader(urls,null);
  ClassLoader childClassLoader=new URLClassLoader(urls,parentClassLoader);
  Class<?> clazz=SPIClassPathContextListener.loadClassDirectly(childClassLoader,TestClass.class.getName());
  Assert.assertNotSame(TestClass.class,clazz);
  Assert.assertEquals(TestClass.class.getName(),clazz.getName());
  Assert.assertSame(childClassLoader,clazz.getClassLoader());
  Method findLoadedClassMethod=ReflectionUtil.getDeclaredMethod(ClassLoader.class,"findLoadedClass",String.class);
  Assert.assertSame(clazz,findLoadedClassMethod.invoke(childClassLoader,TestClass.class.getName()));
  Assert.assertNull(findLoadedClassMethod.invoke(parentClassLoader,TestClass.class.getName()));
  Assert.assertSame(clazz,SPIClassPathContextListener.loadClassDirectly(childClassLoader,TestClass.class.getName()));
}

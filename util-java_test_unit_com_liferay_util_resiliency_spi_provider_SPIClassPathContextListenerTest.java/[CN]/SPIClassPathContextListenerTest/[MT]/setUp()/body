{
  File spiEmbeddedLibDir=new File(_CONTEXT_PATH,_EMBEDDED_LIB_DIR_NAME);
  spiEmbeddedLibDir.mkdir();
  _jarFile=new File(spiEmbeddedLibDir,"jarfile.jar");
  _jarFile.createNewFile();
  _notJarFile=new File(spiEmbeddedLibDir,"notjarfile.zip");
  _notJarFile.createNewFile();
  File spiEmbeddedLibExtDir=new File(_CONTEXT_PATH,_EMBEDDED_LIB_EXT_DIR_NAME);
  spiEmbeddedLibExtDir.mkdir();
  _extJarFile=new File(spiEmbeddedLibExtDir,"extJarFile.jar");
  _extJarFile.createNewFile();
  File extNotJarFile=new File(spiEmbeddedLibExtDir,"extNotJarFile.zip");
  extNotJarFile.createNewFile();
  SystemProperties.set(PropsKeys.LIFERAY_LIB_GLOBAL_DIR,spiEmbeddedLibExtDir.getAbsolutePath());
  _portalServiceJarFile=new File(spiEmbeddedLibExtDir,"portal-service.jar");
  _portalServiceJarFile.createNewFile();
  _jdbcDriverJarFile=new File(spiEmbeddedLibExtDir,"jdbcDriver.jar");
  _jdbcDriverJarFile.createNewFile();
  final String driverClassName="TestDriver";
  final URL resourceURL=new URL("file://" + _jdbcDriverJarFile.getAbsolutePath() + "/"+ driverClassName+ ".class");
  PropsUtil.setProps(new PropsImpl(){
    @Override public String get(    String key){
      if (key.equals(PropsKeys.JDBC_DEFAULT_DRIVER_CLASS_NAME)) {
        return driverClassName;
      }
      return super.get(key);
    }
  }
);
  PortalClassLoaderUtil.setClassLoader(new ClassLoader(){
    @Override public URL getResource(    String name){
      if (name.equals(driverClassName.concat(".class"))) {
        return resourceURL;
      }
      return super.getResource(name);
    }
  }
);
  setTomcat(false);
}

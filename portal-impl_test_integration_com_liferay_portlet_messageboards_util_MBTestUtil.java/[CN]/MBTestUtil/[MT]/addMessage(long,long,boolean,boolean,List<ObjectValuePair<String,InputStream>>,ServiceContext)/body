{
  long userId=TestPropsValues.getUserId();
  String userName=ServiceTestUtil.randomString();
  long threadId=0;
  long parentMessageId=0;
  String subject=ServiceTestUtil.randomString();
  String body=ServiceTestUtil.randomString();
  String format=MBMessageConstants.DEFAULT_FORMAT;
  boolean anonymous=false;
  double priority=0.0;
  boolean allowPingbacks=false;
  if (inputStreamOVPs == null) {
    inputStreamOVPs=Collections.emptyList();
  }
  if (workflowEnabled) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
    if (approved) {
      serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
    }
  }
  MBMessage message=MBMessageLocalServiceUtil.addMessage(userId,userName,groupId,categoryId,threadId,parentMessageId,subject,body,format,inputStreamOVPs,anonymous,priority,allowPingbacks,serviceContext);
  return MBMessageLocalServiceUtil.getMessage(message.getMessageId());
}

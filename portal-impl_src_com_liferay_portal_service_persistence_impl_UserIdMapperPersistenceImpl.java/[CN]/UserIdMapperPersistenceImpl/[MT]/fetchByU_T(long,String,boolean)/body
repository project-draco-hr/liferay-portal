{
  Object[] finderArgs=new Object[]{userId,type};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_U_T,finderArgs,this);
  }
  if (result instanceof UserIdMapper) {
    UserIdMapper userIdMapper=(UserIdMapper)result;
    if ((userId != userIdMapper.getUserId()) || !Validator.equals(type,userIdMapper.getType())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_USERIDMAPPER_WHERE);
    query.append(_FINDER_COLUMN_U_T_USERID_2);
    boolean bindType=false;
    if (type == null) {
      query.append(_FINDER_COLUMN_U_T_TYPE_1);
    }
 else     if (type.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_U_T_TYPE_3);
    }
 else {
      bindType=true;
      query.append(_FINDER_COLUMN_U_T_TYPE_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      if (bindType) {
        qPos.add(type);
      }
      List<UserIdMapper> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_U_T,finderArgs,list);
      }
 else {
        UserIdMapper userIdMapper=list.get(0);
        result=userIdMapper;
        cacheResult(userIdMapper);
        if ((userIdMapper.getUserId() != userId) || (userIdMapper.getType() == null) || !userIdMapper.getType().equals(type)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_U_T,finderArgs,userIdMapper);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_U_T,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (UserIdMapper)result;
  }
}

{
  userIdMapper=toUnwrappedModel(userIdMapper);
  boolean isNew=userIdMapper.isNew();
  UserIdMapperModelImpl userIdMapperModelImpl=(UserIdMapperModelImpl)userIdMapper;
  Session session=null;
  try {
    session=openSession();
    if (userIdMapper.isNew()) {
      session.save(userIdMapper);
      userIdMapper.setNew(false);
    }
 else {
      userIdMapper=(UserIdMapper)session.merge(userIdMapper);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !UserIdMapperModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((userIdMapperModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{userIdMapperModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{userIdMapperModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
  }
  entityCache.putResult(UserIdMapperModelImpl.ENTITY_CACHE_ENABLED,UserIdMapperImpl.class,userIdMapper.getPrimaryKey(),userIdMapper,false);
  clearUniqueFindersCache(userIdMapperModelImpl);
  cacheUniqueFindersCache(userIdMapperModelImpl,isNew);
  userIdMapper.resetOriginalValues();
  return userIdMapper;
}

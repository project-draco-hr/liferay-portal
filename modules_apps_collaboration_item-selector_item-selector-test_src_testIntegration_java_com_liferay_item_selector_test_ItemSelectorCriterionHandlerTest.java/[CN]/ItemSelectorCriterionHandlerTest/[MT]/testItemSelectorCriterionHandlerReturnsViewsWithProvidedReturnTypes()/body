{
  TestItemSelectorView testItemSelectorView=new TestItemSelectorView();
  ServiceRegistration<ItemSelectorView> itemSelectorViewServiceRegistration=registerItemSelectorView(testItemSelectorView);
  List serviceRegistrations=new ArrayList<>();
  serviceRegistrations.add(itemSelectorViewServiceRegistration);
  try {
    TestItemSelectorCriterion testItemSelectorCriterion=new TestItemSelectorCriterion();
    List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
    desiredItemSelectorReturnTypes.add(new TestItemSelectorReturnType());
    testItemSelectorCriterion.setDesiredItemSelectorReturnTypes(desiredItemSelectorReturnTypes);
    List<ItemSelectorView<TestItemSelectorCriterion>> itemSelectorViews=_itemSelectorCriterionHandler.getItemSelectorViews(testItemSelectorCriterion);
    Assert.assertEquals(1,itemSelectorViews.size());
    ItemSelectorView<TestItemSelectorCriterion> itemSelectorView=itemSelectorViews.get(0);
    List<ItemSelectorReturnType> supportedItemSelectorReturnTypes=itemSelectorView.getSupportedItemSelectorReturnTypes();
    Assert.assertEquals(1,supportedItemSelectorReturnTypes.size());
    ItemSelectorReturnType itemSelectorReturnType=supportedItemSelectorReturnTypes.get(0);
    Assert.assertFalse(itemSelectorReturnType instanceof TestItemSelectorReturnType);
  }
  finally {
    _unregister(serviceRegistrations);
  }
}

{
  Project project=publishNodeModuleTask.getProject();
  String author=GradleUtil.getProperty(project,"nodejs.npm.module.author",(String)null);
  if (Validator.isNotNull(author)) {
    publishNodeModuleTask.setModuleAuthor(author);
  }
  String bugsUrl=GradleUtil.getProperty(project,"nodejs.npm.module.bugs.url",(String)null);
  if (Validator.isNotNull(bugsUrl)) {
    publishNodeModuleTask.setModuleBugsUrl(bugsUrl);
  }
  String license=GradleUtil.getProperty(project,"nodejs.npm.module.license",(String)null);
  if (Validator.isNotNull(license)) {
    publishNodeModuleTask.setModuleLicense(license);
  }
  String emailAddress=GradleUtil.getProperty(project,"nodejs.npm.email",(String)null);
  if (Validator.isNotNull(emailAddress)) {
    publishNodeModuleTask.setNpmEmailAddress(emailAddress);
  }
  String password=GradleUtil.getProperty(project,"nodejs.npm.password",(String)null);
  if (Validator.isNotNull(password)) {
    publishNodeModuleTask.setNpmPassword(password);
  }
  String userName=GradleUtil.getProperty(project,"nodejs.npm.user",(String)null);
  if (Validator.isNotNull(userName)) {
    publishNodeModuleTask.setNpmUserName(userName);
  }
  String repository=GradleUtil.getProperty(project,"nodejs.npm.module.repository",(String)null);
  if (Validator.isNotNull(repository)) {
    publishNodeModuleTask.setModuleRepository(repository);
  }
}

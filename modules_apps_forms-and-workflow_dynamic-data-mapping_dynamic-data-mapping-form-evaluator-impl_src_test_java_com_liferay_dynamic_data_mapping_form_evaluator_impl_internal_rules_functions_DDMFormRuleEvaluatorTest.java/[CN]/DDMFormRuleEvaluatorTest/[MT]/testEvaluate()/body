{
  Map<String,List<DDMFormFieldEvaluationResult>> ddmFormFieldEvaluationResultsMap=new HashMap<>();
  List<DDMFormFieldEvaluationResult> ddmFormField1InstanceEvaluationResults=new ArrayList<>();
  DDMFormFieldEvaluationResult ddmFormField1EvaluationResult=createDefaultDDMFormFieldEvaluationResult("field1_instanceId");
  ddmFormField1EvaluationResult.setValue(15.5);
  ddmFormField1InstanceEvaluationResults.add(ddmFormField1EvaluationResult);
  ddmFormFieldEvaluationResultsMap.put("field1",ddmFormField1InstanceEvaluationResults);
  List<DDMFormFieldEvaluationResult> ddmFormField2InstanceEvaluationResults=new ArrayList<>();
  DDMFormFieldEvaluationResult ddmFormField2EvaluationResult=createDefaultDDMFormFieldEvaluationResult("field2_instanceId");
  ddmFormField2EvaluationResult.setValue(10);
  ddmFormField2InstanceEvaluationResults.add(ddmFormField2EvaluationResult);
  ddmFormFieldEvaluationResultsMap.put("field2",ddmFormField2InstanceEvaluationResults);
  DDMFormRuleEvaluator ddmFormRuleEvaluator=new DDMFormRuleEvaluator(null,null,_ddmExpressionFactory,ddmFormFieldEvaluationResultsMap,null,"sum(get(fieldAt(\"field1\", 0), \"value\"), " + "get(fieldAt(\"field2\", 0), \"value\")) > 25",_jsonFactory);
  Map<String,DDMExpressionFunction> functionMap=(Map<String,DDMExpressionFunction>)field(DDMExpressionFactoryImpl.class,"_ddmExpressionFunctionMap").get(_ddmExpressionFactory);
  functionMap.put("sum",new DDMExpressionFunction(){
    @Override public Object evaluate(    Object... parameters){
      double sum=0;
      for (int i=0; i < parameters.length; i++) {
        if (parameters[i] instanceof Number) {
          sum+=((Number)parameters[i]).doubleValue();
        }
      }
      return sum;
    }
  }
);
  Assert.assertEquals(true,ddmFormRuleEvaluator.evaluate());
}

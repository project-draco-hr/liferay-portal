{
  Dictionary<String,Object> dictionary=new HashMapDictionary<>();
  dictionary.put(LDAPConstants.AUTH_SEARCH_FILTER,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_AUTH_SEARCH_FILTER + postfix,"(mail=@email_address@)"));
  dictionary.put(LDAPConstants.BASE_DN,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_BASE_DN + postfix,"dc=example,dc=com"));
  dictionary.put(LDAPConstants.BASE_PROVIDER_URL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_BASE_PROVIDER_URL + postfix,"ldap://localhost:10389"));
  dictionary.put(LDAPConstants.CONTACT_CUSTOM_MAPPINGS,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_CONTACT_CUSTOM_MAPPINGS + postfix,StringPool.NEW_LINE));
  dictionary.put(LDAPConstants.CONTACT_MAPPINGS,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_CONTACT_MAPPINGS + postfix,StringPool.NEW_LINE));
  dictionary.put(LDAPConstants.GROUP_DEFAULT_OBJECT_CLASSES,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_GROUP_DEFAULT_OBJECT_CLASSES + postfix,StringPool.COMMA));
  dictionary.put(LDAPConstants.GROUP_MAPPINGS,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_GROUP_MAPPINGS + postfix,StringPool.NEW_LINE));
  dictionary.put(LDAPConstants.GROUPS_DN,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_GROUPS_DN + postfix,"ou=groups,dc=example,dc=com"));
  dictionary.put(LDAPConstants.GROUP_SEARCH_FILTER,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_GROUP_SEARCH_FILTER + postfix,"(objectClass=groupOfUniqueNames)"));
  dictionary.put(LDAPConstants.GROUP_SEARCH_FILTER_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_GROUP_SEARCH_FILTER_ENABLED + postfix,true));
  dictionary.put(LDAPConstants.SECURITY_CREDENTIAL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_SECURITY_CREDENTIALS + postfix,"secret"));
  dictionary.put(LDAPConstants.SECURITY_PRINCIPAL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_SECURITY_PRINCIPAL + postfix,"uid=admin,ou=system"));
  dictionary.put(LDAPConstants.SERVER_NAME,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_SERVER_NAME + postfix));
  dictionary.put(LDAPConstants.USER_CUSTOM_MAPPINGS,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_USER_CUSTOM_MAPPINGS + postfix,StringPool.NEW_LINE));
  dictionary.put(LDAPConstants.USER_DEFAULT_OBJECT_CLASSES,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_USER_DEFAULT_OBJECT_CLASSES + postfix,StringPool.COMMA));
  dictionary.put(LDAPConstants.USER_IGNORE_ATTRIBUTES,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_USER_IGNORE_ATTRIBUTES + postfix,StringPool.COMMA));
  dictionary.put(LDAPConstants.USER_MAPPINGS,_prefsProps.getStringArray(companyId,LegacyLDAPPropsKeys.LDAP_USER_MAPPINGS + postfix,StringPool.NEW_LINE));
  dictionary.put(LDAPConstants.USERS_DN,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_USERS_DN + postfix,"users,dc=example,dc=com"));
  dictionary.put(LDAPConstants.USER_SEARCH_FILTER,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_USER_SEARCH_FILTER + postfix,"(objectClass=inetOrgPerson)"));
  if (_log.isInfoEnabled()) {
    _log.info("Adding LDAPServierConfiguration for company: " + companyId + " ldapServerId: "+ ldapServerId+ " values: "+ dictionary);
  }
  _ldapServerConfigurationProvider.updateProperties(companyId,ldapServerId,dictionary);
}

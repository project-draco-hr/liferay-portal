{
  Dictionary<String,Object> dictionary=new HashMapDictionary<>();
  dictionary.put(LDAPConstants.IMPORT_CREATE_ROLE_PER_GROUP,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_CREATE_ROLE_PER_GROUP,false));
  dictionary.put(LDAPConstants.IMPORT_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_ENABLED,false));
  dictionary.put(LDAPConstants.IMPORT_GROUP_CACHE_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_GROUP_CACHE_ENABLED,false));
  dictionary.put(LDAPConstants.IMPORT_INTERVAL,_prefsProps.getInteger(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_INTERVAL,10));
  dictionary.put(LDAPConstants.IMPORT_LOCK_EXPIRATION_TIME,_prefsProps.getLong(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_LOCK_EXPIRATION_TIME,86400000));
  dictionary.put(LDAPConstants.IMPORT_METHOD,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_METHOD,"user"));
  dictionary.put(LDAPConstants.IMPORT_ON_STARTUP,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_ON_STARTUP,false));
  dictionary.put(LDAPConstants.IMPORT_USER_PASSWORD_AUTOGENERATED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_USER_PASSWORD_AUTOGENERATED,false));
  dictionary.put(LDAPConstants.IMPORT_USER_PASSWORD_DEFAULT,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_USER_PASSWORD_DEFAULT,"test"));
  dictionary.put(LDAPConstants.IMPORT_USER_PASSWORD_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_USER_PASSWORD_ENABLED,true));
  dictionary.put(LDAPConstants.IMPORT_USER_SYNC_STRATEGY,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_IMPORT_USER_SYNC_STRATEGY,"auth-type"));
  if (_log.isInfoEnabled()) {
    _log.info("Adding LDAP import configuration for company " + companyId + " with properties: "+ dictionary);
  }
  _ldapImportConfigurationProvider.updateProperties(companyId,dictionary);
}

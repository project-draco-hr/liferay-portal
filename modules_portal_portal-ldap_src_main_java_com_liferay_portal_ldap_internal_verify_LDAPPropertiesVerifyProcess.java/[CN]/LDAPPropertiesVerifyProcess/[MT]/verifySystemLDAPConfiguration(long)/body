{
  Dictionary<String,Object> dictionary=new HashMapDictionary<>();
  Properties connectionProperties=_props.getProperties(LegacyLDAPPropsKeys.LDAP_CONNECTION_PROPERTY_PREFIX,true);
  List<String> connectionPropertiesList=new ArrayList<>(connectionProperties.size());
  for (  Map.Entry entry : connectionProperties.entrySet()) {
    String connectionPropertyString=entry.getKey() + StringPool.EQUAL + entry.getValue();
    connectionPropertiesList.add(connectionPropertyString);
  }
  dictionary.put(LDAPConstants.CONNECTION_PROPERTIES,connectionPropertiesList.toArray(new String[connectionPropertiesList.size()]));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_AGE,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_AGE,"age"));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_EXPIRED,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_EXPIRED,"expired"));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_HISTORY,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_HISTORY,"history"));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_NOT_CHANGEABLE,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_NOT_CHANGEABLE,"not allowed to change"));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_SYNTAX,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_SYNTAX,"syntax"));
  dictionary.put(LDAPConstants.ERROR_PASSWORD_TRIVIAL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_PASSWORD_TRIVIAL,"trivial"));
  dictionary.put(LDAPConstants.ERROR_USER_LOCKOUT,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_ERROR_USER_LOCKOUT,"retry limit"));
  dictionary.put(LDAPConstants.FACTORY_INITIAL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_FACTORY_INITIAL,"com.sun.jndi.ldap.LdapCtxFactory"));
  dictionary.put(LDAPConstants.PAGE_SIZE,_prefsProps.getInteger(companyId,LegacyLDAPPropsKeys.LDAP_PAGE_SIZE,1000));
  dictionary.put(LDAPConstants.RANGE_SIZE,_prefsProps.getInteger(companyId,LegacyLDAPPropsKeys.LDAP_RANGE_SIZE,1000));
  dictionary.put(LDAPConstants.REFERRAL,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_REFERRAL,"follow"));
  if (_log.isInfoEnabled()) {
    _log.info("Adding SystemLDAPConfigurations for company: " + companyId + " values: "+ dictionary);
  }
  _systemLDAPConfigurationProvider.updateProperties(companyId,dictionary);
}

{
  Dictionary<String,Object> dictionary=new HashMapDictionary<>();
  dictionary.put(LDAPConstants.AUTH_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_AUTH_ENABLED,false));
  dictionary.put(LDAPConstants.AUTH_METHOD,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_AUTH_METHOD,"bind"));
  dictionary.put(LDAPConstants.AUTH_REQUIRED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_AUTH_REQUIRED,false));
  dictionary.put(LDAPConstants.PASSWORD_ENCRYPTION_ALGORITHM,_prefsProps.getString(companyId,LegacyLDAPPropsKeys.LDAP_AUTH_PASSWORD_ENCRYPTION_ALGORITHM,"NONE"));
  dictionary.put(LDAPConstants.PASSWORD_POLICY_ENABLED,_prefsProps.getBoolean(companyId,LegacyLDAPPropsKeys.LDAP_PASSWORD_POLICY_ENABLED,false));
  if (_log.isInfoEnabled()) {
    _log.info("Adding LDAPAuthConfiguration for company: " + companyId + " values: "+ dictionary);
  }
  _ldapAuthConfigurationProvider.updateProperties(companyId,dictionary);
}

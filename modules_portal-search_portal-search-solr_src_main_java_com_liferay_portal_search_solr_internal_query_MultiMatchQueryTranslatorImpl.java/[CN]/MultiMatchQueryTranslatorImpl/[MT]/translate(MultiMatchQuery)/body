{
  BooleanQuery booleanQuery=new BooleanQuery();
  MultiMatchQuery.Type multiMatchQueryType=multiMatchQuery.getType();
  Map<String,Float> fieldBoosts=multiMatchQuery.getFieldsBoosts();
  for (  String field : multiMatchQuery.getFields()) {
    Term term=new Term(field,multiMatchQuery.getValue());
    Query query=null;
    if (multiMatchQueryType == MultiMatchQuery.Type.PHRASE) {
      PhraseQuery phraseQuery=new PhraseQuery();
      phraseQuery.add(term);
      if (multiMatchQuery.getSlop() != null) {
        phraseQuery.setSlop(multiMatchQuery.getSlop());
      }
      query=phraseQuery;
    }
 else     if (multiMatchQueryType == MultiMatchQuery.Type.PHRASE_PREFIX) {
      query=new PrefixQuery(term);
    }
 else {
      query=new TermQuery(term);
    }
    if (fieldBoosts.containsKey(field)) {
      Float fieldBoost=fieldBoosts.get(field);
      query.setBoost(fieldBoost);
    }
    booleanQuery.add(query,BooleanClause.Occur.SHOULD);
  }
  return booleanQuery;
}

{
  long pk=RandomTestUtil.nextLong();
  SyncDevice newSyncDevice=_persistence.create(pk);
  newSyncDevice.setUuid(RandomTestUtil.randomString());
  newSyncDevice.setCompanyId(RandomTestUtil.nextLong());
  newSyncDevice.setUserId(RandomTestUtil.nextLong());
  newSyncDevice.setUserName(RandomTestUtil.randomString());
  newSyncDevice.setCreateDate(RandomTestUtil.nextDate());
  newSyncDevice.setModifiedDate(RandomTestUtil.nextDate());
  newSyncDevice.setType(RandomTestUtil.randomString());
  newSyncDevice.setBuildNumber(RandomTestUtil.nextLong());
  newSyncDevice.setFeatureSet(RandomTestUtil.nextInt());
  newSyncDevice.setStatus(RandomTestUtil.nextInt());
  _syncDevices.add(_persistence.update(newSyncDevice));
  SyncDevice existingSyncDevice=_persistence.findByPrimaryKey(newSyncDevice.getPrimaryKey());
  Assert.assertEquals(existingSyncDevice.getUuid(),newSyncDevice.getUuid());
  Assert.assertEquals(existingSyncDevice.getSyncDeviceId(),newSyncDevice.getSyncDeviceId());
  Assert.assertEquals(existingSyncDevice.getCompanyId(),newSyncDevice.getCompanyId());
  Assert.assertEquals(existingSyncDevice.getUserId(),newSyncDevice.getUserId());
  Assert.assertEquals(existingSyncDevice.getUserName(),newSyncDevice.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingSyncDevice.getCreateDate()),Time.getShortTimestamp(newSyncDevice.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingSyncDevice.getModifiedDate()),Time.getShortTimestamp(newSyncDevice.getModifiedDate()));
  Assert.assertEquals(existingSyncDevice.getType(),newSyncDevice.getType());
  Assert.assertEquals(existingSyncDevice.getBuildNumber(),newSyncDevice.getBuildNumber());
  Assert.assertEquals(existingSyncDevice.getFeatureSet(),newSyncDevice.getFeatureSet());
  Assert.assertEquals(existingSyncDevice.getStatus(),newSyncDevice.getStatus());
}

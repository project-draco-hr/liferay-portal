{
  if (!context.isWithinDateRange(entry.getModifiedDate())) {
    return;
  }
  if (entry.getStatus() != WorkflowConstants.STATUS_APPROVED) {
    return;
  }
  String path=getEntryPath(context,entry);
  if (!context.isPathNotProcessed(path)) {
    return;
  }
  Element entryElement=root.addElement("entry");
  entryElement.addAttribute("path",path);
  context.addPermissions(BlogsEntry.class,entry.getEntryId());
  if (context.getBooleanParameter(_NAMESPACE,"categories")) {
    context.addAssetCategories(BlogsEntry.class,entry.getEntryId());
  }
  if (context.getBooleanParameter(_NAMESPACE,"comments")) {
    context.addComments(BlogsEntry.class,entry.getEntryId());
  }
  if (context.getBooleanParameter(_NAMESPACE,"ratings")) {
    context.addRatingsEntries(BlogsEntry.class,entry.getEntryId());
  }
  if (context.getBooleanParameter(_NAMESPACE,"tags")) {
    context.addAssetTags(BlogsEntry.class,entry.getEntryId());
  }
  Image smallImage=ImageUtil.fetchByPrimaryKey(entry.getSmallImageId());
  if (entry.isSmallImage() && (smallImage != null)) {
    try {
      String smallImagePath=getEntrySmallImagePath(context,entry);
      entryElement.addAttribute("small-image-path",smallImagePath);
      entry.setSmallImageType(smallImage.getType());
      context.addZipEntry(smallImagePath,smallImage.getTextObj());
    }
 catch (    Exception e) {
    }
  }
  entry.setUserUuid(entry.getUserUuid());
  context.addZipEntry(path,entry);
}

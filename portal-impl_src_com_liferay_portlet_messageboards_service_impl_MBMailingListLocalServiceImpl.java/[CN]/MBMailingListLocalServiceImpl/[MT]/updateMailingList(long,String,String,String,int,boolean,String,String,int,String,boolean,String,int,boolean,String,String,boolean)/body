{
  validate(emailAddress,inServerName,inUserName,outEmailAddress,outCustom,outServerName,outUserName,active);
  MBMailingList mailingList=mbMailingListPersistence.findByPrimaryKey(mailingListId);
  mailingList.setModifiedDate(new Date());
  mailingList.setEmailAddress(emailAddress);
  mailingList.setInProtocol(inUseSSL ? inProtocol + "s" : inProtocol);
  mailingList.setInServerName(inServerName);
  mailingList.setInServerPort(inServerPort);
  mailingList.setInUseSSL(inUseSSL);
  mailingList.setInUserName(inUserName);
  mailingList.setInPassword(inPassword);
  mailingList.setInReadInterval(inReadInterval);
  mailingList.setOutEmailAddress(outEmailAddress);
  mailingList.setOutCustom(outCustom);
  mailingList.setOutServerName(outServerName);
  mailingList.setOutServerPort(outServerPort);
  mailingList.setOutUseSSL(outUseSSL);
  mailingList.setOutUserName(outUserName);
  mailingList.setOutPassword(outPassword);
  boolean previouslyActive=mailingList.getActive();
  mailingList.setActive(active);
  mbMailingListPersistence.update(mailingList,false);
  if (previouslyActive) {
    unscheduleMailingList(mailingList);
  }
  if (active) {
    scheduleMailingList(mailingList);
  }
  return mailingList;
}

{
  _validate(emailAddress,inServerName,inUserName,outCustom,outEmailAddress,outServerName,outUserName);
  Date now=new Date();
  MBMailingList mailingList;
  try {
    mailingList=getMailingListByCategory(categoryId);
  }
 catch (  NoSuchMailingListException e) {
    User user=userPersistence.findByPrimaryKey(userId);
    long mailingListId=counterLocalService.increment();
    mailingList=mbMailingListPersistence.create(mailingListId);
    mailingList.setCompanyId(user.getCompanyId());
    mailingList.setGroupId(groupId);
    mailingList.setUserId(user.getUserId());
    mailingList.setUserName(user.getFullName());
    mailingList.setCreateDate(now);
    mailingList.setCategoryId(categoryId);
  }
  mailingList.setModifiedDate(now);
  mailingList.setEmailAddress(emailAddress);
  mailingList.setInProtocol(inProtocol);
  mailingList.setInServerName(inServerName);
  mailingList.setInUseSSL(inUseSSL);
  mailingList.setInServerPort(inServerPort);
  mailingList.setInUserName(inUserName);
  mailingList.setInPassword(inPassword);
  mailingList.setInReadInterval(inReadInterval);
  if (outCustom) {
    mailingList.setOutCustom(true);
    mailingList.setOutEmailAddress(outEmailAddress);
    mailingList.setOutServerName(outServerName);
    mailingList.setOutUseSSL(outUseSSL);
    mailingList.setOutServerPort(outServerPort);
    mailingList.setOutUserName(outUserName);
    mailingList.setOutPassword(outPassword);
  }
 else {
    mailingList.setOutCustom(false);
  }
  mailingList.setActive(true);
  mbMailingListPersistence.update(mailingList,false);
  _scheduleEmailReader(mailingList);
  return mailingList;
}

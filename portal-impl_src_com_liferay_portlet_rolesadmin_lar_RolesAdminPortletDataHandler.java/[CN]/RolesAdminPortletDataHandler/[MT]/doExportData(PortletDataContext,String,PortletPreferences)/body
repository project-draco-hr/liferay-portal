{
  portletDataContext.addPermissions(_RESOURCE_NAME,portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery actionableDynamicQuery=new RoleExportActionableDynamicQuery(portletDataContext){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      super.addCriteria(dynamicQuery);
      long classNameId=PortalUtil.getClassNameId(Team.class);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      dynamicQuery.add(classNameIdProperty.ne(classNameId));
    }
    @Override protected void performAction(    Object object) throws PortalException, SystemException {
      Role role=(Role)object;
      if (!portletDataContext.getBooleanParameter(NAMESPACE,"system-roles")) {
        return;
      }
      long defaultUserId=UserLocalServiceUtil.getDefaultUserId(portletDataContext.getCompanyId());
      if (role.getUserId() == defaultUserId) {
        return;
      }
      super.performAction(object);
    }
  }
;
  actionableDynamicQuery.performActions();
  return getExportDataRootElementString(rootElement);
}

{
  return new RoleExportActionableDynamicQuery(portletDataContext){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      super.addCriteria(dynamicQuery);
      long classNameId=PortalUtil.getClassNameId(Team.class);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      dynamicQuery.add(classNameIdProperty.ne(classNameId));
    }
    @Override protected void performAction(    Object object) throws PortalException, SystemException {
      if (!export) {
        return;
      }
      Role role=(Role)object;
      long defaultUserId=UserLocalServiceUtil.getDefaultUserId(portletDataContext.getCompanyId());
      if (!portletDataContext.getBooleanParameter(NAMESPACE,"system-roles") && (role.getUserId() == defaultUserId)) {
        return;
      }
      super.performAction(object);
    }
  }
;
}

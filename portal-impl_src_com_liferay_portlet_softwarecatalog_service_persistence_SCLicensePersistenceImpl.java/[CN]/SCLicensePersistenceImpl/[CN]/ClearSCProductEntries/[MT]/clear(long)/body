{
  ModelListener<com.liferay.portlet.softwarecatalog.model.SCProductEntry>[] scProductEntryListeners=scProductEntryPersistence.getListeners();
  List<com.liferay.portlet.softwarecatalog.model.SCProductEntry> scProductEntries=null;
  if ((listeners.length > 0) || (scProductEntryListeners.length > 0)) {
    scProductEntries=getSCProductEntries(licenseId);
    for (    com.liferay.portlet.softwarecatalog.model.SCProductEntry scProductEntry : scProductEntries) {
      for (      ModelListener<SCLicense> listener : listeners) {
        listener.onBeforeRemoveAssociation(licenseId,com.liferay.portlet.softwarecatalog.model.SCProductEntry.class.getName(),scProductEntry.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.softwarecatalog.model.SCProductEntry> listener : scProductEntryListeners) {
        listener.onBeforeRemoveAssociation(scProductEntry.getPrimaryKey(),SCLicense.class.getName(),licenseId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(licenseId)});
  if ((listeners.length > 0) || (scProductEntryListeners.length > 0)) {
    for (    com.liferay.portlet.softwarecatalog.model.SCProductEntry scProductEntry : scProductEntries) {
      for (      ModelListener<SCLicense> listener : listeners) {
        listener.onAfterRemoveAssociation(licenseId,com.liferay.portlet.softwarecatalog.model.SCProductEntry.class.getName(),scProductEntry.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.softwarecatalog.model.SCProductEntry> listener : scProductEntryListeners) {
        listener.onAfterRemoveAssociation(scProductEntry.getPrimaryKey(),SCLicense.class.getName(),licenseId);
      }
    }
  }
}

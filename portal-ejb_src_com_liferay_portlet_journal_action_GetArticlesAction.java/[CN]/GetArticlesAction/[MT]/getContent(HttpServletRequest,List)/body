{
  String languageId=LanguageUtil.getLanguageId(req);
  Document resultsDoc=DocumentFactory.getInstance().createDocument();
  Element resultSetEl=resultsDoc.addElement("result-set");
  SAXReader reader=new SAXReader();
  Iterator itr=articles.iterator();
  while (itr.hasNext()) {
    JournalArticle article=(JournalArticle)itr.next();
    Element resultEl=resultSetEl.addElement("result");
    resultEl.addAttribute("article-id",article.getArticleId());
    Element infoEl=resultEl.addElement("reserved-info");
    infoEl.addElement("version").addText(String.valueOf(article.getVersion()));
    infoEl.addElement("title").addText(article.getTitle());
    infoEl.addElement("create-date").addText(Time.getRFC822(article.getCreateDate()));
    infoEl.addElement("modified-date").addText(Time.getRFC822(article.getModifiedDate()));
    infoEl.addElement("display-date").addText(Time.getRFC822(article.getDisplayDate()));
    infoEl.addElement("author-id").addText(String.valueOf(article.getUserId()));
    infoEl.addElement("author-name").addText(PortalUtil.getUserName(article.getUserId(),article.getUserName()));
    Document articleDoc=reader.read(new StringReader(article.getContentByLocale(languageId)));
    resultEl.content().add(articleDoc.getRootElement().createCopy());
  }
  return JournalUtil.formatXML(resultsDoc).getBytes();
}

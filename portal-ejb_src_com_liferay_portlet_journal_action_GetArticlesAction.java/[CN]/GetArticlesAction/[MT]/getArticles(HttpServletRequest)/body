{
  String companyId=PortalUtil.getCompanyId(req);
  String articleId=null;
  Double version=null;
  String groupId=DAOParamUtil.getString(req,"groupId");
  String title=null;
  String description=null;
  String content=null;
  String type=DAOParamUtil.getString(req,"type");
  String structureId=DAOParamUtil.getString(req,"structureId");
  String templateId=DAOParamUtil.getString(req,"templateId");
  Date gtDate=null;
  String gtDateParam=ParamUtil.getString(req,"gtDate");
  if (Validator.isNotNull(gtDateParam)) {
    DateFormat gtDateFormat=DateUtil.getISOFormat(gtDateParam);
    gtDate=GetterUtil.getDate(gtDateParam,gtDateFormat);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("gtDate is " + gtDate);
  }
  Date ltDate=null;
  String ltDateParam=ParamUtil.getString(req,"ltDate");
  if (Validator.isNotNull(ltDateParam)) {
    DateFormat ltDateFormat=DateUtil.getISOFormat(ltDateParam);
    ltDate=GetterUtil.getDate(ltDateParam,ltDateFormat);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("ltDate is " + ltDate);
  }
  Boolean approved=Boolean.TRUE;
  Boolean expired=Boolean.FALSE;
  Date reviewDate=null;
  boolean andOperator=true;
  int begin=0;
  int end=ParamUtil.getInteger(req,"delta",5);
  String orderBy=ParamUtil.getString(req,"orderBy");
  OrderByComparator obc=new ArticleModifiedDateComparator(false);
  if (orderBy.equals("displayDate")) {
    obc=new ArticleDisplayDateComparator(false);
  }
  return JournalArticleLocalServiceUtil.search(companyId,articleId,version,groupId,title,description,content,type,structureId,templateId,gtDate,ltDate,approved,expired,reviewDate,andOperator,begin,end,obc);
}

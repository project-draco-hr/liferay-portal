{
  long userId=TestPropsValues.getUserId();
  String feedId=StringPool.BLANK;
  boolean autoFeedId=true;
  String description=StringPool.BLANK;
  String type=StringPool.BLANK;
  int delta=0;
  String orderByCol="modified-date";
  String orderByType="asc";
  String targetPortletId=StringPool.BLANK;
  String contentField=JournalFeedConstants.WEB_CONTENT_DESCRIPTION;
  String feedFormat=RSSUtil.getFeedTypeFormat(RSSUtil.FEED_TYPE_DEFAULT);
  double feedVersion=RSSUtil.getFeedTypeVersion(RSSUtil.FEED_TYPE_DEFAULT);
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  Layout layout=LayoutLocalServiceUtil.getLayout(plid);
  String friendlyURL=StringPool.BLANK;
  if (layout.isPrivateLayout()) {
    if (group.isUser()) {
      friendlyURL=friendlyURL.concat(PortalUtil.getPathFriendlyURLPrivateUser());
    }
 else {
      friendlyURL=friendlyURL.concat(PortalUtil.getPathFriendlyURLPrivateGroup());
    }
  }
 else {
    friendlyURL=friendlyURL.concat(PortalUtil.getPathFriendlyURLPublic());
  }
  friendlyURL=friendlyURL.concat(group.getFriendlyURL());
  friendlyURL=friendlyURL.concat(layout.getFriendlyURL());
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(groupId);
  return JournalFeedLocalServiceUtil.addFeed(userId,groupId,feedId,autoFeedId,name,description,type,ddmStructureKey,ddmTemplateKey,rendererTemplateKey,delta,orderByCol,orderByType,friendlyURL,targetPortletId,contentField,feedFormat,feedVersion,serviceContext);
}

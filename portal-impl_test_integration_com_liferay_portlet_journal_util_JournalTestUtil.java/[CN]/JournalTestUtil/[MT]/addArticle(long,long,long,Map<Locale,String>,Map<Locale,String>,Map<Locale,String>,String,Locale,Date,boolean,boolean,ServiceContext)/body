{
  String content=DDMStructureTestUtil.getSampleStructuredContent(contentMap,LocaleUtil.toLanguageId(defaultLocale));
  String xsd=DDMStructureTestUtil.getSampleStructureXSD(_locales,defaultLocale);
  DDMStructure ddmStructure=DDMStructureTestUtil.addStructure(groupId,JournalArticle.class.getName(),xsd);
  DDMTemplate ddmTemplate=DDMTemplateTestUtil.addTemplate(groupId,ddmStructure.getStructureId());
  boolean neverExpire=true;
  int expirationDateDay=0;
  int expirationDateMonth=0;
  int expirationDateYear=0;
  int expirationDateHour=0;
  int expirationDateMinute=0;
  if (expirationDate != null) {
    neverExpire=false;
    Calendar expirationCal=CalendarFactoryUtil.getCalendar(TestPropsValues.getUser().getTimeZone());
    expirationCal.setTime(expirationDate);
    expirationDateMonth=expirationCal.get(Calendar.MONTH);
    expirationDateDay=expirationCal.get(Calendar.DATE);
    expirationDateYear=expirationCal.get(Calendar.YEAR);
    expirationDateHour=expirationCal.get(Calendar.HOUR);
    expirationDateMinute=expirationCal.get(Calendar.MINUTE);
    if (expirationCal.get(Calendar.AM_PM) == Calendar.PM) {
      expirationDateHour+=12;
    }
  }
  if (workflowEnabled) {
    serviceContext=(ServiceContext)serviceContext.clone();
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
    if (approved) {
      serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
    }
  }
  return JournalArticleLocalServiceUtil.addArticle(serviceContext.getUserId(),groupId,folderId,classNameId,0,StringPool.BLANK,true,JournalArticleConstants.VERSION_DEFAULT,titleMap,descriptionMap,content,"general",ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey(),layoutUuid,1,1,1965,0,0,expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,neverExpire,0,0,0,0,0,true,true,false,null,null,null,null,serviceContext);
}

{
  StringBundler sb=new StringBundler();
  sb.append("<display-name>");
  sb.append(displayName);
  sb.append("</display-name>");
  if (webXmlVersion < 2.4) {
    sb.append("<context-param>");
    sb.append("<param-name>liferay-invoker-enabled</param-name>");
    sb.append("<param-value>false</param-value>");
    sb.append("</context-param>");
  }
  sb.append("<listener>");
  sb.append("<listener-class>");
  sb.append(SerializableSessionAttributeListener.class.getName());
  sb.append("</listener-class>");
  sb.append("</listener>");
  sb.append(getDynamicResourceServletContent());
  File serverConfigWsdd=new File(srcFile + "/WEB-INF/server-config.wsdd");
  if (serverConfigWsdd.exists()) {
    File webXml=new File(srcFile + "/WEB-INF/web.xml");
    String content=FileUtil.read(webXml);
    if (!content.contains("axis.servicesPath")) {
      String remotingContent=FileUtil.read(DeployUtil.getResourcePath("remoting-web.xml"));
      sb.append(remotingContent);
    }
  }
  boolean hasTaglib=false;
  if (Validator.isNotNull(auiTaglibDTD) || Validator.isNotNull(portletTaglibDTD) || Validator.isNotNull(portletExtTaglibDTD)|| Validator.isNotNull(securityTaglibDTD)|| Validator.isNotNull(themeTaglibDTD)|| Validator.isNotNull(uiTaglibDTD)|| Validator.isNotNull(utilTaglibDTD)) {
    hasTaglib=true;
  }
  if (hasTaglib && (webXmlVersion > 2.3)) {
    sb.append("<jsp-config>");
  }
  if (Validator.isNotNull(auiTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>http://liferay.com/tld/aui</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/aui.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(portletTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>http://java.sun.com/portlet_2_0</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-portlet.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(portletExtTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>");
    sb.append("http://liferay.com/tld/portlet");
    sb.append("</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-portlet-ext.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(securityTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>");
    sb.append("http://liferay.com/tld/security");
    sb.append("</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-security.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(themeTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>http://liferay.com/tld/theme</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-theme.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(uiTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>http://liferay.com/tld/ui</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-ui.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (Validator.isNotNull(utilTaglibDTD)) {
    sb.append("<taglib>");
    sb.append("<taglib-uri>http://liferay.com/tld/util</taglib-uri>");
    sb.append("<taglib-location>");
    sb.append("/WEB-INF/tld/liferay-util.tld");
    sb.append("</taglib-location>");
    sb.append("</taglib>");
  }
  if (hasTaglib && (webXmlVersion > 2.3)) {
    sb.append("</jsp-config>");
  }
  return sb.toString();
}

{
  Properties properties=getPluginPackageProperties(srcFile);
  if (properties == null) {
    return;
  }
  String[] portalJars=StringUtil.split(properties.getProperty("portal-dependency-jars",properties.getProperty("portal.dependency.jars")));
  for (int i=0; i < portalJars.length; i++) {
    String portalJar=portalJars[i].trim();
    portalJar=fixPortalDependencyJar(portalJar);
    if (_log.isDebugEnabled()) {
      _log.debug("Copy portal JAR " + portalJar);
    }
    try {
      String portalJarPath=PortalUtil.getPortalLibDir() + portalJar;
      FileUtil.copyFile(portalJarPath,srcFile + "/WEB-INF/lib/" + portalJar,true);
    }
 catch (    Exception e) {
      _log.error("Unable to copy portal JAR " + portalJar,e);
    }
  }
  String[] portalTlds=StringUtil.split(properties.getProperty("portal-dependency-tlds",properties.getProperty("portal.dependency.tlds")));
  for (int i=0; i < portalTlds.length; i++) {
    String portalTld=portalTlds[i].trim();
    if (_log.isDebugEnabled()) {
      _log.debug("Copy portal TLD " + portalTld);
    }
    try {
      String portalTldPath=DeployUtil.getResourcePath(portalTld);
      FileUtil.copyFile(portalTldPath,srcFile + "/WEB-INF/tld/" + portalTld,true);
    }
 catch (    Exception e) {
      _log.error("Unable to copy portal TLD " + portalTld,e);
    }
  }
  File pluginLibDir=new File(srcFile + "/WEB-INF/lib/");
  String[] commonsLoggingJars=pluginLibDir.list(new GlobFilenameFilter("commons-logging*.jar"));
  if ((commonsLoggingJars == null) || (commonsLoggingJars.length == 0)) {
    String portalJarPath=PortalUtil.getPortalLibDir() + "commons-logging.jar";
    FileUtil.copyFile(portalJarPath,srcFile + "/WEB-INF/lib/commons-logging.jar",true);
  }
  String[] log4jJars=pluginLibDir.list(new GlobFilenameFilter("log4j*.jar"));
  if ((log4jJars == null) || (log4jJars.length == 0)) {
    String portalJarPath=PortalUtil.getPortalLibDir() + "log4j.jar";
    FileUtil.copyFile(portalJarPath,srcFile + "/WEB-INF/lib/log4j.jar",true);
  }
}

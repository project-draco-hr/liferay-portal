{
  webXmlContent=WebXMLBuilder.organizeWebXML(webXmlContent);
  int x=webXmlContent.indexOf("<filter>");
  int y=webXmlContent.lastIndexOf("</filter-mapping>");
  if ((x == -1) || (y == -1)) {
    return webXmlContent;
  }
  String filterContent=webXmlContent.substring(x,y + 17);
  String liferayWebXmlContent=FileUtil.read(DeployUtil.getResourcePath("web.xml"));
  int z=liferayWebXmlContent.indexOf("</web-app>");
  liferayWebXmlContent=liferayWebXmlContent.substring(0,z) + filterContent + liferayWebXmlContent.substring(z);
  liferayWebXmlContent=WebXMLBuilder.organizeWebXML(liferayWebXmlContent);
  FileUtil.write(srcFile + "/WEB-INF/liferay-web.xml",liferayWebXmlContent);
  StringBundler sb=new StringBundler();
  sb.append("<filter>");
  sb.append("<filter-name>Invoker Filter</filter-name>");
  sb.append("<filter-class>");
  sb.append(InvokerFilter.class.getName());
  sb.append("</filter-class>");
  sb.append("</filter>");
  sb.append("<filter-mapping>");
  sb.append("<filter-name>Invoker Filter</filter-name>");
  sb.append("<url-pattern>/*</url-pattern>");
  sb.append("<dispatcher>ERROR</dispatcher>");
  sb.append("<dispatcher>FORWARD</dispatcher>");
  sb.append("<dispatcher>INCLUDE</dispatcher>");
  sb.append("<dispatcher>REQUEST</dispatcher>");
  sb.append("</filter-mapping>");
  webXmlContent=webXmlContent.substring(0,x) + sb.toString() + webXmlContent.substring(y + 17);
  return webXmlContent;
}

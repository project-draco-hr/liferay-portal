{
  Group guestGroup=GroupLocalServiceUtil.getGroup(TestPropsValues.getCompanyId(),GroupConstants.GUEST);
  List<Layout> rootLayoutList=new ArrayList<Layout>();
  rootLayoutList.addAll(LayoutLocalServiceUtil.getLayouts(guestGroup.getGroupId(),privateLayout,LayoutConstants.DEFAULT_PARENT_LAYOUT_ID));
  if (rootLayoutList.isEmpty()) {
    rootLayoutList.add(LayoutTestUtil.addLayout(guestGroup.getGroupId(),StringUtil.randomString(),privateLayout));
  }
  ServiceContext serviceContext=new ServiceContext();
  try {
    LayoutLocalServiceUtil.deleteLayouts(guestGroup.getGroupId(),privateLayout,serviceContext);
  }
 catch (  RequiredLayoutException rle) {
    if (privateLayout) {
      Assert.fail("Guest site may not have any private pages");
    }
    return;
  }
  if (!privateLayout) {
    Assert.fail("Guest site must have at least one public page");
  }
}

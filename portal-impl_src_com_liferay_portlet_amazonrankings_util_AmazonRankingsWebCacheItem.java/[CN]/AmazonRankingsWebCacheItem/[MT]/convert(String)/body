{
  String isbn=_isbn;
  AmazonRankings amazonRankings=null;
  try {
    AmazonA2S a2service=new AmazonA2SClient(AmazonRankingsUtil.getAmazonAccessKeyId(),AmazonRankingsUtil.getAmazonAssociateTag(),AmazonA2SLocale.US);
    ItemLookupRequest itemLookupRequest=getItemLookupRequest(isbn);
    ItemLookupResponse itemLookupResponse=a2service.itemLookup(itemLookupRequest);
    Item item=getItem(itemLookupResponse);
    if (!item.isSetItemAttributes()) {
      throw new AmazonA2SException("Item attributes is not set");
    }
    ItemAttributes itemAttributes=item.getItemAttributes();
    String productName=itemAttributes.getTitle();
    String catalog=StringPool.BLANK;
    String[] authors=null;
    if (itemAttributes.isSetAuthor()) {
      List<String> authorsList=itemAttributes.getAuthor();
      authorsList.toArray(new String[authorsList.size()]);
    }
    Date releaseDate=null;
    String releaseDateAsString=null;
    if (itemAttributes.isSetPublicationDate()) {
      releaseDateAsString=itemAttributes.getPublicationDate();
      SimpleDateFormat dateFormat=null;
      if (releaseDateAsString.length() > 7) {
        dateFormat=new SimpleDateFormat("yyyy-MM-dd",Locale.US);
      }
 else {
        dateFormat=new SimpleDateFormat("yyyy-MM",Locale.US);
      }
      releaseDate=GetterUtil.getDate(releaseDateAsString,dateFormat);
    }
    String manufacturer=itemAttributes.getManufacturer();
    String smallImageURL=null;
    if (item.isSetSmallImage()) {
      smallImageURL=item.getSmallImage().getURL();
    }
    String mediumImageURL=null;
    if (item.isSetMediumImage()) {
      mediumImageURL=item.getMediumImage().getURL();
    }
    String largeImageURL=null;
    if (item.isSetLargeImage()) {
      largeImageURL=item.getLargeImage().getURL();
    }
    double listPrice=0;
    double ourPrice=0;
    double usedPrice=0;
    double collectiblePrice=0;
    double thirdPartyNewPrice=0;
    listPrice=getPrice(itemAttributes.getListPrice());
    OfferListing offerListing=getOfferListing(item);
    if (offerListing != null) {
      ourPrice=getPrice(offerListing.getPrice());
    }
    if (item.isSetOfferSummary()) {
      OfferSummary offerSummary=item.getOfferSummary();
      usedPrice=getPrice(offerSummary.getLowestUsedPrice());
      collectiblePrice=getPrice(offerSummary.getLowestCollectiblePrice());
      thirdPartyNewPrice=getPrice(offerSummary.getLowestNewPrice());
    }
    int salesRank=GetterUtil.getInteger(item.getSalesRank());
    String media=StringPool.BLANK;
    String availability=null;
    if (offerListing != null) {
      availability=offerListing.getAvailability();
    }
    amazonRankings=new AmazonRankings(isbn,productName,catalog,authors,releaseDate,releaseDateAsString,manufacturer,smallImageURL,mediumImageURL,largeImageURL,listPrice,ourPrice,usedPrice,collectiblePrice,thirdPartyNewPrice,salesRank,media,availability);
  }
 catch (  Exception e) {
    throw new WebCacheException(isbn + " " + e.toString());
  }
  return amazonRankings;
}

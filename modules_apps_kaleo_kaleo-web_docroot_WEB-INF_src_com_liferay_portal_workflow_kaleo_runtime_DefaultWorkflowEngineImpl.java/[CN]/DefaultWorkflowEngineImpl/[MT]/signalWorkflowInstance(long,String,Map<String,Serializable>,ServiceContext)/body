{
  try {
    KaleoInstance kaleoInstance=doUpdateContext(workflowInstanceId,workflowContext,serviceContext);
    KaleoInstanceToken kaleoInstanceToken=kaleoInstance.getRootKaleoInstanceToken(serviceContext);
    if (Validator.isNotNull(transitionName)) {
      KaleoNode currentKaleoNode=kaleoInstanceToken.getCurrentKaleoNode();
      currentKaleoNode.getKaleoTransition(transitionName);
    }
    serviceContext.setScopeGroupId(kaleoInstanceToken.getGroupId());
    final ExecutionContext executionContext=new ExecutionContext(kaleoInstanceToken,workflowContext,serviceContext);
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      @Override public Void call() throws Exception {
        try {
          _kaleoSignaler.signalExit(transitionName,executionContext);
        }
 catch (        Exception e) {
          throw new WorkflowException("Unable to signal next transition",e);
        }
        return null;
      }
    }
);
    return WorkflowModelUtil.toWorkflowInstance(kaleoInstance,kaleoInstanceToken,workflowContext);
  }
 catch (  Exception e) {
    throw new WorkflowException(e);
  }
}

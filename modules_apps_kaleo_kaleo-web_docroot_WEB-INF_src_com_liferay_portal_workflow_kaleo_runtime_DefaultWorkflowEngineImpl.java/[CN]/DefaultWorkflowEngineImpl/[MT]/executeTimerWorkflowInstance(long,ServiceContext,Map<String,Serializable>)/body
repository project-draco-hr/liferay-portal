{
  try {
    KaleoTimerInstanceToken kaleoTimerInstanceToken=kaleoTimerInstanceTokenLocalService.getKaleoTimerInstanceToken(kaleoTimerInstanceTokenId);
    KaleoInstanceToken kaleoInstanceToken=kaleoTimerInstanceToken.getKaleoInstanceToken();
    final ExecutionContext executionContext=new ExecutionContext(kaleoInstanceToken,kaleoTimerInstanceToken,workflowContext,serviceContext);
    KaleoTaskInstanceToken kaleoTaskInstanceToken=kaleoTimerInstanceToken.getKaleoTaskInstanceToken();
    executionContext.setKaleoTaskInstanceToken(kaleoTaskInstanceToken);
    final KaleoNode currentKaleoNode=kaleoInstanceToken.getCurrentKaleoNode();
    NodeExecutor nodeExecutor=NodeExecutorFactory.getNodeExecutor(currentKaleoNode.getType());
    nodeExecutor.executeTimer(currentKaleoNode,executionContext);
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      @Override public Void call() throws Exception {
        _kaleoSignaler.signalExecute(currentKaleoNode,executionContext);
        return null;
      }
    }
);
    return executionContext;
  }
 catch (  Exception e) {
    throw new WorkflowException(e);
  }
}

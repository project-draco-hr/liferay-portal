{
  User user=TestPropsValues.getUser();
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId());
  List<ObjectValuePair<String,InputStream>> objectValuePairs=MBTestUtil.getInputStreamOVPs("attachment.txt",getClass(),StringPool.BLANK);
  MBMessage message=MBMessageLocalServiceUtil.addMessage(user.getUserId(),user.getFullName(),_group.getGroupId(),MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID,RandomTestUtil.randomString(),RandomTestUtil.randomString(),MBMessageConstants.DEFAULT_FORMAT,objectValuePairs,false,0,false,serviceContext);
  List<ObjectValuePair<String,InputStream>> emptyObjectValuePairs=Collections.emptyList();
  List<String> emptyExistingFiles=Collections.emptyList();
  MBMessageLocalServiceUtil.updateMessage(user.getUserId(),message.getMessageId(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),emptyObjectValuePairs,emptyExistingFiles,0,false,serviceContext);
  List<FileEntry> fileEntries=PortletFileRepositoryUtil.getPortletFileEntries(message.getGroupId(),message.getAttachmentsFolderId());
  Assert.assertEquals(1,fileEntries.size());
  FileEntry fileEntry=fileEntries.get(0);
  DLFileEntry dlFileEntry=((DLFileEntry)fileEntry.getModel());
  Assert.assertEquals(WorkflowConstants.STATUS_IN_TRASH,dlFileEntry.getStatus());
}

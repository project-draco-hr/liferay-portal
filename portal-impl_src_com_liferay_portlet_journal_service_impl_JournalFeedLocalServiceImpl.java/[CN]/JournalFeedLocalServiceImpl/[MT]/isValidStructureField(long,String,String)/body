{
  if (contentField.equals(JournalFeedConstants.WEB_CONTENT_DESCRIPTION) || contentField.equals(JournalFeedConstants.RENDERED_WEB_CONTENT)) {
    return true;
  }
  try {
    DDMStructure ddmStructure=ddmStructureLocalService.getStructure(groupId,classNameLocalService.getClassNameId(JournalArticle.class),ddmStructureKey);
    DDMForm ddmForm=ddmStructure.getDDMForm();
    Map<String,DDMFormField> ddmFormFieldsMap=ddmForm.getDDMFormFieldsMap(false);
    if (ddmFormFieldsMap.containsKey(contentField)) {
      return true;
    }
 else {
      int selectAndRadioFieldsCounter=0;
      for (      DDMFormField ddmFormField : ddmFormFieldsMap.values()) {
        String ddmFormFieldType=ddmFormField.getType();
        if (ddmFormFieldType.equals("select") || ddmFormFieldType.equals("radio")) {
          selectAndRadioFieldsCounter++;
          DDMFormFieldOptions ddmFormFieldOptions=ddmFormField.getDDMFormFieldOptions();
          for (          String optionValue : ddmFormFieldOptions.getOptionsValues()) {
            Locale locale=LocaleThreadLocal.getThemeDisplayLocale();
            String optionLabel=ddmFormFieldOptions.getOptionLabels(optionValue).getString(locale);
            String optionLabelFormatted=optionLabel + StringPool.UNDERLINE + selectAndRadioFieldsCounter;
            if (optionLabelFormatted.equals(contentField)) {
              return true;
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return false;
}

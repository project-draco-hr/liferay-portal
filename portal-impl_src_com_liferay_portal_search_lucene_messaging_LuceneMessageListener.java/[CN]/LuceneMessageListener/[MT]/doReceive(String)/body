{
  JSONObject jsonObj=JSONFactoryUtil.createJSONObject(message);
  String responseDestination=jsonObj.getString("lfrResponseDestination");
  String responseId=jsonObj.getString("lfrResponseId");
  jsonObj.remove("lfrResponseDestination");
  jsonObj.remove("lfrResponseId");
  SearchRequest searchRequest=(SearchRequest)JSONFactoryUtil.deserialize(message);
  String command=searchRequest.getCommand();
  long companyId=searchRequest.getCompanyId();
  String id=searchRequest.getId();
  Document doc=searchRequest.getDocument();
  if (command.equals(SearchRequest.COMMAND_ADD)) {
    LuceneSearchEngineUtil.addDocument(companyId,doc);
  }
 else   if (command.equals(SearchRequest.COMMAND_DELETE)) {
    LuceneSearchEngineUtil.deleteDocument(companyId,id);
  }
 else   if (command.equals(SearchRequest.COMMAND_DELETE_PORTLET_DOCS)) {
    LuceneSearchEngineUtil.deletePortletDocuments(companyId,id);
  }
 else   if (command.equals(SearchRequest.COMMAND_INDEX_ONLY) && Validator.isNotNull(responseDestination) && Validator.isNotNull(responseId)) {
    doCommandIndexOnly(responseDestination,responseId);
  }
 else   if (command.equals(SearchRequest.COMMAND_SEARCH) && Validator.isNotNull(responseDestination) && Validator.isNotNull(responseId)) {
    doCommandSearch(responseDestination,responseId,searchRequest);
  }
 else   if (command.equals(SearchRequest.COMMAND_UPDATE)) {
    LuceneSearchEngineUtil.updateDocument(companyId,id,doc);
  }
}

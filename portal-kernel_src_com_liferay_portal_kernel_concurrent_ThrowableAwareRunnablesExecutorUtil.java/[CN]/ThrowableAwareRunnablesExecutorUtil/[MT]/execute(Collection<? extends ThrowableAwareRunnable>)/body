{
  ExecutorService executorService=Executors.newFixedThreadPool(throwableAwareRunnables.size());
  List<Callable<Object>> jobs=new ArrayList<>(throwableAwareRunnables.size());
  for (  ThrowableAwareRunnable throwableAwareRunnable : throwableAwareRunnables) {
    jobs.add(Executors.callable(throwableAwareRunnable));
  }
  try {
    List<Future<Object>> futures=executorService.invokeAll(jobs);
    for (    Future<Object> future : futures) {
      future.get();
    }
  }
  finally {
    executorService.shutdown();
  }
  List<Throwable> throwables=new ArrayList<>();
  for (  ThrowableAwareRunnable throwableAwareRunnable : throwableAwareRunnables) {
    if (throwableAwareRunnable.hasException()) {
      throwables.add(throwableAwareRunnable.getThrowable());
    }
  }
  if (!throwables.isEmpty()) {
    throw new BulkException(throwables);
  }
}

{
  boolean autoPassword=ParamUtil.getBoolean(serviceContext,"autoPassword");
  String password=null;
  if (autoPassword) {
    if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
      if (_log.isWarnEnabled()) {
        StringBundler sb=new StringBundler(4);
        sb.append("When LDAP password policy is enabled, it is ");
        sb.append("possible that portal generated passwords will ");
        sb.append("not match the LDAP policy. Using ");
        sb.append("RegExpToolkit to generate new password.");
        _log.warn(sb.toString());
      }
      RegExpToolkit regExpToolkit=new RegExpToolkit();
      password=regExpToolkit.generate(null);
    }
 else {
      PasswordPolicy passwordPolicy=passwordPolicyLocalService.getPasswordPolicy(user.getCompanyId(),user.getOrganizationIds());
      password=PwdToolkitUtil.generate(passwordPolicy);
    }
    serviceContext.setAttribute("passwordUnencrypted",password);
    user.setPassword(PasswordEncryptorUtil.encrypt(password));
    user.setPasswordUnencrypted(password);
    user.setPasswordEncrypted(true);
    user.setPasswordModified(true);
    user.setPasswordModifiedDate(new Date());
    userPersistence.update(user);
    user.setPasswordModified(false);
  }
  if (user.hasCompanyMx()) {
    String mailPassword=(String)serviceContext.getAttribute("passwordUnencrypted");
    mailService.addUser(user.getCompanyId(),user.getUserId(),mailPassword,user.getFirstName(),user.getMiddleName(),user.getLastName(),user.getEmailAddress());
  }
  boolean sendEmail=ParamUtil.getBoolean(serviceContext,"sendEmail");
  if (sendEmail) {
    sendEmail(user,password,serviceContext);
  }
  Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
  if (company.isStrangersVerify() && (serviceContext.getPlid() > 0)) {
    sendEmailAddressVerification(user,user.getEmailAddress(),serviceContext);
  }
}

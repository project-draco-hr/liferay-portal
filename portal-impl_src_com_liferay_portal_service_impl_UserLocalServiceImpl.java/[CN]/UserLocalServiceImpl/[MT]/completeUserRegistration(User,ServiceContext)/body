{
  boolean autoPassword=ParamUtil.getBoolean(serviceContext,"autoPassword");
  String password=null;
  if (autoPassword) {
    if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
      _log.warn("When LDAP password policy is enabled, it's possible " + "that portal generated passwords will not match the " + "LDAP policy! Using RegExpToolkit to generate "+ "new password.");
      RegExpToolkit regExpToolkit=new RegExpToolkit();
      password=regExpToolkit.generate(null);
    }
 else {
      PasswordPolicy passwordPolicy=passwordPolicyLocalService.getPasswordPolicy(user.getCompanyId(),user.getOrganizationIds());
      password=PwdToolkitUtil.generate(passwordPolicy);
    }
    user.setPassword(PwdEncryptor.encrypt(password));
    user.setPasswordEncrypted(true);
    user.setPasswordUnencrypted(password);
    userPersistence.update(user);
  }
  if (user.hasCompanyMx()) {
    String mailPassword=password;
    if (Validator.isNull(mailPassword)) {
      mailPassword=user.getPasswordUnencrypted();
    }
    mailService.addUser(user.getCompanyId(),user.getUserId(),mailPassword,user.getFirstName(),user.getMiddleName(),user.getLastName(),user.getEmailAddress());
  }
  boolean sendEmail=ParamUtil.getBoolean(serviceContext,"sendEmail");
  if (sendEmail) {
    sendEmail(user,password,serviceContext);
  }
  Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
  if (company.isStrangersVerify() && (serviceContext.getPlid() > 0)) {
    sendEmailAddressVerification(user,user.getEmailAddress(),serviceContext);
  }
}

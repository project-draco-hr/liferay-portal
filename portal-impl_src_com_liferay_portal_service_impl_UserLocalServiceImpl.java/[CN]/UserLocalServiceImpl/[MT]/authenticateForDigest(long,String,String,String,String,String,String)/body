{
  if (PropsValues.AUTH_LOGIN_DISABLED) {
    return 0;
  }
  User user=fetchUserByEmailAddress(companyId,username);
  if (user == null) {
    user=fetchUserByScreenName(companyId,username);
  }
  if (user == null) {
    user=userPersistence.fetchByPrimaryKey(GetterUtil.getLong(username));
  }
  if (user == null) {
    return 0;
  }
  if (!isUserAllowedToAuthenticate(user)) {
    return 0;
  }
  String digest=user.getDigest();
  if (Validator.isNull(digest)) {
    _log.error("User must first login through the portal " + user.getUserId());
    return 0;
  }
  String[] digestArray=StringUtil.split(user.getDigest());
  for (  String ha1 : digestArray) {
    String ha2=DigesterUtil.digestHex(Digester.MD5,method,uri);
    String curResponse=DigesterUtil.digestHex(Digester.MD5,ha1,nonce,ha2);
    if (response.equals(curResponse)) {
      return user.getUserId();
    }
  }
  Company company=companyLocalService.getCompany(companyId);
  String authType=company.getAuthType();
  handleAuthenticationFailure(username,authType,user,new HashMap<String,String[]>(),new HashMap<String,String[]>());
  return 0;
}

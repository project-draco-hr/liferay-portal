{
  User user=userPersistence.findByPrimaryKey(userId);
  if (!user.getScreenName().equalsIgnoreCase(screenName)) {
    validateScreenName(user.getCompanyId(),userId,screenName);
  }
  validateEmailAddress(emailAddress);
  if (!user.isDefaultUser()) {
    try {
      if (!user.getEmailAddress().equalsIgnoreCase(emailAddress)) {
        if (userPersistence.findByC_EA(user.getCompanyId(),emailAddress) != null) {
          throw new DuplicateUserEmailAddressException();
        }
      }
    }
 catch (    NoSuchUserException nsue) {
    }
    String[] reservedEmailAddresses=PrefsPropsUtil.getStringArray(user.getCompanyId(),PropsUtil.ADMIN_RESERVED_EMAIL_ADDRESSES,StringPool.NEW_LINE,PropsValues.ADMIN_RESERVED_EMAIL_ADDRESSES);
    for (int i=0; i < reservedEmailAddresses.length; i++) {
      if (emailAddress.equalsIgnoreCase(reservedEmailAddresses[i])) {
        throw new ReservedUserEmailAddressException();
      }
    }
    if (Validator.isNull(firstName)) {
      throw new ContactFirstNameException();
    }
 else     if (Validator.isNull(lastName)) {
      throw new ContactLastNameException();
    }
  }
  if (Validator.isNotNull(smsSn) && !Validator.isEmailAddress(smsSn)) {
    throw new UserSmsException();
  }
}

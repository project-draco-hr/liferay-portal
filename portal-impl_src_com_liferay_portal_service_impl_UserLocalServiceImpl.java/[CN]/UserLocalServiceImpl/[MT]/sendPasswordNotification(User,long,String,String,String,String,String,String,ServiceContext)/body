{
  if (Validator.isNull(fromName)) {
    fromName=PrefsPropsUtil.getString(companyId,PropsKeys.ADMIN_EMAIL_FROM_NAME);
  }
  if (Validator.isNull(fromAddress)) {
    fromAddress=PrefsPropsUtil.getString(companyId,PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  }
  String toName=user.getFullName();
  String toAddress=user.getEmailAddress();
  PortletPreferences companyPortletPreferences=PrefsPropsUtil.getPreferences(companyId,true);
  Map<Locale,String> localizedSubjectMap=null;
  Map<Locale,String> localizedBodyMap=null;
  String bodyProperty=null;
  String prefix=null;
  String subjectProperty=null;
  if (Validator.isNotNull(passwordResetURL)) {
    bodyProperty=PropsKeys.ADMIN_EMAIL_PASSWORD_RESET_BODY;
    prefix="adminEmailPasswordReset";
    subjectProperty=PropsKeys.ADMIN_EMAIL_PASSWORD_RESET_SUBJECT;
  }
 else {
    bodyProperty=PropsKeys.ADMIN_EMAIL_PASSWORD_SENT_BODY;
    prefix="adminEmailPasswordSent";
    subjectProperty=PropsKeys.ADMIN_EMAIL_PASSWORD_SENT_SUBJECT;
  }
  if (Validator.isNull(body)) {
    localizedBodyMap=LocalizationUtil.getLocalizationMap(companyPortletPreferences,prefix + "Body",bodyProperty);
  }
  if (Validator.isNull(subject)) {
    localizedSubjectMap=LocalizationUtil.getLocalizationMap(companyPortletPreferences,prefix + "Subject",subjectProperty);
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setCompanyId(companyId);
  subscriptionSender.setContextAttributes("[$PASSWORD_RESET_URL$]",passwordResetURL,"[$REMOTE_ADDRESS$]",serviceContext.getRemoteAddr(),"[$REMOTE_HOST$]",serviceContext.getRemoteHost(),"[$USER_ID$]",user.getUserId(),"[$USER_PASSWORD$]",newPassword,"[$USER_SCREENNAME$]",user.getScreenName());
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setLocalizedBodyMap(localizedBodyMap);
  subscriptionSender.setLocalizedSubjectMap(localizedSubjectMap);
  subscriptionSender.setMailId("user",user.getUserId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

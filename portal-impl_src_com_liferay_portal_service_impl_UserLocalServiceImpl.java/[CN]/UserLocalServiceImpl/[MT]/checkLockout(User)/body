{
  if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
    return;
  }
  PasswordPolicy passwordPolicy=user.getPasswordPolicy();
  if (!passwordPolicy.isLockout()) {
    return;
  }
  Date now=new Date();
  int failedLoginAttempts=user.getFailedLoginAttempts();
  if (failedLoginAttempts > 0) {
    long failedLoginTime=user.getLastFailedLoginDate().getTime();
    long elapsedTime=now.getTime() - failedLoginTime;
    long requiredElapsedTime=passwordPolicy.getResetFailureCount() * 1000;
    if ((requiredElapsedTime != 0) && (elapsedTime > requiredElapsedTime)) {
      user.setFailedLoginAttempts(0);
      userPersistence.update(user);
    }
  }
  if (user.isLockout()) {
    long lockoutTime=user.getLockoutDate().getTime();
    long elapsedTime=now.getTime() - lockoutTime;
    long requiredElapsedTime=passwordPolicy.getLockoutDuration() * 1000;
    if ((requiredElapsedTime != 0) && (elapsedTime > requiredElapsedTime)) {
      user.setLockout(false);
      user.setLockoutDate(null);
      userPersistence.update(user);
    }
  }
  if (user.isLockout()) {
    throw new UserLockoutException.PasswordPolicyLockout(user,passwordPolicy);
  }
}

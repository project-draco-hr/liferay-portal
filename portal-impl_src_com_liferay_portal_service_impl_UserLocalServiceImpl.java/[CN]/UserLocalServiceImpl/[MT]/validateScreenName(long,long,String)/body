{
  if (Validator.isNull(screenName)) {
    throw new UserScreenNameException();
  }
  ScreenNameValidator screenNameValidator=ScreenNameValidatorFactory.getInstance();
  if (!screenNameValidator.validate(companyId,screenName)) {
    throw new UserScreenNameException();
  }
  if (Validator.isNumber(screenName) && !screenName.equals(String.valueOf(userId))) {
    if (!PropsValues.USERS_SCREEN_NAME_ALLOW_NUMERIC) {
      throw new UserScreenNameException();
    }
    Group group=groupPersistence.fetchByPrimaryKey(GetterUtil.getLong(screenName));
    if (group != null) {
      throw new UserScreenNameException();
    }
  }
  for (  char c : screenName.toCharArray()) {
    if ((!Validator.isChar(c)) && (!Validator.isDigit(c)) && (c != CharPool.DASH)&& (c != CharPool.PERIOD)&& (c != CharPool.UNDERLINE)) {
      throw new UserScreenNameException();
    }
  }
  String[] anonymousNames=PrincipalBean.ANONYMOUS_NAMES;
  for (int i=0; i < anonymousNames.length; i++) {
    if (screenName.equalsIgnoreCase(anonymousNames[i])) {
      throw new UserScreenNameException();
    }
  }
  User user=userPersistence.fetchByC_SN(companyId,screenName);
  if (user != null) {
    throw new DuplicateUserScreenNameException();
  }
  String friendlyURL=StringPool.SLASH + screenName;
  Group group=groupPersistence.fetchByC_F(companyId,friendlyURL);
  if (group != null) {
    throw new DuplicateUserScreenNameException();
  }
  int exceptionType=LayoutImpl.validateFriendlyURL(friendlyURL);
  if (exceptionType != -1) {
    throw new UserScreenNameException(new GroupFriendlyURLException(exceptionType));
  }
  String[] reservedScreenNames=PrefsPropsUtil.getStringArray(companyId,PropsKeys.ADMIN_RESERVED_SCREEN_NAMES,StringPool.NEW_LINE,PropsValues.ADMIN_RESERVED_SCREEN_NAMES);
  for (int i=0; i < reservedScreenNames.length; i++) {
    if (screenName.equalsIgnoreCase(reservedScreenNames[i])) {
      throw new ReservedUserScreenNameException();
    }
  }
}

{
  String password=oldPassword;
  screenName=getScreenName(screenName);
  emailAddress=emailAddress.trim().toLowerCase();
  openId=openId.trim();
  aimSn.trim().toLowerCase();
  facebookSn.trim().toLowerCase();
  icqSn.trim().toLowerCase();
  jabberSn.trim().toLowerCase();
  msnSn.trim().toLowerCase();
  mySpaceSn.trim().toLowerCase();
  skypeSn.trim().toLowerCase();
  twitterSn.trim().toLowerCase();
  ymSn.trim().toLowerCase();
  Date now=new Date();
  validate(userId,screenName,emailAddress,firstName,lastName,smsSn);
  if (Validator.isNotNull(newPassword1) || Validator.isNotNull(newPassword2)) {
    updatePassword(userId,newPassword1,newPassword2,passwordReset);
    password=newPassword1;
  }
  User user=userPersistence.findByPrimaryKey(userId);
  Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
  user.setModifiedDate(now);
  if (user.getContactId() <= 0) {
    user.setContactId(counterLocalService.increment());
  }
  user.setPasswordReset(passwordReset);
  user.setScreenName(screenName);
  if (!emailAddress.equalsIgnoreCase(user.getEmailAddress())) {
    if (!user.hasCompanyMx() && user.hasCompanyMx(emailAddress)) {
      mailService.addUser(userId,password,firstName,middleName,lastName,emailAddress);
    }
 else     if (user.hasCompanyMx() && user.hasCompanyMx(emailAddress)) {
      mailService.updateEmailAddress(userId,emailAddress);
    }
 else     if (user.hasCompanyMx() && !user.hasCompanyMx(emailAddress)) {
      mailService.deleteEmailAddress(userId);
    }
    user.setEmailAddress(emailAddress);
  }
  user.setOpenId(openId);
  user.setLanguageId(languageId);
  user.setTimeZoneId(timeZoneId);
  user.setGreeting(greeting);
  user.setComments(comments);
  userPersistence.update(user,false);
  UserIndexer.setEnabled(false);
  ExpandoBridge expandoBridge=user.getExpandoBridge();
  expandoBridge.setIndexEnabled(false);
  expandoBridge.setAttributes(serviceContext);
  Date birthday=PortalUtil.getDate(birthdayMonth,birthdayDay,birthdayYear,new ContactBirthdayException());
  long contactId=user.getContactId();
  Contact contact=contactPersistence.fetchByPrimaryKey(contactId);
  if (contact == null) {
    contact=contactPersistence.create(contactId);
    contact.setCompanyId(user.getCompanyId());
    contact.setUserName(StringPool.BLANK);
    contact.setCreateDate(now);
    contact.setAccountId(company.getAccountId());
    contact.setParentContactId(ContactConstants.DEFAULT_PARENT_CONTACT_ID);
  }
  contact.setModifiedDate(now);
  contact.setFirstName(firstName);
  contact.setMiddleName(middleName);
  contact.setLastName(lastName);
  contact.setPrefixId(prefixId);
  contact.setSuffixId(suffixId);
  contact.setMale(male);
  contact.setBirthday(birthday);
  contact.setSmsSn(smsSn);
  contact.setAimSn(aimSn);
  contact.setFacebookSn(facebookSn);
  contact.setIcqSn(icqSn);
  contact.setJabberSn(jabberSn);
  contact.setMsnSn(msnSn);
  contact.setMySpaceSn(mySpaceSn);
  contact.setSkypeSn(skypeSn);
  contact.setTwitterSn(twitterSn);
  contact.setYmSn(ymSn);
  contact.setJobTitle(jobTitle);
  contactPersistence.update(contact,false);
  Group group=groupLocalService.getUserGroup(user.getCompanyId(),userId);
  group.setFriendlyURL(StringPool.SLASH + screenName);
  groupPersistence.update(group,false);
  updateGroups(userId,groupIds);
  updateOrganizations(userId,organizationIds);
  if (roleIds != null) {
    userPersistence.setRoles(userId,roleIds);
  }
  if (userGroupIds != null) {
    userPersistence.setUserGroups(userId,userGroupIds);
  }
  announcementsDeliveryLocalService.getUserDeliveries(user.getUserId());
  try {
    UserIndexer.setEnabled(true);
    UserIndexer.updateUser(user);
  }
 catch (  SearchException se) {
    _log.error("Indexing " + userId,se);
  }
  PermissionCacheUtil.clearCache();
  return user;
}

{
  if (!PropsValues.USERS_DELETE) {
    throw new RequiredUserException();
  }
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(User.class);
  indexer.delete(user);
  browserTrackerLocalService.deleteUserBrowserTracker(user.getUserId());
  Group group=user.getGroup();
  if (group != null) {
    groupLocalService.deleteGroup(group);
  }
  imageLocalService.deleteImage(user.getPortraitId());
  passwordPolicyRelLocalService.deletePasswordPolicyRel(User.class.getName(),user.getUserId());
  passwordTrackerLocalService.deletePasswordTrackers(user.getUserId());
  subscriptionLocalService.deleteSubscriptions(user.getUserId());
  userIdMapperLocalService.deleteUserIdMappers(user.getUserId());
  announcementsDeliveryLocalService.deleteDeliveries(user.getUserId());
  assetEntryLocalService.deleteEntry(User.class.getName(),user.getUserId());
  blogsStatsUserLocalService.deleteStatsUserByUserId(user.getUserId());
  dlFileRankLocalService.deleteFileRanksByUserId(user.getUserId());
  expandoValueLocalService.deleteValues(User.class.getName(),user.getUserId());
  mbBanLocalService.deleteBansByBanUserId(user.getUserId());
  mbStatsUserLocalService.deleteStatsUsersByUserId(user.getUserId());
  mbThreadFlagLocalService.deleteThreadFlagsByUserId(user.getUserId());
  membershipRequestLocalService.deleteMembershipRequestsByUserId(user.getUserId());
  shoppingCartLocalService.deleteUserCarts(user.getUserId());
  socialActivityLocalService.deleteUserActivities(user.getUserId());
  socialRequestLocalService.deleteReceiverUserRequests(user.getUserId());
  socialRequestLocalService.deleteUserRequests(user.getUserId());
  mailService.deleteUser(user.getCompanyId(),user.getUserId());
  try {
    contactLocalService.deleteContact(user.getContactId());
  }
 catch (  NoSuchContactException nsce) {
  }
  resourceLocalService.deleteResource(user.getCompanyId(),User.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,user.getUserId());
  userGroupRoleLocalService.deleteUserGroupRolesByUserId(user.getUserId());
  userPersistence.remove(user);
  PermissionCacheUtil.clearCache();
  workflowInstanceLinkLocalService.deleteWorkflowInstanceLinks(user.getCompanyId(),0,User.class.getName(),user.getUserId());
}

{
  if (user == null) {
    return Authenticator.DNE;
  }
  try {
    if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
      AuthPipeline.onFailureByEmailAddress(PropsKeys.AUTH_FAILURE,user.getCompanyId(),login,headerMap,parameterMap);
    }
 else     if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
      AuthPipeline.onFailureByScreenName(PropsKeys.AUTH_FAILURE,user.getCompanyId(),login,headerMap,parameterMap);
    }
 else     if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) {
      AuthPipeline.onFailureByUserId(PropsKeys.AUTH_FAILURE,user.getCompanyId(),user.getUserId(),headerMap,parameterMap);
    }
    user=userPersistence.fetchByPrimaryKey(user.getUserId());
    if (user == null) {
      return Authenticator.DNE;
    }
    if (!LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
      PasswordPolicy passwordPolicy=user.getPasswordPolicy();
      user=userPersistence.fetchByPrimaryKey(user.getUserId());
      int failedLoginAttempts=user.getFailedLoginAttempts();
      int maxFailures=passwordPolicy.getMaxFailure();
      if ((failedLoginAttempts >= maxFailures) && (maxFailures != 0)) {
        if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
          AuthPipeline.onMaxFailuresByEmailAddress(PropsKeys.AUTH_MAX_FAILURES,user.getCompanyId(),login,headerMap,parameterMap);
        }
 else         if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
          AuthPipeline.onMaxFailuresByScreenName(PropsKeys.AUTH_MAX_FAILURES,user.getCompanyId(),login,headerMap,parameterMap);
        }
 else         if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) {
          AuthPipeline.onMaxFailuresByUserId(PropsKeys.AUTH_MAX_FAILURES,user.getCompanyId(),user.getUserId(),headerMap,parameterMap);
        }
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return Authenticator.FAILURE;
}

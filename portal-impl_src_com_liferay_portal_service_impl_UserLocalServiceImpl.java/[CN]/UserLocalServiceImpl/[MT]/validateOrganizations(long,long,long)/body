{
  boolean organizationRequired=GetterUtil.getBoolean(PropsUtil.get(PropsUtil.ORGANIZATIONS_PARENT_ORGANIZATION_REQUIRED));
  boolean locationRequired=GetterUtil.getBoolean(PropsUtil.get(PropsUtil.ORGANIZATIONS_LOCATION_REQUIRED));
  if (locationRequired) {
    organizationRequired=true;
  }
  Organization organization=null;
  if (organizationRequired || (organizationId > 0)) {
    organization=OrganizationUtil.findByPrimaryKey(organizationId);
  }
  Organization location=null;
  if (locationRequired || (locationId > 0)) {
    location=OrganizationUtil.findByPrimaryKey(locationId);
  }
  if ((organization != null) && (location != null)) {
    List ancestors=OrganizationLocalServiceUtil.getAncestors(organizationId);
    boolean isAncestor=false;
    Iterator it=ancestors.iterator();
    while (it.hasNext()) {
      Organization ancestor=(Organization)it.next();
      if (ancestor.getPrimaryKey() == location.getParentOrganizationId()) {
        isAncestor=true;
        break;
      }
    }
    if (!isAncestor) {
      throw new OrganizationParentException();
    }
  }
}

{
  Company company=companyLocalService.getCompanyById(user.getCompanyId());
  Ticket ticket=ticketLocalService.addTicket(user.getCompanyId(),User.class.getName(),user.getUserId(),TicketConstants.TYPE_EMAIL_ADDRESS,emailAddress,null,serviceContext);
  String verifyEmailAddressURL=serviceContext.getPortalURL() + serviceContext.getPathMain() + "/portal/verify_email_address?ticketKey="+ ticket.getKey();
  Layout layout=layoutLocalService.getLayout(serviceContext.getPlid());
  Group group=layout.getGroup();
  if (!layout.isPrivateLayout() && !group.isUser()) {
    verifyEmailAddressURL+="&p_l_id=" + serviceContext.getPlid();
  }
  String fromName=PrefsPropsUtil.getString(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String toName=user.getFullName();
  String toAddress=emailAddress;
  String subject=PrefsPropsUtil.getContent(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_VERIFICATION_SUBJECT);
  String body=PrefsPropsUtil.getContent(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_VERIFICATION_BODY);
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(serviceContext.getCompanyId());
  subscriptionSender.setContextAttributes("[$EMAIL_VERIFICATION_CODE$]",ticket.getKey(),"[$EMAIL_VERIFICATION_URL$]",verifyEmailAddressURL,"[$REMOTE_ADDRESS$]",serviceContext.getRemoteAddr(),"[$REMOTE_HOST$]",serviceContext.getRemoteHost(),"[$USER_AGENT$]",serviceContext.getUserAgent(),"[$USER_ID$]",String.valueOf(user.getUserId()),"[$USER_SCREENNAME$]",user.getScreenName());
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("email_verification",user.getUserId());
  subscriptionSender.setScopeGroupId(serviceContext.getScopeGroupId());
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(user.getUserId());
  subscriptionSender.setPortletId(PortletKeys.PORTAL);
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

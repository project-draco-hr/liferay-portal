{
  if (user.isEmailAddressVerified() && StringUtil.equalsIgnoreCase(emailAddress,user.getEmailAddress())) {
    return;
  }
  Ticket ticket=ticketLocalService.addDistinctTicket(user.getCompanyId(),User.class.getName(),user.getUserId(),TicketConstants.TYPE_EMAIL_ADDRESS,emailAddress,null,serviceContext);
  String verifyEmailAddressURL=serviceContext.getPortalURL() + serviceContext.getPathMain() + "/portal/verify_email_address?ticketKey="+ ticket.getKey();
  long plid=serviceContext.getPlid();
  if (plid > 0) {
    Layout layout=layoutLocalService.fetchLayout(plid);
    if (layout != null) {
      Group group=layout.getGroup();
      if (!layout.isPrivateLayout() && !group.isUser()) {
        verifyEmailAddressURL+="&p_l_id=" + serviceContext.getPlid();
      }
    }
  }
  String fromName=PrefsPropsUtil.getString(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(user.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String toName=user.getFullName();
  String toAddress=emailAddress;
  PortletPreferences companyPortletPreferences=PrefsPropsUtil.getPreferences(user.getCompanyId(),true);
  Map<Locale,String> localizedSubjectMap=LocalizationUtil.getLocalizationMap(companyPortletPreferences,"adminEmailVerificationSubject",PropsKeys.ADMIN_EMAIL_VERIFICATION_SUBJECT);
  Map<Locale,String> localizedBodyMap=LocalizationUtil.getLocalizationMap(companyPortletPreferences,"adminEmailVerificationBody",PropsKeys.ADMIN_EMAIL_VERIFICATION_BODY);
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setCompanyId(user.getCompanyId());
  subscriptionSender.setContextAttributes("[$EMAIL_VERIFICATION_CODE$]",ticket.getKey(),"[$EMAIL_VERIFICATION_URL$]",verifyEmailAddressURL,"[$REMOTE_ADDRESS$]",serviceContext.getRemoteAddr(),"[$REMOTE_HOST$]",serviceContext.getRemoteHost(),"[$USER_ID$]",user.getUserId(),"[$USER_SCREENNAME$]",user.getScreenName());
  subscriptionSender.setCreatorUserId(user.getUserId());
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setLocalizedBodyMap(localizedBodyMap);
  subscriptionSender.setLocalizedSubjectMap(localizedSubjectMap);
  subscriptionSender.setMailId("user",user.getUserId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

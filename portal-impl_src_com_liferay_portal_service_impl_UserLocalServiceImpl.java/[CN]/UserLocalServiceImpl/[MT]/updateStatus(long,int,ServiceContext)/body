{
  User user=userPersistence.findByPrimaryKey(userId);
  if ((status == WorkflowConstants.STATUS_APPROVED) && (user.getStatus() != WorkflowConstants.STATUS_APPROVED)) {
    validateCompanyMaxUsers(user.getCompanyId());
  }
  String passwordUnencrypted=(String)serviceContext.getAttribute("passwordUnencrypted");
  if (Validator.isNotNull(passwordUnencrypted)) {
    user.setPasswordUnencrypted(passwordUnencrypted);
  }
  user.setStatus(status);
  userPersistence.update(user);
  reindex(user);
  Group group=user.getGroup();
  if (status == WorkflowConstants.STATUS_INACTIVE) {
    group.setActive(false);
  }
 else {
    group.setActive(true);
  }
  groupLocalService.updateGroup(group);
  return user;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  Set<Long> groupIdsSet=new HashSet<>();
  String[] defaultGroupNames=PrefsPropsUtil.getStringArray(user.getCompanyId(),PropsKeys.ADMIN_DEFAULT_GROUP_NAMES,StringPool.NEW_LINE,PropsValues.ADMIN_DEFAULT_GROUP_NAMES);
  for (  String defaultGroupName : defaultGroupNames) {
    Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
    Account account=company.getAccount();
    if (StringUtil.equalsIgnoreCase(defaultGroupName,account.getName())) {
      defaultGroupName=GroupConstants.GUEST;
    }
    Group group=groupPersistence.fetchByC_GK(user.getCompanyId(),defaultGroupName);
    if ((group != null) && !userPersistence.containsGroup(userId,group.getGroupId())) {
      groupIdsSet.add(group.getGroupId());
    }
  }
  String[] defaultOrganizationGroupNames=PrefsPropsUtil.getStringArray(user.getCompanyId(),PropsKeys.ADMIN_DEFAULT_ORGANIZATION_GROUP_NAMES,StringPool.NEW_LINE,PropsValues.ADMIN_DEFAULT_ORGANIZATION_GROUP_NAMES);
  for (  String defaultOrganizationGroupName : defaultOrganizationGroupNames) {
    defaultOrganizationGroupName+=GroupLocalServiceImpl.ORGANIZATION_NAME_SUFFIX;
    Group group=groupPersistence.fetchByC_GK(user.getCompanyId(),defaultOrganizationGroupName);
    if ((group != null) && !userPersistence.containsGroup(userId,group.getGroupId())) {
      groupIdsSet.add(group.getGroupId());
    }
  }
  long[] groupIds=ArrayUtil.toArray(groupIdsSet.toArray(new Long[groupIdsSet.size()]));
  groupLocalService.addUserGroups(userId,groupIds);
  for (  long groupId : groupIds) {
    addDefaultRolesAndTeams(groupId,new long[]{userId});
  }
}

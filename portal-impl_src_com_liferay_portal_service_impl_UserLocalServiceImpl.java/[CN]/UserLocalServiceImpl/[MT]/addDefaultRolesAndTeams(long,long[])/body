{
  Group group=groupLocalService.getGroup(groupId);
  UnicodeProperties groupTypeSettings=group.getTypeSettingsProperties();
  List<Role> defaultGroupRoles=new ArrayList();
  List<Team> defaultGroupTeams=new ArrayList();
  String[] rolesIds=StringUtil.split(groupTypeSettings.getProperty("defaultGroupRoles"),StringPool.COMMA);
  String[] teamIds=StringUtil.split(groupTypeSettings.getProperty("defaultGroupTeams"),StringPool.COMMA);
  for (int i=0; i < rolesIds.length; i++) {
    try {
      defaultGroupRoles.add(roleLocalService.getRole(Long.valueOf(rolesIds[i])));
    }
 catch (    Exception e) {
      _log.warn("The role " + rolesIds[i] + " was not found.");
    }
  }
  for (int i=0; i < teamIds.length; i++) {
    try {
      defaultGroupTeams.add(teamLocalService.getTeam(Long.valueOf(teamIds[i])));
    }
 catch (    Exception e) {
      _log.warn("The team " + teamIds[i] + " was not found.");
    }
  }
  for (  long userId : userIds) {
    Set<Long> roleIdSet=new HashSet<Long>();
    Set<Long> teamIdSet=new HashSet<Long>();
    for (    Role role : defaultGroupRoles) {
      if (!userPersistence.containsRole(userId,role.getRoleId())) {
        roleIdSet.add(role.getRoleId());
      }
    }
    long[] userRoleIds=ArrayUtil.toArray(roleIdSet.toArray(new Long[roleIdSet.size()]));
    userGroupRoleLocalService.addUserGroupRoles(userId,groupId,userRoleIds);
    for (    Team team : defaultGroupTeams) {
      if (!userPersistence.containsTeam(userId,team.getTeamId())) {
        teamIdSet.add(team.getTeamId());
      }
    }
    long[] userTeamIds=ArrayUtil.toArray(teamIdSet.toArray(new Long[teamIdSet.size()]));
    userPersistence.addTeams(userId,userTeamIds);
  }
}

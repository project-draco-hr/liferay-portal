{
  List<Role> defaultSiteRoles=new ArrayList<>();
  Group group=groupLocalService.getGroup(groupId);
  UnicodeProperties typeSettingsProperties=group.getTypeSettingsProperties();
  long[] defaultSiteRoleIds=StringUtil.split(typeSettingsProperties.getProperty("defaultSiteRoleIds"),0L);
  for (  long defaultSiteRoleId : defaultSiteRoleIds) {
    Role defaultSiteRole=rolePersistence.fetchByPrimaryKey(defaultSiteRoleId);
    if (defaultSiteRole == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to find role " + defaultSiteRoleId);
      }
      continue;
    }
    defaultSiteRoles.add(defaultSiteRole);
  }
  List<Team> defaultTeams=new ArrayList<>();
  long[] defaultTeamIds=StringUtil.split(typeSettingsProperties.getProperty("defaultTeamIds"),0L);
  for (  long defaultTeamId : defaultTeamIds) {
    Team defaultTeam=teamPersistence.findByPrimaryKey(defaultTeamId);
    if (defaultTeam == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to find team " + defaultTeamId);
      }
      continue;
    }
    defaultTeams.add(defaultTeam);
  }
  for (  long userId : userIds) {
    Set<Long> userRoleIdsSet=new HashSet<>();
    for (    Role role : defaultSiteRoles) {
      userRoleIdsSet.add(role.getRoleId());
    }
    long[] userRoleIds=ArrayUtil.toArray(userRoleIdsSet.toArray(new Long[userRoleIdsSet.size()]));
    userGroupRoleLocalService.addUserGroupRoles(userId,groupId,userRoleIds);
    Set<Long> userTeamIdsSet=new HashSet<>();
    for (    Team team : defaultTeams) {
      userTeamIdsSet.add(team.getTeamId());
    }
    long[] userTeamIds=ArrayUtil.toArray(userTeamIdsSet.toArray(new Long[userTeamIdsSet.size()]));
    userPersistence.addTeams(userId,userTeamIds);
  }
}

{
  User user=UserUtil.findByPrimaryKey(userId);
  if (!silentUpdate) {
    validatePassword(user.getCompanyId(),userId,password1,password2);
  }
  String oldEncPwd=user.getPassword();
  if (!user.isPasswordEncrypted()) {
    oldEncPwd=PwdEncryptor.encrypt(user.getPassword());
  }
  String newEncPwd=PwdEncryptor.encrypt(password1);
  if (user.hasCompanyMx()) {
    try {
      MailServiceUtil.updatePassword(userId,password1);
    }
 catch (    RemoteException re) {
      throw new SystemException(re);
    }
  }
  user.setPassword(newEncPwd);
  user.setPasswordUnencrypted(password1);
  user.setPasswordEncrypted(true);
  user.setPasswordReset(passwordReset);
  user.setPasswordModifiedDate(new Date());
  user.setGraceLoginCount(0);
  if (!silentUpdate) {
    user.setPasswordModified(true);
  }
  try {
    UserUtil.update(user);
  }
 catch (  ModelListenerException mle) {
    String errorMessage=mle.getCause().getMessage();
    if (PortalLDAPUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
      if (errorMessage != null) {
        if (errorMessage.indexOf(PrefsPropsUtil.getString(user.getCompanyId(),PropsUtil.LDAP_ERROR_PASSWORD_HISTORY)) != -1) {
          throw new UserPasswordException(UserPasswordException.PASSWORD_ALREADY_USED);
        }
      }
    }
    throw new UserPasswordException(UserPasswordException.PASSWORD_INVALID);
  }
  if (!silentUpdate) {
    user.setPasswordModified(false);
  }
  PasswordTrackerLocalServiceUtil.trackPassword(userId,oldEncPwd);
  return user;
}

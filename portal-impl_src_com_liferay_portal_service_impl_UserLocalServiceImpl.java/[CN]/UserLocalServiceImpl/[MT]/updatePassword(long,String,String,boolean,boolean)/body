{
  User user=userPersistence.findByPrimaryKey(userId);
  if (!silentUpdate) {
    validatePassword(user.getCompanyId(),userId,password1,password2);
  }
  String oldEncPwd=user.getPassword();
  if (!user.isPasswordEncrypted()) {
    oldEncPwd=PwdEncryptor.encrypt(user.getPassword());
  }
  String newEncPwd=PwdEncryptor.encrypt(password1);
  if (user.hasCompanyMx()) {
    mailService.updatePassword(user.getCompanyId(),userId,password1);
  }
  user.setPassword(newEncPwd);
  user.setPasswordUnencrypted(password1);
  user.setPasswordEncrypted(true);
  user.setPasswordReset(passwordReset);
  user.setPasswordModifiedDate(new Date());
  user.setGraceLoginCount(0);
  if (!silentUpdate) {
    user.setPasswordModified(true);
  }
  try {
    userPersistence.update(user,false);
  }
 catch (  ModelListenerException mle) {
    String msg=GetterUtil.getString(mle.getCause().getMessage());
    if (PortalLDAPUtil.isPasswordPolicyEnabled(user.getCompanyId())) {
      String passwordHistory=PrefsPropsUtil.getString(user.getCompanyId(),PropsKeys.LDAP_ERROR_PASSWORD_HISTORY);
      if (msg.indexOf(passwordHistory) != -1) {
        throw new UserPasswordException(UserPasswordException.PASSWORD_ALREADY_USED);
      }
    }
    throw new UserPasswordException(UserPasswordException.PASSWORD_INVALID);
  }
  if (!silentUpdate) {
    user.setPasswordModified(false);
    passwordTrackerLocalService.trackPassword(userId,oldEncPwd);
  }
  return user;
}

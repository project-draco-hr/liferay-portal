{
  super.afterPropertiesSet();
  ServiceDependencyManager serviceDependencyManager=new ServiceDependencyManager();
  serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener(){
    @Override public void dependenciesFulfilled(){
      Registry registry=RegistryUtil.getRegistry();
      EntityCache entityCache=registry.getService(EntityCache.class);
      PortalCache<Serializable,Serializable> portalCache=entityCache.getPortalCache(UserImpl.class);
      PortalCacheMapSynchronizeUtil.synchronize(portalCache,_defaultUsers,new Synchronizer<Serializable,Serializable>(){
        @Override public void onSynchronize(        Map<? extends Serializable,? extends Serializable> map,        Serializable key,        Serializable value,        int timeToLive){
          if (!(value instanceof UserCacheModel)) {
            return;
          }
          UserCacheModel userCacheModel=(UserCacheModel)value;
          if (userCacheModel.defaultUser) {
            _defaultUsers.remove(userCacheModel.companyId);
          }
        }
      }
);
    }
    @Override public void destroy(){
    }
  }
);
  serviceDependencyManager.registerDependencies(EntityCache.class);
}

{
  Group group=GroupLocalServiceUtil.getGroup(portletDataContext.getScopeGroupId());
  StringBuilder sb=new StringBuilder(content);
  String[] patterns={"href=","[["};
  int beginPos=-1;
  int endPos=content.length();
  int offset=0;
  while (true) {
    beginPos=StringUtil.lastIndexOfAny(content,patterns,endPos);
    if (beginPos == -1) {
      break;
    }
    if (content.startsWith("href=",beginPos)) {
      offset=5;
      char c=content.charAt(beginPos + offset);
      if ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {
        offset++;
      }
    }
 else     if (content.charAt(beginPos) == CharPool.OPEN_BRACKET) {
      offset=2;
    }
    endPos=StringUtil.indexOfAny(content,_LAYOUT_REFERENCE_STOP_CHARS,beginPos + offset,endPos);
    if (endPos == -1) {
      endPos=beginPos - 1;
      continue;
    }
    String url=content.substring(beginPos + offset,endPos);
    StringBundler newUrl=new StringBundler(5);
    try {
      if (!url.startsWith(StringPool.SLASH)) {
        continue;
      }
      String pathContext=PortalUtil.getPathContext();
      if (Validator.isNotNull(pathContext) && (pathContext.length() > 1)) {
        if (startsWithPath(url,pathContext)) {
          newUrl.append("@data_handler_path_context@");
          url=StringUtil.replaceFirst(url,pathContext,StringPool.BLANK);
        }
 else {
          continue;
        }
      }
      if (!url.startsWith(StringPool.SLASH) || (StringUtil.count(url,StringPool.SLASH) < 2)) {
        continue;
      }
      String localePath=url.substring(0,url.indexOf(StringPool.SLASH,1));
      Locale locale=LocaleUtil.fromLanguageId(localePath.substring(1),true,false);
      if (locale != null) {
        String urlWithoutLocale=StringUtil.replaceFirst(url,localePath,StringPool.BLANK);
        if (startsWithPath(url,_PRIVATE_GROUP_SERVLET_MAPPING) || startsWithPath(url,_PRIVATE_USER_SERVLET_MAPPING) || startsWithPath(url,_PUBLIC_GROUP_SERVLET_MAPPING)) {
          if (startsWithPath(urlWithoutLocale,_PRIVATE_GROUP_SERVLET_MAPPING) || startsWithPath(urlWithoutLocale,_PRIVATE_USER_SERVLET_MAPPING) || startsWithPath(urlWithoutLocale,_PUBLIC_GROUP_SERVLET_MAPPING)) {
            newUrl.append(localePath);
            url=urlWithoutLocale;
          }
        }
 else {
          newUrl.append(localePath);
          url=urlWithoutLocale;
        }
      }
      if (startsWithPath(url,_PRIVATE_GROUP_SERVLET_MAPPING)) {
        newUrl.append("@data_handler_private_group_servlet_mapping@");
        url=StringUtil.replaceFirst(url,_PRIVATE_GROUP_SERVLET_MAPPING,StringPool.BLANK);
      }
 else       if (startsWithPath(url,_PRIVATE_USER_SERVLET_MAPPING)) {
        newUrl.append("@data_handler_private_user_servlet_mapping@");
        url=StringUtil.replaceFirst(url,_PRIVATE_USER_SERVLET_MAPPING,StringPool.BLANK);
      }
 else       if (startsWithPath(url,_PUBLIC_GROUP_SERVLET_MAPPING)) {
        newUrl.append("@data_handler_public_servlet_mapping@");
        url=StringUtil.replaceFirst(url,_PUBLIC_GROUP_SERVLET_MAPPING,StringPool.BLANK);
      }
 else {
        continue;
      }
      String groupFriendlyURL=group.getFriendlyURL();
      if (startsWithPath(url,groupFriendlyURL)) {
        newUrl.append("@data_handler_group_friendly_url@");
        url=StringUtil.replaceFirst(url,groupFriendlyURL,StringPool.BLANK);
      }
    }
  finally {
      newUrl.append(url);
      String newUrlString=newUrl.toString();
      sb.replace(beginPos + offset,endPos,newUrlString);
      endPos=beginPos - 1;
    }
  }
  return sb.toString();
}

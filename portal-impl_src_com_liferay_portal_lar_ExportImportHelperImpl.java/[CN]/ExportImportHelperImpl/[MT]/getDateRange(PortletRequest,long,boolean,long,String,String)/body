{
  Date startDate=null;
  Date endDate=null;
  String range=ParamUtil.getString(portletRequest,"range",defaultRange);
  if (range.equals("dateRange")) {
    Calendar startCalendar=getCalendar(portletRequest,"startDate",true);
    startDate=startCalendar.getTime();
    Calendar endCalendar=getCalendar(portletRequest,"endDate",true);
    endDate=endCalendar.getTime();
  }
 else   if (range.equals("fromLastPublishDate")) {
    long lastPublishDate=0;
    if (Validator.isNotNull(portletId) && (plid > 0)) {
      Layout layout=LayoutLocalServiceUtil.getLayout(plid);
      PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(layout,portletId,StringPool.BLANK);
      lastPublishDate=GetterUtil.getLong(preferences.getValue("last-publish-date",StringPool.BLANK));
    }
 else {
      LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(groupId,privateLayout);
      lastPublishDate=GetterUtil.getLong(layoutSet.getSettingsProperty("last-publish-date"));
    }
    if (lastPublishDate > 0) {
      endDate=new Date();
      startDate=new Date(lastPublishDate);
    }
  }
 else   if (range.equals("last")) {
    int rangeLast=ParamUtil.getInteger(portletRequest,"last");
    Date now=new Date();
    startDate=new Date(now.getTime() - (rangeLast * Time.HOUR));
    endDate=now;
  }
  return new DateRange(startDate,endDate);
}

{
  List<Layout> childLayouts=layout.getChildren();
  JSONArray childLayoutsJSONArray=null;
  boolean includeChildren=true;
  if (ListUtil.isNotEmpty(childLayouts)) {
    childLayoutsJSONArray=JSONFactoryUtil.createJSONArray();
    for (    Layout childLayout : childLayouts) {
      if (!createLayoutsJSON(childLayout,childLayoutsJSONArray,selectedLayoutIds)) {
        includeChildren=false;
      }
    }
  }
  boolean checked=ArrayUtil.contains(selectedLayoutIds,layout.getLayoutId());
  if (checked) {
    JSONObject layoutJSONObject=JSONFactoryUtil.createJSONObject();
    layoutJSONObject.put("includeChildren",includeChildren);
    layoutJSONObject.put("plid",layout.getPlid());
    layoutsJSONArray.put(layoutJSONObject);
  }
  if (checked && includeChildren) {
    return true;
  }
  if (childLayoutsJSONArray != null) {
    for (int i=0; i < childLayoutsJSONArray.length(); i++) {
      layoutsJSONArray.put(childLayoutsJSONArray.getJSONObject(i));
    }
  }
  return false;
}

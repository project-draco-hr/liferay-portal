{
  List<Element> referenceElements=portletDataContext.getReferenceElements(entityStagedModel,FileEntry.class);
  for (  Element referenceElement : referenceElements) {
    long classPK=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
    Element referenceDataElement=portletDataContext.getReferenceDataElement(entityStagedModel,FileEntry.class,classPK);
    String path=null;
    if (referenceDataElement != null) {
      path=referenceDataElement.attributeValue("path");
    }
    long groupId=GetterUtil.getLong(referenceElement.attributeValue("group-id"));
    if (Validator.isNull(path)) {
      String className=referenceElement.attributeValue("class-name");
      path=ExportImportPathUtil.getModelPath(groupId,className,classPK);
    }
    if (!content.contains("[$dl-reference=" + path + "$]")) {
      continue;
    }
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,entityStagedModel,FileEntry.class,classPK);
    String uuid=referenceElement.attributeValue("uuid");
    FileEntry importedFileEntry=FileEntryUtil.fetchByUUID_R(uuid,groupId);
    if (importedFileEntry == null) {
      continue;
    }
    String url=DLUtil.getPreviewURL(importedFileEntry,importedFileEntry.getFileVersion(),null,StringPool.BLANK,false,false);
    content=StringUtil.replace(content,"[$dl-reference=" + path + "$]",url);
  }
  return content;
}

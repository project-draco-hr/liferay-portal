{
  final Map<String,MissingReference> missingReferences=new HashMap<String,MissingReference>();
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  String userIdStrategy=MapUtil.getString(parameterMap,PortletDataHandlerKeys.USER_ID_STRATEGY);
  ZipReader zipReader=ZipReaderFactoryUtil.getZipReader(file);
  final PortletDataContext portletDataContext=PortletDataContextFactoryUtil.createImportPortletDataContext(group.getCompanyId(),groupId,parameterMap,getUserIdStrategy(userId,userIdStrategy),zipReader);
  SAXParser saxParser=new SAXParser();
  ElementHandler elementHandler=new ElementHandler(new ElementProcessor(){
    @Override public void processElement(    Element element){
      MissingReference missingReference=validateMissingReference(portletDataContext,element);
      if (missingReference != null) {
        MissingReference existingMissingReference=missingReferences.get(missingReference.getDisplayName());
        if (existingMissingReference != null) {
          existingMissingReference.addReferrers(missingReference.getReferrers());
        }
 else {
          missingReferences.put(missingReference.getDisplayName(),missingReference);
        }
      }
    }
  }
,new String[]{"missing-reference"});
  saxParser.setContentHandler(elementHandler);
  saxParser.parse(new InputSource(portletDataContext.getZipEntryAsInputStream("/manifest.xml")));
  return missingReferences;
}

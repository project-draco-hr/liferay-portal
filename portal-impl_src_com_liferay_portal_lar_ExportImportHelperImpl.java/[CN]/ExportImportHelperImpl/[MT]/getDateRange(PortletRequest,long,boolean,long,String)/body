{
  Date startDate=null;
  Date endDate=null;
  String range=ParamUtil.getString(portletRequest,"range");
  if (range.equals("dateRange")) {
    startDate=getDate(portletRequest,"startDate",true).getTime();
    endDate=getDate(portletRequest,"endDate",true).getTime();
  }
 else   if (range.equals("fromLastPublishDate")) {
    if (Validator.isNotNull(portletId) && (plid > 0)) {
      Layout layout=LayoutLocalServiceUtil.getLayout(plid);
      PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(layout,portletId,StringPool.BLANK);
      long lastPublishDate=GetterUtil.getLong(preferences.getValue("last-publish-date",StringPool.BLANK));
      if (lastPublishDate > 0) {
        endDate=new Date();
        startDate=new Date(lastPublishDate);
      }
    }
 else {
      LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(groupId,privateLayout);
      long lastPublishDate=GetterUtil.getLong(layoutSet.getSettingsProperty("last-publish-date"));
      if (lastPublishDate > 0) {
        endDate=new Date();
        startDate=new Date(lastPublishDate);
      }
    }
  }
 else   if (range.equals("last")) {
    int rangeLast=ParamUtil.getInteger(portletRequest,"last");
    Date now=new Date();
    startDate=new Date(now.getTime() - (rangeLast * Time.HOUR));
    endDate=now;
  }
  return new DateRange(startDate,endDate);
}

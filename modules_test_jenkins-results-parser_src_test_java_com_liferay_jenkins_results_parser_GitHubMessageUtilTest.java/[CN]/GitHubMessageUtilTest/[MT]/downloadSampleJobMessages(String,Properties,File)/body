{
  gitHubJobMessageUtilTest.dependenciesDir=sampleDir;
  int jobCount=0;
  int passCount=0;
  StringBuilder reportFilesSB=new StringBuilder();
  String content=JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(progressiveTextURL));
  Matcher progressiveTextMatcher=_progressiveTextPattern.matcher(content);
  while (progressiveTextMatcher.find()) {
    String urlString=progressiveTextMatcher.group("url");
    Matcher jobNameMatcher=_jobNamePattern.matcher(urlString);
    jobNameMatcher.find();
    JSONObject jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(urlString + "/api/json"));
    Project project=getProject(null,urlString,sampleDir.getPath());
    GitHubJobMessageUtil.getGitHubJobMessage(project);
    File reportFile=new File(sampleDir,jobCount + "-report.html");
    StringBuilder sb=new StringBuilder();
    sb.append("<h5 job-result=\"");
    sb.append(jsonObject.getString("result"));
    sb.append("\"><a href=\"");
    sb.append(urlString);
    sb.append("\">");
    sb.append(jobNameMatcher.group("jobName"));
    sb.append("</a></h5>");
    sb.append(project.getProperty("report.html.content"));
    JenkinsResultsParserUtil.write(reportFile,sb.toString());
    if (reportFilesSB.length() > 0) {
      reportFilesSB.append(" ");
    }
    reportFilesSB.append(reportFile.getPath());
    String result=jsonObject.getString("result");
    if (result.equals("SUCCESS")) {
      passCount++;
    }
    jobCount++;
  }
  properties.setProperty("top.level.fail.count",String.valueOf(jobCount - passCount));
  properties.setProperty("top.level.pass.count",String.valueOf(passCount));
  properties.setProperty("top.level.report.files",reportFilesSB.toString());
}

{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return countByG_LtD_S(groupId,displayDate,status);
  }
  Session session=null;
  try {
    session=openSession();
    StringBundler query=new StringBundler(4);
    query.append(_FILTER_SQL_COUNT_BLOGSENTRY_WHERE);
    query.append(_FINDER_COLUMN_G_LTD_S_GROUPID_2);
    if (displayDate == null) {
      query.append(_FINDER_COLUMN_G_LTD_S_DISPLAYDATE_1);
    }
 else {
      query.append(_FINDER_COLUMN_G_LTD_S_DISPLAYDATE_2);
    }
    query.append(_FINDER_COLUMN_G_LTD_S_STATUS_2);
    String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),BlogsEntry.class.getName(),_FILTER_COLUMN_PK,_FILTER_COLUMN_USERID,groupId);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (displayDate != null) {
      qPos.add(CalendarUtil.getTimestamp(displayDate));
    }
    qPos.add(status);
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  BlogsEntry blogsEntry=findByPrimaryKey(entryId);
  int count=countByG_U_D_S(groupId,userId,displayDate,status);
  Session session=null;
  try {
    session=openSession();
    int arrayCapacity=10;
    if (obc != null) {
      arrayCapacity+=(obc.getOrderByFields().length * 4);
    }
    if (12 > arrayCapacity) {
      arrayCapacity=12;
    }
    StringBundler query=new StringBundler(arrayCapacity);
    query.append("SELECT blogsEntry FROM BlogsEntry blogsEntry WHERE ");
    query.append("blogsEntry.groupId = ?");
    query.append(" AND ");
    query.append("blogsEntry.userId = ?");
    query.append(" AND ");
    if (displayDate == null) {
      query.append("blogsEntry.displayDate < null");
    }
 else {
      query.append("blogsEntry.displayDate < ?");
    }
    query.append(" AND ");
    query.append("blogsEntry.status = ?");
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY ");
      String[] orderByFields=obc.getOrderByFields();
      for (int i=0; i < orderByFields.length; i++) {
        query.append("blogsEntry.");
        query.append(orderByFields[i]);
        if (obc.isAscending()) {
          query.append(" ASC");
        }
 else {
          query.append(" DESC");
        }
        if ((i + 1) < orderByFields.length) {
          query.append(", ");
        }
      }
    }
 else {
      query.append("ORDER BY ");
      query.append("blogsEntry.displayDate DESC");
    }
    Query q=session.createQuery(query.toString());
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(userId);
    if (displayDate != null) {
      qPos.add(CalendarUtil.getTimestamp(displayDate));
    }
    qPos.add(status);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,blogsEntry);
    BlogsEntry[] array=new BlogsEntryImpl[3];
    array[0]=(BlogsEntry)objArray[0];
    array[1]=(BlogsEntry)objArray[1];
    array[2]=(BlogsEntry)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

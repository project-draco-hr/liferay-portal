{
  Object[] finderArgs=new Object[]{new Long(groupId),urlTitle};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_UT,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("FROM com.liferay.portlet.blogs.model.BlogsEntry WHERE ");
      query.append("groupId = ?");
      query.append(" AND ");
      if (urlTitle == null) {
        query.append("urlTitle IS NULL");
      }
 else {
        query.append("urlTitle = ?");
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("displayDate DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (urlTitle != null) {
        qPos.add(urlTitle);
      }
      List<BlogsEntry> list=q.list();
      result=list;
      BlogsEntry blogsEntry=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_UT,finderArgs,list);
      }
 else {
        blogsEntry=list.get(0);
        cacheResult(blogsEntry);
        if ((blogsEntry.getGroupId() != groupId) || (blogsEntry.getUrlTitle() == null) || !blogsEntry.getUrlTitle().equals(urlTitle)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_UT,finderArgs,blogsEntry);
        }
      }
      return blogsEntry;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_UT,finderArgs,new ArrayList<BlogsEntry>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List) {
      return null;
    }
 else {
      return (BlogsEntry)result;
    }
  }
}

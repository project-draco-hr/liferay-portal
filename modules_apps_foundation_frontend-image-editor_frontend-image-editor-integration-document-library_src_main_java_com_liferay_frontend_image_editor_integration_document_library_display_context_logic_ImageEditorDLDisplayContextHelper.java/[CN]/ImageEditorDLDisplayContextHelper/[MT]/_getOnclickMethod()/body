{
  String imageEditorPortletId=PortletProviderUtil.getPortletId(Image.class.getName(),PortletProvider.Action.EDIT);
  PortletURL imageEditorURL=PortletURLFactoryUtil.create(_request,imageEditorPortletId,_themeDisplay.getPlid(),PortletRequest.RENDER_PHASE);
  imageEditorURL.setParameter("mvcRenderCommandName","/image_editor/view");
  try {
    imageEditorURL.setWindowState(LiferayWindowState.POP_UP);
  }
 catch (  Exception e) {
    throw new SystemException("Unable to set window state",e);
  }
  LiferayPortletResponse liferayPortletResponse=_getLiferayPortletResponse();
  PortletURL editURL=liferayPortletResponse.createActionURL(PortletKeys.DOCUMENT_LIBRARY);
  editURL.setParameter(ActionRequest.ACTION_NAME,"/document_library/edit_file_entry_with_image_editor");
  editURL.setParameter("fileEntryId",String.valueOf(_fileEntry.getFileEntryId()));
  String fileEntryPreviewURL=DLUtil.getPreviewURL(_fileEntry,_fileVersion,_themeDisplay,StringPool.BLANK);
  StringBundler sb=new StringBundler(10);
  sb.append(liferayPortletResponse.getNamespace());
  sb.append("editWithImageEditor('");
  sb.append(imageEditorURL.toString());
  sb.append("', '");
  sb.append(editURL.toString());
  sb.append("', '");
  sb.append(LanguageUtil.get(_request,"edit") + " " + _fileEntry.getFileName());
  sb.append("', '");
  sb.append(fileEntryPreviewURL);
  sb.append("');");
  return sb.toString();
}

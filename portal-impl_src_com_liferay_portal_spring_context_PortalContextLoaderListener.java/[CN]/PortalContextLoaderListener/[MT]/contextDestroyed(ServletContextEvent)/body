{
  PortalContextLoaderLifecycleThreadLocal.setDestroying(true);
  ThreadLocalCacheManager.destroy();
  if (_serviceWrapperRegistry != null) {
    _serviceWrapperRegistry.close();
  }
  try {
    ClearThreadLocalUtil.clearThreadLocal();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    ClearTimerThreadUtil.clearTimerThread();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    DirectServletRegistryUtil.clearServlets();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    HotDeployUtil.reset();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    ModuleFrameworkUtilAdapter.stopRuntime();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    PortalLifecycleUtil.reset();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  closeDataSource("counterDataSourceImpl");
  closeDataSource("liferayDataSourceImpl");
  try {
    super.contextDestroyed(servletContextEvent);
    try {
      ModuleFrameworkUtilAdapter.stopFramework(PropsValues.MODULE_FRAMEWORK_STOP_WAIT_TIMEOUT);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    ModuleFrameworkUtilAdapter.unregisterContext(_arrayApplicationContext);
    _arrayApplicationContext.close();
  }
  finally {
    PortalContextLoaderLifecycleThreadLocal.setDestroying(false);
    SecurityManagerUtil.destroy();
  }
}

{
  if (skipAdvice(methodInvocation)) {
    return null;
  }
  Class<?> targetClass=null;
  if (methodInvocation.getThis() != null) {
    Object thisObject=methodInvocation.getThis();
    targetClass=thisObject.getClass();
  }
  Method targetMethod=methodInvocation.getMethod();
  TransactionAttribute transactionAttribute=_transactionAttributeSource.getTransactionAttribute(targetMethod,targetClass);
  Operation operation=Operation.WRITE;
  UseDefaultDataSource useDefaultDataSource=findAnnotation(methodInvocation);
  if ((transactionAttribute != null) && transactionAttribute.isReadOnly() && (useDefaultDataSource == _nullUseDefaultDataSource)) {
    operation=Operation.READ;
  }
  if (_log.isDebugEnabled()) {
    StringBundler sb=new StringBundler(4);
    sb.append("Changing dynamic data source from ");
    sb.append(_dynamicDataSourceTargetSource.getOperation());
    sb.append(" to ");
    sb.append(operation);
    sb.append(" for ");
    sb.append(methodInvocation.toString());
    _log.debug(sb.toString());
  }
  _dynamicDataSourceTargetSource.setOperation(operation);
  _dynamicDataSourceTargetSource.pushMethod(targetClass.getName().concat(StringPool.PERIOD).concat(targetMethod.getName()));
  return null;
}

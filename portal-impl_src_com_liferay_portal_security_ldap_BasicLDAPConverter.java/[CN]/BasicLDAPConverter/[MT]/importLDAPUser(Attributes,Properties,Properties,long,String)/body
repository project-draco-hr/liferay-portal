{
  boolean autoPassword=false;
  boolean updatePassword=true;
  if (password.equals(StringPool.BLANK)) {
    autoPassword=true;
    updatePassword=false;
  }
  long creatorUserId=0;
  boolean passwordReset=false;
  boolean autoScreenName=false;
  String screenName=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_SCREEN_NAME)).toLowerCase();
  String emailAddress=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_EMAIL_ADDRESS));
  String openId=StringPool.BLANK;
  Locale locale=LocaleUtil.getDefault();
  String firstName=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_FIRST_NAME));
  String middleName=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_MIDDLE_NAME));
  String lastName=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_LAST_NAME));
  int prefixId=0;
  int suffixId=0;
  boolean male=true;
  int birthdayMonth=Calendar.JANUARY;
  int birthdayDay=1;
  int birthdayYear=1970;
  String jobTitle=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_JOB_TITLE));
  long[] groupIds=null;
  long[] organizationIds=null;
  long[] roleIds=null;
  List<UserGroupRole> userGroupRoles=null;
  long[] userGroupIds=null;
  boolean sendEmail=false;
  if (Validator.isNull(firstName) || Validator.isNull(lastName)) {
    String fullName=LDAPUtil.getAttributeValue(attributes,userMappings.getProperty(LDAPConverterKeys.USER_FULL_NAME));
    String[] names=LDAPUtil.splitFullName(fullName);
    firstName=names[0];
    middleName=names[1];
    lastName=names[2];
  }
  if (Validator.isNull(screenName) || Validator.isNull(emailAddress)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Cannot add user because screen name and email address " + "are required");
    }
    return null;
  }
  User user=new UserImpl();
  Contact contact=new ContactImpl();
  user.setCompanyId(companyId);
  user.setPasswordUnencrypted(password);
  user.setScreenName(screenName);
  user.setEmailAddress(emailAddress);
  user.setOpenId(openId);
  user.setLanguageId(locale.getLanguage());
  user.setFirstName(firstName);
  user.setMiddleName(middleName);
  user.setLastName(lastName);
  user.setJobTitle(jobTitle);
  contact.setMale(male);
  contact.setBirthday(CalendarFactoryUtil.getCalendar(birthdayYear,birthdayMonth,birthdayDay).getTime());
  contact.setSuffixId(suffixId);
  contact.setPrefixId(prefixId);
  Map<String,String> expandoData=new HashMap<String,String>();
  for (  Object expandoMappingName : customMappings.keySet()) {
    String attribute=LDAPUtil.getAttributeValue(attributes,customMappings.getProperty((String)expandoMappingName));
    if (Validator.isNotNull(attribute)) {
      expandoData.put((String)expandoMappingName,attribute);
    }
  }
  return new LDAPUserHolder(user,contact,expandoData,new ServiceContext(),autoPassword,updatePassword,creatorUserId,passwordReset,autoScreenName,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,sendEmail);
}

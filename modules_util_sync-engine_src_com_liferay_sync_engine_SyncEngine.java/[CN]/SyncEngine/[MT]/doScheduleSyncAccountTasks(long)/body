{
  if (!_running) {
    return;
  }
  SyncAccount syncAccount=ServerEventUtil.synchronizeSyncAccount(syncAccountId);
  syncAccount.setState(SyncAccount.STATE_CONNECTED);
  syncAccount.setUiEvent(SyncAccount.UI_EVENT_NONE);
  SyncAccountService.update(syncAccount);
  Path syncAccountFilePath=Paths.get(syncAccount.getFilePathName());
  SyncFile syncFile=SyncFileService.fetchSyncFile(syncAccount.getFilePathName());
  if (!FileKeyUtil.hasFileKey(syncAccountFilePath,syncFile.getSyncFileId())) {
    if (_logger.isTraceEnabled()) {
      _logger.trace("Missing sync account file path {}",syncAccountFilePath);
    }
    syncAccount.setActive(false);
    syncAccount.setUiEvent(SyncAccount.UI_EVENT_SYNC_ACCOUNT_FOLDER_MISSING);
    SyncAccountService.update(syncAccount);
    return;
  }
 else   if (!syncAccount.isActive()) {
    SyncAccountService.activateSyncAccount(syncAccountId,false);
    return;
  }
  List<SyncSite> syncSites=SyncSiteService.findSyncSites(syncAccountId);
  for (  SyncSite syncSite : syncSites) {
    if (!syncSite.isActive() || (syncSite.getRemoteSyncTime() == -1)) {
      continue;
    }
    Path syncSiteFilePath=Paths.get(syncSite.getFilePathName());
    if (Files.notExists(syncSiteFilePath)) {
      if (_logger.isTraceEnabled()) {
        _logger.trace("Missing sync site file path {}",syncSiteFilePath);
      }
      syncSite.setUiEvent(SyncSite.UI_EVENT_SYNC_SITE_FOLDER_MISSING);
      SyncSiteService.update(syncSite);
      SyncSiteService.deactivateSyncSite(syncSite.getSyncSiteId());
    }
  }
  SyncWatchEventService.deleteSyncWatchEvents(syncAccountId);
  Path dataFilePath=FileUtil.getFilePath(syncAccount.getFilePathName(),".data");
  if (Files.exists(dataFilePath)) {
    FileUtils.cleanDirectory(dataFilePath.toFile());
  }
  if (!ConnectionRetryUtil.retryInProgress(syncAccountId)) {
    ServerEventUtil.synchronizeSyncSites(syncAccountId);
  }
  SyncWatchEventProcessor syncWatchEventProcessor=new SyncWatchEventProcessor(syncAccountId);
  ScheduledFuture<?> scheduledFuture=_localEventsScheduledExecutorService.scheduleWithFixedDelay(syncWatchEventProcessor,0,3,TimeUnit.SECONDS);
  WatchEventListener watchEventListener=new SyncSiteWatchEventListener(syncAccountId);
  Watcher watcher=null;
  if (OSDetector.isApple()) {
    watcher=new BarbaryWatcher(syncAccountFilePath,watchEventListener);
  }
 else {
    watcher=new JPathWatcher(syncAccountFilePath,watchEventListener);
  }
  _executorService.execute(watcher);
  if (!ConnectionRetryUtil.retryInProgress(syncAccountId)) {
    synchronizeSyncFiles(syncAccountFilePath,syncAccountId);
  }
  scheduleGetSyncDLObjectUpdateEvent(syncAccount,syncWatchEventProcessor,scheduledFuture,watcher);
}

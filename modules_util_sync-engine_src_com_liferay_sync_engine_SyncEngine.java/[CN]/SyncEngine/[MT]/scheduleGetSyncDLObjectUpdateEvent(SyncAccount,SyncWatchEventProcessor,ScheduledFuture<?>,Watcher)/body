{
  Runnable runnable=new Runnable(){
    @Override public void run(){
      try {
        doRun();
      }
 catch (      Exception e) {
        _logger.error(e.getMessage(),e);
      }
    }
    protected void doRun(){
      SyncAccount updatedSyncAccount=SyncAccountService.fetchSyncAccount(syncAccount.getSyncAccountId());
      if ((updatedSyncAccount.getState() != SyncAccount.STATE_CONNECTED) || syncWatchEventProcessor.isInProgress()) {
        return;
      }
      Set<Long> syncSiteIds=SyncSiteService.getActiveSyncSiteIds(syncAccount.getSyncAccountId());
      for (      long syncSiteId : new HashSet<Long>(syncSiteIds)) {
        SyncSite syncSite=SyncSiteService.fetchSyncSite(syncSiteId);
        if (syncSite.getState() == SyncSite.STATE_IN_PROGRESS) {
          continue;
        }
        FileEventUtil.getUpdates(syncSite.getGroupId(),syncAccount.getSyncAccountId(),syncSite);
      }
      BatchDownloadEvent batchDownloadEvent=BatchEventManager.getBatchDownloadEvent(syncAccount.getSyncAccountId());
      batchDownloadEvent.fireBatchEvent();
    }
  }
;
  ScheduledFuture<?> remoteEventsScheduledFuture=_remoteEventsScheduledExecutorService.scheduleWithFixedDelay(runnable,0,syncAccount.getPollInterval(),TimeUnit.SECONDS);
  _syncAccountTasks.put(syncAccount.getSyncAccountId(),new Object[]{watcher,localEventsScheduledFuture,remoteEventsScheduledFuture});
}

{
  _myFacesPortlet=false;
  _sunFacesPortlet=false;
  if (!facesXML.exists()) {
    return;
  }
  Document document=SAXReaderUtil.read(portletXML,true);
  Element rootElement=document.getRootElement();
  List<Element> portletElements=rootElement.elements("portlet");
  for (  Element portletElement : portletElements) {
    String portletClass=portletElement.elementText("portlet-class");
    if (portletClass.equals(JSF_MYFACES)) {
      _myFacesPortlet=true;
      break;
    }
 else     if (portletClass.equals(JSF_SUN)) {
      _sunFacesPortlet=true;
      break;
    }
  }
  document=SAXReaderUtil.read(facesXML,true);
  rootElement=document.getRootElement();
  Element factoryElement=rootElement.element("factory");
  Element renderKitFactoryElement=null;
  Element facesContextFactoryElement=null;
  if (factoryElement == null) {
    factoryElement=rootElement.addElement("factory");
  }
  renderKitFactoryElement=factoryElement.element("render-kit-factory");
  facesContextFactoryElement=factoryElement.element("faces-context-factory");
  if (appServerType.equals("orion") && _sunFacesPortlet && (renderKitFactoryElement == null)) {
    renderKitFactoryElement=factoryElement.addElement("render-kit-factory");
    renderKitFactoryElement.addText(LIFERAY_RENDER_KIT_FACTORY);
  }
 else   if (_myFacesPortlet && (facesContextFactoryElement == null)) {
    facesContextFactoryElement=factoryElement.addElement("faces-context-factory");
    facesContextFactoryElement.addText(MYFACES_CONTEXT_FACTORY);
  }
  if (!appServerType.equals("orion") && _sunFacesPortlet) {
    factoryElement.detach();
  }
  XMLMerger xmlMerger=new XMLMerger(new FacesXMLDescriptor());
  DocumentImpl documentImpl=(DocumentImpl)document;
  xmlMerger.organizeXML(documentImpl.getWrappedDocument());
  FileUtil.write(facesXML,document.formattedString(),true);
}

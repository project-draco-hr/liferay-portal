{
  long classNameId=PortalUtil.getClassNameId(IGImage.class.getName());
  DetachedCriteria entriesWithTagsAssets=DetachedCriteria.forClass(TagsAssetImpl.class,"tagsAsset");
  entriesWithTagsAssets=entriesWithTagsAssets.add(Property.forName("tagsAsset.classNameId").eq(new Long(classNameId)));
  entriesWithTagsAssets=entriesWithTagsAssets.setProjection(Property.forName("tagsAsset.classPK"));
  DetachedCriteria entriesWithoutTagsAssets=DetachedCriteria.forClass(IGImageImpl.class,"igImage");
  entriesWithoutTagsAssets=entriesWithoutTagsAssets.add(Restrictions.not(Subqueries.propertyIn("igImage.imageId",entriesWithTagsAssets)));
  DynamicQueryInitializer dqi=new DynamicQueryInitializerImpl(entriesWithoutTagsAssets);
  List images=IGImageLocalServiceUtil.dynamicQuery(dqi);
  if (_log.isDebugEnabled()) {
    _log.debug("Processing " + images.size() + " images with no tags assets");
  }
  for (int i=0; i < images.size(); i++) {
    IGImage image=(IGImage)images.get(i);
    IGImageLocalServiceUtil.updateTagsAsset(image,new String[0]);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Tags assets verified for images");
  }
}

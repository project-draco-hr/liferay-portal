{
  InitUtil.initWithSpring();
  FileUtil.deltree(PropsValues.LIFERAY_HOME + "/data");
  try {
    JCRFactoryUtil.prepare();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    DBUpgrader.upgrade();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  MessageBus messageBus=(MessageBus)PortalBeanLocatorUtil.locate(MessageBus.class.getName());
  MessageSender messageSender=(MessageSender)PortalBeanLocatorUtil.locate(MessageSender.class.getName());
  SynchronousMessageSender synchronousMessageSender=(SynchronousMessageSender)PortalBeanLocatorUtil.locate(SynchronousMessageSender.class.getName());
  MessageBusUtil.init(messageBus,messageSender,synchronousMessageSender);
  SchedulerEngine schedulerEngine=(SchedulerEngine)PortalBeanLocatorUtil.locate(SchedulerEngine.class.getName());
  SchedulerEngineUtil.init(new SchedulerEngineProxy());
  try {
    schedulerEngine.start();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    DBUpgrader.verify();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    _checkResourceActions();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  IndexerRegistryUtil.register(new UserIndexer());
  IndexerRegistryUtil.register(new BookmarksIndexer());
  IndexerRegistryUtil.register(new DLIndexer());
  IndexerRegistryUtil.register(new IGIndexer());
  IndexerRegistryUtil.register(new MBIndexer());
  WorkflowHandlerRegistryUtil.register(new DLFileEntryWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new JournalArticleWorkflowHandler());
  try {
    CompanyLocalServiceUtil.checkCompany(TestPropsValues.COMPANY_WEB_ID);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

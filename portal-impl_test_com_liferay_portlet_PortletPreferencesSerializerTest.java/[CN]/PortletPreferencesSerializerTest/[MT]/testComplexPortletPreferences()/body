{
  PortletPreferencesImpl preferences=new PortletPreferencesImpl();
  preferences.setValue("","");
  preferences.setValues("name1",new String[0]);
  preferences.setValues("name2",new String[]{"","value1"});
  preferences.getPreferences().put("name3",new Preference("name3",new String[]{"value2","value3"},true));
  String resultXML=PortletPreferencesSerializer.toXML(preferences);
  PortletPreferencesImpl resultPreferences=(PortletPreferencesImpl)PortletPreferencesSerializer.fromDefaultXML(resultXML);
  Map<String,Preference> preferenceMap=resultPreferences.getPreferences();
  assertEquals(4,preferenceMap.size());
  Preference blankPreference=preferenceMap.get("");
  assertNotNull(blankPreference);
  assertEquals("",blankPreference.getName());
  String[] values=blankPreference.getValues();
  assertEquals(1,values.length);
  assertEquals("",values[0]);
  assertFalse(blankPreference.isReadOnly());
  Preference emptyPreference=preferenceMap.get("name1");
  assertNotNull(emptyPreference);
  assertEquals("name1",emptyPreference.getName());
  values=emptyPreference.getValues();
  assertEquals(0,values.length);
  assertFalse(emptyPreference.isReadOnly());
  Preference twoValuesPreference=preferenceMap.get("name2");
  assertNotNull(twoValuesPreference);
  assertEquals("name2",twoValuesPreference.getName());
  values=twoValuesPreference.getValues();
  assertEquals(2,values.length);
  assertEquals("",values[0]);
  assertEquals("value1",values[1]);
  assertFalse(twoValuesPreference.isReadOnly());
  Preference readOnlyPreference=preferenceMap.get("name3");
  assertNotNull(readOnlyPreference);
  assertEquals("name3",readOnlyPreference.getName());
  values=readOnlyPreference.getValues();
  assertEquals(2,values.length);
  assertEquals("value2",values[0]);
  assertEquals("value3",values[1]);
  assertTrue(readOnlyPreference.isReadOnly());
}

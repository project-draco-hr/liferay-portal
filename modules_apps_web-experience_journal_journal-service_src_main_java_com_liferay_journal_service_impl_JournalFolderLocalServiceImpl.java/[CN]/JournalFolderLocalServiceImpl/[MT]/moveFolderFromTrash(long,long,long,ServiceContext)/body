{
  JournalFolder folder=journalFolderPersistence.findByPrimaryKey(folderId);
  if (!folder.isInTrash()) {
    throw new RestoreEntryException(RestoreEntryException.INVALID_STATUS);
  }
  if (folder.isInTrashExplicitly()) {
    restoreFolderFromTrash(userId,folderId);
  }
 else {
    TrashVersion trashVersion=trashVersionLocalService.fetchVersion(JournalFolder.class.getName(),folderId);
    int status=WorkflowConstants.STATUS_APPROVED;
    if (trashVersion != null) {
      status=trashVersion.getStatus();
    }
    updateStatus(userId,folder,status);
    if (trashVersion != null) {
      trashVersionLocalService.deleteTrashVersion(trashVersion);
    }
    List<Object> foldersAndArticles=journalFolderLocalService.getFoldersAndArticles(folder.getGroupId(),folder.getFolderId(),WorkflowConstants.STATUS_IN_TRASH);
    restoreDependentsFromTrash(foldersAndArticles);
  }
  folder=journalFolderLocalService.moveFolder(folderId,parentFolderId,serviceContext);
  Indexer<JournalFolder> indexer=IndexerRegistryUtil.nullSafeGetIndexer(JournalFolder.class);
  indexer.reindex(folder);
  return folder;
}

{
  fileName=fileName.replace(CharPool.BACK_SLASH,CharPool.FORWARD_SLASH);
  if (!fileName.contains("docroot") || fileName.endsWith("init-ext.jsp")) {
    return content;
  }
  Matcher matcher=_jspImportPattern.matcher(content);
  if (!matcher.find()) {
    return content;
  }
  String imports=matcher.group();
  imports=StringUtil.replace(imports,new String[]{"%><%@\r\n","%><%@\n"},new String[]{"%>\r\n<%@ ","%>\n<%@ "});
  if (!fileName.endsWith("html/common/init.jsp") && !fileName.endsWith("html/portal/init.jsp")) {
    List<String> importLines=new ArrayList<String>();
    UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(imports));
    String line=null;
    while ((line=unsyncBufferedReader.readLine()) != null) {
      if (line.contains("import=")) {
        importLines.add(line);
      }
    }
    List<String> unneededImports=getJSPDuplicateImports(fileName,content,importLines);
    addJSPUnusedImports(fileName,importLines,unneededImports);
    for (    String unneededImport : unneededImports) {
      imports=StringUtil.replace(imports,unneededImport,StringPool.BLANK);
    }
  }
  imports=new JSPImportsFormatter().format(imports);
  String beforeImports=content.substring(0,matcher.start());
  if (Validator.isNull(imports)) {
    beforeImports=StringUtil.replaceLast(beforeImports,"\n",StringPool.BLANK);
  }
  String afterImports=content.substring(matcher.end());
  if (Validator.isNull(afterImports)) {
    imports=StringUtil.replaceLast(imports,"\n",StringPool.BLANK);
    content=beforeImports + imports;
    return content;
  }
  content=beforeImports + imports + "\n"+ afterImports;
  return content;
}

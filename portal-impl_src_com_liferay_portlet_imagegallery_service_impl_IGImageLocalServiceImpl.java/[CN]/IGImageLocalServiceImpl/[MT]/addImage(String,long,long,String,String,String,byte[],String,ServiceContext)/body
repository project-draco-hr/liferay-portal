{
  try {
    String extension=FileUtil.getExtension(fileName);
    if (Validator.isNotNull(name) && StringUtil.endsWith(name,extension)) {
      name=FileUtil.stripExtension(name);
    }
    String nameWithExtension=name + StringPool.PERIOD + extension;
    validate(folderId,nameWithExtension,fileName,bytes);
    User user=userPersistence.findByPrimaryKey(userId);
    IGFolder folder=igFolderPersistence.findByPrimaryKey(folderId);
    RenderedImage renderedImage=ImageProcessorUtil.read(bytes).getRenderedImage();
    Date now=new Date();
    long imageId=counterLocalService.increment();
    if (Validator.isNull(name)) {
      name=String.valueOf(imageId);
    }
    IGImage image=igImagePersistence.create(imageId);
    image.setUuid(uuid);
    image.setCompanyId(user.getCompanyId());
    image.setUserId(user.getUserId());
    image.setCreateDate(now);
    image.setModifiedDate(now);
    image.setFolderId(folderId);
    image.setName(name);
    image.setDescription(description);
    image.setSmallImageId(counterLocalService.increment());
    image.setLargeImageId(counterLocalService.increment());
    if (PropsValues.IG_IMAGE_CUSTOM_1_MAX_DIMENSION > 0) {
      image.setCustom1ImageId(counterLocalService.increment());
    }
    if (PropsValues.IG_IMAGE_CUSTOM_2_MAX_DIMENSION > 0) {
      image.setCustom2ImageId(counterLocalService.increment());
    }
    igImagePersistence.update(image,false);
    saveImages(image.getLargeImageId(),renderedImage,image.getSmallImageId(),image.getCustom1ImageId(),image.getCustom2ImageId(),bytes,contentType);
    if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
      addImageResources(folder,image,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
    }
 else {
      addImageResources(folder,image,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
    }
    ExpandoBridge expandoBridge=image.getExpandoBridge();
    expandoBridge.setAttributes(serviceContext);
    updateTagsAsset(userId,image,serviceContext.getTagsEntries());
    try {
      Indexer.addImage(image.getCompanyId(),folder.getGroupId(),folderId,imageId,name,description,image.getModifiedDate(),serviceContext.getTagsEntries(),image.getExpandoBridge());
    }
 catch (    SearchException se) {
      _log.error("Indexing " + imageId,se);
    }
    return image;
  }
 catch (  IOException ioe) {
    throw new ImageSizeException(ioe);
  }
}

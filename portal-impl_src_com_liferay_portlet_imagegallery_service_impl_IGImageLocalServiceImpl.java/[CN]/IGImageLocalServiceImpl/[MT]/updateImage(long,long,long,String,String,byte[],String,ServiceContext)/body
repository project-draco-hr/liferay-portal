{
  try {
    IGImage image=igImagePersistence.findByPrimaryKey(imageId);
    IGFolder folder=getFolder(image,folderId);
    RenderedImage renderedImage=null;
    if (bytes != null) {
      renderedImage=ImageProcessorUtil.read(bytes).getRenderedImage();
      validate(bytes);
    }
    if (Validator.isNotNull(name) && !name.equals(image.getName())) {
      String nameWithExtension=IGImageImpl.getNameWithExtension(name,image.getImageType());
      validate(folderId,nameWithExtension);
    }
 else {
      name=image.getName();
    }
    image.setModifiedDate(new Date());
    image.setFolderId(folder.getFolderId());
    image.setName(name);
    image.setDescription(description);
    igImagePersistence.update(image,false);
    if (renderedImage != null) {
      saveImages(image.getLargeImageId(),renderedImage,image.getSmallImageId(),image.getCustom1ImageId(),image.getCustom2ImageId(),bytes,contentType);
    }
    long[] assetCategoryIds=serviceContext.getAssetCategoryIds();
    String[] assetTagNames=serviceContext.getAssetTagNames();
    updateAsset(userId,image,assetCategoryIds,assetTagNames);
    ExpandoBridge expandoBridge=image.getExpandoBridge();
    expandoBridge.setAttributes(serviceContext);
    reIndex(image);
    return image;
  }
 catch (  IOException ioe) {
    throw new ImageSizeException(ioe);
  }
}

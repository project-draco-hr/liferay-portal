{
  recentLayoutRevision=toUnwrappedModel(recentLayoutRevision);
  boolean isNew=recentLayoutRevision.isNew();
  RecentLayoutRevisionModelImpl recentLayoutRevisionModelImpl=(RecentLayoutRevisionModelImpl)recentLayoutRevision;
  Session session=null;
  try {
    session=openSession();
    if (recentLayoutRevision.isNew()) {
      session.save(recentLayoutRevision);
      recentLayoutRevision.setNew(false);
    }
 else {
      recentLayoutRevision=(RecentLayoutRevision)session.merge(recentLayoutRevision);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !RecentLayoutRevisionModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((recentLayoutRevisionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{recentLayoutRevisionModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{recentLayoutRevisionModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((recentLayoutRevisionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{recentLayoutRevisionModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{recentLayoutRevisionModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((recentLayoutRevisionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTREVISIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{recentLayoutRevisionModelImpl.getOriginalLayoutRevisionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTREVISIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTREVISIONID,args);
      args=new Object[]{recentLayoutRevisionModelImpl.getLayoutRevisionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTREVISIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTREVISIONID,args);
    }
  }
  entityCache.putResult(RecentLayoutRevisionModelImpl.ENTITY_CACHE_ENABLED,RecentLayoutRevisionImpl.class,recentLayoutRevision.getPrimaryKey(),recentLayoutRevision,false);
  clearUniqueFindersCache(recentLayoutRevisionModelImpl);
  cacheUniqueFindersCache(recentLayoutRevisionModelImpl,isNew);
  recentLayoutRevision.resetOriginalValues();
  return recentLayoutRevision;
}

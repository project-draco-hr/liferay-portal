{
  Object[] finderArgs=new Object[]{userId,layoutSetBranchId,plid};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_U_L_P,finderArgs,this);
  }
  if (result instanceof RecentLayoutRevision) {
    RecentLayoutRevision recentLayoutRevision=(RecentLayoutRevision)result;
    if ((userId != recentLayoutRevision.getUserId()) || (layoutSetBranchId != recentLayoutRevision.getLayoutSetBranchId()) || (plid != recentLayoutRevision.getPlid())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_RECENTLAYOUTREVISION_WHERE);
    query.append(_FINDER_COLUMN_U_L_P_USERID_2);
    query.append(_FINDER_COLUMN_U_L_P_LAYOUTSETBRANCHID_2);
    query.append(_FINDER_COLUMN_U_L_P_PLID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(layoutSetBranchId);
      qPos.add(plid);
      List<RecentLayoutRevision> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_U_L_P,finderArgs,list);
      }
 else {
        RecentLayoutRevision recentLayoutRevision=list.get(0);
        result=recentLayoutRevision;
        cacheResult(recentLayoutRevision);
        if ((recentLayoutRevision.getUserId() != userId) || (recentLayoutRevision.getLayoutSetBranchId() != layoutSetBranchId) || (recentLayoutRevision.getPlid() != plid)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_U_L_P,finderArgs,recentLayoutRevision);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_U_L_P,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (RecentLayoutRevision)result;
  }
}

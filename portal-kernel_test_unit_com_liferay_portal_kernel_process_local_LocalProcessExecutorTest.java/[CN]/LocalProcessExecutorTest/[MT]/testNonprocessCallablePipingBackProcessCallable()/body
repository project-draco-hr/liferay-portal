{
  NonprocessCallablePipingBackProcessCallable nonprocessCallablePipingBackProcessCallable=new NonprocessCallablePipingBackProcessCallable();
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(LocalProcessExecutor.class.getName(),Level.INFO)){
    ProcessChannel<Serializable> processChannel=_localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1),nonprocessCallablePipingBackProcessCallable);
    NoticeableFuture<Serializable> noticeableFuture=processChannel.getProcessNoticeableFuture();
    noticeableFuture.get();
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Received a nonprocess callable piping back string piping " + "back object",logRecord.getMessage());
  }
   try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(LocalProcessExecutor.class.getName(),Level.OFF)){
    ProcessChannel<Serializable> processChannel=_localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1),nonprocessCallablePipingBackProcessCallable);
    NoticeableFuture<Serializable> noticeableFuture=processChannel.getProcessNoticeableFuture();
    noticeableFuture.get();
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertTrue(logRecords.isEmpty());
  }
 }

{
  final AtomicReference<ExecutorService> atomicReference=new AtomicReference<>();
  SyncThrowableThread<Void> syncThrowableThread=new SyncThrowableThread<>(new Callable<Void>(){
    @Override public Void call() throws Exception {
      ExecutorService executorService=_invokeGetThreadPoolExecutor();
      atomicReference.set(executorService);
      return null;
    }
  }
);
  ExecutorService executorService=null;
synchronized (_localProcessExecutor) {
    syncThrowableThread.start();
    while (syncThrowableThread.getState() != Thread.State.BLOCKED)     ;
    executorService=_invokeGetThreadPoolExecutor();
  }
  syncThrowableThread.sync();
  Assert.assertSame(executorService,atomicReference.get());
}

{
  String resourcePath=getClass().getName().replace('.','/').concat(".class");
  String testId="testId";
  URL url=getClass().getClassLoader().getResource(resourcePath);
  URLTemplateResource urlTemplateResource=new URLTemplateResource(testId,url);
  UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
  ObjectOutput objectOutput=new MockObjectOutput(unsyncByteArrayOutputStream);
  urlTemplateResource.writeExternal(objectOutput);
  objectOutput.close();
  byte[] externalizedData=unsyncByteArrayOutputStream.toByteArray();
  DataInputStream dataInputStream=new DataInputStream(new UnsyncByteArrayInputStream(externalizedData));
  Assert.assertEquals(testId,dataInputStream.readUTF());
  Assert.assertEquals(url.toExternalForm(),dataInputStream.readUTF());
  URLTemplateResource newURLTemplateResource=new URLTemplateResource();
  MockObjectInput mockObjectInput=new MockObjectInput(new DataInputStream(new UnsyncByteArrayInputStream(externalizedData)));
  newURLTemplateResource.readExternal(mockObjectInput);
  Assert.assertEquals(testId,newURLTemplateResource.getTemplateId());
  Field templateURLField=ReflectionUtil.getDeclaredField(URLTemplateResource.class,"_templateURL");
  Assert.assertEquals(url,templateURLField.get(newURLTemplateResource));
}

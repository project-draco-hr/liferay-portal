{
  int remindBy=event.getRemindBy();
  if (remindBy == CalEventConstants.REMIND_BY_NONE) {
    return;
  }
  try {
    long ownerId=event.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId=PortletKeys.CALENDAR;
    PortletPreferences preferences=portletPreferencesLocalService.getPreferences(event.getCompanyId(),ownerId,ownerType,plid,portletId);
    Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
    Contact contact=user.getContact();
    String portletName=PortalUtil.getPortletTitle(PortletKeys.CALENDAR,user);
    String fromName=CalUtil.getEmailFromName(preferences,event.getCompanyId());
    String fromAddress=CalUtil.getEmailFromAddress(preferences,event.getCompanyId());
    String toName=user.getFullName();
    String toAddress=user.getEmailAddress();
    if (remindBy == CalEventConstants.REMIND_BY_SMS) {
      toAddress=contact.getSmsSn();
    }
    String subject=CalUtil.getEmailEventReminderSubject(preferences);
    String body=CalUtil.getEmailEventReminderBody(preferences);
    Format dateFormatDateTime=FastDateFormatFactoryUtil.getDateTime(user.getLocale(),user.getTimeZone());
    subject=StringUtil.replace(subject,new String[]{"[$EVENT_LOCATION$]","[$EVENT_START_DATE$]","[$EVENT_TITLE$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{event.getLocation(),dateFormatDateTime.format(startDate.getTime()),event.getTitle(),fromAddress,fromName,company.getPortalURL(event.getGroupId()),portletName,HtmlUtil.escape(toAddress),HtmlUtil.escape(toName)});
    body=StringUtil.replace(body,new String[]{"[$EVENT_LOCATION$]","[$EVENT_START_DATE$]","[$EVENT_TITLE$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{event.getLocation(),dateFormatDateTime.format(startDate.getTime()),event.getTitle(),fromAddress,fromName,company.getPortalURL(event.getGroupId()),portletName,HtmlUtil.escape(toAddress),HtmlUtil.escape(toName)});
    if ((remindBy == CalEventConstants.REMIND_BY_EMAIL) || (remindBy == CalEventConstants.REMIND_BY_SMS)) {
      InternetAddress from=new InternetAddress(fromAddress,fromName);
      InternetAddress to=new InternetAddress(toAddress,toName);
      MailMessage message=new MailMessage(from,to,subject,body,true);
      mailService.sendEmail(message);
    }
 else     if ((remindBy == CalEventConstants.REMIND_BY_AIM) && (Validator.isNotNull(contact.getAimSn()))) {
      AIMConnector.send(contact.getAimSn(),body);
    }
 else     if ((remindBy == CalEventConstants.REMIND_BY_ICQ) && (Validator.isNotNull(contact.getIcqSn()))) {
      ICQConnector.send(contact.getIcqSn(),body);
    }
 else     if ((remindBy == CalEventConstants.REMIND_BY_MSN) && (Validator.isNotNull(contact.getMsnSn()))) {
      MSNConnector.send(contact.getMsnSn(),body);
    }
 else     if ((remindBy == CalEventConstants.REMIND_BY_YM) && (Validator.isNotNull(contact.getYmSn()))) {
      YMConnector.send(contact.getYmSn(),body);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

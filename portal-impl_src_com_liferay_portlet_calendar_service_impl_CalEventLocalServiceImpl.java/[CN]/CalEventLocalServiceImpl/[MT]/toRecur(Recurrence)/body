{
  Recur recur=null;
  int recurrenceType=recurrence.getFrequency();
  int interval=recurrence.getInterval();
  if (recurrenceType == Recurrence.DAILY) {
    recur=new Recur(Recur.DAILY,-1);
    if (interval >= 1) {
      recur.setInterval(interval);
    }
    DayAndPosition[] byDay=recurrence.getByDay();
    for (int i=0; i < byDay.length; i++) {
      WeekDay weekDay=toWeekDay(byDay[i].getDayOfWeek());
      recur.getDayList().add(weekDay);
    }
  }
 else   if (recurrenceType == Recurrence.WEEKLY) {
    recur=new Recur(Recur.WEEKLY,-1);
    recur.setInterval(interval);
    DayAndPosition[] byDay=recurrence.getByDay();
    for (int i=0; i < byDay.length; i++) {
      WeekDay weekDay=toWeekDay(byDay[i].getDayOfWeek());
      recur.getDayList().add(weekDay);
    }
  }
 else   if (recurrenceType == Recurrence.MONTHLY) {
    recur=new Recur(Recur.MONTHLY,-1);
    recur.setInterval(interval);
    int[] byMonthDay=recurrence.getByMonthDay();
    if (byMonthDay != null) {
      Integer monthDay=new Integer(byMonthDay[0]);
      recur.getMonthDayList().add(monthDay);
    }
 else {
      DayAndPosition[] byDay=recurrence.getByDay();
      WeekDay weekDay=toWeekDay(byDay[0].getDayOfWeek());
      recur.getDayList().add(weekDay);
      Integer position=new Integer(byDay[0].getDayPosition());
      recur.getSetPosList().add(position);
    }
  }
 else   if (recurrenceType == Recurrence.YEARLY) {
    recur=new Recur(Recur.YEARLY,-1);
    recur.setInterval(interval);
  }
  Calendar until=recurrence.getUntil();
  if (until != null) {
    DateTime dateTime=new DateTime(until.getTime());
    recur.setUntil(dateTime);
  }
  return recur;
}

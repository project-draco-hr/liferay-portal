{
  Map<String,List<CalEvent>> eventsPool=CalEventLocalUtil.getEventsPool(groupId);
  String key="recurrence";
  List<CalEvent> events=eventsPool.get(key);
  if (events == null) {
    events=calEventPersistence.findByG_T_R(groupId,types,true);
    events=new UnmodifiableList<CalEvent>(events);
    eventsPool.put(key,events);
  }
  if (cal != null) {
    Calendar tzICal=CalendarFactoryUtil.getCalendar(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DATE));
    Iterator<CalEvent> itr=events.iterator();
    while (itr.hasNext()) {
      CalEvent event=itr.next();
      TZSRecurrence recurrence=event.getRecurrenceObj();
      try {
        if ((recurrence.getFrequency() != Recurrence.NO_RECURRENCE) && (recurrence.getInterval() <= 0)) {
          recurrence.setInterval(1);
          event.setRecurrenceObj(recurrence);
          event=calEventPersistence.update(event,false);
          recurrence=event.getRecurrenceObj();
        }
        if (recurrence.isInRecurrence(getRecurrenceCal(cal,tzICal,event))) {
          events.add(event);
        }
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  }
  return events;
}

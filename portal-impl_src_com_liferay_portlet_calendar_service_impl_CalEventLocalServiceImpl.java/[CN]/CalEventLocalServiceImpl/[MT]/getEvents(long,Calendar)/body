{
  Map<String,List<CalEvent>> eventsPool=CalEventLocalUtil.getEventsPool(groupId);
  String key=CalUtil.toString(cal);
  List<CalEvent> events=eventsPool.get(key);
  if (events == null) {
    List<CalEvent> events1=calEventFinder.findByG_SD(groupId,CalendarUtil.getGTDate(cal),CalendarUtil.getLTDate(cal),true);
    Calendar tzICal=CalendarFactoryUtil.getCalendar(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DATE));
    List<CalEvent> events2=calEventFinder.findByG_SD(groupId,CalendarUtil.getGTDate(tzICal),CalendarUtil.getLTDate(tzICal),false);
    events=new ArrayList<CalEvent>();
    events.addAll(events1);
    events.addAll(events2);
    Iterator<CalEvent> itr=getRepeatingEvents(groupId).iterator();
    while (itr.hasNext()) {
      CalEvent event=itr.next();
      TZSRecurrence recurrence=event.getRecurrenceObj();
      try {
        if ((recurrence.getFrequency() != Recurrence.NO_RECURRENCE) && (recurrence.getInterval() <= 0)) {
          recurrence.setInterval(1);
          event.setRecurrenceObj(recurrence);
          event=calEventPersistence.update(event,false);
          recurrence=event.getRecurrenceObj();
        }
        if (recurrence.isInRecurrence(getRecurrenceCal(cal,tzICal,event))) {
          events.add(event);
        }
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
    events=new UnmodifiableList<CalEvent>(events);
    eventsPool.put(key,events);
  }
  return events;
}

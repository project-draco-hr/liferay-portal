{
  User user=userPersistence.findByPrimaryKey(userId);
  Locale locale=null;
  TimeZone timeZone=null;
  if (timeZoneSensitive) {
    locale=user.getLocale();
    timeZone=user.getTimeZone();
  }
 else {
    locale=LocaleUtil.getDefault();
    timeZone=TimeZoneUtil.getTimeZone(StringPool.UTC);
  }
  Calendar startDate=CalendarFactoryUtil.getCalendar(timeZone,locale);
  startDate.set(Calendar.MONTH,startDateMonth);
  startDate.set(Calendar.DATE,startDateDay);
  startDate.set(Calendar.YEAR,startDateYear);
  startDate.set(Calendar.HOUR_OF_DAY,startDateHour);
  startDate.set(Calendar.MINUTE,startDateMinute);
  startDate.set(Calendar.SECOND,0);
  startDate.set(Calendar.MILLISECOND,0);
  if (allDay) {
    startDate.set(Calendar.HOUR_OF_DAY,0);
    startDate.set(Calendar.MINUTE,0);
    durationHour=24;
    durationMinute=0;
  }
  validate(title,startDateMonth,startDateDay,startDateYear,durationHour,durationMinute,allDay,repeating,recurrence);
  CalEvent event=calEventPersistence.findByPrimaryKey(eventId);
  event.setModifiedDate(serviceContext.getModifiedDate(null));
  event.setTitle(title);
  event.setDescription(description);
  event.setLocation(location);
  event.setStartDate(startDate.getTime());
  event.setEndDate(getEndDate(recurrence));
  event.setDurationHour(durationHour);
  event.setDurationMinute(durationMinute);
  event.setAllDay(allDay);
  event.setTimeZoneSensitive(timeZoneSensitive);
  event.setType(type);
  event.setRepeating(repeating);
  event.setRecurrenceObj(recurrence);
  event.setRemindBy(remindBy);
  event.setFirstReminder(firstReminder);
  event.setSecondReminder(secondReminder);
  event.setExpandoBridgeAttributes(serviceContext);
  calEventPersistence.update(event);
  updateAsset(userId,event,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds());
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",event.getTitle());
  socialActivityLocalService.addActivity(userId,event.getGroupId(),CalEvent.class.getName(),eventId,CalendarActivityKeys.UPDATE_EVENT,extraDataJSONObject.toString(),0);
  CalEventLocalUtil.clearEventsPool(event.getGroupId());
  return event;
}

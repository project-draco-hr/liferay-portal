{
  if (Validator.isNull(title)) {
    throw new EventTitleException("Title is null");
  }
  if (!Validator.isDate(startDateMonth,startDateDay,startDateYear)) {
    StringBundler sb=new StringBundler(9);
    sb.append("Invalid date for {title=");
    sb.append(title);
    sb.append(", startDateMonth=");
    sb.append(startDateMonth);
    sb.append(", startDateDay=");
    sb.append(startDateDay);
    sb.append(", startDateYear=");
    sb.append(startDateYear);
    sb.append(StringPool.CLOSE_BRACKET);
    throw new EventStartDateException(sb.toString());
  }
  if (!allDay && (durationHour <= 0) && (durationMinute <= 0)) {
    StringBundler sb=new StringBundler(7);
    sb.append("Invalid date for {title=");
    sb.append(title);
    sb.append(", durationHour=");
    sb.append(durationHour);
    sb.append(", durationMinute=");
    sb.append(durationMinute);
    sb.append(StringPool.CLOSE_BRACKET);
    throw new EventDurationException(sb.toString());
  }
  Calendar startDate=CalendarFactoryUtil.getCalendar(startDateYear,startDateMonth,startDateDay);
  if (repeating) {
    Calendar until=recurrence.getUntil();
    if ((until != null) && startDate.after(until)) {
      StringBundler sb=new StringBundler(4);
      sb.append("Start date time ");
      sb.append(startDate.getTimeInMillis());
      sb.append(" must be before recurrence end date time ");
      sb.append(until.getTimeInMillis());
      throw new EventEndDateException(sb.toString());
    }
  }
}

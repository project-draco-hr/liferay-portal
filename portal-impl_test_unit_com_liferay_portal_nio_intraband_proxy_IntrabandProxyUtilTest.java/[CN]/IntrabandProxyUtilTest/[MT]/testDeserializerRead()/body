{
  MethodNode methodNode=new MethodNode(Opcodes.ACC_PUBLIC,"name","()V",null,null);
  MethodNodeGenerator methodNodeGenerator=new MethodNodeGenerator(methodNode);
  InsnList insnList=methodNode.instructions;
  for (  Type type : _types) {
    IntrabandProxyUtil.deserializerRead(methodNodeGenerator,type);
    AbstractInsnNode abstractInsnNode=insnList.getLast();
    String methodName="readObject";
    Type returnType=Type.getType(Serializable.class);
    if (type.getSort() <= Type.DOUBLE) {
      String name=TextFormatter.format(type.getClassName(),TextFormatter.G);
      methodName="read".concat(name);
      returnType=type;
    }
 else     if (type.equals(Type.getType(String.class))) {
      methodName="readString";
      returnType=Type.getType(String.class);
      _assertMethodInsnNode(abstractInsnNode,Opcodes.INVOKEVIRTUAL,Type.getInternalName(Deserializer.class),"readString",Type.getType(String.class));
    }
    _assertMethodInsnNode(abstractInsnNode,Opcodes.INVOKEVIRTUAL,Type.getInternalName(Deserializer.class),methodName,returnType);
  }
}

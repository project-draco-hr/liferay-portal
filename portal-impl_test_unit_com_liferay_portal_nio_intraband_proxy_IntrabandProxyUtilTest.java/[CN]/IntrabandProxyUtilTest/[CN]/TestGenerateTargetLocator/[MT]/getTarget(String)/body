{
  _id=id;
  return ProxyUtil.newProxyInstance(_classLoader,new Class<?>[]{_clazz},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args){
      Class<?>[] parameterTypes=method.getParameterTypes();
      for (int i=0; i < args.length; i++) {
        Assert.assertEquals(_sampleValueMap.get(parameterTypes[i]),args[i]);
      }
      return _sampleValueMap.get(method.getReturnType());
    }
  }
);
}

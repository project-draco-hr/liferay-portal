{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  long id=counterLocalService.increment();
  TasksReview review=tasksReviewPersistence.create(id);
  review.setGroupId(groupId);
  review.setCompanyId(user.getCompanyId());
  review.setUserId(user.getUserId());
  review.setUserName(user.getFullName());
  review.setCreateDate(now);
  review.setModifiedDate(now);
  review.setAssigningUserId(assigningUserId);
  review.setAssigningUserName(assigningUserName);
  review.setProposalId(proposalId);
  review.setStage(stage);
  review.setCompleted(false);
  review.setRejected(false);
  tasksReviewPersistence.update(review);
  if ((addCommunityPermissions != null) && (addGuestPermissions != null)) {
    addReviewResources(review,addCommunityPermissions.booleanValue(),addGuestPermissions.booleanValue());
  }
 else {
    addReviewResources(review,communityPermissions,guestPermissions);
  }
  JSONObject extraData=new JSONObject();
  extraData.put("stage",review.getStage());
  extraData.put("completed",review.getCompleted());
  extraData.put("rejected",review.getRejected());
  activityTrackerLocalService.addActivityTracker(assigningUserId,groupId,TasksProposal.class.getName(),review.getProposalId(),TasksActivityKeys.ASSIGN,extraData.toString(),user.getUserId());
  return review;
}

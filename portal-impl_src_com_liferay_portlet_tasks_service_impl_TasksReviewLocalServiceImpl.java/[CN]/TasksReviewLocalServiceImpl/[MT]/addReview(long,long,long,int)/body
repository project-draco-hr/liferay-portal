{
  User user=userPersistence.findByPrimaryKey(userId);
  TasksProposal proposal=tasksProposalPersistence.findByPrimaryKey(proposalId);
  User assignedByUser=userPersistence.findByPrimaryKey(assignedByUserId);
  Date now=new Date();
  long reviewId=counterLocalService.increment();
  TasksReview review=tasksReviewPersistence.create(reviewId);
  review.setGroupId(proposal.getGroupId());
  review.setCompanyId(user.getCompanyId());
  review.setUserId(user.getUserId());
  review.setUserName(user.getFullName());
  review.setCreateDate(now);
  review.setModifiedDate(now);
  review.setProposalId(proposalId);
  review.setAssignedByUserId(assignedByUserId);
  review.setAssignedByUserName(assignedByUser.getFullName());
  review.setStage(stage);
  review.setCompleted(false);
  review.setRejected(false);
  tasksReviewPersistence.update(review,false);
  JSONObject extraData=new JSONObject();
  JSONUtil.put(extraData,"stage",review.getStage());
  JSONUtil.put(extraData,"completed",review.getCompleted());
  JSONUtil.put(extraData,"rejected",review.getRejected());
  socialActivityLocalService.addActivity(assignedByUserId,proposal.getGroupId(),TasksProposal.class.getName(),proposalId,TasksActivityKeys.ASSIGN_PROPOSAL,extraData.toString(),userId);
  return review;
}

{
  String namespace=mimeResponse.getNamespace();
  DocUtil.add(requestElement,"portlet-namespace",namespace);
  try {
    PortletURL actionURL=mimeResponse.createActionURL();
    DocUtil.add(requestElement,"action-url",actionURL);
  }
 catch (  IllegalStateException ise) {
    if (_log.isWarnEnabled()) {
      _log.warn(ise.getMessage());
    }
  }
  try {
    PortletURL renderURL=mimeResponse.createRenderURL();
    DocUtil.add(requestElement,"render-url",renderURL);
    try {
      renderURL.setWindowState(LiferayWindowState.EXCLUSIVE);
      DocUtil.add(requestElement,"render-url-exclusive",renderURL);
    }
 catch (    WindowStateException wse) {
    }
    try {
      renderURL.setWindowState(LiferayWindowState.MAXIMIZED);
      DocUtil.add(requestElement,"render-url-maximized",renderURL);
    }
 catch (    WindowStateException wse) {
    }
    try {
      renderURL.setWindowState(LiferayWindowState.MINIMIZED);
      DocUtil.add(requestElement,"render-url-minimized",renderURL);
    }
 catch (    WindowStateException wse) {
    }
    try {
      renderURL.setWindowState(LiferayWindowState.NORMAL);
      DocUtil.add(requestElement,"render-url-normal",renderURL);
    }
 catch (    WindowStateException wse) {
    }
    try {
      renderURL.setWindowState(LiferayWindowState.POP_UP);
      DocUtil.add(requestElement,"render-url-pop-up",renderURL);
    }
 catch (    WindowStateException wse) {
    }
  }
 catch (  IllegalStateException ise) {
    if (_log.isWarnEnabled()) {
      _log.warn(ise.getMessage());
    }
  }
  ResourceURL resourceURL=mimeResponse.createResourceURL();
  String resourceURLString=HttpUtil.removeParameter(resourceURL.toString(),namespace + "struts_action");
  resourceURLString=HttpUtil.removeParameter(resourceURLString,namespace + "redirect");
  DocUtil.add(requestElement,"resource-url",resourceURLString);
}

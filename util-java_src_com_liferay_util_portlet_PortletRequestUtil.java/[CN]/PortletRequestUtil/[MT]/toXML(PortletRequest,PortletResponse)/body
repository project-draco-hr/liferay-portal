{
  String xml=null;
  Document doc=SAXReaderUtil.createDocument();
  Element reqEl=doc.addElement("request");
  DocUtil.add(reqEl,"container-type","portlet");
  DocUtil.add(reqEl,"container-namespace",portletRequest.getContextPath());
  DocUtil.add(reqEl,"content-type",portletRequest.getResponseContentType());
  DocUtil.add(reqEl,"server-name",portletRequest.getServerName());
  DocUtil.add(reqEl,"server-port",portletRequest.getServerPort());
  DocUtil.add(reqEl,"secure",portletRequest.isSecure());
  DocUtil.add(reqEl,"auth-type",portletRequest.getAuthType());
  DocUtil.add(reqEl,"remote-user",portletRequest.getRemoteUser());
  DocUtil.add(reqEl,"context-path",portletRequest.getContextPath());
  DocUtil.add(reqEl,"locale",portletRequest.getLocale());
  DocUtil.add(reqEl,"portlet-mode",portletRequest.getPortletMode());
  DocUtil.add(reqEl,"portlet-session-id",portletRequest.getRequestedSessionId());
  DocUtil.add(reqEl,"scheme",portletRequest.getScheme());
  DocUtil.add(reqEl,"window-state",portletRequest.getWindowState());
  if (portletRequest instanceof RenderRequest) {
    DocUtil.add(reqEl,"action",Boolean.FALSE);
  }
 else   if (portletRequest instanceof ActionRequest) {
    DocUtil.add(reqEl,"action",Boolean.TRUE);
  }
  if (portletResponse instanceof RenderResponse) {
    _renderResponseToXML((RenderResponse)portletResponse,reqEl);
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if (themeDisplay != null) {
    Element themeDisplayEl=reqEl.addElement("theme-display");
    _themeDisplayToXML(themeDisplay,themeDisplayEl);
  }
  Element parametersEl=reqEl.addElement("parameters");
  Enumeration<String> enu=portletRequest.getParameterNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    Element parameterEl=parametersEl.addElement("parameter");
    DocUtil.add(parameterEl,"name",name);
    String[] values=portletRequest.getParameterValues(name);
    for (int i=0; i < values.length; i++) {
      DocUtil.add(parameterEl,"value",values[i]);
    }
  }
  Element attributesEl=reqEl.addElement("attributes");
  enu=portletRequest.getAttributeNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    if (!_isValidAttributeName(name)) {
      continue;
    }
    Object value=portletRequest.getAttribute(name);
    if (!_isValidAttributeValue(value)) {
      continue;
    }
    Element attributeEl=attributesEl.addElement("attribute");
    DocUtil.add(attributeEl,"name",name);
    DocUtil.add(attributeEl,"value",String.valueOf(value));
  }
  Element portletSessionEl=reqEl.addElement("portlet-session");
  attributesEl=portletSessionEl.addElement("portlet-attributes");
  PortletSession portletSession=portletRequest.getPortletSession();
  enu=portletSession.getAttributeNames(PortletSession.PORTLET_SCOPE);
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    if (!_isValidAttributeName(name)) {
      continue;
    }
    Object value=portletSession.getAttribute(name,PortletSession.PORTLET_SCOPE);
    if (!_isValidAttributeValue(value)) {
      continue;
    }
    Element attributeEl=attributesEl.addElement("attribute");
    DocUtil.add(attributeEl,"name",name);
    DocUtil.add(attributeEl,"value",String.valueOf(value));
  }
  attributesEl=portletSessionEl.addElement("application-attributes");
  enu=portletSession.getAttributeNames(PortletSession.APPLICATION_SCOPE);
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    if (!_isValidAttributeName(name)) {
      continue;
    }
    Object value=portletSession.getAttribute(name,PortletSession.APPLICATION_SCOPE);
    if (!_isValidAttributeValue(value)) {
      continue;
    }
    Element attributeEl=attributesEl.addElement("attribute");
    DocUtil.add(attributeEl,"name",name);
    DocUtil.add(attributeEl,"value",String.valueOf(value));
  }
  try {
    xml=doc.formattedString();
  }
 catch (  IOException ioe) {
  }
  return xml;
}

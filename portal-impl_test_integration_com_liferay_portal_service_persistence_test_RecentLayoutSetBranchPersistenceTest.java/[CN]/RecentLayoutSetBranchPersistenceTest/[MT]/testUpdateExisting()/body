{
  long pk=RandomTestUtil.nextLong();
  RecentLayoutSetBranch newRecentLayoutSetBranch=_persistence.create(pk);
  newRecentLayoutSetBranch.setMvccVersion(RandomTestUtil.nextLong());
  newRecentLayoutSetBranch.setGroupId(RandomTestUtil.nextLong());
  newRecentLayoutSetBranch.setCompanyId(RandomTestUtil.nextLong());
  newRecentLayoutSetBranch.setUserId(RandomTestUtil.nextLong());
  newRecentLayoutSetBranch.setLayoutSetBranchId(RandomTestUtil.nextLong());
  newRecentLayoutSetBranch.setLayoutSetId(RandomTestUtil.nextLong());
  _recentLayoutSetBranchs.add(_persistence.update(newRecentLayoutSetBranch));
  RecentLayoutSetBranch existingRecentLayoutSetBranch=_persistence.findByPrimaryKey(newRecentLayoutSetBranch.getPrimaryKey());
  Assert.assertEquals(existingRecentLayoutSetBranch.getMvccVersion(),newRecentLayoutSetBranch.getMvccVersion());
  Assert.assertEquals(existingRecentLayoutSetBranch.getRecentLayoutSetBranchId(),newRecentLayoutSetBranch.getRecentLayoutSetBranchId());
  Assert.assertEquals(existingRecentLayoutSetBranch.getGroupId(),newRecentLayoutSetBranch.getGroupId());
  Assert.assertEquals(existingRecentLayoutSetBranch.getCompanyId(),newRecentLayoutSetBranch.getCompanyId());
  Assert.assertEquals(existingRecentLayoutSetBranch.getUserId(),newRecentLayoutSetBranch.getUserId());
  Assert.assertEquals(existingRecentLayoutSetBranch.getLayoutSetBranchId(),newRecentLayoutSetBranch.getLayoutSetBranchId());
  Assert.assertEquals(existingRecentLayoutSetBranch.getLayoutSetId(),newRecentLayoutSetBranch.getLayoutSetId());
}

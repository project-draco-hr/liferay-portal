{
  boolean defaultDatabase=ParamUtil.getBoolean(request,"defaultDatabase",true);
  if (defaultDatabase) {
    return;
  }
  String databaseModel=ParamUtil.getString(request,"databaseType","hsql");
  String databaseName=ParamUtil.getString(request,"databaseName","lportal");
  String driverClassName=null;
  String url=null;
  if ("db2".equals(databaseModel)) {
    driverClassName="com.ibm.db2.jcc.DB2Driver";
    url="jdbc:db2://localhost:50000/" + databaseName + ":deferPrepares=false;fullyMaterializeInputStreams=true;"+ "fullyMaterializeLobData=true;progresssiveLocators=2;"+ "progressiveStreaming=2;";
  }
 else   if ("derby".equals(databaseModel)) {
    driverClassName="org.apache.derby.jdbc.EmbeddedDriver";
    url="jdbc:derby:" + databaseName;
  }
 else   if ("ingres".equals(databaseModel)) {
    driverClassName="com.ingres.jdbc.IngresDriver";
    url="jdbc:ingres://localhost:II7/" + databaseName;
  }
 else   if ("mysql".equals(databaseModel)) {
    driverClassName="com.mysql.jdbc.Driver";
    url="jdbc:mysql://localhost/" + databaseName + "?useUnicode=true&characterEncoding=UTF-8"+ "&useFastDateParsing=false";
  }
 else   if ("oracle".equals(databaseModel)) {
    driverClassName="oracle.jdbc.this.get_driver().OracleDriver";
    url="jdbc:oracle:thin:@localhost:1521:xe";
  }
 else   if ("p6spy".equals(databaseModel)) {
    driverClassName="com.p6spy.engine.spy.P6SpyDriver";
    url="jdbc:mysql://localhost/" + databaseName + "?useUnicode=true&characterEncoding=UTF-8"+ "&useFastDateParsing=false";
  }
 else   if ("postgresql".equals(databaseModel)) {
    driverClassName="org.postgresql.Driver";
    url="jdbc:postgresql://localhost:5432/" + databaseName;
  }
 else   if ("sqlserver".equals(databaseModel)) {
    driverClassName="net.sourceforge.jtds.jdbc.Driver";
    url="jdbc:jtds:sqlserver://localhost/" + databaseName;
  }
 else   if ("sybase".equals(databaseModel)) {
    driverClassName="net.sourceforge.jtds.jdbc.Driver";
    url="jdbc:jtds:sybase://localhost:5000/" + databaseName;
  }
  properties.put(PropsKeys.JDBC_DEFAULT_DRIVER_CLASS_NAME,driverClassName);
  properties.put(PropsKeys.JDBC_DEFAULT_URL,url);
}

{
  RenderedImage renderedImage=null;
  String type=TYPE_NOT_AVAILABLE;
  InputStream is=null;
  FileCacheImageInputStream fcis=null;
  try {
    is=new ByteArrayInputStream(bytes);
    fcis=new FileCacheImageInputStream(is,null);
    Iterator itr=ImageIO.getImageReaders(fcis);
    while (itr.hasNext()) {
      ImageReader reader=(ImageReader)itr.next();
      if (reader instanceof GIFImageReader) {
        type=TYPE_GIF;
      }
 else       if (reader instanceof JPEGImageReader) {
        type=TYPE_JPEG;
      }
 else       if (reader instanceof PNGImageReader) {
        type=TYPE_PNG;
      }
      reader.dispose();
    }
    if (!type.equals(TYPE_NOT_AVAILABLE)) {
      renderedImage=ImageIO.read(fcis);
    }
    if (renderedImage == null) {
      renderedImage=_getRenderedImage("BMP",bytes);
      if (renderedImage != null) {
        type=TYPE_BMP;
      }
    }
    if (renderedImage == null) {
      renderedImage=_getRenderedImage("TIFF",bytes);
      if (renderedImage != null) {
        type=TYPE_TIFF;
      }
    }
    if (renderedImage == null) {
      renderedImage=_getRenderedImage("GIF",bytes);
      if (renderedImage != null) {
        type=TYPE_GIF;
      }
    }
    if (renderedImage == null) {
      renderedImage=_getRenderedImage("JPEG",bytes);
      if (renderedImage != null) {
        type=TYPE_JPEG;
      }
    }
    if (renderedImage == null) {
      renderedImage=_getRenderedImage("PNG",bytes);
      if (renderedImage != null) {
        type=TYPE_PNG;
      }
    }
  }
  finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException ioe) {
        if (_log.isWarnEnabled()) {
          _log.warn(ioe);
        }
      }
    }
    if (fcis != null) {
      try {
        fcis.close();
      }
 catch (      IOException ioe) {
        if (_log.isDebugEnabled()) {
          _log.debug(ioe);
        }
      }
    }
  }
  return new ImageBag(renderedImage,type);
}

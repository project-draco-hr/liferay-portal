{
  sapEntry=toUnwrappedModel(sapEntry);
  boolean isNew=sapEntry.isNew();
  SAPEntryModelImpl sapEntryModelImpl=(SAPEntryModelImpl)sapEntry;
  if (Validator.isNull(sapEntry.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    sapEntry.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (sapEntry.getCreateDate() == null)) {
    if (serviceContext == null) {
      sapEntry.setCreateDate(now);
    }
 else {
      sapEntry.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!sapEntryModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      sapEntry.setModifiedDate(now);
    }
 else {
      sapEntry.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (sapEntry.isNew()) {
      session.save(sapEntry);
      sapEntry.setNew(false);
    }
 else {
      sapEntry=(SAPEntry)session.merge(sapEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !SAPEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((sapEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sapEntryModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{sapEntryModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((sapEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sapEntryModelImpl.getOriginalUuid(),sapEntryModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{sapEntryModelImpl.getUuid(),sapEntryModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((sapEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sapEntryModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{sapEntryModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((sapEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_D.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sapEntryModelImpl.getOriginalCompanyId(),sapEntryModelImpl.getOriginalDefaultSAPEntry()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_D,args);
      args=new Object[]{sapEntryModelImpl.getCompanyId(),sapEntryModelImpl.getDefaultSAPEntry()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_D,args);
    }
  }
  entityCache.putResult(SAPEntryModelImpl.ENTITY_CACHE_ENABLED,SAPEntryImpl.class,sapEntry.getPrimaryKey(),sapEntry,false);
  clearUniqueFindersCache(sapEntryModelImpl);
  cacheUniqueFindersCache(sapEntryModelImpl,isNew);
  sapEntry.resetOriginalValues();
  return sapEntry;
}

{
  emailAddress=toUnwrappedModel(emailAddress);
  boolean isNew=emailAddress.isNew();
  EmailAddressModelImpl emailAddressModelImpl=(EmailAddressModelImpl)emailAddress;
  if (Validator.isNull(emailAddress.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    emailAddress.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (emailAddress.getCreateDate() == null)) {
    if (serviceContext == null) {
      emailAddress.setCreateDate(now);
    }
 else {
      emailAddress.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!emailAddressModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      emailAddress.setModifiedDate(now);
    }
 else {
      emailAddress.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (emailAddress.isNew()) {
      session.save(emailAddress);
      emailAddress.setNew(false);
    }
 else {
      emailAddress=(EmailAddress)session.merge(emailAddress);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !EmailAddressModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{emailAddressModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalUuid(),emailAddressModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{emailAddressModelImpl.getUuid(),emailAddressModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{emailAddressModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{emailAddressModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalCompanyId(),emailAddressModelImpl.getOriginalClassNameId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{emailAddressModelImpl.getCompanyId(),emailAddressModelImpl.getClassNameId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalCompanyId(),emailAddressModelImpl.getOriginalClassNameId(),emailAddressModelImpl.getOriginalClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C,args);
      args=new Object[]{emailAddressModelImpl.getCompanyId(),emailAddressModelImpl.getClassNameId(),emailAddressModelImpl.getClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C,args);
    }
    if ((emailAddressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{emailAddressModelImpl.getOriginalCompanyId(),emailAddressModelImpl.getOriginalClassNameId(),emailAddressModelImpl.getOriginalClassPK(),emailAddressModelImpl.getOriginalPrimary()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_C_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P,args);
      args=new Object[]{emailAddressModelImpl.getCompanyId(),emailAddressModelImpl.getClassNameId(),emailAddressModelImpl.getClassPK(),emailAddressModelImpl.getPrimary()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_C_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P,args);
    }
  }
  entityCache.putResult(EmailAddressModelImpl.ENTITY_CACHE_ENABLED,EmailAddressImpl.class,emailAddress.getPrimaryKey(),emailAddress,false);
  emailAddress.resetOriginalValues();
  return emailAddress;
}

{
  freeMarkerContext.put("request",request);
  PortletConfigImpl portletConfigImpl=(PortletConfigImpl)request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);
  if (portletConfigImpl != null) {
    freeMarkerContext.put("portletConfig",portletConfigImpl);
  }
  final PortletRequest portletRequest=(PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
  if (portletRequest != null) {
    if (portletRequest instanceof RenderRequest) {
      freeMarkerContext.put("renderRequest",portletRequest);
    }
  }
  final PortletResponse portletResponse=(PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  if (portletResponse != null) {
    if (portletResponse instanceof RenderResponse) {
      freeMarkerContext.put("renderResponse",portletResponse);
    }
  }
  if ((portletRequest != null) && (portletResponse != null)) {
    freeMarkerContext.put("xmlRequest",new Object(){
      @Override public String toString(){
        return PortletRequestUtil.toXML(portletRequest,portletResponse);
      }
    }
);
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  if (themeDisplay != null) {
    Theme theme=themeDisplay.getTheme();
    Layout layout=themeDisplay.getLayout();
    List<Layout> layouts=themeDisplay.getLayouts();
    freeMarkerContext.put("themeDisplay",themeDisplay);
    freeMarkerContext.put("company",themeDisplay.getCompany());
    freeMarkerContext.put("user",themeDisplay.getUser());
    freeMarkerContext.put("realUser",themeDisplay.getRealUser());
    freeMarkerContext.put("layout",layout);
    freeMarkerContext.put("layouts",layouts);
    freeMarkerContext.put("plid",String.valueOf(themeDisplay.getPlid()));
    freeMarkerContext.put("layoutTypePortlet",themeDisplay.getLayoutTypePortlet());
    freeMarkerContext.put("scopeGroupId",new Long(themeDisplay.getScopeGroupId()));
    freeMarkerContext.put("permissionChecker",themeDisplay.getPermissionChecker());
    freeMarkerContext.put("locale",themeDisplay.getLocale());
    freeMarkerContext.put("timeZone",themeDisplay.getTimeZone());
    freeMarkerContext.put("theme",theme);
    freeMarkerContext.put("colorScheme",themeDisplay.getColorScheme());
    freeMarkerContext.put("portletDisplay",themeDisplay.getPortletDisplay());
    if (layout != null) {
      RequestVars requestVars=new RequestVars(request,themeDisplay,layout.getAncestorPlid(),layout.getAncestorLayoutId());
      List<NavItem> navItems=NavItem.fromLayouts(requestVars,layouts);
      freeMarkerContext.put("navItems",navItems);
    }
    String servletContextName=GetterUtil.getString(theme.getServletContextName());
    freeMarkerContext.put("fullCssPath",StringPool.SLASH + servletContextName + theme.getFreeMarkerTemplateLoader()+ theme.getCssPath());
    freeMarkerContext.put("fullTemplatesPath",StringPool.SLASH + servletContextName + theme.getFreeMarkerTemplateLoader()+ theme.getTemplatesPath());
    freeMarkerContext.put("init",StringPool.SLASH + themeDisplay.getPathContext() + FreeMarkerTemplateLoader.SERVLET_SEPARATOR+ "/html/themes/_unstyled/templates/init.ftl");
    freeMarkerContext.put("portletGroupId",new Long(themeDisplay.getScopeGroupId()));
  }
  insertTilesVariables(freeMarkerContext,request);
  if (request.getAttribute(WebKeys.PAGE_TITLE) != null) {
    freeMarkerContext.put("pageTitle",request.getAttribute(WebKeys.PAGE_TITLE));
  }
  if (request.getAttribute(WebKeys.PAGE_SUBTITLE) != null) {
    freeMarkerContext.put("pageSubtitle",request.getAttribute(WebKeys.PAGE_SUBTITLE));
  }
  Map<String,Object> ftlVariables=(Map<String,Object>)request.getAttribute(WebKeys.FTL_VARIABLES);
  if (ftlVariables != null) {
    for (    Map.Entry<String,Object> entry : ftlVariables.entrySet()) {
      String key=entry.getKey();
      Object value=entry.getValue();
      if (Validator.isNotNull(key)) {
        freeMarkerContext.put(key,value);
      }
    }
  }
}

{
  return new StatementWrapper(statement){
    @Override public void evaluate() throws Throwable {
      String methodName=description.getMethodName();
      C c=null;
      M m=null;
      Object target=null;
      if (methodName == null) {
        c=_testCallback.beforeClass(description);
      }
 else {
        target=inspectTarget(statement);
        m=_testCallback.beforeMethod(description,target);
      }
      try {
        statement.evaluate();
      }
  finally {
        if (methodName == null) {
          _testCallback.afterClass(description,c);
        }
 else {
          _testCallback.afterMethod(description,m,target);
        }
      }
    }
  }
;
}

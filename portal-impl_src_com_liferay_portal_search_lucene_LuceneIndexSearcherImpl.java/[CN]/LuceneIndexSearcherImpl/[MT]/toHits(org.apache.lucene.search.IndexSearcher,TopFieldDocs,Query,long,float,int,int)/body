{
  int length=topFieldDocs.totalHits;
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS)) {
    start=0;
    end=length;
  }
  String[] queryTerms=getQueryTerms(query);
  IndexReader indexReader=indexSearcher.getIndexReader();
  List<String> indexedFieldNames=new ArrayList<String>(indexReader.getFieldNames(IndexReader.FieldOption.INDEXED));
  org.apache.lucene.search.Query luceneQuery=QueryTranslator.translate(query);
  int scoredFieldNamesCount=LuceneHelperUtil.countScoredFieldNames(luceneQuery,ArrayUtil.toStringArray(indexedFieldNames.toArray()));
  Hits hits=new HitsImpl();
  if ((start > -1) && (start <= end)) {
    if (end > length) {
      end=length;
    }
    int subsetTotal=end - start;
    if (subsetTotal > PropsValues.INDEX_SEARCH_LIMIT) {
      subsetTotal=PropsValues.INDEX_SEARCH_LIMIT;
    }
    List<Document> subsetDocs=new ArrayList<Document>(subsetTotal);
    List<String> subsetSnippets=new ArrayList<String>(subsetTotal);
    List<Float> subsetScores=new ArrayList<Float>(subsetTotal);
    QueryConfig queryConfig=query.getQueryConfig();
    boolean highlightEnabled=queryConfig.isHighlightEnabled();
    for (int i=start; i < end; i++) {
      if (i >= PropsValues.INDEX_SEARCH_LIMIT) {
        break;
      }
      org.apache.lucene.document.Document document=indexSearcher.doc(topFieldDocs.scoreDocs[i].doc);
      Document subsetDocument=getDocument(document);
      subsetDocs.add(subsetDocument);
      if (highlightEnabled) {
        String subsetSnippet=getSnippet(document,query,Field.CONTENT);
        subsetSnippets.add(subsetSnippet);
      }
 else {
        subsetSnippets.add(StringPool.BLANK);
      }
      Float subsetScore=topFieldDocs.scoreDocs[i].score / scoredFieldNamesCount;
      subsetScores.add(subsetScore);
      if (_log.isDebugEnabled()) {
        try {
          Explanation explanation=indexSearcher.explain(luceneQuery,topFieldDocs.scoreDocs[i].doc);
          _log.debug(explanation.toString());
        }
 catch (        Exception e) {
        }
      }
    }
    hits.setStart(startTime);
    hits.setSearchTime(searchTime);
    hits.setQueryTerms(queryTerms);
    hits.setDocs(subsetDocs.toArray(new Document[subsetDocs.size()]));
    hits.setLength(length);
    hits.setSnippets(subsetSnippets.toArray(new String[subsetSnippets.size()]));
    hits.setScores(subsetScores.toArray(new Float[subsetScores.size()]));
  }
  return hits;
}

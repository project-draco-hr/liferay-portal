{
  DistributedRegistry.registerDistributed(ChildClass.class);
  Assert.assertEquals(3,_exactDirections.size());
  Assert.assertEquals(Direction.REQUEST,_exactDirections.get(ChildClass.name1));
  Assert.assertEquals(Direction.REQUEST,_exactDirections.get(ChildClass.name6));
  Assert.assertEquals(Direction.REQUEST,_exactDirections.get(ChildClass.name10));
  Assert.assertEquals(3,_postfixDirections.size());
  Assert.assertEquals(Direction.RESPONSE,_postfixDirections.get(ChildClass.name2));
  Assert.assertEquals(Direction.RESPONSE,_postfixDirections.get(ChildClass.name7));
  Assert.assertEquals(Direction.RESPONSE,_postfixDirections.get(ChildClass.name11));
  Assert.assertEquals(3,_prefixDirections.size());
  Assert.assertEquals(Direction.DUPLEX,_prefixDirections.get(ChildClass.name3));
  Assert.assertEquals(Direction.DUPLEX,_prefixDirections.get(ChildClass.name8));
  Assert.assertEquals(Direction.DUPLEX,_prefixDirections.get(ChildClass.name12));
  DistributedRegistry.unregisterDistributed(ChildClass.class);
  Assert.assertTrue(_exactDirections.isEmpty());
  Assert.assertTrue(_postfixDirections.isEmpty());
  Assert.assertTrue(_prefixDirections.isEmpty());
  try {
    DistributedRegistry.registerDistributed(BadInitialization.class);
    Assert.fail();
  }
 catch (  RuntimeException re) {
    Throwable throwable=re.getCause();
    Assert.assertSame(ExceptionInInitializerError.class,throwable.getClass());
    throwable=throwable.getCause();
    Assert.assertSame(NullPointerException.class,throwable.getClass());
  }
}

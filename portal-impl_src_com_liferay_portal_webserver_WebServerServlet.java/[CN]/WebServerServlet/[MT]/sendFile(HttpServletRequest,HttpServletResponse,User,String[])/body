{
  DLFileEntry dlFileEntry=getFile(pathArray);
  if (dlFileEntry == null) {
    throw new NoSuchFileEntryException();
  }
  long groupId=dlFileEntry.getGroupId();
  long folderId=dlFileEntry.getFolderId();
  String name=dlFileEntry.getName();
  String fileName=dlFileEntry.getTitle();
  String version=ParamUtil.getString(request,"version");
  String targetExtension=ParamUtil.getString(request,"targetExtension");
  if (Validator.isNull(version)) {
    if (Validator.isNotNull(dlFileEntry.getVersion())) {
      version=dlFileEntry.getVersion();
    }
 else {
      throw new NoSuchFileEntryException();
    }
  }
  DLFileVersion fileVersion=DLFileVersionLocalServiceUtil.getFileVersion(groupId,folderId,name,version);
  fileName=fileVersion.getTitle();
  String extension=GetterUtil.getString(FileUtil.getExtension(fileName));
  if (Validator.isNull(extension) || !extension.equals(fileVersion.getExtension())) {
    fileName+=StringPool.PERIOD + fileVersion.getExtension();
  }
  InputStream is=DLFileEntryLocalServiceUtil.getFileAsStream(user.getCompanyId(),user.getUserId(),groupId,folderId,name,version);
  boolean converted=false;
  if (Validator.isNotNull(targetExtension)) {
    String id=DocumentConversionUtil.getTempFileId(dlFileEntry.getFileEntryId(),version);
    String sourceExtension=FileUtil.getExtension(fileName);
    InputStream convertedIS=DocumentConversionUtil.convert(id,is,sourceExtension,targetExtension);
    if ((convertedIS != null) && (convertedIS != is)) {
      fileName=FileUtil.stripExtension(fileName).concat(StringPool.PERIOD).concat(targetExtension);
      is=convertedIS;
      converted=true;
    }
  }
  int contentLength=0;
  if (!converted) {
    if (DLUtil.compareVersions(version,dlFileEntry.getVersion()) >= 0) {
      contentLength=(int)dlFileEntry.getSize();
    }
 else {
      contentLength=(int)fileVersion.getSize();
    }
  }
  String contentType=MimeTypesUtil.getContentType(fileName);
  ServletResponseUtil.sendFile(request,response,fileName,is,contentLength,contentType);
}

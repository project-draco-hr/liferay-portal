{
  List<Tuple> missingPrototypes=new ArrayList<Tuple>();
  String layoutSetPrototypeUuid=layoutsElement.attributeValue("layout-set-prototype-uuid");
  if (Validator.isNotNull(layoutSetPrototypeUuid)) {
    try {
      LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypeByUuid(layoutSetPrototypeUuid);
    }
 catch (    NoSuchLayoutSetPrototypeException nlspe) {
      String layoutSetPrototypeName=layoutsElement.attributeValue("layout-set-prototype-name");
      missingPrototypes.add(new Tuple(LayoutSetPrototype.class.getName(),layoutSetPrototypeUuid,layoutSetPrototypeName));
    }
  }
  for (  Element layoutElement : layoutElements) {
    String layoutPrototypeUuid=GetterUtil.getString(layoutElement.attributeValue("layout-prototype-uuid"));
    if (Validator.isNotNull(layoutPrototypeUuid)) {
      try {
        LayoutPrototypeLocalServiceUtil.getLayoutPrototypeByUuid(layoutPrototypeUuid);
      }
 catch (      NoSuchLayoutPrototypeException nslpe) {
        String layoutPrototypeName=GetterUtil.getString(layoutElement.attributeValue("layout-prototype-name"));
        missingPrototypes.add(new Tuple(LayoutPrototype.class.getName(),layoutPrototypeUuid,layoutPrototypeName));
      }
    }
  }
  if (!missingPrototypes.isEmpty()) {
    throw new PrototypeException(missingPrototypes);
  }
}

{
  String action=layoutElement.attributeValue("action");
  if (!action.equals(Constants.SKIP)) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,layoutElement);
    List<Layout> portletDataContextNewLayouts=portletDataContext.getNewLayouts();
    newLayouts.addAll(portletDataContextNewLayouts);
    if (importTheme) {
      for (      Layout layout : portletDataContextNewLayouts) {
        if (layout.isInheritLookAndFeel()) {
          continue;
        }
        String oldLayoutId=GetterUtil.getString(layoutElement.attributeValue("layout-id"));
        InputStream themeZip=portletDataContext.getZipEntryAsInputStream("theme" + StringPool.DASH + oldLayoutId+ ".zip");
        if (themeZip != null) {
          String themeId=layout.getThemeId();
          String colorSchemeId=layout.getColorSchemeId();
          String importThemeId=importTheme(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),themeZip);
          if (importThemeId != null) {
            themeId=importThemeId;
            colorSchemeId=ColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();
          }
          LayoutLocalServiceUtil.updateLookAndFeel(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),themeId,colorSchemeId,layout.getCss(),false);
        }
      }
    }
    portletDataContextNewLayouts.clear();
  }
  if (!action.equals(Constants.DELETE)) {
    sourceLayoutsUuids.add(layoutElement.attributeValue("uuid"));
  }
}

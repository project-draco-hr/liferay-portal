{
  try {
    String xml=context.getZipEntryAsString(context.getSourceRootPath() + "/categories-hierarchy.xml");
    if (Validator.isNull(xml)) {
      return;
    }
    Document doc=SAXReaderUtil.read(xml);
    Element root=doc.getRootElement();
    List<Element> vocabularies=root.elements("vocabulary");
    for (    Element vocabularyEl : vocabularies) {
      String vocabularyName=GetterUtil.getString(vocabularyEl.attributeValue("name"));
      String userUuid=GetterUtil.getString(vocabularyEl.attributeValue("userUuid"));
      ServiceContext serviceContext=new ServiceContext();
      serviceContext.setAddCommunityPermissions(true);
      serviceContext.setAddGuestPermissions(true);
      serviceContext.setScopeGroupId(context.getGroupId());
      AssetVocabulary vocabulary=null;
      try {
        vocabulary=AssetVocabularyLocalServiceUtil.getGroupVocabulary(context.getScopeGroupId(),vocabularyName);
      }
 catch (      NoSuchVocabularyException nsve) {
        vocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(context.getUserId(userUuid),vocabularyName,serviceContext);
      }
      List<Element> categories=vocabularyEl.elements("category");
      for (      Element category : categories) {
        String categoryName=GetterUtil.getString(category.attributeValue("name"));
        long parentCategoryId=GetterUtil.getLong(category.attributeValue("parentCategoryId"));
        String[] properties=null;
        try {
          AssetCategoryLocalServiceUtil.addCategory(context.getUserId(userUuid),parentCategoryId,categoryName,vocabulary.getVocabularyId(),properties,serviceContext);
        }
 catch (        DuplicateCategoryException dce) {
        }
      }
    }
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
}

{
  long groupId=context.getGroupId();
  long sourceGroupId=context.getSourceGroupId();
  long layoutId=GetterUtil.getInteger(layoutElement.attributeValue("layout-id"));
  long oldLayoutId=layoutId;
  boolean deleteLayout=GetterUtil.getBoolean(layoutElement.attributeValue("delete"));
  if (deleteLayout) {
    try {
      Layout layout=LayoutLocalServiceUtil.getLayout(groupId,privateLayout,oldLayoutId);
      if (layout != null) {
        newLayoutsMap.put(oldLayoutId,layout);
        LayoutLocalServiceUtil.deleteLayout(layout);
      }
    }
 catch (    NoSuchLayoutException nsle) {
      _log.warn("Error deleting layout for {" + sourceGroupId + ", "+ privateLayout+ ", "+ oldLayoutId+ "}");
    }
    return;
  }
  String path=layoutElement.attributeValue("path");
  if (!context.isPathNotProcessed(path)) {
    return;
  }
  Layout layout=(Layout)context.getZipEntryAsObject(path);
  Layout existingLayout=null;
  Layout importedLayout=null;
  String friendlyURL=layout.getFriendlyURL();
  if (layoutsImportMode.equals(PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_ADD_AS_NEW)) {
    layoutId=LayoutLocalServiceUtil.getNextLayoutId(groupId,privateLayout);
    friendlyURL=StringPool.SLASH + layoutId;
  }
 else   if (layoutsImportMode.equals(PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_MERGE_BY_LAYOUT_NAME)) {
    Locale locale=LocaleUtil.getDefault();
    String localizedName=layout.getName(locale);
    for (    Layout curLayout : previousLayouts) {
      if (curLayout.getName(locale).equals(localizedName)) {
        existingLayout=curLayout;
        break;
      }
    }
    if (existingLayout == null) {
      layoutId=LayoutLocalServiceUtil.getNextLayoutId(groupId,privateLayout);
    }
  }
 else {
    existingLayout=LayoutUtil.fetchByUUID_G(layout.getUuid(),groupId);
    if (existingLayout == null) {
      layoutId=LayoutLocalServiceUtil.getNextLayoutId(groupId,privateLayout);
    }
  }
  if (_log.isDebugEnabled()) {
    if (existingLayout == null) {
      _log.debug("Layout with {groupId=" + groupId + ",privateLayout="+ privateLayout+ ",layoutId="+ layoutId+ "} does not exist");
    }
 else {
      _log.debug("Layout with {groupId=" + groupId + ",privateLayout="+ privateLayout+ ",layoutId="+ layoutId+ "} exists");
    }
  }
  if (existingLayout == null) {
    long plid=CounterLocalServiceUtil.increment();
    importedLayout=LayoutUtil.create(plid);
    importedLayout.setUuid(layout.getUuid());
    importedLayout.setGroupId(groupId);
    importedLayout.setPrivateLayout(privateLayout);
    importedLayout.setLayoutId(layoutId);
    if (layout.isIconImage()) {
      long iconImageId=CounterLocalServiceUtil.increment();
      importedLayout.setIconImageId(iconImageId);
    }
  }
 else {
    importedLayout=existingLayout;
  }
  newLayoutsMap.put(oldLayoutId,importedLayout);
  long parentLayoutId=layout.getParentLayoutId();
  Node parentLayoutNode=rootElement.selectSingleNode("./layouts/layout[@layout-id='" + parentLayoutId + "']");
  if ((parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) && (parentLayoutNode != null)) {
    importLayout(context,user,layoutCache,previousLayouts,newLayouts,newLayoutsMap,newLayoutIds,portletsMergeMode,themeId,colorSchemeId,layoutsImportMode,privateLayout,importPermissions,importUserPermissions,useThemeZip,rootElement,(Element)parentLayoutNode);
    Layout parentLayout=newLayoutsMap.get(parentLayoutId);
    parentLayoutId=parentLayout.getLayoutId();
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Importing layout with layout id " + layoutId + " and parent layout id "+ parentLayoutId);
  }
  importedLayout.setCompanyId(user.getCompanyId());
  importedLayout.setParentLayoutId(parentLayoutId);
  importedLayout.setName(layout.getName());
  importedLayout.setTitle(layout.getTitle());
  importedLayout.setDescription(layout.getDescription());
  importedLayout.setType(layout.getType());
  if (layout.isTypePortlet() && Validator.isNotNull(layout.getTypeSettings()) && !portletsMergeMode.equals(PortletDataHandlerKeys.PORTLETS_MERGE_MODE_REPLACE)) {
    mergePortlets(importedLayout,layout.getTypeSettings(),portletsMergeMode);
  }
 else   if (layout.isTypeLinkToLayout()) {
    UnicodeProperties typeSettingsProperties=layout.getTypeSettingsProperties();
    long linkToLayoutId=GetterUtil.getLong(typeSettingsProperties.getProperty("linkToLayoutId",StringPool.BLANK));
    if (linkToLayoutId > 0) {
      Node linkedLayoutNode=rootElement.selectSingleNode("./layouts/layout[@layout-id='" + linkToLayoutId + "']");
      importLayout(context,user,layoutCache,previousLayouts,newLayouts,newLayoutsMap,newLayoutIds,portletsMergeMode,themeId,colorSchemeId,layoutsImportMode,privateLayout,importPermissions,importUserPermissions,useThemeZip,rootElement,(Element)linkedLayoutNode);
      Layout linkedLayout=newLayoutsMap.get(linkToLayoutId);
      typeSettingsProperties.setProperty("linkToLayoutId",String.valueOf(linkedLayout.getLayoutId()));
    }
    importedLayout.setTypeSettings(layout.getTypeSettings());
  }
 else {
    importedLayout.setTypeSettings(layout.getTypeSettings());
  }
  importedLayout.setHidden(layout.isHidden());
  importedLayout.setFriendlyURL(friendlyURL);
  if (useThemeZip) {
    importedLayout.setThemeId(StringPool.BLANK);
    importedLayout.setColorSchemeId(StringPool.BLANK);
  }
 else {
    importedLayout.setThemeId(layout.getThemeId());
    importedLayout.setColorSchemeId(layout.getColorSchemeId());
  }
  importedLayout.setWapThemeId(layout.getWapThemeId());
  importedLayout.setWapColorSchemeId(layout.getWapColorSchemeId());
  importedLayout.setCss(layout.getCss());
  importedLayout.setPriority(layout.getPriority());
  fixTypeSettings(importedLayout);
  if (layout.isIconImage()) {
    String iconImagePath=layoutElement.elementText("icon-image-path");
    byte[] iconBytes=context.getZipEntryAsByteArray(iconImagePath);
    if ((iconBytes != null) && (iconBytes.length > 0)) {
      importedLayout.setIconImage(true);
      ImageLocalServiceUtil.updateImage(importedLayout.getIconImageId(),iconBytes);
    }
  }
 else {
    ImageLocalServiceUtil.deleteImage(importedLayout.getIconImageId());
  }
  LayoutUtil.update(importedLayout,false);
  context.setPlid(importedLayout.getPlid());
  context.setOldPlid(layout.getPlid());
  newLayoutIds.add(importedLayout.getLayoutId());
  newLayouts.add(importedLayout);
  if (importPermissions) {
    _permissionImporter.importLayoutPermissions(layoutCache,context.getCompanyId(),groupId,user.getUserId(),importedLayout,layoutElement,rootElement,importUserPermissions);
  }
  _portletImporter.importPortletData(context,PortletKeys.LAYOUT_CONFIGURATION,null,layoutElement);
}

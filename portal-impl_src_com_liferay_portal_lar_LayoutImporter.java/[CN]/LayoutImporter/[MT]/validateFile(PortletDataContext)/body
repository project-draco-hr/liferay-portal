{
  readXML(portletDataContext);
  int buildNumber=ReleaseInfo.getBuildNumber();
  int importBuildNumber=GetterUtil.getInteger(_headerElement.attributeValue("build-number"));
  if (buildNumber != importBuildNumber) {
    throw new LayoutImportException("LAR build number " + importBuildNumber + " does not match "+ "portal build number "+ buildNumber);
  }
  String larType=_headerElement.attributeValue("type");
  if (!larType.equals("layout-prototype") && !larType.equals("layout-set") && !larType.equals("layout-set-prototype")) {
    throw new LARTypeException(larType);
  }
  String layoutsImportMode=MapUtil.getString(portletDataContext.getParameterMap(),PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE);
  Group group=GroupLocalServiceUtil.fetchGroup(portletDataContext.getGroupId());
  if (larType.equals("layout-set-prototype") && !group.isLayoutSetPrototype() && !layoutsImportMode.equals(PortletDataHandlerKeys.LAYOUTS_IMPORT_MODE_CREATED_FROM_PROTOTYPE)) {
    throw new LARTypeException("Site template can be only imported to a site template");
  }
  if (larType.equals("layout-set") && group.isLayoutSetPrototype()) {
    throw new LARTypeException("Site can be only imported to a site");
  }
  Locale[] sourceAvailableLocales=LocaleUtil.fromLanguageIds(StringUtil.split(_headerElement.attributeValue("available-locales")));
  Locale[] targetAvailableLocales=LanguageUtil.getAvailableLocales(portletDataContext.getScopeGroupId());
  for (  Locale sourceAvailableLocale : sourceAvailableLocales) {
    if (!ArrayUtil.contains(targetAvailableLocales,sourceAvailableLocale)) {
      LocaleException le=new LocaleException(LocaleException.TYPE_EXPORT_IMPORT);
      le.setSourceAvailableLocales(sourceAvailableLocales);
      le.setTargetAvailableLocales(targetAvailableLocales);
      throw le;
    }
  }
  validateLayoutPrototypes(portletDataContext.getCompanyId(),_layoutsElement,_layoutElements);
}

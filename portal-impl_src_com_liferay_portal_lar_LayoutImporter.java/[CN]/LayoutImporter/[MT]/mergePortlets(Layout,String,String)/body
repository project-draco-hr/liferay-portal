{
  try {
    UnicodeProperties previousProperties=layout.getTypeSettingsProperties();
    LayoutTypePortlet previousLayoutType=(LayoutTypePortlet)layout.getLayoutType();
    List<String> previousColumns=previousLayoutType.getLayoutTemplate().getColumns();
    UnicodeProperties newProperties=new UnicodeProperties(true);
    newProperties.load(newTypeSettings);
    String layoutTemplateId=newProperties.getProperty(LayoutTypePortletConstants.LAYOUT_TEMPLATE_ID);
    previousProperties.setProperty(LayoutTypePortletConstants.LAYOUT_TEMPLATE_ID,layoutTemplateId);
    LayoutTemplate newLayoutTemplate=LayoutTemplateLocalServiceUtil.getLayoutTemplate(layoutTemplateId,false,null);
    String[] lostPortletIds=new String[0];
    for (    String columnId : newLayoutTemplate.getColumns()) {
      String columnValue=newProperties.getProperty(columnId);
      String[] portletIds=StringUtil.split(columnValue);
      if (!previousColumns.contains(columnId)) {
        lostPortletIds=ArrayUtil.append(lostPortletIds,portletIds);
      }
 else {
        String[] previousPortletIds=StringUtil.split(previousProperties.getProperty(columnId));
        portletIds=appendPortletIds(previousPortletIds,portletIds,portletsMergeMode);
        previousProperties.setProperty(columnId,StringUtil.merge(portletIds));
      }
    }
    String columnId=previousColumns.get(0);
    String[] portletIds=StringUtil.split(previousProperties.getProperty(columnId));
    appendPortletIds(portletIds,lostPortletIds,portletsMergeMode);
    previousProperties.setProperty(columnId,StringUtil.merge(portletIds));
    layout.setTypeSettings(previousProperties.toString());
  }
 catch (  IOException ioe) {
    layout.setTypeSettings(newTypeSettings);
  }
}

{
  SwappedOutputStream swappedOutputStream=null;
synchronized (RunnableUtil.class) {
    swappedOutputStream=new SwappedOutputStream(outputStream,System.out,Thread.currentThread());
    _swappedOutputStreams.push(swappedOutputStream);
    System.setOut(new PrintStream(swappedOutputStream));
  }
  try {
    runnable.run();
  }
  finally {
synchronized (RunnableUtil.class) {
      swappedOutputStream._enabled=false;
      if (_swappedOutputStreams.peek() == swappedOutputStream) {
        _swappedOutputStreams.pop();
        System.setOut(swappedOutputStream._fallbackPrintStream);
        Iterator<SwappedOutputStream> iterator=_swappedOutputStreams.iterator();
        while (iterator.hasNext()) {
          swappedOutputStream=iterator.next();
          if (swappedOutputStream._enabled) {
            break;
          }
          iterator.remove();
          System.setOut(swappedOutputStream._fallbackPrintStream);
        }
      }
    }
  }
}

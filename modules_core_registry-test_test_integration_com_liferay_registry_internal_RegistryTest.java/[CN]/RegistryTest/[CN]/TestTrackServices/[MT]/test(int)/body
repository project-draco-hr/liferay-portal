{
  ServiceTracker<InterfaceOne,InterfaceOne> serviceTracker=getServiceTracker();
  serviceTracker.open();
  Assert.assertTrue(serviceTracker.isEmpty());
  Assert.assertEquals(0,serviceTracker.size());
  InterfaceOne interfaceOneA=getInstance();
  ServiceRegistration<InterfaceOne> serviceRegistrationA=_registry.registerService(InterfaceOne.class,interfaceOneA);
  Assert.assertNotNull(serviceRegistrationA);
  InterfaceOne interfaceOneB=getInstance();
  Map<String,Object> properties=new HashMap<>();
  properties.put("a.property","G");
  ServiceRegistration<InterfaceOne> serviceRegistrationB=_registry.registerService(InterfaceOne.class,interfaceOneB,properties);
  Assert.assertNotNull(serviceRegistrationB);
  Assert.assertFalse(serviceTracker.isEmpty());
  Assert.assertEquals((expectedServicesCount == 2) ? interfaceOneA : interfaceOneB,serviceTracker.getService());
  Assert.assertEquals(interfaceOneB,serviceTracker.getService(serviceRegistrationB.getServiceReference()));
  ServiceReference<InterfaceOne>[] serviceReferences=serviceTracker.getServiceReferences();
  Assert.assertEquals(expectedServicesCount,serviceReferences.length);
  Object[] services=serviceTracker.getServices();
  Assert.assertEquals(expectedServicesCount,services.length);
  SortedMap<ServiceReference<InterfaceOne>,InterfaceOne> trackedServiceReferences=serviceTracker.getTrackedServiceReferences();
  Assert.assertNotNull(trackedServiceReferences);
  Assert.assertEquals(expectedServicesCount,trackedServiceReferences.size());
  Assert.assertEquals((expectedServicesCount == 2) ? interfaceOneA : interfaceOneB,trackedServiceReferences.get(trackedServiceReferences.firstKey()));
  Assert.assertEquals(interfaceOneB,trackedServiceReferences.get(trackedServiceReferences.lastKey()));
  serviceRegistrationA.unregister();
  Assert.assertEquals(1,serviceTracker.size());
  serviceRegistrationB.unregister();
  Assert.assertEquals(0,serviceTracker.size());
  trackedServiceReferences=serviceTracker.getTrackedServiceReferences();
  Assert.assertNotNull(trackedServiceReferences);
  Assert.assertEquals(0,trackedServiceReferences.size());
  serviceTracker.close();
}

{
  long pk=RandomTestUtil.nextLong();
  BackgroundTask newBackgroundTask=_persistence.create(pk);
  newBackgroundTask.setMvccVersion(RandomTestUtil.nextLong());
  newBackgroundTask.setGroupId(RandomTestUtil.nextLong());
  newBackgroundTask.setCompanyId(RandomTestUtil.nextLong());
  newBackgroundTask.setUserId(RandomTestUtil.nextLong());
  newBackgroundTask.setUserName(RandomTestUtil.randomString());
  newBackgroundTask.setCreateDate(RandomTestUtil.nextDate());
  newBackgroundTask.setModifiedDate(RandomTestUtil.nextDate());
  newBackgroundTask.setName(RandomTestUtil.randomString());
  newBackgroundTask.setServletContextNames(RandomTestUtil.randomString());
  newBackgroundTask.setTaskExecutorClassName(RandomTestUtil.randomString());
  newBackgroundTask.setTaskContext(RandomTestUtil.randomString());
  newBackgroundTask.setCompleted(RandomTestUtil.randomBoolean());
  newBackgroundTask.setCompletionDate(RandomTestUtil.nextDate());
  newBackgroundTask.setStatus(RandomTestUtil.nextInt());
  newBackgroundTask.setStatusMessage(RandomTestUtil.randomString());
  _models.add(_persistence.update(newBackgroundTask));
  BackgroundTask existingBackgroundTask=_persistence.findByPrimaryKey(newBackgroundTask.getPrimaryKey());
  Assert.assertEquals(existingBackgroundTask.getMvccVersion(),newBackgroundTask.getMvccVersion());
  Assert.assertEquals(existingBackgroundTask.getBackgroundTaskId(),newBackgroundTask.getBackgroundTaskId());
  Assert.assertEquals(existingBackgroundTask.getGroupId(),newBackgroundTask.getGroupId());
  Assert.assertEquals(existingBackgroundTask.getCompanyId(),newBackgroundTask.getCompanyId());
  Assert.assertEquals(existingBackgroundTask.getUserId(),newBackgroundTask.getUserId());
  Assert.assertEquals(existingBackgroundTask.getUserName(),newBackgroundTask.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingBackgroundTask.getCreateDate()),Time.getShortTimestamp(newBackgroundTask.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingBackgroundTask.getModifiedDate()),Time.getShortTimestamp(newBackgroundTask.getModifiedDate()));
  Assert.assertEquals(existingBackgroundTask.getName(),newBackgroundTask.getName());
  Assert.assertEquals(existingBackgroundTask.getServletContextNames(),newBackgroundTask.getServletContextNames());
  Assert.assertEquals(existingBackgroundTask.getTaskExecutorClassName(),newBackgroundTask.getTaskExecutorClassName());
  Assert.assertEquals(existingBackgroundTask.getTaskContext(),newBackgroundTask.getTaskContext());
  Assert.assertEquals(existingBackgroundTask.getCompleted(),newBackgroundTask.getCompleted());
  Assert.assertEquals(Time.getShortTimestamp(existingBackgroundTask.getCompletionDate()),Time.getShortTimestamp(newBackgroundTask.getCompletionDate()));
  Assert.assertEquals(existingBackgroundTask.getStatus(),newBackgroundTask.getStatus());
  Assert.assertEquals(existingBackgroundTask.getStatusMessage(),newBackgroundTask.getStatusMessage());
}

{
  boolean pagination=true;
  FinderPath finderPath=null;
  Object[] finderArgs=null;
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) {
    pagination=false;
    finderPath=FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P;
    finderArgs=new Object[]{companyId,classNameId,classPK,primary};
  }
 else {
    finderPath=FINDER_PATH_WITH_PAGINATION_FIND_BY_C_C_C_P;
    finderArgs=new Object[]{companyId,classNameId,classPK,primary,start,end,orderByComparator};
  }
  List<Website> list=(List<Website>)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if ((list != null) && !list.isEmpty()) {
    for (    Website website : list) {
      if ((companyId != website.getCompanyId()) || (classNameId != website.getClassNameId()) || (classPK != website.getClassPK())|| (primary != website.getPrimary())) {
        list=null;
        break;
      }
    }
  }
  if (list == null) {
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(6 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(6);
    }
    query.append(_SQL_SELECT_WEBSITE_WHERE);
    query.append(_FINDER_COLUMN_C_C_C_P_COMPANYID_2);
    query.append(_FINDER_COLUMN_C_C_C_P_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_C_C_C_P_CLASSPK_2);
    query.append(_FINDER_COLUMN_C_C_C_P_PRIMARY_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else     if (pagination) {
      query.append(WebsiteModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      qPos.add(classNameId);
      qPos.add(classPK);
      qPos.add(primary);
      if (!pagination) {
        list=(List<Website>)QueryUtil.list(q,getDialect(),start,end,false);
        Collections.sort(list);
        list=new UnmodifiableList<Website>(list);
      }
 else {
        list=(List<Website>)QueryUtil.list(q,getDialect(),start,end);
      }
      cacheResult(list);
      FinderCacheUtil.putResult(finderPath,finderArgs,list);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return list;
}

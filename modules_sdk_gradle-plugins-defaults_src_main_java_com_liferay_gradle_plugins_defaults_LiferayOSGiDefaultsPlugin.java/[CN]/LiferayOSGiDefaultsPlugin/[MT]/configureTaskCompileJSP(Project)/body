{
  boolean jspPrecompileEnabled=GradleUtil.getProperty(project,"jsp.precompile.enabled",false);
  if (!jspPrecompileEnabled) {
    return;
  }
  JavaCompile javaCompile=(JavaCompile)GradleUtil.getTask(project,JspCPlugin.COMPILE_JSP_TASK_NAME);
  String dirName=null;
  TaskContainer taskContainer=project.getTasks();
  WritePropertiesTask recordArtifactTask=(WritePropertiesTask)taskContainer.findByName(LiferayRelengPlugin.RECORD_ARTIFACT_TASK_NAME);
  if (recordArtifactTask != null) {
    Properties artifactProperties=LiferayRelengPlugin.getArtifactProperties(recordArtifactTask);
    String artifactURL=artifactProperties.getProperty("artifact.url");
    if (Validator.isNotNull(artifactURL)) {
      int index=artifactURL.lastIndexOf('/');
      dirName=artifactURL.substring(index + 1,artifactURL.length() - 4);
    }
  }
  if (Validator.isNull(dirName)) {
    dirName=GradleUtil.getArchivesBaseName(project) + "-" + project.getVersion();
  }
  LiferayExtension liferayExtension=GradleUtil.getExtension(project,LiferayExtension.class);
  File dir=new File(liferayExtension.getLiferayHome(),"work/" + dirName);
  javaCompile.setDestinationDir(dir);
}

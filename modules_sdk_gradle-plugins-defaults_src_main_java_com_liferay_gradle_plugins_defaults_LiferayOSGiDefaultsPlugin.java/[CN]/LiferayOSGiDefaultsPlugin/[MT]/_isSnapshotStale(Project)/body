{
  Logger logger=project.getLogger();
  long lastModifiedTime;
  try {
    lastModifiedTime=_getArtifactLastModifiedTime(project);
  }
 catch (  ResolveException re) {
    if (logger.isInfoEnabled()) {
      logger.info("Unable to get artifact last modified time for " + project + ", a new snapshot will be published",re);
    }
    return true;
  }
  lastModifiedTime=lastModifiedTime / 1000;
  String result=GitUtil.getGitResult(project,"log","--format=%s","--since=" + lastModifiedTime,".");
  String[] lines=result.split("\\r?\\n");
  for (  String line : lines) {
    if (logger.isInfoEnabled()) {
      logger.info(line);
    }
    if (Validator.isNull(line)) {
      continue;
    }
    if (!line.contains(PrintArtifactPublishCommandsTask.IGNORED_MESSAGE_PATTERN)) {
      return true;
    }
  }
  return false;
}

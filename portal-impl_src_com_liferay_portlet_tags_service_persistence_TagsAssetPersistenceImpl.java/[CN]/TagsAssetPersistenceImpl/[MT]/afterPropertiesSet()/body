{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portlet.tags.model.TagsAsset")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<TagsAsset>> listenersList=new ArrayList<ModelListener<TagsAsset>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<TagsAsset>)Class.forName(listenerClassName).newInstance());
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsTagsEntry=new ContainsTagsEntry(this);
  addTagsEntry=new AddTagsEntry(this);
  clearTagsEntries=new ClearTagsEntries(this);
  removeTagsEntry=new RemoveTagsEntry(this);
  containsAssetCategory=new ContainsAssetCategory(this);
  addAssetCategory=new AddAssetCategory(this);
  clearAssetCategories=new ClearAssetCategories(this);
  removeAssetCategory=new RemoveAssetCategory(this);
}

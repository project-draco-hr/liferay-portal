{
  long layoutId=layout.getLayoutId();
  String friendlyURL=layout.getFriendlyURL();
  String newFriendlyURL=StringPool.SLASH + layoutId;
  if (_log.isDebugEnabled()) {
    _log.debug("Updating layout with friendlyURL: " + friendlyURL + " to: "+ newFriendlyURL);
  }
  List<LayoutFriendlyURL> layoutFriendlyURLs=LayoutFriendlyURLLocalServiceUtil.getLayoutFriendlyURLs(layout.getPlid());
  for (  LayoutFriendlyURL layoutFriendlyURL : layoutFriendlyURLs) {
    if (!friendlyURL.equals(layoutFriendlyURL.getFriendlyURL())) {
      return true;
    }
    try {
      LayoutLocalServiceUtil.updateFriendlyURL(layout.getUserId(),layout.getPlid(),newFriendlyURL,layoutFriendlyURL.getLanguageId());
    }
 catch (    LayoutFriendlyURLException lfurle) {
      int type=lfurle.getType();
      if (type == LayoutFriendlyURLException.DUPLICATE) {
        return true;
      }
 else {
        throw lfurle;
      }
    }
  }
  try {
    Layout duplicateLayout=LayoutLocalServiceUtil.fetchLayoutByFriendlyURL(layout.getGroupId(),layout.isPrivateLayout(),newFriendlyURL);
    if (duplicateLayout != null) {
      throw new LayoutFriendlyURLException(LayoutFriendlyURLException.DUPLICATE);
    }
    layout.setFriendlyURL(newFriendlyURL);
    LayoutLocalServiceUtil.updateLayout(layout);
  }
 catch (  LayoutFriendlyURLException lfurle) {
    int type=lfurle.getType();
    if (type == LayoutFriendlyURLException.DUPLICATE) {
      return true;
    }
 else {
      throw lfurle;
    }
  }
  return false;
}

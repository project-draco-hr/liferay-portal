{
  Object[] finderArgs=new Object[]{resourcePrimKey,version};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,this);
  }
  if (result instanceof KBArticle) {
    KBArticle kbArticle=(KBArticle)result;
    if ((resourcePrimKey != kbArticle.getResourcePrimKey()) || (version != kbArticle.getVersion())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_KBARTICLE_WHERE);
    query.append(_FINDER_COLUMN_R_V_RESOURCEPRIMKEY_2);
    query.append(_FINDER_COLUMN_R_V_VERSION_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(resourcePrimKey);
      qPos.add(version);
      List<KBArticle> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,list);
      }
 else {
        KBArticle kbArticle=list.get(0);
        result=kbArticle;
        cacheResult(kbArticle);
        if ((kbArticle.getResourcePrimKey() != resourcePrimKey) || (kbArticle.getVersion() != version)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_R_V,finderArgs,kbArticle);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_R_V,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (KBArticle)result;
  }
}

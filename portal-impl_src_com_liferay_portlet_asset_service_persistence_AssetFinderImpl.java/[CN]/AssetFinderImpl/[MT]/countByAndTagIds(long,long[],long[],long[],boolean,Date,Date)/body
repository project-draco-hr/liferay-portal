{
  Session session=null;
  try {
    session=openSession();
    StringBuilder sb=new StringBuilder();
    sb.append("SELECT COUNT(DISTINCT assetId) AS COUNT_VALUE ");
    sb.append("FROM Asset WHERE");
    sb.append(" (visible = ?)");
    if (tagIds.length > 0) {
      sb.append(" AND Asset.assetId IN (");
      for (int i=0; i < tagIds.length; i++) {
        sb.append(CustomSQLUtil.get(FIND_BY_AND_TAG_IDS));
        if ((i + 1) < tagIds.length) {
          sb.append(" AND Asset.assetId IN (");
        }
      }
      for (int i=0; i < tagIds.length; i++) {
        if ((i + 1) < tagIds.length) {
          sb.append(StringPool.CLOSE_PARENTHESIS);
        }
      }
      if (excludeZeroViewCount) {
        sb.append(" AND (Asset.viewCount > 0)");
      }
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    if (notTagIds.length > 0) {
      sb.append(" AND (");
      for (int i=0; i < notTagIds.length; i++) {
        sb.append("Asset.assetId NOT IN (");
        sb.append(CustomSQLUtil.get(FIND_BY_AND_TAG_IDS));
        sb.append(StringPool.CLOSE_PARENTHESIS);
        if ((i + 1) < notTagIds.length) {
          sb.append(" OR ");
        }
      }
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    sb.append("[$DATES$]");
    if (groupId > 0) {
      sb.append(" AND (Asset.groupId = ?)");
    }
    sb.append(getClassNameIds(classNameIds));
    String sql=sb.toString();
    sql=getDates(sql,publishDate,expirationDate);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(true);
    setTagIds(qPos,tagIds);
    setTagIds(qPos,notTagIds);
    setDates(qPos,publishDate,expirationDate);
    if (groupId > 0) {
      setGroupId(qPos,groupId);
    }
    setClassNamedIds(qPos,classNameIds);
    Iterator<Long> itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

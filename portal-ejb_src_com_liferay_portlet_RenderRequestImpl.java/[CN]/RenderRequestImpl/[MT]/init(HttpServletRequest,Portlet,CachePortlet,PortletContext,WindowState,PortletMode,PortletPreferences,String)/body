{
  _portletName=portlet.getPortletId();
  String prefix=PortalUtil.getPortletNamespace(_portletName);
  Map sharedSessionAttributes=SharedSessionUtil.getSharedSessionAttributes(req);
  boolean portalSessionShared=false;
  if (portlet.isWARFile() && portlet.isPortalSessionShared()) {
    portalSessionShared=true;
  }
  req=new SharedSessionServletRequest(req,sharedSessionAttributes,portalSessionShared);
  DynamicServletRequest dynamicReq=null;
  if (portlet.isPrivateRequestAttributes()) {
    dynamicReq=new NamespaceServletRequest(req,_portletName,false);
  }
 else {
    dynamicReq=new DynamicServletRequest(req,false);
  }
  Enumeration enu=null;
  Map renderParameters=null;
  boolean portletFocus=false;
  if (_portletName.equals(req.getParameter("p_p_id"))) {
    boolean action=ParamUtil.getBoolean(req,"p_p_action");
    if (!action) {
      portletFocus=true;
    }
 else     if (action && isAction()) {
      portletFocus=true;
    }
  }
  if (portletFocus) {
    renderParameters=new HashMap();
    if (!isAction() && !LiferayWindowState.isExclusive(req) && !LiferayWindowState.isPopUp(req)) {
      RenderParametersPool.put(req,plid,_portletName,renderParameters);
    }
    enu=req.getParameterNames();
  }
 else {
    renderParameters=RenderParametersPool.get(req,plid,_portletName);
    if (!_portletName.equals(req.getParameter("p_p_id"))) {
      _putNamespaceParams(req,prefix,plid,renderParameters);
    }
    enu=Collections.enumeration(renderParameters.keySet());
  }
  while (enu.hasMoreElements()) {
    String param=(String)enu.nextElement();
    if (param.startsWith(prefix) && !cachePortlet.isFacesPortlet()) {
      String newParam=param.substring(prefix.length(),param.length());
      String[] values=null;
      if (portletFocus) {
        values=req.getParameterValues(param);
        renderParameters.put(param,values);
      }
 else {
        values=(String[])renderParameters.get(param);
      }
      dynamicReq.setParameterValues(newParam,values);
    }
 else {
      if (!PortalUtil.isReservedParameter(param) && Validator.isNotNull(param)) {
        String[] values=null;
        if (portletFocus) {
          values=req.getParameterValues(param);
          renderParameters.put(param,values);
        }
 else {
          values=(String[])renderParameters.get(param);
        }
        dynamicReq.setParameterValues(param,values);
      }
    }
  }
  _req=dynamicReq;
  _portlet=portlet;
  _portalCtx=new PortalContextImpl();
  _portletCtx=portletCtx;
  _windowState=windowState;
  _portletMode=portletMode;
  _prefs=prefs;
  _portalSessionId=_req.getRequestedSessionId();
  _ses=new PortletSessionImpl(_req,_portletName,_portletCtx,_portalSessionId,plid);
  String userId=PortalUtil.getUserId(req);
  String remoteUser=req.getRemoteUser();
  if ((userId != null) && (remoteUser == null)) {
    _remoteUser=userId;
    _userPrincipal=new ProtectedPrincipal(userId);
  }
 else {
    _remoteUser=remoteUser;
    _userPrincipal=req.getUserPrincipal();
  }
  _locale=(Locale)_req.getSession().getAttribute(Globals.LOCALE_KEY);
  _plid=plid;
}

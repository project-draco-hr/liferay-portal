{
  ProcessBuilder processBuilder=new ProcessBuilder(arguments.toArray(new String[arguments.size()]));
  processBuilder.redirectErrorStream(true);
  Process process;
  try {
    process=processBuilder.start();
  }
 catch (  IOException e) {
    throw new ProcessException(e);
  }
  ProcessFutureTask<T> futureTask=new ProcessFutureTask<T>(process,outputConsumer);
  try {
    ExecutorService executorService=_getExecutorService();
    executorService.execute(futureTask);
    if (_log.isInfoEnabled()) {
      executorService.execute(new ProcessLogRunnable(process));
    }
    _managedProcesses.add(process);
    return futureTask;
  }
 catch (  RejectedExecutionException e) {
    process.destroy();
    throw new ProcessException("Cancelled execution because of a concurrent destroy",e);
  }
}

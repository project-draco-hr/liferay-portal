{
  List<Portlet> portlets=new ArrayList<Portlet>();
  Iterator<String> portletIdsItr=portletIds.iterator();
  String externalPortletCategory=null;
  while (portletIdsItr.hasNext()) {
    String portletId=portletIdsItr.next();
    Portlet portlet=PortletLocalServiceUtil.getPortletById(_user.getCompanyId(),portletId);
    if (portlet != null) {
      if (portlet.isSystem()) {
      }
 else       if (!portlet.isActive()) {
      }
 else       if (portlet.isInstanceable() && !_includeInstanceablePortlets) {
      }
 else       if (!portlet.isInstanceable() && _layoutTypePortlet.hasPortletId(portlet.getPortletId())) {
        portlets.add(portlet);
      }
 else       if (!portlet.hasAddPortletPermission(_user.getUserId())) {
      }
 else {
        portlets.add(portlet);
      }
      PortletApp portletApp=portlet.getPortletApp();
      if (portletApp.isWARFile() && Validator.isNull(externalPortletCategory)) {
        PortletConfig portletConfig=PortletConfigFactory.create(portlet,_servletContext);
        ResourceBundle resourceBundle=portletConfig.getResourceBundle(_user.getLocale());
        try {
          externalPortletCategory=resourceBundle.getString(portletCategory.getName());
        }
 catch (        MissingResourceException mre) {
        }
      }
    }
  }
  portlets=ListUtil.sort(portlets,new PortletTitleComparator(_user.getLocale()));
  Iterator<Portlet> portletsItr=portlets.iterator();
  for (int i=0; portletsItr.hasNext(); i++) {
    Portlet portlet=portletsItr.next();
    TreeNodeView nodeView=new TreeNodeView(++_nodeId);
    nodeView.setDepth(depth);
    if ((i + 1) == portlets.size()) {
      nodeView.setLs("1");
    }
 else {
      nodeView.setLs("0");
    }
    nodeView.setName(PortalUtil.getPortletTitle(portlet,_user));
    nodeView.setObjId(portlet.getRootPortletId());
    nodeView.setParentId(parentNodeId);
    _list.add(nodeView);
  }
}

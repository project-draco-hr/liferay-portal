{
  List portlets=new ArrayList();
  Iterator itr=portletIds.iterator();
  String externalPortletCategory=null;
  while (itr.hasNext()) {
    String portletId=(String)itr.next();
    Portlet portlet=PortletLocalServiceUtil.getPortletById(_user.getCompanyId(),portletId);
    if (portlet != null) {
      if (portlet.isSystem()) {
      }
 else       if (!portlet.isActive()) {
      }
 else       if (!portlet.isInstanceable() && _layoutTypePortlet.hasPortletId(portlet.getPortletId())) {
        portlets.add(portlet);
      }
 else       if (!portlet.hasAddPortletPermission(_user.getUserId())) {
      }
 else {
        portlets.add(portlet);
      }
      PortletApp portletApp=portlet.getPortletApp();
      if (portletApp.isWARFile() && Validator.isNull(externalPortletCategory)) {
        PortletConfig curPortletConfig=PortletConfigFactory.create(portlet,_application);
        ResourceBundle resourceBundle=curPortletConfig.getResourceBundle(_locale);
        try {
          externalPortletCategory=resourceBundle.getString(portletCategory.getName());
        }
 catch (        MissingResourceException mre) {
        }
      }
    }
  }
  Collections.sort(portlets,new PortletTitleComparator(_application,_locale));
  itr=portlets.iterator();
  for (int i=0; itr.hasNext(); i++) {
    Portlet portlet=(Portlet)itr.next();
    TreeNodeView nodeView=new TreeNodeView(++_nodeId);
    nodeView.setDepth(depth);
    nodeView.setName(PortalUtil.getPortletTitle(portlet,_application,_locale));
    nodeView.setParentId(parentNodeId);
    nodeView.setObjId(portlet.getRootPortletId());
    if ((i + 1) == portlets.size()) {
      nodeView.setLs("1");
    }
 else {
      nodeView.setLs("0");
    }
    _list.add(nodeView);
  }
}

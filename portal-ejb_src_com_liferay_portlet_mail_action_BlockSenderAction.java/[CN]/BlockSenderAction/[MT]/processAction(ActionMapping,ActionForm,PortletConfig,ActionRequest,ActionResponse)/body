{
  try {
    String folderName=req.getParameter("folder_name");
    Folder folder=MailUtil.getFolder(req,folderName);
    List blocked=new ArrayList();
    String[] msgNumbers=req.getParameterValues("msg_numbers");
    if (msgNumbers != null) {
      for (int i=0; i < msgNumbers.length; i++) {
        try {
          int msgId=Integer.parseInt(msgNumbers[i]);
          Message msg=folder.getMessage(msgId);
          InternetAddress[] from=(InternetAddress[])msg.getFrom();
          String emailAddress=from[0].getAddress();
          if (Validator.isEmailAddress(emailAddress)) {
            blocked.add(emailAddress);
          }
        }
 catch (        Exception exc) {
        }
      }
    }
    if (!blocked.isEmpty()) {
      PortletPreferences prefs=req.getPreferences();
      List list=ListUtil.fromArray(prefs.getValues("blocked",new String[0]));
      list.addAll(blocked);
      ListUtil.distinct(list);
      Collections.sort(list,new StringComparator());
      prefs.setValues("blocked",(String[])list.toArray(new String[0]));
      MailServiceUtil.updateBlocked(req.getRemoteUser(),list);
      prefs.store();
    }
    res.sendRedirect(ParamUtil.getString(req,"redirect"));
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    setForward(req,Constants.COMMON_ERROR);
  }
}

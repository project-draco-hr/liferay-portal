{
  if (!folder.isDefaultRepository()) {
    return;
  }
  List<Long> currentFolderFileEntryTypeIds=new ArrayList<Long>();
  String defaultFileEntryTypeUuid=GetterUtil.getString(folderElement.attributeValue("defaultFileEntryTypeUuid"));
  long defaultFileEntryTypeId=0;
  List<Element> referenceElements=portletDataContext.getReferenceElements(folder,DLFileEntryType.class);
  for (  Element referenceElement : referenceElements) {
    long referenceDlFileEntryTypeId=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
    String referenceDlFileEntryTypeUuid=referenceElement.attributeValue("uuid");
    Map<Long,Long> dlFileEntryTypeIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DLFileEntryType.class);
    long dlFileEntryTypeId=MapUtil.getLong(dlFileEntryTypeIds,referenceDlFileEntryTypeId,referenceDlFileEntryTypeId);
    DLFileEntryType existingDLFileEntryType=DLFileEntryTypeLocalServiceUtil.fetchDLFileEntryType(dlFileEntryTypeId);
    if (existingDLFileEntryType == null) {
      continue;
    }
    currentFolderFileEntryTypeIds.add(existingDLFileEntryType.getFileEntryTypeId());
    if (defaultFileEntryTypeUuid.equals(referenceDlFileEntryTypeUuid)) {
      defaultFileEntryTypeId=existingDLFileEntryType.getFileEntryTypeId();
    }
  }
  if (GetterUtil.getBoolean(folderElement.attributeValue("basic-document"))) {
    currentFolderFileEntryTypeIds.add(DLFileEntryTypeConstants.FILE_ENTRY_TYPE_ID_BASIC_DOCUMENT);
  }
  if (!currentFolderFileEntryTypeIds.isEmpty()) {
    DLFolder dlFolder=(DLFolder)importedFolder.getModel();
    dlFolder.setDefaultFileEntryTypeId(defaultFileEntryTypeId);
    dlFolder.setOverrideFileEntryTypes(true);
    DLFolderLocalServiceUtil.updateDLFolder(dlFolder);
    DLFileEntryTypeLocalServiceUtil.updateFolderFileEntryTypes(dlFolder,currentFolderFileEntryTypeIds,defaultFileEntryTypeId,serviceContext);
  }
}

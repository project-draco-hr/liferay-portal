{
  Element folderElement=portletDataContext.getExportDataElement(folder,Folder.class);
  String folderPath=ExportImportPathUtil.getModelPath(folder);
  Repository repository=null;
  if (folder.isMountPoint() || !folder.isDefaultRepository()) {
    repository=RepositoryLocalServiceUtil.getRepository(folder.getRepositoryId());
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,folder,Folder.class,repository,Repository.class,PortletDataContext.REFERENCE_TYPE_STRONG);
    portletDataContext.addClassedModel(folderElement,folderPath,folder);
  }
  long liferayRepositoryClassNameId=PortalUtil.getClassNameId(LiferayRepository.class.getName());
  if (((repository != null) && (repository.getClassNameId() != liferayRepositoryClassNameId)) || folder.isMountPoint()) {
    return;
  }
  if (folder.getParentFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,folder,Folder.class,folder.getParentFolder(),Folder.class,PortletDataContext.REFERENCE_TYPE_PARENT);
  }
  exportFolderFileEntryTypes(portletDataContext,folderElement,folder);
  portletDataContext.addClassedModel(folderElement,folderPath,folder,DLFolder.class);
}

{
  Element folderElement=portletDataContext.getExportDataElement(folder,Folder.class);
  String folderPath=ExportImportPathUtil.getModelPath(folder.getGroupId(),Folder.class.getName(),folder.getFolderId());
  Repository repository=null;
  if (folder.isMountPoint() || !folder.isDefaultRepository()) {
    repository=RepositoryLocalServiceUtil.getRepository(folder.getRepositoryId());
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,repository);
    portletDataContext.addReferenceElement(folder,folderElement,repository,PortletDataContext.REFERENCE_TYPE_STRONG,false);
    portletDataContext.addClassedModel(folderElement,folderPath,folder,DLPortletDataHandler.NAMESPACE);
  }
  long liferayRepositoryClassNameId=PortalUtil.getClassNameId(LiferayRepository.class.getName());
  if (((repository != null) && (repository.getClassNameId() != liferayRepositoryClassNameId)) || folder.isMountPoint()) {
    return;
  }
  if (folder.getParentFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,folder.getParentFolder());
  }
  exportFolderFileEntryTypes(portletDataContext,folder,folderElement);
  portletDataContext.addClassedModel(folderElement,folderPath,folder,DLPortletDataHandler.NAMESPACE);
}

{
  long userId=portletDataContext.getUserId(folder.getUserUuid());
  String path=ExportImportPathUtil.getModelPath(portletDataContext,Folder.class.getName(),folder.getFolderId());
  Element folderElement=portletDataContext.getImportDataElement(Folder.class.getSimpleName(),"path",path);
  if (folder.getParentFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,folder,Folder.class,folder.getParentFolderId());
  }
  Map<Long,Long> folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Folder.class);
  long parentFolderId=MapUtil.getLong(folderIds,folder.getParentFolderId(),folder.getParentFolderId());
  ServiceContext serviceContext=portletDataContext.createServiceContext(folder,DLFolder.class);
  serviceContext.setUserId(userId);
  Folder importedFolder=null;
  if (portletDataContext.isDataStrategyMirror()) {
    Folder existingFolder=FolderUtil.fetchByUUID_R(folder.getUuid(),portletDataContext.getScopeGroupId());
    if (existingFolder == null) {
      String name=getFolderName(null,portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
      serviceContext.setUuid(folder.getUuid());
      importedFolder=DLAppLocalServiceUtil.addFolder(userId,portletDataContext.getScopeGroupId(),parentFolderId,name,folder.getDescription(),serviceContext);
    }
 else {
      String name=getFolderName(folder.getUuid(),portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
      importedFolder=DLAppLocalServiceUtil.updateFolder(existingFolder.getFolderId(),parentFolderId,name,folder.getDescription(),serviceContext);
    }
  }
 else {
    String name=getFolderName(null,portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
    importedFolder=DLAppLocalServiceUtil.addFolder(userId,portletDataContext.getScopeGroupId(),parentFolderId,name,folder.getDescription(),serviceContext);
  }
  importFolderFileEntryTypes(portletDataContext,folderElement,folder,serviceContext);
  portletDataContext.importClassedModel(folder,importedFolder,DLFolder.class);
  folderIds.put(folder.getFolderId(),importedFolder.getFolderId());
}

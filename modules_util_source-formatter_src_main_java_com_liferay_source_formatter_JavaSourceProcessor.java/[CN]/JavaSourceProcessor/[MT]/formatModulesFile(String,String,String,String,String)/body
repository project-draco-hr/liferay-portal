{
  if (fileName.endsWith("Test.java")) {
    if (absolutePath.contains("/src/testIntegration/java/") || absolutePath.contains("/test/integration/")) {
      if (content.contains("@RunWith(Arquillian.class)") && content.contains("import org.powermock.")) {
        processErrorMessage(fileName,"Do not use PowerMock inside Arquillian tests: " + fileName);
      }
      if (!packagePath.endsWith(".test")) {
        processErrorMessage(fileName,"Module integration test must be under a test " + "subpackage" + fileName);
      }
    }
 else     if ((absolutePath.contains("/test/unit/") || absolutePath.contains("/src/test/java/")) && packagePath.endsWith(".test")) {
      processErrorMessage(fileName,"Module unit test should not be under a test subpackage" + fileName);
    }
  }
  if (content.contains("ProxyFactory.newServiceTrackedInstance(")) {
    processErrorMessage(fileName,"Do not use ProxyFactory.newServiceTrackedInstance in " + "modules: " + fileName);
  }
  if (content.contains("@Component")) {
    content=formatOSGIComponents(fileName,absolutePath,content,className,packagePath);
  }
  if (!absolutePath.contains("/modules/core/jaxws-osgi-bridge") && !absolutePath.contains("/modules/core/portal-bootstrap") && !absolutePath.contains("/modules/core/registry-")&& !absolutePath.contains("/test/")&& !absolutePath.contains("/testIntegration/")) {
    Matcher matcher=_registryImportPattern.matcher(content);
    if (matcher.find()) {
      processErrorMessage(fileName,"Do not use com.liferay.registry classes in modules: " + fileName);
    }
  }
  if (!absolutePath.contains("/test/") && content.contains("@Meta.OCD") && !content.contains("@ExtendedObjectClassDefinition")) {
    processErrorMessage(fileName,"Specify category using @ExtendedObjectClassDefinition: " + fileName);
  }
  if (content.contains("import com.liferay.util.dao.orm.CustomSQLUtil")) {
    processErrorMessage(fileName,"Do not use com.liferay.util.dao.orm.CustomSQLUtil in " + "modules: " + fileName);
  }
  if (content.contains("import com.liferay.util.ContentUtil")) {
    processErrorMessage(fileName,"Do not use com.liferay.util.ContentUtil in modules:" + fileName);
  }
  return content;
}

{
  if (!fileName.endsWith("Test.java")) {
    return content;
  }
  Matcher matcher=_assertEqualsPattern.matcher(content);
  while (matcher.find()) {
    String parameters=StringUtil.trim(matcher.group(1));
    List<String> parametersList=splitParameters(parameters);
    if (parametersList.size() != 2) {
      continue;
    }
    String actualParameter=parametersList.get(1);
    String strippedQuotesActualParameter=stripQuotes(actualParameter);
    if (!actualParameter.startsWith("expected") && !Validator.isDigit(actualParameter) && Validator.isNotNull(strippedQuotesActualParameter)) {
      continue;
    }
    String assertEquals=matcher.group();
    String expectedParameter=parametersList.get(0);
    String newAssertEquals=StringUtil.replaceFirst(assertEquals,expectedParameter,actualParameter,assertEquals.indexOf(CharPool.OPEN_PARENTHESIS));
    newAssertEquals=StringUtil.replaceLast(newAssertEquals,actualParameter,expectedParameter);
    return StringUtil.replace(content,assertEquals,newAssertEquals);
  }
  return content;
}

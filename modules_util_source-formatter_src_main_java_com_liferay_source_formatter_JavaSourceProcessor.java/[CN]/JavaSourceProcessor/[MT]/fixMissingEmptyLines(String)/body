{
  Matcher matcher=_missingEmptyLinePattern1.matcher(content);
  while (matcher.find()) {
    if (getLevel(matcher.group()) == 0) {
      content=StringUtil.replaceFirst(content,"\n","\n\n",matcher.start());
    }
  }
  matcher=_missingEmptyLinePattern2.matcher(content);
  while (matcher.find()) {
    String match=matcher.group();
    if (!match.contains(StringPool.OPEN_PARENTHESIS)) {
      continue;
    }
    String whitespace=matcher.group(1);
    int x=content.indexOf(whitespace + StringPool.CLOSE_CURLY_BRACE + "\n",matcher.end());
    int y=content.indexOf(whitespace + StringPool.CLOSE_CURLY_BRACE + "\n\n",matcher.end());
    if ((x != -1) && (x != y)) {
      content=StringUtil.replaceFirst(content,"\n","\n\n",x + 1);
    }
  }
  return content;
}

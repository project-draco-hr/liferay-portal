{
  Matcher matcher=_setVariablePattern.matcher(content);
  while (matcher.find()) {
    if (content.charAt(matcher.end()) == CharPool.NEW_LINE) {
      continue;
    }
    int x=content.indexOf(";\n",matcher.end());
    if (x == -1) {
      return content;
    }
    String nextCommand=content.substring(matcher.end() - 1,x + 1);
    if (nextCommand.contains("{\n")) {
      continue;
    }
    String variableName=matcher.group(1);
    Pattern pattern2=Pattern.compile("\\W(" + variableName + ")\\.");
    Matcher matcher2=pattern2.matcher(nextCommand);
    if (!matcher2.find()) {
      continue;
    }
    x=matcher2.start(1);
    if (ToolsUtil.isInsideQuotes(nextCommand,x)) {
      continue;
    }
    x+=matcher.end();
    int y=content.lastIndexOf("\ttry (",x);
    if (y != -1) {
      int z=content.indexOf(") {\n",y);
      if (z > x) {
        continue;
      }
    }
    return StringUtil.replaceFirst(content,"\n","\n\n",matcher.end(2));
  }
  return content;
}

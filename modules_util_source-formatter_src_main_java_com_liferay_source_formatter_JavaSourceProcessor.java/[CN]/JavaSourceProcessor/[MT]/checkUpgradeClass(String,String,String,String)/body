{
  if (!fileName.contains("/upgrade/")) {
    return;
  }
  int pos=content.indexOf("LocaleUtil.getDefault()");
  if (pos != -1) {
    processMessage(fileName,"Use UpgradeProcessUtil.getDefaultLanguageId(companyId) " + "instead of LocaleUtil.getDefault()",getLineCount(content,pos));
  }
  pos=content.indexOf("rs.getDate(");
  if (pos != -1) {
    processMessage(fileName,"Use rs.getTimeStamp",getLineCount(content,pos));
  }
  if (portalSource && !isExcludedPath(_upgradeServiceUtilExcludes,absolutePath) && fileName.contains("/portal/upgrade/")&& !fileName.contains("/test/")&& !fileName.contains("/testIntegration/")) {
    pos=content.indexOf("ServiceUtil.");
    if (pos != -1) {
      processMessage(fileName,"ServiceUtil",getLineCount(content,pos));
    }
  }
  if (!fileName.endsWith("Upgrade.java")) {
    return;
  }
  if (content.contains("implements UpgradeStepRegistrator")) {
    Matcher matcher=_componentAnnotationPattern.matcher(content);
    if (matcher.find()) {
      String componentAnnotation=matcher.group();
      if (!componentAnnotation.contains("service =")) {
        processMessage(fileName,"Missing service in @Component");
      }
    }
  }
  Matcher matcher1=_registryRegisterPattern.matcher(content);
  while (matcher1.find()) {
    List<String> parametersList=getParameterList(content.substring(matcher1.start()));
    if (parametersList.size() <= 4) {
      continue;
    }
    String previousUpgradeClassName=null;
    for (int i=3; i < parametersList.size(); i++) {
      String parameter=parametersList.get(i);
      Matcher matcher2=_upgradeClassNamePattern.matcher(parameter);
      if (!matcher2.find()) {
        break;
      }
      String upgradeClassName=matcher2.group(1);
      if ((previousUpgradeClassName != null) && (previousUpgradeClassName.compareTo(upgradeClassName) > 0)) {
        processMessage(fileName,"LPS-65685: Break up Upgrade classes with a minor " + "version increment or order alphabetically",getLineCount(content,matcher1.start()));
        break;
      }
      previousUpgradeClassName=upgradeClassName;
    }
  }
}

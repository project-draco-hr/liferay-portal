{
  for (  Pattern vulnerabilityPattern : _javaSerializationVulnerabilityPatterns) {
    Matcher matcher=vulnerabilityPattern.matcher(content);
    if (!matcher.matches()) {
      continue;
    }
    StringBundler sb=new StringBundler(5);
    if (isRunOutsidePortalExclusion) {
      sb.append("Possible Java Serialization Remote Code Execution");
      sb.append(" vulnerablity using ");
    }
 else {
      sb.append("Use ProtectedObjectInputStream");
      sb.append(" instead of ");
    }
    sb.append(matcher.group(1));
    sb.append(": ");
    sb.append(fileName);
    processErrorMessage(fileName,sb.toString());
  }
}

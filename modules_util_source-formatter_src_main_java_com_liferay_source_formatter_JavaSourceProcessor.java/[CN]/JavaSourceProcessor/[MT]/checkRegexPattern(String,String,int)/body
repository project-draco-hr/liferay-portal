{
  int i=regexPattern.indexOf("Pattern.compile(");
  if (i == -1) {
    return;
  }
  regexPattern=regexPattern.substring(i + 16);
  regexPattern=stripQuotes(regexPattern,CharPool.QUOTE);
  i=regexPattern.indexOf(CharPool.COMMA);
  if (i != -1) {
    regexPattern=regexPattern.substring(0,i);
  }
 else {
    regexPattern=StringUtil.replaceLast(regexPattern,");",StringPool.BLANK);
  }
  regexPattern=StringUtil.replace(regexPattern,StringPool.PLUS,StringPool.BLANK);
  if (Validator.isNull(regexPattern)) {
    processErrorMessage(fileName,"create pattern as global var: " + fileName + " "+ lineCount);
  }
}

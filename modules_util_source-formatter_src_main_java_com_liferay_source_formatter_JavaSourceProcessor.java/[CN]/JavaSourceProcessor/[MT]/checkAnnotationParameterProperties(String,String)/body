{
  int x=annotation.indexOf("property = {");
  if (x == -1) {
    return content;
  }
  int y=x;
  while (true) {
    y=annotation.indexOf(CharPool.CLOSE_CURLY_BRACE,y + 1);
    if (!ToolsUtil.isInsideQuotes(annotation,y)) {
      break;
    }
  }
  String parameterProperties=annotation.substring(x + 12,y);
  parameterProperties=StringUtil.replace(parameterProperties,StringPool.NEW_LINE,StringPool.SPACE);
  String[] parameterPropertiesArray=StringUtil.split(parameterProperties,StringPool.COMMA_AND_SPACE);
  String previousPropertyName=null;
  String previousPropertyNameAndValue=null;
  for (  String parameterProperty : parameterPropertiesArray) {
    x=parameterProperty.indexOf(CharPool.QUOTE);
    y=parameterProperty.indexOf(CharPool.EQUAL,x);
    int z=x;
    while (true) {
      z=parameterProperty.indexOf(CharPool.QUOTE,z + 1);
      if ((z == -1) || !ToolsUtil.isInsideQuotes(parameterProperty,z)) {
        break;
      }
    }
    if ((x == -1) || (y == -1) || (z == -1)) {
      return content;
    }
    String propertyName=parameterProperty.substring(x + 1,y);
    String propertyNameAndValue=parameterProperty.substring(x + 1,z);
    if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) {
      content=StringUtil.replaceFirst(content,previousPropertyNameAndValue,propertyNameAndValue);
      content=StringUtil.replaceLast(content,propertyNameAndValue,previousPropertyNameAndValue);
      return content;
    }
    previousPropertyName=propertyName;
    previousPropertyNameAndValue=propertyNameAndValue;
  }
  return content;
}

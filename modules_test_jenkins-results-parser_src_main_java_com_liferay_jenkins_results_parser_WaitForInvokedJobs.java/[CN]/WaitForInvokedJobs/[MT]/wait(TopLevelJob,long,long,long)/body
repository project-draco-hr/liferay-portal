{
  long startTime=System.currentTimeMillis();
  while (true) {
    for (    DownstreamJob downstreamJob : topLevelJob.getDownstreamJobs()) {
      downstreamJob.update();
    }
    System.out.print(topLevelJob.getDownstreamJobCount("completed"));
    System.out.print(" Completed / ");
    System.out.print(topLevelJob.getDownstreamJobCount("running"));
    System.out.print(" Running / ");
    System.out.print(topLevelJob.getDownstreamJobCount("queued"));
    System.out.print(" Queued / ");
    System.out.print(topLevelJob.getDownstreamJobCount("starting"));
    System.out.print(" Starting / ");
    System.out.print(topLevelJob.getDownstreamJobCount());
    System.out.println(" Total");
    long elapsedTime=System.currentTimeMillis() - startTime;
    if ((elapsedTime > maxStartingTime) && (topLevelJob.getDownstreamJobCount("starting") > 0)) {
      throw new TimeoutException("Unable to find downstream job");
    }
 else     if ((elapsedTime > maxWaitTime) && (topLevelJob.getDownstreamJobCount("completed") < topLevelJob.getDownstreamJobCount())) {
      throw new TimeoutException("Downstream job timeout");
    }
 else     if (topLevelJob.getDownstreamJobCount("completed") == topLevelJob.getDownstreamJobCount()) {
      break;
    }
 else {
      Thread.sleep(updatePeriod);
    }
  }
}

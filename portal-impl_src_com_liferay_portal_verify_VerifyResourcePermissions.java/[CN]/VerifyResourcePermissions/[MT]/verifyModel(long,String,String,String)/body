{
  Role role=RoleLocalServiceUtil.getRole(companyId,RoleConstants.OWNER);
  long hasOwnerIdCount=getHasOwnerIdCount(name,role);
  if (hasOwnerIdCount > 0) {
    return;
  }
  long noOwnerIdCount=getNoOwnerIdCount(name,role);
  if (noOwnerIdCount == 0) {
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Processing " + noOwnerIdCount + " resource permissions for "+ name);
  }
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    ps=con.prepareStatement("select " + pkColumnName + ", userId AS ownerId "+ "from "+ modelName+ " where companyId = "+ companyId);
    rs=ps.executeQuery();
    while (rs.next()) {
      long primKey=rs.getLong(pkColumnName);
      long ownerId=rs.getLong("ownerId");
      verifyModel(companyId,name,primKey,role,ownerId);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

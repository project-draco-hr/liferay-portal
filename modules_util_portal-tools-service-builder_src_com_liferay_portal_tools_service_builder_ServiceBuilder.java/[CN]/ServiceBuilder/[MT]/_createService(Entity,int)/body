{
  Set<String> imports=new HashSet<>();
  JavaClass javaClass=_getJavaClass(_outputPath + "/service/impl/" + entity.getName()+ _getSessionTypeName(sessionType)+ "ServiceImpl.java");
  JavaSource javaSource=javaClass.getSource();
  imports.addAll(Arrays.asList(javaSource.getImports()));
  JavaMethod[] methods=_getMethods(javaClass);
  Type superClass=javaClass.getSuperClass();
  String superClassValue=superClass.getValue();
  if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) {
    JavaClass parentJavaClass=_getJavaClass(_outputPath + "/service/base/" + entity.getName()+ _getSessionTypeName(sessionType)+ "ServiceBaseImpl.java");
    JavaSource parentJavaSource=parentJavaClass.getSource();
    imports.addAll(Arrays.asList(parentJavaSource.getImports()));
    methods=_mergeMethods(methods,parentJavaClass.getMethods(),true);
  }
  Map<String,Object> context=_getContext();
  context.put("entity",entity);
  context.put("imports",imports);
  context.put("methods",methods);
  context.put("sessionTypeName",_getSessionTypeName(sessionType));
  context=_putDeprecatedKeys(context,javaClass);
  String content=_processTemplate(_tplService,context);
  File ejbFile=new File(_serviceOutputPath + "/service/" + entity.getName()+ _getSessionTypeName(sessionType)+ "Service.java");
  writeFile(ejbFile,content,_author,_modifiedFileNames);
}

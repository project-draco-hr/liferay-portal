{
  JavaClass modelImplJavaClass=_getJavaClass(_outputPath + "/model/impl/" + entity.getName()+ "Impl.java");
  List<JavaMethod> methods=ListUtil.fromArray(_getMethods(modelImplJavaClass));
  Iterator<JavaMethod> itr=methods.iterator();
  while (itr.hasNext()) {
    JavaMethod method=itr.next();
    String methodName=method.getName();
    if (methodName.equals("getStagedModelType")) {
      itr.remove();
    }
  }
  JavaClass modelJavaClass=_getJavaClass(_serviceOutputPath + "/model/" + entity.getName()+ "Model.java");
  for (  JavaMethod method : _getMethods(modelJavaClass)) {
    methods.remove(method);
  }
  Map<String,Object> context=_getContext();
  context.put("entity",entity);
  context.put("methods",methods.toArray(new Object[methods.size()]));
  context=_putDeprecatedKeys(context,modelJavaClass);
  String content=_processTemplate(_tplExtendedModel,context);
  File modelFile=new File(_serviceOutputPath + "/model/" + entity.getName()+ ".java");
  ToolsUtil.writeFile(modelFile,content,_author,_modifiedFileNames);
}

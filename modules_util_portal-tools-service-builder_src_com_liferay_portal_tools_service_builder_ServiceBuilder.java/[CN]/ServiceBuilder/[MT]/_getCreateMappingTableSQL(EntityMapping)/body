{
  Entity[] entities=new Entity[2];
  for (int i=0; i < entities.length; i++) {
    entities[i]=getEntity(entityMapping.getEntity(i));
    if (entities[i] == null) {
      return null;
    }
  }
  Arrays.sort(entities,new Comparator<Entity>(){
    @Override public int compare(    Entity entity1,    Entity entity2){
      String name1=entity1.getName();
      String name2=entity2.getName();
      return name1.compareTo(name2);
    }
  }
);
  StringBundler sb=new StringBundler();
  sb.append(_SQL_CREATE_TABLE);
  sb.append(entityMapping.getTable());
  sb.append(" (\n");
  for (  Entity entity : entities) {
    List<EntityColumn> pkList=entity.getPKList();
    for (int i=0; i < pkList.size(); i++) {
      EntityColumn col=pkList.get(i);
      String colName=col.getName();
      String colType=col.getType();
      sb.append("\t");
      sb.append(col.getDBName());
      sb.append(" ");
      if (StringUtil.equalsIgnoreCase(colType,"boolean")) {
        sb.append("BOOLEAN");
      }
 else       if (StringUtil.equalsIgnoreCase(colType,"double") || StringUtil.equalsIgnoreCase(colType,"float")) {
        sb.append("DOUBLE");
      }
 else       if (colType.equals("int") || colType.equals("Integer") || StringUtil.equalsIgnoreCase(colType,"short")) {
        sb.append("INTEGER");
      }
 else       if (StringUtil.equalsIgnoreCase(colType,"long")) {
        sb.append("LONG");
      }
 else       if (colType.equals("Map")) {
        sb.append("TEXT");
      }
 else       if (colType.equals("String")) {
        int maxLength=getMaxLength(_packagePath + ".model." + entity.getName(),colName);
        if (col.isLocalized()) {
          maxLength=4000;
        }
        if (maxLength < 4000) {
          sb.append("VARCHAR(");
          sb.append(maxLength);
          sb.append(")");
        }
 else         if (maxLength == 4000) {
          sb.append("STRING");
        }
 else         if (maxLength > 4000) {
          sb.append("TEXT");
        }
      }
 else       if (colType.equals("Date")) {
        sb.append("DATE");
      }
 else {
        sb.append("invalid");
      }
      if (col.isPrimary()) {
        sb.append(" not null");
      }
 else       if (colType.equals("Date") || colType.equals("Map") || colType.equals("String")) {
        sb.append(" null");
      }
      sb.append(",\n");
    }
  }
  sb.append("\tprimary key (");
  for (int i=0; i < entities.length; i++) {
    Entity entity=entities[i];
    List<EntityColumn> pkList=entity.getPKList();
    for (int j=0; j < pkList.size(); j++) {
      EntityColumn col=pkList.get(j);
      String colDBName=col.getDBName();
      if ((i != 0) || (j != 0)) {
        sb.append(", ");
      }
      sb.append(colDBName);
    }
  }
  sb.append(")\n");
  sb.append(");");
  return sb.toString();
}

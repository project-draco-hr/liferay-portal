{
  if (_packagePath.equals("com.liferay.counter")) {
    return;
  }
  Map<String,Object> context=_getContext();
  context.put("entities",_ejbList);
  String content=_processTemplate(_tplSpringXml,context);
  File xmlFile=new File(_springFileName);
  String xml="<?xml version=\"1.0\"?>\n" + "\n" + "<beans\n"+ "\tdefault-destroy-method=\"destroy\"\n"+ "\tdefault-init-method=\"afterPropertiesSet\"\n" + _getSpringNamespacesDeclarations() + "\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ "\txsi:schemaLocation=\""+ _getSpringSchemaLocations()+ "\">\n"+ "</beans>";
  if (!xmlFile.exists()) {
    FileUtils.write(xmlFile,xml);
  }
  String oldContent=FileUtils.readFileToString(xmlFile);
  if (Validator.isNotNull(_pluginName) && oldContent.contains("DOCTYPE beans PUBLIC")) {
    oldContent=xml;
  }
  String newContent=_fixSpringXml(oldContent);
  int x=oldContent.indexOf("<beans");
  int y=oldContent.lastIndexOf("</beans>");
  int firstSession=newContent.indexOf("<bean id=\"" + _packagePath + ".service.",x);
  int lastSession=newContent.lastIndexOf("<bean id=\"" + _packagePath + ".service.",y);
  if ((firstSession == -1) || (firstSession > y)) {
    x=newContent.indexOf("</beans>");
    newContent=newContent.substring(0,x) + content + newContent.substring(x);
  }
 else {
    firstSession=newContent.lastIndexOf("<bean",firstSession) - 1;
    int tempLastSession=newContent.indexOf("<bean id=\"",lastSession + 1);
    if (tempLastSession == -1) {
      tempLastSession=newContent.indexOf("</beans>",lastSession);
    }
    lastSession=tempLastSession;
    newContent=newContent.substring(0,firstSession) + content + newContent.substring(lastSession);
  }
  writeFileRaw(xmlFile,_formatXml(newContent));
}

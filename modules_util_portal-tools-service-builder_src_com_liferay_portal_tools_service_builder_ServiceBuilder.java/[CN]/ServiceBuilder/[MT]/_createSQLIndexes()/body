{
  File sqlDir=new File(_sqlDirName);
  if (!sqlDir.exists()) {
    return;
  }
  File sqlFile=new File(_sqlDirName + "/" + _sqlIndexesFileName);
  if (!sqlFile.exists()) {
    _touch(sqlFile);
  }
  Map<String,List<IndexMetadata>> indexMetadataMap=new TreeMap<>();
  try (UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new FileReader(sqlFile))){
    while (true) {
      String indexSQL=unsyncBufferedReader.readLine();
      if (indexSQL == null) {
        break;
      }
      indexSQL=indexSQL.trim();
      if (Validator.isNull(indexSQL)) {
        continue;
      }
      IndexMetadata indexMetadata=IndexMetadataFactoryUtil.createIndexMetadata(indexSQL);
      _addIndexMetadata(indexMetadataMap,indexMetadata.getTableName(),indexMetadata);
    }
  }
   for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=_ejbList.get(i);
    if (!_isTargetEntity(entity)) {
      continue;
    }
    if (!entity.isDefaultDataSource()) {
      continue;
    }
    List<EntityFinder> finderList=entity.getFinderList();
    for (int j=0; j < finderList.size(); j++) {
      EntityFinder finder=finderList.get(j);
      if (finder.isDBIndex()) {
        List<String> finderColsNames=new ArrayList<>();
        List<EntityColumn> finderColsList=finder.getColumns();
        for (int k=0; k < finderColsList.size(); k++) {
          EntityColumn col=finderColsList.get(k);
          finderColsNames.add(col.getDBName());
        }
        if (finderColsNames.isEmpty()) {
          continue;
        }
        IndexMetadata indexMetadata=IndexMetadataFactoryUtil.createIndexMetadata(finder.isUnique(),entity.getTable(),finderColsNames.toArray(new String[finderColsNames.size()]));
        _addIndexMetadata(indexMetadataMap,indexMetadata.getTableName(),indexMetadata);
      }
    }
  }
  for (  Map.Entry<String,EntityMapping> entry : _entityMappings.entrySet()) {
    EntityMapping entityMapping=entry.getValue();
    _getCreateMappingTableIndex(entityMapping,indexMetadataMap);
  }
  StringBundler sb=new StringBundler();
  for (  List<IndexMetadata> indexMetadataList : indexMetadataMap.values()) {
    Collections.sort(indexMetadataList);
    for (    IndexMetadata indexMetadata : indexMetadataList) {
      sb.append(indexMetadata.getCreateSQL());
      sb.append(StringPool.NEW_LINE);
    }
    sb.append(StringPool.NEW_LINE);
  }
  if (!indexMetadataMap.isEmpty()) {
    sb.setIndex(sb.index() - 2);
  }
  writeFileRaw(sqlFile,sb.toString(),_modifiedFileNames);
  File file=new File(_sqlDirName,"indexes.properties");
  file.delete();
}

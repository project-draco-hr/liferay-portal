{
  Group group=GroupLocalServiceUtil.getGroup(portletDataContext.getScopeGroupId());
  StringBuilder sb=new StringBuilder(content);
  String[] patterns={"href=","[["};
  int beginPos=-1;
  int endPos=content.length();
  int offset=0;
  while (true) {
    beginPos=StringUtil.lastIndexOfAny(content,patterns,endPos);
    if (beginPos == -1) {
      break;
    }
    if (content.startsWith("href=",beginPos)) {
      offset=5;
      char c=content.charAt(beginPos + offset);
      if ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {
        offset++;
      }
    }
 else     if (content.charAt(beginPos) == CharPool.OPEN_BRACKET) {
      offset=2;
    }
    endPos=StringUtil.indexOfAny(content,_LAYOUT_REFERENCE_STOP_CHARS,beginPos + offset,endPos);
    if (endPos == -1) {
      endPos=beginPos - 1;
      continue;
    }
    String url=content.substring(beginPos + offset,endPos);
    String servletMapping=null;
    String servletMappingParam=null;
    if (url.startsWith(PortalUtil.getPathFriendlyURLPrivateGroup())) {
      servletMapping=PortalUtil.getPathFriendlyURLPrivateGroup();
      servletMappingParam="@data_handler_private_group_servlet_mapping@";
    }
 else     if (url.startsWith(PortalUtil.getPathFriendlyURLPrivateUser())) {
      servletMapping=PortalUtil.getPathFriendlyURLPrivateUser();
      servletMappingParam="@data_handler_private_user_servlet_mapping@";
    }
 else     if (url.startsWith(PortalUtil.getPathFriendlyURLPublic())) {
      servletMapping=PortalUtil.getPathFriendlyURLPublic();
      servletMappingParam="@data_handler_public_servlet_mapping@";
    }
 else {
      endPos=beginPos - 1;
      continue;
    }
    int beginGroupPos=beginPos + offset + servletMapping.length();
    if (content.charAt(beginGroupPos) == CharPool.SLASH) {
      int endGroupPos=url.indexOf(CharPool.SLASH,servletMapping.length() + 1);
      if (endGroupPos == -1) {
        endGroupPos=endPos;
      }
 else {
        endGroupPos=endGroupPos + beginPos + offset;
      }
      String groupFriendlyURL=content.substring(beginGroupPos,endGroupPos);
      if (groupFriendlyURL.equals(group.getFriendlyURL())) {
        sb.replace(beginGroupPos,endGroupPos,"@data_handler_group_friendly_url@");
      }
    }
    sb.replace(beginPos + offset,beginGroupPos,servletMappingParam);
    endPos=beginPos - 1;
  }
  return sb.toString();
}

{
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  String userIdStrategy=MapUtil.getString(parameterMap,PortletDataHandlerKeys.USER_ID_STRATEGY);
  ZipReader zipReader=ZipReaderFactoryUtil.getZipReader(file);
  PortletDataContext portletDataContext=PortletDataContextFactoryUtil.createImportPortletDataContext(group.getCompanyId(),groupId,parameterMap,getUserIdStrategy(userId,userIdStrategy),zipReader);
  final ManifestSummary manifestSummary=new ManifestSummary();
  SAXParser saxParser=new SAXParser();
  ElementHandler elementHandler=new ElementHandler(new ElementProcessor(){
    @Override public void processElement(    Element element){
      String className=element.attributeValue("class-name");
      long count=GetterUtil.getLong(element.getText());
      manifestSummary.addModelCount(className,count);
    }
  }
,new String[]{"staged-model"});
  saxParser.setContentHandler(elementHandler);
  InputStream is=portletDataContext.getZipEntryAsInputStream("/manifest.xml");
  if (is == null) {
    throw new LARFileException("manifest.xml not found in the LAR");
  }
  saxParser.parse(new InputSource(is));
  return manifestSummary;
}

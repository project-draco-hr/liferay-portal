{
  Long classNameId=(Long)searchContext.getAttribute(Field.CLASS_NAME_ID);
  if ((classNameId != null) && (classNameId.longValue() != 0)) {
    contextQuery.addRequiredTerm("classNameId",classNameId.toString());
  }
  int status=GetterUtil.getInteger(searchContext.getAttribute(Field.STATUS),WorkflowConstants.STATUS_APPROVED);
  if (status != WorkflowConstants.STATUS_ANY) {
    contextQuery.addRequiredTerm(Field.STATUS,status);
  }
  long[] folderIds=searchContext.getFolderIds();
  if ((folderIds != null) && (folderIds.length > 0)) {
    if (folderIds[0] == JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      return;
    }
    BooleanQuery folderIdsQuery=BooleanQueryFactoryUtil.create(searchContext);
    for (    long folderId : folderIds) {
      try {
        JournalFolderServiceUtil.getFolder(folderId);
      }
 catch (      Exception e) {
        continue;
      }
      folderIdsQuery.addTerm(Field.FOLDER_ID,folderId);
    }
    contextQuery.add(folderIdsQuery,BooleanClauseOccur.MUST);
  }
  String articleType=(String)searchContext.getAttribute("articleType");
  if (Validator.isNotNull(articleType)) {
    contextQuery.addRequiredTerm(Field.TYPE,articleType);
  }
  String ddmStructureKey=(String)searchContext.getAttribute("ddmStructureKey");
  if (Validator.isNotNull(ddmStructureKey)) {
    contextQuery.addRequiredTerm("ddmStructureKey",ddmStructureKey);
  }
  String ddmTemplateKey=(String)searchContext.getAttribute("ddmTemplateKey");
  if (Validator.isNotNull(ddmTemplateKey)) {
    contextQuery.addRequiredTerm("ddmTemplateKey",ddmTemplateKey);
  }
}

{
  long pk=nextLong();
  MBCategory newMBCategory=_persistence.create(pk);
  newMBCategory.setUuid(randomString());
  newMBCategory.setGroupId(nextLong());
  newMBCategory.setCompanyId(nextLong());
  newMBCategory.setUserId(nextLong());
  newMBCategory.setUserName(randomString());
  newMBCategory.setCreateDate(nextDate());
  newMBCategory.setModifiedDate(nextDate());
  newMBCategory.setParentCategoryId(nextLong());
  newMBCategory.setName(randomString());
  newMBCategory.setDescription(randomString());
  newMBCategory.setLastPostDate(nextDate());
  _persistence.update(newMBCategory,false);
  MBCategory existingMBCategory=_persistence.findByPrimaryKey(newMBCategory.getPrimaryKey());
  assertEquals(existingMBCategory.getUuid(),newMBCategory.getUuid());
  assertEquals(existingMBCategory.getCategoryId(),newMBCategory.getCategoryId());
  assertEquals(existingMBCategory.getGroupId(),newMBCategory.getGroupId());
  assertEquals(existingMBCategory.getCompanyId(),newMBCategory.getCompanyId());
  assertEquals(existingMBCategory.getUserId(),newMBCategory.getUserId());
  assertEquals(existingMBCategory.getUserName(),newMBCategory.getUserName());
  assertEquals(Time.getShortTimestamp(existingMBCategory.getCreateDate()),Time.getShortTimestamp(newMBCategory.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingMBCategory.getModifiedDate()),Time.getShortTimestamp(newMBCategory.getModifiedDate()));
  assertEquals(existingMBCategory.getParentCategoryId(),newMBCategory.getParentCategoryId());
  assertEquals(existingMBCategory.getName(),newMBCategory.getName());
  assertEquals(existingMBCategory.getDescription(),newMBCategory.getDescription());
  assertEquals(Time.getShortTimestamp(existingMBCategory.getLastPostDate()),Time.getShortTimestamp(newMBCategory.getLastPostDate()));
}

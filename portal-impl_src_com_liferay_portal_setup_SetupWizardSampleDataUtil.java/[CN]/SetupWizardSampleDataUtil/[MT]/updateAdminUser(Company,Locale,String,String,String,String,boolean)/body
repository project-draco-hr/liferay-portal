{
  ScreenNameGenerator screenNameGenerator=ScreenNameGeneratorFactory.getInstance();
  String screenName=GetterUtil.getString(PropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS_PREFIX,"test");
  try {
    screenName=screenNameGenerator.generate(0,0,emailAddress);
  }
 catch (  Exception e) {
  }
  User adminUser=UserLocalServiceUtil.fetchUserByEmailAddress(company.getCompanyId(),emailAddress);
  if (adminUser != null) {
    FullNameGenerator fullNameGenerator=FullNameGeneratorFactory.getInstance();
    String fullName=fullNameGenerator.getFullName(firstName,null,lastName);
    String greeting=LanguageUtil.format(locale,"welcome-x",fullName,false);
    Contact contact=adminUser.getContact();
    Calendar birthdayCal=CalendarFactoryUtil.getCalendar();
    birthdayCal.setTime(contact.getBirthday());
    int birthdayMonth=birthdayCal.get(Calendar.MONTH);
    int birthdayDay=birthdayCal.get(Calendar.DAY_OF_MONTH);
    int birthdayYear=birthdayCal.get(Calendar.YEAR);
    adminUser=UserLocalServiceUtil.updateUser(adminUser.getUserId(),StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,false,adminUser.getReminderQueryQuestion(),adminUser.getReminderQueryAnswer(),screenName,emailAddress,adminUser.getFacebookId(),adminUser.getOpenId(),false,null,languageId,adminUser.getTimeZoneId(),greeting,adminUser.getComments(),firstName,adminUser.getMiddleName(),lastName,contact.getPrefixId(),contact.getSuffixId(),contact.isMale(),birthdayMonth,birthdayDay,birthdayYear,contact.getSmsSn(),contact.getFacebookSn(),contact.getJabberSn(),contact.getSkypeSn(),contact.getTwitterSn(),contact.getJobTitle(),null,null,null,null,null,new ServiceContext());
  }
 else {
    UserLocalServiceUtil.addDefaultAdminUser(company.getCompanyId(),screenName,emailAddress,locale,firstName,StringPool.BLANK,lastName);
    adminUser=UserLocalServiceUtil.getUserByEmailAddress(company.getCompanyId(),emailAddress);
    String defaultAdminEmailAddress=PropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS_PREFIX + "@" + PropsValues.COMPANY_DEFAULT_WEB_ID;
    if (!emailAddress.equals(defaultAdminEmailAddress)) {
      User user=UserLocalServiceUtil.fetchUserByEmailAddress(company.getCompanyId(),defaultAdminEmailAddress);
      if (user != null) {
        UserLocalServiceUtil.updateStatus(user.getUserId(),WorkflowConstants.STATUS_INACTIVE,new ServiceContext());
      }
    }
  }
  return UserLocalServiceUtil.updatePasswordReset(adminUser.getUserId(),resetPassword);
}

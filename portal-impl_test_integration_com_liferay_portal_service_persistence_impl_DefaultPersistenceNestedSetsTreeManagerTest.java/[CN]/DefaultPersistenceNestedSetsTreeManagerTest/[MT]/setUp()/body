{
  _assetCategoryPersistence=AssetCategoryUtil.getPersistence();
  BasePersistenceImpl<?> basePersistenceImpl=(BasePersistenceImpl<?>)_assetCategoryPersistence;
  Field sessionFactoryField=ReflectionUtil.getDeclaredField(BasePersistenceImpl.class,"_sessionFactory");
  _sessionFactoryInvocationHandler=new SessionFactoryInvocationHandler(sessionFactoryField.get(basePersistenceImpl));
  basePersistenceImpl.setSessionFactory((SessionFactory)ProxyUtil.newProxyInstance(SessionFactory.class.getClassLoader(),new Class<?>[]{SessionFactory.class},_sessionFactoryInvocationHandler));
  _assetCategoryPersistence.setRebuildTreeEnabled(false);
  _nestedSetsTreeManager=new DefaultPersistenceNestedSetsTreeManager<AssetCategory>(basePersistenceImpl,"AssetCategory","AssetCategory",AssetCategoryImpl.class,"categoryId","groupId","leftCategoryId","rightCategoryId");
  _group=GroupTestUtil.addGroup();
  _assetVocabulary=AssetTestUtil.addVocabulary(_group.getGroupId());
  _assetCategories=new AssetCategory[9];
  for (int i=0; i < 9; i++) {
    _assetCategories[i]=AssetTestUtil.addCategory(_group.getGroupId(),_assetVocabulary.getVocabularyId());
  }
  PropsValues.SPRING_HIBERNATE_SESSION_DELEGATED=false;
}

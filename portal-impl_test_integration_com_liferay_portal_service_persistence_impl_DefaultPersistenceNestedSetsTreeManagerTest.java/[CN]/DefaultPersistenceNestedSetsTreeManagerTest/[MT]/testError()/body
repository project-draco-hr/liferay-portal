{
  _sessionFactoryInvocationHandler.setFailOpenSession(true);
  CaptureAppender captureAppender=Log4JLoggerTestUtil.configureLog4JLogger(BasePersistenceImpl.class.getName(),Level.OFF);
  try {
    try {
      _nestedSetsTreeManager.doCountAncestors(0,0,0);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.doCountDescendants(0,0,0);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.doGetAncestors(0,0,0);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.doGetDescendants(0,0,0);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.doUpdate(0,true,0,0,true);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.doUpdate(0,0,0,true,0,true,null);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
    try {
      _nestedSetsTreeManager.getMaxNestedSetsTreeNodeRight(0);
      Assert.fail();
    }
 catch (    SystemException se) {
      Throwable t=se.getCause();
      t=t.getCause();
      Assert.assertEquals("Unable to open session",t.getMessage());
    }
  }
  finally {
    captureAppender.close();
    _sessionFactoryInvocationHandler.setFailOpenSession(false);
  }
}

{
  if (_toString != null) {
    return _toString;
  }
  Class<?>[] parameterTypes=_method.getParameterTypes();
  StringBundler sb=new StringBundler(parameterTypes.length * 2 + 6);
  Class<?> declaringClass=_method.getDeclaringClass();
  sb.append(declaringClass.getName());
  sb.append(StringPool.PERIOD);
  sb.append(_method.getName());
  sb.append(StringPool.OPEN_PARENTHESIS);
  for (int i=0; i < parameterTypes.length; i++) {
    Class<?> parameterType=parameterTypes[i];
    sb.append(parameterType.getName());
    if ((i + 1) < parameterTypes.length) {
      sb.append(StringPool.COMMA);
    }
  }
  sb.append(StringPool.CLOSE_PARENTHESIS);
  if (_targetClass != null) {
    sb.append(StringPool.AT);
    sb.append(_targetClass.getName());
  }
  _toString=sb.toString();
  return _toString;
}

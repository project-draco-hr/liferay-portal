{
  if (stage <= 0) {
    throw new IllegalArgumentException("Illegal value " + stage + " set for approval stage.");
  }
  List<TasksReview> reviews=new ArrayList<TasksReview>();
  try {
    reviews=TasksReviewLocalServiceUtil.getReviews(getProposalId(),stage);
  }
 catch (  Exception e) {
  }
  if (reviews.size() <= 0) {
    return STAGE_REVIEW_UNASSIGNED;
  }
  List<TasksReview> completedReviews=new ArrayList<TasksReview>();
  try {
    completedReviews=TasksReviewLocalServiceUtil.getReviews(getProposalId(),stage,true);
  }
 catch (  Exception e) {
  }
  if (completedReviews.size() < reviews.size()) {
    return STAGE_REVIEW_PENDING;
  }
  List<TasksReview> completedRejectedReviews=new ArrayList<TasksReview>();
  try {
    completedRejectedReviews=TasksReviewLocalServiceUtil.getReviews(getProposalId(),stage,true,true);
  }
 catch (  Exception e) {
  }
  if (completedRejectedReviews.size() > 0) {
    return STAGE_REVIEW_REJECTED;
  }
 else {
    return STAGE_REVIEW_APPROVED;
  }
}

{
  List<RepositoryEntry> fileEntriesFileShortcutsAndFolders=new ArrayList<>(dlFileEntriesDLFileShortcutsAndDLFolders.size());
  for (  Object object : dlFileEntriesDLFileShortcutsAndDLFolders) {
    if (object instanceof DLFileEntry) {
      DLFileEntry dlFileEntry=(DLFileEntry)object;
      FileEntry fileEntry=new LiferayFileEntry(dlFileEntry);
      fileEntriesFileShortcutsAndFolders.add(fileEntry);
    }
 else     if (object instanceof DLFolder) {
      DLFolder dlFolder=(DLFolder)object;
      Folder folder=new LiferayFolder(dlFolder);
      fileEntriesFileShortcutsAndFolders.add(folder);
    }
 else     if (object instanceof DLFileShortcut) {
      DLFileShortcut dlFileShortcut=(DLFileShortcut)object;
      FileShortcut fileShortcut=new LiferayFileShortcut(dlFileShortcut);
      fileEntriesFileShortcutsAndFolders.add(fileShortcut);
    }
 else {
      throw new IllegalArgumentException(String.format("Expected an instance of one of: %s; got %s",Arrays.asList(DLFileEntry.class.getName(),DLFolder.class.getName(),DLFileShortcutConstants.getClassName()),object));
    }
  }
  if (ListUtil.isUnmodifiableList(dlFileEntriesDLFileShortcutsAndDLFolders)) {
    return Collections.unmodifiableList(fileEntriesFileShortcutsAndFolders);
  }
 else {
    return fileEntriesFileShortcutsAndFolders;
  }
}

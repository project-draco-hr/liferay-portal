{
  final Collection<Document> documents=new ArrayList<>();
  ActionableDynamicQuery actionableDynamicQuery=CalendarBookingLocalServiceUtil.getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property statusProperty=PropertyFactoryUtil.forName("status");
      int[] statuses={CalendarBookingWorkflowConstants.STATUS_APPROVED,CalendarBookingWorkflowConstants.STATUS_MAYBE};
      dynamicQuery.add(statusProperty.in(statuses));
    }
  }
);
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<CalendarBooking>(){
    @Override public void performAction(    CalendarBooking calendarBooking){
      try {
        Document document=getDocument(calendarBooking);
        documents.add(document);
      }
 catch (      PortalException pe) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to index calendar booking " + calendarBooking.getCalendarBookingId(),pe);
        }
      }
    }
  }
);
  actionableDynamicQuery.setCompanyId(companyId);
  actionableDynamicQuery.performActions();
  SearchEngineUtil.updateDocuments(getSearchEngineId(),companyId,documents,isCommitImmediately());
}

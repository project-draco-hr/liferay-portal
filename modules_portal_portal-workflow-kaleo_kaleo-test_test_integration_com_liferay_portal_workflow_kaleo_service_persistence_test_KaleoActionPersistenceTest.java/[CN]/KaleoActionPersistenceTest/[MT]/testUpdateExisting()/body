{
  long pk=RandomTestUtil.nextLong();
  KaleoAction newKaleoAction=_persistence.create(pk);
  newKaleoAction.setGroupId(RandomTestUtil.nextLong());
  newKaleoAction.setCompanyId(RandomTestUtil.nextLong());
  newKaleoAction.setUserId(RandomTestUtil.nextLong());
  newKaleoAction.setUserName(RandomTestUtil.randomString());
  newKaleoAction.setCreateDate(RandomTestUtil.nextDate());
  newKaleoAction.setModifiedDate(RandomTestUtil.nextDate());
  newKaleoAction.setKaleoClassName(RandomTestUtil.randomString());
  newKaleoAction.setKaleoClassPK(RandomTestUtil.nextLong());
  newKaleoAction.setKaleoDefinitionId(RandomTestUtil.nextLong());
  newKaleoAction.setKaleoNodeName(RandomTestUtil.randomString());
  newKaleoAction.setName(RandomTestUtil.randomString());
  newKaleoAction.setDescription(RandomTestUtil.randomString());
  newKaleoAction.setExecutionType(RandomTestUtil.randomString());
  newKaleoAction.setScript(RandomTestUtil.randomString());
  newKaleoAction.setScriptLanguage(RandomTestUtil.randomString());
  newKaleoAction.setScriptRequiredContexts(RandomTestUtil.randomString());
  newKaleoAction.setPriority(RandomTestUtil.nextInt());
  _kaleoActions.add(_persistence.update(newKaleoAction));
  KaleoAction existingKaleoAction=_persistence.findByPrimaryKey(newKaleoAction.getPrimaryKey());
  Assert.assertEquals(existingKaleoAction.getKaleoActionId(),newKaleoAction.getKaleoActionId());
  Assert.assertEquals(existingKaleoAction.getGroupId(),newKaleoAction.getGroupId());
  Assert.assertEquals(existingKaleoAction.getCompanyId(),newKaleoAction.getCompanyId());
  Assert.assertEquals(existingKaleoAction.getUserId(),newKaleoAction.getUserId());
  Assert.assertEquals(existingKaleoAction.getUserName(),newKaleoAction.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoAction.getCreateDate()),Time.getShortTimestamp(newKaleoAction.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoAction.getModifiedDate()),Time.getShortTimestamp(newKaleoAction.getModifiedDate()));
  Assert.assertEquals(existingKaleoAction.getKaleoClassName(),newKaleoAction.getKaleoClassName());
  Assert.assertEquals(existingKaleoAction.getKaleoClassPK(),newKaleoAction.getKaleoClassPK());
  Assert.assertEquals(existingKaleoAction.getKaleoDefinitionId(),newKaleoAction.getKaleoDefinitionId());
  Assert.assertEquals(existingKaleoAction.getKaleoNodeName(),newKaleoAction.getKaleoNodeName());
  Assert.assertEquals(existingKaleoAction.getName(),newKaleoAction.getName());
  Assert.assertEquals(existingKaleoAction.getDescription(),newKaleoAction.getDescription());
  Assert.assertEquals(existingKaleoAction.getExecutionType(),newKaleoAction.getExecutionType());
  Assert.assertEquals(existingKaleoAction.getScript(),newKaleoAction.getScript());
  Assert.assertEquals(existingKaleoAction.getScriptLanguage(),newKaleoAction.getScriptLanguage());
  Assert.assertEquals(existingKaleoAction.getScriptRequiredContexts(),newKaleoAction.getScriptRequiredContexts());
  Assert.assertEquals(existingKaleoAction.getPriority(),newKaleoAction.getPriority());
}

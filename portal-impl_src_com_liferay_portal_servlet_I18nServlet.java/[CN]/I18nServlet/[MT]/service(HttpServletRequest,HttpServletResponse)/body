{
  try {
    String[] i18nData=getI18nData(request);
    if ((i18nData == null) || !PortalUtil.isValidResourceId(i18nData[2])) {
      PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND,new NoSuchLayoutException(),request,response);
    }
 else {
      String i18nLanguageId=i18nData[0];
      String i18nPath=i18nData[1];
      String redirect=i18nData[2];
      request.setAttribute(WebKeys.I18N_LANGUAGE_ID,i18nLanguageId);
      request.setAttribute(WebKeys.I18N_PATH,i18nPath);
      Locale locale=LocaleUtil.fromLanguageId(i18nLanguageId);
      HttpSession session=request.getSession();
      session.setAttribute(Globals.LOCALE_KEY,locale);
      LanguageUtil.updateCookie(request,response,locale);
      if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 3) {
        User user=(User)request.getAttribute(WebKeys.USER);
        if ((user != null) && (user.getLocale() != locale)) {
          PortalUtil.addUserLocaleOptionsMessage(request);
        }
      }
      ServletContext servletContext=getServletContext();
      RequestDispatcher requestDispatcher=servletContext.getRequestDispatcher(redirect);
      requestDispatcher.forward(request,response);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    PortalUtil.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,e,request,response);
  }
}

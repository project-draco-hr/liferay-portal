{
  JSONFactory jsonFactory=Mockito.mock(JSONFactory.class);
  Mockito.when(jsonFactory.deserialize(Mockito.anyString())).then(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocationOnMock) throws Throwable {
      String base64=(String)invocationOnMock.getArguments()[0];
      byte[] bytes=Base64.decode(base64);
      ByteArrayInputStream bais=new ByteArrayInputStream(bytes);
      ObjectInputStream ois=new ObjectInputStream(bais);
      return ois.readObject();
    }
  }
);
  Mockito.when(jsonFactory.serialize(Mockito.anyObject())).then(new Answer<String>(){
    @Override public String answer(    InvocationOnMock invocationOnMock) throws Throwable {
      Object obj=invocationOnMock.getArguments()[0];
      ByteArrayOutputStream baos=new ByteArrayOutputStream();
      ObjectOutputStream oos=new ObjectOutputStream(baos);
      oos.writeObject(obj);
      byte[] bytes=baos.toByteArray();
      oos.close();
      return Base64.encode(bytes);
    }
  }
);
  return jsonFactory;
}

{
  Element tokenEl=root.addElement("token");
  DocUtil.add(tokenEl,"tokenId",token.getId());
  DocUtil.add(tokenEl,"name",token.getNode().getName());
  if (token.getNode().toString().startsWith("Join")) {
    DocUtil.add(tokenEl,"type","join");
  }
 else {
    DocUtil.add(tokenEl,"type","default");
  }
  List tasks=getCurrentTasks(token.getProcessInstance().getId(),token.getId());
  if (tasks == null) {
    Element task=tokenEl.addElement("task");
    task.addElement("taskId").addText("null");
  }
 else {
    for (int i=0; i < tasks.size(); i++) {
      TaskInstance task=(TaskInstance)tasks.get(i);
      createElement(task,tokenEl);
    }
  }
  if (checkChildren) {
    Map activeChildren=getActiveChildren(token.getProcessInstance().getId());
    if (hasActiveChildren(activeChildren)) {
      Iterator itr=activeChildren.values().iterator();
      while (itr.hasNext()) {
        Token child=(Token)itr.next();
        createElement(child,tokenEl,false);
      }
    }
  }
}

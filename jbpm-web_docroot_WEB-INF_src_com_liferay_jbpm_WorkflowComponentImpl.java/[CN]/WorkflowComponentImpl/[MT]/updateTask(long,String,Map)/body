{
  List taskFormElements=getTaskFormElements(taskId);
  TaskInstance task=taskMgmtSession.loadTaskInstance(taskId);
  String actorId=task.getActorId();
  try {
    task.start();
    if (actorId == null) {
      task.setActorId(userId);
    }
  }
 catch (  Exception e) {
    _log.error("Task has already started");
  }
  Map variables=new HashMap();
  Map errors=new HashMap();
  Iterator itr=taskFormElements.iterator();
  while (itr.hasNext()) {
    TaskFormElement taskFormElement=(TaskFormElement)itr.next();
    String name=taskFormElement.getDisplayName();
    if (taskFormElement.isWritable()) {
      String value=getParamValue(parameterMap,name);
      if (taskFormElement.getType().equals(TaskFormElement.TYPE_DATE)) {
        value=getParamValue(parameterMap,JS.getSafeName(name));
      }
      variables.put(taskFormElement.getVariableName(),value);
      String error=validate(taskFormElement,parameterMap);
      if (error != null) {
        errors.put(name,error);
      }
    }
  }
  task.addVariables(variables);
  if (errors.size() == 0) {
    try {
      task.end(transition);
    }
 catch (    Exception e) {
      _log.error("Task has already ended");
    }
  }
  ProcessInstance instance=task.getToken().getProcessInstance();
  WorkflowUtil.initInstance(instance);
  jbpmContext.save(instance);
  return errors;
}

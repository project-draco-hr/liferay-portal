{
  String result=null;
  try {
    userId=ParamUtil.getString(req,"userId");
    timeZoneId=ParamUtil.getString(req,"timeZoneId");
    timeZone=TimeZone.getTimeZone(timeZoneId);
    jbpmContext=JbpmConfiguration.getInstance().createJbpmContext();
    graphSession=new GraphSession(userId,timeZoneId,jbpmContext);
    taskMgmtSession=jbpmContext.getTaskMgmtSession();
    String cmd=ParamUtil.getString(req,"cmd");
    if (cmd.equals("deploy")) {
      String xml=ParamUtil.getString(req,"xml");
      result=deploy(xml);
    }
 else     if (cmd.equals("getCurrentTasksXml")) {
      long instanceId=ParamUtil.getLong(req,"instanceId");
      long tokenId=ParamUtil.getLong(req,"tokenId");
      result=getCurrentTasksXml(instanceId,tokenId);
    }
 else     if (cmd.equals("getDefinitionsCountXml")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      String name=ParamUtil.getString(req,"name");
      result=getDefinitionsCountXml(definitionId,name);
    }
 else     if (cmd.equals("getDefinitionsXml")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      String name=ParamUtil.getString(req,"name");
      int begin=ParamUtil.getInteger(req,"begin");
      int end=ParamUtil.getInteger(req,"end");
      result=getDefinitionsXml(definitionId,name,begin,end);
    }
 else     if (cmd.equals("getDefinitionXml")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      result=getDefinitionXml(definitionId);
    }
 else     if (cmd.equals("getInstancesCountXml")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      long instanceId=ParamUtil.getLong(req,"instanceId");
      String definitionName=ParamUtil.getString(req,"definitionName");
      String definitionVersion=ParamUtil.getString(req,"definitionVersion");
      String startDateGT=ParamUtil.getString(req,"startDateGT");
      String startDateLT=ParamUtil.getString(req,"startDateLT");
      String endDateGT=ParamUtil.getString(req,"endDateGT");
      String endDateLT=ParamUtil.getString(req,"endDateLT");
      boolean hideEndedTasks=ParamUtil.getBoolean(req,"hideEndedTasks");
      boolean retrieveUserInstances=ParamUtil.getBoolean(req,"retrieveUserInstances");
      boolean andOperator=ParamUtil.getBoolean(req,"andOperator");
      result=getInstancesCountXml(definitionId,instanceId,definitionName,definitionVersion,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,retrieveUserInstances,andOperator);
    }
 else     if (cmd.equals("getInstancesXml")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      long instanceId=ParamUtil.getLong(req,"instanceId");
      String definitionName=ParamUtil.getString(req,"definitionName");
      String definitionVersion=ParamUtil.getString(req,"definitionVersion");
      String startDateGT=ParamUtil.getString(req,"startDateGT");
      String startDateLT=ParamUtil.getString(req,"startDateLT");
      String endDateGT=ParamUtil.getString(req,"endDateGT");
      String endDateLT=ParamUtil.getString(req,"endDateLT");
      boolean hideEndedTasks=ParamUtil.getBoolean(req,"hideEndedTasks");
      boolean retrieveUserInstances=ParamUtil.getBoolean(req,"retrieveUserInstances");
      boolean andOperator=ParamUtil.getBoolean(req,"andOperator");
      int begin=ParamUtil.getInteger(req,"begin");
      int end=ParamUtil.getInteger(req,"end");
      result=getInstancesXml(definitionId,instanceId,definitionName,definitionVersion,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,retrieveUserInstances,andOperator,begin,end);
    }
 else     if (cmd.equals("getTaskXml")) {
      long taskId=ParamUtil.getLong(req,"taskId");
      result=getTaskXml(taskId);
    }
 else     if (cmd.equals("getTaskFormElementsXml")) {
      long taskId=ParamUtil.getLong(req,"taskId");
      result=getTaskFormElementsXml(taskId);
    }
 else     if (cmd.equals("getTaskTransitionsXml")) {
      long taskId=ParamUtil.getLong(req,"taskId");
      result=getTaskTransitionsXml(taskId);
    }
 else     if (cmd.equals("getUserTasksCountXml")) {
      long instanceId=ParamUtil.getLong(req,"instanceId");
      String taskName=ParamUtil.getString(req,"taskName");
      String definitionName=ParamUtil.getString(req,"definitionName");
      String assignedTo=ParamUtil.getString(req,"assignedTo");
      String createDateGT=ParamUtil.getString(req,"createDateGT");
      String createDateLT=ParamUtil.getString(req,"createDateLT");
      String startDateGT=ParamUtil.getString(req,"startDateGT");
      String startDateLT=ParamUtil.getString(req,"startDateLT");
      String endDateGT=ParamUtil.getString(req,"endDateGT");
      String endDateLT=ParamUtil.getString(req,"endDateLT");
      boolean hideEndedTasks=ParamUtil.getBoolean(req,"hideEndedTasks");
      boolean andOperator=ParamUtil.getBoolean(req,"andOperator");
      result=getUserTasksCountXml(instanceId,taskName,definitionName,assignedTo,createDateGT,createDateLT,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,andOperator);
    }
 else     if (cmd.equals("getUserTasksXml")) {
      long instanceId=ParamUtil.getLong(req,"instanceId");
      String taskName=ParamUtil.getString(req,"taskName");
      String definitionName=ParamUtil.getString(req,"definitionName");
      String assignedTo=ParamUtil.getString(req,"assignedTo");
      String createDateGT=ParamUtil.getString(req,"createDateGT");
      String createDateLT=ParamUtil.getString(req,"createDateLT");
      String startDateGT=ParamUtil.getString(req,"startDateGT");
      String startDateLT=ParamUtil.getString(req,"startDateLT");
      String endDateGT=ParamUtil.getString(req,"endDateGT");
      String endDateLT=ParamUtil.getString(req,"endDateLT");
      boolean hideEndedTasks=ParamUtil.getBoolean(req,"hideEndedTasks");
      boolean andOperator=ParamUtil.getBoolean(req,"andOperator");
      int begin=ParamUtil.getInteger(req,"begin");
      int end=ParamUtil.getInteger(req,"end");
      result=getUserTasksXml(instanceId,taskName,definitionName,assignedTo,createDateGT,createDateLT,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,andOperator,begin,end);
    }
 else     if (cmd.equals("signalInstance")) {
      long instanceId=ParamUtil.getLong(req,"instanceId");
      signalInstance(instanceId);
    }
 else     if (cmd.equals("signalToken")) {
      long instanceId=ParamUtil.getLong(req,"instanceId");
      long tokenId=ParamUtil.getLong(req,"tokenId");
      signalToken(instanceId,tokenId);
    }
 else     if (cmd.equals("startWorkflow")) {
      long definitionId=ParamUtil.getLong(req,"definitionId");
      result=startWorkflow(definitionId);
    }
 else     if (cmd.equals("updateTaskXml")) {
      long taskId=ParamUtil.getLong(req,"taskId");
      String transition=ParamUtil.getString(req,"transition");
      result=updateTaskXml(taskId,transition,req.getParameterMap());
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    try {
      jbpmContext.close();
    }
 catch (    Exception e) {
    }
    try {
      graphSession.close();
    }
 catch (    Exception e) {
    }
  }
  if (Validator.isNull(result)) {
    result="<result />";
  }
  return result;
}

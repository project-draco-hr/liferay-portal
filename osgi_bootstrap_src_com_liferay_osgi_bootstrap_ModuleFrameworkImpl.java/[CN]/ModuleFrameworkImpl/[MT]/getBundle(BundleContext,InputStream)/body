{
  try {
    if (inputStream.markSupported()) {
      inputStream.mark(1024 * 1000);
    }
    JarInputStream jarInputStream=new JarInputStream(inputStream);
    Manifest manifest=jarInputStream.getManifest();
    if (inputStream.markSupported()) {
      inputStream.reset();
    }
    Attributes attributes=manifest.getMainAttributes();
    String bundleSymbolicNameAttribute=attributes.getValue(Constants.BUNDLE_SYMBOLICNAME);
    Map<String,Map<String,String>> bundleSymbolicNamesMap=OSGiHeader.parseHeader(bundleSymbolicNameAttribute);
    Set<String> bundleSymbolicNamesSet=bundleSymbolicNamesMap.keySet();
    Iterator<String> bundleSymbolicNamesIterator=bundleSymbolicNamesSet.iterator();
    String bundleSymbolicName=bundleSymbolicNamesIterator.next();
    String bundleVersionAttribute=attributes.getValue(Constants.BUNDLE_VERSION);
    Version bundleVersion=Version.parseVersion(bundleVersionAttribute);
    for (    Bundle bundle : bundleContext.getBundles()) {
      Version curBundleVersion=Version.parseVersion(bundle.getVersion().toString());
      if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) {
        return bundle;
      }
    }
    return null;
  }
 catch (  IOException ioe) {
    throw new PortalException(ioe);
  }
}

{
  ClassLoader classLoader=PACLClassLoaderUtil.getPortalClassLoader();
  Enumeration<URL> enu=classLoader.getResources("META-INF/MANIFEST.MF");
  while (enu.hasMoreElements()) {
    URL url=enu.nextElement();
    Manifest manifest=new Manifest(url.openStream());
    Attributes attributes=manifest.getMainAttributes();
    String bundleSymbolicName=attributes.getValue(Constants.BUNDLE_SYMBOLICNAME);
    if (Validator.isNull(bundleSymbolicName)) {
      continue;
    }
    for (    String curBundleSymbolicName : bundleSymbolicNames) {
      if (!bundleSymbolicName.startsWith(curBundleSymbolicName)) {
        continue;
      }
      String exportPackage=attributes.getValue(Constants.EXPORT_PACKAGE);
      Map<String,Map<String,String>> exportPackageMap=OSGiHeader.parseHeader(exportPackage);
      for (      Map.Entry<String,Map<String,String>> entry : exportPackageMap.entrySet()) {
        String javaPackage=entry.getKey();
        Map<String,String> javaPackageMap=entry.getValue();
        StringBundler sb=new StringBundler(6);
        sb.append(javaPackage);
        sb.append(";");
        sb.append(Constants.VERSION_ATTRIBUTE);
        sb.append("=\"");
        if (javaPackageMap.containsKey(Constants.VERSION_ATTRIBUTE)) {
          String version=javaPackageMap.get(Constants.VERSION_ATTRIBUTE);
          sb.append(version);
        }
 else {
          String bundleVersionString=attributes.getValue(Constants.BUNDLE_VERSION);
          sb.append(bundleVersionString);
        }
        sb.append("\"");
        javaPackage=sb.toString();
        packages.add(javaPackage);
      }
      break;
    }
  }
}

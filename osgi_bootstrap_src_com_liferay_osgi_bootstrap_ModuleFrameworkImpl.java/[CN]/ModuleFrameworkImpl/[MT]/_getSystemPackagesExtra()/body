{
  File coreDir=new File(PropsValues.LIFERAY_WEB_PORTAL_CONTEXT_TEMPDIR,"osgi");
  File cacheFile=new File(coreDir,"system-packages.txt");
  if (cacheFile.exists()) {
    try {
      return FileUtil.read(cacheFile);
    }
 catch (    IOException e) {
      _log.error(e,e);
    }
  }
  _extraPackageMap=new TreeMap<String,List<URL>>();
  StringBundler sb=new StringBundler();
  for (  String extraPackage : PropsValues.MODULE_FRAMEWORK_SYSTEM_PACKAGES_EXTRA) {
    sb.append(extraPackage);
    sb.append(StringPool.COMMA);
  }
  List<URL> urls=new UniqueList<URL>();
  ClassLoader classLoader=ClassLoaderUtil.getPortalClassLoader();
  try {
    Enumeration<URL> enu=classLoader.getResources("META-INF/MANIFEST.MF");
    while (enu.hasMoreElements()) {
      URL url=enu.nextElement();
      urls.add(url);
    }
  }
 catch (  IOException ioe) {
    _log.error(ioe,ioe);
  }
  for (  URL url : urls) {
    _processURL(sb,url,PropsValues.MODULE_FRAMEWORK_SYSTEM_BUNDLE_IGNORED_FRAGMENTS);
  }
  _extraPackageMap=Collections.unmodifiableMap(_extraPackageMap);
  sb.setIndex(sb.index() - 1);
  if (_log.isTraceEnabled()) {
    String s=sb.toString();
    s=s.replace(",","\n");
    _log.trace("The portal's system bundle is exporting the following " + "packages:\n" + s);
  }
  try {
    FileUtil.write(cacheFile,sb.toString());
  }
 catch (  IOException e) {
    _log.error(e,e);
  }
  return sb.toString();
}

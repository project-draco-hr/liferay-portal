{
  Map<String,String> properties=new HashMap<String,String>();
  properties.put(Constants.BUNDLE_DESCRIPTION,ReleaseInfo.getReleaseInfo());
  properties.put(Constants.BUNDLE_NAME,ReleaseInfo.getName());
  properties.put(Constants.BUNDLE_VENDOR,ReleaseInfo.getVendor());
  properties.put(Constants.BUNDLE_VERSION,ReleaseInfo.getVersion());
  properties.put(FrameworkPropsKeys.FELIX_FILEINSTALL_DIR,_getFelixFileInstallDir());
  properties.put(FrameworkPropsKeys.FELIX_FILEINSTALL_LOG_LEVEL,_getFelixFileInstallLogLevel());
  properties.put(FrameworkPropsKeys.FELIX_FILEINSTALL_POLL,String.valueOf(PropsValues.MODULE_FRAMEWORK_AUTO_DEPLOY_INTERVAL));
  properties.put(FrameworkPropsKeys.FELIX_FILEINSTALL_TMPDIR,SystemProperties.get(SystemProperties.TMP_DIR));
  properties.put(Constants.FRAMEWORK_BEGINNING_STARTLEVEL,String.valueOf(PropsValues.MODULE_FRAMEWORK_BEGINNING_START_LEVEL));
  properties.put(Constants.FRAMEWORK_BUNDLE_PARENT,Constants.FRAMEWORK_BUNDLE_PARENT_APP);
  properties.put(Constants.FRAMEWORK_STORAGE,PropsValues.MODULE_FRAMEWORK_STATE_DIR);
  CodeSource codeSource=clazz.getProtectionDomain().getCodeSource();
  URL location=codeSource.getLocation();
  properties.put(FrameworkPropsKeys.OSGI_FRAMEWORK,location.toExternalForm());
  File frameworkFile=new File(location.getFile());
  properties.put(FrameworkPropsKeys.OSGI_INSTALL_AREA,frameworkFile.getParent());
  Properties extraProperties=PropsUtil.getProperties(PropsKeys.MODULE_FRAMEWORK_PROPERTIES,true);
  for (  Map.Entry<Object,Object> entry : extraProperties.entrySet()) {
    String key=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (value.equals(StringPool.NULL)) {
      value=null;
    }
    properties.put(key,value);
  }
  String systemPackagesExtra=_getSystemPackagesExtra();
  properties.put(Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA,systemPackagesExtra);
  return properties;
}

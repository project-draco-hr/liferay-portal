{
  List<AssetVocabulary> groupVocabularies=AssetVocabularyLocalServiceUtil.getGroupVocabularies(groupId);
  groupVocabularies=ListUtil.copy(groupVocabularies);
  Group group=GroupServiceUtil.getGroup(groupId);
  if (!group.isCompany()) {
    Group companyGroup=GroupLocalServiceUtil.getCompanyGroup(group.getCompanyId());
    List<AssetVocabulary> globalVocabularies=AssetVocabularyLocalServiceUtil.getGroupVocabularies(companyGroup.getGroupId());
    groupVocabularies.addAll(AssetVocabularyLocalServiceUtil.getGroupVocabularies(companyGroup.getGroupId()));
  }
  long classNameId=ClassNameServiceUtil.getClassNameId(className);
  for (  AssetVocabulary vocabulary : groupVocabularies) {
    UnicodeProperties settingsProperties=vocabulary.getSettingsProperties();
    long[] selectedClassNameIds=StringUtil.split(settingsProperties.getProperty("selectedClassNameIds"),0L);
    if ((selectedClassNameIds.length > 0) && ((selectedClassNameIds[0] == 0) || ArrayUtil.contains(selectedClassNameIds,classNameId))) {
      long[] requiredClassNameIds=StringUtil.split(settingsProperties.getProperty("requiredClassNameIds"),0L);
      List<AssetCategory> vocabularyCategories=AssetCategoryLocalServiceUtil.getVocabularyCategories(vocabulary.getVocabularyId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
      if ((requiredClassNameIds.length > 0) && ((requiredClassNameIds[0] == 0) || ArrayUtil.contains(requiredClassNameIds,classNameId))) {
        boolean found=false;
        int i=0;
        while (i < vocabularyCategories.size() && !found) {
          if (ArrayUtil.contains(categoryIds,vocabularyCategories.get(i).getCategoryId())) {
            found=true;
          }
          i++;
        }
        if (!found && (vocabularyCategories.size() > 0)) {
          throw new AssetCategoryException(AssetCategoryException.AT_LEAST_ONE_CATEGORY);
        }
      }
      boolean multiValued=GetterUtil.getBoolean(settingsProperties.getProperty("multiValued"),true);
      if (!multiValued) {
        ListIterator vocabularyCategoriesIterator=vocabularyCategories.listIterator();
        boolean existed=false;
        while (vocabularyCategoriesIterator.hasNext()) {
          AssetCategory category=(AssetCategory)vocabularyCategoriesIterator.next();
          if (ArrayUtil.contains(categoryIds,category.getCategoryId())) {
            if (!existed) {
              existed=true;
            }
 else {
              throw new AssetCategoryException(AssetCategoryException.TOO_MANY_CATEGORIES);
            }
          }
        }
      }
    }
  }
}

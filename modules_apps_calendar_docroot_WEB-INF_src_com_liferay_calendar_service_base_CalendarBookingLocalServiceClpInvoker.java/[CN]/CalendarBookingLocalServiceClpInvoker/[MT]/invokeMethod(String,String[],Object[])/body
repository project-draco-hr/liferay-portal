{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.createCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getExportActionableDynamicQuery((com.liferay.portal.kernel.lar.PortletDataContext)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarBooking>)arguments[4]);
  }
  if (_methodName20.equals(name) && Arrays.deepEquals(_methodParameterTypes20,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName21.equals(name) && Arrays.deepEquals(_methodParameterTypes21,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName22.equals(name) && Arrays.deepEquals(_methodParameterTypes22,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount();
  }
  if (_methodName23.equals(name) && Arrays.deepEquals(_methodParameterTypes23,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName126.equals(name) && Arrays.deepEquals(_methodParameterTypes126,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName127.equals(name) && Arrays.deepEquals(_methodParameterTypes127,parameterTypes)) {
    CalendarBookingLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName132.equals(name) && Arrays.deepEquals(_methodParameterTypes132,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.addCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(long[])arguments[2],((Long)arguments[3]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName133.equals(name) && Arrays.deepEquals(_methodParameterTypes133,parameterTypes)) {
    CalendarBookingLocalServiceUtil.checkCalendarBookings();
    return null;
  }
  if (_methodName134.equals(name) && Arrays.deepEquals(_methodParameterTypes134,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking((com.liferay.calendar.model.CalendarBooking)arguments[0]);
  }
  if (_methodName135.equals(name) && Arrays.deepEquals(_methodParameterTypes135,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.deleteCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName136.equals(name) && Arrays.deepEquals(_methodParameterTypes136,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance((com.liferay.calendar.model.CalendarBooking)arguments[0],((Integer)arguments[1]).intValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName137.equals(name) && Arrays.deepEquals(_methodParameterTypes137,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance((com.liferay.calendar.model.CalendarBooking)arguments[0],((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName138.equals(name) && Arrays.deepEquals(_methodParameterTypes138,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Boolean)arguments[2]).booleanValue());
    return null;
  }
  if (_methodName139.equals(name) && Arrays.deepEquals(_methodParameterTypes139,parameterTypes)) {
    CalendarBookingLocalServiceUtil.deleteCalendarBookings(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName140.equals(name) && Arrays.deepEquals(_methodParameterTypes140,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.exportCalendarBooking(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName141.equals(name) && Arrays.deepEquals(_methodParameterTypes141,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName142.equals(name) && Arrays.deepEquals(_methodParameterTypes142,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.fetchCalendarBooking((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName143.equals(name) && Arrays.deepEquals(_methodParameterTypes143,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue());
  }
  if (_methodName144.equals(name) && Arrays.deepEquals(_methodParameterTypes144,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName145.equals(name) && Arrays.deepEquals(_methodParameterTypes145,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingInstance(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName146.equals(name) && Arrays.deepEquals(_methodParameterTypes146,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName147.equals(name) && Arrays.deepEquals(_methodParameterTypes147,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),(int[])arguments[1]);
  }
  if (_methodName148.equals(name) && Arrays.deepEquals(_methodParameterTypes148,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue());
  }
  if (_methodName149.equals(name) && Arrays.deepEquals(_methodParameterTypes149,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookings(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Integer)arguments[3]).intValue());
  }
  if (_methodName150.equals(name) && Arrays.deepEquals(_methodParameterTypes150,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getCalendarBookingsCount(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName151.equals(name) && Arrays.deepEquals(_methodParameterTypes151,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue());
  }
  if (_methodName152.equals(name) && Arrays.deepEquals(_methodParameterTypes152,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarBookings(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName153.equals(name) && Arrays.deepEquals(_methodParameterTypes153,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.getChildCalendarIds(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName154.equals(name) && Arrays.deepEquals(_methodParameterTypes154,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.moveCalendarBookingToTrash(((Long)arguments[0]).longValue(),(com.liferay.calendar.model.CalendarBooking)arguments[1]);
  }
  if (_methodName155.equals(name) && Arrays.deepEquals(_methodParameterTypes155,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.moveCalendarBookingToTrash(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName156.equals(name) && Arrays.deepEquals(_methodParameterTypes156,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.restoreCalendarBookingFromTrash(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName157.equals(name) && Arrays.deepEquals(_methodParameterTypes157,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(int[])arguments[9],((Integer)arguments[10]).intValue(),((Integer)arguments[11]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarBooking>)arguments[12]);
  }
  if (_methodName158.equals(name) && Arrays.deepEquals(_methodParameterTypes158,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),((Boolean)arguments[10]).booleanValue(),(int[])arguments[11],((Boolean)arguments[12]).booleanValue(),((Integer)arguments[13]).intValue(),((Integer)arguments[14]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarBooking>)arguments[15]);
  }
  if (_methodName159.equals(name) && Arrays.deepEquals(_methodParameterTypes159,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),(int[])arguments[8]);
  }
  if (_methodName160.equals(name) && Arrays.deepEquals(_methodParameterTypes160,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(long[])arguments[3],((Long)arguments[4]).longValue(),(java.lang.String)arguments[5],(java.lang.String)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),(int[])arguments[10],((Boolean)arguments[11]).booleanValue());
  }
  if (_methodName161.equals(name) && Arrays.deepEquals(_methodParameterTypes161,parameterTypes)) {
    CalendarBookingLocalServiceUtil.updateAsset(((Long)arguments[0]).longValue(),(com.liferay.calendar.model.CalendarBooking)arguments[1],(long[])arguments[2],(java.lang.String[])arguments[3],(long[])arguments[4]);
    return null;
  }
  if (_methodName162.equals(name) && Arrays.deepEquals(_methodParameterTypes162,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(long[])arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Long)arguments[11]).longValue(),(java.lang.String)arguments[12],((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Integer)arguments[15]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[16]);
  }
  if (_methodName163.equals(name) && Arrays.deepEquals(_methodParameterTypes163,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBooking(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[3],(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.lang.String)arguments[5],((Long)arguments[6]).longValue(),((Long)arguments[7]).longValue(),((Boolean)arguments[8]).booleanValue(),(java.lang.String)arguments[9],((Long)arguments[10]).longValue(),(java.lang.String)arguments[11],((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Integer)arguments[14]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[15]);
  }
  if (_methodName164.equals(name) && Arrays.deepEquals(_methodParameterTypes164,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Long)arguments[3]).longValue(),(long[])arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.util.Map<java.util.Locale,java.lang.String>)arguments[6],(java.lang.String)arguments[7],((Long)arguments[8]).longValue(),((Long)arguments[9]).longValue(),((Boolean)arguments[10]).booleanValue(),(java.lang.String)arguments[11],((Boolean)arguments[12]).booleanValue(),((Long)arguments[13]).longValue(),(java.lang.String)arguments[14],((Long)arguments[15]).longValue(),(java.lang.String)arguments[16],((Integer)arguments[17]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[18]);
  }
  if (_methodName165.equals(name) && Arrays.deepEquals(_methodParameterTypes165,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Long)arguments[3]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[4],(java.util.Map<java.util.Locale,java.lang.String>)arguments[5],(java.lang.String)arguments[6],((Long)arguments[7]).longValue(),((Long)arguments[8]).longValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],((Boolean)arguments[11]).booleanValue(),((Long)arguments[12]).longValue(),(java.lang.String)arguments[13],((Long)arguments[14]).longValue(),(java.lang.String)arguments[15],((Integer)arguments[16]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[17]);
  }
  if (_methodName166.equals(name) && Arrays.deepEquals(_methodParameterTypes166,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateStatus(((Long)arguments[0]).longValue(),(com.liferay.calendar.model.CalendarBooking)arguments[1],((Integer)arguments[2]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName167.equals(name) && Arrays.deepEquals(_methodParameterTypes167,parameterTypes)) {
    return CalendarBookingLocalServiceUtil.updateStatus(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  throw new UnsupportedOperationException();
}

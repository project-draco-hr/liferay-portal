{
  try {
    for (    Path path : paths) {
      Files.walkFileTree(path,new SimpleFileVisitor<Path>(){
        @Override public FileVisitResult postVisitDirectory(        Path dir,        IOException ioe) throws IOException {
          if ((ioe != null) && !quiet) {
            throw ioe;
          }
          Files.delete(dir);
          return FileVisitResult.CONTINUE;
        }
        @Override public FileVisitResult visitFile(        Path file,        BasicFileAttributes basicFileAttributes) throws IOException {
          Files.delete(file);
          return FileVisitResult.CONTINUE;
        }
        @Override public FileVisitResult visitFileFailed(        Path file,        IOException ioe) throws IOException {
          if (quiet || (ioe instanceof NoSuchFileException)) {
            return FileVisitResult.CONTINUE;
          }
          throw ioe;
        }
      }
);
    }
  }
 catch (  IOException ioe) {
    if (!quiet) {
      ReflectionUtil.throwException(ioe);
    }
  }
}

{
  SAPConfiguration sapConfiguration=configurationProvider.getConfiguration(SAPConfiguration.class,new CompanyServiceSettingsLocator(companyId,SAPConstants.SERVICE_NAME));
  SAPEntry systemDefaultSAPEntry=sapEntryPersistence.fetchByC_N(companyId,sapConfiguration.systemDefaultSAPEntryName());
  SAPEntry systemUserPasswordSAPEntry=sapEntryPersistence.fetchByC_N(companyId,sapConfiguration.systemUserPasswordSAPEntryName());
  if ((systemDefaultSAPEntry != null) && (systemUserPasswordSAPEntry != null)) {
    return;
  }
  long defaultUserId=userLocalService.getDefaultUserId(companyId);
  Role guestRole=roleLocalService.getRole(companyId,RoleConstants.GUEST);
  if (systemDefaultSAPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sapConfiguration.systemDefaultSAPEntryDescription());
    systemDefaultSAPEntry=addSAPEntry(defaultUserId,sapConfiguration.systemDefaultSAPEntryServiceSignatures(),true,true,sapConfiguration.systemDefaultSAPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(systemDefaultSAPEntry.getCompanyId(),SAPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(systemDefaultSAPEntry.getSapEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
  if (systemUserPasswordSAPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sapConfiguration.systemUserPasswordSAPEntryDescription());
    systemUserPasswordSAPEntry=addSAPEntry(defaultUserId,sapConfiguration.systemUserPasswordSAPEntryServiceSignatures(),false,true,sapConfiguration.systemUserPasswordSAPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(systemUserPasswordSAPEntry.getCompanyId(),SAPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(systemUserPasswordSAPEntry.getSapEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
}

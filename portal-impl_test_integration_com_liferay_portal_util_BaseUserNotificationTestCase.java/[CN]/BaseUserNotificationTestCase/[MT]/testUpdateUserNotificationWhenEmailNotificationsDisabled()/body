{
  updateUserNotificationDelivery(UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY,UserNotificationDeliveryConstants.TYPE_EMAIL,false);
  updateUserNotificationDelivery(UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY,UserNotificationDeliveryConstants.TYPE_EMAIL,false);
  BaseModel baseModel=addBaseModel();
  updateBaseModel(baseModel);
  Assert.assertEquals(0,logRecords.size());
  List<JSONObject> userNotificationEventsJSONObjects=getUserNotificationEventsJSONObjects(user.getUserId(),(Long)baseModel.getPrimaryKeyObj());
  Assert.assertEquals(2,userNotificationEventsJSONObjects.size());
  int[] notificationTypes=new int[0];
  for (  JSONObject userNotificationEventsJSONObject : userNotificationEventsJSONObjects) {
    notificationTypes=ArrayUtil.append(notificationTypes,userNotificationEventsJSONObject.getInt("notificationType"));
  }
  Assert.assertNotEquals(notificationTypes[0],notificationTypes[1]);
  Assert.assertTrue(ArrayUtil.contains(notificationTypes,UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY));
  Assert.assertTrue(ArrayUtil.contains(notificationTypes,UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY));
}

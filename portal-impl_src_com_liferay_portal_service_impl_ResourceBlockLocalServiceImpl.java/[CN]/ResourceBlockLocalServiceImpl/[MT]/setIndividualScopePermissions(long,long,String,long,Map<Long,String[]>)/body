{
  boolean flushResourceBlockEnabled=PermissionThreadLocal.isFlushResourceBlockEnabled(companyId,groupId,name);
  PermissionThreadLocal.setFlushResourceBlockEnabled(companyId,groupId,name,false);
  try {
    PermissionedModel permissionedModel=getPermissionedModel(name,primKey);
    for (    Map.Entry<Long,String[]> entry : roleIdsToActionIds.entrySet()) {
      long roleId=entry.getKey();
      List<String> actionIds=ListUtil.fromArray(entry.getValue());
      checkGuestSupportedPermission(companyId,name,roleId,actionIds);
      updateIndividualScopePermissions(companyId,groupId,name,permissionedModel,roleId,getActionIds(name,actionIds),ResourceBlockConstants.OPERATOR_SET);
    }
  }
  finally {
    PermissionThreadLocal.setFlushResourceBlockEnabled(companyId,groupId,name,flushResourceBlockEnabled);
    PermissionCacheUtil.clearResourceBlockCache(companyId,groupId,name);
    PermissionCacheUtil.clearResourcePermissionCache(ResourceConstants.SCOPE_INDIVIDUAL,name,String.valueOf(primKey));
  }
}

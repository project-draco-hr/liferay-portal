{
  ResourceBlock resourceBlock=null;
  while (true) {
    resourceBlock=resourceBlockPersistence.fetchByC_G_N_P(companyId,groupId,name,permissionsHash,false);
    if (resourceBlock == null) {
      try {
        resourceBlock=addResourceBlock(companyId,groupId,name,permissionsHash,resourceBlockPermissionsContainer);
      }
 catch (      SystemException se) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to add a new resource block. Retrying");
        }
        continue;
      }
      break;
    }
 else {
      Session session=resourceBlockPersistence.openSession();
      try {
        String sql=CustomSQLUtil.get(_RETAIN_RESOURCE_BLOCK);
        SQLQuery sqlQuery=session.createSQLQuery(sql);
        QueryPos qPos=QueryPos.getInstance(sqlQuery);
        qPos.add(resourceBlock.getResourceBlockId());
        if (sqlQuery.executeUpdate() > 0) {
          resourceBlock.setReferenceCount(resourceBlock.getReferenceCount() + 1);
          break;
        }
      }
 catch (      ORMException orme) {
        if (_log.isWarnEnabled()) {
          long resourceBlockId=resourceBlock.getResourceBlockId();
          _log.warn("Unable to increment reference count for " + "resource block " + resourceBlockId + ". Retrying");
        }
      }
 finally {
        session.evict(resourceBlock);
        resourceBlockPersistence.closeSession(session);
      }
    }
  }
  permissionedModel.setResourceBlockId(resourceBlock.getResourceBlockId());
  Callable<Void> callable=new Callable<Void>(){
    public Void call() throws Exception {
      permissionedModel.persist();
      return null;
    }
  }
;
  TransactionCommitCallbackUtil.registerCallback(callable);
  return resourceBlock;
}

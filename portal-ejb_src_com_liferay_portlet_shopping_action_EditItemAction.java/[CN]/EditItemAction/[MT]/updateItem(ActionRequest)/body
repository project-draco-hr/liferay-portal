{
  UploadPortletRequest uploadReq=PortalUtil.getUploadPortletRequest(req);
  String itemId=ParamUtil.getString(uploadReq,"itemId");
  String categoryId=ParamUtil.getString(uploadReq,"categoryId");
  String sku=ParamUtil.getString(uploadReq,"sku");
  String name=ParamUtil.getString(uploadReq,"name");
  String description=ParamUtil.getString(uploadReq,"description");
  String properties=ParamUtil.getString(uploadReq,"properties");
  int fieldsCount=ParamUtil.getInteger(uploadReq,"fieldsCount",1);
  List itemFields=new ArrayList();
  for (int i=0; i < fieldsCount; i++) {
    String fieldName=ParamUtil.getString(uploadReq,"fieldName" + i);
    String fieldValues=ParamUtil.getString(uploadReq,"fieldValues" + i);
    String fieldDescription=ParamUtil.getString(uploadReq,"fieldDescription" + i);
    ShoppingItemField itemField=new ShoppingItemField();
    itemField.setName(fieldName);
    itemField.setValues(fieldValues);
    itemField.setDescription(fieldDescription);
    itemFields.add(itemField);
  }
  String fieldsQuantities=ParamUtil.getString(uploadReq,"fieldsQuantities");
  int pricesCount=ParamUtil.getInteger(uploadReq,"pricesCount",1);
  List itemPrices=new ArrayList();
  for (int i=0; i < pricesCount; i++) {
    int minQuantity=ParamUtil.getInteger(uploadReq,"minQuantity" + i);
    int maxQuantity=ParamUtil.getInteger(uploadReq,"maxQuantity" + i);
    double price=ParamUtil.getDouble(uploadReq,"price" + i);
    double discount=ParamUtil.getDouble(uploadReq,"discount" + i) / 100;
    boolean taxable=ParamUtil.getBoolean(uploadReq,"taxable" + i);
    double shipping=ParamUtil.getDouble(uploadReq,"shipping" + i);
    boolean useShippingFormula=ParamUtil.getBoolean(uploadReq,"useShippingFormula" + i);
    boolean active=ParamUtil.getBoolean(uploadReq,"active" + i);
    int defaultPrice=ParamUtil.getInteger(uploadReq,"defaultPrice");
    int status=ShoppingItemPrice.STATUS_ACTIVE_DEFAULT;
    if ((defaultPrice != i) && active) {
      status=ShoppingItemPrice.STATUS_ACTIVE;
    }
 else     if ((defaultPrice != i) && !active) {
      status=ShoppingItemPrice.STATUS_INACTIVE;
    }
    ShoppingItemPrice itemPrice=new ShoppingItemPrice();
    itemPrice.setMinQuantity(minQuantity);
    itemPrice.setMaxQuantity(maxQuantity);
    itemPrice.setPrice(price);
    itemPrice.setDiscount(discount);
    itemPrice.setTaxable(taxable);
    itemPrice.setShipping(shipping);
    itemPrice.setUseShippingFormula(useShippingFormula);
    itemPrice.setStatus(status);
    itemPrices.add(itemPrice);
  }
  boolean requiresShipping=ParamUtil.getBoolean(uploadReq,"requiresShipping");
  int stockQuantity=ParamUtil.getInteger(uploadReq,"stockQuantity");
  boolean featured=ParamUtil.getBoolean(uploadReq,"featured");
  Boolean sale=null;
  boolean smallImage=ParamUtil.getBoolean(uploadReq,"smallImage");
  String smallImageURL=ParamUtil.getString(uploadReq,"smallImageURL");
  File smallFile=uploadReq.getFile("smallFile");
  boolean mediumImage=ParamUtil.getBoolean(uploadReq,"mediumImage");
  String mediumImageURL=ParamUtil.getString(uploadReq,"mediumImageURL");
  File mediumFile=uploadReq.getFile("mediumFile");
  boolean largeImage=ParamUtil.getBoolean(uploadReq,"largeImage");
  String largeImageURL=ParamUtil.getString(uploadReq,"largeImageURL");
  File largeFile=uploadReq.getFile("largeFile");
  boolean addCommunityPermissions=ParamUtil.getBoolean(req,"addCommunityPermissions");
  boolean addGuestPermissions=ParamUtil.getBoolean(req,"addGuestPermissions");
  if (Validator.isNull(itemId)) {
    ShoppingItemServiceUtil.addItem(categoryId,sku,name,description,properties,fieldsQuantities,requiresShipping,stockQuantity,featured,sale,smallImage,smallImageURL,smallFile,mediumImage,mediumImageURL,mediumFile,largeImage,largeImageURL,largeFile,itemFields,itemPrices,addCommunityPermissions,addGuestPermissions);
  }
 else {
    ShoppingItemServiceUtil.updateItem(itemId,categoryId,sku,name,description,properties,fieldsQuantities,requiresShipping,stockQuantity,featured,sale,smallImage,smallImageURL,smallFile,mediumImage,mediumImageURL,mediumFile,largeImage,largeImageURL,largeFile,itemFields,itemPrices);
  }
}

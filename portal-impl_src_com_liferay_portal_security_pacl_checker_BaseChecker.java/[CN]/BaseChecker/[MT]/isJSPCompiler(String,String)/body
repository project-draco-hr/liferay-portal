{
  for (int i=1; ; i++) {
    Class<?> callerClass=Reflection.getCallerClass(i);
    if (callerClass == null) {
      break;
    }
    String callerClassName=callerClass.getName();
    if (!callerClassName.startsWith(_PACKAGE_NAME_ORG_APACHE_JASPER_COMPILER) && !callerClassName.startsWith(_PACKAGE_NAME_ORG_APACHE_JASPER_XMLPARSER) && !callerClassName.startsWith(_PACKAGE_NAME_ORG_APACHE_NAMING_RESOURCES)&& !callerClassName.equals(_ClASS_NAME_DEFAULT_INSTANCE_MANAGER)&& !callerClassName.equals(_ClASS_NAME_JASPER_LOADER)&& !callerClassName.equals(_ClASS_NAME_TAG_HANDLER_POOL)) {
      continue;
    }
    ClassLoader callerClassLoader=PACLClassLoaderUtil.getClassLoader(callerClass);
    if (callerClassLoader != _commonClassLoader) {
      if (Validator.isNotNull(action)) {
        _log.error("A plugin is hijacking the JSP compiler via " + callerClassName + " to "+ action+ " "+ subject);
      }
 else {
        _log.error("A plugin is hijacking the JSP compiler via " + callerClassName + " to "+ subject);
      }
      return false;
    }
    if (_log.isDebugEnabled()) {
      if (Validator.isNotNull(action)) {
        _log.debug("Allowing the JSP compiler via " + callerClassName + " to "+ action+ " "+ subject);
      }
 else {
        _log.debug("Allowing the JSP compiler via " + callerClassName + " to "+ subject);
      }
    }
    return true;
  }
  return false;
}

{
  TestInterface testInterface=new TestInterface();
  ReflectionServiceTracker reflectionServiceTracker=new ReflectionServiceTracker(testInterface);
  TrackedOne trackedOne=new TrackedOne();
  ServiceRegistration<InterfaceOne> serviceRegistration1=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceOne.class,trackedOne,3);
  TrackedTwo trackedTwo=new TrackedTwo();
  ServiceRegistration<InterfaceTwo> serviceRegistration2=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceTwo.class,trackedTwo,3);
  TrackedOne trackedOne2=new TrackedOne();
  ServiceRegistration<InterfaceOne> serviceRegistration3=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceOne.class,trackedOne2,2);
  TrackedTwo trackedTwo2=new TrackedTwo();
  ServiceRegistration<InterfaceTwo> serviceRegistration4=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceTwo.class,trackedTwo2,2);
  TrackedOne trackedOne3=new TrackedOne();
  ServiceRegistration<InterfaceOne> serviceRegistration5=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceOne.class,trackedOne3,1);
  TrackedTwo trackedTwo3=new TrackedTwo();
  ServiceRegistration<InterfaceTwo> serviceRegistration6=ReflectionServiceTrackerTestUtil.registerServiceWithRanking(_bundleContext,InterfaceTwo.class,trackedTwo3,1);
  serviceRegistration1.unregister();
  serviceRegistration2.unregister();
  Assert.assertEquals(trackedOne2,testInterface.getTrackedOne());
  Assert.assertEquals(trackedTwo2,testInterface.getTrackedTwo());
  serviceRegistration3.unregister();
  serviceRegistration4.unregister();
  serviceRegistration5.unregister();
  serviceRegistration6.unregister();
  reflectionServiceTracker.close();
}

{
  String className=doc.get(Field.ENTRY_CLASS_NAME);
  String classPK=doc.get(Field.ENTRY_CLASS_PK);
  String groupId=doc.get(Field.GROUP_ID);
  if ((PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM != 5) || Validator.isNull(className) || Validator.isNull(classPK)|| Validator.isNull(groupId)) {
    return;
  }
  try {
    Resource resource=ResourceLocalServiceUtil.getResource(companyId,className,ResourceConstants.SCOPE_INDIVIDUAL,classPK);
    Group group=GroupLocalServiceUtil.getGroup(Long.valueOf(groupId));
    List<Role> roles=ResourceActionsUtil.getRoles(group,className);
    List<Long> roleIds=new ArrayList<Long>();
    for (    Role role : roles) {
      List<Permission> permissions=PermissionLocalServiceUtil.getRolePermissions(role.getRoleId(),resource.getResourceId());
      List<String> actions=ResourceActionsUtil.getActions(permissions);
      for (      String action : actions) {
        if (action.equals(ActionKeys.VIEW)) {
          roleIds.add(role.getRoleId());
        }
      }
    }
    doc.addKeyword(Field.ROLE_ID,ArrayUtil.toArray(roleIds));
  }
 catch (  NoSuchResourceException nsre) {
    return;
  }
catch (  Exception e) {
    _log.error(e,e);
  }
}

{
  passwordPolicy=toUnwrappedModel(passwordPolicy);
  boolean isNew=passwordPolicy.isNew();
  PasswordPolicyModelImpl passwordPolicyModelImpl=(PasswordPolicyModelImpl)passwordPolicy;
  if (Validator.isNull(passwordPolicy.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    passwordPolicy.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (passwordPolicy.getCreateDate() == null)) {
    if (serviceContext == null) {
      passwordPolicy.setCreateDate(now);
    }
 else {
      passwordPolicy.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!passwordPolicyModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      passwordPolicy.setModifiedDate(now);
    }
 else {
      passwordPolicy.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (passwordPolicy.isNew()) {
      session.save(passwordPolicy);
      passwordPolicy.setNew(false);
    }
 else {
      session.merge(passwordPolicy);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !PasswordPolicyModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((passwordPolicyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{passwordPolicyModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{passwordPolicyModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((passwordPolicyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{passwordPolicyModelImpl.getOriginalUuid(),passwordPolicyModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{passwordPolicyModelImpl.getUuid(),passwordPolicyModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((passwordPolicyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{passwordPolicyModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{passwordPolicyModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
  }
  EntityCacheUtil.putResult(PasswordPolicyModelImpl.ENTITY_CACHE_ENABLED,PasswordPolicyImpl.class,passwordPolicy.getPrimaryKey(),passwordPolicy,false);
  clearUniqueFindersCache(passwordPolicy);
  cacheUniqueFindersCache(passwordPolicy,isNew);
  passwordPolicy.resetOriginalValues();
  return passwordPolicy;
}

{
  String newContent=content;
  try {
    Document document=saxReaderUtil.read(content);
    Element rootElement=document.getRootElement();
    List<Element> elements=rootElement.elements();
    if (!Validator.equals(rootElement.getName(),"definition")) {
      newContent=StringUtil.replace(content,rootElement.getName(),"definition");
    }
    Matcher _endTagLineMatcher1=_endTagLinePattern1.matcher(newContent);
    while (_endTagLineMatcher1.find()) {
      Matcher _endTagLineMatcher2=_endTagLinePattern2.matcher(_endTagLineMatcher1.group());
      if (_endTagLineMatcher2.find()) {
        if (!_endTagLineMatcher2.group().contains("var")) {
          newContent=StringUtil.replace(newContent,_endTagLineMatcher2.group(),_endTagLineMatcher2.group() + "\n");
        }
      }
    }
    Matcher _endTagLineMatcher5=_endTagLinePattern5.matcher(newContent);
    while (_endTagLineMatcher5.find()) {
      Matcher _endTagLineMatcher6=_endTagLinePattern6.matcher(_endTagLineMatcher5.group());
      if (_endTagLineMatcher5.group().contains("var")) {
        if (_endTagLineMatcher6.find()) {
          if (!_endTagLineMatcher6.group().contains("var")) {
            newContent=StringUtil.replace(newContent,_endTagLineMatcher6.group(),"\n" + _endTagLineMatcher6.group());
          }
        }
      }
    }
    Matcher _tagLineMatcher1=_tagLinePattern1.matcher(newContent);
    while (_tagLineMatcher1.find()) {
      Matcher _tagLineMatcher2=_tagLinePattern2.matcher(_tagLineMatcher1.group());
      if (_tagLineMatcher2.find()) {
        newContent=StringUtil.replace(newContent,_tagLineMatcher1.group(),_tagLineMatcher2.group());
      }
    }
    Matcher _lineEndTagMatcher1=_lineEndTagPattern1.matcher(newContent);
    while (_lineEndTagMatcher1.find()) {
      Matcher _lineEndTagMatcher2=_lineEndTagPattern2.matcher(_lineEndTagMatcher1.group());
      if (_lineEndTagMatcher2.find()) {
        newContent=StringUtil.replace(newContent,_lineEndTagMatcher1.group(),_lineEndTagMatcher2.group());
      }
    }
    Matcher _endTagLineMatcher3=_endTagLinePattern3.matcher(newContent);
    while (_endTagLineMatcher3.find()) {
      Matcher _endTagLineMatcher4=_endTagLinePattern4.matcher(_endTagLineMatcher3.group());
      if (_endTagLineMatcher4.find()) {
        newContent=StringUtil.replace(newContent,_endTagLineMatcher3.group(),_endTagLineMatcher4.group());
      }
    }
    Matcher _emptyLineMatcher1=_emptyLinePattern1.matcher(newContent);
    while (_emptyLineMatcher1.find()) {
      newContent=StringUtil.replace(newContent,_emptyLineMatcher1.group(),"\n\n");
    }
    Matcher _emptySpaceLineMatcher1=_emptySpaceLinePattern1.matcher(newContent);
    while (_emptySpaceLineMatcher1.find()) {
      Matcher _emptySpaceLineMatcher2=_emptySpaceLinePattern2.matcher(_emptySpaceLineMatcher1.group());
      if (_emptySpaceLineMatcher2.find()) {
        newContent=StringUtil.replace(newContent,_emptySpaceLineMatcher1.group(),_emptySpaceLineMatcher2.group());
      }
    }
    Matcher _emptySpaceLineMatcher3=_emptySpaceLinePattern3.matcher(newContent);
    while (_emptySpaceLineMatcher3.find()) {
      Matcher _emptySpaceLineMatcher4=_emptySpaceLinePattern4.matcher(_emptySpaceLineMatcher3.group());
      if (_emptySpaceLineMatcher4.find()) {
        newContent=StringUtil.replace(newContent,_emptySpaceLineMatcher3.group(),_emptySpaceLineMatcher4.group());
      }
    }
    Matcher _endTagNoChildrenMatcher=_endTagNoChildrenPattern.matcher(newContent);
    while (_endTagNoChildrenMatcher.find()) {
      newContent=StringUtil.replace(newContent,_endTagNoChildrenMatcher.group(),"\" />");
    }
    return newContent;
  }
 catch (  DocumentException de) {
  }
  return newContent;
}

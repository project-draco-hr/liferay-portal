{
  long companyId=contact.getCompanyId();
  StopWatch stopWatch=new StopWatch();
  if (_log.isDebugEnabled()) {
    stopWatch.start();
    _log.debug("Exporting contact " + contact);
  }
  if (!_ldapSettings.isExportEnabled(companyId)) {
    return;
  }
  User user=_userLocalService.getUserByContactId(contact.getContactId());
  if (user.isDefaultUser() || (user.getStatus() != WorkflowConstants.STATUS_APPROVED)) {
    return;
  }
  long ldapServerId=_portalLDAP.getLdapServerId(companyId,user.getScreenName(),user.getEmailAddress());
  LdapContext ldapContext=_portalLDAP.getContext(ldapServerId,companyId);
  try {
    if (ldapContext == null) {
      return;
    }
    Properties contactMappings=_ldapSettings.getContactMappings(ldapServerId,companyId);
    Properties contactExpandoMappings=_ldapSettings.getContactExpandoMappings(ldapServerId,companyId);
    Binding binding=_portalLDAP.getUser(ldapServerId,contact.getCompanyId(),user.getScreenName(),user.getEmailAddress());
    if (binding == null) {
      Properties userMappings=_ldapSettings.getUserMappings(ldapServerId,companyId);
      binding=addUser(ldapServerId,ldapContext,user,userMappings);
    }
    Name name=new CompositeName();
    name.add(_portalLDAP.getNameInNamespace(ldapServerId,companyId,binding));
    Modifications modifications=_portalToLDAPConverter.getLDAPContactModifications(contact,contactExpandoAttributes,contactMappings,contactExpandoMappings);
    if (modifications == null) {
      return;
    }
    ModificationItem[] modificationItems=modifications.getItems();
    ldapContext.modifyAttributes(name,modificationItems);
  }
  finally {
    if (ldapContext != null) {
      ldapContext.close();
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Finished exporting contact " + contact + " in "+ stopWatch.getTime()+ "ms");
    }
  }
}

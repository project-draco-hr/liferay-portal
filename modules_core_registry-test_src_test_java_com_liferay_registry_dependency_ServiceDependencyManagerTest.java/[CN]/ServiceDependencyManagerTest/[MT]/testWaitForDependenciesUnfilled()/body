{
  Registry registry=RegistryUtil.getRegistry();
  final ServiceDependencyManager serviceDependencyManager=new ServiceDependencyManager();
  final AtomicBoolean dependenciesSatisfied=new AtomicBoolean(false);
  serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener(){
    @Override public void dependenciesFulfilled(){
      dependenciesSatisfied.set(true);
    }
    @Override public void destroy(){
    }
  }
);
  Filter filter1=registry.getFilter("(objectClass=" + TrackedOne.class.getName() + ")");
  Filter filter2=registry.getFilter("(objectClass=" + TrackedTwo.class.getName() + ")");
  serviceDependencyManager.registerDependencies(filter1,filter2);
  registry.registerService(TrackedOne.class,new TrackedOne());
  Thread dependencyWaiter=new Thread(new Runnable(){
    @Override public void run(){
      serviceDependencyManager.waitForDependencies(100);
    }
  }
);
  dependencyWaiter.setDaemon(true);
  dependencyWaiter.start();
  try {
    Thread.sleep(250);
    if (!dependencyWaiter.isAlive()) {
      Assert.assertFalse(dependenciesSatisfied.get());
      return;
    }
    Assert.fail("Dependencies should have timed out");
  }
 catch (  InterruptedException ie) {
  }
}

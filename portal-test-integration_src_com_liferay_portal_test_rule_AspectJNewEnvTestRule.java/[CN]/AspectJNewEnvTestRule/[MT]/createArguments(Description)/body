{
  List<String> arguments=super.createArguments(description);
  AdviseWith adviseWith=description.getAnnotation(AdviseWith.class);
  if (adviseWith == null) {
    return arguments;
  }
  Class<?>[] adviceClasses=adviseWith.adviceClasses();
  if (ArrayUtil.isEmpty(adviceClasses)) {
    return arguments;
  }
  StringBundler sb=new StringBundler(adviceClasses.length * 2 + 1);
  sb.append("-DaspectClasses=");
  for (  Class<?> adviceClass : adviceClasses) {
    Aspect aspect=adviceClass.getAnnotation(Aspect.class);
    if (aspect == null) {
      throw new IllegalArgumentException("Class " + adviceClass.getName() + " is not an aspect");
    }
    sb.append(adviceClass.getName());
    sb.append(StringPool.COMMA);
  }
  sb.setIndex(sb.index() - 1);
  arguments.add(sb.toString());
  return arguments;
}

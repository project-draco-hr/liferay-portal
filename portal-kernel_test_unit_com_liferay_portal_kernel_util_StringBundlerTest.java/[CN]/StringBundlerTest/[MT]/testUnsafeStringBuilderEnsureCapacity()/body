{
  int threadLocalBufferLimit=10;
  String propertyKey=StringBundler.class.getName() + ".threadlocal.buffer.limit";
  String propertyValue=System.getProperty(propertyKey);
  System.setProperty(propertyKey,String.valueOf(threadLocalBufferLimit));
  try {
    Assert.assertEquals(Integer.valueOf(threadLocalBufferLimit),ReflectionTestUtil.getFieldValue(StringBundler.class,"_THREAD_LOCAL_BUFFER_LIMIT"));
    StringBundler sb=new StringBundler(5);
    sb.append("test1");
    sb.append("test2");
    sb.append("test3");
    sb.append("test4");
    Assert.assertEquals("test1test2test3test4",sb.toString());
    sb.append("test5");
    Assert.assertEquals("test1test2test3test4test5",sb.toString());
    sb.setIndex(sb.index() - 1);
    Assert.assertEquals("test1test2test3test4",sb.toString());
  }
  finally {
    if (propertyValue == null) {
      System.clearProperty(propertyKey);
    }
 else {
      System.setProperty(propertyKey,propertyValue);
    }
  }
}

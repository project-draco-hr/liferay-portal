{
  int start=s.lastIndexOf(CharPool.NEW_LINE,pos);
  if (start == -1) {
    start=0;
  }
  int end=s.indexOf(CharPool.NEW_LINE,pos);
  if (end == -1) {
    end=s.length();
  }
  String line=s.substring(start,end);
  pos-=start;
  char delimeter=CharPool.SPACE;
  boolean insideQuotes=false;
  for (int i=0; i < line.length(); i++) {
    char c=line.charAt(i);
    if (insideQuotes) {
      if (c == delimeter) {
        int precedingBackSlashCount=0;
        for (int j=(i - 1); j >= 0; j--) {
          if (line.charAt(j) == CharPool.BACK_SLASH) {
            precedingBackSlashCount+=1;
          }
 else {
            break;
          }
        }
        if ((precedingBackSlashCount == 0) || ((precedingBackSlashCount % 2) == 0)) {
          insideQuotes=false;
        }
      }
    }
 else     if ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {
      delimeter=c;
      insideQuotes=true;
    }
    if (pos == i) {
      return insideQuotes;
    }
  }
  return false;
}

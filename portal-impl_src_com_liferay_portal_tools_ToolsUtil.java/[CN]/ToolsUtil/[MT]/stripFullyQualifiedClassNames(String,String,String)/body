{
  if (Validator.isNull(content) || Validator.isNull(imports)) {
    return content;
  }
  Pattern pattern1=Pattern.compile("\n(.*)" + StringUtil.replace(packagePath,CharPool.PERIOD,"\\.") + "\\.([A-Z]\\w+)\\W");
  Matcher matcher1=pattern1.matcher(content);
  while (matcher1.find()) {
    String lineStart=matcher1.group(1);
    if (lineStart.startsWith("import ") || lineStart.contains("//") || ToolsUtil.isInsideQuotes(content,matcher1.start(2))) {
      continue;
    }
    String className=matcher1.group(2);
    Pattern pattern2=Pattern.compile("import [\\w.]+\\." + className + ";");
    Matcher matcher2=pattern2.matcher(imports);
    if (matcher2.find()) {
      continue;
    }
    String newContent=StringUtil.replaceFirst(content,packagePath + ".",StringPool.BLANK,matcher1.start());
    return stripFullyQualifiedClassNames(newContent,imports,packagePath);
  }
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(imports));
  String line=null;
  while ((line=unsyncBufferedReader.readLine()) != null) {
    int x=line.indexOf("import ");
    if (x == -1) {
      continue;
    }
    String importPackageAndClassName=line.substring(x + 7,line.lastIndexOf(StringPool.SEMICOLON));
    Pattern pattern3=Pattern.compile("\n(.*)(" + StringUtil.replace(importPackageAndClassName,".","\\.") + ")\\W");
    Matcher matcher3=pattern3.matcher(content);
    while (matcher3.find()) {
      String lineStart=matcher3.group(1);
      if (lineStart.startsWith("import ") || lineStart.contains("//") || ToolsUtil.isInsideQuotes(content,matcher3.start(2))) {
        continue;
      }
      String importClassName=importPackageAndClassName.substring(importPackageAndClassName.lastIndexOf(StringPool.PERIOD) + 1);
      String newContent=StringUtil.replaceFirst(content,importPackageAndClassName,importClassName,matcher3.start());
      return stripFullyQualifiedClassNames(newContent,imports,packagePath);
    }
  }
  return content;
}

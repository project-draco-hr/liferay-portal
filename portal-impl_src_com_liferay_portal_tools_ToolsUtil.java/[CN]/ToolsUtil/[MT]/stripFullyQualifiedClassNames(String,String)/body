{
  if (Validator.isNull(content) || Validator.isNull(imports)) {
    return content;
  }
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(imports));
  String line=null;
  while ((line=unsyncBufferedReader.readLine()) != null) {
    int x=line.indexOf("import ");
    if (x == -1) {
      continue;
    }
    String importPackageAndClassName=line.substring(x + 7,line.lastIndexOf(StringPool.SEMICOLON));
    x=-1;
    while (true) {
      x=content.indexOf(importPackageAndClassName,x + 1);
      if (x == -1) {
        break;
      }
      if (!isInsideQuotes(content,x)) {
        continue;
      }
      if (content.length() > (x + importPackageAndClassName.length())) {
        char nextChar=content.charAt(x + importPackageAndClassName.length());
        if (Character.isAlphabetic(nextChar) || Character.isDigit(nextChar) || (nextChar == CharPool.PERIOD)|| (nextChar == CharPool.SEMICOLON)|| (nextChar == CharPool.UNDERLINE)) {
          continue;
        }
        if (x > 0) {
          char previousChar=content.charAt(x - 1);
          if ((previousChar == CharPool.QUOTE) && (nextChar == CharPool.QUOTE)) {
            continue;
          }
        }
      }
      String importClassName=importPackageAndClassName.substring(importPackageAndClassName.lastIndexOf(StringPool.PERIOD) + 1);
      content=StringUtil.replaceFirst(content,importPackageAndClassName,importClassName,x);
    }
  }
  return content;
}

{
  StopWatch stopWatch=null;
  if (_log.isDebugEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
  }
  Group group=null;
  try {
    if (groupId > 0) {
      group=GroupLocalServiceUtil.getGroup(groupId);
      if (group.isStagingGroup()) {
        if (primKey.equals(String.valueOf(groupId))) {
          primKey=String.valueOf(group.getLiveGroupId());
        }
        groupId=group.getLiveGroupId();
        group=group.getLiveGroup();
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  PermissionCheckerBag bag=PermissionCacheUtil.getBag(user.getUserId(),groupId);
  if (signedIn && (bag == null)) {
    try {
      List<Group> userGroups=new ArrayList<Group>();
      if (groupId > 0) {
        if (GroupLocalServiceUtil.hasUserGroup(user.getUserId(),groupId)) {
          userGroups.add(group);
        }
      }
      List<Organization> userOrgs=getUserOrgs(user.getUserId());
      List<Group> userOrgGroups=GroupLocalServiceUtil.getOrganizationsGroups(userOrgs);
      List<UserGroup> userUserGroups=UserGroupLocalServiceUtil.getUserUserGroups(user.getUserId());
      List<Group> userUserGroupGroups=GroupLocalServiceUtil.getUserGroupsGroups(userUserGroups);
      List<Group> groups=new ArrayList<Group>(userGroups.size() + userOrgGroups.size() + userUserGroupGroups.size());
      groups.addAll(userGroups);
      groups.addAll(userOrgGroups);
      groups.addAll(userUserGroupGroups);
      List<Role> roles=null;
      if ((USER_CHECK_ALGORITHM == 3) || (USER_CHECK_ALGORITHM == 4)) {
        roles=RoleLocalServiceUtil.getUserRelatedRoles(user.getUserId(),groups);
        List<Role> userGroupRoles=RoleLocalServiceUtil.getUserGroupRoles(user.getUserId(),groupId);
        roles.addAll(userGroupRoles);
      }
 else {
        roles=new ArrayList<Role>();
      }
      if (_log.isDebugEnabled()) {
        _log.debug("Creating bag for " + groupId + " "+ name+ " "+ primKey+ " "+ actionId+ " takes "+ stopWatch.getTime()+ " ms");
      }
      bag=new PermissionCheckerBagImpl(user.getUserId(),userGroups,userOrgs,userOrgGroups,userUserGroupGroups,groups,roles);
      PermissionCacheUtil.putBag(user.getUserId(),groupId,bag);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  Boolean value=PermissionCacheUtil.getPermission(user.getUserId(),groupId,name,primKey,actionId);
  if (value == null) {
    value=Boolean.valueOf(hasPermissionImpl(groupId,name,primKey,actionId));
    PermissionCacheUtil.putPermission(user.getUserId(),groupId,name,primKey,actionId,value);
    if (_log.isDebugEnabled()) {
      _log.debug("Checking permission for " + groupId + " "+ name+ " "+ primKey+ " "+ actionId+ " takes "+ stopWatch.getTime()+ " ms");
    }
  }
  return value.booleanValue();
}

{
  if (name.indexOf(StringPool.PERIOD) != -1) {
    List<String> actions=ResourceActionsUtil.getModelResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
 else {
    List<String> actions=ResourceActionsUtil.getPortletResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
  long companyId=user.getCompanyId();
  long[] resourceIds=getResourceIds(companyId,0,name,primKey,actionId);
  PermissionCheckerBag bag=PermissionCacheUtil.getBag(defaultUserId,GUEST_GROUP_BAG_ID);
  if (bag == null) {
    Group guestGroup=GroupLocalServiceUtil.getGroup(companyId,GroupImpl.GUEST);
    List<Role> roles=RoleLocalServiceUtil.getGroupRoles(guestGroup.getGroupId());
    bag=new PermissionCheckerBagImpl(defaultUserId,new ArrayList<Group>(),new ArrayList<Organization>(),new ArrayList<Group>(),new ArrayList<Group>(),new ArrayList<Group>(),roles);
    PermissionCacheUtil.putBag(defaultUserId,GUEST_GROUP_BAG_ID,bag);
  }
  try {
    return PermissionLocalServiceUtil.hasUserPermissions(defaultUserId,0,actionId,resourceIds,bag);
  }
 catch (  Exception e) {
    return false;
  }
}

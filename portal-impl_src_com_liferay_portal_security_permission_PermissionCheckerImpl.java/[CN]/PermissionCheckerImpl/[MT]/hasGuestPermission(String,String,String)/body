{
  if (name.indexOf(StringPool.PERIOD) != -1) {
    List actions=ResourceActionsUtil.getModelResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
 else {
    List actions=ResourceActionsUtil.getPortletResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
  long companyId=user.getCompanyId();
  Group guestGroup=GroupServiceUtil.getGroup(companyId,GroupImpl.GUEST);
  PermissionCheckerBag bag=getBag(guestGroup.getGroupId());
  if (bag == null) {
    List groups=new ArrayList();
    groups.add(guestGroup);
    List roles=RoleServiceUtil.getUserRoles(user.getUserId());
    bag=new PermissionCheckerBagImpl(user.getUserId(),new ArrayList(),new ArrayList(),new ArrayList(),new ArrayList(),groups,roles);
    putBag(guestGroup.getGroupId(),bag);
  }
  try {
    return hasUserPermission(guestGroup.getGroupId(),name,primKey,actionId,false);
  }
 catch (  Exception e) {
    return false;
  }
}

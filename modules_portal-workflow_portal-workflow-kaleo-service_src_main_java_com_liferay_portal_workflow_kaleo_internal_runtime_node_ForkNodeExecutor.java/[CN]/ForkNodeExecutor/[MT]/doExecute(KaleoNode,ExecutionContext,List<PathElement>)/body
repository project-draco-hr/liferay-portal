{
  List<KaleoTransition> kaleoTransitions=currentKaleoNode.getKaleoTransitions();
  Map<String,KaleoInstanceToken> childKaleoInstanceTokens=new HashMap<>();
  for (  KaleoTransition kaleoTransition : kaleoTransitions) {
    KaleoInstanceToken parentKaleoInstanceToken=executionContext.getKaleoInstanceToken();
    KaleoInstanceToken childKaleoInstanceToken=kaleoInstanceTokenLocalService.addKaleoInstanceToken(parentKaleoInstanceToken.getKaleoInstanceTokenId(),executionContext.getWorkflowContext(),executionContext.getServiceContext());
    childKaleoInstanceTokens.put(kaleoTransition.getName(),childKaleoInstanceToken);
  }
  for (  KaleoTransition kaleoTransition : kaleoTransitions) {
    KaleoInstanceToken childKaleoInstanceToken=childKaleoInstanceTokens.get(kaleoTransition.getName());
    ExecutionContext forkedExecutionContext=new ExecutionContext(childKaleoInstanceToken,executionContext.getWorkflowContext(),executionContext.getServiceContext());
    PathElement pathElement=new PathElement(currentKaleoNode,kaleoTransition.getTargetKaleoNode(),forkedExecutionContext);
    remainingPathElements.add(pathElement);
  }
}

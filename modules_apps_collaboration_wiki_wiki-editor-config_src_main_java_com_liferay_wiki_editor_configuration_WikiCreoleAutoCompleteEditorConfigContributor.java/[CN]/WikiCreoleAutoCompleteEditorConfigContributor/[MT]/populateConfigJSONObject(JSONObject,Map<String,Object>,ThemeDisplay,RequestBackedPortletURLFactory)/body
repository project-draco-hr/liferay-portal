{
  JSONObject autoCompleteConfigJSONObject=JSONFactoryUtil.createJSONObject();
  autoCompleteConfigJSONObject.put("requestTemplate","query={query}");
  JSONArray triggerJSONArray=JSONFactoryUtil.createJSONArray();
  JSONObject triggerJSONObject=JSONFactoryUtil.createJSONObject();
  triggerJSONObject.put("resultFilters","function(query, results) {return results;}");
  triggerJSONObject.put("resultTextLocator","title");
  triggerJSONObject.put("term","[");
  triggerJSONObject.put("tplReplace","<a href=\"{title}\">{title}</a>");
  triggerJSONObject.put("tplResults","{title}");
  ResourceURL autoCompletePageTitleURL=(ResourceURL)requestBackedPortletURLFactory.createResourceURL(WikiPortletKeys.WIKI);
  autoCompletePageTitleURL.setResourceID("/wiki/autocomplete_page_title");
  Map<String,String> fileBrowserParams=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  autoCompletePageTitleURL.setParameter("nodeId",fileBrowserParams.get("nodeId"));
  String source=autoCompletePageTitleURL.toString() + "&" + PortalUtil.getPortletNamespace(WikiPortletKeys.WIKI);
  triggerJSONObject.put("source",source);
  triggerJSONArray.put(triggerJSONObject);
  autoCompleteConfigJSONObject.put("trigger",triggerJSONArray);
  jsonObject.put("autocomplete",autoCompleteConfigJSONObject);
  String extraPlugins=jsonObject.getString("extraPlugins");
  if (Validator.isNotNull(extraPlugins)) {
    extraPlugins+=",autocomplete";
  }
 else {
    extraPlugins="autocomplete,ae_placeholder,ae_selectionregion,ae_uicore";
  }
  jsonObject.put("extraPlugins",extraPlugins);
}

{
  PermissionChecker permissionChecker=getPermissionChecker();
  TrashEntry entry=trashEntryPersistence.findByPrimaryKey(entryId);
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(entry.getClassName());
  if (!trashHandler.hasTrashPermission(permissionChecker,0,entry.getClassPK(),TrashActionKeys.RESTORE)) {
    throw new TrashPermissionException(TrashPermissionException.RESTORE);
  }
  if (overrideClassPK > 0) {
    if (!trashHandler.hasTrashPermission(permissionChecker,0,overrideClassPK,TrashActionKeys.OVERWRITE)) {
      throw new TrashPermissionException(TrashPermissionException.RESTORE_OVERWRITE);
    }
    trashHandler.deleteTrashEntry(overrideClassPK);
    trashHandler.checkRestorableEntry(entry,TrashEntryConstants.DEFAULT_CONTAINER_ID,null);
  }
 else   if (name != null) {
    if (!trashHandler.hasTrashPermission(permissionChecker,0,entry.getClassPK(),TrashActionKeys.RENAME)) {
      throw new TrashPermissionException(TrashPermissionException.RESTORE_RENAME);
    }
    trashHandler.checkRestorableEntry(entry,TrashEntryConstants.DEFAULT_CONTAINER_ID,name);
    trashHandler.updateTitle(entry.getClassPK(),name);
  }
  trashHandler.restoreTrashEntry(getUserId(),entry.getClassPK());
  return entry;
}

{
  int entriesCount=trashEntryLocalService.getEntriesCount(groupId);
  List<TrashEntry> entries=trashEntryLocalService.getEntries(groupId,0,end + PropsValues.TRASH_SEARCH_LIMIT,obc);
  List<TrashEntry> filteredEntries=new ArrayList<TrashEntry>();
  PermissionChecker permissionChecker=getPermissionChecker();
  for (  TrashEntry entry : entries) {
    String className=entry.getClassName();
    long classPK=entry.getClassPK();
    try {
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(className);
      TrashRenderer trashRenderer=trashHandler.getTrashRenderer(classPK);
      if (trashRenderer.hasViewPermission(permissionChecker)) {
        filteredEntries.add(entry);
      }
    }
 catch (    Exception e) {
    }
  }
  int filteredEntriesCount=filteredEntries.size();
  if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) {
    if (end > filteredEntriesCount) {
      end=filteredEntriesCount;
    }
    if (start > filteredEntriesCount) {
      start=filteredEntriesCount;
    }
    filteredEntries=filteredEntries.subList(start,end);
  }
  boolean approximate=entriesCount > PropsValues.TRASH_SEARCH_LIMIT;
  return new Object[]{filteredEntries,filteredEntriesCount,approximate};
}

{
  TrashEntryList trashEntriesList=new TrashEntryList();
  int entriesCount=trashEntryLocalService.getEntriesCount(groupId);
  boolean approximate=entriesCount > PropsValues.TRASH_SEARCH_LIMIT;
  trashEntriesList.setApproximate(approximate);
  List<TrashEntry> entries=trashEntryLocalService.getEntries(groupId,0,end + PropsValues.TRASH_SEARCH_LIMIT,obc);
  List<TrashEntry> filteredEntries=new ArrayList<TrashEntry>();
  PermissionChecker permissionChecker=getPermissionChecker();
  for (  TrashEntry entry : entries) {
    String className=entry.getClassName();
    long classPK=entry.getClassPK();
    try {
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(className);
      if (trashHandler.hasPermission(permissionChecker,classPK,ActionKeys.VIEW)) {
        filteredEntries.add(entry);
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  int filteredEntriesCount=filteredEntries.size();
  if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) {
    if (end > filteredEntriesCount) {
      end=filteredEntriesCount;
    }
    if (start > filteredEntriesCount) {
      start=filteredEntriesCount;
    }
    filteredEntries=filteredEntries.subList(start,end);
  }
  trashEntriesList.setArray(TrashEntrySoap.toSoapModels(filteredEntries));
  trashEntriesList.setCount(filteredEntriesCount);
  return trashEntriesList;
}

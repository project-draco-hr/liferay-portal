{
  TrashEntryList trashEntriesList=new TrashEntryList();
  int entriesCount=trashEntryPersistence.countByGroupId(groupId);
  boolean approximate=entriesCount > PropsValues.TRASH_SEARCH_LIMIT;
  trashEntriesList.setApproximate(approximate);
  List<TrashEntry> entries=trashEntryPersistence.findByGroupId(groupId,0,end + PropsValues.TRASH_SEARCH_LIMIT,obc);
  List<TrashEntry> filteredEntries=new ArrayList<>();
  PermissionChecker permissionChecker=getPermissionChecker();
  for (  TrashEntry entry : entries) {
    String className=entry.getClassName();
    long classPK=entry.getClassPK();
    try {
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(className);
      if (trashHandler.hasTrashPermission(permissionChecker,0,classPK,ActionKeys.VIEW)) {
        filteredEntries.add(entry);
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  int total=filteredEntries.size();
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS)) {
    start=0;
    end=total;
  }
  int[] startAndEnd=SearchPaginationUtil.calculateStartAndEnd(start,end,total);
  start=startAndEnd[0];
  end=startAndEnd[1];
  filteredEntries=filteredEntries.subList(start,end);
  trashEntriesList.setArray(TrashEntrySoap.toSoapModels(filteredEntries));
  trashEntriesList.setCount(total);
  return trashEntriesList;
}

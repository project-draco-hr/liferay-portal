{
  long userId=portletDataContext.getUserId(discussion.getUserUuid());
  String className=discussion.getClassName();
  Map<Long,Long> relatedEntityIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(className);
  long newClassPK=MapUtil.getLong(relatedEntityIds,discussion.getClassPK(),discussion.getClassPK());
  MBDiscussion existingDiscussion=MBDiscussionLocalServiceUtil.fetchDiscussion(discussion.getClassName(),newClassPK);
  if ((existingDiscussion == null) && className.equals(Layout.class.getName()) && PropsValues.LAYOUT_COMMENTS_ENABLED) {
    MBMessage rootMessage=MBMessageLocalServiceUtil.addDiscussionMessage(userId,discussion.getUserName(),portletDataContext.getScopeGroupId(),Layout.class.getName(),newClassPK,WorkflowConstants.ACTION_PUBLISH);
    existingDiscussion=MBDiscussionLocalServiceUtil.getThreadDiscussion(rootMessage.getThreadId());
  }
  Map<Long,Long> discussionIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(MBDiscussion.class);
  discussionIds.put(discussion.getDiscussionId(),existingDiscussion.getDiscussionId());
  Map<Long,Long> threadIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(MBThread.class);
  threadIds.put(discussion.getThreadId(),existingDiscussion.getThreadId());
}

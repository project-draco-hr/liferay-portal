{
  IndexAccessor indexAccessor=LuceneHelperUtil.getIndexAccessor(searchContext.getCompanyId());
  IndexSearcher indexSearcher=null;
  try {
    String localizedFieldName=DocumentImpl.getLocalizedName(languageId,keywordFieldName);
    indexSearcher=LuceneHelperUtil.getIndexSearcher(searchContext.getCompanyId());
    List<IndexReader> indexReaders=new ArrayList<IndexReader>();
    if (indexSearcher.maxDoc() > 0) {
      ReaderUtil.gatherSubReaders(indexReaders,indexSearcher.getIndexReader());
    }
    Collection<Document> documents=new ArrayList<Document>();
    DictionaryReader dictionaryReader=new DictionaryReader(inputStream,StringPool.UTF8);
    Iterator<DictionaryEntry> iterator=dictionaryReader.getDictionaryEntriesIterator();
    while (iterator.hasNext()) {
      DictionaryEntry dictionaryEntry=iterator.next();
      String word=dictionaryEntry.getWord();
      boolean validWord=isValidWord(localizedFieldName,word,indexReaders);
      if (!validWord) {
        if (_log.isInfoEnabled()) {
          _log.info("Not indexing because word " + word + " is invalid");
        }
        continue;
      }
      Document document=createDocument(searchContext.getCompanyId(),groupId,languageId,localizedFieldName,word,dictionaryEntry.getWeight(),typeFieldValue,maxNGramLength);
      documents.add(document);
    }
    indexAccessor.addDocuments(documents);
  }
  finally {
    try {
      LuceneHelperUtil.releaseIndexSearcher(searchContext.getCompanyId(),indexSearcher);
    }
 catch (    IOException ioe) {
      _log.error("Unable to release searcher",ioe);
    }
  }
}

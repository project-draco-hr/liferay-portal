{
  List<LogRecord> logRecords=JDKLoggerTestUtil.configureJDKLogger(LoggingOutputProcessor.class.getName(),Level.INFO);
  Future<?> future=ProcessUtil.execute(ProcessUtil.LOGGING_OUTPUT_PROCESSOR,_buildArguments(Echo.class,"2"));
  future.get();
  future.cancel(true);
  List<String> messageRecords=new ArrayList<String>();
  for (  LogRecord logRecord : logRecords) {
    messageRecords.add(logRecord.getMessage());
  }
  assertTrue(messageRecords.contains("{stdErr}" + Echo.class.getName() + "0"));
  assertTrue(messageRecords.contains("{stdErr}" + Echo.class.getName() + "1"));
  assertTrue(messageRecords.contains("{stdOut}" + Echo.class.getName() + "0"));
  assertTrue(messageRecords.contains("{stdOut}" + Echo.class.getName() + "1"));
}

{
  String projectDirName=projectDir.getCanonicalPath();
  String projectName=StringUtil.extractLast(projectDirName,File.separatorChar);
  boolean javaProject=false;
  for (  String sourceDirName : _SOURCE_DIR_NAMES) {
    if (_fileUtil.exists(projectDirName + "/" + sourceDirName)) {
      javaProject=true;
      break;
    }
  }
  if (!javaProject) {
    System.out.println("Eclipse Java project will not be used because a source " + "folder does not exist");
  }
  writeProjectFile(projectDirName,projectName,javaProject);
  writeClasspathFile(libDir,dependencyJars,projectDirName,projectName,javaProject);
  for (  String sourceDirName : _SOURCE_DIR_NAMES) {
    if (_fileUtil.exists(projectDirName + "/" + sourceDirName)) {
      List<String> gitIgnores=new ArrayList<String>();
      if (sourceDirName.endsWith("ext-impl/src")) {
        gitIgnores.add("/classes");
        gitIgnores.add("/ext-impl.jar");
      }
 else       if (sourceDirName.endsWith("ext-service/src")) {
        gitIgnores.add("/classes");
        gitIgnores.add("/ext-service.jar");
      }
 else       if (sourceDirName.endsWith("ext-util-bridges/src")) {
        gitIgnores.add("/classes");
        gitIgnores.add("/ext-util-bridges.jar");
      }
 else       if (sourceDirName.endsWith("ext-util-java/src")) {
        gitIgnores.add("/classes");
        gitIgnores.add("/ext-util-java.jar");
      }
 else       if (sourceDirName.endsWith("ext-util-taglib/src")) {
        gitIgnores.add("/classes");
        gitIgnores.add("/ext-util-taglib.jar");
      }
 else {
        continue;
      }
      String dirName=projectDirName + "/" + sourceDirName+ "/../";
      if (gitIgnores.isEmpty()) {
        _fileUtil.delete(dirName + ".gitignore");
      }
 else {
        String gitIgnoresString=StringUtil.merge(gitIgnores,"\n");
        _fileUtil.write(dirName + ".gitignore",gitIgnoresString);
      }
    }
  }
  if (_fileUtil.exists(projectDirName + "/test")) {
    _fileUtil.write(projectDirName + "/.gitignore","/test-classes\n/test-results");
  }
 else {
    _fileUtil.delete(projectDirName + "/.gitignore");
  }
}

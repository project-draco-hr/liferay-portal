{
  Type returnType=method.getReturnType();
  String returnTypeGenericsName=getTypeGenericsName(returnType);
  String returnValueName=returnType.getValue();
  if (returnTypeGenericsName.contains("com.liferay.portal.kernel.search.") || returnTypeGenericsName.contains("com.liferay.portal.model.Theme") || returnTypeGenericsName.contains("com.liferay.social.kernel.model.SocialActivityDefinition")|| returnTypeGenericsName.equals("java.util.List<java.lang.Object>")|| returnValueName.equals("com.liferay.portal.model.Lock")|| returnValueName.equals("com.liferay.portlet.messageboards.model.MBMessageDisplay")|| returnValueName.startsWith("java.io")|| returnValueName.equals("java.util.Map")|| returnValueName.equals("java.util.Properties")|| returnValueName.startsWith("javax")) {
    return false;
  }
  if (returnTypeGenericsName.contains("com.liferay.portal.kernel.repository.model.FileEntry") || returnTypeGenericsName.contains("com.liferay.portal.kernel.repository.model.Folder")) {
  }
 else   if (returnTypeGenericsName.contains("com.liferay.portal.kernel.repository.")) {
    return false;
  }
  JavaParameter[] parameters=method.getParameters();
  for (  JavaParameter javaParameter : parameters) {
    Type type=javaParameter.getType();
    String parameterTypeName=type.getValue() + _getDimensions(type);
    if (parameterTypeName.equals("com.liferay.portal.kernel.util.UnicodeProperties") || parameterTypeName.equals("com.liferay.portal.theme.ThemeDisplay") || parameterTypeName.equals("com.liferay.portlet.PortletPreferencesImpl")|| parameterTypeName.equals("com.liferay.portlet.dynamicdatamapping.Fields")|| parameterTypeName.startsWith("java.io")|| parameterTypeName.startsWith("java.util.LinkedHashMap")|| (parameterTypeName.startsWith("java.util.Map") && !_isStringLocaleMap(javaParameter))|| parameterTypeName.startsWith("java.util.Properties")|| parameterTypeName.startsWith("javax")) {
      return false;
    }
  }
  return true;
}

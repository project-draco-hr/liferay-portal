{
  File sqlDir=new File(_sqlDirName);
  if (!sqlDir.exists()) {
    _mkdir(sqlDir);
  }
  File sqlFile=new File(_sqlDirName + "/" + _sqlFileName);
  if (!sqlFile.exists()) {
    _touch(sqlFile);
  }
  for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=_ejbList.get(i);
    if (!_isTargetEntity(entity)) {
      continue;
    }
    if (!entity.isDefaultDataSource()) {
      continue;
    }
    String createTableSQL=_getCreateTableSQL(entity);
    if (Validator.isNotNull(createTableSQL)) {
      _createSQLTables(sqlFile,createTableSQL,entity,true);
      Path updateSQLFilePath=_getUpdateSQLFilePath();
      if ((updateSQLFilePath != null) && Files.exists(updateSQLFilePath)) {
        _createSQLTables(updateSQLFilePath.toFile(),createTableSQL,entity,false);
      }
    }
  }
  for (  Map.Entry<String,EntityMapping> entry : _entityMappings.entrySet()) {
    EntityMapping entityMapping=entry.getValue();
    String createMappingTableSQL=_getCreateMappingTableSQL(entityMapping);
    if (Validator.isNotNull(createMappingTableSQL)) {
      _createSQLMappingTables(sqlFile,createMappingTableSQL,entityMapping,true);
    }
  }
  String content=_read(sqlFile);
  ToolsUtil.writeFileRaw(sqlFile,content.trim(),_modifiedFileNames);
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  long layoutPrototypeId=counterLocalService.increment();
  LayoutPrototype layoutPrototype=layoutPrototypePersistence.create(layoutPrototypeId);
  layoutPrototype.setUuid(serviceContext.getUuid());
  layoutPrototype.setCompanyId(companyId);
  layoutPrototype.setUserId(userId);
  layoutPrototype.setUserName(user.getFullName());
  layoutPrototype.setCreateDate(serviceContext.getCreateDate(now));
  layoutPrototype.setModifiedDate(serviceContext.getModifiedDate(now));
  layoutPrototype.setNameMap(nameMap);
  layoutPrototype.setDescriptionMap(descriptionMap);
  layoutPrototype.setActive(active);
  layoutPrototypePersistence.update(layoutPrototype);
  resourceLocalService.addResources(companyId,0,userId,LayoutPrototype.class.getName(),layoutPrototype.getLayoutPrototypeId(),false,true,false);
  String friendlyURL="/template-" + layoutPrototype.getLayoutPrototypeId();
  Group group=groupLocalService.addGroup(userId,GroupConstants.DEFAULT_PARENT_GROUP_ID,LayoutPrototype.class.getName(),layoutPrototype.getLayoutPrototypeId(),GroupConstants.DEFAULT_LIVE_GROUP_ID,layoutPrototype.getNameMap(),null,0,true,GroupConstants.DEFAULT_MEMBERSHIP_RESTRICTION,friendlyURL,false,true,null);
  if (GetterUtil.getBoolean(serviceContext.getAttribute("addDefaultLayout"),true)) {
    Map<Locale,String> friendlyURLMap=new HashMap<>();
    friendlyURLMap.put(LocaleUtil.getSiteDefault(),"/layout");
    layoutLocalService.addLayout(userId,group.getGroupId(),true,LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,layoutPrototype.getNameMap(),null,null,null,null,LayoutConstants.TYPE_PORTLET,StringPool.BLANK,false,friendlyURLMap,serviceContext);
  }
  return layoutPrototype;
}

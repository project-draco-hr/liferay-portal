{
  if (type.isArray()) {
    Class<?> componentType=type.getComponentType();
    return _formatType(componentType,genericTypes) + "[]";
  }
  if (type.isPrimitive()) {
    return type.getSimpleName();
  }
  if (type.equals(String.class)) {
    return "string";
  }
  if (type.equals(Locale.class)) {
    return "string";
  }
  if (type.equals(Date.class)) {
    return "long";
  }
  if (type.equals(Serializable.class)) {
    return "object";
  }
  if (type.equals(Object.class)) {
    return "object";
  }
  String typeName=type.getName();
  if (type.equals(List.class)) {
    typeName="list";
  }
 else   if (type.equals(Map.class)) {
    typeName="map";
  }
 else {
    _types.add(type);
  }
  if (genericTypes != null) {
    StringBundler genericTypesString=new StringBundler(2 + genericTypes.length * 2);
    genericTypesString.append(StringPool.LESS_THAN);
    for (int i=0; i < genericTypes.length; i++) {
      Class<?> genericType=genericTypes[i];
      if (i != 0) {
        genericTypesString.append(StringPool.COMMA);
      }
      genericTypesString.append(_formatType(genericType,null));
    }
    genericTypesString.append(StringPool.GREATER_THAN);
    return typeName + genericTypesString.toString();
  }
  return "object<" + typeName + ">";
}

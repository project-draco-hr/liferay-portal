{
  long fromRoleId=ParamUtil.getLong(actionRequest,"fromRoleId");
  long toRoleId=ParamUtil.getLong(actionRequest,"toRoleId");
  long[] permissionIds=StringUtil.split(ParamUtil.getString(actionRequest,"permissionIds"),0L);
  long resourceId=ParamUtil.getLong(actionRequest,"resourceId");
  Role toRole=RoleLocalServiceUtil.getRole(toRoleId);
  Resource resource=ResourceLocalServiceUtil.getResource(resourceId);
  ResourceCode resourceCode=ResourceCodeLocalServiceUtil.getResourceCode(resource.getCodeId());
  String name=resourceCode.getName();
  List<String> actionIds;
  if (toRole.getType() == RoleConstants.TYPE_REGULAR) {
    actionIds=ResourceActionsUtil.getModelResourceActions(name);
  }
 else {
    actionIds=ResourceActionsUtil.getModelResourceCommunityDefaultActions(name);
  }
  PermissionLocalServiceUtil.setRolePermissions(toRoleId,(String[])actionIds.toArray(new String[0]),resourceId);
  PermissionLocalServiceUtil.unsetRolePermissions(fromRoleId,permissionIds);
  if (PermissionLocalServiceUtil.getRolePermissions(fromRoleId).isEmpty()) {
    RoleLocalServiceUtil.deleteRole(fromRoleId);
  }
}

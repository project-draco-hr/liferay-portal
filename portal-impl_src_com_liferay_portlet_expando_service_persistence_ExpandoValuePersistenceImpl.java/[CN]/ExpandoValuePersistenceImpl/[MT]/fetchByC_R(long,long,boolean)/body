{
  Object[] finderArgs=new Object[]{columnId,rowId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_EXPANDOVALUE_WHERE);
    query.append(_FINDER_COLUMN_C_R_COLUMNID_2);
    query.append(_FINDER_COLUMN_C_R_ROWID_2);
    query.append(ExpandoValueModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(columnId);
      qPos.add(rowId);
      List<ExpandoValue> list=q.list();
      result=list;
      ExpandoValue expandoValue=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,list);
      }
 else {
        expandoValue=list.get(0);
        cacheResult(expandoValue);
        if ((expandoValue.getColumnId() != columnId) || (expandoValue.getRowId() != rowId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,expandoValue);
        }
      }
      return expandoValue;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,new ArrayList<ExpandoValue>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (ExpandoValue)result;
    }
  }
}

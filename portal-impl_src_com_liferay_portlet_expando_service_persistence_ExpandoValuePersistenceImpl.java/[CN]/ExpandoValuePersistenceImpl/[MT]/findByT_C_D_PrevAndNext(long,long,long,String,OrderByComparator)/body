{
  ExpandoValue expandoValue=findByPrimaryKey(valueId);
  int count=countByT_C_D(tableId,columnId,data);
  Session session=null;
  try {
    session=openSession();
    StringBundler query=null;
    if (obc != null) {
      query=new StringBundler(5 + (obc.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(5);
    }
    query.append(_SQL_SELECT_EXPANDOVALUE_WHERE);
    query.append(_FINDER_COLUMN_T_C_D_TABLEID_2);
    query.append(_FINDER_COLUMN_T_C_D_COLUMNID_2);
    if (data == null) {
      query.append(_FINDER_COLUMN_T_C_D_DATA_1);
    }
 else {
      if (data.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_T_C_D_DATA_3);
      }
 else {
        query.append(_FINDER_COLUMN_T_C_D_DATA_2);
      }
    }
    if (obc != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,obc);
    }
 else {
      query.append(ExpandoValueModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(tableId);
    qPos.add(columnId);
    if (data != null) {
      qPos.add(data);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,expandoValue);
    ExpandoValue[] array=new ExpandoValueImpl[3];
    array[0]=(ExpandoValue)objArray[0];
    array[1]=(ExpandoValue)objArray[1];
    array[2]=(ExpandoValue)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  DLFileEntry fileEntry=DLAppLocalServiceUtil.getFileEntry(activity.getClassPK());
  if (!DLFileEntryPermission.contains(permissionChecker,fileEntry,ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  int activityType=activity.getType();
  String link=themeDisplay.getPortalURL() + themeDisplay.getPathMain() + "/document_library/get_file?groupId="+ fileEntry.getGroupId()+ "&folderId="+ fileEntry.getFolderId()+ "&title="+ HttpUtil.encodeURL(fileEntry.getTitle());
  String titlePattern=null;
  if (activityType == DLActivityKeys.ADD_FILE_ENTRY) {
    titlePattern="activity-document-library-add-file";
  }
 else   if (activityType == DLActivityKeys.UPDATE_FILE_ENTRY) {
    titlePattern="activity-document-library-update-file";
  }
  if (Validator.isNotNull(groupName)) {
    titlePattern+="-in";
  }
  String fileTitle=wrapLink(link,HtmlUtil.escape(cleanContent(fileEntry.getTitle())));
  Object[] titleArguments=new Object[]{groupName,creatorUserName,fileTitle};
  String title=themeDisplay.translate(titlePattern,titleArguments);
  StringBundler sb=new StringBundler(3);
  String fileEntryLink=themeDisplay.getPortalURL() + themeDisplay.getPathMain() + "/document_library/find_file_entry?fileEntryId="+ fileEntry.getFileEntryId();
  sb.append(wrapLink(fileEntryLink,"view-document",themeDisplay));
  sb.append(StringPool.SPACE);
  String folderLink=themeDisplay.getPortalURL() + themeDisplay.getPathMain() + "/document_library/find_folder?groupId="+ fileEntry.getGroupId()+ "&folderId="+ fileEntry.getFolderId();
  sb.append(wrapLink(folderLink,"go-to-folder",themeDisplay));
  String body=sb.toString();
  return new SocialActivityFeedEntry(link,title,body);
}

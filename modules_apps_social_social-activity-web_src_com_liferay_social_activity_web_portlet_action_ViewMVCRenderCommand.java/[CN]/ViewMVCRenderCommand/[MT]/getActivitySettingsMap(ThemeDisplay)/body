{
  Map<String,Boolean> activitySettingsMap=new LinkedHashMap<>();
  List<SocialActivitySetting> activitySettings=_socialActivitySettingService.getActivitySettings(themeDisplay.getSiteGroupIdOrLiveGroupId());
  String[] modelNames=SocialConfigurationUtil.getActivityModelNames();
  Comparator<String> comparator=new ModelResourceComparator(themeDisplay.getLocale());
  Arrays.sort(modelNames,comparator);
  for (  String modelName : modelNames) {
    List<SocialActivityDefinition> activityDefinitions=_socialActivitySettingService.getActivityDefinitions(themeDisplay.getScopeGroupId(),modelName);
    for (    SocialActivityDefinition activityDefinition : activityDefinitions) {
      if (activityDefinition.isCountersEnabled()) {
        activitySettingsMap.put(modelName,false);
        break;
      }
    }
  }
  for (  SocialActivitySetting activitySetting : activitySettings) {
    String name=activitySetting.getName();
    if (name.equals("enabled") && activitySettingsMap.containsKey(activitySetting.getClassName())) {
      activitySettingsMap.put(activitySetting.getClassName(),GetterUtil.getBoolean(activitySetting.getValue()));
    }
  }
  return activitySettingsMap;
}

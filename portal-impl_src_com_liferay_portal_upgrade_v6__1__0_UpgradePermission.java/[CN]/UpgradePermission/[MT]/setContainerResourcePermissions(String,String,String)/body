{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  ResultSet rsCompany=null;
  ResultSet rsGroups=null;
  ResultSet rsResource=null;
  ResultSet rsPermission=null;
  ResultSet rsRole=null;
  try {
    con=DataAccess.getConnection();
    ps=con.prepareStatement("select companyId from Company");
    rsCompany=ps.executeQuery();
    while (rsCompany.next()) {
      long companyId=rsCompany.getLong("companyId");
      ps=con.prepareStatement("select distinct codeId from ResourceCode ".concat("where companyId = ? ").concat("and name = ? and scope = ?"));
      ps.setLong(1,companyId);
      ps.setString(2,name);
      ps.setInt(3,ResourceConstants.SCOPE_INDIVIDUAL);
      rs=ps.executeQuery();
      while (rs.next()) {
        long codeId=rs.getLong("codeId");
        ps=con.prepareStatement("select groupId from Group_ ".concat("where companyId = ?"));
        ps.setLong(1,companyId);
        rsGroups=ps.executeQuery();
        while (rsGroups.next()) {
          String primKey=Long.toString(rsGroups.getLong("groupId"));
          ps=con.prepareStatement("select resourceId from Resource ".concat("where codeId = ? and primKey = ?"));
          ps.setLong(1,codeId);
          ps.setString(2,primKey);
          rsResource=ps.executeQuery();
          while (rsResource.next()) {
            long resourceId=rsResource.getLong("resourceId");
            ps=con.prepareStatement("select permissionId from Permission ".concat("where actionId = ? and resourceId = ?"));
            ps.setString(1,actionId);
            ps.setLong(2,resourceId);
            rsPermission=ps.executeQuery();
            long permissionId=0;
            if (rsPermission.next()) {
              permissionId=rsPermission.getLong("permissionId");
            }
 else {
              permissionId=CounterLocalServiceUtil.increment("com.liferay.portal.model.Permisson");
              ps=con.prepareStatement("insert into Permission_".concat(" (permissionId, companyId, actionId,").concat(" resourceId) values(?, ?, ?, ?)"));
              ps.setLong(1,permissionId);
              ps.setLong(2,companyId);
              ps.setString(3,actionId);
              ps.setLong(4,resourceId);
              if (ps.executeUpdate() < 1) {
              }
            }
            if ((PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) || roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.OWNER)|| roleName.equals(RoleConstants.SITE_MEMBER)) {
              ps=con.prepareStatement("select roleId from Role_ ".concat("where companyId = ? and roleName = ?"));
              ps.setLong(1,companyId);
              ps.setString(2,roleName);
              rsRole=ps.executeQuery();
              if (rsRole.next()) {
                ps=con.prepareStatement("insert into Role_Permissions ".concat("(roleId, permissionId) values (?, ?)"));
                ps.setLong(1,rsRole.getLong("roleId"));
                ps.setLong(2,permissionId);
                if (ps.executeUpdate() < 1) {
                }
              }
            }
 else {
              long defaultUserId=UserServiceUtil.getDefaultUserId(companyId);
              ps=con.prepareStatement("insert into User_Permissions ".concat("(userId, permissionId) values (?, ?)"));
              ps.setLong(1,defaultUserId);
              ps.setLong(2,permissionId);
              if (ps.executeUpdate() < 1) {
              }
            }
          }
        }
        if (_log.isInfoEnabled()) {
          _log.info("Processed 100 resource blocks for " + name);
        }
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

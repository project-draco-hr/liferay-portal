{
  journalFolder=toUnwrappedModel(journalFolder);
  boolean isNew=journalFolder.isNew();
  JournalFolderModelImpl journalFolderModelImpl=(JournalFolderModelImpl)journalFolder;
  if (Validator.isNull(journalFolder.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    journalFolder.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,journalFolder,merge);
    journalFolder.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !JournalFolderModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{journalFolderModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{journalFolderModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(journalFolderModelImpl.getOriginalGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{Long.valueOf(journalFolderModelImpl.getGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(journalFolderModelImpl.getOriginalCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{Long.valueOf(journalFolderModelImpl.getCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(journalFolderModelImpl.getOriginalGroupId()),Long.valueOf(journalFolderModelImpl.getOriginalParentFolderId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P,args);
      args=new Object[]{Long.valueOf(journalFolderModelImpl.getGroupId()),Long.valueOf(journalFolderModelImpl.getParentFolderId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P,args);
    }
  }
  EntityCacheUtil.putResult(JournalFolderModelImpl.ENTITY_CACHE_ENABLED,JournalFolderImpl.class,journalFolder.getPrimaryKey(),journalFolder);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{journalFolder.getUuid(),Long.valueOf(journalFolder.getGroupId())},journalFolder);
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,new Object[]{Long.valueOf(journalFolder.getGroupId()),Long.valueOf(journalFolder.getParentFolderId()),journalFolder.getName()},journalFolder);
  }
 else {
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_UUID_G.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{journalFolderModelImpl.getOriginalUuid(),Long.valueOf(journalFolderModelImpl.getOriginalGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_G,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_UUID_G,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{journalFolder.getUuid(),Long.valueOf(journalFolder.getGroupId())},journalFolder);
    }
    if ((journalFolderModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_G_P_N.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(journalFolderModelImpl.getOriginalGroupId()),Long.valueOf(journalFolderModelImpl.getOriginalParentFolderId()),journalFolderModelImpl.getOriginalName()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_P_N,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_P_N,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,new Object[]{Long.valueOf(journalFolder.getGroupId()),Long.valueOf(journalFolder.getParentFolderId()),journalFolder.getName()},journalFolder);
    }
  }
  return journalFolder;
}

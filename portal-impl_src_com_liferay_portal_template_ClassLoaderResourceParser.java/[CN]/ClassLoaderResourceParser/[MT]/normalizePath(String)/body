{
  List<String> elements=new ArrayList<>();
  boolean absolutePath=false;
  int previousIndex=-1;
  for (int index; (index=path.indexOf(CharPool.SLASH,previousIndex + 1)) != -1; previousIndex=index) {
    if ((previousIndex + 1) == index) {
      if (previousIndex == -1) {
        absolutePath=true;
        continue;
      }
      throw new IllegalArgumentException("Unable to parse path " + path);
    }
    String pathElement=path.substring(previousIndex + 1,index);
    if (pathElement.equals(StringPool.PERIOD)) {
      continue;
    }
    if (pathElement.equals(StringPool.DOUBLE_PERIOD)) {
      if (elements.isEmpty()) {
        throw new IllegalArgumentException("Unable to parse path " + path);
      }
      elements.remove(elements.size() - 1);
      continue;
    }
    elements.add(pathElement);
  }
  if (previousIndex == -1) {
    elements.add(path);
  }
 else   if ((previousIndex + 1) < path.length()) {
    elements.add(path.substring(previousIndex + 1));
  }
  String normalizedPath=StringUtil.merge(elements,StringPool.SLASH);
  if (absolutePath) {
    normalizedPath=StringPool.SLASH.concat(normalizedPath);
  }
  return normalizedPath;
}

{
  long pk=ServiceTestUtil.nextLong();
  DDMContent newDDMContent=_persistence.create(pk);
  newDDMContent.setUuid(ServiceTestUtil.randomString());
  newDDMContent.setGroupId(ServiceTestUtil.nextLong());
  newDDMContent.setCompanyId(ServiceTestUtil.nextLong());
  newDDMContent.setUserId(ServiceTestUtil.nextLong());
  newDDMContent.setUserName(ServiceTestUtil.randomString());
  newDDMContent.setCreateDate(ServiceTestUtil.nextDate());
  newDDMContent.setModifiedDate(ServiceTestUtil.nextDate());
  newDDMContent.setName(ServiceTestUtil.randomString());
  newDDMContent.setDescription(ServiceTestUtil.randomString());
  newDDMContent.setXml(ServiceTestUtil.randomString());
  _persistence.update(newDDMContent,false);
  DDMContent existingDDMContent=_persistence.findByPrimaryKey(newDDMContent.getPrimaryKey());
  Assert.assertEquals(existingDDMContent.getUuid(),newDDMContent.getUuid());
  Assert.assertEquals(existingDDMContent.getContentId(),newDDMContent.getContentId());
  Assert.assertEquals(existingDDMContent.getGroupId(),newDDMContent.getGroupId());
  Assert.assertEquals(existingDDMContent.getCompanyId(),newDDMContent.getCompanyId());
  Assert.assertEquals(existingDDMContent.getUserId(),newDDMContent.getUserId());
  Assert.assertEquals(existingDDMContent.getUserName(),newDDMContent.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMContent.getCreateDate()),Time.getShortTimestamp(newDDMContent.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingDDMContent.getModifiedDate()),Time.getShortTimestamp(newDDMContent.getModifiedDate()));
  Assert.assertEquals(existingDDMContent.getName(),newDDMContent.getName());
  Assert.assertEquals(existingDDMContent.getDescription(),newDDMContent.getDescription());
  Assert.assertEquals(existingDDMContent.getXml(),newDDMContent.getXml());
}

{
  if (userId <= 0) {
    return null;
  }
  try {
    User user=UserServiceUtil.getUserById(userId);
    UserCredential userCredential=new UserCredential();
    userCredential.setCompanyId(user.getCompanyId());
    userCredential.setEmailAddress(user.getEmailAddress());
    userCredential.setLocale(user.getLocale());
    userCredential.setLogin(user.getLogin());
    userCredential.setScreenName(user.getScreenName());
    userCredential.setUserId(user.getUserId());
    long[] roleIds=user.getRoleIds();
    Set<Long> roleSet=new HashSet<Long>(roleIds.length);
    for (    long roleId : roleIds) {
      roleSet.add(Long.valueOf(roleId));
    }
    userCredential.setRoleSet(roleSet);
    return userCredential;
  }
 catch (  Exception e) {
    throw new WorkflowException("Could not request user information through UserService " + "for user id [" + userId + "]");
  }
}

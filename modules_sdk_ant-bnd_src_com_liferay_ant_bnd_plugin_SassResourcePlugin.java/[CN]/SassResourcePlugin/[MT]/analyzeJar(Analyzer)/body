{
  Parameters header=OSGiHeader.parseHeader(analyzer.getProperty(_SASS));
  if (header.isEmpty()) {
    return false;
  }
  Instructions instructions=new Instructions(header);
  Jar jar=analyzer.getJar();
  Map<String,Resource> resources=jar.getResources();
  Set<String> keySet=new HashSet<String>(resources.keySet());
  for (  String key : keySet) {
    for (    Instruction instruction : instructions.keySet()) {
      if (key.contains("/.sass-cache/") && instruction.matches(key)) {
        if (instruction.isNegated()) {
          break;
        }
        Resource resource=jar.remove(key);
        if (resource != null) {
          jar.putResource(key.replace("/.sass-cache/","/"),resource,true);
        }
      }
    }
  }
  return false;
}

{
  Object[] args=new Object[]{dlFileEntryModelImpl.getUuid(),dlFileEntryModelImpl.getGroupId()};
  finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_G,args);
  finderCache.removeResult(FINDER_PATH_FETCH_BY_UUID_G,args);
  if ((dlFileEntryModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_UUID_G.getColumnBitmask()) != 0) {
    args=new Object[]{dlFileEntryModelImpl.getOriginalUuid(),dlFileEntryModelImpl.getOriginalGroupId()};
    finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_G,args);
    finderCache.removeResult(FINDER_PATH_FETCH_BY_UUID_G,args);
  }
  args=new Object[]{dlFileEntryModelImpl.getGroupId(),dlFileEntryModelImpl.getFolderId(),dlFileEntryModelImpl.getName()};
  finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_N,args);
  finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_N,args);
  if ((dlFileEntryModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_G_F_N.getColumnBitmask()) != 0) {
    args=new Object[]{dlFileEntryModelImpl.getOriginalGroupId(),dlFileEntryModelImpl.getOriginalFolderId(),dlFileEntryModelImpl.getOriginalName()};
    finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_N,args);
    finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_N,args);
  }
  args=new Object[]{dlFileEntryModelImpl.getGroupId(),dlFileEntryModelImpl.getFolderId(),dlFileEntryModelImpl.getFileName()};
  finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_FN,args);
  finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_FN,args);
  if ((dlFileEntryModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_G_F_FN.getColumnBitmask()) != 0) {
    args=new Object[]{dlFileEntryModelImpl.getOriginalGroupId(),dlFileEntryModelImpl.getOriginalFolderId(),dlFileEntryModelImpl.getOriginalFileName()};
    finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_FN,args);
    finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_FN,args);
  }
  args=new Object[]{dlFileEntryModelImpl.getGroupId(),dlFileEntryModelImpl.getFolderId(),dlFileEntryModelImpl.getTitle()};
  finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_T,args);
  finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_T,args);
  if ((dlFileEntryModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_G_F_T.getColumnBitmask()) != 0) {
    args=new Object[]{dlFileEntryModelImpl.getOriginalGroupId(),dlFileEntryModelImpl.getOriginalFolderId(),dlFileEntryModelImpl.getOriginalTitle()};
    finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_T,args);
    finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F_T,args);
  }
}

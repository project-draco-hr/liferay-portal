{
  try {
    if (emailType.equals("denied") && JournalUtil.getEmailArticleApprovalDeniedEnabled(prefs)) {
    }
 else     if (emailType.equals("granted") && JournalUtil.getEmailArticleApprovalGrantedEnabled(prefs)) {
    }
 else     if (emailType.equals("requested") && JournalUtil.getEmailArticleApprovalRequestedEnabled(prefs)) {
    }
 else     if (emailType.equals("review") && JournalUtil.getEmailArticleReviewEnabled(prefs)) {
    }
 else {
      return;
    }
    Company company=companyPersistence.findByPrimaryKey(article.getCompanyId());
    User user=userPersistence.findByPrimaryKey(article.getUserId());
    articleURL+="&groupId=" + article.getGroupId() + "&articleId="+ article.getArticleId()+ "&version="+ article.getVersion();
    String portletName=PortalUtil.getPortletTitle(PortletKeys.JOURNAL,user);
    String fromName=JournalUtil.getEmailFromName(prefs);
    String fromAddress=JournalUtil.getEmailFromAddress(prefs);
    String toName=user.getFullName();
    String toAddress=user.getEmailAddress();
    if (emailType.equals("requested") || emailType.equals("review")) {
      String tempToName=fromName;
      String tempToAddress=fromAddress;
      fromName=toName;
      fromAddress=toAddress;
      toName=tempToName;
      toAddress=tempToAddress;
    }
    String subject=null;
    String body=null;
    if (emailType.equals("denied")) {
      subject=JournalUtil.getEmailArticleApprovalDeniedSubject(prefs);
      body=JournalUtil.getEmailArticleApprovalDeniedBody(prefs);
    }
 else     if (emailType.equals("granted")) {
      subject=JournalUtil.getEmailArticleApprovalGrantedSubject(prefs);
      body=JournalUtil.getEmailArticleApprovalGrantedBody(prefs);
    }
 else     if (emailType.equals("requested")) {
      subject=JournalUtil.getEmailArticleApprovalRequestedSubject(prefs);
      body=JournalUtil.getEmailArticleApprovalRequestedBody(prefs);
    }
 else     if (emailType.equals("review")) {
      subject=JournalUtil.getEmailArticleReviewSubject(prefs);
      body=JournalUtil.getEmailArticleReviewBody(prefs);
    }
    subject=StringUtil.replace(subject,new String[]{"[$ARTICLE_ID$]","[$ARTICLE_TITLE$]","[$ARTICLE_URL$]","[$ARTICLE_VERSION$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{article.getArticleId(),article.getTitle(),articleURL,String.valueOf(article.getVersion()),fromAddress,fromName,company.getVirtualHost(),portletName,toAddress,toName});
    body=StringUtil.replace(body,new String[]{"[$ARTICLE_ID$]","[$ARTICLE_TITLE$]","[$ARTICLE_URL$]","[$ARTICLE_VERSION$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{article.getArticleId(),article.getTitle(),articleURL,String.valueOf(article.getVersion()),fromAddress,fromName,company.getVirtualHost(),portletName,toAddress,toName});
    InternetAddress from=new InternetAddress(fromAddress,fromName);
    InternetAddress to=new InternetAddress(toAddress,toName);
    MailMessage message=new MailMessage(from,to,subject,body,true);
    mailService.sendEmail(message);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
catch (  PortalException pe) {
    throw pe;
  }
}

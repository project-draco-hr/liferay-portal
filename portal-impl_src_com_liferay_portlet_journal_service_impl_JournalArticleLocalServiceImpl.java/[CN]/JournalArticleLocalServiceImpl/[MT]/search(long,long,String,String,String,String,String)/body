{
  Searcher searcher=null;
  try {
    HitsImpl hits=new HitsImpl();
    BooleanQuery contextQuery=new BooleanQuery();
    LuceneUtil.addRequiredTerm(contextQuery,LuceneFields.PORTLET_ID,Indexer.PORTLET_ID);
    if (groupId > 0) {
      LuceneUtil.addRequiredTerm(contextQuery,LuceneFields.GROUP_ID,groupId);
    }
    BooleanQuery searchQuery=new BooleanQuery();
    if (Validator.isNotNull(title)) {
      LuceneUtil.addTerm(searchQuery,LuceneFields.TITLE,title);
    }
    if (Validator.isNotNull(content)) {
      LuceneUtil.addTerm(searchQuery,LuceneFields.CONTENT,content);
    }
    if (Validator.isNotNull(description)) {
      LuceneUtil.addTerm(searchQuery,LuceneFields.DESCRIPTION,description);
    }
    if (Validator.isNotNull(type)) {
      LuceneUtil.addRequiredTerm(searchQuery,"type",type);
    }
    BooleanQuery fullQuery=new BooleanQuery();
    fullQuery.add(contextQuery,BooleanClause.Occur.MUST);
    if (searchQuery.clauses().size() > 0) {
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    searcher=LuceneUtil.getSearcher(companyId);
    Sort sort=new Sort(new SortField(sortField,true));
    try {
      hits.recordHits(searcher.search(fullQuery,sort),searcher);
    }
 catch (    RuntimeException re) {
      String msg=GetterUtil.getString(re.getMessage());
      if (!msg.endsWith("does not appear to be indexed")) {
        throw re;
      }
    }
    return hits;
  }
 catch (  Exception e) {
    StringMaker sm=new StringMaker();
    sm.append(title);
    sm.append(StringPool.SPACE);
    sm.append(content);
    sm.append(StringPool.SPACE);
    sm.append(description);
    String keywords=sm.toString();
    return LuceneUtil.closeSearcher(searcher,keywords,e);
  }
}

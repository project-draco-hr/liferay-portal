{
  Date now=new Date();
  List articles=JournalArticleFinder.findByE_E(Boolean.FALSE,now,new Date(now.getTime() - CheckArticleJob.INTERVAL));
  if (_log.isDebugEnabled()) {
    _log.debug("Expiring " + articles.size() + " JournalArticles");
  }
  List companies=new ArrayList();
  for (int i=0; i < articles.size(); i++) {
    JournalArticle article=(JournalArticle)articles.get(i);
    article.setApproved(false);
    article.setExpired(true);
    JournalArticleUtil.update(article);
    JournalContentUtil.clearArticleGroupCache(article.getGroupId(),article.getArticleId(),article.getTemplateId());
    companies.add(new Long(article.getCompanyId()));
  }
  Iterator companyItr=companies.iterator();
  while (companyItr.hasNext()) {
    long companyId=((Long)companyItr.next()).longValue();
    LayoutCacheUtil.clearCache(companyId);
  }
  articles=JournalArticleFinder.findByR(now,new Date(now.getTime() - CheckArticleJob.INTERVAL));
  if (_log.isDebugEnabled()) {
    _log.debug("Sending " + articles.size() + " JournalArticle review emails");
  }
  for (int i=0; i < articles.size(); i++) {
    JournalArticle article=(JournalArticle)articles.get(i);
    Date reviewDate=article.getReviewDate();
    if (reviewDate != null) {
      long diff=reviewDate.getTime() - now.getTime();
      if ((diff > 0) && (diff < CheckArticleJob.INTERVAL)) {
        String articleURL=StringPool.BLANK;
        long ownerId=article.getGroupId();
        int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
        long plid=PortletKeys.PREFS_PLID_SHARED;
        String portletId=PortletKeys.JOURNAL;
        PortletPreferences prefs=PortletPreferencesLocalServiceUtil.getPreferences(article.getCompanyId(),ownerId,ownerType,plid,portletId);
        sendEmail(article,articleURL,prefs,"review");
      }
    }
  }
}

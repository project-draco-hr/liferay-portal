{
  Date now=new Date();
  List<JournalArticle> articles=journalArticleFinder.findByExpirationDate(JournalArticleConstants.CLASSNAME_ID_DEFAULT,new Date(now.getTime() + _JOURNAL_ARTICLE_CHECK_INTERVAL),new QueryDefinition(WorkflowConstants.STATUS_APPROVED));
  if (_log.isDebugEnabled()) {
    _log.debug("Expiring " + articles.size() + " articles");
  }
  Set<Long> companyIds=new HashSet<Long>();
  for (  JournalArticle article : articles) {
    if (PropsValues.JOURNAL_ARTICLE_EXPIRE_ALL_VERSIONS) {
      List<JournalArticle> currentArticles=journalArticlePersistence.findByG_A(article.getGroupId(),article.getArticleId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,new ArticleVersionComparator(true));
      for (      JournalArticle currentArticle : currentArticles) {
        currentArticle.setExpirationDate(article.getExpirationDate());
        currentArticle.setStatus(WorkflowConstants.STATUS_EXPIRED);
        journalArticlePersistence.update(currentArticle);
      }
    }
 else {
      article.setStatus(WorkflowConstants.STATUS_EXPIRED);
      journalArticlePersistence.update(article);
    }
    updatePreviousApprovedArticle(article);
    JournalContentUtil.clearCache(article.getGroupId(),article.getArticleId(),article.getTemplateId());
    companyIds.add(article.getCompanyId());
  }
  for (  long companyId : companyIds) {
    CacheUtil.clearCache(companyId);
  }
  if (_previousCheckDate == null) {
    _previousCheckDate=new Date(now.getTime() - _JOURNAL_ARTICLE_CHECK_INTERVAL);
  }
  articles=journalArticleFinder.findByReviewDate(JournalArticleConstants.CLASSNAME_ID_DEFAULT,now,_previousCheckDate);
  if (_log.isDebugEnabled()) {
    _log.debug("Sending review notifications for " + articles.size() + " articles");
  }
  for (  JournalArticle article : articles) {
    String articleURL=StringPool.BLANK;
    long ownerId=article.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId=PortletKeys.JOURNAL;
    PortletPreferences preferences=portletPreferencesLocalService.getPreferences(article.getCompanyId(),ownerId,ownerType,plid,portletId);
    sendEmail(article,articleURL,preferences,"review",new ServiceContext());
  }
  _previousCheckDate=now;
}

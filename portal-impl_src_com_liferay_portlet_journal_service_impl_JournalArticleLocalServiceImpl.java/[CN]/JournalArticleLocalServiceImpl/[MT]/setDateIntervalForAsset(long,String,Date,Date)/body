{
  Date[] dateInterval=new Date[2];
  List<JournalArticle> articles=journalArticlePersistence.findByG_A_A(groupId,articleId,true);
  boolean expiringArticle=true;
  if (latestExpirationDate == null) {
    expiringArticle=false;
  }
  if (articles != null && articles.size() > 0) {
    Iterator<JournalArticle> iterator=articles.iterator();
    while (iterator.hasNext()) {
      JournalArticle article=(JournalArticle)iterator.next();
      if (earliestDisplayDate == null || (article.getDisplayDate() != null && earliestDisplayDate.after(article.getDisplayDate()))) {
        earliestDisplayDate=article.getDisplayDate();
      }
      if (expiringArticle && (latestExpirationDate == null || (article.getExpirationDate() != null && latestExpirationDate.before(article.getExpirationDate())))) {
        latestExpirationDate=article.getExpirationDate();
      }
      if (expiringArticle && article.getExpirationDate() == null) {
        latestExpirationDate=null;
        expiringArticle=false;
      }
    }
  }
  dateInterval[0]=earliestDisplayDate;
  dateInterval[1]=latestExpirationDate;
  return dateInterval;
}

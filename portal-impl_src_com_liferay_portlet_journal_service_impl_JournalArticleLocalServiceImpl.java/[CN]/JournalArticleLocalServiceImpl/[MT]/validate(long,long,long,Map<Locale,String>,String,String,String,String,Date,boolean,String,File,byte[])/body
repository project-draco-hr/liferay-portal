{
  Locale articleDefaultLocale=LocaleUtil.fromLanguageId(LocalizationUtil.getDefaultLocale(content));
  Locale[] availableLocales=LanguageUtil.getAvailableLocales();
  if (!ArrayUtil.contains(availableLocales,articleDefaultLocale)) {
    LocaleException le=new LocaleException("The locale " + articleDefaultLocale + " is not available in company "+ companyId);
    Locale[] sourceAvailableLocales={articleDefaultLocale};
    le.setSourceAvailableLocales(sourceAvailableLocales);
    le.setTargetAvailableLocales(availableLocales);
    throw le;
  }
  if ((classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) && (titleMap.isEmpty() || Validator.isNull(titleMap.get(articleDefaultLocale)))) {
    throw new ArticleTitleException();
  }
 else   if (Validator.isNull(type)) {
    throw new ArticleTypeException();
  }
  validateContent(content);
  if (Validator.isNotNull(structureId)) {
    Group companyGroup=groupLocalService.getCompanyGroup(companyId);
    DDMStructure ddmStructure=null;
    try {
      ddmStructure=ddmStructurePersistence.findByG_S(groupId,structureId);
    }
 catch (    NoSuchStructureException nsse) {
      ddmStructure=ddmStructurePersistence.findByG_S(companyGroup.getGroupId(),structureId);
    }
    DDMTemplate ddmTemplate=null;
    if (Validator.isNotNull(templateId)) {
      ddmTemplate=ddmTemplateService.getTemplate(groupId,templateId);
      if (ddmTemplate.getClassPK() != ddmStructure.getStructureId()) {
        throw new NoSuchTemplateException();
      }
    }
 else     if (classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) {
      throw new NoSuchTemplateException();
    }
  }
  if ((expirationDate != null) && expirationDate.before(new Date()) && !ImportExportThreadLocal.isImportInProcess()) {
    throw new ArticleExpirationDateException();
  }
  String[] imageExtensions=PrefsPropsUtil.getStringArray(PropsKeys.JOURNAL_IMAGE_EXTENSIONS,StringPool.COMMA);
  if (smallImage && Validator.isNull(smallImageURL) && (smallImageFile != null)&& (smallImageBytes != null)) {
    String smallImageName=smallImageFile.getName();
    if (smallImageName != null) {
      boolean validSmallImageExtension=false;
      for (      String _imageExtension : imageExtensions) {
        if (StringPool.STAR.equals(_imageExtension) || StringUtil.endsWith(smallImageName,_imageExtension)) {
          validSmallImageExtension=true;
          break;
        }
      }
      if (!validSmallImageExtension) {
        throw new ArticleSmallImageNameException(smallImageName);
      }
    }
    long smallImageMaxSize=PrefsPropsUtil.getLong(PropsKeys.JOURNAL_IMAGE_SMALL_MAX_SIZE);
    if ((smallImageMaxSize > 0) && ((smallImageBytes == null) || (smallImageBytes.length > smallImageMaxSize))) {
      throw new ArticleSmallImageSizeException();
    }
  }
}

{
  if (!article.isApproved()) {
    return;
  }
  String articleURL=PortalUtil.getControlPanelFullURL(serviceContext.getScopeGroupId(),PortletKeys.JOURNAL,null);
  if (Validator.isNull(articleURL)) {
    return;
  }
  PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
  if (preferences == null) {
    long ownerId=article.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId=PortletKeys.JOURNAL;
    String defaultPreferences=null;
    preferences=portletPreferencesLocalService.getPreferences(article.getCompanyId(),ownerId,ownerType,plid,portletId,defaultPreferences);
  }
  if ((article.getVersion() == 1.0) && JournalUtil.getEmailArticleAddedEnabled(preferences)) {
  }
 else   if ((article.getVersion() != 1.0) && JournalUtil.getEmailArticleUpdatedEnabled(preferences)) {
  }
 else {
    return;
  }
  String fromName=JournalUtil.getEmailFromName(preferences);
  String fromAddress=JournalUtil.getEmailFromAddress(preferences);
  String subject=null;
  String body=null;
  if (article.getVersion() == 1.0) {
    subject=JournalUtil.getEmailArticleAddedSubject(preferences);
    body=JournalUtil.getEmailArticleAddedBody(preferences);
  }
 else {
    subject=JournalUtil.getEmailArticleUpdatedSubject(preferences);
    body=JournalUtil.getEmailArticleUpdatedBody(preferences);
  }
  long groupId=article.getGroupId();
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  if (group.isLayout()) {
    groupId=group.getParentGroupId();
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(article.getCompanyId());
  subscriptionSender.setContextAttributes("[$ARTICLE_ID$]",article.getArticleId(),"[$ARTICLE_TITLE$]",article.getTitle(),"[$ARTICLE_URL$]",articleURL,"[$ARTICLE_VERSION$]",article.getVersion());
  subscriptionSender.setContextUserPrefix("ARTICLE");
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setGroupId(groupId);
  subscriptionSender.setScopeGroupId(article.getGroupId());
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("journal_article",article.getId());
  subscriptionSender.setPortletId(PortletKeys.JOURNAL);
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(article.getUserId());
  subscriptionSender.addPersistedSubscribers(JournalArticle.class.getName(),article.getGroupId());
  subscriptionSender.flushNotificationsAsync();
}

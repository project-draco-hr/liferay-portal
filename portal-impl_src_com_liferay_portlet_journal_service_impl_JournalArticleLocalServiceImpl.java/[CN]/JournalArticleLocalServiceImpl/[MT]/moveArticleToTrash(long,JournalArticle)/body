{
  int oldStatus=article.getStatus();
  if (oldStatus == WorkflowConstants.STATUS_PENDING) {
    article.setStatus(WorkflowConstants.STATUS_DRAFT);
    journalArticlePersistence.update(article);
  }
  List<JournalArticle> articleVersions=journalArticlePersistence.findByG_A(article.getGroupId(),article.getArticleId());
  articleVersions=ListUtil.sort(articleVersions,new ArticleVersionComparator());
  List<ObjectValuePair<Long,Integer>> articleVersionStatusOVPs=new ArrayList<>();
  if ((articleVersions != null) && !articleVersions.isEmpty()) {
    articleVersionStatusOVPs=getArticleVersionStatuses(articleVersions);
  }
  article=updateStatus(userId,article.getId(),WorkflowConstants.STATUS_IN_TRASH,new HashMap<String,Serializable>(),new ServiceContext());
  JournalArticleResource articleResource=journalArticleResourceLocalService.getArticleResource(article.getResourcePrimKey());
  UnicodeProperties typeSettingsProperties=new UnicodeProperties();
  typeSettingsProperties.put("title",article.getArticleId());
  TrashEntry trashEntry=trashEntryLocalService.addTrashEntry(userId,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),articleResource.getUuid(),null,oldStatus,articleVersionStatusOVPs,typeSettingsProperties);
  String trashArticleId=TrashUtil.getTrashTitle(trashEntry.getEntryId());
  for (  JournalArticle articleVersion : articleVersions) {
    articleVersion.setArticleId(trashArticleId);
    articleVersion.setStatus(WorkflowConstants.STATUS_IN_TRASH);
    journalArticlePersistence.update(articleVersion);
  }
  articleResource.setArticleId(trashArticleId);
  journalArticleResourcePersistence.update(articleResource);
  article.setArticleId(trashArticleId);
  article=journalArticlePersistence.update(article);
  assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),false);
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",article.getTitle());
  socialActivityLocalService.addActivity(userId,article.getGroupId(),JournalArticle.class.getName(),article.getResourcePrimKey(),SocialActivityConstants.TYPE_MOVE_TO_TRASH,extraDataJSONObject.toString(),0);
  if (oldStatus == WorkflowConstants.STATUS_PENDING) {
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(article.getCompanyId(),article.getGroupId(),JournalArticle.class.getName(),article.getId());
  }
  return article;
}

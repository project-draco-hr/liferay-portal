{
  JournalArticleResource articleResource=journalArticleResourceLocalService.fetchArticleResource(article.getGroupId(),article.getArticleId());
  if (article.isApproved() && isLatestVersion(article.getGroupId(),article.getArticleId(),article.getVersion(),WorkflowConstants.STATUS_APPROVED)) {
    updatePreviousApprovedArticle(article);
  }
  if ((serviceContext != null) && Validator.isNotNull(articleURL)) {
    PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
    if ((preferences != null) && !article.isApproved() && isLatestVersion(article.getGroupId(),article.getArticleId(),article.getVersion())) {
      articleURL=buildArticleURL(articleURL,article.getGroupId(),article.getFolderId(),article.getArticleId());
      sendEmail(article,articleURL,preferences,"denied",serviceContext);
    }
  }
  String articleId=article.getArticleId();
  if (article.isInTrash()) {
    articleId=TrashUtil.getOriginalTitle(article.getArticleId());
  }
  journalArticleImageLocalService.deleteImages(article.getGroupId(),articleId,article.getVersion());
  if (article.getClassNameId() != classNameLocalService.getClassNameId(DDMStructure.class)) {
    ddmStorageLinkLocalService.deleteClassStorageLink(article.getId());
    ddmTemplateLinkLocalService.deleteTemplateLink(classNameLocalService.getClassNameId(JournalArticle.class),article.getId());
  }
  expandoRowLocalService.deleteRows(article.getId());
  if (article.isInTrash()) {
    TrashEntry trashEntry=article.getTrashEntry();
    if (trashEntry != null) {
      trashVersionLocalService.deleteTrashVersion(JournalArticle.class.getName(),article.getId());
    }
  }
  if (!article.isDraft()) {
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(article.getCompanyId(),article.getGroupId(),JournalArticle.class.getName(),article.getId());
  }
  int articlesCount=journalArticlePersistence.countByG_A(article.getGroupId(),article.getArticleId());
  if (articlesCount == 1) {
    ratingsStatsLocalService.deleteStats(JournalArticle.class.getName(),article.getResourcePrimKey());
    CommentManagerUtil.deleteDiscussion(JournalArticle.class.getName(),article.getResourcePrimKey());
    assetEntryLocalService.deleteEntry(JournalArticle.class.getName(),article.getResourcePrimKey());
    journalContentSearchLocalService.deleteArticleContentSearches(article.getGroupId(),article.getArticleId());
    imageLocalService.deleteImage(article.getSmallImageId());
    trashEntryLocalService.deleteEntry(JournalArticle.class.getName(),article.getResourcePrimKey());
    resourceLocalService.deleteResource(article.getCompanyId(),JournalArticle.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,article.getResourcePrimKey());
    if (articleResource != null) {
      journalArticleResourceLocalService.deleteJournalArticleResource(articleResource);
    }
  }
  journalArticlePersistence.remove(article);
  if (articleResource != null) {
    JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
    extraDataJSONObject.put("uuid",article.getUuid());
    extraDataJSONObject.put("version",article.getVersion());
    systemEventLocalService.addSystemEvent(0,article.getGroupId(),article.getModelClassName(),article.getPrimaryKey(),articleResource.getUuid(),null,SystemEventConstants.TYPE_DELETE,extraDataJSONObject.toString());
  }
  return article;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  articleId=StringUtil.toUpperCase(articleId.trim());
  Date displayDate=null;
  Date expirationDate=null;
  Date reviewDate=null;
  if (classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) {
    displayDate=PortalUtil.getDate(displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,user.getTimeZone(),ArticleDisplayDateException.class);
    if (!neverExpire) {
      expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),ArticleExpirationDateException.class);
    }
    if (!neverReview) {
      reviewDate=PortalUtil.getDate(reviewDateMonth,reviewDateDay,reviewDateYear,reviewDateHour,reviewDateMinute,user.getTimeZone(),ArticleReviewDateException.class);
    }
  }
  byte[] smallImageBytes=null;
  try {
    smallImageBytes=FileUtil.getBytes(smallImageFile);
  }
 catch (  IOException ioe) {
  }
  Date now=new Date();
  validateDDMStructureId(groupId,folderId,ddmStructureKey);
  validate(user.getCompanyId(),groupId,classNameId,articleId,autoArticleId,version,titleMap,content,type,ddmStructureKey,ddmTemplateKey,expirationDate,smallImage,smallImageURL,smallImageFile,smallImageBytes,serviceContext);
  if (autoArticleId) {
    articleId=String.valueOf(counterLocalService.increment());
  }
  serviceContext.setAttribute("articleId",articleId);
  long id=counterLocalService.increment();
  long resourcePrimKey=journalArticleResourceLocalService.getArticleResourcePrimKey(serviceContext.getUuid(),groupId,articleId);
  JournalArticle article=journalArticlePersistence.create(id);
  Locale locale=LocaleUtil.getSiteDefault();
  String defaultLanguageId=ParamUtil.getString(serviceContext,"defaultLanguageId");
  if (Validator.isNull(defaultLanguageId)) {
    defaultLanguageId=LocalizationUtil.getDefaultLanguageId(content);
  }
  if (Validator.isNotNull(defaultLanguageId)) {
    locale=LocaleUtil.fromLanguageId(defaultLanguageId);
  }
  String title=titleMap.get(locale);
  content=format(user,groupId,articleId,version,false,content,ddmStructureKey,images);
  article.setResourcePrimKey(resourcePrimKey);
  article.setGroupId(groupId);
  article.setCompanyId(user.getCompanyId());
  article.setUserId(user.getUserId());
  article.setUserName(user.getFullName());
  article.setCreateDate(serviceContext.getCreateDate(now));
  article.setModifiedDate(serviceContext.getModifiedDate(now));
  article.setFolderId(folderId);
  article.setClassNameId(classNameId);
  article.setClassPK(classPK);
  article.setTreePath(article.buildTreePath());
  article.setArticleId(articleId);
  article.setVersion(version);
  article.setTitleMap(titleMap,locale);
  article.setUrlTitle(getUniqueUrlTitle(id,articleId,title,null,serviceContext));
  article.setDescriptionMap(descriptionMap,locale);
  article.setContent(content);
  article.setType(type);
  article.setStructureId(ddmStructureKey);
  article.setTemplateId(ddmTemplateKey);
  article.setLayoutUuid(layoutUuid);
  article.setDisplayDate(displayDate);
  article.setExpirationDate(expirationDate);
  article.setReviewDate(reviewDate);
  article.setIndexable(indexable);
  article.setSmallImage(smallImage);
  article.setSmallImageId(counterLocalService.increment());
  article.setSmallImageURL(smallImageURL);
  if ((expirationDate == null) || expirationDate.after(now)) {
    article.setStatus(WorkflowConstants.STATUS_DRAFT);
  }
 else {
    article.setStatus(WorkflowConstants.STATUS_EXPIRED);
  }
  article.setStatusByUserId(userId);
  article.setStatusDate(serviceContext.getModifiedDate(now));
  article.setExpandoBridgeAttributes(serviceContext);
  journalArticlePersistence.update(article);
  if (serviceContext.isAddGroupPermissions() || serviceContext.isAddGuestPermissions()) {
    addArticleResources(article,serviceContext.isAddGroupPermissions(),serviceContext.isAddGuestPermissions());
  }
 else {
    addArticleResources(article,serviceContext.getGroupPermissions(),serviceContext.getGuestPermissions());
  }
  saveImages(smallImage,article.getSmallImageId(),smallImageFile,smallImageBytes);
  updateAsset(userId,article,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds());
  if (classNameLocalService.getClassNameId(DDMStructure.class) == classNameId) {
    updateDDMStructureXSD(classPK,content,serviceContext);
  }
  if (PropsValues.JOURNAL_ARTICLE_COMMENTS_ENABLED) {
    mbMessageLocalService.addDiscussionMessage(userId,article.getUserName(),groupId,JournalArticle.class.getName(),resourcePrimKey,WorkflowConstants.ACTION_PUBLISH);
  }
  PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
  articleURL=buildArticleURL(articleURL,groupId,folderId,articleId);
  serviceContext.setAttribute("articleURL",articleURL);
  sendEmail(article,articleURL,preferences,"requested",serviceContext);
  if (classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) {
    startWorkflowInstance(user,article,serviceContext);
  }
 else {
    updateStatus(userId,article,WorkflowConstants.STATUS_APPROVED,null,new HashMap<String,Serializable>(),serviceContext);
  }
  return journalArticlePersistence.findByPrimaryKey(article.getId());
}

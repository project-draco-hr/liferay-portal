{
  String content=null;
  if (page < 1) {
    page=1;
  }
  int numberOfPages=1;
  boolean paginate=false;
  boolean pageFlow=false;
  boolean cacheable=true;
  if (Validator.isNull(xmlRequest)) {
    xmlRequest="<request />";
  }
  Map<String,String> tokens=JournalUtil.getTokens(article.getGroupId(),themeDisplay,xmlRequest);
  tokens.put("article_resource_pk",String.valueOf(article.getResourcePrimKey()));
  String defaultTemplateId=article.getTemplateId();
  if (article.isTemplateDriven()) {
    if (Validator.isNull(templateId)) {
      templateId=defaultTemplateId;
    }
    tokens.put("structure_id",article.getStructureId());
    tokens.put("template_id",templateId);
  }
  String xml=article.getContent();
  try {
    Document doc=null;
    Element root=null;
    if (article.isTemplateDriven()) {
      doc=SAXReaderUtil.read(xml);
      root=doc.getRootElement();
      Document request=SAXReaderUtil.read(xmlRequest);
      List<Element> pages=root.elements("page");
      if (pages.size() > 0) {
        pageFlow=true;
        String targetPage=request.valueOf("/request/parameters/parameter[name='targetPage']/" + "value");
        Element pageEl=null;
        if (Validator.isNotNull(targetPage)) {
          XPath xpathSelector=SAXReaderUtil.createXPath("/root/page[@id = '" + targetPage + "']");
          pageEl=(Element)xpathSelector.selectSingleNode(doc);
        }
        if (pageEl != null) {
          doc=SAXReaderUtil.createDocument(pageEl);
          root=doc.getRootElement();
          numberOfPages=pages.size();
        }
 else {
          if (page > pages.size()) {
            page=1;
          }
          pageEl=pages.get(page - 1);
          doc=SAXReaderUtil.createDocument(pageEl);
          root=doc.getRootElement();
          numberOfPages=pages.size();
          paginate=true;
        }
      }
      root.add(request.getRootElement().createCopy());
      JournalUtil.addAllReservedEls(root,tokens,article);
      xml=JournalUtil.formatXML(doc);
    }
  }
 catch (  DocumentException de) {
    throw new SystemException(de);
  }
catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
  try {
    if (_log.isDebugEnabled()) {
      _log.debug("Transforming " + article.getArticleId() + " "+ article.getVersion()+ " "+ languageId);
    }
    String script=null;
    String langType=null;
    if (article.isTemplateDriven()) {
      JournalTemplate template=null;
      try {
        template=journalTemplatePersistence.findByG_T(article.getGroupId(),templateId);
      }
 catch (      NoSuchTemplateException nste1) {
        try {
          Group globalGroup=groupLocalService.getCompanyGroup(article.getCompanyId());
          template=journalTemplatePersistence.findByG_T(globalGroup.getGroupId(),templateId);
        }
 catch (        NoSuchTemplateException nste2) {
          if (!defaultTemplateId.equals(templateId)) {
            template=journalTemplatePersistence.findByG_T(article.getGroupId(),defaultTemplateId);
          }
 else {
            throw nste1;
          }
        }
      }
      script=template.getXsl();
      langType=template.getLangType();
      cacheable=template.isCacheable();
    }
    content=JournalUtil.transform(themeDisplay,tokens,viewMode,languageId,xml,script,langType);
    if (!pageFlow) {
      String[] pieces=StringUtil.split(content,_TOKEN_PAGE_BREAK);
      if (pieces.length > 1) {
        if (page > pieces.length) {
          page=1;
        }
        content=pieces[page - 1];
        numberOfPages=pieces.length;
        paginate=true;
      }
    }
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
  return new JournalArticleDisplayImpl(article.getCompanyId(),article.getId(),article.getResourcePrimKey(),article.getGroupId(),article.getUserId(),article.getArticleId(),article.getVersion(),article.getTitle(),article.getUrlTitle(),article.getDescription(),article.getAvailableLocales(),content,article.getType(),article.getStructureId(),templateId,article.isSmallImage(),article.getSmallImageId(),article.getSmallImageURL(),numberOfPages,page,paginate,cacheable);
}

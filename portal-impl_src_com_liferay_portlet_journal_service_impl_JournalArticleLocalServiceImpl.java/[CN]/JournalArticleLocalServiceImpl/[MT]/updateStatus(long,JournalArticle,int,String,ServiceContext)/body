{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  int oldStatus=article.getStatus();
  article.setModifiedDate(serviceContext.getModifiedDate(now));
  article.setStatus(status);
  article.setStatusByUserId(user.getUserId());
  article.setStatusByUserName(user.getFullName());
  article.setStatusDate(serviceContext.getModifiedDate(now));
  if ((article.getExpirationDate() != null) && (article.getExpirationDate().before(now))) {
    article.setExpirationDate(null);
  }
  journalArticlePersistence.update(article,false);
  if (isLatestVersion(article.getGroupId(),article.getArticleId(),article.getVersion())) {
    if (status == WorkflowConstants.STATUS_APPROVED) {
      assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),true);
      ExpandoBridge expandoBridge=article.getExpandoBridge();
      expandoBridge.setAttributes(serviceContext);
      Indexer indexer=IndexerRegistryUtil.getIndexer(JournalArticle.class);
      indexer.reindex(article);
    }
 else {
      assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),false);
      if (article.isIndexable()) {
        Indexer indexer=IndexerRegistryUtil.getIndexer(JournalArticle.class);
        indexer.delete(article);
      }
    }
  }
  if ((oldStatus == WorkflowConstants.STATUS_PENDING) && ((status == WorkflowConstants.STATUS_APPROVED) || (status == WorkflowConstants.STATUS_DENIED))) {
    PortletPreferences preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
    try {
      String msg="granted";
      if (status == WorkflowConstants.STATUS_DENIED) {
        msg="denied";
      }
      sendEmail(article,articleURL,preferences,msg);
    }
 catch (    IOException ioe) {
      throw new SystemException(ioe);
    }
  }
  notifySubscribers(article,serviceContext);
  return article;
}

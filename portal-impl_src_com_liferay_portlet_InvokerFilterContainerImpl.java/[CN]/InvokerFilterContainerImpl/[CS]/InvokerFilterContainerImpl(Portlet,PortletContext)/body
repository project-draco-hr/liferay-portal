{
  String rootPortletId=portlet.getRootPortletId();
  Registry registry=RegistryUtil.getRegistry();
  Filter filter=registry.getFilter("(&(javax.portlet.name=" + rootPortletId + ")(objectClass="+ PortletFilter.class+ "))");
  ServiceTracker<PortletFilter,PortletFilter> _serviceTracker=registry.trackServices(filter,new PortletFilterServiceTrackerCustomizer(portletContext));
  _serviceTracker.open();
  PortletApp portletApp=portlet.getPortletApp();
  PortletContextBag portletContextBag=PortletContextBagPool.get(portletApp.getServletContextName());
  if (portletApp.isWARFile() && (portletContextBag == null)) {
    return;
  }
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("javax.portlet.name",rootPortletId);
  properties.put("preinitialized.filter",Boolean.TRUE);
  Map<String,com.liferay.portal.model.PortletFilter> portletFilters=portlet.getPortletFilters();
  for (  Map.Entry<String,com.liferay.portal.model.PortletFilter> entry : portletFilters.entrySet()) {
    com.liferay.portal.model.PortletFilter portletFilterModel=entry.getValue();
    PortletFilter portletFilter=PortletFilterFactory.create(portletFilterModel,portletContext);
    ServiceRegistration<PortletFilter> serviceRegistration=registry.registerService(PortletFilter.class,portletFilter,properties);
    _portletFilterRegistrations.add(serviceRegistration);
  }
  ClassLoader classLoader=ClassLoaderUtil.getContextClassLoader();
  try {
    ClassLoaderUtil.setContextClassLoader(ClassLoaderUtil.getPortalClassLoader());
    for (    String portletFilterClassName : PropsValues.PORTLET_FILTERS_SYSTEM) {
      com.liferay.portal.model.PortletFilter portletFilterModel=new PortletFilterImpl(portletFilterClassName,portletFilterClassName,Collections.<String>emptySet(),Collections.<String,String>emptyMap(),portletApp);
      PortletFilter portletFilter=PortletFilterFactory.create(portletFilterModel,portletContext);
      ServiceRegistration<PortletFilter> serviceRegistration=registry.registerService(PortletFilter.class,portletFilter,properties);
      _portletFilterRegistrations.add(serviceRegistration);
    }
  }
  finally {
    ClassLoaderUtil.setContextClassLoader(classLoader);
  }
}

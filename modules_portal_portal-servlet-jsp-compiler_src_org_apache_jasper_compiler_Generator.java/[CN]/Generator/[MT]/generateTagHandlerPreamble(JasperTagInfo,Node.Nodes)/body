{
  String className=tagInfo.getTagClassName();
  int lastIndex=className.lastIndexOf('.');
  if (lastIndex != -1) {
    String pkgName=className.substring(0,lastIndex);
    genPreamblePackage(pkgName);
    className=className.substring(lastIndex + 1);
  }
  genPreambleImports();
  out.printin("public final class ");
  out.println(className);
  out.printil("    extends javax.servlet.jsp.tagext.SimpleTagSupport");
  out.printin("    implements org.apache.jasper.runtime.JspSourceDependent");
  if (tagInfo.hasDynamicAttributes()) {
    out.println(",");
    out.printin("               javax.servlet.jsp.tagext.DynamicAttributes");
  }
  out.println(" {");
  out.println();
  out.pushIndent();
  generateDeclarations(tag);
  genPreambleStaticInitializers();
  out.printil("private JspContext jspContext;");
  out.printil("private java.io.Writer _jspx_sout;");
  genPreambleClassVariableDeclarations(tagInfo.getTagName());
  generateSetJspContext(tagInfo);
  generateTagHandlerAttributes(tagInfo);
  if (tagInfo.hasDynamicAttributes())   generateSetDynamicAttribute();
  genPreambleMethods();
  out.printil("public void doTag() throws JspException, java.io.IOException {");
  if (ctxt.isPrototypeMode()) {
    out.printil("}");
    out.popIndent();
    out.printil("}");
    return;
  }
  out.pushIndent();
  out.printil("PageContext _jspx_page_context = (PageContext)jspContext;");
  out.printil("HttpServletRequest request = " + "(HttpServletRequest) _jspx_page_context.getRequest();");
  out.printil("HttpServletResponse response = " + "(HttpServletResponse) _jspx_page_context.getResponse();");
  out.printil("HttpSession session = _jspx_page_context.getSession();");
  out.printil("ServletContext application = _jspx_page_context.getServletContext();");
  out.printil("ServletConfig config = _jspx_page_context.getServletConfig();");
  out.printil("JspWriter out = jspContext.getOut();");
  if (isPoolingEnabled && !tagHandlerPoolNames.isEmpty()) {
    out.printil("_jspInit(config);");
  }
  generatePageScopedVariables(tagInfo);
  out.println();
  out.printil("try {");
  out.pushIndent();
}

{
  out.printil("private final JspFactory _jspxFactory = com.liferay.servletjspcompiler.jsp.JspFactoryFactory.getJspFactory();");
  out.println();
  out.printil("private static java.util.Vector _jspx_dependants;");
  out.println();
  List dependants=pageInfo.getDependants();
  Iterator iter=dependants.iterator();
  if (!dependants.isEmpty()) {
    out.printil("static {");
    out.pushIndent();
    out.printin("_jspx_dependants = new java.util.Vector(");
    out.print("" + dependants.size());
    out.println(");");
    while (iter.hasNext()) {
      out.printin("_jspx_dependants.add(\"");
      out.print((String)iter.next());
      out.println("\");");
    }
    out.popIndent();
    out.printil("}");
    out.println();
  }
  if (genBytes) {
    String contentType=pageInfo.getContentType();
    String encoding="ISO-8859-1";
    int i=contentType.indexOf("charset=");
    if (i > 0)     encoding=contentType.substring(i + 8);
    try {
      "testing".getBytes(encoding);
      out.printin("private static final String _jspx_encoding = ");
      out.print(quote(encoding));
      out.println(";");
      out.printil("private boolean _jspx_gen_bytes = true;");
      out.printil("private boolean _jspx_encoding_tested;");
    }
 catch (    java.io.UnsupportedEncodingException ex) {
      genBytes=false;
    }
  }
}

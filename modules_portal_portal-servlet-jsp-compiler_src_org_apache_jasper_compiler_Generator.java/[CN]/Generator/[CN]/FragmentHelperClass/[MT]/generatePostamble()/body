{
  ServletWriter out=this.classBuffer.getOut();
  for (int i=0; i < fragments.size(); i++) {
    Fragment fragment=(Fragment)fragments.get(i);
    fragment.getGenBuffer().adjustJavaLines(out.getJavaLine() - 1);
    out.printMultiLn(fragment.getGenBuffer().toString());
  }
  out.printil("public void invoke( java.io.Writer writer )");
  out.pushIndent();
  out.printil("throws JspException");
  out.popIndent();
  out.printil("{");
  out.pushIndent();
  out.printil("JspWriter out = null;");
  out.printil("if( writer != null ) {");
  out.pushIndent();
  out.printil("out = this.jspContext.pushBody(writer);");
  out.popIndent();
  out.printil("} else {");
  out.pushIndent();
  out.printil("out = this.jspContext.getOut();");
  out.popIndent();
  out.printil("}");
  out.printil("try {");
  out.pushIndent();
  out.printil("switch( this.discriminator ) {");
  out.pushIndent();
  for (int i=0; i < fragments.size(); i++) {
    out.printil("case " + i + ":");
    out.pushIndent();
    out.printil("invoke" + i + "( out );");
    out.printil("break;");
    out.popIndent();
  }
  out.popIndent();
  out.printil("}");
  out.popIndent();
  out.printil("}");
  out.printil("catch( Throwable e ) {");
  out.pushIndent();
  out.printil("if (e instanceof SkipPageException)");
  out.printil("    throw (SkipPageException) e;");
  out.printil("throw new JspException( e );");
  out.popIndent();
  out.printil("}");
  out.printil("finally {");
  out.pushIndent();
  out.printil("if( writer != null ) {");
  out.pushIndent();
  out.printil("this.jspContext.popBody();");
  out.popIndent();
  out.printil("}");
  out.popIndent();
  out.printil("}");
  out.popIndent();
  out.printil("}");
  out.popIndent();
  out.printil("}");
  out.popIndent();
}

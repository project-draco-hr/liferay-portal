{
  String quoted=s;
  if (!isNamedAttribute) {
    quoted=quote(s);
  }
  if (propEditorClass != null) {
    String className=JspUtil.getCanonicalName(c);
    return "(" + className + ")org.apache.jasper.runtime.JspRuntimeLibrary.getValueFromBeanInfoPropertyEditor("+ className+ ".class, \""+ attrName+ "\", "+ quoted+ ", "+ JspUtil.getCanonicalName(propEditorClass)+ ".class)";
  }
 else   if (c == String.class) {
    return quoted;
  }
 else   if (c == boolean.class) {
    return JspUtil.coerceToPrimitiveBoolean(s,isNamedAttribute);
  }
 else   if (c == Boolean.class) {
    return JspUtil.coerceToBoolean(s,isNamedAttribute);
  }
 else   if (c == byte.class) {
    return JspUtil.coerceToPrimitiveByte(s,isNamedAttribute);
  }
 else   if (c == Byte.class) {
    return JspUtil.coerceToByte(s,isNamedAttribute);
  }
 else   if (c == char.class) {
    return JspUtil.coerceToChar(s,isNamedAttribute);
  }
 else   if (c == Character.class) {
    return JspUtil.coerceToCharacter(s,isNamedAttribute);
  }
 else   if (c == double.class) {
    return JspUtil.coerceToPrimitiveDouble(s,isNamedAttribute);
  }
 else   if (c == Double.class) {
    return JspUtil.coerceToDouble(s,isNamedAttribute);
  }
 else   if (c == float.class) {
    return JspUtil.coerceToPrimitiveFloat(s,isNamedAttribute);
  }
 else   if (c == Float.class) {
    return JspUtil.coerceToFloat(s,isNamedAttribute);
  }
 else   if (c == int.class) {
    return JspUtil.coerceToInt(s,isNamedAttribute);
  }
 else   if (c == Integer.class) {
    return JspUtil.coerceToInteger(s,isNamedAttribute);
  }
 else   if (c == short.class) {
    return JspUtil.coerceToPrimitiveShort(s,isNamedAttribute);
  }
 else   if (c == Short.class) {
    return JspUtil.coerceToShort(s,isNamedAttribute);
  }
 else   if (c == long.class) {
    return JspUtil.coerceToPrimitiveLong(s,isNamedAttribute);
  }
 else   if (c == Long.class) {
    return JspUtil.coerceToLong(s,isNamedAttribute);
  }
 else   if (c.isEnum()) {
    return JspUtil.coerceToEnum(s,c.getName(),isNamedAttribute);
  }
 else   if (c == Object.class) {
    return "new String(" + quoted + ")";
  }
 else {
    String className=JspUtil.getCanonicalName(c);
    return "(" + className + ")org.apache.jasper.runtime.JspRuntimeLibrary.getValueFromPropertyEditorManager("+ className+ ".class, \""+ attrName+ "\", "+ quoted+ ")";
  }
}

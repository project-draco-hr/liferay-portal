{
  if (n.useTagPlugin()) {
    generateTagPlugin(n);
    return;
  }
  TagHandlerInfo handlerInfo=getTagHandlerInfo(n);
  String baseVar=createTagVarName(n.getQName(),n.getPrefix(),n.getLocalName());
  String tagEvalVar="_jspx_eval_" + baseVar;
  String tagHandlerVar="_jspx_th_" + baseVar;
  String tagPushBodyCountVar="_jspx_push_body_count_" + baseVar;
  ServletWriter outSave=null;
  Node.ChildInfo ci=n.getChildInfo();
  if (ci.isScriptless() && !ci.hasScriptingVars()) {
    String tagMethod="_jspx_meth_" + baseVar;
    out.printin("if (");
    out.print(tagMethod);
    out.print("(");
    if (parent != null) {
      out.print("(javax.servlet.jsp.tagext.JspTag) ");
      out.print(parent);
      out.print(", ");
    }
    out.print("_jspx_page_context");
    if (pushBodyCountVar != null) {
      out.print(", ");
      out.print(pushBodyCountVar);
    }
    out.println("))");
    out.pushIndent();
    out.printil((methodNesting > 0) ? "return true;" : "return;");
    out.popIndent();
    outSave=out;
    GenBuffer genBuffer=new GenBuffer(n,n.implementsSimpleTag() ? null : n.getBody());
    methodsBuffered.add(genBuffer);
    out=genBuffer.getOut();
    methodNesting++;
    out.println();
    out.pushIndent();
    out.printin("private boolean ");
    out.print(tagMethod);
    out.print("(");
    if (parent != null) {
      out.print("javax.servlet.jsp.tagext.JspTag ");
      out.print(parent);
      out.print(", ");
    }
    out.print("PageContext _jspx_page_context");
    if (pushBodyCountVar != null) {
      out.print(", int[] ");
      out.print(pushBodyCountVar);
    }
    out.println(")");
    out.printil("        throws Throwable {");
    out.pushIndent();
    if (!isTagFile) {
      out.printil("PageContext pageContext = _jspx_page_context;");
    }
    out.printil("JspWriter out = _jspx_page_context.getOut();");
    generateLocalVariables(out,n,genBytes);
  }
  if (n.implementsSimpleTag()) {
    generateCustomDoTag(n,handlerInfo,tagHandlerVar);
  }
 else {
    boolean genBytesSave=genBytes;
    generateCustomStart(n,handlerInfo,tagHandlerVar,tagEvalVar,tagPushBodyCountVar);
    String tmpParent=parent;
    parent=tagHandlerVar;
    boolean isSimpleTagParentSave=isSimpleTagParent;
    isSimpleTagParent=false;
    String tmpPushBodyCountVar=null;
    if (n.implementsTryCatchFinally()) {
      tmpPushBodyCountVar=pushBodyCountVar;
      pushBodyCountVar=tagPushBodyCountVar;
    }
    boolean tmpIsSimpleTagHandler=isSimpleTagHandler;
    isSimpleTagHandler=false;
    visitBody(n);
    parent=tmpParent;
    isSimpleTagParent=isSimpleTagParentSave;
    if (n.implementsTryCatchFinally()) {
      pushBodyCountVar=tmpPushBodyCountVar;
    }
    isSimpleTagHandler=tmpIsSimpleTagHandler;
    generateCustomEnd(n,tagHandlerVar,tagEvalVar,tagPushBodyCountVar);
    genBytes=genBytesSave;
  }
  if (ci.isScriptless() && !ci.hasScriptingVars()) {
    if (methodNesting > 0) {
      out.printil("return false;");
    }
    out.popIndent();
    out.printil("}");
    out.popIndent();
    methodNesting--;
    out=outSave;
  }
}

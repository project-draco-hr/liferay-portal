{
  if (!n.hasEmptyBody()) {
    if (n.implementsIterationTag()) {
      out.printin("int evalDoAfterBody = ");
      out.print(tagHandlerVar);
      out.println(".doAfterBody();");
      syncScriptingVars(n,VariableInfo.AT_BEGIN);
      syncScriptingVars(n,VariableInfo.NESTED);
      out.printil("if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)");
      out.pushIndent();
      out.printil("break;");
      out.popIndent();
      out.popIndent();
      out.printil("} while (true);");
    }
    restoreScriptingVars(n,VariableInfo.NESTED);
    if (n.implementsBodyTag()) {
      out.printin("if (");
      out.print(tagEvalVar);
      out.println(" != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE)");
      out.pushIndent();
      out.printil("out = _jspx_page_context.popBody();");
      if (n.implementsTryCatchFinally()) {
        out.printin(tagPushBodyCountVar);
        out.println("[0]--;");
      }
 else       if (pushBodyCountVar != null) {
        out.printin(pushBodyCountVar);
        out.println("[0]--;");
      }
      out.popIndent();
    }
    out.popIndent();
    out.printil("}");
  }
  out.printin("if (");
  out.print(tagHandlerVar);
  out.println(".doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {");
  out.pushIndent();
  if (!n.implementsTryCatchFinally()) {
    if (isPoolingEnabled) {
      out.printin(n.getTagHandlerPoolName());
      out.print(".reuse(");
      out.print(tagHandlerVar);
      out.println(");");
    }
 else {
      out.printin(tagHandlerVar);
      out.println(".release();");
    }
  }
  if (isTagFile || isFragment) {
    out.printil("throw new SkipPageException();");
  }
 else {
    out.printil((methodNesting > 0) ? "return true;" : "return;");
  }
  out.popIndent();
  out.printil("}");
  syncScriptingVars(n,VariableInfo.AT_BEGIN);
  if (n.implementsTryCatchFinally()) {
    out.popIndent();
    out.printil("} catch (Throwable _jspx_exception) {");
    out.pushIndent();
    out.printin("while (");
    out.print(tagPushBodyCountVar);
    out.println("[0]-- > 0)");
    out.pushIndent();
    out.printil("out = _jspx_page_context.popBody();");
    out.popIndent();
    out.printin(tagHandlerVar);
    out.println(".doCatch(_jspx_exception);");
    out.popIndent();
    out.printil("} finally {");
    out.pushIndent();
    out.printin(tagHandlerVar);
    out.println(".doFinally();");
  }
  if (isPoolingEnabled) {
    out.printin(n.getTagHandlerPoolName());
    out.print(".reuse(");
    out.print(tagHandlerVar);
    out.println(");");
  }
 else {
    out.printin(tagHandlerVar);
    out.println(".release();");
  }
  if (n.implementsTryCatchFinally()) {
    out.popIndent();
    out.printil("}");
  }
  declareScriptingVars(n,VariableInfo.AT_END);
  syncScriptingVars(n,VariableInfo.AT_END);
  restoreScriptingVars(n,VariableInfo.AT_BEGIN);
}

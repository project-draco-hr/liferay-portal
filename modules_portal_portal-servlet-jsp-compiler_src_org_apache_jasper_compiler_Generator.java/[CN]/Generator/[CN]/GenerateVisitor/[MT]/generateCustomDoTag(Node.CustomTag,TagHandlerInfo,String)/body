{
  Class tagHandlerClass=handlerInfo.getTagHandlerClass();
  n.setBeginJavaLine(out.getJavaLine());
  out.printin("//  ");
  out.println(n.getQName());
  declareScriptingVars(n,VariableInfo.AT_BEGIN);
  saveScriptingVars(n,VariableInfo.AT_BEGIN);
  String tagHandlerClassName=JspUtil.getCanonicalName(tagHandlerClass);
  out.printin(tagHandlerClassName);
  out.print(" ");
  out.print(tagHandlerVar);
  out.print(" = ");
  out.print("new ");
  out.print(tagHandlerClassName);
  out.println("();");
  out.printil("if (_jspx_resourceInjector != null) {");
  out.pushIndent();
  out.printin("_jspx_resourceInjector.inject(");
  out.print(tagHandlerVar);
  out.printil(");");
  out.popIndent();
  out.printil("}");
  generateSetters(n,tagHandlerVar,handlerInfo,true);
  if (findJspBody(n) == null) {
    if (!n.hasEmptyBody()) {
      out.printin(tagHandlerVar);
      out.print(".setJspBody(");
      generateJspFragment(n,tagHandlerVar);
      out.println(");");
    }
  }
 else {
    String tmpTagHandlerVar=simpleTagHandlerVar;
    simpleTagHandlerVar=tagHandlerVar;
    boolean tmpIsSimpleTagHandler=isSimpleTagHandler;
    isSimpleTagHandler=true;
    visitBody(n);
    simpleTagHandlerVar=tmpTagHandlerVar;
    isSimpleTagHandler=tmpIsSimpleTagHandler;
  }
  out.printin(tagHandlerVar);
  out.println(".doTag();");
  restoreScriptingVars(n,VariableInfo.AT_BEGIN);
  syncScriptingVars(n,VariableInfo.AT_BEGIN);
  declareScriptingVars(n,VariableInfo.AT_END);
  syncScriptingVars(n,VariableInfo.AT_END);
  n.setEndJavaLine(out.getJavaLine());
}

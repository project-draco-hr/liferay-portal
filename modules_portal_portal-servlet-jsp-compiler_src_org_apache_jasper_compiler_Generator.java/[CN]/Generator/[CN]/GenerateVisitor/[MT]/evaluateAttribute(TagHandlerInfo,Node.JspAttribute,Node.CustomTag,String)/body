{
  String attrValue=attr.getValue();
  if (attrValue == null) {
    if (attr.isNamedAttribute()) {
      if (n.checkIfAttributeIsJspFragment(attr.getName())) {
        attrValue=generateNamedAttributeJspFragment(attr.getNamedAttributeNode(),tagHandlerVar);
      }
 else {
        attrValue=generateNamedAttributeValue(attr.getNamedAttributeNode());
      }
    }
 else {
      return null;
    }
  }
  String localName=attr.getLocalName();
  Method m=null;
  Class[] c=null;
  if (attr.isDynamic()) {
    c=OBJECT_CLASS;
  }
 else {
    m=handlerInfo.getSetterMethod(localName);
    if (m == null) {
      err.jspError(n,"jsp.error.unable.to_find_method",attr.getName());
    }
    c=m.getParameterTypes();
  }
  if (attr.isExpression()) {
  }
 else   if (attr.isNamedAttribute()) {
    if (!n.checkIfAttributeIsJspFragment(attr.getName()) && !attr.isDynamic()) {
      attrValue=convertString(c[0],attrValue,localName,handlerInfo.getPropertyEditorClass(localName),true);
    }
  }
 else   if (attr.isELInterpreterInput()) {
    Class attrType=c[0];
    if (attrType == Object.class && attr.getEL().hasPoundExpression()) {
      attrType=javax.el.ValueExpression.class;
    }
    attrValue=JspUtil.interpreterCall(this.isTagFile,attrValue,attrType,attr.getEL().getMapName(),attr.getExpectedType(),attr.getExpectedReturnType(),attr.getExpectedParamTypes());
  }
 else {
    attrValue=convertString(c[0],attrValue,localName,handlerInfo.getPropertyEditorClass(localName),false);
  }
  return attrValue;
}

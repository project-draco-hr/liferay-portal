{
  Class tagHandlerClass=handlerInfo.getTagHandlerClass();
  out.printin("//  ");
  out.println(n.getQName());
  n.setBeginJavaLine(out.getJavaLine());
  declareScriptingVars(n,VariableInfo.AT_BEGIN);
  saveScriptingVars(n,VariableInfo.AT_BEGIN);
  String tagHandlerClassName=JspUtil.getCanonicalName(tagHandlerClass);
  out.printin(tagHandlerClassName);
  out.print(" ");
  out.print(tagHandlerVar);
  out.print(" = ");
  if (isPoolingEnabled && !JspIdConsumer.class.isAssignableFrom(tagHandlerClass)) {
    out.print("(");
    out.print(tagHandlerClassName);
    out.print(") ");
    out.print(n.getTagHandlerPoolName());
    out.print(".get(");
    out.print(tagHandlerClassName);
    out.println(".class);");
  }
 else {
    out.print("new ");
    out.print(tagHandlerClassName);
    out.println("();");
    out.printil("if (_jspx_resourceInjector != null) {");
    out.pushIndent();
    out.printin("_jspx_resourceInjector.inject(");
    out.print(tagHandlerVar);
    out.printil(");");
    out.popIndent();
    out.printil("}");
  }
  generateSetters(n,tagHandlerVar,handlerInfo,false);
  if (n.implementsTryCatchFinally()) {
    out.printin("int[] ");
    out.print(tagPushBodyCountVar);
    out.println(" = new int[] { 0 };");
    out.printil("try {");
    out.pushIndent();
  }
  out.printin("int ");
  out.print(tagEvalVar);
  out.print(" = ");
  out.print(tagHandlerVar);
  out.println(".doStartTag();");
  if (!n.implementsBodyTag()) {
    syncScriptingVars(n,VariableInfo.AT_BEGIN);
  }
  if (!n.hasEmptyBody()) {
    out.printin("if (");
    out.print(tagEvalVar);
    out.println(" != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {");
    out.pushIndent();
    declareScriptingVars(n,VariableInfo.NESTED);
    saveScriptingVars(n,VariableInfo.NESTED);
    if (n.implementsBodyTag()) {
      out.printin("if (");
      out.print(tagEvalVar);
      out.println(" != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {");
      genBytes=false;
      out.pushIndent();
      out.printil("out = _jspx_page_context.pushBody();");
      if (n.implementsTryCatchFinally()) {
        out.printin(tagPushBodyCountVar);
        out.println("[0]++;");
      }
 else       if (pushBodyCountVar != null) {
        out.printin(pushBodyCountVar);
        out.println("[0]++;");
      }
      out.printin(tagHandlerVar);
      out.println(".setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);");
      out.printin(tagHandlerVar);
      out.println(".doInitBody();");
      out.popIndent();
      out.printil("}");
      syncScriptingVars(n,VariableInfo.AT_BEGIN);
      syncScriptingVars(n,VariableInfo.NESTED);
    }
 else {
      syncScriptingVars(n,VariableInfo.NESTED);
    }
    if (n.implementsIterationTag()) {
      out.printil("do {");
      out.pushIndent();
    }
  }
  n.setEndJavaLine(out.getJavaLine());
}

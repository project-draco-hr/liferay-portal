{
  workflowDefinitionLink=toUnwrappedModel(workflowDefinitionLink);
  boolean isNew=workflowDefinitionLink.isNew();
  WorkflowDefinitionLinkModelImpl workflowDefinitionLinkModelImpl=(WorkflowDefinitionLinkModelImpl)workflowDefinitionLink;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,workflowDefinitionLink,merge);
    workflowDefinitionLink.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WorkflowDefinitionLinkModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{Long.valueOf(workflowDefinitionLinkModelImpl.getCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalCompanyId()),workflowDefinitionLinkModelImpl.getOriginalWorkflowDefinitionName(),Integer.valueOf(workflowDefinitionLinkModelImpl.getOriginalWorkflowDefinitionVersion())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_W_W,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W,args);
      args=new Object[]{Long.valueOf(workflowDefinitionLinkModelImpl.getCompanyId()),workflowDefinitionLinkModelImpl.getWorkflowDefinitionName(),Integer.valueOf(workflowDefinitionLinkModelImpl.getWorkflowDefinitionVersion())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_W_W,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_W_W,args);
    }
  }
  EntityCacheUtil.putResult(WorkflowDefinitionLinkModelImpl.ENTITY_CACHE_ENABLED,WorkflowDefinitionLinkImpl.class,workflowDefinitionLink.getPrimaryKey(),workflowDefinitionLink);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,new Object[]{Long.valueOf(workflowDefinitionLink.getGroupId()),Long.valueOf(workflowDefinitionLink.getCompanyId()),Long.valueOf(workflowDefinitionLink.getClassNameId()),Long.valueOf(workflowDefinitionLink.getClassPK()),Long.valueOf(workflowDefinitionLink.getTypePK())},workflowDefinitionLink);
  }
 else {
    if ((workflowDefinitionLinkModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_G_C_C_C_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalGroupId()),Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalCompanyId()),Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalClassNameId()),Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalClassPK()),Long.valueOf(workflowDefinitionLinkModelImpl.getOriginalTypePK())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_C_C_C_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,new Object[]{Long.valueOf(workflowDefinitionLink.getGroupId()),Long.valueOf(workflowDefinitionLink.getCompanyId()),Long.valueOf(workflowDefinitionLink.getClassNameId()),Long.valueOf(workflowDefinitionLink.getClassPK()),Long.valueOf(workflowDefinitionLink.getTypePK())},workflowDefinitionLink);
    }
  }
  return workflowDefinitionLink;
}

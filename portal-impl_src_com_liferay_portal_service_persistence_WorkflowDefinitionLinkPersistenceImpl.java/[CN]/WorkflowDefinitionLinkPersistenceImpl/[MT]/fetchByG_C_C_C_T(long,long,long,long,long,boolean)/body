{
  Object[] finderArgs=new Object[]{groupId,companyId,classNameId,classPK,typePK};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,finderArgs,this);
  }
  if (result instanceof WorkflowDefinitionLink) {
    WorkflowDefinitionLink workflowDefinitionLink=(WorkflowDefinitionLink)result;
    if ((groupId != workflowDefinitionLink.getGroupId()) || (companyId != workflowDefinitionLink.getCompanyId()) || (classNameId != workflowDefinitionLink.getClassNameId())|| (classPK != workflowDefinitionLink.getClassPK())|| (typePK != workflowDefinitionLink.getTypePK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(7);
    query.append(_SQL_SELECT_WORKFLOWDEFINITIONLINK_WHERE);
    query.append(_FINDER_COLUMN_G_C_C_C_T_GROUPID_2);
    query.append(_FINDER_COLUMN_G_C_C_C_T_COMPANYID_2);
    query.append(_FINDER_COLUMN_G_C_C_C_T_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_G_C_C_C_T_CLASSPK_2);
    query.append(_FINDER_COLUMN_G_C_C_C_T_TYPEPK_2);
    query.append(WorkflowDefinitionLinkModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(companyId);
      qPos.add(classNameId);
      qPos.add(classPK);
      qPos.add(typePK);
      List<WorkflowDefinitionLink> list=q.list();
      result=list;
      WorkflowDefinitionLink workflowDefinitionLink=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,finderArgs,list);
      }
 else {
        workflowDefinitionLink=list.get(0);
        cacheResult(workflowDefinitionLink);
        if ((workflowDefinitionLink.getGroupId() != groupId) || (workflowDefinitionLink.getCompanyId() != companyId) || (workflowDefinitionLink.getClassNameId() != classNameId)|| (workflowDefinitionLink.getClassPK() != classPK)|| (workflowDefinitionLink.getTypePK() != typePK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,finderArgs,workflowDefinitionLink);
        }
      }
      return workflowDefinitionLink;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_C_C_C_T,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (WorkflowDefinitionLink)result;
    }
  }
}

{
  final CompileJSPTask compileJSPTask=GradleUtil.addTask(project,GENERATE_JSP_JAVA_TASK_NAME,CompileJSPTask.class);
  compileJSPTask.setClasspath(jspCToolConfiguration);
  compileJSPTask.setDescription("Compiles JSP files to Java source files to check for errors.");
  compileJSPTask.setDestinationDir(new File(project.getBuildDir(),"jspc"));
  compileJSPTask.setJspCClasspath(jspCConfiguration);
  compileJSPTask.setWebAppDir(new Callable<File>(){
    @Override public File call() throws Exception {
      SourceSet sourceSet=GradleUtil.getSourceSet(compileJSPTask.getProject(),SourceSet.MAIN_SOURCE_SET_NAME);
      return getSrcDir(sourceSet.getResources());
    }
  }
);
  PluginContainer pluginContainer=project.getPlugins();
  pluginContainer.withType(WarPlugin.class,new Action<WarPlugin>(){
    @Override public void execute(    WarPlugin warPlugin){
      configureTaskGenerateJSPJavaForWarPlugin(compileJSPTask);
    }
  }
);
  return compileJSPTask;
}

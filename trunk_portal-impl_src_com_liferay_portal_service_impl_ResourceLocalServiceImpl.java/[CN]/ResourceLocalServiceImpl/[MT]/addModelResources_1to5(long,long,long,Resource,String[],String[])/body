{
  long defaultUserId=userLocalService.getDefaultUserId(companyId);
  PermissionsListFilter permissionsListFilter=PermissionsListFilterFactory.getInstance();
  List<Permission> permissionsList=permissionLocalService.addPermissions(companyId,resource.getName(),resource.getResourceId(),false);
  List<Permission> userPermissionsList=permissionsListFilter.filterUserPermissions(companyId,groupId,userId,resource.getName(),resource.getPrimKey(),false,permissionsList);
  filterOwnerPermissions(resource.getName(),userPermissionsList);
  if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
    Role ownerRole=roleLocalService.getRole(companyId,RoleConstants.OWNER);
    rolePersistence.addPermissions(ownerRole.getRoleId(),userPermissionsList);
  }
 else {
    if ((userId > 0) && (userId != defaultUserId)) {
      userPersistence.addPermissions(userId,userPermissionsList);
    }
  }
  if (groupId > 0) {
    if (groupPermissions == null) {
      groupPermissions=new String[0];
    }
    List<Permission> groupPermissionsList=permissionLocalService.getPermissions(companyId,groupPermissions,resource.getResourceId());
    groupPermissionsList=permissionsListFilter.filterGroupPermissions(companyId,groupId,userId,resource.getName(),resource.getPrimKey(),false,groupPermissionsList);
    if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
      Role role=roleLocalService.getDefaultGroupRole(groupId);
      rolePersistence.addPermissions(role.getRoleId(),groupPermissionsList);
    }
 else {
      groupPersistence.addPermissions(groupId,groupPermissionsList);
    }
  }
  if (guestPermissions == null) {
    guestPermissions=new String[0];
  }
  List<Permission> guestPermissionsList=permissionLocalService.getPermissions(companyId,guestPermissions,resource.getResourceId());
  guestPermissionsList=permissionsListFilter.filterGuestPermissions(companyId,groupId,userId,resource.getName(),resource.getPrimKey(),false,guestPermissionsList);
  if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
    Role guestRole=roleLocalService.getRole(companyId,RoleConstants.GUEST);
    rolePersistence.addPermissions(guestRole.getRoleId(),guestPermissionsList);
  }
 else {
    userPersistence.addPermissions(defaultUserId,guestPermissionsList);
  }
}

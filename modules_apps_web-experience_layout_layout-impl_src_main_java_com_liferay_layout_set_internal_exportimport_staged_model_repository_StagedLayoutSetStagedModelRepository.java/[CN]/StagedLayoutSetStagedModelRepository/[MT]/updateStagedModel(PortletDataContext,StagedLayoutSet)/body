{
  LayoutSet existingLayoutSet=_layoutSetLocalService.fetchLayoutSet(stagedLayoutSet.getLayoutSetId());
  boolean layoutSetPrototypeLinkEnabled=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED);
  boolean layoutSetPrototypeSettings=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_SETTINGS);
  if (layoutSetPrototypeSettings || Validator.isNotNull(stagedLayoutSet.getLayoutSetPrototypeUuid())) {
    existingLayoutSet.setLayoutSetPrototypeUuid(stagedLayoutSet.getLayoutSetPrototypeUuid());
    existingLayoutSet.setLayoutSetPrototypeLinkEnabled(layoutSetPrototypeLinkEnabled);
    existingLayoutSet=_layoutSetLocalService.updateLayoutSet(existingLayoutSet);
  }
  boolean layoutSetSettings=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.LAYOUT_SET_SETTINGS);
  if (layoutSetSettings) {
    existingLayoutSet=_layoutSetLocalService.updateSettings(existingLayoutSet.getGroupId(),existingLayoutSet.isPrivateLayout(),stagedLayoutSet.getSettings());
  }
  return ModelAdapterUtil.adapt(existingLayoutSet,LayoutSet.class,StagedLayoutSet.class);
}

{
  Set<Long> newDLFileEntryTypePKsSet=SetUtil.fromArray(dlFileEntryTypePKs);
  Set<Long> oldDLFileEntryTypePKsSet=SetUtil.fromArray(dlFolderToDLFileEntryTypeTableMapper.getRightPrimaryKeys(pk));
  Set<Long> removeDLFileEntryTypePKsSet=new HashSet<Long>(oldDLFileEntryTypePKsSet);
  removeDLFileEntryTypePKsSet.removeAll(newDLFileEntryTypePKsSet);
  long[] removeDLFileEntryTypePKs=new long[removeDLFileEntryTypePKsSet.size()];
  int i=0;
  for (  long removeDLFileEntryTypePK : removeDLFileEntryTypePKsSet) {
    removeDLFileEntryTypePKs[i++]=removeDLFileEntryTypePK;
  }
  dlFolderToDLFileEntryTypeTableMapper.deleteTableMappings(pk,removeDLFileEntryTypePKs);
  newDLFileEntryTypePKsSet.removeAll(oldDLFileEntryTypePKsSet);
  long[] newDLFileEntryTypePKs=new long[newDLFileEntryTypePKsSet.size()];
  i=0;
  for (  long newDLFileEntryTypePK : newDLFileEntryTypePKsSet) {
    newDLFileEntryTypePKs[i++]=newDLFileEntryTypePK;
  }
  long companyId=0;
  DLFolder dlFolder=fetchByPrimaryKey(pk);
  if (dlFolder == null) {
    companyId=companyProvider.getCompanyId();
  }
 else {
    companyId=dlFolder.getCompanyId();
  }
  dlFolderToDLFileEntryTypeTableMapper.addTableMappings(companyId,pk,newDLFileEntryTypePKs);
}

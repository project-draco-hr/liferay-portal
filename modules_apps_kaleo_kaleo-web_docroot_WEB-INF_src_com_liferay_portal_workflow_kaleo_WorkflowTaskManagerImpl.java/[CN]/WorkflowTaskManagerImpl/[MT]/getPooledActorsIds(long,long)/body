{
  try {
    KaleoTaskInstanceToken kaleoTaskInstanceToken=KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceToken(workflowTaskInstanceId);
    List<KaleoTaskAssignment> calculatedKaleoTaskAssignments=getCalculatedKaleoTaskAssignments(kaleoTaskInstanceToken);
    Map<String,Long> pooledActors=new TreeMap<>(new NaturalOrderStringComparator());
    for (    KaleoTaskAssignment calculatedKaleoTaskAssignment : calculatedKaleoTaskAssignments) {
      String assigneeClassName=calculatedKaleoTaskAssignment.getAssigneeClassName();
      long assigneeClassPK=calculatedKaleoTaskAssignment.getAssigneeClassPK();
      if (assigneeClassName.equals(User.class.getName())) {
        User user=UserLocalServiceUtil.fetchUser(assigneeClassPK);
        if (user != null) {
          pooledActors.put(user.getFullName(),user.getUserId());
        }
        continue;
      }
      Role role=RoleLocalServiceUtil.getRole(calculatedKaleoTaskAssignment.getAssigneeClassPK());
      if ((role.getType() == RoleConstants.TYPE_SITE) || (role.getType() == RoleConstants.TYPE_ORGANIZATION)) {
        List<UserGroupRole> userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRolesByGroupAndRole(kaleoTaskInstanceToken.getGroupId(),assigneeClassPK);
        for (        UserGroupRole userGroupRole : userGroupRoles) {
          User user=userGroupRole.getUser();
          pooledActors.put(user.getFullName(),user.getUserId());
        }
        List<UserGroupGroupRole> userGroupGroupRoles=UserGroupGroupRoleLocalServiceUtil.getUserGroupGroupRolesByGroupAndRole(kaleoTaskInstanceToken.getGroupId(),assigneeClassPK);
        for (        UserGroupGroupRole userGroupGroupRole : userGroupGroupRoles) {
          List<User> userGroupUsers=UserLocalServiceUtil.getUserGroupUsers(userGroupGroupRole.getUserGroupId());
          for (          User user : userGroupUsers) {
            pooledActors.put(user.getFullName(),user.getUserId());
          }
        }
      }
 else {
        List<User> inheritedRoleUsers=UserLocalServiceUtil.getInheritedRoleUsers(assigneeClassPK,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
        for (        User user : inheritedRoleUsers) {
          pooledActors.put(user.getFullName(),user.getUserId());
        }
      }
    }
    return ArrayUtil.toLongArray(pooledActors.values());
  }
 catch (  Exception e) {
    throw new WorkflowException(e);
  }
}

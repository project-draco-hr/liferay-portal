{
  Object[] finderArgs=new Object[]{groupId,classNameId,activityType,name};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_G_C_A_N,finderArgs,this);
  }
  if (result instanceof SocialActivitySetting) {
    SocialActivitySetting socialActivitySetting=(SocialActivitySetting)result;
    if ((groupId != socialActivitySetting.getGroupId()) || (classNameId != socialActivitySetting.getClassNameId()) || (activityType != socialActivitySetting.getActivityType())|| !Validator.equals(name,socialActivitySetting.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_SELECT_SOCIALACTIVITYSETTING_WHERE);
    query.append(_FINDER_COLUMN_G_C_A_N_GROUPID_2);
    query.append(_FINDER_COLUMN_G_C_A_N_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_G_C_A_N_ACTIVITYTYPE_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_G_C_A_N_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_C_A_N_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_G_C_A_N_NAME_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(classNameId);
      qPos.add(activityType);
      if (bindName) {
        qPos.add(name);
      }
      List<SocialActivitySetting> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_G_C_A_N,finderArgs,list);
      }
 else {
        if ((list.size() > 1) && _log.isWarnEnabled()) {
          _log.warn("SocialActivitySettingPersistenceImpl.fetchByG_C_A_N(long, long, int, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
        }
        SocialActivitySetting socialActivitySetting=list.get(0);
        result=socialActivitySetting;
        cacheResult(socialActivitySetting);
        if ((socialActivitySetting.getGroupId() != groupId) || (socialActivitySetting.getClassNameId() != classNameId) || (socialActivitySetting.getActivityType() != activityType)|| (socialActivitySetting.getName() == null)|| !socialActivitySetting.getName().equals(name)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_G_C_A_N,finderArgs,socialActivitySetting);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_G_C_A_N,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (SocialActivitySetting)result;
  }
}

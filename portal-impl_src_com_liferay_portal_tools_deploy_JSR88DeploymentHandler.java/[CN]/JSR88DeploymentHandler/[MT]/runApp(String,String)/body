{
  setAppStarted(false);
  boolean redeploy=false;
  TargetModuleID[] tmIds=new TargetModuleID[1];
  try {
    TargetModuleID[] ids=getDeploymentManager().getAvailableModules(ModuleType.WAR,getDeploymentManager().getTargets());
    TargetModuleID[] myIDs=new TargetModuleID[1];
    for (    TargetModuleID id : ids) {
      if (warContext.equals(id.getModuleID())) {
        myIDs[0]=id;
        redeploy=true;
        tmIds[0]=id;
        break;
      }
    }
  }
 catch (  IllegalStateException ise) {
    _log.warn(ise);
  }
catch (  TargetException te) {
    _log.warn(te);
  }
  ProgressObject deplProgress=null;
  if (!redeploy) {
    deplProgress=getDeploymentManager().distribute(getDeploymentManager().getTargets(),new File(warFilename),null);
  }
 else {
    deplProgress=getDeploymentManager().redeploy(tmIds,new File(warFilename),null);
  }
  deplProgress.addProgressListener(new DeploymentProgressListener(this,warContext));
  waitForAppStart(warContext);
  if (_isError) {
    throw new Exception("Deployment failed for " + warFilename);
  }
}

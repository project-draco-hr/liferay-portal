{
  HttpClientSPIAgent httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  MockHttpServletRequest mockHttpServletRequest=new MockHttpServletRequest();
  mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_PORTLET,_portlet);
  MockHttpServletResponse mockHttpServletResponse=new MockHttpServletResponse();
  HttpServletResponse httpServletResponse=httpClientSPIAgent.prepareResponse(mockHttpServletRequest,mockHttpServletResponse);
  Assert.assertSame(mockHttpServletResponse,mockHttpServletRequest.getAttribute(WebKeys.SPI_AGENT_ORIGINAL_RESPONSE));
  Assert.assertNotNull(mockHttpServletRequest.getAttribute(WebKeys.SPI_AGENT_RESPONSE));
  Assert.assertSame(BufferCacheServletResponse.class,httpServletResponse.getClass());
  BufferCacheServletResponse bufferCacheServletResponse=(BufferCacheServletResponse)httpServletResponse;
  ServletResponse servletResponse=bufferCacheServletResponse.getResponse();
  Assert.assertSame(ReadOnlyServletResponse.class,servletResponse.getClass());
  ReadOnlyServletResponse readOnlyServletResponse=(ReadOnlyServletResponse)servletResponse;
  Assert.assertSame(mockHttpServletResponse,readOnlyServletResponse.getResponse());
}

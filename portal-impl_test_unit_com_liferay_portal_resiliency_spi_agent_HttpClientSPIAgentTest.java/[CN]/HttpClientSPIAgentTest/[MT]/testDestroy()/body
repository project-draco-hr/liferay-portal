{
  List<LogRecord> logRecords=JDKLoggerTestUtil.configureJDKLogger(HttpClientSPIAgent.class.getName(),Level.OFF);
  ServerSocketChannel serverSocketChannel=SocketUtil.createServerSocketChannel(InetAddressUtil.getLoopbackInetAddress(),_spiConfiguration.getConnectorPort(),null);
  serverSocketChannel.configureBlocking(true);
  ServerSocket serverSocket=serverSocketChannel.socket();
  Socket socket=new Socket(InetAddressUtil.getLoopbackInetAddress(),_spiConfiguration.getConnectorPort());
  SocketImpl socketImpl=swapSocketImpl(socket,null);
  HttpClientSPIAgent httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  Queue<Socket> socketBlockingQueue=httpClientSPIAgent.socketBlockingQueue;
  socketBlockingQueue.add(socket);
  httpClientSPIAgent.destroy();
  swapSocketImpl(socket,socketImpl);
  closePeers(socket,serverSocket);
  Assert.assertTrue(logRecords.isEmpty());
  logRecords=JDKLoggerTestUtil.configureJDKLogger(HttpClientSPIAgent.class.getName(),Level.WARNING);
  httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  socketBlockingQueue=httpClientSPIAgent.socketBlockingQueue;
  socket=new Socket(InetAddressUtil.getLoopbackInetAddress(),_spiConfiguration.getConnectorPort());
  socketImpl=swapSocketImpl(socket,null);
  socketBlockingQueue.add(socket);
  httpClientSPIAgent.destroy();
  swapSocketImpl(socket,socketImpl);
  closePeers(socket,serverSocket);
  Assert.assertEquals(1,logRecords.size());
  LogRecord logRecord=logRecords.get(0);
  Throwable throwable=logRecord.getThrown();
  Assert.assertSame(IOException.class,throwable.getClass());
  logRecords=JDKLoggerTestUtil.configureJDKLogger(HttpClientSPIAgent.class.getName(),Level.WARNING);
  httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  socketBlockingQueue=httpClientSPIAgent.socketBlockingQueue;
  socket=new Socket(InetAddressUtil.getLoopbackInetAddress(),_spiConfiguration.getConnectorPort());
  socketBlockingQueue.add(socket);
  httpClientSPIAgent.destroy();
  closePeers(socket,serverSocket);
  Assert.assertTrue(logRecords.isEmpty());
  serverSocket.close();
}

{
  PropsUtilAdvice.setProps(PropsKeys.INTRABAND_MAILBOX_REAPER_THREAD_ENABLED,Boolean.FALSE.toString());
  PropsUtilAdvice.setProps(PropsKeys.INTRABAND_MAILBOX_STORAGE_LIFE,String.valueOf(Long.MAX_VALUE));
  Serializer serializer=new Serializer();
  serializer.writeString(_SERVLET_CONTEXT_NAME);
  serializer.writeObject(new SPIAgentRequest(_mockHttpServletRequest));
  long receipt=ReflectionTestUtil.invoke(MailboxUtil.class,"depositMail",new Class<?>[]{ByteBuffer.class},serializer.toByteBuffer());
  byte[] data=new byte[8];
  BigEndianCodec.putLong(data,0,receipt);
  HttpClientSPIAgent httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  MockHttpServletRequest mockHttpServletRequest=new MockHttpServletRequest();
  mockHttpServletRequest.setContent(data);
  HttpServletRequest httpServletRequest=httpClientSPIAgent.prepareRequest(mockHttpServletRequest);
  Assert.assertNotNull(httpServletRequest.getAttribute(WebKeys.SPI_AGENT_REQUEST));
}

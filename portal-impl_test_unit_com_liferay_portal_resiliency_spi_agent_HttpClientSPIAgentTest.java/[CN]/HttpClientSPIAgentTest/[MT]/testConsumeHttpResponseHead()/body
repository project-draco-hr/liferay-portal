{
  HttpClientSPIAgent httpClientSPIAgent=new HttpClientSPIAgent(_spiConfiguration,new MockRegistrationReference(new MockIntraband()));
  String wrongStatusLine="Wrong status line";
  try {
    httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(wrongStatusLine.getBytes("US-ASCII"))));
    Assert.fail();
  }
 catch (  IOException ioe) {
    Assert.assertEquals("Error status line: " + wrongStatusLine,ioe.getMessage());
  }
  String responseContentWrongEnding="HTTP/1.1 200 OK\n";
  Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongEnding.getBytes("US-ASCII")))));
  String responseContentKeepAlive="HTTP/1.1 200 OK\n\n";
  Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentKeepAlive.getBytes("US-ASCII")))));
  String responseContentWrongClose="HTTP/1.1 200 OK\nconnection:wrong\n\n";
  Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongClose.getBytes("US-ASCII")))));
  String responseContentCorrectClose="HTTP/1.1 200 OK\nkey:value\nconnection:close\n\n";
  Assert.assertTrue(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentCorrectClose.getBytes("US-ASCII")))));
}

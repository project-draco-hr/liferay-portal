{
  name=name.trim().toLowerCase();
  validate(name);
  TagsEntry entry=tagsEntryPersistence.findByPrimaryKey(entryId);
  if (!entry.getName().equals(name)) {
    if (hasEntry(entry.getCompanyId(),name)) {
      throw new DuplicateEntryException();
    }
  }
  entry.setModifiedDate(new Date());
  entry.setName(name);
  if (Validator.isNull(vocabularyName)) {
    vocabularyName=PropsValues.TAGS_VOCABULARY_DEFAULT;
  }
  TagsVocabulary vocabulary=null;
  try {
    vocabulary=tagsVocabularyPersistence.findByC_N(entry.getCompanyId(),vocabularyName);
  }
 catch (  NoSuchVocabularyException nsve) {
    if (vocabularyName.equals(PropsValues.TAGS_VOCABULARY_DEFAULT)) {
      vocabulary=tagsVocabularyLocalService.addVocabulary(entry.getUserId(),vocabularyName,true);
    }
 else {
      throw nsve;
    }
  }
  entry.setVocabularyId(vocabulary.getVocabularyId());
  if (Validator.isNotNull(parentEntryName)) {
    TagsEntry parent=getEntry(entry.getCompanyId(),parentEntryName);
    entry.setParentEntryId(parent.getEntryId());
  }
 else {
    entry.setParentEntryId(TagsEntryConstants.DEFAULT_PARENT_ENTRY_ID);
  }
  tagsEntryPersistence.update(entry,false);
  return entry;
}

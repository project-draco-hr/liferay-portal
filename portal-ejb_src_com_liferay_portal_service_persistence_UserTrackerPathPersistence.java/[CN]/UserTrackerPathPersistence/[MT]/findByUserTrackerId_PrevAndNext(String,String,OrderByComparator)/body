{
  com.liferay.portal.model.UserTrackerPath userTrackerPath=findByPrimaryKey(userTrackerPathId);
  int count=countByUserTrackerId(userTrackerId);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM UserTrackerPath IN CLASS com.liferay.portal.service.persistence.UserTrackerPathHBM WHERE ");
    if (userTrackerId == null) {
      query.append("userTrackerId is null");
    }
 else {
      query.append("userTrackerId = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
    Query q=session.createQuery(query.toString());
    int queryPos=0;
    if (userTrackerId != null) {
      q.setString(queryPos++,userTrackerId);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,userTrackerPath,UserTrackerPathHBMUtil.getInstance());
    com.liferay.portal.model.UserTrackerPath[] array=new com.liferay.portal.model.UserTrackerPath[3];
    array[0]=(com.liferay.portal.model.UserTrackerPath)objArray[0];
    array[1]=(com.liferay.portal.model.UserTrackerPath)objArray[1];
    array[2]=(com.liferay.portal.model.UserTrackerPath)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

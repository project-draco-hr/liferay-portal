{
  long pk=RandomTestUtil.nextLong();
  LayoutBranch newLayoutBranch=_persistence.create(pk);
  newLayoutBranch.setMvccVersion(RandomTestUtil.nextLong());
  newLayoutBranch.setGroupId(RandomTestUtil.nextLong());
  newLayoutBranch.setCompanyId(RandomTestUtil.nextLong());
  newLayoutBranch.setUserId(RandomTestUtil.nextLong());
  newLayoutBranch.setUserName(RandomTestUtil.randomString());
  newLayoutBranch.setLayoutSetBranchId(RandomTestUtil.nextLong());
  newLayoutBranch.setPlid(RandomTestUtil.nextLong());
  newLayoutBranch.setName(RandomTestUtil.randomString());
  newLayoutBranch.setDescription(RandomTestUtil.randomString());
  newLayoutBranch.setMaster(RandomTestUtil.randomBoolean());
  _persistence.update(newLayoutBranch);
  LayoutBranch existingLayoutBranch=_persistence.findByPrimaryKey(newLayoutBranch.getPrimaryKey());
  Assert.assertEquals(existingLayoutBranch.getMvccVersion(),newLayoutBranch.getMvccVersion());
  Assert.assertEquals(existingLayoutBranch.getLayoutBranchId(),newLayoutBranch.getLayoutBranchId());
  Assert.assertEquals(existingLayoutBranch.getGroupId(),newLayoutBranch.getGroupId());
  Assert.assertEquals(existingLayoutBranch.getCompanyId(),newLayoutBranch.getCompanyId());
  Assert.assertEquals(existingLayoutBranch.getUserId(),newLayoutBranch.getUserId());
  Assert.assertEquals(existingLayoutBranch.getUserName(),newLayoutBranch.getUserName());
  Assert.assertEquals(existingLayoutBranch.getLayoutSetBranchId(),newLayoutBranch.getLayoutSetBranchId());
  Assert.assertEquals(existingLayoutBranch.getPlid(),newLayoutBranch.getPlid());
  Assert.assertEquals(existingLayoutBranch.getName(),newLayoutBranch.getName());
  Assert.assertEquals(existingLayoutBranch.getDescription(),newLayoutBranch.getDescription());
  Assert.assertEquals(existingLayoutBranch.getMaster(),newLayoutBranch.getMaster());
}

{
  Session session=null;
  try {
    session=openSession();
    StringBundler sb=new StringBundler(5);
    sb.append(StringPool.OPEN_PARENTHESIS);
    sb.append(CustomSQLUtil.get(COUNT_O_BY_C_PO));
    sb.append(") UNION ALL (");
    String sql=CustomSQLUtil.get(COUNT_U_BY_C_S_O);
    int status=queryDefinition.getStatus();
    if (status == WorkflowConstants.STATUS_ANY) {
      sql=StringUtil.replace(sql,"(User_.status = ?) AND",StringPool.BLANK);
    }
    sb.append(sql);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    SQLQuery q=session.createSynchronizedSQLQuery(sb.toString());
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    qPos.add(parentOrganizationId);
    qPos.add(companyId);
    if (status != WorkflowConstants.STATUS_ANY) {
      qPos.add(queryDefinition.getStatus());
    }
    qPos.add(parentOrganizationId);
    int count=0;
    Iterator<Long> itr=q.iterate();
    while (itr.hasNext()) {
      Long l=itr.next();
      if (l != null) {
        count+=l.intValue();
      }
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

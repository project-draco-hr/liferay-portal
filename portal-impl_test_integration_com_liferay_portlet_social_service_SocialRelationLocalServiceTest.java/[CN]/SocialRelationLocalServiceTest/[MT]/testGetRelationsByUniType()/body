{
  User fra1User=UserLocalServiceUtil.getUserByScreenName(TestPropsValues.getCompanyId(),"fra1");
  User fra2User=UserLocalServiceUtil.getUserByScreenName(TestPropsValues.getCompanyId(),"fra2");
  User fra3User=UserLocalServiceUtil.getUserByScreenName(TestPropsValues.getCompanyId(),"fra3");
  User fra6User=UserLocalServiceUtil.getUserByScreenName(TestPropsValues.getCompanyId(),"fra6");
  List<User> users=UserLocalServiceUtil.getSocialUsers(fra1User.getUserId(),SocialRelationConstants.TYPE_UNI_PARENT,StringPool.EQUAL,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new UserScreenNameComparator(true));
  Assert.assertEquals(8,users.size());
  Assert.assertEquals("fra2",users.get(0).getScreenName());
  Assert.assertEquals("fra3",users.get(1).getScreenName());
  Assert.assertEquals("fra4",users.get(2).getScreenName());
  Assert.assertEquals("fra5",users.get(3).getScreenName());
  Assert.assertEquals("fra6",users.get(4).getScreenName());
  Assert.assertEquals("fra7",users.get(5).getScreenName());
  Assert.assertEquals("fra8",users.get(6).getScreenName());
  Assert.assertEquals("fra9",users.get(7).getScreenName());
  users=UserLocalServiceUtil.getSocialUsers(fra2User.getUserId(),SocialRelationConstants.TYPE_UNI_PARENT,StringPool.EQUAL,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new UserScreenNameComparator(true));
  Assert.assertEquals(0,users.size());
  users=UserLocalServiceUtil.getSocialUsers(fra3User.getUserId(),SocialRelationConstants.TYPE_UNI_CHILD,StringPool.EQUAL,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new UserScreenNameComparator(true));
  Assert.assertEquals(2,users.size());
  Assert.assertEquals("fra1",users.get(0).getScreenName());
  Assert.assertEquals("fra2",users.get(1).getScreenName());
  users=UserLocalServiceUtil.getSocialUsers(fra6User.getUserId(),SocialRelationConstants.TYPE_UNI_CHILD,StringPool.EQUAL,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new UserScreenNameComparator(true));
  Assert.assertEquals(0,users.size());
}

{
  ProgressTracker tracker=ProgressTrackerThreadLocal.getProgressTracker();
  int count=0;
  List<Element> pages=root.elements("page");
  int total=pages.size();
  Iterator<Element> itr=root.elements("page").iterator();
  int percentage=10;
  for (int i=0; itr.hasNext(); i++) {
    Element pageEl=itr.next();
    String author=pageEl.element("revision").element("contributor").elementText("username");
    String title=pageEl.elementText("title");
    title=normalizeTitle(title);
    percentage=Math.min(10 + (i * 90) / total,99);
    tracker.updateProgress(percentage);
    if (isSpecialMediaWikiPage(title,specialNamespaces)) {
      continue;
    }
    List<Element> revisionEls=pageEl.elements("revision");
    Element lastRevisionEl=revisionEls.get(revisionEls.size() - 1);
    String content=lastRevisionEl.elementText("text");
    try {
      importPage(userId,author,node,title,content);
    }
 catch (    Exception e) {
      _log.warn("Page with title " + title + " could not be imported",e);
    }
    count++;
  }
  _log.info("Imported " + count + " pages into "+ node.getName());
}

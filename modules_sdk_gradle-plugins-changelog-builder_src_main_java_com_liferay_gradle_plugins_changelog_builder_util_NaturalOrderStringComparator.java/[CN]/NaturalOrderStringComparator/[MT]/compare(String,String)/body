{
  if (s1 == null) {
    s1="";
  }
  if (s2 == null) {
    s2="";
  }
  int value=0;
  int i1=0;
  int i2=0;
  int length1=s1.length();
  int length2=s2.length();
  while ((i1 < length1) && (i2 < length2)) {
    char c1=s1.charAt(i1);
    char c2=s2.charAt(i2);
    if (Character.isDigit(c1) && Character.isDigit(c2)) {
      String leadingDigitsAsString1=_extractLeadingDigits(s1.substring(i1));
      String leadingDigitsAsString2=_extractLeadingDigits(s2.substring(i2));
      int leadingNumber1=Integer.parseInt(leadingDigitsAsString1);
      int leadingNumber2=Integer.parseInt(leadingDigitsAsString2);
      if (leadingNumber1 != leadingNumber2) {
        value=leadingNumber1 - leadingNumber2;
        break;
      }
      i1+=leadingDigitsAsString1.length();
      i2+=leadingDigitsAsString2.length();
      continue;
    }
    if (c1 == c2) {
      i1++;
      i2++;
      continue;
    }
    if (_caseSensitive) {
      value=c1 - c2;
      break;
    }
 else {
      char c1UpperCase=Character.toUpperCase(c1);
      char c2UpperCase=Character.toUpperCase(c2);
      if (c1UpperCase == c2UpperCase) {
        i1++;
        i2++;
        continue;
      }
      value=c1UpperCase - c2UpperCase;
      break;
    }
  }
  if ((value == 0) && (length1 != length2)) {
    if ((length1 == i1) && (length2 == i2)) {
      value=length2 - length1;
    }
 else {
      value=length1 - length2;
    }
  }
  if (_ascending) {
    return value;
  }
 else {
    return -value;
  }
}

{
  AutoDeployListener autoDeployListener=_serviceTracker.getService();
  if (autoDeployListener != null) {
    if (autoDeployListener.isDeployable(autoDeploymentContext)) {
      autoDeployListener.deploy(autoDeploymentContext);
      File file=autoDeploymentContext.getFile();
      file.delete();
      return;
    }
  }
  String[] dirNames=PropsUtil.getArray(PropsKeys.MODULE_FRAMEWORK_AUTO_DEPLOY_DIRS);
  if (ArrayUtil.isEmpty(dirNames)) {
    throw new AutoDeployException("The portal property \"" + PropsKeys.MODULE_FRAMEWORK_AUTO_DEPLOY_DIRS + "\" is not set");
  }
  String dirName=dirNames[0];
  File file=autoDeploymentContext.getFile();
  String fileName=file.getName();
  if (StringUtil.endsWith(fileName,".cfg")) {
    for (    String curDirName : dirNames) {
      if (curDirName.endsWith("/configs")) {
        dirName=curDirName;
        break;
      }
    }
  }
 else   if (StringUtil.endsWith(fileName,".lpkg")) {
    for (    String curDirName : dirNames) {
      if (curDirName.endsWith("/marketplace")) {
        dirName=curDirName;
        break;
      }
    }
  }
 else   if (StringUtil.endsWith(fileName,".war")) {
    for (    String curDirName : dirNames) {
      if (curDirName.endsWith("/war")) {
        dirName=curDirName;
        break;
      }
    }
  }
 else {
    for (    String curDirName : dirNames) {
      if (curDirName.endsWith("/modules")) {
        dirName=curDirName;
        break;
      }
    }
  }
  FileUtil.mkdirs(dirName);
  FileUtil.move(file,new File(dirName,fileName));
}

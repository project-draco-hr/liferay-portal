{
  Closure<Set<String>> closure=new Closure<Set<String>>(null){
    @SuppressWarnings("unused") public Set<String> doCall(    Delete delete){
      Set<String> cleanTaskNames=new HashSet<>();
      Project project=delete.getProject();
      for (      Task task : project.getTasks()) {
        String taskName=task.getName();
        if (taskName.equals(LiferayBasePlugin.DEPLOY_TASK_NAME) || taskName.equals(EclipsePlugin.getECLIPSE_CP_TASK_NAME()) || taskName.equals(EclipsePlugin.getECLIPSE_PROJECT_TASK_NAME())|| taskName.equals("ideaModule")|| (task instanceof BuildSoyTask)) {
          continue;
        }
        if (GradleUtil.hasPlugin(project,CachePlugin.class) && taskName.startsWith("save") && taskName.endsWith("Cache")) {
          continue;
        }
        if (GradleUtil.hasPlugin(project,WSDLBuilderPlugin.class) && taskName.startsWith(WSDLBuilderPlugin.BUILD_WSDL_TASK_NAME + "Generate")) {
          continue;
        }
        boolean autoClean=GradleUtil.getProperty(task,AUTO_CLEAN_PROPERTY_NAME,true);
        if (!autoClean) {
          continue;
        }
        TaskOutputs taskOutputs=task.getOutputs();
        if (!taskOutputs.getHasOutput()) {
          continue;
        }
        cleanTaskNames.add(BasePlugin.CLEAN_TASK_NAME + StringUtil.capitalize(taskName));
      }
      return cleanTaskNames;
    }
  }
;
  delete.dependsOn(closure);
}

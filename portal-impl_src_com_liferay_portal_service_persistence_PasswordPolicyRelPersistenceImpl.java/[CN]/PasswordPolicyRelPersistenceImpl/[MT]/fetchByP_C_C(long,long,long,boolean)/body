{
  Object[] finderArgs=new Object[]{passwordPolicyId,classNameId,classPK};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_P_C_C,finderArgs,this);
  }
  if (result instanceof PasswordPolicyRel) {
    PasswordPolicyRel passwordPolicyRel=(PasswordPolicyRel)result;
    if ((passwordPolicyId != passwordPolicyRel.getPasswordPolicyId()) || (classNameId != passwordPolicyRel.getClassNameId()) || (classPK != passwordPolicyRel.getClassPK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_PASSWORDPOLICYREL_WHERE);
    query.append(_FINDER_COLUMN_P_C_C_PASSWORDPOLICYID_2);
    query.append(_FINDER_COLUMN_P_C_C_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_P_C_C_CLASSPK_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(passwordPolicyId);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<PasswordPolicyRel> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_P_C_C,finderArgs,list);
      }
 else {
        if ((list.size() > 1) && _log.isWarnEnabled()) {
          _log.warn("PasswordPolicyRelPersistenceImpl.fetchByP_C_C(long, long, long, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
        }
        PasswordPolicyRel passwordPolicyRel=list.get(0);
        result=passwordPolicyRel;
        cacheResult(passwordPolicyRel);
        if ((passwordPolicyRel.getPasswordPolicyId() != passwordPolicyId) || (passwordPolicyRel.getClassNameId() != classNameId) || (passwordPolicyRel.getClassPK() != classPK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_P_C_C,finderArgs,passwordPolicyRel);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_P_C_C,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (PasswordPolicyRel)result;
  }
}

{
  if (!caseSensitive) {
    s=toLowerCase(s);
    wildcard=toLowerCase(wildcard);
  }
  int index=wildcard.indexOf(escapeWildcardCharacter);
  if (index != -1) {
    char newSingleWildcardCharacter=0;
    while (wildcard.indexOf(newSingleWildcardCharacter) != -1) {
      newSingleWildcardCharacter++;
    }
    char newMultipleWildcardCharacter=(char)(newSingleWildcardCharacter + 1);
    while (wildcard.indexOf(newMultipleWildcardCharacter) != -1) {
      newMultipleWildcardCharacter++;
    }
    StringBuilder sb=new StringBuilder(wildcard);
    for (int i=0; i < sb.length(); i++) {
      char c=sb.charAt(i);
      if (c == escapeWildcardCharacter) {
        sb.deleteCharAt(i);
      }
 else       if (c == singleWildcardCharacter) {
        sb.setCharAt(i,newSingleWildcardCharacter);
      }
 else       if (c == multipleWildcardCharacter) {
        sb.setCharAt(i,newMultipleWildcardCharacter);
      }
    }
    wildcard=sb.toString();
    singleWildcardCharacter=newSingleWildcardCharacter;
    multipleWildcardCharacter=newMultipleWildcardCharacter;
  }
  for (index=0; index < s.length(); index++) {
    char c=wildcard.charAt(index);
    if (c == multipleWildcardCharacter) {
      break;
    }
    if ((s.charAt(index) != c) && (c != singleWildcardCharacter)) {
      return false;
    }
  }
  int sIndex=index;
  int wildcardIndex=index;
  int matchPoint=0;
  int comparePoint=0;
  while (sIndex < s.length()) {
    char c=wildcard.charAt(wildcardIndex);
    if (c == multipleWildcardCharacter) {
      if (++wildcardIndex == wildcard.length()) {
        return true;
      }
      matchPoint=wildcardIndex;
      comparePoint=sIndex + 1;
    }
 else     if ((c == s.charAt(sIndex)) || (c == singleWildcardCharacter)) {
      sIndex++;
      wildcardIndex++;
    }
 else {
      wildcardIndex=matchPoint;
      sIndex=comparePoint++;
    }
  }
  while (wildcardIndex < wildcard.length()) {
    if (wildcard.charAt(wildcardIndex) != multipleWildcardCharacter) {
      break;
    }
    wildcardIndex++;
  }
  if (wildcardIndex == wildcard.length()) {
    return true;
  }
 else {
    return false;
  }
}

{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portlet.documentlibrary.model.DLFileEntryType")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<DLFileEntryType>> listenersList=new ArrayList<ModelListener<DLFileEntryType>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<DLFileEntryType>)InstanceFactory.newInstance(getClassLoader(),listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsDLFolder=new ContainsDLFolder();
  addDLFolder=new AddDLFolder();
  clearDLFolders=new ClearDLFolders();
  removeDLFolder=new RemoveDLFolder();
  containsDDMStructure=new ContainsDDMStructure();
  addDDMStructure=new AddDDMStructure();
  clearDDMStructures=new ClearDDMStructures();
  removeDDMStructure=new RemoveDDMStructure();
}

{
  if (!containsDDMStructure.contains(fileEntryTypeId,structureId)) {
    ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure>[] ddmStructureListeners=ddmStructurePersistence.getListeners();
    for (    ModelListener<DLFileEntryType> listener : listeners) {
      listener.onBeforeAddAssociation(fileEntryTypeId,com.liferay.portlet.dynamicdatamapping.model.DDMStructure.class.getName(),structureId);
    }
    for (    ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure> listener : ddmStructureListeners) {
      listener.onBeforeAddAssociation(structureId,DLFileEntryType.class.getName(),fileEntryTypeId);
    }
    _sqlUpdate.update(new Object[]{new Long(fileEntryTypeId),new Long(structureId)});
    for (    ModelListener<DLFileEntryType> listener : listeners) {
      listener.onAfterAddAssociation(fileEntryTypeId,com.liferay.portlet.dynamicdatamapping.model.DDMStructure.class.getName(),structureId);
    }
    for (    ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure> listener : ddmStructureListeners) {
      listener.onAfterAddAssociation(structureId,DLFileEntryType.class.getName(),fileEntryTypeId);
    }
  }
}

{
  ModelListener<com.liferay.portlet.documentlibrary.model.DLFolder>[] dlFolderListeners=dlFolderPersistence.getListeners();
  List<com.liferay.portlet.documentlibrary.model.DLFolder> dlFolders=null;
  if ((listeners.length > 0) || (dlFolderListeners.length > 0)) {
    dlFolders=getDLFolders(fileEntryTypeId);
    for (    com.liferay.portlet.documentlibrary.model.DLFolder dlFolder : dlFolders) {
      for (      ModelListener<DLFileEntryType> listener : listeners) {
        listener.onBeforeRemoveAssociation(fileEntryTypeId,com.liferay.portlet.documentlibrary.model.DLFolder.class.getName(),dlFolder.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.documentlibrary.model.DLFolder> listener : dlFolderListeners) {
        listener.onBeforeRemoveAssociation(dlFolder.getPrimaryKey(),DLFileEntryType.class.getName(),fileEntryTypeId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(fileEntryTypeId)});
  if ((listeners.length > 0) || (dlFolderListeners.length > 0)) {
    for (    com.liferay.portlet.documentlibrary.model.DLFolder dlFolder : dlFolders) {
      for (      ModelListener<DLFileEntryType> listener : listeners) {
        listener.onAfterRemoveAssociation(fileEntryTypeId,com.liferay.portlet.documentlibrary.model.DLFolder.class.getName(),dlFolder.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.documentlibrary.model.DLFolder> listener : dlFolderListeners) {
        listener.onAfterRemoveAssociation(dlFolder.getPrimaryKey(),DLFileEntryType.class.getName(),fileEntryTypeId);
      }
    }
  }
}

{
  ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure>[] ddmStructureListeners=ddmStructurePersistence.getListeners();
  List<com.liferay.portlet.dynamicdatamapping.model.DDMStructure> ddmStructures=null;
  if ((listeners.length > 0) || (ddmStructureListeners.length > 0)) {
    ddmStructures=getDDMStructures(fileEntryTypeId);
    for (    com.liferay.portlet.dynamicdatamapping.model.DDMStructure ddmStructure : ddmStructures) {
      for (      ModelListener<DLFileEntryType> listener : listeners) {
        listener.onBeforeRemoveAssociation(fileEntryTypeId,com.liferay.portlet.dynamicdatamapping.model.DDMStructure.class.getName(),ddmStructure.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure> listener : ddmStructureListeners) {
        listener.onBeforeRemoveAssociation(ddmStructure.getPrimaryKey(),DLFileEntryType.class.getName(),fileEntryTypeId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(fileEntryTypeId)});
  if ((listeners.length > 0) || (ddmStructureListeners.length > 0)) {
    for (    com.liferay.portlet.dynamicdatamapping.model.DDMStructure ddmStructure : ddmStructures) {
      for (      ModelListener<DLFileEntryType> listener : listeners) {
        listener.onAfterRemoveAssociation(fileEntryTypeId,com.liferay.portlet.dynamicdatamapping.model.DDMStructure.class.getName(),ddmStructure.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.dynamicdatamapping.model.DDMStructure> listener : ddmStructureListeners) {
        listener.onAfterRemoveAssociation(ddmStructure.getPrimaryKey(),DLFileEntryType.class.getName(),fileEntryTypeId);
      }
    }
  }
}

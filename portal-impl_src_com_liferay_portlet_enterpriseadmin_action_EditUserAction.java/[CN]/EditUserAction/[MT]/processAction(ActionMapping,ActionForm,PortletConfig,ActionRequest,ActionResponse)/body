{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    User user=null;
    String oldScreenName=StringPool.BLANK;
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      Object[] returnValue=updateUser(actionRequest);
      user=(User)returnValue[0];
      oldScreenName=((String)returnValue[1]);
    }
 else     if (cmd.equals(Constants.DEACTIVATE) || cmd.equals(Constants.DELETE) || cmd.equals(Constants.RESTORE)) {
      deleteUsers(actionRequest);
    }
 else     if (cmd.equals("deleteRole")) {
      deleteRole(actionRequest);
    }
 else     if (cmd.equals("unlock")) {
      user=updateLockout(actionRequest);
    }
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    if (user != null) {
      if (Validator.isNotNull(oldScreenName)) {
        ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
        Group group=user.getGroup();
        if (group.getGroupId() == themeDisplay.getScopeGroupId()) {
          Layout layout=themeDisplay.getLayout();
          String friendlyURLPath=group.getPathFriendlyURL(layout.isPrivateLayout(),themeDisplay);
          String oldPath=friendlyURLPath + StringPool.SLASH + oldScreenName;
          String newPath=friendlyURLPath + StringPool.SLASH + user.getScreenName();
          redirect=StringUtil.replace(redirect,oldPath,newPath);
          redirect=StringUtil.replace(redirect,HttpUtil.encodeURL(oldPath),HttpUtil.encodeURL(newPath));
        }
      }
      redirect+=user.getUserId();
    }
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchUserException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      setForward(actionRequest,"portlet.enterprise_admin.error");
    }
 else     if (e instanceof AddressCityException || e instanceof AddressStreetException || e instanceof ContactFirstNameException|| e instanceof ContactLastNameException|| e instanceof DuplicateUserEmailAddressException|| e instanceof DuplicateUserScreenNameException|| e instanceof EmailAddressException|| e instanceof NoSuchCountryException|| e instanceof NoSuchListTypeException|| e instanceof NoSuchRegionException|| e instanceof PhoneNumberException|| e instanceof RequiredUserException|| e instanceof ReservedUserEmailAddressException|| e instanceof ReservedUserScreenNameException|| e instanceof UserEmailAddressException|| e instanceof UserIdException|| e instanceof UserPasswordException|| e instanceof UserScreenNameException|| e instanceof UserSmsException|| e instanceof WebsiteURLException) {
      if (e instanceof NoSuchListTypeException) {
        NoSuchListTypeException nslte=(NoSuchListTypeException)e;
        SessionErrors.add(actionRequest,e.getClass().getName() + nslte.getType());
      }
 else {
        SessionErrors.add(actionRequest,e.getClass().getName(),e);
      }
      if (e instanceof RequiredUserException) {
        actionResponse.sendRedirect(ParamUtil.getString(actionRequest,"redirect"));
      }
    }
 else {
      throw e;
    }
  }
}

{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  boolean autoPassword=ParamUtil.getBoolean(actionRequest,"autoPassword",true);
  String password1=ParamUtil.getString(actionRequest,"password1");
  String password2=ParamUtil.getString(actionRequest,"password2");
  String reminderQueryQuestion=ParamUtil.getString(actionRequest,"reminderQueryQuestion");
  if (reminderQueryQuestion.equals(EnterpriseAdminUtil.CUSTOM_QUESTION)) {
    reminderQueryQuestion=ParamUtil.getString(actionRequest,"reminderQueryCustomQuestion");
  }
  String reminderQueryAnswer=ParamUtil.getString(actionRequest,"reminderQueryAnswer");
  boolean autoScreenName=ParamUtil.getBoolean(actionRequest,"autoScreenName");
  String screenName=ParamUtil.getString(actionRequest,"screenName");
  String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
  String openId=ParamUtil.getString(actionRequest,"openId");
  String languageId=ParamUtil.getString(actionRequest,"languageId");
  String timeZoneId=ParamUtil.getString(actionRequest,"timeZoneId");
  String greeting=ParamUtil.getString(actionRequest,"greeting");
  String firstName=ParamUtil.getString(actionRequest,"firstName");
  String middleName=ParamUtil.getString(actionRequest,"middleName");
  String lastName=ParamUtil.getString(actionRequest,"lastName");
  int prefixId=ParamUtil.getInteger(actionRequest,"prefixId");
  int suffixId=ParamUtil.getInteger(actionRequest,"suffixId");
  boolean male=ParamUtil.getBoolean(actionRequest,"male",true);
  int birthdayMonth=ParamUtil.getInteger(actionRequest,"birthdayMonth");
  int birthdayDay=ParamUtil.getInteger(actionRequest,"birthdayDay");
  int birthdayYear=ParamUtil.getInteger(actionRequest,"birthdayYear");
  String comments=ParamUtil.getString(actionRequest,"comments");
  String smsSn=ParamUtil.getString(actionRequest,"smsSn");
  String aimSn=ParamUtil.getString(actionRequest,"aimSn");
  String facebookSn=ParamUtil.getString(actionRequest,"facebookSn");
  String icqSn=ParamUtil.getString(actionRequest,"icqSn");
  String jabberSn=ParamUtil.getString(actionRequest,"jabberSn");
  String msnSn=ParamUtil.getString(actionRequest,"msnSn");
  String mySpaceSn=ParamUtil.getString(actionRequest,"mySpaceSn");
  String skypeSn=ParamUtil.getString(actionRequest,"skypeSn");
  String twitterSn=ParamUtil.getString(actionRequest,"twitterSn");
  String ymSn=ParamUtil.getString(actionRequest,"ymSn");
  String jobTitle=ParamUtil.getString(actionRequest,"jobTitle");
  long[] groupIds=getLongArray(actionRequest,"groupsSearchContainerPrimaryKeys");
  long[] organizationIds=getLongArray(actionRequest,"organizationsSearchContainerPrimaryKeys");
  long[] roleIds=getLongArray(actionRequest,"rolesSearchContainerPrimaryKeys");
  List<UserGroupRole> userGroupRoles=EnterpriseAdminUtil.getUserGroupRoles(actionRequest);
  long[] userGroupIds=getLongArray(actionRequest,"userGroupsSearchContainerPrimaryKeys");
  boolean sendEmail=true;
  List<Address> addresses=EnterpriseAdminUtil.getAddresses(actionRequest);
  List<EmailAddress> emailAddresses=EnterpriseAdminUtil.getEmailAddresses(actionRequest);
  List<Phone> phones=EnterpriseAdminUtil.getPhones(actionRequest);
  List<Website> websites=EnterpriseAdminUtil.getWebsites(actionRequest);
  List<AnnouncementsDelivery> announcementsDeliveries=getAnnouncementsDeliveries(actionRequest);
  ServiceContext serviceContext=ServiceContextFactory.getInstance(User.class.getName(),actionRequest);
  User user=null;
  String oldScreenName=StringPool.BLANK;
  if (cmd.equals(Constants.ADD)) {
    user=UserServiceUtil.addUser(themeDisplay.getCompanyId(),autoPassword,password1,password2,autoScreenName,screenName,emailAddress,openId,themeDisplay.getLocale(),firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,addresses,emailAddresses,phones,websites,announcementsDeliveries,serviceContext);
    if (!userGroupRoles.isEmpty()) {
      for (      UserGroupRole userGroupRole : userGroupRoles) {
        userGroupRole.setUserId(user.getUserId());
      }
      user=UserServiceUtil.updateUser(user.getUserId(),StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,false,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,openId,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,aimSn,facebookSn,icqSn,jabberSn,msnSn,mySpaceSn,skypeSn,twitterSn,ymSn,jobTitle,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,addresses,emailAddresses,phones,websites,announcementsDeliveries,serviceContext);
    }
  }
 else {
    user=PortalUtil.getSelectedUser(actionRequest);
    String oldPassword=AdminUtil.getUpdateUserPassword(actionRequest,user.getUserId());
    String newPassword1=ParamUtil.getString(actionRequest,"password1");
    String newPassword2=ParamUtil.getString(actionRequest,"password2");
    boolean passwordReset=ParamUtil.getBoolean(actionRequest,"passwordReset");
    String tempOldScreenName=user.getScreenName();
    user=UserServiceUtil.updateUser(user.getUserId(),oldPassword,newPassword1,newPassword2,passwordReset,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,openId,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,aimSn,facebookSn,icqSn,jabberSn,msnSn,mySpaceSn,skypeSn,twitterSn,ymSn,jobTitle,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,addresses,emailAddresses,phones,websites,announcementsDeliveries,serviceContext);
    boolean deletePortrait=ParamUtil.getBoolean(actionRequest,"deletePortrait");
    if (deletePortrait) {
      UserServiceUtil.deletePortrait(user.getUserId());
    }
    if (!tempOldScreenName.equals(user.getScreenName())) {
      oldScreenName=tempOldScreenName;
    }
    if (user.getUserId() == themeDisplay.getUserId()) {
      HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
      HttpSession session=request.getSession();
      session.removeAttribute(Globals.LOCALE_KEY);
      PortletSession portletSession=actionRequest.getPortletSession();
      InvokerPortletImpl.clearResponses(portletSession);
      if (Validator.isNotNull(newPassword1)) {
        portletSession.setAttribute(WebKeys.USER_PASSWORD,newPassword1,PortletSession.APPLICATION_SCOPE);
      }
    }
  }
  long publicLayoutSetPrototypeId=ParamUtil.getLong(actionRequest,"publicLayoutSetPrototypeId");
  long privateLayoutSetPrototypeId=ParamUtil.getLong(actionRequest,"privateLayoutSetPrototypeId");
  CommunitiesUtil.applyLayoutSetPrototypes(user.getGroup(),publicLayoutSetPrototypeId,privateLayoutSetPrototypeId);
  return new Object[]{user,oldScreenName};
}

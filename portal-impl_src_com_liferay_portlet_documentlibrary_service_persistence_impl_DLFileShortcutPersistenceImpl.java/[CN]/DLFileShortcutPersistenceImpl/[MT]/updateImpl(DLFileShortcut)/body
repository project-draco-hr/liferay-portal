{
  dlFileShortcut=toUnwrappedModel(dlFileShortcut);
  boolean isNew=dlFileShortcut.isNew();
  DLFileShortcutModelImpl dlFileShortcutModelImpl=(DLFileShortcutModelImpl)dlFileShortcut;
  if (Validator.isNull(dlFileShortcut.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    dlFileShortcut.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (dlFileShortcut.getCreateDate() == null)) {
    if (serviceContext == null) {
      dlFileShortcut.setCreateDate(now);
    }
 else {
      dlFileShortcut.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!dlFileShortcutModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      dlFileShortcut.setModifiedDate(now);
    }
 else {
      dlFileShortcut.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (dlFileShortcut.isNew()) {
      session.save(dlFileShortcut);
      dlFileShortcut.setNew(false);
    }
 else {
      dlFileShortcut=(DLFileShortcut)session.merge(dlFileShortcut);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DLFileShortcutModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{dlFileShortcutModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalUuid(),dlFileShortcutModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{dlFileShortcutModelImpl.getUuid(),dlFileShortcutModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{dlFileShortcutModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_TOFILEENTRYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalToFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_TOFILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_TOFILEENTRYID,args);
      args=new Object[]{dlFileShortcutModelImpl.getToFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_TOFILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_TOFILEENTRYID,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalGroupId(),dlFileShortcutModelImpl.getOriginalFolderId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F,args);
      args=new Object[]{dlFileShortcutModelImpl.getGroupId(),dlFileShortcutModelImpl.getFolderId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalGroupId(),dlFileShortcutModelImpl.getOriginalFolderId(),dlFileShortcutModelImpl.getOriginalActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A,args);
      args=new Object[]{dlFileShortcutModelImpl.getGroupId(),dlFileShortcutModelImpl.getFolderId(),dlFileShortcutModelImpl.getActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A,args);
    }
    if ((dlFileShortcutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileShortcutModelImpl.getOriginalGroupId(),dlFileShortcutModelImpl.getOriginalFolderId(),dlFileShortcutModelImpl.getOriginalActive(),dlFileShortcutModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_A_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A_S,args);
      args=new Object[]{dlFileShortcutModelImpl.getGroupId(),dlFileShortcutModelImpl.getFolderId(),dlFileShortcutModelImpl.getActive(),dlFileShortcutModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_A_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_A_S,args);
    }
  }
  entityCache.putResult(DLFileShortcutModelImpl.ENTITY_CACHE_ENABLED,DLFileShortcutImpl.class,dlFileShortcut.getPrimaryKey(),dlFileShortcut,false);
  clearUniqueFindersCache(dlFileShortcutModelImpl);
  cacheUniqueFindersCache(dlFileShortcutModelImpl,isNew);
  dlFileShortcut.resetOriginalValues();
  return dlFileShortcut;
}

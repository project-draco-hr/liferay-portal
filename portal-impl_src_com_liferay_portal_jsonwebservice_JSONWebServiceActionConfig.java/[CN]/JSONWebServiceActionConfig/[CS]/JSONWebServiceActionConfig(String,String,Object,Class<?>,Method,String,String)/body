{
  _contextName=GetterUtil.getString(contextName);
  _contextPath=GetterUtil.getString(contextPath);
  _actionObject=actionObject;
  _actionClass=actionClass;
  Method newActionMethod=actionMethod;
  if (actionObject != null) {
    try {
      Class<?> actionObjectClass=actionObject.getClass();
      newActionMethod=actionObjectClass.getMethod(actionMethod.getName(),actionMethod.getParameterTypes());
    }
 catch (    NoSuchMethodException nsme) {
      throw new IllegalArgumentException(nsme);
    }
  }
  _actionMethod=newActionMethod;
  if (Validator.isNotNull(_contextName)) {
    StringBundler sb=new StringBundler(4);
    sb.append(StringPool.SLASH);
    sb.append(_contextName);
    sb.append(StringPool.PERIOD);
    sb.append(path.substring(1));
    path=sb.toString();
  }
  _path=path;
  _method=method;
  Deprecated deprecated=actionMethod.getAnnotation(Deprecated.class);
  if (deprecated != null) {
    _deprecated=true;
  }
 else {
    _deprecated=false;
  }
  _methodParameters=MethodParametersResolverUtil.resolveMethodParameters(actionMethod);
  Method realActionMethod=null;
  try {
    realActionMethod=_actionClass.getDeclaredMethod(actionMethod.getName(),actionMethod.getParameterTypes());
  }
 catch (  NoSuchMethodException nsme) {
  }
  _realActionMethod=realActionMethod;
  StringBundler sb=new StringBundler(_methodParameters.length * 2 + 3);
  sb.append(_path);
  sb.append(StringPool.MINUS);
  sb.append(_methodParameters.length);
  for (  MethodParameter methodParameter : _methodParameters) {
    sb.append(StringPool.MINUS);
    sb.append(methodParameter.getName());
  }
  _signature=sb.toString();
}

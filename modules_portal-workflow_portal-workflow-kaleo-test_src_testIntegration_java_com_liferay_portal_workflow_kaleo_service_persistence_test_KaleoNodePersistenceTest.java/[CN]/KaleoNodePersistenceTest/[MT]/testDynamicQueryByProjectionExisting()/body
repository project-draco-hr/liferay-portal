{
  KaleoNode newKaleoNode=addKaleoNode();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoNode.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoNodeId"));
  Object newKaleoNodeId=newKaleoNode.getKaleoNodeId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoNodeId",new Object[]{newKaleoNodeId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoNodeId=result.get(0);
  Assert.assertEquals(existingKaleoNodeId,newKaleoNodeId);
}

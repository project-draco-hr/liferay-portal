{
  long pk=nextLong();
  ResourceTypePermission newResourceTypePermission=_persistence.create(pk);
  newResourceTypePermission.setCompanyId(nextLong());
  newResourceTypePermission.setGroupId(nextLong());
  newResourceTypePermission.setName(randomString());
  newResourceTypePermission.setRoleId(nextLong());
  newResourceTypePermission.setActionIds(nextLong());
  _persistence.update(newResourceTypePermission,false);
  ResourceTypePermission existingResourceTypePermission=_persistence.findByPrimaryKey(newResourceTypePermission.getPrimaryKey());
  assertEquals(existingResourceTypePermission.getResourceTypePermissionId(),newResourceTypePermission.getResourceTypePermissionId());
  assertEquals(existingResourceTypePermission.getCompanyId(),newResourceTypePermission.getCompanyId());
  assertEquals(existingResourceTypePermission.getGroupId(),newResourceTypePermission.getGroupId());
  assertEquals(existingResourceTypePermission.getName(),newResourceTypePermission.getName());
  assertEquals(existingResourceTypePermission.getRoleId(),newResourceTypePermission.getRoleId());
  assertEquals(existingResourceTypePermission.getActionIds(),newResourceTypePermission.getActionIds());
}

{
  for (int i=0; i < _columns.length; i+=2) {
    String columnName=String.valueOf(_columns[i]);
    boolean columnAscending=Boolean.valueOf(String.valueOf(_columns[i + 1]));
    Class<?> clazzColumnType=BeanPropertiesUtil.getObjectTypeSilent(object1,columnName);
    Object object1ColumnType=null;
    try {
      object1ColumnType=clazzColumnType.newInstance();
    }
 catch (    Exception e) {
    }
    Object object1ColumnValue=BeanPropertiesUtil.getObjectSilent(object1,columnName);
    Object object2ColumnValue=BeanPropertiesUtil.getObjectSilent(object2,columnName);
    if (object1ColumnType instanceof Date) {
      Date object1Column1ValueDate=(Date)object1ColumnValue;
      Date object2Column1ValueDate=(Date)object2ColumnValue;
      int value=DateUtil.compareTo(object1Column1ValueDate,object2Column1ValueDate);
      if (value == 0) {
        continue;
      }
      if (columnAscending) {
        return value;
      }
 else {
        return -value;
      }
    }
 else     if (object1ColumnType instanceof Comparable<?>) {
      Comparable<Object> object1Column1ValueComparable=(Comparable<Object>)object1ColumnValue;
      Comparable<Object> object2Column1ValueComparable=(Comparable<Object>)object2ColumnValue;
      int value=object1Column1ValueComparable.compareTo(object2Column1ValueComparable);
      if (value == 0) {
        continue;
      }
      if (columnAscending) {
        return value;
      }
 else {
        return -value;
      }
    }
  }
  return 0;
}

{
  long userId=portletDataContext.getUserId(template.getUserUuid());
  Element structureElement=portletDataContext.getReferenceDataElement(template,DDMStructure.class,template.getClassPK());
  StagedModelDataHandlerUtil.importStagedModel(portletDataContext,structureElement);
  Map<Long,Long> structureIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class);
  long classPK=MapUtil.getLong(structureIds,template.getClassPK(),template.getClassPK());
  File smallFile=null;
  try {
    if (template.isSmallImage()) {
      Element element=portletDataContext.getImportDataStagedModelElement(template);
      String smallImagePath=element.attributeValue("small-image-path");
      if (Validator.isNotNull(template.getSmallImageURL())) {
        String smallImageURL=ExportImportHelperUtil.replaceImportContentReferences(portletDataContext,element,template.getSmallImageURL(),true);
        template.setSmallImageURL(smallImageURL);
      }
 else       if (Validator.isNotNull(smallImagePath)) {
        byte[] bytes=portletDataContext.getZipEntryAsByteArray(smallImagePath);
        if (bytes != null) {
          smallFile=FileUtil.createTempFile(template.getSmallImageType());
          FileUtil.write(smallFile,bytes);
        }
      }
    }
    ServiceContext serviceContext=portletDataContext.createServiceContext(template,DDMPortletDataHandler.NAMESPACE);
    DDMTemplate importedTemplate=null;
    if (portletDataContext.isDataStrategyMirror()) {
      DDMTemplate existingTemplate=DDMTemplateLocalServiceUtil.fetchDDMTemplateByUuidAndGroupId(template.getUuid(),portletDataContext.getScopeGroupId());
      if (existingTemplate == null) {
        existingTemplate=DDMTemplateLocalServiceUtil.fetchDDMTemplateByUuidAndGroupId(template.getUuid(),portletDataContext.getCompanyGroupId());
      }
      if (existingTemplate == null) {
        serviceContext.setUuid(template.getUuid());
        importedTemplate=addTemplate(userId,portletDataContext.getScopeGroupId(),template,classPK,smallFile,serviceContext);
      }
 else       if (portletDataContext.isCompanyStagedGroupedModel(existingTemplate)) {
        return;
      }
 else {
        importedTemplate=DDMTemplateLocalServiceUtil.updateTemplate(existingTemplate.getTemplateId(),template.getClassPK(),template.getNameMap(),template.getDescriptionMap(),template.getType(),template.getMode(),template.getLanguage(),template.getScript(),template.isCacheable(),template.isSmallImage(),template.getSmallImageURL(),smallFile,serviceContext);
      }
    }
 else {
      importedTemplate=addTemplate(userId,portletDataContext.getScopeGroupId(),template,classPK,smallFile,serviceContext);
    }
    portletDataContext.importClassedModel(template,importedTemplate,DDMPortletDataHandler.NAMESPACE);
    Map<String,String> ddmTemplateKeys=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(DDMTemplate.class + ".ddmTemplateKey");
    ddmTemplateKeys.put(template.getTemplateKey(),importedTemplate.getTemplateKey());
  }
  finally {
    if (smallFile != null) {
      smallFile.delete();
    }
  }
}

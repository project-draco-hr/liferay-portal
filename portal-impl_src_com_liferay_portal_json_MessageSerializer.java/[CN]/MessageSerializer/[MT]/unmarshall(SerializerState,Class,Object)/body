{
  JSONObject jsonObject=(JSONObject)object;
  String javaClassName;
  try {
    javaClassName=jsonObject.getString("javaClass");
  }
 catch (  JSONException e) {
    throw new UnmarshallException("Could not read javaClass",e);
  }
  if (javaClassName == null) {
    throw new UnmarshallException("No type hint");
  }
  Message message;
  if (javaClassName.equals(Message.class.getName())) {
    message=new Message();
  }
 else {
    throw new UnmarshallException("Not a Message");
  }
  serializerState.setSerialized(object,message);
  Iterator<?> iterator=jsonObject.keys();
  String key=null;
  try {
    while (iterator.hasNext()) {
      key=(String)iterator.next();
      if (key.equals("_destinationName")) {
        message.setDestinationName((String)jsonObject.get(key));
      }
 else       if (key.equals("_payload")) {
        message.setPayload(jsonObject.get(key));
      }
 else       if (key.equals("_response")) {
        message.setResponse(jsonObject.get(key));
      }
 else       if (key.equals("_responseDestinationName")) {
        message.setResponseDestinationName((String)jsonObject.get(key));
      }
 else       if (key.equals("_responseId")) {
        message.setResponseId((String)jsonObject.get(key));
      }
 else       if (key.equals("_values")) {
        JSONObject jsonValues=(JSONObject)jsonObject.get(key);
        Iterator<?> valueIterator=jsonValues.keys();
        String valueKey=null;
        while (valueIterator.hasNext()) {
          valueKey=(String)valueIterator.next();
          message.put(valueKey,jsonValues.get(valueKey));
        }
      }
    }
  }
 catch (  JSONException e) {
    throw new UnmarshallException("Can not unmarshall object : " + object + e.getMessage(),e);
  }
  return message;
}

{
  StringBundler sb=new StringBundler(6);
  sb.append("insert into DDMTemplateVersion (templateVersionId, ");
  sb.append("groupId, companyId, userId, userName, createDate, ");
  sb.append("classNameId, classPK, templateId, version, name, ");
  sb.append("description, language, script, status, statusByUserId, ");
  sb.append("statusByUserName, statusDate) values (?, ?, ?, ?, ?, ?, ");
  sb.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
  try (LoggingTimer loggingTimer=new LoggingTimer();PreparedStatement ps1=connection.prepareStatement("select * from DDMTemplate");PreparedStatement ps2=AutoBatchPreparedStatementUtil.concurrentAutoBatch(connection,"update DDMTemplate set resourceClassNameId = ? where " + "templateId = ?");PreparedStatement ps3=AutoBatchPreparedStatementUtil.concurrentAutoBatch(connection,"update DDMTemplate set script = ? where templateId = ?");PreparedStatement ps4=AutoBatchPreparedStatementUtil.concurrentAutoBatch(connection,sb.toString());ResultSet rs=ps1.executeQuery()){
    while (rs.next()) {
      long groupId=rs.getLong("groupId");
      long companyId=rs.getLong("companyId");
      long userId=rs.getLong("userId");
      String userName=rs.getString("userName");
      Timestamp modifiedDate=rs.getTimestamp("modifiedDate");
      long classNameId=rs.getLong("classNameId");
      long classPK=rs.getLong("classPK");
      long templateId=rs.getLong("templateId");
      String version=rs.getString("version");
      String name=rs.getString("name");
      String description=rs.getString("description");
      String language=rs.getString("language");
      String script=rs.getString("script");
      long resourceClassNameId=getTemplateResourceClassNameId(classNameId,classPK);
      ps2.setLong(1,resourceClassNameId);
      ps2.setLong(2,templateId);
      ps2.addBatch();
      _templateResourceClassNameIds.put(templateId,resourceClassNameId);
      String updatedScript=renameInvalidDDMFormFieldNames(classPK,script);
      if (language.equals("xsd")) {
        DDMForm ddmForm=_ddmFormXSDDeserializer.deserialize(updatedScript);
        ddmForm=updateDDMFormFields(ddmForm);
        updatedScript=toJSON(ddmForm);
      }
      if (!script.equals(updatedScript)) {
        ps3.setString(1,updatedScript);
        ps3.setLong(2,templateId);
        ps3.addBatch();
      }
      if (!hasTemplateVersion(templateId,version)) {
        ps4.setLong(1,increment());
        ps4.setLong(2,groupId);
        ps4.setLong(3,companyId);
        ps4.setLong(4,userId);
        ps4.setString(5,userName);
        ps4.setTimestamp(6,modifiedDate);
        ps4.setLong(7,classNameId);
        ps4.setLong(8,classPK);
        ps4.setLong(9,templateId);
        ps4.setString(10,DDMStructureConstants.VERSION_DEFAULT);
        ps4.setString(11,name);
        ps4.setString(12,description);
        ps4.setString(13,language);
        ps4.setString(14,updatedScript);
        ps4.setInt(15,WorkflowConstants.STATUS_APPROVED);
        ps4.setLong(16,userId);
        ps4.setString(17,userName);
        ps4.setTimestamp(18,modifiedDate);
        ps4.addBatch();
      }
    }
    ps2.executeBatch();
    ps3.executeBatch();
    ps4.executeBatch();
  }
 }

{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    StringBundler sb=new StringBundler(5);
    sb.append("select DDMStorageLink.classPK, DDMStorageLink.");
    sb.append("structureId from DDMStorageLink inner join ");
    sb.append("DDMStructure on (DDMStorageLink.structureId = ");
    sb.append("DDMStructure.structureId) where DDMStorageLink.");
    sb.append("classNameId = ? and DDMStructure.storageType = ?");
    try (PreparedStatement ps1=connection.prepareStatement(sb.toString());PreparedStatement ps2=connection.prepareStatement("select companyId, data_ from DDMContent where contentId " + "= ?");PreparedStatement ps3=AutoBatchPreparedStatementUtil.concurrentAutoBatch(connection,"update DDMContent set data_= ? where contentId = ?")){
      ps.setLong(1,_ddmContentClassNameId);
      ps.setString(2,"xml");
      try (ResultSet rs=ps1.executeQuery()){
        while (rs.next()) {
          long structureId=rs.getLong("structureId");
          long classPK=rs.getLong("classPK");
          DDMForm ddmForm=getDDMForm(structureId);
          ps2.setLong(1,classPK);
          try (ResultSet rs2=ps2.executeQuery()){
            if (rs2.next()) {
              long companyId=rs2.getLong("companyId");
              String xml=rs2.getString("data_");
              DDMFormValues ddmFormValues=getDDMFormValues(companyId,ddmForm,xml);
              String content=toJSON(ddmFormValues);
              content=renameInvalidDDMFormFieldNames(structureId,content);
              ps3.setString(1,content);
              ps3.setLong(2,classPK);
              ps3.addBatch();
            }
          }
         }
        ps3.executeBatch();
      }
     }
     updateStructureStorageType();
    updateStructureVersionStorageType();
  }
 }

{
  Object[] finderArgs=new Object[]{groupId,feedId};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_G_F,finderArgs,this);
  }
  if (result instanceof JournalFeed) {
    JournalFeed journalFeed=(JournalFeed)result;
    if ((groupId != journalFeed.getGroupId()) || !Validator.equals(feedId,journalFeed.getFeedId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_JOURNALFEED_WHERE);
    query.append(_FINDER_COLUMN_G_F_GROUPID_2);
    boolean bindFeedId=false;
    if (feedId == null) {
      query.append(_FINDER_COLUMN_G_F_FEEDID_1);
    }
 else     if (feedId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_F_FEEDID_3);
    }
 else {
      bindFeedId=true;
      query.append(_FINDER_COLUMN_G_F_FEEDID_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindFeedId) {
        qPos.add(feedId);
      }
      List<JournalFeed> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_G_F,finderArgs,list);
      }
 else {
        JournalFeed journalFeed=list.get(0);
        result=journalFeed;
        cacheResult(journalFeed);
        if ((journalFeed.getGroupId() != groupId) || (journalFeed.getFeedId() == null) || !journalFeed.getFeedId().equals(feedId)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_G_F,finderArgs,journalFeed);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_G_F,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (JournalFeed)result;
  }
}

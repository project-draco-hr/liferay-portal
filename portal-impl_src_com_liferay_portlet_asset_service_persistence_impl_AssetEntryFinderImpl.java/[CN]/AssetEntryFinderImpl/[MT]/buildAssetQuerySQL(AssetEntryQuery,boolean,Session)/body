{
  StringBundler sb=new StringBundler(64);
  if (count) {
    sb.append("SELECT COUNT(DISTINCT AssetEntry.entryId) AS COUNT_VALUE ");
  }
 else {
    sb.append("SELECT {AssetEntry.*} ");
    boolean selectRatings=false;
    String orderByCol1=entryQuery.getOrderByCol1();
    String orderByCol2=entryQuery.getOrderByCol2();
    if (orderByCol1.equals("ratings") || orderByCol2.equals("ratings")) {
      selectRatings=true;
      sb.append(", TEMP_TABLE.averageScore ");
    }
    sb.append("FROM (SELECT DISTINCT AssetEntry.entryId ");
    if (selectRatings) {
      sb.append(", RatingsStats.averageScore ");
    }
  }
  sb.append("FROM AssetEntry ");
  if (entryQuery.getAnyTagIds().length > 0) {
    sb.append("INNER JOIN ");
    sb.append("AssetEntries_AssetTags ON ");
    sb.append("(AssetEntries_AssetTags.entryId = ");
    sb.append("AssetEntry.entryId) ");
    sb.append("INNER JOIN ");
    sb.append("AssetTag ON ");
    sb.append("(AssetTag.tagId = AssetEntries_AssetTags.tagId) ");
  }
  if (entryQuery.getLinkedAssetEntryId() > 0) {
    sb.append("INNER JOIN ");
    sb.append("AssetLink ON ");
    sb.append("(AssetEntry.entryId = AssetLink.entryId1) ");
    sb.append("OR (AssetEntry.entryId = AssetLink.entryId2)");
  }
  if (entryQuery.getOrderByCol1().equals("ratings") || entryQuery.getOrderByCol2().equals("ratings")) {
    sb.append(" LEFT JOIN ");
    sb.append("RatingsStats ON ");
    sb.append("(RatingsStats.classNameId = ");
    sb.append("AssetEntry.classNameId) AND ");
    sb.append("(RatingsStats.classPK = AssetEntry.classPK)");
  }
  sb.append("WHERE ");
  int whereIndex=sb.index();
  if (entryQuery.getLinkedAssetEntryId() > 0) {
    sb.append(" AND ((AssetLink.entryId1 = ?) OR ");
    sb.append("(AssetLink.entryId2 = ?))");
    sb.append(" AND (AssetEntry.entryId != ?)");
  }
  if (entryQuery.isListable() != null) {
    sb.append(" AND (listable = ?)");
  }
  if (entryQuery.isVisible() != null) {
    sb.append(" AND (visible = ?)");
  }
  if (entryQuery.isExcludeZeroViewCount()) {
    sb.append(" AND (AssetEntry.viewCount > 0)");
  }
  if (Validator.isNotNull(entryQuery.getKeywords())) {
    sb.append(" AND ((AssetEntry.userName LIKE ?) OR");
    sb.append(" (AssetEntry.title LIKE ?) OR");
    sb.append(" (AssetEntry.description LIKE ?))");
  }
 else   if (Validator.isNotNull(entryQuery.getUserName()) || Validator.isNotNull(entryQuery.getTitle()) || Validator.isNotNull(entryQuery.getDescription())) {
    sb.append(" AND (");
    boolean requiresOperator=false;
    if (Validator.isNotNull(entryQuery.getUserName())) {
      sb.append("(AssetEntry.userName LIKE ?)");
      requiresOperator=true;
    }
    if (Validator.isNotNull(entryQuery.getTitle())) {
      if (requiresOperator) {
        sb.append(entryQuery.isAndOperator() ? " AND " : " OR ");
      }
      sb.append("(AssetEntry.title LIKE ?)");
      requiresOperator=true;
    }
    if (Validator.isNotNull(entryQuery.getDescription())) {
      if (requiresOperator) {
        sb.append(entryQuery.isAndOperator() ? " AND " : " OR ");
      }
      sb.append("(AssetEntry.description LIKE ?)");
    }
    sb.append(")");
  }
  Layout layout=entryQuery.getLayout();
  if (layout != null) {
    sb.append(" AND (AssetEntry.layoutUuid = ?)");
  }
  if (entryQuery.getAllCategoryIds().length > 0) {
    buildAllCategoriesSQL(entryQuery.getAllCategoryIds(),sb);
  }
  if (entryQuery.getAnyCategoryIds().length > 0) {
    buildAnyCategoriesSQL(entryQuery.getAnyCategoryIds(),sb);
  }
  if (entryQuery.getNotAllCategoryIds().length > 0) {
    buildNotAllCategoriesSQL(entryQuery.getNotAllCategoryIds(),sb);
  }
  if (entryQuery.getNotAnyCategoryIds().length > 0) {
    buildNotAnyCategoriesSQL(entryQuery.getNotAnyCategoryIds(),sb);
  }
  if (entryQuery.getClassTypeIds().length > 0) {
    buildClassTypeIdsSQL(entryQuery.getClassTypeIds(),sb);
  }
  if (entryQuery.getAllTagIds().length > 0) {
    buildAllTagsSQL(entryQuery.getAllTagIdsArray(),sb);
  }
  if (entryQuery.getAnyTagIds().length > 0) {
    buildAnyTagsSQL(entryQuery.getAnyTagIds(),sb);
  }
  if (entryQuery.getNotAllTagIds().length > 0) {
    buildNotAllTagsSQL(entryQuery.getNotAllTagIdsArray(),sb);
  }
  if (entryQuery.getNotAnyTagIds().length > 0) {
    buildNotAnyTagsSQL(entryQuery.getNotAnyTagIds(),sb);
  }
  sb.append(getDates(entryQuery.getPublishDate(),entryQuery.getExpirationDate()));
  sb.append(getGroupIds(entryQuery.getGroupIds()));
  sb.append(getClassNameIds(entryQuery.getClassNameIds()));
  if (!count) {
    sb.append(") TEMP_TABLE ");
    sb.append("INNER JOIN ");
    sb.append("AssetEntry AssetEntry ON ");
    sb.append("TEMP_TABLE.entryId = AssetEntry.entryId");
    sb.append(" ORDER BY ");
    if (entryQuery.getOrderByCol1().equals("ratings")) {
      sb.append("TEMP_TABLE.averageScore");
    }
 else {
      sb.append("AssetEntry.");
      sb.append(entryQuery.getOrderByCol1());
    }
    sb.append(StringPool.SPACE);
    sb.append(entryQuery.getOrderByType1());
    if (Validator.isNotNull(entryQuery.getOrderByCol2()) && !entryQuery.getOrderByCol1().equals(entryQuery.getOrderByCol2())) {
      if (entryQuery.getOrderByCol2().equals("ratings")) {
        sb.append(", TEMP_TABLE.averageScore");
      }
 else {
        sb.append(", AssetEntry.");
        sb.append(entryQuery.getOrderByCol2());
      }
      sb.append(StringPool.SPACE);
      sb.append(entryQuery.getOrderByType2());
    }
  }
  if (sb.index() > whereIndex) {
    String where=sb.stringAt(whereIndex);
    if (where.startsWith(" AND")) {
      sb.setStringAt(where.substring(4),whereIndex);
    }
  }
  String sql=sb.toString();
  SQLQuery q=session.createSynchronizedSQLQuery(sql);
  if (count) {
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
  }
 else {
    q.addEntity("AssetEntry",AssetEntryImpl.class);
  }
  QueryPos qPos=QueryPos.getInstance(q);
  if (entryQuery.getLinkedAssetEntryId() > 0) {
    qPos.add(entryQuery.getLinkedAssetEntryId());
    qPos.add(entryQuery.getLinkedAssetEntryId());
    qPos.add(entryQuery.getLinkedAssetEntryId());
  }
  if (entryQuery.isListable() != null) {
    qPos.add(entryQuery.isListable());
  }
  if (entryQuery.isVisible() != null) {
    qPos.add(entryQuery.isVisible());
  }
  if (Validator.isNotNull(entryQuery.getKeywords())) {
    qPos.add(StringUtil.quote(entryQuery.getKeywords(),StringPool.PERCENT));
    qPos.add(StringUtil.quote(entryQuery.getKeywords(),StringPool.PERCENT));
    qPos.add(StringUtil.quote(entryQuery.getKeywords(),StringPool.PERCENT));
  }
 else {
    if (Validator.isNotNull(entryQuery.getUserName())) {
      qPos.add(StringUtil.quote(entryQuery.getUserName(),StringPool.PERCENT));
    }
    if (Validator.isNotNull(entryQuery.getTitle())) {
      qPos.add(StringUtil.quote(entryQuery.getTitle(),StringPool.PERCENT));
    }
    if (Validator.isNotNull(entryQuery.getDescription())) {
      qPos.add(StringUtil.quote(entryQuery.getDescription(),StringPool.PERCENT));
    }
  }
  if (layout != null) {
    qPos.add(layout.getUuid());
  }
  setDates(qPos,entryQuery.getPublishDate(),entryQuery.getExpirationDate());
  qPos.add(entryQuery.getGroupIds());
  qPos.add(entryQuery.getClassNameIds());
  return q;
}

{
  if (isObjectEquals(method)) {
    return JMXProxyUtil.equals(_objectName,args[0]);
  }
  if (isObjectHashCode(method)) {
    return _objectName.hashCode();
  }
  if (isObjectToString(method)) {
    return _objectName.toString();
  }
  String methodName=method.getName();
  Class<?>[] parameterTypes=method.getParameterTypes();
  ProcessCallable<Serializable> processCallable=null;
  if (isGetGetter(methodName,parameterTypes)) {
    processCallable=new GetAttributeProcessCallable(_objectName,methodName.substring(3),isOptional(method));
  }
 else   if (isIsGetter(methodName,parameterTypes)) {
    processCallable=new GetAttributeProcessCallable(_objectName,methodName.substring(2),isOptional(method));
  }
 else   if (isSetter(methodName,parameterTypes)) {
    processCallable=new SetAttributeProcessCallable(_objectName,methodName.substring(3),(Serializable)args[0],isOptional(method));
  }
 else {
    String[] parameterTypeNames=new String[parameterTypes.length];
    for (int i=0; i < parameterTypes.length; i++) {
      parameterTypeNames[i]=parameterTypes[i].getName();
    }
    processCallable=new OperationProcessCallable(_objectName,methodName,args,parameterTypeNames);
  }
  Future<? extends Serializable> future=_processCallableExecutor.execute(processCallable);
  return decode(method.getReturnType(),future.get());
}

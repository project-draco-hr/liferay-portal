{
  final long categoryId=GetterUtil.getLong(primKey);
  MBCategory category=_mbCategoryLocalService.getCategory(categoryId);
  List<Object> categoriesAndThreads=_mbCategoryLocalService.getCategoriesAndThreads(category.getGroupId(),categoryId);
  for (  Object categoryOrThread : categoriesAndThreads) {
    if (categoryOrThread instanceof MBThread) {
      MBThread thread=(MBThread)categoryOrThread;
      List<MBMessage> messages=_mbMessageLocalService.getThreadMessages(thread.getThreadId(),WorkflowConstants.STATUS_ANY);
      for (      MBMessage message : messages) {
        propagateMessageRolePermissions(actionRequest,className,categoryId,message.getMessageId(),roleIds);
      }
    }
 else {
      category=(MBCategory)categoryOrThread;
      List<Long> categoryIds=new ArrayList<>();
      categoryIds.add(category.getCategoryId());
      categoryIds=_mbCategoryLocalService.getSubcategoryIds(categoryIds,category.getGroupId(),category.getCategoryId());
      for (      final long addCategoryId : categoryIds) {
        propagateCategoryRolePermissions(actionRequest,className,categoryId,addCategoryId,roleIds);
        ActionableDynamicQuery actionableDynamicQuery=_mbMessageLocalService.getActionableDynamicQuery();
        actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
          @Override public void addCriteria(          DynamicQuery dynamicQuery){
            Property categoryIdProperty=PropertyFactoryUtil.forName("categoryId");
            dynamicQuery.add(categoryIdProperty.eq(addCategoryId));
          }
        }
);
        actionableDynamicQuery.setGroupId(category.getGroupId());
        actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
          @Override public void performAction(          Object object) throws PortalException {
            MBMessage message=(MBMessage)object;
            propagateMessageRolePermissions(actionRequest,className,categoryId,message.getMessageId(),roleIds);
          }
        }
);
        actionableDynamicQuery.performActions();
      }
    }
  }
}

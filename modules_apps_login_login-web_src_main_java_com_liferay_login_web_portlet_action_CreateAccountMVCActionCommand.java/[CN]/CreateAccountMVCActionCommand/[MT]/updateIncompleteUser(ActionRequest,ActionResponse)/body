{
  HttpServletRequest request=PortalUtil.getOriginalServletRequest(PortalUtil.getHttpServletRequest(actionRequest));
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  boolean autoPassword=true;
  String password1=null;
  String password2=null;
  boolean autoScreenName=false;
  String screenName=ParamUtil.getString(actionRequest,"screenName");
  String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
  HttpSession session=request.getSession();
  long facebookId=GetterUtil.getLong(session.getAttribute(WebKeys.FACEBOOK_INCOMPLETE_USER_ID));
  String googleId=GetterUtil.getString(session.getAttribute(WebKeys.GOOGLE_INCOMPLETE_USER_ID));
  if (Validator.isNotNull(googleId)) {
    autoPassword=false;
  }
  if ((facebookId > 0) || Validator.isNotNull(googleId)) {
    password1=PwdGenerator.getPassword();
    password2=password1;
  }
  String openId=ParamUtil.getString(actionRequest,"openId");
  String firstName=ParamUtil.getString(actionRequest,"firstName");
  String middleName=ParamUtil.getString(actionRequest,"middleName");
  String lastName=ParamUtil.getString(actionRequest,"lastName");
  long prefixId=ParamUtil.getInteger(actionRequest,"prefixId");
  long suffixId=ParamUtil.getInteger(actionRequest,"suffixId");
  boolean male=ParamUtil.getBoolean(actionRequest,"male",true);
  int birthdayMonth=ParamUtil.getInteger(actionRequest,"birthdayMonth");
  int birthdayDay=ParamUtil.getInteger(actionRequest,"birthdayDay");
  int birthdayYear=ParamUtil.getInteger(actionRequest,"birthdayYear");
  String jobTitle=ParamUtil.getString(actionRequest,"jobTitle");
  boolean updateUserInformation=true;
  boolean sendEmail=true;
  if (Validator.isNotNull(googleId)) {
    sendEmail=false;
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(User.class.getName(),actionRequest);
  User user=_userService.updateIncompleteUser(themeDisplay.getCompanyId(),autoPassword,password1,password2,autoScreenName,screenName,emailAddress,facebookId,openId,themeDisplay.getLocale(),firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,updateUserInformation,sendEmail,serviceContext);
  if (facebookId > 0) {
    session.removeAttribute(WebKeys.FACEBOOK_INCOMPLETE_USER_ID);
    updateUserAndSendRedirect(actionRequest,actionResponse,themeDisplay,user,password1);
    return;
  }
  if (Validator.isNotNull(googleId)) {
    _userLocalService.updateGoogleId(user.getUserId(),googleId);
    session.removeAttribute(WebKeys.GOOGLE_INCOMPLETE_USER_ID);
    updateUserAndSendRedirect(actionRequest,actionResponse,themeDisplay,user,password1);
    return;
  }
  if (user.getStatus() == WorkflowConstants.STATUS_APPROVED) {
    SessionMessages.add(request,"userAdded",user.getEmailAddress());
    SessionMessages.add(request,"userAddedPassword",user.getPasswordUnencrypted());
  }
 else {
    SessionMessages.add(request,"userPending",user.getEmailAddress());
  }
  sendRedirect(actionRequest,actionResponse,themeDisplay,user,user.getPasswordUnencrypted());
}

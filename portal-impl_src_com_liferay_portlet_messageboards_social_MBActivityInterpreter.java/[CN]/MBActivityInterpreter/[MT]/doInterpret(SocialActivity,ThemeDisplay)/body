{
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  String receiverUserName=getUserName(activity.getReceiverUserId(),themeDisplay);
  int activityType=activity.getType();
  MBMessage message=MBMessageLocalServiceUtil.getMessage(activity.getClassPK());
  String link=themeDisplay.getURLPortal() + themeDisplay.getPathMain() + "/message_boards/find_message?messageId="+ activity.getClassPK();
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    Group group=GroupLocalServiceUtil.getGroup(activity.getGroupId());
    groupName=group.getDescriptiveName();
  }
  String titlePattern=null;
  Object[] titleArguments=null;
  if (activityType == MBActivityKeys.ADD_MESSAGE) {
    titlePattern="activity-message-boards-add-message";
    if (Validator.isNotNull(groupName)) {
      titlePattern+="-in";
    }
    titleArguments=new Object[]{creatorUserName,groupName};
  }
 else   if (activityType == MBActivityKeys.REPLY_MESSAGE) {
    titlePattern="activity-message-boards-reply-message";
    if (Validator.isNotNull(groupName)) {
      titlePattern+="-in";
    }
    titleArguments=new Object[]{creatorUserName,receiverUserName,groupName};
  }
  String title=themeDisplay.translate(titlePattern,titleArguments);
  StringBuilder sb=new StringBuilder();
  sb.append("<a href=\"");
  sb.append(link);
  sb.append("\">");
  sb.append(cleanContent(message.getSubject()));
  sb.append("</a><br />");
  sb.append(cleanContent(BBCodeUtil.getHTML(message)));
  String body=sb.toString();
  return new SocialActivityFeedEntry(link,title,body);
}

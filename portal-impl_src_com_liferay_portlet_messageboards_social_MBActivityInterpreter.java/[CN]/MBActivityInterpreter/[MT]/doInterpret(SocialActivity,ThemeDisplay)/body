{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  int activityType=activity.getType();
  MBThread thread;
  MBMessage message;
  if (activity.isClassName(MBThread.class.getName())) {
    thread=MBThreadLocalServiceUtil.getThread(activity.getClassPK());
    message=MBMessageLocalServiceUtil.getMessage(thread.getRootMessageId());
  }
 else {
    message=MBMessageLocalServiceUtil.getMessage(activity.getClassPK());
    thread=message.getThread();
  }
  if (!MBMessagePermission.contains(permissionChecker,message.getMessageId(),ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  String receiverUserName=getUserName(activity.getReceiverUserId(),themeDisplay);
  String link=getLink(message,themeDisplay);
  Object[] titleArguments=new Object[]{groupName,creatorUserName,receiverUserName,wrapLink(link,message.getSubject())};
  String title=themeDisplay.translate(getTitlePattern(groupName,activityType,activity.getReceiverUserId()),titleArguments);
  String body=StringPool.BLANK;
  if (message.getCategoryId() > 0) {
    StringBundler sb=new StringBundler(4);
    sb.append(themeDisplay.getPortalURL());
    sb.append(themeDisplay.getPathMain());
    sb.append("/message_boards/find_category?mbCategoryId=");
    sb.append(message.getCategoryId());
    String categoryLink=sb.toString();
    body=wrapLink(categoryLink,"go-to-category",themeDisplay);
  }
  return new SocialActivityFeedEntry(link,title,body);
}

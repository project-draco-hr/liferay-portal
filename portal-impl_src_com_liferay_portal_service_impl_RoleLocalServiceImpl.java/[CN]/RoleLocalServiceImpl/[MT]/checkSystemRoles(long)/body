{
  String companyIdHexString=StringUtil.toHexString(companyId);
  List<Role> roles=null;
  try {
    roles=roleFinder.findBySystem(companyId);
  }
 catch (  Exception e) {
    runSQL("alter table Role_ add uuid_ VARCHAR(75) null");
    runSQL("alter table Role_ add userId LONG");
    runSQL("alter table Role_ add userName VARCHAR(75) null");
    runSQL("alter table Role_ add createDate DATE null");
    runSQL("alter table Role_ add modifiedDate DATE null");
    roles=roleFinder.findBySystem(companyId);
  }
  for (  Role role : roles) {
    _systemRolesMap.put(companyIdHexString.concat(role.getName()),role);
  }
  String[] systemRoles=PortalUtil.getSystemRoles();
  for (  String name : systemRoles) {
    String key="system.role." + StringUtil.replace(name,CharPool.SPACE,CharPool.PERIOD) + ".description";
    Map<Locale,String> descriptionMap=new HashMap<>();
    descriptionMap.put(LocaleUtil.getDefault(),PropsUtil.get(key));
    int type=RoleConstants.TYPE_REGULAR;
    checkSystemRole(companyId,name,descriptionMap,type);
  }
  String[] systemOrganizationRoles=PortalUtil.getSystemOrganizationRoles();
  for (  String name : systemOrganizationRoles) {
    String key="system.organization.role." + StringUtil.replace(name,CharPool.SPACE,CharPool.PERIOD) + ".description";
    Map<Locale,String> descriptionMap=new HashMap<>();
    descriptionMap.put(LocaleUtil.getDefault(),PropsUtil.get(key));
    int type=RoleConstants.TYPE_ORGANIZATION;
    checkSystemRole(companyId,name,descriptionMap,type);
  }
  String[] systemSiteRoles=PortalUtil.getSystemSiteRoles();
  for (  String name : systemSiteRoles) {
    String key="system.site.role." + StringUtil.replace(name,CharPool.SPACE,CharPool.PERIOD) + ".description";
    Map<Locale,String> descriptionMap=new HashMap<>();
    descriptionMap.put(LocaleUtil.getDefault(),PropsUtil.get(key));
    int type=RoleConstants.TYPE_SITE;
    checkSystemRole(companyId,name,descriptionMap,type);
  }
  String[] allSystemRoles=ArrayUtil.append(systemRoles,systemOrganizationRoles,systemSiteRoles);
  for (  String roleName : allSystemRoles) {
    Role role=getRole(companyId,roleName);
    resourceLocalService.addResources(companyId,0,0,RoleClassNameThreadLocal.getRoleClassName(),role.getRoleId(),false,false,false);
  }
  Role userRole=getRole(companyId,RoleConstants.USER);
  for (  String roleName : allSystemRoles) {
    Role role=getRole(companyId,roleName);
    resourcePermissionLocalService.setResourcePermissions(companyId,RoleClassNameThreadLocal.getRoleClassName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(role.getRoleId()),userRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  className=GetterUtil.getString(className);
  long classNameId=PortalUtil.getClassNameId(className);
  long roleId=counterLocalService.increment();
  if ((classNameId <= 0) || className.equals(Role.class.getName())) {
    classNameId=PortalUtil.getClassNameId(Role.class);
    classPK=roleId;
  }
  validate(0,user.getCompanyId(),classNameId,name);
  Role role=rolePersistence.create(roleId);
  role.setCompanyId(user.getCompanyId());
  role.setClassNameId(classNameId);
  role.setClassPK(classPK);
  role.setName(name);
  role.setTitleMap(titleMap);
  role.setDescriptionMap(descriptionMap);
  role.setType(type);
  role.setSubtype(subType);
  role.setExpandoBridgeAttributes(serviceContext);
  rolePersistence.update(role);
  if (!user.isDefaultUser()) {
    resourceLocalService.addResources(user.getCompanyId(),0,userId,Role.class.getName(),role.getRoleId(),false,false,false);
    if (!ExportImportThreadLocal.isImportInProcess()) {
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(User.class);
      indexer.reindex(userId);
    }
  }
  return role;
}

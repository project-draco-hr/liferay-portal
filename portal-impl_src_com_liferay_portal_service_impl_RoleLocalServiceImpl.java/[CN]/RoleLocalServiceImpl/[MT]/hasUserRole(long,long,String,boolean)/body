{
  Role role=rolePersistence.findByC_N(companyId,name);
  if (role.getType() != RoleConstants.TYPE_REGULAR) {
    throw new IllegalArgumentException(name + " is not a regular role");
  }
  if (inherited) {
    ThreadLocalCache<Integer> countByR_UThreadLocalCache=ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST,_countByR_UCacheName);
    String cacheKey=String.valueOf(role.getRoleId()).concat(String.valueOf(userId));
    Integer countByR_U=countByR_UThreadLocalCache.get(cacheKey);
    if (countByR_U == null) {
      countByR_U=roleFinder.countByR_U(role.getRoleId(),userId);
      countByR_UThreadLocalCache.put(cacheKey,countByR_U);
    }
    if (countByR_U > 0) {
      return true;
    }
 else {
      return false;
    }
  }
 else {
    return userPersistence.containsRole(userId,role.getRoleId());
  }
}

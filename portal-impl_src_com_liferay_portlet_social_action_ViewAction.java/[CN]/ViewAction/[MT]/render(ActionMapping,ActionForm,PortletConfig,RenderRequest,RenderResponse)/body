{
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Map<String,List<SocialEquityActionMapping>> equityActionMapping=new HashMap<String,List<SocialEquityActionMapping>>();
  String[] equityModels=PortalUtil.getSocialEquityModels();
  for (  String model : equityModels) {
    long classNameId=PortalUtil.getClassNameId(model);
    List<SocialEquityActionMapping> mappings=PortalUtil.getSocialEquityActionMappings(model);
    List<SocialEquityActionMapping> mergedMappings=new ArrayList<SocialEquityActionMapping>();
    for (    SocialEquityActionMapping actionMapping : mappings) {
      SocialEquityActionMapping clone=actionMapping.clone();
      mergedMappings.add(clone);
      List<SocialEquitySetting> settings=SocialEquitySettingLocalServiceUtil.getEquitySettings(themeDisplay.getScopeGroupId(),classNameId,actionMapping.getActionKey());
      for (      SocialEquitySetting setting : settings) {
        if (setting.getType() == SocialEquitySettingConstants.TYPE_INFORMATION) {
          clone.setInformationValue(setting.getValue());
          clone.setInformationLifespan(setting.getValidity());
        }
 else {
          clone.setParticipationValue(setting.getValue());
          clone.setParticipationLifespan(setting.getValidity());
        }
      }
    }
    equityActionMapping.put(model,mergedMappings);
  }
  renderRequest.setAttribute("equity-action-mapping",equityActionMapping);
  return mapping.findForward("portlet.social_equity.view");
}

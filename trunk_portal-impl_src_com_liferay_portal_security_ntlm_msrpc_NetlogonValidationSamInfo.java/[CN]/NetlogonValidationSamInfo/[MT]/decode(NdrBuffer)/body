{
  _logonTime=ndrBuffer.dec_ndr_hyper();
  _logoffTime=ndrBuffer.dec_ndr_hyper();
  _kickoffTime=ndrBuffer.dec_ndr_hyper();
  _passwordLastSet=ndrBuffer.dec_ndr_hyper();
  _passwordCanChange=ndrBuffer.dec_ndr_hyper();
  _passwordMustChange=ndrBuffer.dec_ndr_hyper();
  _effectiveName.length=(short)ndrBuffer.dec_ndr_short();
  _effectiveName.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int effectiveNamePtr=ndrBuffer.dec_ndr_long();
  _fullName.length=(short)ndrBuffer.dec_ndr_short();
  _fullName.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int fullNamePtr=ndrBuffer.dec_ndr_long();
  _logonScript.length=(short)ndrBuffer.dec_ndr_short();
  _logonScript.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int logonScriptPtr=ndrBuffer.dec_ndr_long();
  _profilePath.length=(short)ndrBuffer.dec_ndr_short();
  _profilePath.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int profilePathPtr=ndrBuffer.dec_ndr_long();
  _homeDirectory.length=(short)ndrBuffer.dec_ndr_short();
  _homeDirectory.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int homeDirectoryPtr=ndrBuffer.dec_ndr_long();
  _homeDirectoryDrive.length=(short)ndrBuffer.dec_ndr_short();
  _homeDirectoryDrive.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int homeDirectoryDrivePtr=ndrBuffer.dec_ndr_long();
  _logonCount=(short)ndrBuffer.dec_ndr_short();
  _badPasswordCount=(short)ndrBuffer.dec_ndr_short();
  _userId=ndrBuffer.dec_ndr_long();
  _primaryGroupId=ndrBuffer.dec_ndr_long();
  _groupCount=ndrBuffer.dec_ndr_long();
  int groupIdsPtr=ndrBuffer.dec_ndr_long();
  _userFlags=ndrBuffer.dec_ndr_long();
  int userSessionKeyI=ndrBuffer.index;
  ndrBuffer.advance(16);
  _logonServer.length=(short)ndrBuffer.dec_ndr_short();
  _logonServer.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int logonServerPtr=ndrBuffer.dec_ndr_long();
  _logonDomainName.length=(short)ndrBuffer.dec_ndr_short();
  _logonDomainName.maximum_length=(short)ndrBuffer.dec_ndr_short();
  int logonDomainNamePtr=ndrBuffer.dec_ndr_long();
  int logonDomainPtr=ndrBuffer.dec_ndr_long();
  ndrBuffer.advance(40);
  if (effectiveNamePtr > 0) {
    decodeUnicodeString(ndrBuffer,_effectiveName);
  }
  if (fullNamePtr > 0) {
    decodeUnicodeString(ndrBuffer,_fullName);
  }
  if (logonScriptPtr > 0) {
    decodeUnicodeString(ndrBuffer,_logonScript);
  }
  if (profilePathPtr > 0) {
    decodeUnicodeString(ndrBuffer,_profilePath);
  }
  if (homeDirectoryPtr > 0) {
    decodeUnicodeString(ndrBuffer,_homeDirectory);
  }
  if (homeDirectoryDrivePtr > 0) {
    decodeUnicodeString(ndrBuffer,_homeDirectoryDrive);
  }
  if (groupIdsPtr > 0) {
    _groupIds=new GroupMembership[_groupCount];
    ndrBuffer=ndrBuffer.deferred;
    int groupIdsS=ndrBuffer.dec_ndr_long();
    int groupIdsI=ndrBuffer.index;
    ndrBuffer.advance(8 * groupIdsS);
    ndrBuffer=ndrBuffer.derive(groupIdsI);
    for (int i=0; i < groupIdsS; i++) {
      if (_groupIds[i] == null) {
        _groupIds[i]=new GroupMembership();
      }
      _groupIds[i].decode(ndrBuffer);
    }
  }
  ndrBuffer=ndrBuffer.derive(userSessionKeyI);
  for (int i=0; i < 16; i++) {
    _userSessionKey[i]=(byte)ndrBuffer.dec_ndr_small();
  }
  if (logonServerPtr > 0) {
    decodeUnicodeString(ndrBuffer,_logonServer);
  }
  if (logonDomainNamePtr > 0) {
    decodeUnicodeString(ndrBuffer,_logonDomainName);
  }
  if (logonDomainPtr > 0) {
    ndrBuffer=ndrBuffer.deferred;
    _logonDomain.decode(ndrBuffer);
  }
}

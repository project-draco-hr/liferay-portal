{
  if (_includeTargetPlatform) {
    indexURIs=new ArrayList<>(indexURIs);
    File targetPlatformDir=new File(PropsValues.MODULE_FRAMEWORK_BASE_DIR,Indexer.DIR_NAME_TARGET_PLATFORM);
    if (targetPlatformDir.exists() && targetPlatformDir.canRead()) {
      File[] indexFiles=targetPlatformDir.listFiles(new FilenameFilter(){
        @Override public boolean accept(        File dir,        String name){
          if (name.endsWith(".xml") || name.endsWith(".xml.gz")) {
            return true;
          }
          return false;
        }
      }
);
      for (      File indexFile : indexFiles) {
        indexURIs.add(indexFile.toURI());
      }
    }
  }
  try (ResolverValidator resolverValidator=new ResolverValidator()){
    List<String> messages=new ArrayList<>();
    ResourceBuilder resourceBuilder=new ResourceBuilder();
    resourceBuilder.addEE(EE.JavaSE_1_7);
    resourceBuilder.addManifest(OSGI_CORE.R6_0_0.getManifest());
    for (    URI indexURI : indexURIs) {
      resolverValidator.addRepository(indexURI);
    }
    resolverValidator.setSystem(resourceBuilder.build());
    List<Resolution> resolutions=resolverValidator.validate();
    resolverValidator.check();
    for (    Resolution resolution : resolutions) {
      String message=resolution.message;
      if (message == null) {
        continue;
      }
      if (message.startsWith(_MESSAGE_PREFIX)) {
        message=message.substring(_MESSAGE_PREFIX.length());
      }
      messages.add(message);
    }
    return messages;
  }
 }

{
  wikiNode=toUnwrappedModel(wikiNode);
  boolean isNew=wikiNode.isNew();
  WikiNodeModelImpl wikiNodeModelImpl=(WikiNodeModelImpl)wikiNode;
  if (Validator.isNull(wikiNode.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wikiNode.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (wikiNode.getCreateDate() == null)) {
    if (serviceContext == null) {
      wikiNode.setCreateDate(now);
    }
 else {
      wikiNode.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!wikiNodeModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      wikiNode.setModifiedDate(now);
    }
 else {
      wikiNode.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (wikiNode.isNew()) {
      session.save(wikiNode);
      wikiNode.setNew(false);
    }
 else {
      wikiNode=(WikiNode)session.merge(wikiNode);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WikiNodeModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{wikiNodeModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalUuid(),wikiNodeModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{wikiNodeModelImpl.getUuid(),wikiNodeModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{wikiNodeModelImpl.getGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{wikiNodeModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalGroupId(),wikiNodeModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S,args);
      args=new Object[]{wikiNodeModelImpl.getGroupId(),wikiNodeModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S,args);
    }
    if ((wikiNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiNodeModelImpl.getOriginalCompanyId(),wikiNodeModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S,args);
      args=new Object[]{wikiNodeModelImpl.getCompanyId(),wikiNodeModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S,args);
    }
  }
  EntityCacheUtil.putResult(WikiNodeModelImpl.ENTITY_CACHE_ENABLED,WikiNodeImpl.class,wikiNode.getPrimaryKey(),wikiNode,false);
  clearUniqueFindersCache(wikiNodeModelImpl);
  cacheUniqueFindersCache(wikiNodeModelImpl,isNew);
  wikiNode.resetOriginalValues();
  return wikiNode;
}

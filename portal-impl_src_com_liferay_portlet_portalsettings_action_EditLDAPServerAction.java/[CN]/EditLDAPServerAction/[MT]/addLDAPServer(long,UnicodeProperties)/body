{
  String defaultPostfix=LDAPSettingsUtil.getPropertyPostfix(0);
  Set<String> defaultKeys=new HashSet<String>(_KEYS.length);
  for (  String key : _KEYS) {
    defaultKeys.add(key + defaultPostfix);
  }
  long ldapServerId=CounterLocalServiceUtil.increment();
  String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
  Set<String> keysSet=properties.keySet();
  String[] keys=keysSet.toArray(new String[keysSet.size()]);
  for (  String key : keys) {
    if (defaultKeys.contains(key)) {
      String value=properties.remove(key);
      if (key.equals(PropsKeys.LDAP_SECURITY_CREDENTIALS + defaultPostfix) && value.equals(Portal.TEMP_OBFUSCATION_VALUE)) {
        value=PrefsPropsUtil.getString(PropsKeys.LDAP_SECURITY_CREDENTIALS);
      }
      properties.setProperty(key.replace(defaultPostfix,postfix),value);
    }
  }
  PortletPreferences portletPreferences=PrefsPropsUtil.getPreferences(companyId);
  String ldapServerIds=portletPreferences.getValue("ldap.server.ids",StringPool.BLANK);
  ldapServerIds=StringUtil.add(ldapServerIds,String.valueOf(ldapServerId));
  properties.setProperty("ldap.server.ids",ldapServerIds);
  return properties;
}

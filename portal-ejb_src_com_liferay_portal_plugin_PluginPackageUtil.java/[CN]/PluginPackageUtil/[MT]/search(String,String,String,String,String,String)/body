{
  _checkRepositories(repositoryURL);
  try {
    HitsImpl hits=new HitsImpl();
    BooleanQuery contextQuery=new BooleanQuery();
    LuceneUtil.addRequiredTerm(contextQuery,LuceneFields.PORTLET_ID,PluginPackageIndexer.PORTLET_ID);
    if (Validator.isNotNull(type)) {
      LuceneUtil.addRequiredTerm(contextQuery,"type",type);
    }
    BooleanQuery fullQuery=new BooleanQuery();
    fullQuery.add(contextQuery,BooleanClause.Occur.MUST);
    if (Validator.isNotNull(keywords)) {
      BooleanQuery searchQuery=new BooleanQuery();
      LuceneUtil.addTerm(searchQuery,LuceneFields.TITLE,keywords);
      LuceneUtil.addTerm(searchQuery,LuceneFields.CONTENT,keywords);
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    if (Validator.isNotNull(type)) {
      BooleanQuery searchQuery=new BooleanQuery();
      LuceneUtil.addExactTerm(searchQuery,"type",type);
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    if (Validator.isNotNull(tag)) {
      BooleanQuery searchQuery=new BooleanQuery();
      LuceneUtil.addExactTerm(searchQuery,"tag",tag);
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    if (Validator.isNotNull(repositoryURL)) {
      BooleanQuery searchQuery=new BooleanQuery();
      LuceneUtil.addExactTerm(searchQuery,"repositoryURL",repositoryURL);
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    if (Validator.isNotNull(license)) {
      BooleanQuery searchQuery=new BooleanQuery();
      LuceneUtil.addExactTerm(searchQuery,"license",license);
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    if (Validator.isNotNull(status) && !status.equals("all")) {
      BooleanQuery searchQuery=new BooleanQuery();
      if (status.equals("notInstalledOrNewVersion")) {
        LuceneUtil.addExactTerm(searchQuery,"status","notInstalled");
        LuceneUtil.addExactTerm(searchQuery,"status","newVersion");
      }
 else {
        LuceneUtil.addExactTerm(searchQuery,"status",status);
      }
      fullQuery.add(searchQuery,BooleanClause.Occur.MUST);
    }
    Searcher searcher=LuceneUtil.getSearcher(CompanyImpl.SYSTEM);
    hits.recordHits(searcher.search(fullQuery));
    return hits;
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
catch (  ParseException pe) {
    _log.error("Parsing keywords " + keywords,pe);
    return new HitsImpl();
  }
}

{
  ObjectInputStream ois=null;
  ObjectOutputStream oos=null;
  try {
    ois=new BackwardCompatibleObjectInputStream(jobData.getBinaryStream());
    Map jobDataMap=(Map)ois.readObject();
    Object messageObject=jobDataMap.get(SchedulerEngine.MESSAGE);
    if ((messageObject == null) || (messageObject instanceof String)) {
      return false;
    }
    Message message=null;
    if (messageObject instanceof Message) {
      message=(Message)messageObject;
    }
 else {
      message=new Message();
      message.setPayload(messageObject);
    }
    String jsonMessage=JSONFactoryUtil.serialize(message);
    jobDataMap.put(SchedulerEngine.MESSAGE,jsonMessage);
    oos=new ObjectOutputStream(jobData.setBinaryStream(1));
    oos.writeObject(jobDataMap);
    return true;
  }
  finally {
    if (ois != null) {
      ois.close();
    }
    if (oos != null) {
      oos.close();
    }
  }
}

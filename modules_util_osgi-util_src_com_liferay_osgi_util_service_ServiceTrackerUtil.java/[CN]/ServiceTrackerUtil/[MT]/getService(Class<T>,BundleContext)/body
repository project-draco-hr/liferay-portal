{
  ClassLoader classLoader=clazz.getClassLoader();
  Object serviceProxy=Proxy.newProxyInstance(classLoader,new Class[]{clazz},new InvocationHandler(){
    @Override public Object invoke(    Object object,    Method method,    Object[] arguments) throws Throwable {
      ServiceReference<T> serviceReference=bundleContext.getServiceReference(clazz);
      T service=bundleContext.getService(serviceReference);
      if (service == null) {
        throw new ServiceUnavailableException(clazz);
      }
      try {
        return method.invoke(service,arguments);
      }
 catch (      InvocationTargetException ite) {
        throw ite.getTargetException();
      }
    }
  }
);
  return (T)serviceProxy;
}

{
  KaleoInstanceToken newKaleoInstanceToken=addKaleoInstanceToken();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoInstanceToken.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoInstanceTokenId"));
  Object newKaleoInstanceTokenId=newKaleoInstanceToken.getKaleoInstanceTokenId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoInstanceTokenId",new Object[]{newKaleoInstanceTokenId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoInstanceTokenId=result.get(0);
  Assert.assertEquals(existingKaleoInstanceTokenId,newKaleoInstanceTokenId);
}

{
  PortletConfigImpl portletConfigImpl=(PortletConfigImpl)portletConfig;
  String portletId=portletConfigImpl.getPortletId();
  PortletPreferences prefs=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest,portletId);
  boolean requireCaptcha=GetterUtil.getBoolean(prefs.getValue("requireCaptcha",StringPool.BLANK));
  String successURL=GetterUtil.getString(prefs.getValue("successURL",StringPool.BLANK));
  boolean sendAsEmail=GetterUtil.getBoolean(prefs.getValue("sendAsEmail",StringPool.BLANK));
  boolean saveToDatabase=GetterUtil.getBoolean(prefs.getValue("saveToDatabase",StringPool.BLANK));
  String databaseTableName=GetterUtil.getString(prefs.getValue("databaseTableName",StringPool.BLANK));
  boolean saveToFile=GetterUtil.getBoolean(prefs.getValue("saveToFile",StringPool.BLANK));
  String fileName=GetterUtil.getString(prefs.getValue("fileName",StringPool.BLANK));
  boolean uploadToDL=GetterUtil.getBoolean(prefs.getValue("uploadToDL",StringPool.BLANK));
  boolean uploadToDisk=GetterUtil.getBoolean(prefs.getValue("uploadToDisk",StringPool.BLANK));
  String uploadDiskDir=GetterUtil.getString(prefs.getValue("uploadDiskDir",StringPool.BLANK));
  if (uploadToDisk)   uploadToDisk=Validator.isNotNull(uploadDiskDir);
  if (requireCaptcha) {
    try {
      CaptchaUtil.check(actionRequest);
    }
 catch (    CaptchaTextException cte) {
      SessionErrors.add(actionRequest,CaptchaTextException.class.getName());
      return;
    }
  }
  List<String> fieldValues=new ArrayList<String>();
  UploadPortletRequest uploadReq=null;
  for (int i=1; i <= WebFormUtil.MAX_FIELDS; i++) {
    String fieldType=prefs.getValue("fieldType" + i,null);
    if ("file".equals(fieldType)) {
      if (uploadReq == null)       uploadReq=PortalUtil.getUploadPortletRequest(actionRequest);
      String uploadFileName=uploadReq.getFileName("field" + i);
      if (Validator.isNotNull(uploadFileName)) {
        uploadFileName=PwdGenerator.getPassword(4) + "_" + uploadFileName;
      }
      fieldValues.add(uploadFileName);
    }
 else {
      fieldValues.add(actionRequest.getParameter("field" + i));
    }
  }
  Set<String> validationErrors=null;
  try {
    validationErrors=validate(fieldValues,prefs);
  }
 catch (  Exception e) {
    actionRequest.setAttribute("validationScriptError",e.getMessage().trim());
    setForward(actionRequest,"portlet.web_form.error");
    return;
  }
  if (validationErrors.isEmpty()) {
    boolean uploadSuccess=true;
    boolean emailSuccess=true;
    boolean databaseSuccess=true;
    boolean fileSuccess=true;
    if (uploadReq != null) {
      try {
        for (int i=1; i <= fieldValues.size(); i++) {
          String fieldType=prefs.getValue("fieldType" + i,null);
          if ("file".equals(fieldType)) {
            File uploadFile=uploadReq.getFile("field" + i);
            String uploadFileName=fieldValues.get(i - 1);
            if (uploadFile != null && Validator.isNotNull(uploadFileName)) {
              if (uploadToDL || uploadToDisk) {
                byte[] bytes=FileUtil.getBytes(uploadFile);
                if (uploadToDL) {
                  WebFormLocalServiceUtil.storeUploadedFile(PortalUtil.getCompany(actionRequest).getCompanyId(),portletId,uploadFileName,bytes);
                }
                if (uploadToDisk) {
                  DLLocalServiceUtil.validate(uploadFileName,uploadFile);
                  FileUtil.write(new File(uploadDiskDir + "/" + uploadFileName),bytes);
                }
              }
 else {
                throw new Exception();
              }
            }
          }
        }
      }
 catch (      FileNameException e) {
        SessionErrors.add(actionRequest,"uploadFileNameIllegal");
        uploadSuccess=false;
      }
catch (      FileSizeException e) {
        SessionErrors.add(actionRequest,"uploadFileTooLarge");
        uploadSuccess=false;
      }
catch (      Exception e) {
        SessionErrors.add(actionRequest,"uploadFailed");
        uploadSuccess=false;
      }
    }
    if (uploadSuccess) {
      if (sendAsEmail) {
        emailSuccess=sendEmail(fieldValues,prefs);
      }
      if (saveToDatabase) {
        if (Validator.isNull(databaseTableName)) {
          databaseTableName=WebFormUtil.getNewDatabaseTableName(portletId);
          prefs.setValue("databaseTableName",databaseTableName);
          prefs.store();
        }
        databaseSuccess=saveDatabase(fieldValues,prefs,databaseTableName);
      }
      if (saveToFile) {
        fileSuccess=saveFile(fieldValues,prefs,fileName);
      }
    }
    if (uploadSuccess && emailSuccess && databaseSuccess&& fileSuccess) {
      SessionMessages.add(actionRequest,"success");
    }
 else {
      SessionErrors.add(actionRequest,"error");
    }
  }
 else {
    for (    String badField : validationErrors) {
      SessionErrors.add(actionRequest,"error" + badField);
    }
  }
  if (SessionErrors.isEmpty(actionRequest) && Validator.isNotNull(successURL)) {
    actionResponse.sendRedirect(successURL);
  }
 else {
    sendRedirect(actionRequest,actionResponse);
  }
}

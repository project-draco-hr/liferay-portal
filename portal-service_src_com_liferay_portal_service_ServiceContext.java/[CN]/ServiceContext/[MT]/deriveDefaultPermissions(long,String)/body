{
  long siteGroupId=PortalUtil.getSiteGroupId(repositoryId);
  Group siteGroup=GroupLocalServiceUtil.getGroup(siteGroupId);
  Role defaultGroupRole=RoleLocalServiceUtil.getDefaultGroupRole(siteGroupId);
  List<String> groupPermissions=new ArrayList<String>();
  List<String> guestPermissions=new ArrayList<String>();
  String[] roleNames={RoleConstants.GUEST,defaultGroupRole.getName()};
  List<String> supportedActions=ResourceActionsUtil.getModelResourceActions(modelName);
  List<String> groupDefaultActions=ResourceActionsUtil.getModelResourceGroupDefaultActions(modelName);
  List<String> guestDefaultActions=ResourceActionsUtil.getModelResourceGuestDefaultActions(modelName);
  List<String> guestUnsupportedActions=ResourceActionsUtil.getModelResourceGuestUnsupportedActions(modelName);
  for (  String roleName : roleNames) {
    for (    String action : supportedActions) {
      if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action)&& siteGroup.hasPublicLayouts()) {
        guestPermissions.add(action);
      }
 else       if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) {
        groupPermissions.add(action);
      }
    }
  }
  setGroupPermissions(groupPermissions.toArray(new String[groupPermissions.size()]));
  setGuestPermissions(guestPermissions.toArray(new String[guestPermissions.size()]));
}

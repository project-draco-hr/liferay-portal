{
  DDMExpressionImpl<Boolean> expression=new DDMExpressionImpl<>("(-3 < Var1) || (not equals(Var2,sum(Var3,Var4)))",Boolean.class);
  Expression expressionModel=expression.getModel();
  Assert.assertEquals(OrExpression.class,expressionModel.getClass());
  OrExpression orExpression=(OrExpression)expressionModel;
  Expression leftOperand=orExpression.getLeftOperand();
  Expression rightOperand=orExpression.getRightOperand();
  Assert.assertEquals(ComparisonExpression.class,leftOperand.getClass());
  Assert.assertEquals(NotExpression.class,rightOperand.getClass());
  ComparisonExpression comparisonExpression=(ComparisonExpression)leftOperand;
  Expression leftOperand2=comparisonExpression.getLeftOperand();
  Expression rightOperand2=comparisonExpression.getRightOperand();
  Assert.assertEquals("<",comparisonExpression.getOperator());
  Assert.assertEquals(MinusExpression.class,leftOperand2.getClass());
  Assert.assertEquals(Term.class,rightOperand2.getClass());
  MinusExpression minusExpression=(MinusExpression)leftOperand2;
  Expression minusOperand=minusExpression.getOperand();
  Assert.assertEquals(Term.class,minusOperand.getClass());
  Term term=(Term)minusOperand;
  Assert.assertEquals("3",term.getValue());
  term=(Term)rightOperand2;
  Assert.assertEquals("Var1",term.getValue());
  NotExpression notExpression=(NotExpression)rightOperand;
  Expression notOperand=notExpression.getOperand();
  Assert.assertEquals(FunctionCallExpression.class,notOperand.getClass());
  FunctionCallExpression functionCallExpression=(FunctionCallExpression)notOperand;
  Assert.assertEquals("equals",functionCallExpression.getFunctionName());
  Assert.assertEquals(2,functionCallExpression.getArity());
  List<Expression> parameters=functionCallExpression.getParameters();
  Assert.assertEquals(2,parameters.size());
  Expression parameter1=parameters.get(0);
  Assert.assertEquals(Term.class,parameter1.getClass());
  term=(Term)parameter1;
  Assert.assertEquals("Var2",term.getValue());
  Expression parameter2=parameters.get(1);
  Assert.assertEquals(FunctionCallExpression.class,parameter2.getClass());
  FunctionCallExpression functionCallExpression2=(FunctionCallExpression)parameter2;
  Assert.assertEquals("sum",functionCallExpression2.getFunctionName());
  Assert.assertEquals(2,functionCallExpression2.getArity());
  List<Expression> parameters2=functionCallExpression2.getParameters();
  Assert.assertEquals(2,parameters2.size());
  Expression parameter3=parameters2.get(0);
  Assert.assertEquals(Term.class,parameter3.getClass());
  term=(Term)parameter3;
  Assert.assertEquals("Var3",term.getValue());
  Expression parameter4=parameters2.get(1);
  Assert.assertEquals(Term.class,parameter4.getClass());
  term=(Term)parameter4;
  Assert.assertEquals("Var4",term.getValue());
}

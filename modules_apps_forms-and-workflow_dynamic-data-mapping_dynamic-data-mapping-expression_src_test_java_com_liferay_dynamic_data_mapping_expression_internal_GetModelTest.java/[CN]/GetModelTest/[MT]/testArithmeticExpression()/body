{
  DDMExpressionImpl<Double> expression=new DDMExpressionImpl<>("a + b * c - d",Double.class);
  Expression model=expression.getModel();
  Assert.assertEquals(ArithmeticExpression.class,model.getClass());
  ArithmeticExpression arithmeticExpression=(ArithmeticExpression)model;
  Expression leftOperand=arithmeticExpression.getLeftOperand();
  Expression rightOperand=arithmeticExpression.getRightOperand();
  Assert.assertEquals(ArithmeticExpression.class,leftOperand.getClass());
  Assert.assertEquals(Term.class,rightOperand.getClass());
  Assert.assertEquals("-",arithmeticExpression.getOperator());
  Term term=(Term)rightOperand;
  Assert.assertEquals("d",term.getValue());
  ArithmeticExpression arithmeticExpression2=(ArithmeticExpression)leftOperand;
  Expression leftOperand2=arithmeticExpression2.getLeftOperand();
  Expression rightOperand2=arithmeticExpression2.getRightOperand();
  Assert.assertEquals(Term.class,leftOperand2.getClass());
  Assert.assertEquals(ArithmeticExpression.class,rightOperand2.getClass());
  Assert.assertEquals("+",arithmeticExpression2.getOperator());
  term=(Term)leftOperand2;
  Assert.assertEquals("a",term.getValue());
  ArithmeticExpression arithmeticExpression3=(ArithmeticExpression)rightOperand2;
  Expression leftOperand3=arithmeticExpression3.getLeftOperand();
  Expression rightOperand3=arithmeticExpression3.getRightOperand();
  Assert.assertEquals(Term.class,leftOperand3.getClass());
  Assert.assertEquals(Term.class,rightOperand3.getClass());
  Assert.assertEquals("*",arithmeticExpression3.getOperator());
  term=(Term)leftOperand3;
  Assert.assertEquals("b",term.getValue());
  term=(Term)rightOperand3;
  Assert.assertEquals("c",term.getValue());
}

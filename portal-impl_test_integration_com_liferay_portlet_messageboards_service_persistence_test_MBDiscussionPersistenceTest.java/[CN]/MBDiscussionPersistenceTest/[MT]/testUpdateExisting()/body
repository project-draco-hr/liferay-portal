{
  long pk=RandomTestUtil.nextLong();
  MBDiscussion newMBDiscussion=_persistence.create(pk);
  newMBDiscussion.setUuid(RandomTestUtil.randomString());
  newMBDiscussion.setGroupId(RandomTestUtil.nextLong());
  newMBDiscussion.setCompanyId(RandomTestUtil.nextLong());
  newMBDiscussion.setUserId(RandomTestUtil.nextLong());
  newMBDiscussion.setUserName(RandomTestUtil.randomString());
  newMBDiscussion.setCreateDate(RandomTestUtil.nextDate());
  newMBDiscussion.setModifiedDate(RandomTestUtil.nextDate());
  newMBDiscussion.setClassNameId(RandomTestUtil.nextLong());
  newMBDiscussion.setClassPK(RandomTestUtil.nextLong());
  newMBDiscussion.setThreadId(RandomTestUtil.nextLong());
  newMBDiscussion.setLastPublishDate(RandomTestUtil.nextDate());
  _mbDiscussions.add(_persistence.update(newMBDiscussion));
  MBDiscussion existingMBDiscussion=_persistence.findByPrimaryKey(newMBDiscussion.getPrimaryKey());
  Assert.assertEquals(existingMBDiscussion.getUuid(),newMBDiscussion.getUuid());
  Assert.assertEquals(existingMBDiscussion.getDiscussionId(),newMBDiscussion.getDiscussionId());
  Assert.assertEquals(existingMBDiscussion.getGroupId(),newMBDiscussion.getGroupId());
  Assert.assertEquals(existingMBDiscussion.getCompanyId(),newMBDiscussion.getCompanyId());
  Assert.assertEquals(existingMBDiscussion.getUserId(),newMBDiscussion.getUserId());
  Assert.assertEquals(existingMBDiscussion.getUserName(),newMBDiscussion.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBDiscussion.getCreateDate()),Time.getShortTimestamp(newMBDiscussion.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMBDiscussion.getModifiedDate()),Time.getShortTimestamp(newMBDiscussion.getModifiedDate()));
  Assert.assertEquals(existingMBDiscussion.getClassNameId(),newMBDiscussion.getClassNameId());
  Assert.assertEquals(existingMBDiscussion.getClassPK(),newMBDiscussion.getClassPK());
  Assert.assertEquals(existingMBDiscussion.getThreadId(),newMBDiscussion.getThreadId());
  Assert.assertEquals(Time.getShortTimestamp(existingMBDiscussion.getLastPublishDate()),Time.getShortTimestamp(newMBDiscussion.getLastPublishDate()));
}

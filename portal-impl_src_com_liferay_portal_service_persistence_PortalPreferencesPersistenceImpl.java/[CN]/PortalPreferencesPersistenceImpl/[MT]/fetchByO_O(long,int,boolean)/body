{
  Object[] finderArgs=new Object[]{ownerId,ownerType};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_O_O,finderArgs,this);
  }
  if (result instanceof PortalPreferences) {
    PortalPreferences portalPreferences=(PortalPreferences)result;
    if ((ownerId != portalPreferences.getOwnerId()) || (ownerType != portalPreferences.getOwnerType())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_PORTALPREFERENCES_WHERE);
    query.append(_FINDER_COLUMN_O_O_OWNERID_2);
    query.append(_FINDER_COLUMN_O_O_OWNERTYPE_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(ownerId);
      qPos.add(ownerType);
      List<PortalPreferences> list=q.list();
      result=list;
      PortalPreferences portalPreferences=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_O_O,finderArgs,list);
      }
 else {
        portalPreferences=list.get(0);
        cacheResult(portalPreferences);
        if ((portalPreferences.getOwnerId() != ownerId) || (portalPreferences.getOwnerType() != ownerType)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_O_O,finderArgs,portalPreferences);
        }
      }
      return portalPreferences;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_O_O,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (PortalPreferences)result;
    }
  }
}

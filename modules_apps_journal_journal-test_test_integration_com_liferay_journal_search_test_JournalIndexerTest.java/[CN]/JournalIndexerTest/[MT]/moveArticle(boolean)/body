{
  SearchContext searchContext1=SearchContextTestUtil.getSearchContext(_group.getGroupId());
  searchContext1.setKeywords("Architectural");
  JournalFolder folder1=JournalTestUtil.addFolder(_group.getGroupId(),RandomTestUtil.randomString());
  searchContext1.setFolderIds(new long[]{folder1.getFolderId()});
  assertSearchCount(0,_group.getGroupId(),searchContext1);
  SearchContext searchContext2=SearchContextTestUtil.getSearchContext(_group.getGroupId());
  searchContext2.setKeywords("Architectural");
  JournalFolder folder2=JournalTestUtil.addFolder(_group.getGroupId(),RandomTestUtil.randomString());
  searchContext2.setFolderIds(new long[]{folder2.getFolderId()});
  assertSearchCount(0,_group.getGroupId(),searchContext2);
  JournalArticle article=JournalTestUtil.addArticleWithWorkflow(_group.getGroupId(),folder1.getFolderId(),"title","Liferay Architectural Approach",true);
  assertSearchCount(1,_group.getGroupId(),searchContext1);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId());
  if (moveToTrash) {
    JournalFolderLocalServiceUtil.moveFolderToTrash(TestPropsValues.getUserId(),folder1.getFolderId());
    assertSearchCount(0,_group.getGroupId(),searchContext1);
    article=JournalArticleLocalServiceUtil.getArticle(article.getId());
    JournalArticleLocalServiceUtil.moveArticleFromTrash(TestPropsValues.getUserId(),_group.getGroupId(),article,folder2.getFolderId(),serviceContext);
  }
 else {
    JournalArticleLocalServiceUtil.moveArticle(_group.getGroupId(),article.getArticleId(),folder2.getFolderId(),serviceContext);
  }
  assertSearchCount(0,_group.getGroupId(),searchContext1);
  assertSearchCount(1,_group.getGroupId(),searchContext2);
}

{
  kaleoLog=toUnwrappedModel(kaleoLog);
  boolean isNew=kaleoLog.isNew();
  KaleoLogModelImpl kaleoLogModelImpl=(KaleoLogModelImpl)kaleoLog;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoLog.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoLog.setCreateDate(now);
    }
 else {
      kaleoLog.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoLogModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoLog.setModifiedDate(now);
    }
 else {
      kaleoLog.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoLog.isNew()) {
      session.save(kaleoLog);
      kaleoLog.setNew(false);
    }
 else {
      session.merge(kaleoLog);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoLogModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{kaleoLogModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalKaleoDefinitionId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
      args=new Object[]{kaleoLogModelImpl.getKaleoDefinitionId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
    }
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalKaleoInstanceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
      args=new Object[]{kaleoLogModelImpl.getKaleoInstanceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
    }
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOTASKINSTANCETOKENID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalKaleoTaskInstanceTokenId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOTASKINSTANCETOKENID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOTASKINSTANCETOKENID,args);
      args=new Object[]{kaleoLogModelImpl.getKaleoTaskInstanceTokenId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOTASKINSTANCETOKENID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOTASKINSTANCETOKENID,args);
    }
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalKaleoInstanceTokenId(),kaleoLogModelImpl.getOriginalType()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_T,args);
      args=new Object[]{kaleoLogModelImpl.getKaleoInstanceTokenId(),kaleoLogModelImpl.getType()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_T,args);
    }
    if ((kaleoLogModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_KITI_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoLogModelImpl.getOriginalKaleoClassName(),kaleoLogModelImpl.getOriginalKaleoClassPK(),kaleoLogModelImpl.getOriginalKaleoInstanceTokenId(),kaleoLogModelImpl.getOriginalType()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK_KITI_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_KITI_T,args);
      args=new Object[]{kaleoLogModelImpl.getKaleoClassName(),kaleoLogModelImpl.getKaleoClassPK(),kaleoLogModelImpl.getKaleoInstanceTokenId(),kaleoLogModelImpl.getType()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK_KITI_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_KITI_T,args);
    }
  }
  EntityCacheUtil.putResult(KaleoLogModelImpl.ENTITY_CACHE_ENABLED,KaleoLogImpl.class,kaleoLog.getPrimaryKey(),kaleoLog,false);
  kaleoLog.resetOriginalValues();
  return kaleoLog;
}

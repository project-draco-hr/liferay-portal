{
  long pk=RandomTestUtil.nextLong();
  LayoutRevision newLayoutRevision=_persistence.create(pk);
  newLayoutRevision.setMvccVersion(RandomTestUtil.nextLong());
  newLayoutRevision.setGroupId(RandomTestUtil.nextLong());
  newLayoutRevision.setCompanyId(RandomTestUtil.nextLong());
  newLayoutRevision.setUserId(RandomTestUtil.nextLong());
  newLayoutRevision.setUserName(RandomTestUtil.randomString());
  newLayoutRevision.setCreateDate(RandomTestUtil.nextDate());
  newLayoutRevision.setModifiedDate(RandomTestUtil.nextDate());
  newLayoutRevision.setLayoutSetBranchId(RandomTestUtil.nextLong());
  newLayoutRevision.setLayoutBranchId(RandomTestUtil.nextLong());
  newLayoutRevision.setParentLayoutRevisionId(RandomTestUtil.nextLong());
  newLayoutRevision.setHead(RandomTestUtil.randomBoolean());
  newLayoutRevision.setMajor(RandomTestUtil.randomBoolean());
  newLayoutRevision.setPlid(RandomTestUtil.nextLong());
  newLayoutRevision.setPrivateLayout(RandomTestUtil.randomBoolean());
  newLayoutRevision.setName(RandomTestUtil.randomString());
  newLayoutRevision.setTitle(RandomTestUtil.randomString());
  newLayoutRevision.setDescription(RandomTestUtil.randomString());
  newLayoutRevision.setKeywords(RandomTestUtil.randomString());
  newLayoutRevision.setRobots(RandomTestUtil.randomString());
  newLayoutRevision.setTypeSettings(RandomTestUtil.randomString());
  newLayoutRevision.setIconImageId(RandomTestUtil.nextLong());
  newLayoutRevision.setThemeId(RandomTestUtil.randomString());
  newLayoutRevision.setColorSchemeId(RandomTestUtil.randomString());
  newLayoutRevision.setWapThemeId(RandomTestUtil.randomString());
  newLayoutRevision.setWapColorSchemeId(RandomTestUtil.randomString());
  newLayoutRevision.setCss(RandomTestUtil.randomString());
  newLayoutRevision.setStatus(RandomTestUtil.nextInt());
  newLayoutRevision.setStatusByUserId(RandomTestUtil.nextLong());
  newLayoutRevision.setStatusByUserName(RandomTestUtil.randomString());
  newLayoutRevision.setStatusDate(RandomTestUtil.nextDate());
  _persistence.update(newLayoutRevision);
  LayoutRevision existingLayoutRevision=_persistence.findByPrimaryKey(newLayoutRevision.getPrimaryKey());
  Assert.assertEquals(existingLayoutRevision.getMvccVersion(),newLayoutRevision.getMvccVersion());
  Assert.assertEquals(existingLayoutRevision.getLayoutRevisionId(),newLayoutRevision.getLayoutRevisionId());
  Assert.assertEquals(existingLayoutRevision.getGroupId(),newLayoutRevision.getGroupId());
  Assert.assertEquals(existingLayoutRevision.getCompanyId(),newLayoutRevision.getCompanyId());
  Assert.assertEquals(existingLayoutRevision.getUserId(),newLayoutRevision.getUserId());
  Assert.assertEquals(existingLayoutRevision.getUserName(),newLayoutRevision.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getCreateDate()),Time.getShortTimestamp(newLayoutRevision.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getModifiedDate()),Time.getShortTimestamp(newLayoutRevision.getModifiedDate()));
  Assert.assertEquals(existingLayoutRevision.getLayoutSetBranchId(),newLayoutRevision.getLayoutSetBranchId());
  Assert.assertEquals(existingLayoutRevision.getLayoutBranchId(),newLayoutRevision.getLayoutBranchId());
  Assert.assertEquals(existingLayoutRevision.getParentLayoutRevisionId(),newLayoutRevision.getParentLayoutRevisionId());
  Assert.assertEquals(existingLayoutRevision.getHead(),newLayoutRevision.getHead());
  Assert.assertEquals(existingLayoutRevision.getMajor(),newLayoutRevision.getMajor());
  Assert.assertEquals(existingLayoutRevision.getPlid(),newLayoutRevision.getPlid());
  Assert.assertEquals(existingLayoutRevision.getPrivateLayout(),newLayoutRevision.getPrivateLayout());
  Assert.assertEquals(existingLayoutRevision.getName(),newLayoutRevision.getName());
  Assert.assertEquals(existingLayoutRevision.getTitle(),newLayoutRevision.getTitle());
  Assert.assertEquals(existingLayoutRevision.getDescription(),newLayoutRevision.getDescription());
  Assert.assertEquals(existingLayoutRevision.getKeywords(),newLayoutRevision.getKeywords());
  Assert.assertEquals(existingLayoutRevision.getRobots(),newLayoutRevision.getRobots());
  Assert.assertEquals(existingLayoutRevision.getTypeSettings(),newLayoutRevision.getTypeSettings());
  Assert.assertEquals(existingLayoutRevision.getIconImageId(),newLayoutRevision.getIconImageId());
  Assert.assertEquals(existingLayoutRevision.getThemeId(),newLayoutRevision.getThemeId());
  Assert.assertEquals(existingLayoutRevision.getColorSchemeId(),newLayoutRevision.getColorSchemeId());
  Assert.assertEquals(existingLayoutRevision.getWapThemeId(),newLayoutRevision.getWapThemeId());
  Assert.assertEquals(existingLayoutRevision.getWapColorSchemeId(),newLayoutRevision.getWapColorSchemeId());
  Assert.assertEquals(existingLayoutRevision.getCss(),newLayoutRevision.getCss());
  Assert.assertEquals(existingLayoutRevision.getStatus(),newLayoutRevision.getStatus());
  Assert.assertEquals(existingLayoutRevision.getStatusByUserId(),newLayoutRevision.getStatusByUserId());
  Assert.assertEquals(existingLayoutRevision.getStatusByUserName(),newLayoutRevision.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getStatusDate()),Time.getShortTimestamp(newLayoutRevision.getStatusDate()));
}

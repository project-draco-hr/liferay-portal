{
  long pk=ServiceTestUtil.nextLong();
  LayoutRevision newLayoutRevision=_persistence.create(pk);
  newLayoutRevision.setGroupId(ServiceTestUtil.nextLong());
  newLayoutRevision.setCompanyId(ServiceTestUtil.nextLong());
  newLayoutRevision.setUserId(ServiceTestUtil.nextLong());
  newLayoutRevision.setUserName(ServiceTestUtil.randomString());
  newLayoutRevision.setCreateDate(ServiceTestUtil.nextDate());
  newLayoutRevision.setModifiedDate(ServiceTestUtil.nextDate());
  newLayoutRevision.setLayoutSetBranchId(ServiceTestUtil.nextLong());
  newLayoutRevision.setLayoutBranchId(ServiceTestUtil.nextLong());
  newLayoutRevision.setParentLayoutRevisionId(ServiceTestUtil.nextLong());
  newLayoutRevision.setHead(ServiceTestUtil.randomBoolean());
  newLayoutRevision.setMajor(ServiceTestUtil.randomBoolean());
  newLayoutRevision.setPlid(ServiceTestUtil.nextLong());
  newLayoutRevision.setPrivateLayout(ServiceTestUtil.randomBoolean());
  newLayoutRevision.setName(ServiceTestUtil.randomString());
  newLayoutRevision.setTitle(ServiceTestUtil.randomString());
  newLayoutRevision.setDescription(ServiceTestUtil.randomString());
  newLayoutRevision.setKeywords(ServiceTestUtil.randomString());
  newLayoutRevision.setRobots(ServiceTestUtil.randomString());
  newLayoutRevision.setTypeSettings(ServiceTestUtil.randomString());
  newLayoutRevision.setIconImage(ServiceTestUtil.randomBoolean());
  newLayoutRevision.setIconImageId(ServiceTestUtil.nextLong());
  newLayoutRevision.setThemeId(ServiceTestUtil.randomString());
  newLayoutRevision.setColorSchemeId(ServiceTestUtil.randomString());
  newLayoutRevision.setWapThemeId(ServiceTestUtil.randomString());
  newLayoutRevision.setWapColorSchemeId(ServiceTestUtil.randomString());
  newLayoutRevision.setCss(ServiceTestUtil.randomString());
  newLayoutRevision.setStatus(ServiceTestUtil.nextInt());
  newLayoutRevision.setStatusByUserId(ServiceTestUtil.nextLong());
  newLayoutRevision.setStatusByUserName(ServiceTestUtil.randomString());
  newLayoutRevision.setStatusDate(ServiceTestUtil.nextDate());
  _persistence.update(newLayoutRevision);
  LayoutRevision existingLayoutRevision=_persistence.findByPrimaryKey(newLayoutRevision.getPrimaryKey());
  Assert.assertEquals(existingLayoutRevision.getLayoutRevisionId(),newLayoutRevision.getLayoutRevisionId());
  Assert.assertEquals(existingLayoutRevision.getGroupId(),newLayoutRevision.getGroupId());
  Assert.assertEquals(existingLayoutRevision.getCompanyId(),newLayoutRevision.getCompanyId());
  Assert.assertEquals(existingLayoutRevision.getUserId(),newLayoutRevision.getUserId());
  Assert.assertEquals(existingLayoutRevision.getUserName(),newLayoutRevision.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getCreateDate()),Time.getShortTimestamp(newLayoutRevision.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getModifiedDate()),Time.getShortTimestamp(newLayoutRevision.getModifiedDate()));
  Assert.assertEquals(existingLayoutRevision.getLayoutSetBranchId(),newLayoutRevision.getLayoutSetBranchId());
  Assert.assertEquals(existingLayoutRevision.getLayoutBranchId(),newLayoutRevision.getLayoutBranchId());
  Assert.assertEquals(existingLayoutRevision.getParentLayoutRevisionId(),newLayoutRevision.getParentLayoutRevisionId());
  Assert.assertEquals(existingLayoutRevision.getHead(),newLayoutRevision.getHead());
  Assert.assertEquals(existingLayoutRevision.getMajor(),newLayoutRevision.getMajor());
  Assert.assertEquals(existingLayoutRevision.getPlid(),newLayoutRevision.getPlid());
  Assert.assertEquals(existingLayoutRevision.getPrivateLayout(),newLayoutRevision.getPrivateLayout());
  Assert.assertEquals(existingLayoutRevision.getName(),newLayoutRevision.getName());
  Assert.assertEquals(existingLayoutRevision.getTitle(),newLayoutRevision.getTitle());
  Assert.assertEquals(existingLayoutRevision.getDescription(),newLayoutRevision.getDescription());
  Assert.assertEquals(existingLayoutRevision.getKeywords(),newLayoutRevision.getKeywords());
  Assert.assertEquals(existingLayoutRevision.getRobots(),newLayoutRevision.getRobots());
  Assert.assertEquals(existingLayoutRevision.getTypeSettings(),newLayoutRevision.getTypeSettings());
  Assert.assertEquals(existingLayoutRevision.getIconImage(),newLayoutRevision.getIconImage());
  Assert.assertEquals(existingLayoutRevision.getIconImageId(),newLayoutRevision.getIconImageId());
  Assert.assertEquals(existingLayoutRevision.getThemeId(),newLayoutRevision.getThemeId());
  Assert.assertEquals(existingLayoutRevision.getColorSchemeId(),newLayoutRevision.getColorSchemeId());
  Assert.assertEquals(existingLayoutRevision.getWapThemeId(),newLayoutRevision.getWapThemeId());
  Assert.assertEquals(existingLayoutRevision.getWapColorSchemeId(),newLayoutRevision.getWapColorSchemeId());
  Assert.assertEquals(existingLayoutRevision.getCss(),newLayoutRevision.getCss());
  Assert.assertEquals(existingLayoutRevision.getStatus(),newLayoutRevision.getStatus());
  Assert.assertEquals(existingLayoutRevision.getStatusByUserId(),newLayoutRevision.getStatusByUserId());
  Assert.assertEquals(existingLayoutRevision.getStatusByUserName(),newLayoutRevision.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingLayoutRevision.getStatusDate()),Time.getShortTimestamp(newLayoutRevision.getStatusDate()));
}

{
  long pk=ServiceTestUtil.nextLong();
  LayoutRevision layoutRevision=_persistence.create(pk);
  layoutRevision.setMvccVersion(ServiceTestUtil.nextLong());
  layoutRevision.setGroupId(ServiceTestUtil.nextLong());
  layoutRevision.setCompanyId(ServiceTestUtil.nextLong());
  layoutRevision.setUserId(ServiceTestUtil.nextLong());
  layoutRevision.setUserName(ServiceTestUtil.randomString());
  layoutRevision.setCreateDate(ServiceTestUtil.nextDate());
  layoutRevision.setModifiedDate(ServiceTestUtil.nextDate());
  layoutRevision.setLayoutSetBranchId(ServiceTestUtil.nextLong());
  layoutRevision.setLayoutBranchId(ServiceTestUtil.nextLong());
  layoutRevision.setParentLayoutRevisionId(ServiceTestUtil.nextLong());
  layoutRevision.setHead(ServiceTestUtil.randomBoolean());
  layoutRevision.setMajor(ServiceTestUtil.randomBoolean());
  layoutRevision.setPlid(ServiceTestUtil.nextLong());
  layoutRevision.setPrivateLayout(ServiceTestUtil.randomBoolean());
  layoutRevision.setName(ServiceTestUtil.randomString());
  layoutRevision.setTitle(ServiceTestUtil.randomString());
  layoutRevision.setDescription(ServiceTestUtil.randomString());
  layoutRevision.setKeywords(ServiceTestUtil.randomString());
  layoutRevision.setRobots(ServiceTestUtil.randomString());
  layoutRevision.setTypeSettings(ServiceTestUtil.randomString());
  layoutRevision.setIconImageId(ServiceTestUtil.nextLong());
  layoutRevision.setThemeId(ServiceTestUtil.randomString());
  layoutRevision.setColorSchemeId(ServiceTestUtil.randomString());
  layoutRevision.setWapThemeId(ServiceTestUtil.randomString());
  layoutRevision.setWapColorSchemeId(ServiceTestUtil.randomString());
  layoutRevision.setCss(ServiceTestUtil.randomString());
  layoutRevision.setStatus(ServiceTestUtil.nextInt());
  layoutRevision.setStatusByUserId(ServiceTestUtil.nextLong());
  layoutRevision.setStatusByUserName(ServiceTestUtil.randomString());
  layoutRevision.setStatusDate(ServiceTestUtil.nextDate());
  _persistence.update(layoutRevision);
  return layoutRevision;
}

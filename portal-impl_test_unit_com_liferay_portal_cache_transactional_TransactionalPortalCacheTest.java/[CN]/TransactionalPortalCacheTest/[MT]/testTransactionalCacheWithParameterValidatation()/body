{
  TransactionalPortalCacheHelper.begin();
  try {
    _transactionalPortalCache.get(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Key is null",npe.getMessage());
  }
  try {
    _transactionalPortalCache.put(null,null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Key is null",npe.getMessage());
  }
  try {
    _transactionalPortalCache.put(_KEY_1,null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Value is null",npe.getMessage());
  }
  try {
    _transactionalPortalCache.put(_KEY_1,_VALUE_1,-1);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
    Assert.assertEquals("Time to live is negative",iae.getMessage());
  }
  try {
    _transactionalPortalCache.remove(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Key is null",npe.getMessage());
  }
}

{
  SyncFile parentSyncFile=SyncFileService.fetchSyncFile(targetSyncFile.getRepositoryId(),getSyncAccountId(),targetSyncFile.getParentFolderId());
  String event=targetSyncFile.getEvent();
  if (parentSyncFile == null) {
    if (event.equals(SyncFile.EVENT_DELETE)) {
      SyncFile sourceSyncFile=SyncFileService.fetchSyncFile(targetSyncFile.getRepositoryId(),getSyncAccountId(),targetSyncFile.getTypePK());
      if (sourceSyncFile == null) {
        return;
      }
      try {
        deleteFile(sourceSyncFile,targetSyncFile);
      }
 catch (      Exception e) {
        _logger.error(e.getMessage(),e);
      }
    }
 else {
      queueSyncFile(targetSyncFile.getParentFolderId(),targetSyncFile);
    }
    return;
  }
  String filePathName="";
  try {
    filePathName=FileUtil.getFilePathName(parentSyncFile.getFilePathName(),FileUtil.getSanitizedFileName(targetSyncFile.getName(),targetSyncFile.getExtension()));
    SyncFile sourceSyncFile=SyncFileService.fetchSyncFile(targetSyncFile.getRepositoryId(),getSyncAccountId(),targetSyncFile.getTypePK());
    if (isIgnoredFilePath(sourceSyncFile,filePathName) || ((sourceSyncFile != null) && (sourceSyncFile.getModifiedTime() == targetSyncFile.getModifiedTime()))) {
      return;
    }
    if ((sourceSyncFile != null) && !sourceSyncFile.isUnsynced()) {
      sourceSyncFile.setState(SyncFile.STATE_IN_PROGRESS);
    }
    targetSyncFile.setFilePathName(filePathName);
    targetSyncFile.setState(SyncFile.STATE_IN_PROGRESS);
    if (event.equals(SyncFile.EVENT_ADD) || event.equals(SyncFile.EVENT_GET)) {
      if (sourceSyncFile != null) {
        updateFile(sourceSyncFile,targetSyncFile,filePathName);
      }
 else {
        addFile(targetSyncFile,filePathName);
      }
    }
 else     if (event.equals(SyncFile.EVENT_DELETE)) {
      if (sourceSyncFile == null) {
        return;
      }
      deleteFile(sourceSyncFile,targetSyncFile);
    }
 else     if (event.equals(SyncFile.EVENT_MOVE)) {
      if (sourceSyncFile == null) {
        addFile(targetSyncFile,filePathName);
      }
 else       if (sourceSyncFile.getParentFolderId() == targetSyncFile.getParentFolderId()) {
        updateFile(sourceSyncFile,targetSyncFile,filePathName);
      }
 else {
        moveFile(sourceSyncFile,targetSyncFile,filePathName);
      }
    }
 else     if (event.equals(SyncFile.EVENT_RESTORE)) {
      if (sourceSyncFile != null) {
        updateFile(sourceSyncFile,targetSyncFile,filePathName);
      }
 else       if (isParentUnsynced(targetSyncFile)) {
        if (targetSyncFile.isFolder()) {
          targetSyncFile.setModifiedTime(0);
          targetSyncFile.setState(SyncFile.STATE_UNSYNCED);
          targetSyncFile.setSyncAccountId(getSyncAccountId());
          targetSyncFile.setUiEvent(SyncFile.UI_EVENT_NONE);
          SyncFileService.update(targetSyncFile);
        }
        return;
      }
 else {
        targetSyncFile.setLocalExtraSetting("restoreEvent",true);
        SyncFileService.update(targetSyncFile);
        addFile(targetSyncFile,filePathName);
      }
    }
 else     if (event.equals(SyncFile.EVENT_TRASH)) {
      if (sourceSyncFile == null) {
        return;
      }
      deleteFile(sourceSyncFile,targetSyncFile);
    }
 else     if (event.equals(SyncFile.EVENT_UPDATE)) {
      if (sourceSyncFile == null) {
        addFile(targetSyncFile,filePathName);
      }
 else {
        updateFile(sourceSyncFile,targetSyncFile,filePathName);
      }
    }
    processDependentSyncFiles(targetSyncFile);
    if (getParameterValue("parentFolderId") != null) {
      SyncFile syncFile=SyncFileService.fetchSyncFile((Long)getParameterValue("repositoryId"),getSyncAccountId(),(Long)getParameterValue("parentFolderId"));
      if (syncFile != null) {
        syncFile.setState(SyncFile.STATE_IN_PROGRESS);
        syncFile.setUiEvent(SyncFile.UI_EVENT_RESYNCING);
        SyncFileService.update(syncFile);
      }
    }
  }
 catch (  FileSystemException fse) {
    String message=fse.getMessage();
    if (message.contains("File name too long")) {
      targetSyncFile.setState(SyncFile.STATE_ERROR);
      targetSyncFile.setUiEvent(SyncFile.UI_EVENT_FILE_NAME_TOO_LONG);
      SyncFileService.update(targetSyncFile);
    }
  }
catch (  Exception e) {
    _logger.error(e.getMessage(),e);
  }
}

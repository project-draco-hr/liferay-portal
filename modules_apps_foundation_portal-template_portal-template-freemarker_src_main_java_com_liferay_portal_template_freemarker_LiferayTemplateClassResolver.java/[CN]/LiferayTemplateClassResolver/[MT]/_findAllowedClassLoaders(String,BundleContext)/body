{
  Bundle bundle=bundleContext.getBundle();
  Set<ClassLoader> classLoaders=new HashSet<>();
  BundleWiring bundleWiring=bundle.adapt(BundleWiring.class);
  List<BundleCapability> bundleCapabilities=bundleWiring.getCapabilities(BundleRevision.PACKAGE_NAMESPACE);
  for (  BundleCapability bundleCapability : bundleCapabilities) {
    Map<String,Object> attributes=bundleCapability.getAttributes();
    String exportPackage=(String)attributes.get(BundleRevision.PACKAGE_NAMESPACE);
    if (clazz.equals(StringPool.STAR)) {
      continue;
    }
 else     if (clazz.endsWith(StringPool.STAR)) {
      clazz=clazz.substring(0,clazz.length() - 1);
      if (exportPackage.startsWith(clazz)) {
        BundleRevision provider=bundleCapability.getRevision();
        Bundle providerBundle=provider.getBundle();
        BundleWiring providerBundleWiring=providerBundle.adapt(BundleWiring.class);
        classLoaders.add(providerBundleWiring.getClassLoader());
      }
    }
 else     if (clazz.equals(exportPackage)) {
      BundleRevision bundleRevision=bundleCapability.getRevision();
      Bundle revisionBundle=bundleRevision.getBundle();
      BundleWiring providerBundleWiring=revisionBundle.adapt(BundleWiring.class);
      classLoaders.add(providerBundleWiring.getClassLoader());
    }
 else {
      String allowedClassPackage=clazz.substring(0,clazz.lastIndexOf("."));
      if (allowedClassPackage.equals(exportPackage)) {
        BundleRevision bundleRevision=bundleCapability.getRevision();
        Bundle revisionBundle=bundleRevision.getBundle();
        BundleWiring providerBundleWiring=revisionBundle.adapt(BundleWiring.class);
        classLoaders.add(providerBundleWiring.getClassLoader());
      }
    }
  }
  if (classLoaders.isEmpty() && _log.isWarnEnabled()) {
    _log.warn("No bundle exports " + clazz);
  }
  return classLoaders;
}

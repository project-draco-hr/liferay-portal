{
  String url=super.toString();
  if (Validator.isNull(url)) {
    return url;
  }
 else {
    StringMaker sm=new StringMaker(url);
    if (!url.endsWith(StringPool.AMPERSAND)) {
      sm.append(StringPool.AMPERSAND);
    }
    String suffix=StringPool.BLANK;
    int pos=url.lastIndexOf(StringPool.POUND);
    if (pos >= 0) {
      suffix=url.substring(pos);
      sm.delete(pos,sm.length());
    }
    Iterator itr1=_portletsParams.keySet().iterator();
    while (itr1.hasNext()) {
      String portletId=(String)itr1.next();
      String namespace=PortalUtil.getPortletNamespace(portletId);
      Map parameters=(Map)_portletsParams.get(portletId);
      Iterator itr2=parameters.keySet().iterator();
      while (itr2.hasNext()) {
        String name=(String)itr2.next();
        List values=(List)parameters.get(name);
        for (int i=0; i < values.size(); i++) {
          String value=(String)values.get(i);
          sm.append(namespace);
          sm.append(name);
          sm.append(StringPool.EQUAL);
          sm.append(HtmlUtils.htmlEscape(value));
          sm.append(StringPool.AMPERSAND);
        }
      }
    }
    return sm.toString() + suffix;
  }
}

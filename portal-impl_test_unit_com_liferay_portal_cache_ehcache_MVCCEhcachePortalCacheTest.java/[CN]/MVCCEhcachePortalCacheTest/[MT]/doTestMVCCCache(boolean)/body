{
  if (timeToLive) {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_1),10);
  }
 else {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_1));
  }
  _assertVersion(_VERSION_1,_mvccEhcachePortalCache.get(_KEY_1));
  _testCacheListener.assertPut(_KEY_1,new MockMVCCModel(_VERSION_1));
  _testCacheListener.assertActionsCount(1);
  _testCacheListener.reset();
  if (timeToLive) {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_0),10);
  }
 else {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_0));
  }
  _assertVersion(_VERSION_1,_mvccEhcachePortalCache.get(_KEY_1));
  _testCacheListener.assertActionsCount(0);
  if (timeToLive) {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_2),10);
  }
 else {
    _mvccEhcachePortalCache.put(_KEY_1,new MockMVCCModel(_VERSION_2));
  }
  _assertVersion(_VERSION_2,_mvccEhcachePortalCache.get(_KEY_1));
  _testCacheListener.assertUpdated(_KEY_1,new MockMVCCModel(_VERSION_2));
  _testCacheListener.assertActionsCount(1);
  _testCacheListener.reset();
  if (timeToLive) {
    _mvccEhcachePortalCache.putQuiet(_KEY_2,new MockMVCCModel(_VERSION_1),10);
  }
 else {
    _mvccEhcachePortalCache.putQuiet(_KEY_2,new MockMVCCModel(_VERSION_1));
  }
  _assertVersion(_VERSION_1,_mvccEhcachePortalCache.get(_KEY_2));
  _testCacheListener.assertActionsCount(0);
}

{
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if (serviceContext != null) {
    serviceContext=(ServiceContext)serviceContext.clone();
  }
 else {
    serviceContext=new ServiceContext();
    serviceContext.setCompanyId(themeDisplay.getCompanyId());
    serviceContext.setLanguageId(themeDisplay.getLanguageId());
    serviceContext.setLayoutFullURL(PortalUtil.getLayoutFullURL(themeDisplay));
    serviceContext.setLayoutURL(PortalUtil.getLayoutURL(themeDisplay));
    serviceContext.setPathMain(PortalUtil.getPathMain());
    serviceContext.setPlid(themeDisplay.getPlid());
    serviceContext.setPortalURL(PortalUtil.getPortalURL(portletRequest));
    serviceContext.setSignedIn(themeDisplay.isSignedIn());
    User user=themeDisplay.getUser();
    serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay));
    serviceContext.setUserId(user.getUserId());
  }
  serviceContext.setScopeGroupId(themeDisplay.getScopeGroupId());
  Map<String,Serializable> attributes=new HashMap<String,Serializable>();
  Enumeration<String> enu=portletRequest.getParameterNames();
  while (enu.hasMoreElements()) {
    String param=enu.nextElement();
    String[] values=portletRequest.getParameterValues(param);
    if ((values != null) && (values.length > 0)) {
      if (values.length == 1) {
        attributes.put(param,values[0]);
      }
 else {
        attributes.put(param,values);
      }
    }
  }
  serviceContext.setAttributes(attributes);
  String cmd=ParamUtil.getString(portletRequest,Constants.CMD);
  serviceContext.setCommand(cmd);
  String currentURL=PortalUtil.getCurrentURL(portletRequest);
  serviceContext.setCurrentURL(currentURL);
  boolean addCommunityPermissions=ParamUtil.getBoolean(portletRequest,"addCommunityPermissions");
  boolean addGuestPermissions=ParamUtil.getBoolean(portletRequest,"addGuestPermissions");
  String[] communityPermissions=PortalUtil.getCommunityPermissions(portletRequest);
  String[] guestPermissions=PortalUtil.getGuestPermissions(portletRequest);
  serviceContext.setAddCommunityPermissions(addCommunityPermissions);
  serviceContext.setAddGuestPermissions(addGuestPermissions);
  serviceContext.setCommunityPermissions(communityPermissions);
  serviceContext.setGuestPermissions(guestPermissions);
  HttpServletRequest request=PortalUtil.getHttpServletRequest(portletRequest);
  String portletId=PortalUtil.getPortletId(portletRequest);
  PortletPreferencesIds portletPreferencesIds=PortletPreferencesFactoryUtil.getPortletPreferencesIds(request,portletId);
  serviceContext.setPortletPreferencesIds(portletPreferencesIds);
  long[] assetCategoryIds=StringUtil.split(ParamUtil.getString(portletRequest,"assetCategoryIds"),0L);
  String[] assetTagNames=StringUtil.split(ParamUtil.getString(portletRequest,"assetTagNames"));
  serviceContext.setAssetCategoryIds(assetCategoryIds);
  serviceContext.setAssetTagNames(assetTagNames);
  int workflowAction=ParamUtil.getInteger(portletRequest,"workflowAction",WorkflowConstants.ACTION_PUBLISH);
  serviceContext.setWorkflowAction(workflowAction);
  return serviceContext;
}

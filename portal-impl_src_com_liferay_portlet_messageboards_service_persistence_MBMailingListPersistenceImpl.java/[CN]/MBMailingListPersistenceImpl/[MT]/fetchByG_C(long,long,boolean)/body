{
  Object[] finderArgs=new Object[]{groupId,categoryId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_C,finderArgs,this);
  }
  if (result instanceof MBMailingList) {
    MBMailingList mbMailingList=(MBMailingList)result;
    if ((groupId != mbMailingList.getGroupId()) || (categoryId != mbMailingList.getCategoryId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_MBMAILINGLIST_WHERE);
    query.append(_FINDER_COLUMN_G_C_GROUPID_2);
    query.append(_FINDER_COLUMN_G_C_CATEGORYID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(categoryId);
      List<MBMailingList> list=q.list();
      result=list;
      MBMailingList mbMailingList=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C,finderArgs,list);
      }
 else {
        mbMailingList=list.get(0);
        cacheResult(mbMailingList);
        if ((mbMailingList.getGroupId() != groupId) || (mbMailingList.getCategoryId() != categoryId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C,finderArgs,mbMailingList);
        }
      }
      return mbMailingList;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_C,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (MBMailingList)result;
    }
  }
}

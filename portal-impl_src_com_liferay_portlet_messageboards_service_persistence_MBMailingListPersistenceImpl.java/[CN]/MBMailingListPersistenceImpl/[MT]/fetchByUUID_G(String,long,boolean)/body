{
  Object[] finderArgs=new Object[]{uuid,new Long(groupId)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_UUID_G,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_MBMAILINGLIST_WHERE);
      if (uuid == null) {
        query.append("mbMailingList.uuid IS NULL");
      }
 else {
        if (uuid.equals(StringPool.BLANK)) {
          query.append("(mbMailingList.uuid IS NULL OR ");
        }
        query.append("mbMailingList.uuid = ?");
        if (uuid.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" AND ");
      query.append("mbMailingList.groupId = ?");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      if (uuid != null) {
        qPos.add(uuid);
      }
      qPos.add(groupId);
      List<MBMailingList> list=q.list();
      result=list;
      MBMailingList mbMailingList=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,finderArgs,list);
      }
 else {
        mbMailingList=list.get(0);
        cacheResult(mbMailingList);
        if ((mbMailingList.getUuid() == null) || !mbMailingList.getUuid().equals(uuid) || (mbMailingList.getGroupId() != groupId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,finderArgs,mbMailingList);
        }
      }
      return mbMailingList;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,finderArgs,new ArrayList<MBMailingList>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (MBMailingList)result;
    }
  }
}

{
  boolean tempIndexReadOnly=PropsValues.INDEX_READ_ONLY;
  PropsValues.INDEX_READ_ONLY=true;
  int verifyFrequency=GetterUtil.getInteger(PropsUtil.get(PropsKeys.VERIFY_FREQUENCY));
  if ((verifyFrequency == VerifyProcess.ALWAYS) || ((verifyFrequency == VerifyProcess.ONCE) && !verified) || (_upgraded)) {
    if (!_upgraded) {
      PropsUtil.set(PropsKeys.INDEX_ON_STARTUP,"true");
    }
    String[] verifyProcesses=PropsUtil.getArray(PropsKeys.VERIFY_PROCESSES);
    for (int i=0; i < verifyProcesses.length; i++) {
      if (_log.isDebugEnabled()) {
        _log.debug("Initializing verification " + verifyProcesses[i]);
      }
      try {
        VerifyProcess verifyProcess=(VerifyProcess)Class.forName(verifyProcesses[i]).newInstance();
        if (_log.isDebugEnabled()) {
          _log.debug("Running verification " + verifyProcesses[i]);
        }
        verifyProcess.verify();
        if (_log.isDebugEnabled()) {
          _log.debug("Finished verification " + verifyProcesses[i]);
        }
        _verified=true;
      }
 catch (      ClassNotFoundException cnfe) {
        _log.error(verifyProcesses[i] + " cannot be found");
      }
catch (      IllegalAccessException iae) {
        _log.error(verifyProcesses[i] + " cannot be accessed");
      }
catch (      InstantiationException ie) {
        _log.error(verifyProcesses[i] + " cannot be initiated");
      }
    }
  }
  PropsValues.INDEX_READ_ONLY=tempIndexReadOnly;
}

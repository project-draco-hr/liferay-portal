{
  Set<String> validIndexNames=new HashSet<String>();
  if (indexes.isEmpty()) {
    return validIndexNames;
  }
  if (_dropIndexes) {
    for (    Index index : indexes) {
      String indexName=index.getIndexName().toUpperCase();
      validIndexNames.add(indexName);
    }
    return validIndexNames;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Dropping stale indexes");
  }
  DBUtil dbUtil=DBUtil.getInstance();
  String type=dbUtil.getType();
  Thread currentThread=Thread.currentThread();
  ClassLoader classLoader=currentThread.getContextClassLoader();
  String indexPropertiesString=StringUtil.read(classLoader,"com/liferay/portal/tools/sql/dependencies/indexes.properties");
  Properties indexProperties=PropertiesUtil.load(indexPropertiesString);
  Enumeration<String> indexPropertiesEnu=(Enumeration<String>)indexProperties.propertyNames();
  while (indexPropertiesEnu.hasMoreElements()) {
    String key=indexPropertiesEnu.nextElement();
    String value=indexProperties.getProperty(key);
    indexProperties.setProperty(key.toLowerCase(),value);
  }
  String indexesSQLString=readIndexesSQL().toLowerCase();
  String portalTablesSQLString=StringUtil.read(classLoader,"com/liferay/portal/tools/sql/dependencies/portal-tables.sql");
  portalTablesSQLString=portalTablesSQLString.toLowerCase();
  for (  Index index : indexes) {
    String indexName=index.getIndexName().toUpperCase();
    String indexNameLowerCase=indexName.toLowerCase();
    String tableName=index.getTableName();
    String tableNameLowerCase=tableName.toLowerCase();
    boolean unique=index.isUnique();
    validIndexNames.add(indexName);
    if (indexProperties.containsKey(indexNameLowerCase)) {
      if (unique && indexesSQLString.contains("create unique index " + indexNameLowerCase + " ")) {
        continue;
      }
      if (!unique && indexesSQLString.contains("create index " + indexNameLowerCase + " ")) {
        continue;
      }
    }
 else {
      if (!portalTablesSQLString.contains("create table " + tableNameLowerCase + " (")) {
        continue;
      }
    }
    validIndexNames.remove(indexName);
    String sql="drop index " + indexName;
    if (type.equals(DBUtil.TYPE_MYSQL) || type.equals(DBUtil.TYPE_SQLSERVER)) {
      sql+=" on " + tableName;
    }
    if (_log.isInfoEnabled()) {
      _log.info(sql);
    }
    dbUtil.runSQL(sql);
  }
  return validIndexNames;
}

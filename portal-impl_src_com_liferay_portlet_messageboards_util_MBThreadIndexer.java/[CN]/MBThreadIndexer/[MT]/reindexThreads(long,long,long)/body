{
  final ActionableDynamicQuery actionableDynamicQuery=MBThreadLocalServiceUtil.getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property categoryIdProperty=PropertyFactoryUtil.forName("categoryId");
      dynamicQuery.add(categoryIdProperty.eq(categoryId));
      Property statusProperty=PropertyFactoryUtil.forName("status");
      dynamicQuery.add(statusProperty.eq(WorkflowConstants.STATUS_APPROVED));
    }
  }
);
  actionableDynamicQuery.setCompanyId(companyId);
  actionableDynamicQuery.setGroupId(groupId);
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
    @Override public void performAction(    Object object){
      MBThread thread=(MBThread)object;
      try {
        Document document=getDocument(thread);
        actionableDynamicQuery.addDocument(document);
      }
 catch (      PortalException pe) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to index message boards thread " + thread.getThreadId(),pe);
        }
      }
    }
  }
);
  actionableDynamicQuery.setSearchEngineId(getSearchEngineId());
  actionableDynamicQuery.performActions();
}

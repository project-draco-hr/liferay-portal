{
  long pk=nextLong();
  BookmarksEntry newBookmarksEntry=_persistence.create(pk);
  newBookmarksEntry.setUuid(randomString());
  newBookmarksEntry.setCompanyId(nextLong());
  newBookmarksEntry.setUserId(nextLong());
  newBookmarksEntry.setCreateDate(nextDate());
  newBookmarksEntry.setModifiedDate(nextDate());
  newBookmarksEntry.setFolderId(nextLong());
  newBookmarksEntry.setName(randomString());
  newBookmarksEntry.setUrl(randomString());
  newBookmarksEntry.setComments(randomString());
  newBookmarksEntry.setVisits(nextInt());
  newBookmarksEntry.setPriority(nextInt());
  _persistence.update(newBookmarksEntry);
  BookmarksEntry existingBookmarksEntry=_persistence.findByPrimaryKey(newBookmarksEntry.getPrimaryKey());
  assertEquals(existingBookmarksEntry.getUuid(),newBookmarksEntry.getUuid());
  assertEquals(existingBookmarksEntry.getEntryId(),newBookmarksEntry.getEntryId());
  assertEquals(existingBookmarksEntry.getCompanyId(),newBookmarksEntry.getCompanyId());
  assertEquals(existingBookmarksEntry.getUserId(),newBookmarksEntry.getUserId());
  assertEquals(existingBookmarksEntry.getCreateDate(),newBookmarksEntry.getCreateDate());
  assertEquals(existingBookmarksEntry.getModifiedDate(),newBookmarksEntry.getModifiedDate());
  assertEquals(existingBookmarksEntry.getFolderId(),newBookmarksEntry.getFolderId());
  assertEquals(existingBookmarksEntry.getName(),newBookmarksEntry.getName());
  assertEquals(existingBookmarksEntry.getUrl(),newBookmarksEntry.getUrl());
  assertEquals(existingBookmarksEntry.getComments(),newBookmarksEntry.getComments());
  assertEquals(existingBookmarksEntry.getVisits(),newBookmarksEntry.getVisits());
  assertEquals(existingBookmarksEntry.getPriority(),newBookmarksEntry.getPriority());
}

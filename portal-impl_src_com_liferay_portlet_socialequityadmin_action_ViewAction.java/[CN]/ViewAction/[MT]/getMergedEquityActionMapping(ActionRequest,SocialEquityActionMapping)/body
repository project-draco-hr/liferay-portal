{
  SocialEquityActionMapping mergedEquityActionMapping=equityActionMapping.clone();
  String className=equityActionMapping.getClassName();
  int informationLifespan=ParamUtil.getInteger(actionRequest,className + "." + mergedEquityActionMapping.getActionId()+ ".informationLifespan",-1);
  if (informationLifespan >= 0) {
    mergedEquityActionMapping.setInformationLifespan(informationLifespan);
  }
  int informationValue=ParamUtil.getInteger(actionRequest,className + "." + mergedEquityActionMapping.getActionId()+ ".informationValue",-1);
  if (informationValue >= 0) {
    mergedEquityActionMapping.setInformationValue(informationValue);
  }
  int participationLifespan=ParamUtil.getInteger(actionRequest,className + "." + mergedEquityActionMapping.getActionId()+ ".participationLifespan",-1);
  if (participationLifespan >= 0) {
    mergedEquityActionMapping.setParticipationLifespan(participationLifespan);
  }
  int participationValue=ParamUtil.getInteger(actionRequest,className + "." + mergedEquityActionMapping.getActionId()+ ".participationValue",-1);
  if (participationValue >= 0) {
    mergedEquityActionMapping.setParticipationValue(participationValue);
  }
  return mergedEquityActionMapping;
}

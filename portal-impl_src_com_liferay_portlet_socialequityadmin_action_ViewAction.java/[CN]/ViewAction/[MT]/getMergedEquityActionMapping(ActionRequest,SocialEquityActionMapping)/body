{
  SocialEquityActionMapping mergedMapping=equityActionMapping.clone();
  updateModel(actionRequest,mergedMapping,"informationDailyLimit");
  updateModel(actionRequest,mergedMapping,"informationLifespan");
  updateModel(actionRequest,mergedMapping,"informationValue");
  updateModel(actionRequest,mergedMapping,"participationDailyLimit");
  updateModel(actionRequest,mergedMapping,"participationLifespan");
  updateModel(actionRequest,mergedMapping,"participationValue");
  boolean unique=ParamUtil.getBoolean(actionRequest,equityActionMapping.getClassName() + "." + equityActionMapping.getActionId()+ ".unique");
  mergedMapping.setUnique(unique);
  return mergedMapping;
}

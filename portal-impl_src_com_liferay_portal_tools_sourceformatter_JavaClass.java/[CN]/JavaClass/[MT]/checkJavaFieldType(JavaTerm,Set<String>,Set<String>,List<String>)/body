{
  if (!BaseSourceProcessor.portalSource || !javaTerm.isVariable()) {
    return;
  }
  Pattern pattern=Pattern.compile("\t(private |protected |public )(static )?(final)?([\\s\\S]*?)" + javaTerm.getName());
  Matcher matcher=pattern.matcher(javaTerm.getContent());
  if (!matcher.find()) {
    return;
  }
  boolean isFinal=Validator.isNotNull(matcher.group(3));
  boolean isStatic=Validator.isNotNull(matcher.group(2));
  String javaFieldType=StringUtil.trim(matcher.group(4));
  if (isFinal && isStatic && javaFieldType.startsWith("Map<")) {
    checkMutableFieldType(javaTerm);
  }
  if (!javaTerm.isPrivate()) {
    return;
  }
  if (isFinal) {
    if (immutableFieldTypes.contains(javaFieldType)) {
      if (isStatic) {
        checkImmutableFieldType(javaTerm);
      }
 else {
        checkStaticableFieldType(javaTerm);
      }
    }
  }
 else   if (!BaseSourceProcessor.isExcluded(finalableFieldTypesExclusions,_absolutePath)) {
    checkFinalableFieldType(javaTerm,annotationsExclusions,isStatic);
  }
}

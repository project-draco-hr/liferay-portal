{
  String javaTermContent=javaTerm.getContent();
  for (  String annotation : annotationsExclusions) {
    if (javaTermContent.contains(_indent + StringPool.AT + annotation)) {
      return;
    }
  }
  StringBundler sb=null;
  if (true) {
    sb=new StringBundler(4);
    sb.append("(\\b|\\.)");
    sb.append(javaTerm.getName());
    sb.append(" (=)|(\\+\\+)|(--)|(\\+=)|(-=)|(\\*=)|(/=)|(%=)");
    sb.append("|(\\|=)|(&=)|(^=) ");
  }
 else {
    sb=new StringBundler(8);
    sb.append("(((\\+\\+( ?))|(--( ?)))");
    sb.append(javaTerm.getName());
    sb.append(")");
    sb.append("|((\\b|\\.)");
    sb.append(javaTerm.getName());
    sb.append("((( )((=)|(\\+=)|(-=)|(\\*=)|(/=)|(%=)))");
    sb.append("|(\\+\\+)|(--)");
    sb.append("|(( )((\\|=)|(&=)|(^=)))))");
  }
  Pattern pattern=Pattern.compile(sb.toString());
  if (!isFinalableField(javaTerm,_name,pattern,true)) {
    return;
  }
  String newJavaTermContent=null;
  if (isStatic) {
    newJavaTermContent=StringUtil.replaceFirst(javaTermContent,"private static ","private static final ");
  }
 else {
    newJavaTermContent=StringUtil.replaceFirst(javaTermContent,"private ","private final ");
  }
  _content=StringUtil.replace(_content,javaTermContent,newJavaTermContent);
}

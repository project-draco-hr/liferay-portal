{
  if (!BaseSourceProcessor.portalSource || !javaTerm.isVariable()) {
    return;
  }
  String javaTermContent=javaTerm.getContent();
  String[] javaTermWordsArray=javaTermContent.trim().split(StringPool.SPACE);
  List<String> javaTermWords=Arrays.asList(javaTermWordsArray);
  javaTermWords=new ArrayList<>(javaTermWords);
  boolean isFinal=javaTermWords.contains("final");
  boolean isStatic=javaTermWords.contains("static");
  int typeIndex=javaTermWords.indexOf(javaTerm.getName()) - 1;
  if (typeIndex < 0) {
    typeIndex=javaTermWords.indexOf(javaTerm.getName() + ";") - 1;
  }
  String javaFieldType=javaTermWords.get(typeIndex);
  String currentWord=javaTermWords.get(typeIndex - 1);
  while (currentWord.endsWith(StringPool.COMMA)) {
    javaFieldType=currentWord + javaFieldType;
    typeIndex--;
    currentWord=javaTermWords.get(typeIndex - 1);
  }
  StringBundler sb=new StringBundler(typeIndex * 2);
  for (int i=1; i < typeIndex; i++) {
    sb.append(javaTermWords.get(i));
    sb.append(StringPool.SPACE);
  }
  if (isFinal && isStatic && javaFieldType.startsWith("Map<")) {
    checkMutableFieldType(javaTerm);
  }
  if (!javaTerm.isPrivate()) {
    return;
  }
  if (isFinal) {
    if (immutableFieldTypes.contains(javaFieldType)) {
      if (isStatic) {
        checkImmutableFieldType(javaTerm);
      }
 else {
        checkStaticableFieldType(javaTerm);
      }
    }
  }
 else {
    checkFinalableFieldType(javaTerm,annotationsExclusions,sb.toString());
  }
}

{
  if (!BaseSourceProcessor.portalSource || !javaTerm.isVariable()) {
    return;
  }
  Pattern pattern=Pattern.compile("\t(private |protected |public )" + "(((final|static|transient)( |\n))*)([\\s\\S]*?)" + javaTerm.getName());
  String javaTermContent=javaTerm.getContent();
  Matcher matcher=pattern.matcher(javaTermContent);
  if (!matcher.find()) {
    return;
  }
  String modifierDefinition=StringUtil.trim(javaTermContent.substring(matcher.start(1),matcher.start(6)));
  boolean isFinal=modifierDefinition.contains("final");
  boolean isStatic=modifierDefinition.contains("static");
  String javaFieldType=StringUtil.trim(matcher.group(6));
  if (isFinal && isStatic && javaFieldType.startsWith("Map<")) {
    checkMutableFieldType(javaTerm);
  }
  if (!javaTerm.isPrivate()) {
    return;
  }
  if (isFinal) {
    if (immutableFieldTypes.contains(javaFieldType)) {
      if (isStatic) {
        checkImmutableFieldType(javaTerm);
      }
 else {
        checkStaticableFieldType(javaTerm);
      }
    }
  }
 else {
    checkFinalableFieldType(javaTerm,annotationsExclusions,modifierDefinition);
  }
}

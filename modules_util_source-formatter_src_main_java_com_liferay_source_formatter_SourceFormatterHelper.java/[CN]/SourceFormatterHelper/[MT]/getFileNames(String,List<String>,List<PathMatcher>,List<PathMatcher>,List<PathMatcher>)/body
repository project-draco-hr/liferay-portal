{
  List<String> fileNames=new ArrayList<>();
  recentChangesFileNamesLoop:   for (  String fileName : recentChangesFileNames) {
    fileName=baseDir.concat(fileName);
    File file=new File(fileName);
    File canonicalFile=file.getCanonicalFile();
    Path filePath=canonicalFile.toPath();
    for (    PathMatcher pathMatcher : excludeFilePathMatchers) {
      if (pathMatcher.matches(filePath)) {
        continue recentChangesFileNamesLoop;
      }
    }
    File dir=file.getParentFile();
    while (true) {
      File canonicalDir=dir.getCanonicalFile();
      Path dirPath=canonicalDir.toPath();
      for (      PathMatcher pathMatcher : excludeDirPathMatchers) {
        if (pathMatcher.matches(dirPath)) {
          continue recentChangesFileNamesLoop;
        }
      }
      if (Files.exists(dirPath.resolve("source_formatter.ignore"))) {
        continue recentChangesFileNamesLoop;
      }
      dir=dir.getParentFile();
      if (dir == null) {
        break;
      }
    }
    for (    PathMatcher pathMatcher : includeFilePathMatchers) {
      if (pathMatcher.matches(filePath)) {
        fileName=StringUtil.replace(fileName,CharPool.SLASH,CharPool.BACK_SLASH);
        fileNames.add(fileName);
        continue recentChangesFileNamesLoop;
      }
    }
  }
  return fileNames;
}

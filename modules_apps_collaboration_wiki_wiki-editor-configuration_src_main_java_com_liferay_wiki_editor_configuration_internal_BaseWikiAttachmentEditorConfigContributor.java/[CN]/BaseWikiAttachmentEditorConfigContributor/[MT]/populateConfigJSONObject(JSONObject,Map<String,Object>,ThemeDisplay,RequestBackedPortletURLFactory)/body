{
  String removePlugins=jsonObject.getString("removePlugins");
  if (Validator.isNotNull(removePlugins)) {
    removePlugins+=",ae_addimages";
  }
 else {
    removePlugins="ae_addimages";
  }
  jsonObject.put("removePlugins",removePlugins);
  boolean allowBrowseDocuments=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:allowBrowseDocuments"));
  if (!allowBrowseDocuments) {
    return;
  }
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  long wikiPageResourcePrimKey=0;
  if (fileBrowserParamsMap != null) {
    wikiPageResourcePrimKey=GetterUtil.getLong(fileBrowserParamsMap.get("wikiPageResourcePrimKey"));
  }
  String name=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  boolean inlineEdit=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:inlineEdit"));
  if (!inlineEdit) {
    String namespace=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:namespace"));
    name=namespace + name;
  }
  String itemSelectorURL=getItemSelectorURL(requestBackedPortletURLFactory,name + "selectItem",wikiPageResourcePrimKey,themeDisplay);
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL);
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL);
}

{
  if (!_className.equals(lineData._className) || (_lineNumber != lineData._lineNumber)) {
    throw new IllegalArgumentException("Line data mismatch, left : " + toString() + ", right : "+ lineData);
  }
  AtomicLong hitCounter=lineData._hitCounter;
  _hitCounter.addAndGet(hitCounter.get());
  ConcurrentMap<Integer,JumpData> otherJumpDatas=lineData._jumpDatas;
  for (  JumpData jumpData : otherJumpDatas.values()) {
    JumpData previousJumpData=_jumpDatas.putIfAbsent(jumpData.getJumpNumber(),jumpData);
    if (previousJumpData != null) {
      previousJumpData.merge(jumpData);
    }
  }
  ConcurrentMap<Integer,SwitchData> otherSwitchDatas=lineData._switchDatas;
  for (  SwitchData switchData : otherSwitchDatas.values()) {
    SwitchData previousSwitchData=_switchDatas.putIfAbsent(switchData.getSwitchNumber(),switchData);
    if (previousSwitchData != null) {
      previousSwitchData.merge(switchData);
    }
  }
}

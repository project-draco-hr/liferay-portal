{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    ps=con.prepareStatement("select classNameId from Group_ where groupId = ?");
    ps.setLong(1,groupId);
    rs=ps.executeQuery();
    long classNameId=0;
    if (rs.next()) {
      classNameId=rs.getLong("classNameId");
    }
    String className=PortalUtil.getClassName(classNameId);
    long communityContentReviewerRoleId=getRoleId(companyId,_ROLE_COMMUNITY_CONTENT_REVIEWER);
    long organizationContentReviewerRoleId=getRoleId(companyId,_ROLE_ORGANIZATION_CONTENT_REVIEWER);
    long portalContentReviewerRoleId=getRoleId(companyId,_ROLE_PORTAL_CONTENT_REVIEWER);
    StringBundler sb=new StringBundler();
    sb.append("(select User_.* from User_, Users_Roles where ");
    sb.append("User_.userId = Users_Roles.userId and ");
    sb.append("Users_Roles.roleId = ?) union all (select User_.* ");
    sb.append("from User_, UserGroupRole where User_.userId = ");
    sb.append("UserGroupRole.userId and UserGroupRole.roleId = ?)");
    ps=con.prepareStatement(sb.toString());
    ps.setLong(1,roleId);
    ps.setLong(2,roleId);
    rs=ps.executeQuery();
    while (rs.next()) {
      long userId=rs.getLong("userId");
      if (className.equals(Company.class.getName())) {
        addUserRole(userId,portalContentReviewerRoleId);
      }
 else       if (className.equals(Group.class.getName())) {
        addUserGroupRole(userId,groupId,communityContentReviewerRoleId);
      }
 else       if (className.equals(Organization.class.getName())) {
        addUserGroupRole(userId,groupId,organizationContentReviewerRoleId);
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

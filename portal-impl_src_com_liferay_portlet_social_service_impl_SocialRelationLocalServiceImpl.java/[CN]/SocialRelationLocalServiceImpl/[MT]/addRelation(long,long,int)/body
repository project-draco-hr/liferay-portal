{
  if (userId1 == userId2) {
    throw new RelationUserIdException();
  }
  User user1=userPersistence.findByPrimaryKey(userId1);
  User user2=userPersistence.findByPrimaryKey(userId2);
  if (user1.getCompanyId() != user2.getCompanyId()) {
    throw new RelationUserIdException();
  }
  SocialRelation relation=socialRelationPersistence.fetchByU1_U2_T(userId1,userId2,type);
  if (relation == null) {
    long relationId=counterLocalService.increment();
    relation=socialRelationPersistence.create(relationId);
    relation.setCompanyId(user1.getCompanyId());
    relation.setCreateDate(new Date());
    relation.setUserId1(userId1);
    relation.setUserId2(userId2);
    relation.setType(type);
    socialRelationPersistence.update(relation,false);
  }
  if (SocialRelationConstants.isTypeBi(type)) {
    if (socialRelationPersistence.fetchByU1_U2_T(userId2,userId1,type) == null) {
      long biRelationId=counterLocalService.increment();
      SocialRelation biRelation=socialRelationPersistence.create(biRelationId);
      biRelation.setCompanyId(user1.getCompanyId());
      biRelation.setCreateDate(new Date());
      biRelation.setUserId1(userId2);
      biRelation.setUserId2(userId1);
      biRelation.setType(type);
      socialRelationPersistence.update(biRelation,false);
    }
  }
  return relation;
}

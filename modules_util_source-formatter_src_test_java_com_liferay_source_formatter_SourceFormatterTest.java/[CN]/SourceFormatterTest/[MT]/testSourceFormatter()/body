{
  SourceFormatterArgs sourceFormatterArgs=new SourceFormatterArgs();
  sourceFormatterArgs.setAutoFix(false);
  sourceFormatterArgs.setBaseDirName("../../../");
  sourceFormatterArgs.setPrintErrors(false);
  sourceFormatterArgs.setThrowException(true);
  sourceFormatterArgs.setUseProperties(false);
  SourceFormatter sourceFormatter=new SourceFormatter(sourceFormatterArgs);
  String name=ReleaseInfo.getName();
  if (!name.contains(" DXP ")) {
    List<String> defaultExcludes=new ArrayList<>(ReflectionTestUtil.<List<String>>getFieldValue(SourceFormatter.class,"_defaultExcludes"));
    defaultExcludes.add("modules/private/**");
    ReflectionTestUtil.setFieldValue(SourceFormatter.class,"_defaultExcludes",defaultExcludes);
  }
  try {
    sourceFormatter.format();
  }
 catch (  SourceMismatchException sme) {
    try {
      Assert.assertEquals(sme.getFileName(),sme.getFormattedSource(),sme.getOriginalSource());
    }
 catch (    AssertionError ae) {
      String message=ae.getMessage();
      if (message.length() >= _MAX_MESSAGE_SIZE) {
        message="Truncated message :\n" + message.substring(0,_MAX_MESSAGE_SIZE);
        throw new AssertionError(message,ae.getCause());
      }
      throw ae;
    }
  }
}

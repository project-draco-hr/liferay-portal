{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return countByG_U_C_NotST(groupId,userId,classNameId,status);
  }
  StringBundler query=new StringBundler(5);
  query.append(_FILTER_SQL_COUNT_JOURNALARTICLE_WHERE);
  query.append(_FINDER_COLUMN_G_U_C_NOTST_GROUPID_2);
  query.append(_FINDER_COLUMN_G_U_C_NOTST_USERID_2);
  query.append(_FINDER_COLUMN_G_U_C_NOTST_CLASSNAMEID_2);
  query.append(_FINDER_COLUMN_G_U_C_NOTST_STATUS_2);
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),JournalArticle.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,groupId);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(userId);
    qPos.add(classNameId);
    qPos.add(status);
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

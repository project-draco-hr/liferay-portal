{
  Object[] finderArgs=new Object[]{new Long(groupId),urlTitle,new Integer(status)};
  List<JournalArticle> list=(List<JournalArticle>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_G_UT_S,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_JOURNALARTICLE_WHERE);
      query.append(_FINDER_COLUMN_G_UT_S_GROUPID_2);
      if (urlTitle == null) {
        query.append(_FINDER_COLUMN_G_UT_S_URLTITLE_1);
      }
 else {
        if (urlTitle.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_G_UT_S_URLTITLE_3);
        }
 else {
          query.append(_FINDER_COLUMN_G_UT_S_URLTITLE_2);
        }
      }
      query.append(_FINDER_COLUMN_G_UT_S_STATUS_2);
      query.append(" ORDER BY ");
      query.append("journalArticle.articleId ASC, ");
      query.append("journalArticle.version DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (urlTitle != null) {
        qPos.add(urlTitle);
      }
      qPos.add(status);
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<JournalArticle>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_G_UT_S,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

{
  _setUpItemSelectionCriterionHandlers();
  PortletRequest portletRequest=getMockPortletRequest();
  ItemSelectorRendering itemSelectorRendering=_itemSelectorImpl.getItemSelectorRendering(portletRequest);
  Assert.assertEquals("itemSelectedCallback",itemSelectorRendering.getItemSelectedCallback());
  List<ItemSelectorViewRenderer<?>> itemSelectorViewRenderers=itemSelectorRendering.getItemSelectorViewRenderers();
  ItemSelectorViewRenderer<MediaItemSelectorCriterion> mediaItemSelectorViewRenderer=(ItemSelectorViewRenderer<MediaItemSelectorCriterion>)itemSelectorViewRenderers.get(0);
  MediaItemSelectorCriterion mediaItemSelectorCriterion=mediaItemSelectorViewRenderer.getItemSelectorCriterion();
  Assert.assertEquals(_mediaItemSelectorCriterion.getFileExtension(),mediaItemSelectorCriterion.getFileExtension());
  Assert.assertEquals(_mediaItemSelectorCriterion.getMaxSize(),mediaItemSelectorCriterion.getMaxSize());
  Assert.assertTrue(mediaItemSelectorViewRenderer.getItemSelectorView() instanceof MediaItemSelectorView);
  ItemSelectorViewRenderer<FlickrItemSelectorCriterion> flickrItemSelectorViewRenderer=(ItemSelectorViewRenderer<FlickrItemSelectorCriterion>)itemSelectorViewRenderers.get(1);
  FlickrItemSelectorCriterion flickrItemSelectorCriterion=flickrItemSelectorViewRenderer.getItemSelectorCriterion();
  Assert.assertEquals(_flickrItemSelectorCriterion.getUser(),flickrItemSelectorCriterion.getUser());
  Assert.assertTrue(flickrItemSelectorViewRenderer.getItemSelectorView() instanceof FlickrItemSelectorView);
  Assert.assertEquals(2,itemSelectorViewRenderers.size());
}

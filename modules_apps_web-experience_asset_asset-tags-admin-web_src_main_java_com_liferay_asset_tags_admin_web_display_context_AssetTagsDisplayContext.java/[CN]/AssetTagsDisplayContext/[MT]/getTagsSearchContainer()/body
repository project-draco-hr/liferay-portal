{
  if (_tagsSearchContainer != null) {
    return _tagsSearchContainer;
  }
  SearchContainer tagsSearchContainer=new SearchContainer(_renderRequest,_renderResponse.createRenderURL(),null,"there-are-no-tags");
  String keywords=getKeywords();
  if (Validator.isNull(keywords)) {
    if (showAddButton()) {
      tagsSearchContainer.setEmptyResultsMessage("there-are-no-tags.-you-can-add-a-tag-by-clicking-the-" + "plus-button-on-the-bottom-right-corner");
      tagsSearchContainer.setEmptyResultsMessageCssClass("taglib-empty-result-message-header-has-plus-btn");
    }
  }
 else {
    tagsSearchContainer.setSearch(true);
  }
  String orderByCol=getOrderByCol();
  tagsSearchContainer.setOrderByCol(orderByCol);
  OrderByComparator<AssetTag> orderByComparator=null;
  boolean orderByAsc=false;
  String orderByType=getOrderByType();
  if (orderByType.equals("asc")) {
    orderByAsc=true;
  }
  if (orderByCol.equals("name")) {
    orderByComparator=new AssetTagNameComparator(orderByAsc);
  }
 else   if (orderByCol.equals("usages")) {
    orderByComparator=new AssetTagAssetCountComparator(orderByAsc);
  }
  tagsSearchContainer.setOrderByComparator(orderByComparator);
  tagsSearchContainer.setOrderByType(orderByType);
  tagsSearchContainer.setRowChecker(new EmptyOnClickRowChecker(_renderResponse));
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  long scopeGroupId=themeDisplay.getScopeGroupId();
  int tagsCount=AssetTagServiceUtil.getTagsCount(scopeGroupId,keywords);
  tagsSearchContainer.setTotal(tagsCount);
  List<AssetTag> tags=AssetTagServiceUtil.getTags(scopeGroupId,keywords,tagsSearchContainer.getStart(),tagsSearchContainer.getEnd(),tagsSearchContainer.getOrderByComparator());
  tagsSearchContainer.setResults(tags);
  _tagsSearchContainer=tagsSearchContainer;
  return _tagsSearchContainer;
}

{
  User adminUser=UserTestUtil.addOmniAdminUser();
  PermissionThreadLocal.setPermissionChecker(PermissionCheckerFactoryUtil.create(adminUser));
  Group notStagedGroup=GroupTestUtil.addGroup();
  Group liveGroup=GroupTestUtil.addGroup();
  GroupTestUtil.enableLocalStaging(liveGroup);
  Group stagingGroup=liveGroup.getStagingGroup();
  Calendar notStagedCalendar=getGroupCalendar(notStagedGroup);
  Calendar liveCalendar=getGroupCalendar(liveGroup);
  Calendar stagingCalendar=getGroupCalendar(stagingGroup);
  Assert.assertTrue(CalendarServiceUtil.isManageableFromGroup(notStagedCalendar.getCalendarId(),notStagedGroup.getGroupId()));
  Assert.assertTrue(CalendarServiceUtil.isManageableFromGroup(notStagedCalendar.getCalendarId(),liveGroup.getGroupId()));
  Assert.assertTrue(CalendarServiceUtil.isManageableFromGroup(notStagedCalendar.getCalendarId(),stagingGroup.getGroupId()));
  Assert.assertFalse(CalendarServiceUtil.isManageableFromGroup(liveCalendar.getCalendarId(),notStagedGroup.getGroupId()));
  Assert.assertFalse(CalendarServiceUtil.isManageableFromGroup(liveCalendar.getCalendarId(),liveGroup.getGroupId()));
  Assert.assertFalse(CalendarServiceUtil.isManageableFromGroup(liveCalendar.getCalendarId(),stagingGroup.getGroupId()));
  Assert.assertFalse(CalendarServiceUtil.isManageableFromGroup(stagingCalendar.getCalendarId(),notStagedGroup.getGroupId()));
  Assert.assertFalse(CalendarServiceUtil.isManageableFromGroup(stagingCalendar.getCalendarId(),liveGroup.getGroupId()));
  Assert.assertTrue(CalendarServiceUtil.isManageableFromGroup(stagingCalendar.getCalendarId(),stagingGroup.getGroupId()));
  GroupLocalServiceUtil.deleteGroup(liveGroup);
  GroupLocalServiceUtil.deleteGroup(notStagedGroup);
  UserLocalServiceUtil.deleteUser(adminUser);
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),new QuestionExpirationDateException());
  }
  validate(title,description,choices);
  PollsQuestion question=pollsQuestionPersistence.findByPrimaryKey(questionId);
  question.setModifiedDate(new Date());
  question.setTitle(title);
  question.setDescription(description);
  question.setExpirationDate(expirationDate);
  pollsQuestionPersistence.update(question,false);
  int oldChoicesCount=pollsChoicePersistence.countByQuestionId(questionId);
  if (oldChoicesCount > choices.size()) {
    throw new QuestionChoiceException();
  }
  for (  PollsChoice choice : choices) {
    String choiceName=choice.getName();
    String choiceDescription=choice.getDescription();
    choice=pollsChoicePersistence.fetchByQ_N(questionId,choiceName);
    if (choice == null) {
      pollsChoiceLocalService.addChoice(questionId,choiceName,choiceDescription);
    }
 else {
      pollsChoiceLocalService.updateChoice(choice.getChoiceId(),questionId,choiceName,choiceDescription);
    }
  }
  return question;
}

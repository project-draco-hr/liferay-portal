{
  User user=UserUtil.findByPrimaryKey(userId);
  long groupId=PortalUtil.getPortletGroupId(plid);
  Date now=new Date();
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),new QuestionExpirationDateException());
  }
  validate(title,description,choices);
  long questionId=CounterLocalServiceUtil.increment();
  PollsQuestion question=PollsQuestionUtil.create(questionId);
  question.setGroupId(groupId);
  question.setCompanyId(user.getCompanyId());
  question.setUserId(user.getUserId());
  question.setUserName(user.getFullName());
  question.setCreateDate(now);
  question.setModifiedDate(now);
  question.setTitle(title);
  question.setDescription(description);
  question.setExpirationDate(expirationDate);
  PollsQuestionUtil.update(question);
  if ((addCommunityPermissions != null) && (addGuestPermissions != null)) {
    addQuestionResources(question,addCommunityPermissions.booleanValue(),addGuestPermissions.booleanValue());
  }
 else {
    addQuestionResources(question,communityPermissions,guestPermissions);
  }
  if (choices != null) {
    Iterator itr=choices.iterator();
    while (itr.hasNext()) {
      PollsChoice choice=(PollsChoice)itr.next();
      PollsChoiceLocalServiceUtil.addChoice(questionId,choice.getName(),choice.getDescription());
    }
  }
  return question;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),new QuestionExpirationDateException());
  }
  validate(title,description,choices);
  PollsQuestion question=pollsQuestionPersistence.findByPrimaryKey(questionId);
  question.setModifiedDate(new Date());
  question.setTitle(title);
  question.setDescription(description);
  question.setExpirationDate(expirationDate);
  pollsQuestionPersistence.update(question);
  int oldChoicesCount=pollsChoicePersistence.countByQuestionId(questionId);
  if (oldChoicesCount != choices.size()) {
    throw new QuestionChoiceException();
  }
  Iterator itr=choices.iterator();
  while (itr.hasNext()) {
    PollsChoice choice=(PollsChoice)itr.next();
    String choiceName=choice.getName();
    String choiceDescription=choice.getDescription();
    choice=pollsChoicePersistence.fetchByQ_N(questionId,choiceName);
    if (choice == null) {
      choice=pollsChoiceLocalService.addChoice(questionId,choice.getName(),choice.getDescription());
    }
    choice.setDescription(choiceDescription);
    pollsChoicePersistence.update(choice);
  }
  return question;
}

{
  boolean commitValue=super.commit();
  if (!commitValue) {
    return false;
  }
  Subject subject=getSubject();
  Set<Principal> principals=subject.getPrincipals();
  principals.add(getPrincipal());
  Set<Object> privateCredentials=subject.getPrivateCredentials();
  privateCredentials.add(getPassword());
  try {
    Principal group=(Principal)InstanceFactory.newInstance(_JGROUP,String.class,"Roles");
    Object role=InstanceFactory.newInstance(_JROLE,String.class,"users");
    MethodKey methodKey=new MethodKey(ClassResolverUtil.resolveByContextClassLoader(_JGROUP),"addMember",role.getClass());
    Method method=methodKey.getMethod();
    method.invoke(group,new Object[]{role});
    principals.add(group);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return commitValue;
}

{
  String text=null;
  ClassLoader portalClassLoader=PortalClassLoaderUtil.getClassLoader();
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    if (contextClassLoader != portalClassLoader) {
      currentThread.setContextClassLoader(portalClassLoader);
    }
    Tika tika=new Tika();
    boolean forkProcess=false;
    if (PropsValues.TEXT_EXTRACTION_FORK_PROCESS_ENABLED) {
      String mimeType=tika.detect(is);
      if (ArrayUtil.contains(PropsValues.TEXT_EXTRACTION_FORK_PROCESS_MIME_TYPES,mimeType)) {
        forkProcess=true;
      }
    }
    if (forkProcess) {
      Future<String> future=ProcessExecutor.execute(ClassPathUtil.getPortalClassPath(),new ExtractTextProcessCallable(getBytes(is)));
      text=future.get();
    }
 else {
      text=tika.parseToString(is);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    if (contextClassLoader != portalClassLoader) {
      currentThread.setContextClassLoader(contextClassLoader);
    }
  }
  if (_log.isInfoEnabled()) {
    if (text == null) {
      _log.info("Text extraction failed for " + fileName);
    }
 else {
      _log.info("Text was extracted for " + fileName);
    }
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Extractor returned text:\n\n" + text);
  }
  if (text == null) {
    text=StringPool.BLANK;
  }
  return text;
}

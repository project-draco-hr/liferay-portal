{
  fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
  int x=fileName.lastIndexOf(StringPool.SLASH);
  int y=fileName.indexOf(StringPool.PERIOD);
  String testPackagePath=StringUtil.replace(fileName.substring(0,x),StringPool.SLASH,StringPool.PERIOD);
  String testName=fileName.substring(x + 1,y);
  String testFileName=basedir + "/" + fileName.substring(0,y)+ ".java";
  StringBundler sb=new StringBundler();
  sb.append("package ");
  sb.append(testPackagePath);
  sb.append(";\n\n");
  sb.append("import com.liferay.portalweb.portal.BaseTests;\n");
  String[] importStatements=getImports(basedir,fileName);
  for (  String importStatement : importStatements) {
    sb.append("import ");
    sb.append(importStatement);
    sb.append(";\n");
  }
  sb.append("\n");
  sb.append("import junit.framework.Test;\n");
  sb.append("import junit.framework.TestSuite;\n");
  sb.append("public class ");
  sb.append(testName);
  sb.append(" extends BaseTests {\n\n");
  sb.append("public static Test suite() {");
  sb.append("TestSuite testSuite = new TestSuite();");
  String xml=FileUtil.read(basedir + "/" + fileName);
  if (testName.indexOf("Tests") == -1) {
    System.out.println(testName + " has an invalid test name");
  }
  x=xml.indexOf("</b></td></tr>");
  y=xml.indexOf("</tbody>");
  xml=xml.substring(x + 15,y);
  x=0;
  y=0;
  while (true) {
    x=xml.indexOf("\">",x);
    y=xml.indexOf("</a>",x);
    if ((x == -1) || (y == -1)) {
      break;
    }
    String step=xml.substring(x + 2,y);
    x+=step.length();
    sb.append("testSuite.addTestSuite(");
    sb.append(step);
    sb.append(".class);");
  }
  sb.append("return testSuite;");
  sb.append("}");
  sb.append("}");
  String content=sb.toString();
  ServiceBuilder.writeFile(new File(testFileName),content);
}

{
  if (isJSPCompiler(name,actions)) {
    return true;
  }
  Class<?> callerClass9=Reflection.getCallerClass(9);
  if (callerClass9 == AbstractMessagingConfigurator.class) {
    logReflect(callerClass9,9);
    return true;
  }
  Class<?> callerClass7=Reflection.getCallerClass(7);
  if (JavaDetector.isIBM() || JavaDetector.isJDK7()) {
    Class<?> callerClass8=Reflection.getCallerClass(8);
    if ((callerClass8.getEnclosingClass() == Class.class) && CheckerUtil.isAccessControllerDoPrivileged(9)) {
      logReflect(callerClass8,8);
      return true;
    }
  }
 else {
    if ((callerClass7.getEnclosingClass() == Class.class) && CheckerUtil.isAccessControllerDoPrivileged(8)) {
      logReflect(callerClass7,7);
      return true;
    }
  }
  if (JavaDetector.isJDK7()) {
    Class<?> callerClass10=Reflection.getCallerClass(10);
    if ((callerClass10.getEnclosingClass() == Thread.class) && CheckerUtil.isAccessControllerDoPrivileged(11)) {
      logReflect(callerClass10,10);
      return true;
    }
  }
 else {
    if ((callerClass9.getEnclosingClass() == Thread.class) && CheckerUtil.isAccessControllerDoPrivileged(10)) {
      logReflect(callerClass9,9);
      return true;
    }
  }
  if (callerClass9 == BasicPropertyAccessor.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (callerClass7 == EntityTuplizerFactory.class) {
    logReflect(callerClass7,7);
    return true;
  }
  if (callerClass9 == ReflectHelper.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (callerClass9 == BeanUtils.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (callerClass9.getEnclosingClass() == SimpleInstantiationStrategy.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (callerClass9.getEnclosingClass() == LocalVariableTableParameterNameDiscoverer.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (callerClass7 == ReflectionUtils.class) {
    logReflect(callerClass7,7);
    return true;
  }
  if (callerClass9 == ReflectionUtils.class) {
    logReflect(callerClass9,9);
    return true;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Rejecting call stack:");
    for (int i=6; i < 11; i++) {
      _log.debug("Frame " + i + " "+ Reflection.getCallerClass(i));
    }
  }
  return false;
}

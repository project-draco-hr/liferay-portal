{
  try {
    String baseDN=PrefsPropsUtil.getString(companyId,PropsUtil.LDAP_BASE_DN);
    LdapContext ctx=PortalLDAPUtil.getContext(companyId);
    if (ctx == null) {
      throw new SystemException("Failed to bind to the LDAP server");
    }
    String filter=PrefsPropsUtil.getString(companyId,PropsUtil.LDAP_AUTH_SEARCH_FILTER);
    if (_log.isDebugEnabled()) {
      _log.debug("Search filter before transformation " + filter);
    }
    filter=StringUtil.replace(filter,new String[]{"@company_id@","@email_address@","@screen_name@"},new String[]{String.valueOf(companyId),StringPool.BLANK,screenName});
    if (_log.isDebugEnabled()) {
      _log.debug("Search filter after transformation " + filter);
    }
    SearchControls cons=new SearchControls(SearchControls.SUBTREE_SCOPE,1,0,null,false,false);
    NamingEnumeration<SearchResult> enu=ctx.search(baseDN,filter,cons);
    if (enu.hasMoreElements()) {
      if (_log.isDebugEnabled()) {
        _log.debug("Search filter returned at least one result");
      }
      Binding binding=enu.nextElement();
      Attributes attrs=ctx.getAttributes(binding.getName());
      return PortalLDAPUtil.importLDAPUser(companyId,ctx,attrs,StringPool.BLANK,true);
    }
 else {
      throw new NoSuchUserException("User " + screenName + " was not found in the LDAP server");
    }
  }
 catch (  Exception e) {
    _log.error("Problem accessing LDAP server ",e);
    throw new SystemException("Problem accessign LDAP server " + e.getMessage());
  }
}

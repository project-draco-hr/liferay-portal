{
  String[] credentials=null;
  try {
    long companyId=PortalUtil.getCompanyId(request);
    if (!PrefsPropsUtil.getBoolean(companyId,PropsKeys.CAS_AUTH_ENABLED,PropsValues.CAS_AUTH_ENABLED)) {
      return credentials;
    }
    HttpSession session=request.getSession();
    String screenName=(String)session.getAttribute(CASFilter.CAS_FILTER_USER);
    if (Validator.isNull(screenName)) {
      return credentials;
    }
    User user=null;
    if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.CAS_IMPORT_FROM_LDAP,PropsValues.CAS_IMPORT_FROM_LDAP)) {
      user=importLDAPUser(companyId,screenName);
    }
    if (Validator.isNull(user)) {
      try {
        user=UserLocalServiceUtil.getUserByScreenName(companyId,screenName);
      }
 catch (      NoSuchUserException nsue) {
        throw nsue;
      }
    }
    String redirect=ParamUtil.getString(request,"redirect");
    if (Validator.isNotNull(redirect)) {
      request.setAttribute(AutoLogin.AUTO_LOGIN_REDIRECT,redirect);
    }
    credentials=new String[3];
    credentials[0]=String.valueOf(user.getUserId());
    credentials[1]=user.getPassword();
    credentials[2]=Boolean.TRUE.toString();
    return credentials;
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return credentials;
}

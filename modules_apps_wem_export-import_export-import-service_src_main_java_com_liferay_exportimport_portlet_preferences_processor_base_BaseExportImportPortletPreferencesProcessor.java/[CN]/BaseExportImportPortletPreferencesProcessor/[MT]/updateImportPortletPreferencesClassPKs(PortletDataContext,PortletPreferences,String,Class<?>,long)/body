{
  String[] oldValues=portletPreferences.getValues(key,null);
  if (oldValues == null) {
    return;
  }
  Map<Long,Long> primaryKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(clazz);
  String[] newValues=new String[oldValues.length];
  for (int i=0; i < oldValues.length; i++) {
    String oldValue=oldValues[i];
    String newValue=oldValue;
    String[] portletPreferencesOldValues=StringUtil.split(oldValue);
    for (    String portletPreferencesOldValue : portletPreferencesOldValues) {
      Long newPrimaryKey=getImportPortletPreferencesNewValue(portletDataContext,clazz,companyGroupId,primaryKeys,portletPreferencesOldValue);
      if (Validator.isNull(newPrimaryKey)) {
        if (_log.isInfoEnabled()) {
          _log.info("Unable to import portlet preferences value " + portletPreferencesOldValue);
        }
      }
 else {
        newValue=StringUtil.replace(newValue,portletPreferencesOldValue,newPrimaryKey.toString());
      }
    }
    newValues[i]=newValue;
  }
  portletPreferences.setValues(key,newValues);
}

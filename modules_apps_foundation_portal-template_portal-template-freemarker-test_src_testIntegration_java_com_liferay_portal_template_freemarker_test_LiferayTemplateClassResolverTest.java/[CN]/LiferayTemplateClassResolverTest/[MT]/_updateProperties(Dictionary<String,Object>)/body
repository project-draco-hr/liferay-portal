{
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  Bundle bundle=FrameworkUtil.getBundle(_liferayTemplateClassResolver.getClass());
  final BundleContext bundleContext=bundle.getBundleContext();
  ServiceListener serviceListener=new ServiceListener(){
    @Override public void serviceChanged(    ServiceEvent serviceEvent){
      ServiceReference<?> serviceReference=serviceEvent.getServiceReference();
      Object service=bundleContext.getService(serviceReference);
      if ((serviceEvent.getType() == ServiceEvent.MODIFIED) && TemplateClassResolver.class.isInstance(service)) {
        countDownLatch.countDown();
      }
    }
  }
;
  bundleContext.addServiceListener(serviceListener);
  try {
    _freemarkerTemplateConfiguration.update(dictionary);
    countDownLatch.await();
  }
  finally {
    bundleContext.removeServiceListener(serviceListener);
  }
}

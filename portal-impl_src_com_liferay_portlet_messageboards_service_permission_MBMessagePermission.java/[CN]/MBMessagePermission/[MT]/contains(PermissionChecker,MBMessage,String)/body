{
  long groupId=message.getGroupId();
  if (message.isPending()) {
    Boolean hasPermission=WorkflowPermissionUtil.hasPermission(permissionChecker,message.getGroupId(),message.getWorkflowClassName(),message.getMessageId(),actionId);
    if (hasPermission != null) {
      return hasPermission.booleanValue();
    }
  }
  if (MBBanLocalServiceUtil.hasBan(groupId,permissionChecker.getUserId())) {
    return false;
  }
  if (actionId.equals(ActionKeys.VIEW) && PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {
    long categoryId=message.getCategoryId();
    if ((categoryId != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) && (categoryId != MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {
      try {
        MBCategory category=MBCategoryLocalServiceUtil.getCategory(categoryId);
        if (!MBCategoryPermission.contains(permissionChecker,category,actionId)) {
          return false;
        }
      }
 catch (      NoSuchCategoryException nsce) {
        if (!message.isInTrashThread()) {
          throw nsce;
        }
      }
    }
  }
  if (permissionChecker.hasOwnerPermission(message.getCompanyId(),MBMessage.class.getName(),message.getRootMessageId(),message.getUserId(),actionId)) {
    return true;
  }
  return permissionChecker.hasPermission(groupId,MBMessage.class.getName(),message.getMessageId(),actionId);
}

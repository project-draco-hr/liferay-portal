{
  List<Fields> fieldsList=new ArrayList<Fields>();
  XPath conditionXPath=null;
  if (condition != null) {
    conditionXPath=_parseCondition(condition);
  }
  DDMStructure ddmStructure=DDMStructureLocalServiceUtil.getDDMStructure(ddmStructureId);
  for (  long classPK : classPKs) {
    DDMContent ddmContent=DDMContentLocalServiceUtil.getContent(classPK);
    Document document=SAXReaderUtil.read(ddmContent.getXml());
    if ((conditionXPath != null) && !conditionXPath.booleanValueOf(document)) {
      continue;
    }
    Fields fields=new Fields();
    Element rootElement=document.getRootElement();
    List<Element> dynamicElementElements=rootElement.elements("dynamic-element");
    for (    Element dynamicElementElement : dynamicElementElements) {
      String fieldName=dynamicElementElement.attributeValue("name");
      String fieldValue=dynamicElementElement.elementText("dynamic-content");
      if (!ddmStructure.hasField(fieldName) || ((fieldNames != null) && !fieldNames.contains(fieldName))) {
        continue;
      }
      String fieldDataType=ddmStructure.getFieldDataType(fieldName);
      Serializable fieldValueSerializable=FieldConstants.getSerializable(fieldDataType,fieldValue);
      Field field=new Field(ddmStructureId,fieldName,fieldValueSerializable);
      fields.put(field);
    }
    fieldsList.add(fields);
  }
  if (orderByComparator != null) {
    Collections.sort(fieldsList,orderByComparator);
  }
  return fieldsList;
}

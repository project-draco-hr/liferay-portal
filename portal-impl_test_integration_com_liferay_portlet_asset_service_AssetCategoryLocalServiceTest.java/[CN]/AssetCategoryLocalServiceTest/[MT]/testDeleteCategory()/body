{
  Map<Locale,String> titleMap=new HashMap<>();
  titleMap.put(LocaleUtil.US,RandomTestUtil.randomString());
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId(),TestPropsValues.getUserId());
  AssetVocabulary assetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(TestPropsValues.getUserId(),_group.getGroupId(),RandomTestUtil.randomString(),titleMap,null,null,serviceContext);
  AssetCategory assetCategory=AssetCategoryLocalServiceUtil.addCategory(TestPropsValues.getUserId(),_group.getGroupId(),RandomTestUtil.randomString(),assetVocabulary.getVocabularyId(),serviceContext);
  serviceContext.setAssetCategoryIds(new long[]{assetCategory.getCategoryId()});
  _organization=OrganizationLocalServiceUtil.addOrganization(TestPropsValues.getUserId(),OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,RandomTestUtil.randomString(),OrganizationConstants.TYPE_REGULAR_ORGANIZATION,0,0,ListTypeConstants.ORGANIZATION_STATUS_DEFAULT,RandomTestUtil.randomString(),true,serviceContext);
  TestAssetIndexer testAssetIndexer=new TestAssetIndexer();
  testAssetIndexer.setExpectedValues(Organization.class.getName(),_organization.getOrganizationId());
  if (_organizationIndexer == null) {
    _organizationIndexer=IndexerRegistryUtil.getIndexer(Organization.class);
  }
  IndexerRegistryUtil.register(testAssetIndexer);
  AssetCategoryLocalServiceUtil.deleteCategory(assetCategory,true);
}

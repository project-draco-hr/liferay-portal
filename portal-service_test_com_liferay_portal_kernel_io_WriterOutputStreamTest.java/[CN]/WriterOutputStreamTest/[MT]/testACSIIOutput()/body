{
  Writer writer=new StringWriter();
  OutputStream outputStream=new WriterOutputStream(writer,StringPool.UTF8,true);
  String[] asciiOutput={"This ","is ","an ","ACSII "," test"};
  byte[][] asciiInput={asciiOutput[0].getBytes(),asciiOutput[1].getBytes(),asciiOutput[2].getBytes(),asciiOutput[3].getBytes(),asciiOutput[4].getBytes()};
  String expectedResult=asciiOutput[0];
  outputStream.write(asciiInput[0]);
  assertEquals(expectedResult,writer.toString());
  expectedResult+=asciiOutput[1];
  outputStream.write(asciiInput[1]);
  assertEquals(expectedResult,writer.toString());
  expectedResult+=asciiOutput[2];
  outputStream.write(asciiInput[2]);
  assertEquals(expectedResult,writer.toString());
  expectedResult+=asciiOutput[3];
  outputStream.write(asciiInput[3]);
  assertEquals(expectedResult,writer.toString());
  expectedResult+=asciiOutput[4];
  outputStream.write(asciiInput[4]);
  assertEquals(expectedResult,writer.toString());
  writer=new StringWriter();
  outputStream=new WriterOutputStream(writer,StringPool.UTF8,false);
  outputStream.write(asciiInput[0]);
  assertEquals("",writer.toString());
  outputStream.write(asciiInput[1]);
  assertEquals("",writer.toString());
  outputStream.write(asciiInput[2]);
  assertEquals("",writer.toString());
  outputStream.write(asciiInput[3]);
  assertEquals("",writer.toString());
  outputStream.write(asciiInput[4]);
  assertEquals("",writer.toString());
  outputStream.flush();
  assertEquals(expectedResult,writer.toString());
}

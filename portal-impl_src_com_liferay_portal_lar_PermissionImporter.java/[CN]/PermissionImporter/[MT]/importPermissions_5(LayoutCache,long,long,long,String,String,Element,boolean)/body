{
  Resource resource=layoutCache.getResource(companyId,groupId,resourceName,ResourceConstants.SCOPE_INDIVIDUAL,resourcePrimKey,portletActions);
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  List<Element> roleEls=permissionsEl.elements("role");
  for (  Element roleEl : roleEls) {
    String name=roleEl.attributeValue("name");
    Role role=layoutCache.getRole(companyId,name);
    if (role == null) {
      String description=roleEl.attributeValue("description");
      int type=Integer.valueOf(roleEl.attributeValue("type"));
      if ((type == RoleConstants.TYPE_COMMUNITY) && group.isOrganization()) {
        type=RoleConstants.TYPE_ORGANIZATION;
      }
 else       if ((type == RoleConstants.TYPE_ORGANIZATION) && group.isCommunity()) {
        type=RoleConstants.TYPE_COMMUNITY;
      }
      role=RoleLocalServiceUtil.addRole(userId,companyId,name,null,description,type);
    }
    List<String> actions=getActions(roleEl);
    PermissionLocalServiceUtil.setRolePermissions(role.getRoleId(),actions.toArray(new String[actions.size()]),resource.getResourceId());
  }
}

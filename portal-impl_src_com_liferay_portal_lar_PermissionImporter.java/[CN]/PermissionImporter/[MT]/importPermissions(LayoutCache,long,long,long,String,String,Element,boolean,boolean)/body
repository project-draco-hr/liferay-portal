{
  Map<Long,String[]> roleIdsToActionIds=new HashMap<Long,String[]>();
  List<Element> roleElements=permissionsElement.elements("role");
  for (  Element roleElement : roleElements) {
    String name=roleElement.attributeValue("name");
    int type=GetterUtil.getInteger(roleElement.attributeValue("type"));
    Role role=null;
    if (name.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) {
      name=name.substring(PermissionExporter.ROLE_TEAM_PREFIX.length());
      String description=roleElement.attributeValue("description");
      Team team=null;
      try {
        team=TeamLocalServiceUtil.getTeam(groupId,name);
      }
 catch (      NoSuchTeamException nste) {
        team=TeamLocalServiceUtil.addTeam(userId,groupId,name,description);
      }
      role=RoleLocalServiceUtil.getTeamRole(companyId,team.getTeamId());
    }
 else {
      role=layoutCache.getRole(companyId,name);
    }
    if (role == null) {
      String title=roleElement.attributeValue("title");
      Map<Locale,String> titleMap=LocalizationUtil.getLocalizationMap(title);
      String description=roleElement.attributeValue("description");
      Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(description);
      role=RoleLocalServiceUtil.addRole(userId,companyId,name,titleMap,descriptionMap,type);
    }
    String roleName=role.getName();
    if (!privateLayout || !roleName.equals(RoleConstants.GUEST)) {
      List<String> actions=getActions(roleElement);
      roleIdsToActionIds.put(role.getRoleId(),actions.toArray(new String[actions.size()]));
    }
  }
  if (roleIdsToActionIds.isEmpty()) {
    return;
  }
  ResourcePermissionLocalServiceUtil.setResourcePermissions(companyId,resourceName,ResourceConstants.SCOPE_INDIVIDUAL,resourcePrimKey,roleIdsToActionIds);
}

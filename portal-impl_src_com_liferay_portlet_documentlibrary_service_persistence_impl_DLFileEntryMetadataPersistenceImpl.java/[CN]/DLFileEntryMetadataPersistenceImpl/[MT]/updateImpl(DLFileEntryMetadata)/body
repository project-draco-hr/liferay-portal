{
  dlFileEntryMetadata=toUnwrappedModel(dlFileEntryMetadata);
  boolean isNew=dlFileEntryMetadata.isNew();
  DLFileEntryMetadataModelImpl dlFileEntryMetadataModelImpl=(DLFileEntryMetadataModelImpl)dlFileEntryMetadata;
  if (Validator.isNull(dlFileEntryMetadata.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    dlFileEntryMetadata.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (dlFileEntryMetadata.isNew()) {
      session.save(dlFileEntryMetadata);
      dlFileEntryMetadata.setNew(false);
    }
 else {
      dlFileEntryMetadata=(DLFileEntryMetadata)session.merge(dlFileEntryMetadata);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DLFileEntryMetadataModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((dlFileEntryMetadataModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryMetadataModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{dlFileEntryMetadataModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((dlFileEntryMetadataModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryMetadataModelImpl.getOriginalFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID,args);
      args=new Object[]{dlFileEntryMetadataModelImpl.getFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID,args);
    }
    if ((dlFileEntryMetadataModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEVERSIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryMetadataModelImpl.getOriginalFileVersionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEVERSIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEVERSIONID,args);
      args=new Object[]{dlFileEntryMetadataModelImpl.getFileVersionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEVERSIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEVERSIONID,args);
    }
  }
  entityCache.putResult(DLFileEntryMetadataModelImpl.ENTITY_CACHE_ENABLED,DLFileEntryMetadataImpl.class,dlFileEntryMetadata.getPrimaryKey(),dlFileEntryMetadata,false);
  clearUniqueFindersCache(dlFileEntryMetadataModelImpl);
  cacheUniqueFindersCache(dlFileEntryMetadataModelImpl,isNew);
  dlFileEntryMetadata.resetOriginalValues();
  return dlFileEntryMetadata;
}

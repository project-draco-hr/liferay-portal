{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  long plid=0;
  long groupId=ParamUtil.getLong(req,"groupId");
  String feedId=ParamUtil.getString(req,"feedId");
  long synFeedId=ParamUtil.getLong(req,"synFeedId");
  String languageId=LanguageUtil.getLanguageId(req);
  String rss=StringPool.BLANK;
  JournalSyndicatedFeed synFeed=null;
  List articles=new ArrayList();
  try {
    if (synFeedId > 0) {
      synFeed=JournalSyndicatedFeedLocalServiceUtil.getSyndicatedFeed(synFeedId);
    }
 else {
      synFeed=JournalSyndicatedFeedLocalServiceUtil.getSyndicatedFeed(groupId,feedId);
    }
    plid=PortalUtil.getPlidIdFromFriendlyURL(themeDisplay.getCompanyId(),synFeed.getTargetLayoutFriendlyUrl());
    if (plid > 0) {
      try {
        layout=LayoutLocalServiceUtil.getLayout(plid);
      }
 catch (      Exception e) {
      }
    }
    String feedURL=themeDisplay.getURLPortal() + PortalUtil.getLayoutFriendlyURL(layout,themeDisplay) + "/journal/rss/"+ synFeed.getId();
    articles=JournalRSSUtil.getArticles(synFeed);
    if (_log.isDebugEnabled()) {
      _log.debug("syndicating " + articles.size() + " articles");
    }
    StringMaker xmlRequest=new StringMaker();
    xmlRequest.append("<request><parameters>");
    xmlRequest.append("<parameter>");
    xmlRequest.append("<name>rss</name>");
    xmlRequest.append("<value>true</value>");
    xmlRequest.append("</parameter>");
    xmlRequest.append("</parameters></request>");
    rss=exportToRSS(synFeed,themeDisplay,layout,languageId,feedURL,articles,xmlRequest.toString());
  }
 catch (  NoSuchSyndicatedFeedException nssfe) {
    _log.error(nssfe.getMessage(),nssfe);
  }
catch (  Exception e) {
    _log.error("Cannot process SyndicatedFeed for " + synFeedId,e);
  }
  return rss.getBytes(StringPool.UTF8);
}

{
  for (  Map.Entry<String,String> threadLocalSourceEntry : _threadLocalSourceMap.entrySet()) {
    String className=threadLocalSourceEntry.getKey();
    String fieldName=threadLocalSourceEntry.getValue();
    Class<?> clazz=classLoader.loadClass(className);
    Field field=ReflectionUtil.getDeclaredField(clazz,fieldName);
    if (!ThreadLocal.class.isAssignableFrom(field.getType())) {
      if (_log.isWarnEnabled()) {
        _log.warn(field.toString() + " is not type of ThreadLocal. Skip binding.");
      }
      continue;
    }
    if (!Modifier.isStatic(field.getModifiers())) {
      if (_log.isWarnEnabled()) {
        _log.warn(field.toString() + " is not a static ThreadLocal. Skip binding.");
      }
      continue;
    }
    ThreadLocal<?> threadLocal=(ThreadLocal<?>)field.get(null);
    if (threadLocal == null) {
      if (_log.isWarnEnabled()) {
        _log.warn(field.toString() + " has not initialized yet. Skip binding.");
      }
      continue;
    }
    _threadLocalSet.add(threadLocal);
  }
}

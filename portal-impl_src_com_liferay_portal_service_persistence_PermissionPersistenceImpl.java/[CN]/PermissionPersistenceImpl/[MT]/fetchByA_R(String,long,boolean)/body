{
  Object[] finderArgs=new Object[]{actionId,new Long(resourceId)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_A_R,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT permission FROM Permission permission WHERE ");
      if (actionId == null) {
        query.append("permission.actionId IS NULL");
      }
 else {
        if (actionId.equals(StringPool.BLANK)) {
          query.append("(permission.actionId IS NULL OR ");
        }
        query.append("permission.actionId = ?");
        if (actionId.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" AND ");
      query.append("permission.resourceId = ?");
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      if (actionId != null) {
        qPos.add(actionId);
      }
      qPos.add(resourceId);
      List<Permission> list=q.list();
      result=list;
      Permission permission=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A_R,finderArgs,list);
      }
 else {
        permission=list.get(0);
        cacheResult(permission);
        if ((permission.getActionId() == null) || !permission.getActionId().equals(actionId) || (permission.getResourceId() != resourceId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A_R,finderArgs,permission);
        }
      }
      return permission;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A_R,finderArgs,new ArrayList<Permission>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Permission)result;
    }
  }
}

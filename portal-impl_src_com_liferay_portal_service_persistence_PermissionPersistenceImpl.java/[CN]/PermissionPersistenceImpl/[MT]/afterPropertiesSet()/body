{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portal.model.Permission")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<Permission>> listenersList=new ArrayList<ModelListener<Permission>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<Permission>)InstanceFactory.newInstance(listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsGroup=new ContainsGroup();
  addGroup=new AddGroup();
  clearGroups=new ClearGroups();
  removeGroup=new RemoveGroup();
  containsRole=new ContainsRole();
  addRole=new AddRole();
  clearRoles=new ClearRoles();
  removeRole=new RemoveRole();
  containsUser=new ContainsUser();
  addUser=new AddUser();
  clearUsers=new ClearUsers();
  removeUser=new RemoveUser();
}

{
  ModelListener<com.liferay.portal.model.Role>[] roleListeners=rolePersistence.getListeners();
  List<com.liferay.portal.model.Role> roles=null;
  if ((listeners.length > 0) || (roleListeners.length > 0)) {
    roles=getRoles(permissionId);
    for (    com.liferay.portal.model.Role role : roles) {
      for (      ModelListener<Permission> listener : listeners) {
        listener.onBeforeRemoveAssociation(permissionId,com.liferay.portal.model.Role.class.getName(),role.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portal.model.Role> listener : roleListeners) {
        listener.onBeforeRemoveAssociation(role.getPrimaryKey(),Permission.class.getName(),permissionId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(permissionId)});
  if ((listeners.length > 0) || (roleListeners.length > 0)) {
    for (    com.liferay.portal.model.Role role : roles) {
      for (      ModelListener<Permission> listener : listeners) {
        listener.onAfterRemoveAssociation(permissionId,com.liferay.portal.model.Role.class.getName(),role.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portal.model.Role> listener : roleListeners) {
        listener.onAfterRemoveAssociation(role.getPrimaryKey(),Permission.class.getName(),permissionId);
      }
    }
  }
}

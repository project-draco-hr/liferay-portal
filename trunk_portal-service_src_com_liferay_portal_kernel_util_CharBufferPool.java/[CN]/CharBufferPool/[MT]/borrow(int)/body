{
  if (!isEnabled()) {
    return new char[size];
  }
  _cleanUpDeadBuffers();
  int poolSize=-1;
  _modifyLock.lock();
  try {
    int index=Collections.binarySearch(_charBufferHoldersPool,new CharBufferHolder(size));
    if (index < 0) {
      index=-(index + 1);
    }
    while (index < _charBufferHoldersPool.size()) {
      CharBufferHolder charBufferHolder=_charBufferHoldersPool.get(index);
      if (charBufferHolder._borrowed) {
        index++;
      }
 else {
        char[] charBuffer=charBufferHolder.get();
        if (charBuffer != null) {
          charBufferHolder._borrowed=true;
          List<CharBufferHolder> borrowedCharBufferHolders=_borrowedCharBufferHoldersThreadLocal.get();
          borrowedCharBufferHolders.add(charBufferHolder);
          return charBuffer;
        }
        _charBufferHoldersPool.remove(index);
      }
    }
  }
  finally {
    poolSize=_charBufferHoldersPool.size();
    _modifyLock.unlock();
  }
  char[] charBuffer=new char[size + (size >> 9)];
  if (poolSize < _MAX_POOL_SIZE) {
    CharBufferHolder charBufferHolder=new CharBufferHolder(charBuffer);
    List<CharBufferHolder> borrowedCharBufferHolders=_borrowedCharBufferHoldersThreadLocal.get();
    borrowedCharBufferHolders.add(charBufferHolder);
  }
  return charBuffer;
}

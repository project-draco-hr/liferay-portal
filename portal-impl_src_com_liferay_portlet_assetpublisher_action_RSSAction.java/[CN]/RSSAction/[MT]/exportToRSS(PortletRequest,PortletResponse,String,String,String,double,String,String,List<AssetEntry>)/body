{
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  SyndFeed syndFeed=new SyndFeedImpl();
  syndFeed.setDescription(GetterUtil.getString(description,name));
  List<SyndEntry> syndEntries=new ArrayList<SyndEntry>();
  syndFeed.setEntries(syndEntries);
  for (  AssetEntry assetEntry : assetEntries) {
    SyndEntry syndEntry=new SyndEntryImpl();
    String author=PortalUtil.getUserName(assetEntry);
    syndEntry.setAuthor(author);
    SyndContent syndContent=new SyndContentImpl();
    syndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);
    String value=null;
    String languageId=LanguageUtil.getLanguageId(portletRequest);
    if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {
      value=StringPool.BLANK;
    }
 else {
      value=assetEntry.getSummary(languageId,true);
    }
    syndContent.setValue(value);
    syndEntry.setDescription(syndContent);
    String link=getEntryURL(portletRequest,portletResponse,linkBehavior,assetEntry);
    syndEntry.setLink(link);
    syndEntry.setPublishedDate(assetEntry.getPublishDate());
    syndEntry.setTitle(assetEntry.getTitle(languageId,true));
    syndEntry.setUpdatedDate(assetEntry.getModifiedDate());
    syndEntry.setUri(syndEntry.getLink());
    syndEntries.add(syndEntry);
  }
  syndFeed.setFeedType(RSSUtil.getFeedType(format,version));
  List<SyndLink> syndLinks=new ArrayList<SyndLink>();
  syndFeed.setLinks(syndLinks);
  SyndLink selfSyndLink=new SyndLinkImpl();
  syndLinks.add(selfSyndLink);
  String feedURL=getFeedURL(portletRequest);
  selfSyndLink.setHref(feedURL);
  selfSyndLink.setRel("self");
  SyndLink alternateSyndLink=new SyndLinkImpl();
  syndLinks.add(alternateSyndLink);
  alternateSyndLink.setHref(PortalUtil.getLayoutFullURL(themeDisplay));
  alternateSyndLink.setRel("alternate");
  syndFeed.setPublishedDate(new Date());
  syndFeed.setTitle(name);
  syndFeed.setUri(feedURL);
  return RSSUtil.export(syndFeed);
}

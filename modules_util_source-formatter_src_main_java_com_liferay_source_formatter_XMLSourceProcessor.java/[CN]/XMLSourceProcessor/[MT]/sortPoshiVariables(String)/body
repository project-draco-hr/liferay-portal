{
  Matcher matcher=_poshiVariablesBlockPattern.matcher(content);
  while (matcher.find()) {
    String previousName=StringPool.BLANK;
    String tabs=StringPool.BLANK;
    Map<String,String> variableLinesMap=new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
    String variableBlock=matcher.group(1);
    variableBlock=variableBlock.trim();
    Matcher variableLineMatcher=_poshiVariableLinePattern.matcher(variableBlock);
    boolean hasUnsortedVariables=false;
    while (variableLineMatcher.find()) {
      if (tabs.equals(StringPool.BLANK)) {
        tabs=variableLineMatcher.group(1);
      }
      String variableLine=variableLineMatcher.group(2);
      String variableName=variableLineMatcher.group(3);
      variableLinesMap.put(variableName,variableLine);
      if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) {
        hasUnsortedVariables=true;
      }
      previousName=variableName;
    }
    if (!hasUnsortedVariables) {
      continue;
    }
    StringBundler sb=new StringBundler();
    for (    Map.Entry<String,String> entry : variableLinesMap.entrySet()) {
      sb.append(tabs);
      sb.append(entry.getValue());
      sb.append("\n");
    }
    String newVariableBlock=sb.toString();
    newVariableBlock=newVariableBlock.trim();
    content=StringUtil.replaceFirst(content,variableBlock,newVariableBlock);
  }
  return content;
}

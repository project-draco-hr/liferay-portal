{
  long mbMessageId=RandomTestUtil.randomLong();
  when(_mbMessage.getMessageId()).thenReturn(mbMessageId);
  long parentMessageId=RandomTestUtil.randomLong();
  when(_mbThread.getRootMessageId()).thenReturn(parentMessageId);
  long threadId=RandomTestUtil.randomLong();
  when(_mbThread.getThreadId()).thenReturn(threadId);
  long userId=RandomTestUtil.randomLong();
  long groupId=RandomTestUtil.randomLong();
  String className=BlogsEntry.class.getName();
  long classPK=RandomTestUtil.randomLong();
  Assert.assertEquals(mbMessageId,_commentManager.addComment(userId,groupId,className,classPK,"__blogName__","__title__","__body__",_serviceContextFunction));
  Mockito.verify(_mbMessageLocalService).getDiscussionMessageDisplay(userId,groupId,className,classPK,WorkflowConstants.STATUS_APPROVED);
  Mockito.verify(_mbMessageLocalService).addDiscussionMessage(Matchers.eq(userId),Matchers.eq("__blogName__"),Matchers.eq(groupId),Matchers.eq(className),Matchers.eq(classPK),Matchers.eq(threadId),Matchers.eq(parentMessageId),Matchers.eq("__title__"),Matchers.eq("__body__"),Matchers.same(_serviceContext));
}

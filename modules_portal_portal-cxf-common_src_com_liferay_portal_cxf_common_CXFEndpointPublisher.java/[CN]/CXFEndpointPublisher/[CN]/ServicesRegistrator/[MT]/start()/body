{
  Dictionary<String,Object> properties=new Hashtable<>();
  Object contextPathObject=_properties.get("contextPath");
  String contextPath=contextPathObject.toString();
  String contextName=contextPath.substring(1);
  contextName=contextName.replace("/",".");
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_NAME,contextName);
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_PATH,contextPath);
  _servletContextHelperServiceRegistration=_bundleContext.registerService(ServletContextHelper.class,new ServletContextHelper(_bundleContext.getBundle()){
  }
,properties);
  CXFNonSpringServlet cxfNonSpringServlet=new CXFNonSpringServlet();
  CXFBusFactory cxfBusFactory=(CXFBusFactory)CXFBusFactory.newInstance(CXFBusFactory.class.getName());
  Bus bus=cxfBusFactory.createBus(_extensions);
  properties=new Hashtable<>();
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT,contextName);
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_NAME,"CXFServlet");
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_PATTERN,"/*");
  cxfNonSpringServlet.setBus(bus);
  _servletServiceRegistration=_bundleContext.registerService(Servlet.class,cxfNonSpringServlet,properties);
  Object authVerifierPropertiesObject=_properties.get("authVerifierProperties");
  if (authVerifierPropertiesObject != null) {
    String[] authVerifierProperties=(String[])authVerifierPropertiesObject;
    properties=new Hashtable<>();
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT,contextName);
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_FILTER_NAME,"AuthVerifierFilter");
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_FILTER_SERVLET,"CXFServlet");
    for (    String authVerifierProperty : authVerifierProperties) {
      String[] authVerifierPropertyParts=authVerifierProperty.split("=");
      properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_FILTER_INIT_PARAM_PREFIX + authVerifierPropertyParts[0],authVerifierPropertyParts[1]);
    }
    _authVerifierFilterServiceRegistration=_bundleContext.registerService(Filter.class,new AuthVerifierFilter(),properties);
    properties=new Hashtable<>();
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT,contextName);
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_FILTER_NAME,"RemoteAccessFilter");
    properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_FILTER_SERVLET,"CXFServlet");
    _remoteAccessFilterServiceRegistration=_bundleContext.registerService(Filter.class,new RemoteAccessFilter(),properties);
  }
  properties=new Hashtable<>();
  properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_PATH,contextPath);
  _busServiceRegistration=_bundleContext.registerService(Bus.class,bus,properties);
}

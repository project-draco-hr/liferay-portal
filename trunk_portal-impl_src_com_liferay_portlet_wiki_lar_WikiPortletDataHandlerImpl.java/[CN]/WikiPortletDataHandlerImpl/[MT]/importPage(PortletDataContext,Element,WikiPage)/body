{
  long userId=portletDataContext.getUserId(page.getUserUuid());
  Map<Long,Long> nodePKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(WikiNode.class);
  long nodeId=MapUtil.getLong(nodePKs,page.getNodeId(),page.getNodeId());
  String content=JournalPortletDataHandlerImpl.importReferencedContent(portletDataContext,pageElement,page.getContent());
  page.setContent(content);
  ServiceContext serviceContext=portletDataContext.createServiceContext(pageElement,page,_NAMESPACE);
  if (page.getStatus() != WorkflowConstants.STATUS_APPROVED) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  }
  WikiPage importedPage=null;
  if (portletDataContext.isDataStrategyMirror()) {
    WikiPage existingPage=WikiPageUtil.fetchByUUID_G(page.getUuid(),portletDataContext.getScopeGroupId());
    if (existingPage == null) {
      try {
        existingPage=WikiPageLocalServiceUtil.getPage(nodeId,page.getTitle());
      }
 catch (      NoSuchPageException nspe) {
      }
    }
    if (existingPage == null) {
      serviceContext.setUuid(page.getUuid());
      importedPage=WikiPageLocalServiceUtil.addPage(userId,nodeId,page.getTitle(),page.getVersion(),page.getContent(),page.getSummary(),true,page.getFormat(),page.getHead(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
    }
 else {
      importedPage=WikiPageLocalServiceUtil.updatePage(userId,nodeId,existingPage.getTitle(),0,page.getContent(),page.getSummary(),true,page.getFormat(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
    }
  }
 else {
    importedPage=WikiPageLocalServiceUtil.addPage(userId,nodeId,page.getTitle(),page.getVersion(),page.getContent(),page.getSummary(),true,page.getFormat(),page.getHead(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"attachments") && page.isHead()) {
    for (    Element attachmentElement : pageElement.elements("attachment")) {
      String name=attachmentElement.attributeValue("name");
      String binPath=attachmentElement.attributeValue("bin-path");
      InputStream inputStream=portletDataContext.getZipEntryAsInputStream(binPath);
      WikiPageLocalServiceUtil.addPageAttachment(importedPage.getCompanyId(),importedPage.getAttachmentsDir(),importedPage.getModifiedDate(),name,inputStream);
    }
  }
  portletDataContext.importClassedModel(page,importedPage,_NAMESPACE);
}

{
  StopWatch stopWatch=new StopWatch();
  stopWatch.start();
  ElasticsearchConnectionManager elasticsearchConnectionManager=ElasticsearchConnectionManager.getInstance();
  Client client=elasticsearchConnectionManager.getClient();
  SearchRequestBuilder searchRequestBuilder=client.prepareSearch(String.valueOf(searchContext.getCompanyId()));
  addFacets(searchRequestBuilder,searchContext);
  addHighlights(searchRequestBuilder,query.getQueryConfig());
  addPagination(searchRequestBuilder,searchContext.getStart(),searchContext.getEnd());
  addSelectedFields(searchRequestBuilder,query.getQueryConfig());
  addSort(searchRequestBuilder,searchContext.getSorts());
  QueryBuilder queryBuilder=QueryBuilders.queryString(query.toString());
  searchRequestBuilder.setQuery(queryBuilder);
  searchRequestBuilder.setTypes(DocumentTypes.LIFERAY);
  SearchRequest searchRequest=searchRequestBuilder.request();
  ActionFuture<SearchResponse> future=client.search(searchRequest);
  SearchResponse searchResponse=future.actionGet();
  updateFacetCollectors(searchContext,searchResponse);
  Hits hits=processSearchHits(searchResponse.getHits(),query.getQueryConfig());
  hits.setQuery(query);
  TimeValue timeValue=searchResponse.getTook();
  hits.setSearchTime((float)timeValue.getSecondsFrac());
  hits.setStart(stopWatch.getStartTime());
  if (_log.isInfoEnabled()) {
    stopWatch.stop();
    _log.info("Searching " + queryBuilder.toString() + " took "+ stopWatch.getTime()+ " ms with the search engine using "+ hits.getSearchTime()+ " s");
  }
  return hits;
}

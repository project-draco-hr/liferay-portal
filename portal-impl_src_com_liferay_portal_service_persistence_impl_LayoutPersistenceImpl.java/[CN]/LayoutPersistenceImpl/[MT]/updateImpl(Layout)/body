{
  layout=toUnwrappedModel(layout);
  boolean isNew=layout.isNew();
  LayoutModelImpl layoutModelImpl=(LayoutModelImpl)layout;
  if (Validator.isNull(layout.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    layout.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (layout.getCreateDate() == null)) {
    if (serviceContext == null) {
      layout.setCreateDate(now);
    }
 else {
      layout.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!layoutModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      layout.setModifiedDate(now);
    }
 else {
      layout.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (layout.isNew()) {
      session.save(layout);
      layout.setNew(false);
    }
 else {
      layout=(Layout)session.merge(layout);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !LayoutModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{layoutModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalUuid(),layoutModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{layoutModelImpl.getUuid(),layoutModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{layoutModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{layoutModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTPROTOTYPEUUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalLayoutPrototypeUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTPROTOTYPEUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTPROTOTYPEUUID,args);
      args=new Object[]{layoutModelImpl.getLayoutPrototypeUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTPROTOTYPEUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTPROTOTYPEUUID,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_SOURCEPROTOTYPELAYOUTUUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalSourcePrototypeLayoutUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_SOURCEPROTOTYPELAYOUTUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_SOURCEPROTOTYPELAYOUTUUID,args);
      args=new Object[]{layoutModelImpl.getSourcePrototypeLayoutUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_SOURCEPROTOTYPELAYOUTUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_SOURCEPROTOTYPELAYOUTUUID,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalGroupId(),layoutModelImpl.getOriginalPrivateLayout()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P,args);
      args=new Object[]{layoutModelImpl.getGroupId(),layoutModelImpl.getPrivateLayout()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalGroupId(),layoutModelImpl.getOriginalPrivateLayout(),layoutModelImpl.getOriginalParentLayoutId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_P,args);
      args=new Object[]{layoutModelImpl.getGroupId(),layoutModelImpl.getPrivateLayout(),layoutModelImpl.getParentLayoutId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_P,args);
    }
    if ((layoutModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutModelImpl.getOriginalGroupId(),layoutModelImpl.getOriginalPrivateLayout(),layoutModelImpl.getOriginalType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_T,args);
      args=new Object[]{layoutModelImpl.getGroupId(),layoutModelImpl.getPrivateLayout(),layoutModelImpl.getType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_P_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_P_T,args);
    }
  }
  entityCache.putResult(LayoutModelImpl.ENTITY_CACHE_ENABLED,LayoutImpl.class,layout.getPrimaryKey(),layout,false);
  clearUniqueFindersCache(layoutModelImpl);
  cacheUniqueFindersCache(layoutModelImpl,isNew);
  layout.resetOriginalValues();
  return layout;
}

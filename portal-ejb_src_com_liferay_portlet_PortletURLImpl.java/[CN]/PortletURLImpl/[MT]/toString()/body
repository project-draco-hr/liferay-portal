{
  if (_toString != null) {
    return _toString;
  }
  StringBuffer sb=new StringBuffer();
  ThemeDisplay themeDisplay=(ThemeDisplay)_req.getAttribute(WebKeys.THEME_DISPLAY);
  PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
  sb.append(PortalUtil.getPortalURL(_req,_secure));
  String layoutFriendlyURL=null;
  try {
    Layout layout=getLayout();
    if (layout != null) {
      layoutFriendlyURL=PortalUtil.getLayoutFriendlyURL(layout,themeDisplay);
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  Key key=null;
  try {
    if (_encrypt) {
      key=PortalUtil.getCompany(_req).getKeyObj();
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  if (Validator.isNull(layoutFriendlyURL)) {
    sb.append(themeDisplay.getPathMain());
    sb.append("/portal/layout?");
    sb.append("p_l_id");
    sb.append(StringPool.EQUAL);
    sb.append(_processValue(key,_plid));
    sb.append(StringPool.AMPERSAND);
  }
 else {
    sb.append(layoutFriendlyURL);
    sb.append(StringPool.QUESTION);
  }
  sb.append("p_p_id");
  sb.append(StringPool.EQUAL);
  sb.append(_processValue(key,_portletName));
  sb.append(StringPool.AMPERSAND);
  sb.append("p_p_action");
  sb.append(StringPool.EQUAL);
  sb.append(_action ? _processValue(key,"1") : _processValue(key,"0"));
  sb.append(StringPool.AMPERSAND);
  if (_windowState != null) {
    sb.append("p_p_state");
    sb.append(StringPool.EQUAL);
    sb.append(_processValue(key,_windowState.toString()));
    sb.append(StringPool.AMPERSAND);
  }
  if (_portletMode != null) {
    sb.append("p_p_mode");
    sb.append(StringPool.EQUAL);
    sb.append(_processValue(key,_portletMode.toString()));
    sb.append(StringPool.AMPERSAND);
  }
  sb.append("p_p_col_id");
  sb.append(StringPool.EQUAL);
  sb.append(_processValue(key,portletDisplay.getColumnId()));
  sb.append(StringPool.AMPERSAND);
  sb.append("p_p_col_pos");
  sb.append(StringPool.EQUAL);
  sb.append(_processValue(key,portletDisplay.getColumnPos()));
  sb.append(StringPool.AMPERSAND);
  sb.append("p_p_col_count");
  sb.append(StringPool.EQUAL);
  sb.append(_processValue(key,portletDisplay.getColumnCount()));
  sb.append(StringPool.AMPERSAND);
  Iterator itr=_params.entrySet().iterator();
  while (itr.hasNext()) {
    Map.Entry entry=(Map.Entry)itr.next();
    String name=PortalUtil.getPortletNamespace(_portletName) + (String)entry.getKey();
    String[] values=(String[])entry.getValue();
    for (int i=0; i < values.length; i++) {
      sb.append(name);
      sb.append(StringPool.EQUAL);
      sb.append(_processValue(key,values[i]));
      if ((i + 1 < values.length) || itr.hasNext()) {
        sb.append(StringPool.AMPERSAND);
      }
    }
  }
  if (_encrypt) {
    sb.append(StringPool.AMPERSAND + WebKeys.ENCRYPT + "=1");
  }
  if (!BrowserSniffer.is_ns_4(_req)) {
    if (_anchor && (_windowState != null) && (!_windowState.equals(WindowState.MAXIMIZED))&& (!_windowState.equals(LiferayWindowState.EXCLUSIVE))&& (!_windowState.equals(LiferayWindowState.POP_UP))) {
      if (sb.lastIndexOf(StringPool.AMPERSAND) != (sb.length() - 1)) {
        sb.append(StringPool.AMPERSAND);
      }
      sb.append("#p_").append(_portletName);
    }
  }
  _toString=sb.toString();
  return _toString;
}

{
  Object[] finderArgs=new Object[]{new Long(questionId),new Long(userId)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_Q_U,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("FROM com.liferay.portlet.polls.model.PollsVote WHERE ");
      query.append("questionId = ?");
      query.append(" AND ");
      query.append("userId = ?");
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(questionId);
      qPos.add(userId);
      List<PollsVote> list=q.list();
      result=list;
      PollsVote pollsVote=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_Q_U,finderArgs,list);
      }
 else {
        pollsVote=list.get(0);
        cacheResult(pollsVote);
        if ((pollsVote.getQuestionId() != questionId) || (pollsVote.getUserId() != userId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_Q_U,finderArgs,list);
        }
      }
      return pollsVote;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_Q_U,finderArgs,new ArrayList<PollsVote>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List) {
      return null;
    }
 else {
      return (PollsVote)result;
    }
  }
}

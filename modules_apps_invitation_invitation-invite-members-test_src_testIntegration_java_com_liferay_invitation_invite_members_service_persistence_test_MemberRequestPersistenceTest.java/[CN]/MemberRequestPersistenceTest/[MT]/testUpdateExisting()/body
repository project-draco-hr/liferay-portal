{
  long pk=RandomTestUtil.nextLong();
  MemberRequest newMemberRequest=_persistence.create(pk);
  newMemberRequest.setGroupId(RandomTestUtil.nextLong());
  newMemberRequest.setCompanyId(RandomTestUtil.nextLong());
  newMemberRequest.setUserId(RandomTestUtil.nextLong());
  newMemberRequest.setUserName(RandomTestUtil.randomString());
  newMemberRequest.setCreateDate(RandomTestUtil.nextDate());
  newMemberRequest.setModifiedDate(RandomTestUtil.nextDate());
  newMemberRequest.setKey(RandomTestUtil.randomString());
  newMemberRequest.setReceiverUserId(RandomTestUtil.nextLong());
  newMemberRequest.setInvitedRoleId(RandomTestUtil.nextLong());
  newMemberRequest.setInvitedTeamId(RandomTestUtil.nextLong());
  newMemberRequest.setStatus(RandomTestUtil.nextInt());
  _memberRequests.add(_persistence.update(newMemberRequest));
  MemberRequest existingMemberRequest=_persistence.findByPrimaryKey(newMemberRequest.getPrimaryKey());
  Assert.assertEquals(existingMemberRequest.getMemberRequestId(),newMemberRequest.getMemberRequestId());
  Assert.assertEquals(existingMemberRequest.getGroupId(),newMemberRequest.getGroupId());
  Assert.assertEquals(existingMemberRequest.getCompanyId(),newMemberRequest.getCompanyId());
  Assert.assertEquals(existingMemberRequest.getUserId(),newMemberRequest.getUserId());
  Assert.assertEquals(existingMemberRequest.getUserName(),newMemberRequest.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMemberRequest.getCreateDate()),Time.getShortTimestamp(newMemberRequest.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMemberRequest.getModifiedDate()),Time.getShortTimestamp(newMemberRequest.getModifiedDate()));
  Assert.assertEquals(existingMemberRequest.getKey(),newMemberRequest.getKey());
  Assert.assertEquals(existingMemberRequest.getReceiverUserId(),newMemberRequest.getReceiverUserId());
  Assert.assertEquals(existingMemberRequest.getInvitedRoleId(),newMemberRequest.getInvitedRoleId());
  Assert.assertEquals(existingMemberRequest.getInvitedTeamId(),newMemberRequest.getInvitedTeamId());
  Assert.assertEquals(existingMemberRequest.getStatus(),newMemberRequest.getStatus());
}

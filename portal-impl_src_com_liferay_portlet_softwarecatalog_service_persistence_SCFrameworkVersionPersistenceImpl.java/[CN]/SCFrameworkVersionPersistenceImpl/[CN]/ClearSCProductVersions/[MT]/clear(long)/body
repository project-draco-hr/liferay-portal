{
  ModelListener[] scProductVersionListeners=scProductVersionPersistence.getListeners();
  List<com.liferay.portlet.softwarecatalog.model.SCProductVersion> scProductVersions=null;
  if ((listeners.length > 0) || (scProductVersionListeners.length > 0)) {
    scProductVersions=getSCProductVersions(frameworkVersionId);
    for (    com.liferay.portlet.softwarecatalog.model.SCProductVersion scProductVersion : scProductVersions) {
      for (      ModelListener listener : listeners) {
        listener.onBeforeRemoveAssociation(frameworkVersionId,com.liferay.portlet.softwarecatalog.model.SCProductVersion.class.getName(),scProductVersion.getPrimaryKey());
      }
      for (      ModelListener listener : scProductVersionListeners) {
        listener.onBeforeRemoveAssociation(scProductVersion.getPrimaryKey(),SCFrameworkVersion.class.getName(),frameworkVersionId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(frameworkVersionId)});
  if ((listeners.length > 0) || (scProductVersionListeners.length > 0)) {
    for (    com.liferay.portlet.softwarecatalog.model.SCProductVersion scProductVersion : scProductVersions) {
      for (      ModelListener listener : listeners) {
        listener.onAfterRemoveAssociation(frameworkVersionId,com.liferay.portlet.softwarecatalog.model.SCProductVersion.class.getName(),scProductVersion.getPrimaryKey());
      }
      for (      ModelListener listener : scProductVersionListeners) {
        listener.onBeforeRemoveAssociation(scProductVersion.getPrimaryKey(),SCFrameworkVersion.class.getName(),frameworkVersionId);
      }
    }
  }
}

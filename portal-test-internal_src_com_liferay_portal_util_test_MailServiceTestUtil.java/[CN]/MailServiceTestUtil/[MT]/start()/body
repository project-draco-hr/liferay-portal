{
  if (_smtpServer != null) {
    throw new IllegalStateException("Server is already running");
  }
  try {
    _prefsPropsReplacement=new PrefsPropsTemporarySwapper(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT,7890,PropsKeys.MAIL_SESSION_MAIL,true);
    _smtpServer=new SmtpServer();
    _smtpServer.setMailStore(new RollingMailStore(){
      @Override public void addMessage(      MailMessage message){
        try {
          List<MailMessage> receivedMail=ReflectionTestUtil.getFieldValue(this,"receivedMail");
          receivedMail.add(message);
          if (getEmailCount() > 100) {
            receivedMail.remove(0);
          }
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    _smtpServer.setPort(PrefsPropsUtil.getInteger(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT,PropsValues.MAIL_SESSION_MAIL_SMTP_PORT));
    _smtpServer.setThreaded(false);
    ReflectionTestUtil.invoke(SmtpServerFactory.class,"startServerThread",new Class<?>[]{SmtpServer.class},_smtpServer);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

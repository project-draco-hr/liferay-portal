{
  if (_smtpServer != null) {
    throw new IllegalStateException("Server is already running");
  }
  _smtpServer=new SmtpServer();
  _smtpServer.setMailStore(new RollingMailStore(){
    @Override public void addMessage(    MailMessage message){
      try {
        List<MailMessage> receivedMail=ReflectionTestUtil.getFieldValue(this,"receivedMail");
        receivedMail.add(message);
        if (getEmailCount() > 100) {
          receivedMail.remove(0);
        }
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  _smtpServer.setPort(PrefsPropsUtil.getInteger(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT,PropsValues.MAIL_SESSION_MAIL_SMTP_PORT));
  _smtpServer.setThreaded(false);
  try {
    ReflectionTestUtil.invoke(SmtpServerFactory.class,"startServerThread",new Class<?>[]{SmtpServer.class},_smtpServer);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

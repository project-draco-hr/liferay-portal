{
  PortletPreferences prefs=req.getPreferences();
  String messageId=ParamUtil.getString(req,"messageId");
  String categoryId=ParamUtil.getString(req,"categoryId");
  String threadId=ParamUtil.getString(req,"threadId");
  String parentMessageId=ParamUtil.getString(req,"parentMessageId");
  String subject=ParamUtil.getString(req,"subject");
  String body=ParamUtil.getString(req,"body");
  boolean attachments=ParamUtil.getBoolean(req,"attachments");
  List files=new ArrayList();
  if (attachments) {
    UploadPortletRequest uploadReq=PortalUtil.getUploadPortletRequest(req);
    for (int i=1; i <= 5; i++) {
      File file=uploadReq.getFile("msgFile" + i);
      String fileName=uploadReq.getFileName("msgFile" + i);
      byte[] bytes=FileUtil.getBytes(file);
      if ((bytes != null) && (bytes.length > 0)) {
        ObjectValuePair ovp=new ObjectValuePair(fileName,bytes);
        files.add(ovp);
      }
    }
  }
  boolean anonymous=ParamUtil.getBoolean(req,"anonymous");
  double priority=ParamUtil.getDouble(req,"priority");
  String[] tagsEntries=StringUtil.split(ParamUtil.getString(req,"tagsEntries"));
  String[] communityPermissions=req.getParameterValues("communityPermissions");
  String[] guestPermissions=req.getParameterValues("guestPermissions");
  MBMessage message=null;
  if (Validator.isNull(messageId)) {
    CaptchaUtil.check(req);
    if (Validator.isNull(threadId)) {
      message=MBMessageServiceUtil.addMessage(categoryId,subject,body,files,anonymous,priority,tagsEntries,prefs,communityPermissions,guestPermissions);
    }
 else {
      message=MBMessageServiceUtil.addMessage(categoryId,threadId,parentMessageId,subject,body,files,anonymous,priority,tagsEntries,prefs,communityPermissions,guestPermissions);
    }
  }
 else {
    message=MBMessageServiceUtil.updateMessage(messageId,categoryId,subject,body,files,priority,tagsEntries,prefs);
  }
  PortletURL portletURL=((ActionResponseImpl)res).createRenderURL();
  portletURL.setParameter("struts_action","/message_boards/view_message");
  portletURL.setParameter("messageId",message.getMessageId());
  res.sendRedirect(portletURL.toString());
}

{
  long pk=nextLong();
  JournalFolder newJournalFolder=_persistence.create(pk);
  newJournalFolder.setUuid(randomString());
  newJournalFolder.setGroupId(nextLong());
  newJournalFolder.setCompanyId(nextLong());
  newJournalFolder.setUserId(nextLong());
  newJournalFolder.setUserName(randomString());
  newJournalFolder.setCreateDate(nextDate());
  newJournalFolder.setModifiedDate(nextDate());
  newJournalFolder.setParentFolderId(nextLong());
  newJournalFolder.setName(randomString());
  newJournalFolder.setDescription(randomString());
  _persistence.update(newJournalFolder,false);
  JournalFolder existingJournalFolder=_persistence.findByPrimaryKey(newJournalFolder.getPrimaryKey());
  assertEquals(existingJournalFolder.getUuid(),newJournalFolder.getUuid());
  assertEquals(existingJournalFolder.getFolderId(),newJournalFolder.getFolderId());
  assertEquals(existingJournalFolder.getGroupId(),newJournalFolder.getGroupId());
  assertEquals(existingJournalFolder.getCompanyId(),newJournalFolder.getCompanyId());
  assertEquals(existingJournalFolder.getUserId(),newJournalFolder.getUserId());
  assertEquals(existingJournalFolder.getUserName(),newJournalFolder.getUserName());
  assertEquals(Time.getShortTimestamp(existingJournalFolder.getCreateDate()),Time.getShortTimestamp(newJournalFolder.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingJournalFolder.getModifiedDate()),Time.getShortTimestamp(newJournalFolder.getModifiedDate()));
  assertEquals(existingJournalFolder.getParentFolderId(),newJournalFolder.getParentFolderId());
  assertEquals(existingJournalFolder.getName(),newJournalFolder.getName());
  assertEquals(existingJournalFolder.getDescription(),newJournalFolder.getDescription());
}

{
  Map<String,String> parameters=new HashMap<>();
  parameters.put(SessionParameter.ATOMPUB_URL,cmisStoreConfiguration.repositoryUrl());
  parameters.put(SessionParameter.BINDING_TYPE,BindingType.ATOMPUB.value());
  parameters.put(SessionParameter.COMPRESSION,Boolean.TRUE.toString());
  Locale locale=LocaleUtil.getDefault();
  parameters.put(SessionParameter.LOCALE_ISO3166_COUNTRY,locale.getCountry());
  parameters.put(SessionParameter.LOCALE_ISO639_LANGUAGE,locale.getLanguage());
  parameters.put(SessionParameter.PASSWORD,cmisStoreConfiguration.credentialsPassword());
  parameters.put(SessionParameter.USER,cmisStoreConfiguration.credentialsUsername());
  Thread thread=Thread.currentThread();
  ClassLoader contextClassLoader=thread.getContextClassLoader();
  BundleWiring bundleWiring=bundle.adapt(BundleWiring.class);
  ClassLoader bundleClassLoader=bundleWiring.getClassLoader();
  thread.setContextClassLoader(bundleClassLoader);
  try {
    List<Repository> repositories=sessionFactory.getRepositories(parameters);
    Repository repository=repositories.get(0);
    Session session=repository.createSession();
    session.setDefaultContext(operationContext);
    return session;
  }
  finally {
    thread.setContextClassLoader(contextClassLoader);
  }
}

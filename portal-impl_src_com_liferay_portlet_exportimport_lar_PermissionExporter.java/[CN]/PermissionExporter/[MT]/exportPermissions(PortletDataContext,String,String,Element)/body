{
  List<String> actionIds=ResourceActionsUtil.getPortletResourceActions(resourceName);
  Map<Long,Set<String>> roleToActionIds=ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(portletDataContext.getCompanyId(),resourceName,ResourceConstants.SCOPE_INDIVIDUAL,resourcePrimKey,actionIds);
  for (  Map.Entry<Long,Set<String>> entry : roleToActionIds.entrySet()) {
    long roleId=entry.getKey();
    Role role=RoleLocalServiceUtil.fetchRole(roleId);
    Element roleElement=permissionsElement.addElement("role");
    roleElement.addAttribute("name",role.getName());
    roleElement.addAttribute("title",role.getTitle());
    roleElement.addAttribute("description",role.getDescription());
    roleElement.addAttribute("type",String.valueOf(role.getType()));
    roleElement.addAttribute("subtype",role.getSubtype());
    roleElement.addAttribute("uuid",role.getUuid());
    Set<String> availableActionIds=entry.getValue();
    for (    String actionId : availableActionIds) {
      Element actionKeyElement=roleElement.addElement("action-key");
      actionKeyElement.addText(actionId);
    }
  }
}

{
  webDAVProps=toUnwrappedModel(webDAVProps);
  boolean isNew=webDAVProps.isNew();
  WebDAVPropsModelImpl webDAVPropsModelImpl=(WebDAVPropsModelImpl)webDAVProps;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,webDAVProps,merge);
    webDAVProps.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WebDAVPropsModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
  EntityCacheUtil.putResult(WebDAVPropsModelImpl.ENTITY_CACHE_ENABLED,WebDAVPropsImpl.class,webDAVProps.getPrimaryKey(),webDAVProps);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,new Object[]{Long.valueOf(webDAVProps.getClassNameId()),Long.valueOf(webDAVProps.getClassPK())},webDAVProps);
  }
 else {
    if ((webDAVPropsModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(webDAVPropsModelImpl.getOriginalClassNameId()),Long.valueOf(webDAVPropsModelImpl.getOriginalClassPK())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_C_C,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,new Object[]{Long.valueOf(webDAVProps.getClassNameId()),Long.valueOf(webDAVProps.getClassPK())},webDAVProps);
    }
  }
  return webDAVProps;
}

{
  boolean isNew=webDAVProps.isNew();
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,webDAVProps,merge);
    webDAVProps.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  WebDAVPropsModelImpl webDAVPropsModelImpl=(WebDAVPropsModelImpl)webDAVProps;
  if (!isNew && ((webDAVProps.getClassNameId() != webDAVPropsModelImpl.getOriginalClassNameId()) || (webDAVProps.getClassPK() != webDAVPropsModelImpl.getOriginalClassPK()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_C_C,new Object[]{new Long(webDAVPropsModelImpl.getOriginalClassNameId()),new Long(webDAVPropsModelImpl.getOriginalClassPK())});
  }
  if (isNew || ((webDAVProps.getClassNameId() != webDAVPropsModelImpl.getOriginalClassNameId()) || (webDAVProps.getClassPK() != webDAVPropsModelImpl.getOriginalClassPK()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C,new Object[]{new Long(webDAVProps.getClassNameId()),new Long(webDAVProps.getClassPK())},webDAVProps);
  }
  EntityCacheUtil.putResult(WebDAVPropsModelImpl.ENTITY_CACHE_ENABLED,WebDAVProps.class,webDAVProps.getPrimaryKey(),webDAVProps);
  return webDAVProps;
}

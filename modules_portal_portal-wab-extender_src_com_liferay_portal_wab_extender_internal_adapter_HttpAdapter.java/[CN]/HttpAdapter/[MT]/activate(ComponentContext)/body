{
  BundleContext bundleContext=componentContext.getBundleContext();
  _httpServiceServlet=new HttpServiceServlet(){
    @Override public ServletConfig getServletConfig(){
      return _servletConfig;
    }
    @Override public void init(    ServletConfig servletConfig){
      _servletConfig=servletConfig;
    }
    private ServletConfig _servletConfig;
  }
;
  ServletConfig servletConfig=new ServletConfig(){
    @Override public String getServletName(){
      return "Module Framework Servlet";
    }
    @Override public ServletContext getServletContext(){
      return _servletContext;
    }
    @Override public Enumeration<String> getInitParameterNames(){
      return _servletContext.getInitParameterNames();
    }
    @Override public String getInitParameter(    String name){
      return _servletContext.getInitParameter(name);
    }
  }
;
  try {
    _httpServiceServlet.init(servletConfig);
  }
 catch (  ServletException se) {
    _servletContext.log(se.getMessage(),se);
    return;
  }
  Dictionary<String,Object> properties=new HashMapDictionary<>();
  properties.put("bean.id",HttpServlet.class.getName());
  properties.put("original.bean",Boolean.TRUE.toString());
  _serviceRegistration=bundleContext.registerService(new String[]{HttpServiceServlet.class.getName(),HttpServlet.class.getName()},_httpServiceServlet,properties);
}

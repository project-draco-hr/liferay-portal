{
  try {
    _variableMap=new HashMap<>();
    Matcher matcher=_stringPattern.matcher(_expression);
    while (matcher.find()) {
      createStringVariable(matcher.group(1));
    }
    Iterator<String> tokenIterator=getExpressionTokens();
    while (tokenIterator.hasNext()) {
      String token=tokenIterator.next();
      if (isFunction(token) && !isFunctionAllowed(token)) {
        throw new DDMExpressionException.FunctionNotAllowed(token);
      }
      if (!isOperator(token) && !isFunctionAllowed(token) && !isBooleanConstant(token)) {
        Matcher variableMatcher=_variablePattern.matcher(token);
        if (variableMatcher.matches()) {
          if (!_variableMap.containsKey(token)) {
            _variableMap.put(token,token);
          }
        }
 else {
          createVariable(token);
        }
      }
    }
    return _variableMap;
  }
 catch (  ExpressionException ee) {
    throw new DDMExpressionException(ee);
  }
}

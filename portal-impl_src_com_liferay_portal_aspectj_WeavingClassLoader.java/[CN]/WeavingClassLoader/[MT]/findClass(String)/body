{
  String resourcePath=name.replace('.','/');
  resourcePath=resourcePath.concat(".class");
  InputStream inputStream=getResourceAsStream(resourcePath);
  byte[] data=null;
  try {
    if (inputStream == null) {
      data=_weavingAdaptor.removeGeneratedClassDate(name);
    }
 else {
      UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
      StreamUtil.transfer(inputStream,unsyncByteArrayOutputStream,true);
      data=unsyncByteArrayOutputStream.toByteArray();
    }
    if (data != null) {
      byte[] oldData=data;
      data=_weavingAdaptor.weaveClass(name,data,false);
      if (!Arrays.equals(oldData,data)) {
        if (_dumpFolder != null) {
          File dumpFile=new File(_dumpFolder,resourcePath);
          File folder=dumpFile.getParentFile();
          folder.mkdirs();
          FileOutputStream fileOutputStream=new FileOutputStream(dumpFile);
          fileOutputStream.write(data);
          fileOutputStream.close();
          if (_log.isInfoEnabled()) {
            _log.info("Woven class " + name + ", dump woven result into "+ dumpFile.getCanonicalPath());
          }
        }
 else {
          if (_log.isInfoEnabled()) {
            _log.info("Woven class " + name);
          }
        }
      }
      return _generateClass(name,data);
    }
 else {
      throw new ClassNotFoundException(name);
    }
  }
 catch (  IOException ioe) {
    throw new ClassNotFoundException(name,ioe);
  }
}

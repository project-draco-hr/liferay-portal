{
  MultiVMPool multiVMPool=Mockito.mock(MultiVMPool.class);
  final PortalCacheManager<? extends Serializable,? extends Serializable> portalCacheManager=TestPortalCacheManager.createTestPortalCacheManager(RandomTestUtil.randomString());
  Mockito.when(multiVMPool.getCache(Mockito.anyString())).thenAnswer(new Answer<PortalCache<? extends Serializable,? extends Serializable>>(){
    @Override public PortalCache<? extends Serializable,? extends Serializable> answer(    InvocationOnMock invocationOnMock) throws Throwable {
      return portalCacheManager.getCache(RandomTestUtil.randomString());
    }
  }
);
  setMultiVMPool(multiVMPool);
  SingleVMPool singleVMPool=Mockito.mock(SingleVMPool.class);
  Mockito.when(singleVMPool.getCache(Mockito.anyString())).thenAnswer(new Answer<PortalCache<? extends Serializable,? extends Serializable>>(){
    @Override public PortalCache<? extends Serializable,? extends Serializable> answer(    InvocationOnMock invocationOnMock) throws Throwable {
      return portalCacheManager.getCache("test");
    }
  }
);
  setSingleVMPool(singleVMPool);
  super.activate(properties);
}

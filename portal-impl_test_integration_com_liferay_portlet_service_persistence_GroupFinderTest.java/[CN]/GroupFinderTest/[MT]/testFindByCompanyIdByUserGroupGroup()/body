{
  _userGroup=UserGroupTestUtil.addUserGroup();
  _userGroupGroup=GroupTestUtil.addGroup();
  _userGroupUser=UserTestUtil.addUser();
  GroupLocalServiceUtil.addUserGroupGroup(_userGroup.getUserGroupId(),_userGroupGroup.getGroupId());
  UserGroupLocalServiceUtil.addUserUserGroup(_userGroupUser.getUserId(),_userGroup);
  LinkedHashMap<String,Object> groupParams=new LinkedHashMap<>();
  groupParams.put("inherit",Boolean.TRUE);
  groupParams.put("site",Boolean.TRUE);
  groupParams.put("usersGroups",_userGroupUser.getUserId());
  List<Group> groups=GroupFinderUtil.findByCompanyId(TestPropsValues.getCompanyId(),groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new GroupNameComparator(true));
  boolean exists=false;
  for (  Group group : groups) {
    if (group.getGroupId() == _userGroupGroup.getGroupId()) {
      exists=true;
      break;
    }
  }
  Assert.assertTrue("The method findByCompanyId should have returned the group " + _userGroupGroup.getGroupId(),exists);
}

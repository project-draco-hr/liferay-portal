{
  MBMessageDisplay messageDisplay=_mbMessageLocalService.getDiscussionMessageDisplay(userId,groupId,className,classPK,WorkflowConstants.STATUS_ANY,new MessageThreadComparator());
  MBTreeWalker treeWalker=messageDisplay.getTreeWalker();
  List<MBMessage> messages=treeWalker.getMessages();
  List<RatingsEntry> ratingsEntries=Collections.emptyList();
  List<RatingsStats> ratingsStats=Collections.emptyList();
  if (messages.size() > 1) {
    List<Long> classPKs=new ArrayList<>();
    for (    MBMessage curMessage : messages) {
      if (!curMessage.isRoot()) {
        classPKs.add(curMessage.getMessageId());
      }
    }
    ratingsEntries=_ratingsEntryLocalService.getEntries(userId,CommentConstants.getDiscussionClassName(),classPKs);
    ratingsStats=_ratingsStatsLocalService.getStats(CommentConstants.getDiscussionClassName(),classPKs);
  }
  ServiceContext serviceContext=serviceContextFunction.apply(MBMessage.class.getName());
  ThemeDisplay themeDisplay=serviceContext.getThemeDisplay();
  DiscussionComment rootDiscussionComment=new MBDiscussionCommentImpl(treeWalker.getRoot(),treeWalker,ratingsEntries,ratingsStats,themeDisplay.getPathThemeImages());
  return new MBDiscussionImpl(rootDiscussionComment,messageDisplay.isDiscussionMaxComments());
}

{
  DLFileEntry newDLFileEntry=addDLFileEntry();
  _persistence.clearCache();
  DLFileEntry existingDLFileEntry=_persistence.findByPrimaryKey(newDLFileEntry.getPrimaryKey());
  Assert.assertTrue(Validator.equals(existingDLFileEntry.getUuid(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(existingDLFileEntry.getGroupId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFileEntry.getGroupId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFileEntry.getFolderId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalFolderId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingDLFileEntry.getName(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(existingDLFileEntry.getGroupId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFileEntry.getFolderId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalFolderId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingDLFileEntry.getFileName(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalFileName",new Class<?>[0])));
  Assert.assertEquals(existingDLFileEntry.getGroupId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingDLFileEntry.getFolderId(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalFolderId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingDLFileEntry.getTitle(),ReflectionTestUtil.invoke(existingDLFileEntry,"getOriginalTitle",new Class<?>[0])));
}

{
  long pk=RandomTestUtil.nextLong();
  App newApp=_persistence.create(pk);
  newApp.setUuid(RandomTestUtil.randomString());
  newApp.setCompanyId(RandomTestUtil.nextLong());
  newApp.setUserId(RandomTestUtil.nextLong());
  newApp.setUserName(RandomTestUtil.randomString());
  newApp.setCreateDate(RandomTestUtil.nextDate());
  newApp.setModifiedDate(RandomTestUtil.nextDate());
  newApp.setRemoteAppId(RandomTestUtil.nextLong());
  newApp.setTitle(RandomTestUtil.randomString());
  newApp.setDescription(RandomTestUtil.randomString());
  newApp.setCategory(RandomTestUtil.randomString());
  newApp.setIconURL(RandomTestUtil.randomString());
  newApp.setVersion(RandomTestUtil.randomString());
  newApp.setRequired(RandomTestUtil.randomBoolean());
  _apps.add(_persistence.update(newApp));
  App existingApp=_persistence.findByPrimaryKey(newApp.getPrimaryKey());
  Assert.assertEquals(existingApp.getUuid(),newApp.getUuid());
  Assert.assertEquals(existingApp.getAppId(),newApp.getAppId());
  Assert.assertEquals(existingApp.getCompanyId(),newApp.getCompanyId());
  Assert.assertEquals(existingApp.getUserId(),newApp.getUserId());
  Assert.assertEquals(existingApp.getUserName(),newApp.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingApp.getCreateDate()),Time.getShortTimestamp(newApp.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingApp.getModifiedDate()),Time.getShortTimestamp(newApp.getModifiedDate()));
  Assert.assertEquals(existingApp.getRemoteAppId(),newApp.getRemoteAppId());
  Assert.assertEquals(existingApp.getTitle(),newApp.getTitle());
  Assert.assertEquals(existingApp.getDescription(),newApp.getDescription());
  Assert.assertEquals(existingApp.getCategory(),newApp.getCategory());
  Assert.assertEquals(existingApp.getIconURL(),newApp.getIconURL());
  Assert.assertEquals(existingApp.getVersion(),newApp.getVersion());
  Assert.assertEquals(existingApp.getRequired(),newApp.getRequired());
}

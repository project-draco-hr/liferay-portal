{
  if (className == null) {
    return false;
  }
  if (className.equals(BlogsEntry.class.getName())) {
    AssetEntry assetEntry=AssetEntryLocalServiceUtil.fetchEntry(className,classPK);
    if (assetEntry == null) {
      return false;
    }
    long groupId=classPK;
    String title=assetEntry.getTitle();
    if (!title.equals(String.valueOf(classPK))) {
      BlogsEntry blogsEntry=BlogsEntryLocalServiceUtil.getBlogsEntry(classPK);
      groupId=blogsEntry.getGroupId();
    }
    return BlogsPermission.contains(permissionChecker,groupId,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals(JournalArticle.class.getName())) {
    return JournalPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals(MBCategory.class.getName())) {
    Group group=GroupLocalServiceUtil.fetchGroup(classPK);
    if (group == null) {
      return MBCategoryPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
    }
 else {
      return MBPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
    }
  }
 else   if (className.equals(MBThread.class.getName())) {
    MBThread mbThread=MBThreadLocalServiceUtil.fetchThread(classPK);
    return MBMessagePermission.contains(permissionChecker,mbThread.getRootMessageId(),ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals(WikiNode.class.getName())) {
    return WikiNodePermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals(WikiPage.class.getName())) {
    return WikiPagePermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
  return true;
}

{
  if (!ClusterInvokeThreadLocal.isEnabled()) {
    return;
  }
  MethodTargetClassKey methodTargetClassKey=buildMethodTargetClassKey(methodInvocation);
  Clusterable clusterable=findAnnotation(methodTargetClassKey);
  if (clusterable == _nullClusterable) {
    return;
  }
  Object targetServiceBean=methodInvocation.getThis();
  if (!(targetServiceBean instanceof ServiceBeanIdentifier)) {
    _log.error("ServiceBean " + targetServiceBean.getClass().getName() + " does not implement interface "+ ServiceBeanIdentifier.class.getName()+ ", unable to proceed this request accross cluster.");
    return;
  }
  String serviceBeanIdentifier=((ServiceBeanIdentifier)targetServiceBean).getIdentifier();
  Method method=methodTargetClassKey.getMethod();
  MethodHandler methodHandler=new MethodHandler(method,methodInvocation.getArguments());
  ClusterRequest clusterRequest=ClusterRequest.createMulticastRequest(methodHandler,true);
  clusterRequest.setServiceBeanIdentifier(serviceBeanIdentifier);
  clusterRequest.setServletContextName(_servletContextName);
  ClusterExecutorUtil.execute(clusterRequest);
}

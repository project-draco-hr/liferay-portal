{
  final ExportActionableDynamicQuery exportActionableDynamicQuery=new ExportActionableDynamicQuery();
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Criterion createDateCriterion=portletDataContext.getDateRangeCriteria("createDate");
      if (createDateCriterion != null) {
        dynamicQuery.add(createDateCriterion);
      }
      DynamicQuery assetEntryDynamicQuery=DynamicQueryFactoryUtil.forClass(AssetEntry.class,"assetEntry",getClassLoader());
      assetEntryDynamicQuery.setProjection(ProjectionFactoryUtil.alias(ProjectionFactoryUtil.property("assetEntry.entryId"),"assetEntry.assetEntryId"));
      Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
      Criterion groupIdCriterion=groupIdProperty.eq(portletDataContext.getScopeGroupId());
      assetEntryDynamicQuery.add(groupIdCriterion);
      Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
      Property entryId1Property=PropertyFactoryUtil.forName("entryId1");
      Property entryId2Property=PropertyFactoryUtil.forName("entryId2");
      disjunction.add(entryId1Property.in(assetEntryDynamicQuery));
      disjunction.add(entryId2Property.in(assetEntryDynamicQuery));
      dynamicQuery.add(disjunction);
    }
  }
);
  exportActionableDynamicQuery.setBaseLocalService(this);
  exportActionableDynamicQuery.setClassLoader(getClassLoader());
  exportActionableDynamicQuery.setCompanyId(portletDataContext.getCompanyId());
  exportActionableDynamicQuery.setModelClass(AssetLink.class);
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<AssetLink>(){
    @Override public void performAction(    AssetLink assetLink) throws PortalException {
      StagedAssetLink stagedAssetLink=ModelAdapterUtil.adapt(assetLink,AssetLink.class,StagedAssetLink.class);
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedAssetLink);
    }
  }
);
  exportActionableDynamicQuery.setPrimaryKeyPropertyName("linkId");
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(StagedModelType.class));
  return exportActionableDynamicQuery;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  long linkId=counterLocalService.increment();
  AssetLink link=assetLinkPersistence.create(linkId);
  link.setCompanyId(user.getCompanyId());
  link.setUserId(user.getUserId());
  link.setUserName(user.getFullName());
  link.setCreateDate(now);
  link.setEntryId1(entryId1);
  link.setEntryId2(entryId2);
  link.setType(type);
  link.setWeight(weight);
  assetLinkPersistence.update(link);
  if (AssetLinkConstants.isTypeBi(type)) {
    AssetLink inverseAssetLink=assetLinkPersistence.fetchByE_E_T(entryId2,entryId1,type);
    if (inverseAssetLink == null) {
      long inverseLinkId=counterLocalService.increment();
      inverseAssetLink=assetLinkPersistence.create(inverseLinkId);
    }
    inverseAssetLink.setCompanyId(user.getCompanyId());
    inverseAssetLink.setUserId(user.getUserId());
    inverseAssetLink.setUserName(user.getFullName());
    inverseAssetLink.setCreateDate(now);
    inverseAssetLink.setEntryId1(entryId2);
    inverseAssetLink.setEntryId2(entryId1);
    inverseAssetLink.setType(type);
    assetLinkPersistence.update(inverseAssetLink);
  }
  return link;
}

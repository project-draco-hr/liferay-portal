{
  long pk=ServiceTestUtil.nextLong();
  MBCategory newMBCategory=_persistence.create(pk);
  newMBCategory.setUuid(ServiceTestUtil.randomString());
  newMBCategory.setGroupId(ServiceTestUtil.nextLong());
  newMBCategory.setCompanyId(ServiceTestUtil.nextLong());
  newMBCategory.setUserId(ServiceTestUtil.nextLong());
  newMBCategory.setUserName(ServiceTestUtil.randomString());
  newMBCategory.setCreateDate(ServiceTestUtil.nextDate());
  newMBCategory.setModifiedDate(ServiceTestUtil.nextDate());
  newMBCategory.setParentCategoryId(ServiceTestUtil.nextLong());
  newMBCategory.setName(ServiceTestUtil.randomString());
  newMBCategory.setDescription(ServiceTestUtil.randomString());
  newMBCategory.setDisplayStyle(ServiceTestUtil.randomString());
  newMBCategory.setThreadCount(ServiceTestUtil.nextInt());
  newMBCategory.setMessageCount(ServiceTestUtil.nextInt());
  newMBCategory.setLastPostDate(ServiceTestUtil.nextDate());
  newMBCategory.setStatus(ServiceTestUtil.nextInt());
  newMBCategory.setStatusByUserId(ServiceTestUtil.nextLong());
  newMBCategory.setStatusByUserName(ServiceTestUtil.randomString());
  newMBCategory.setStatusDate(ServiceTestUtil.nextDate());
  _persistence.update(newMBCategory);
  MBCategory existingMBCategory=_persistence.findByPrimaryKey(newMBCategory.getPrimaryKey());
  Assert.assertEquals(existingMBCategory.getUuid(),newMBCategory.getUuid());
  Assert.assertEquals(existingMBCategory.getCategoryId(),newMBCategory.getCategoryId());
  Assert.assertEquals(existingMBCategory.getGroupId(),newMBCategory.getGroupId());
  Assert.assertEquals(existingMBCategory.getCompanyId(),newMBCategory.getCompanyId());
  Assert.assertEquals(existingMBCategory.getUserId(),newMBCategory.getUserId());
  Assert.assertEquals(existingMBCategory.getUserName(),newMBCategory.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getCreateDate()),Time.getShortTimestamp(newMBCategory.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getModifiedDate()),Time.getShortTimestamp(newMBCategory.getModifiedDate()));
  Assert.assertEquals(existingMBCategory.getParentCategoryId(),newMBCategory.getParentCategoryId());
  Assert.assertEquals(existingMBCategory.getName(),newMBCategory.getName());
  Assert.assertEquals(existingMBCategory.getDescription(),newMBCategory.getDescription());
  Assert.assertEquals(existingMBCategory.getDisplayStyle(),newMBCategory.getDisplayStyle());
  Assert.assertEquals(existingMBCategory.getThreadCount(),newMBCategory.getThreadCount());
  Assert.assertEquals(existingMBCategory.getMessageCount(),newMBCategory.getMessageCount());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getLastPostDate()),Time.getShortTimestamp(newMBCategory.getLastPostDate()));
  Assert.assertEquals(existingMBCategory.getStatus(),newMBCategory.getStatus());
  Assert.assertEquals(existingMBCategory.getStatusByUserId(),newMBCategory.getStatusByUserId());
  Assert.assertEquals(existingMBCategory.getStatusByUserName(),newMBCategory.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getStatusDate()),Time.getShortTimestamp(newMBCategory.getStatusDate()));
}

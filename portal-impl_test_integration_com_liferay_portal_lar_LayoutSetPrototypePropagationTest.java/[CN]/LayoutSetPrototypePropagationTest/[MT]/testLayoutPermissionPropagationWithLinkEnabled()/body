{
  LayoutSet layoutSet=_layoutSetPrototype.getLayoutSet();
  layout=LayoutTestUtil.addLayout(layoutSet.getGroupId(),ServiceTestUtil.randomString(),layoutSet.getPrivateLayout());
  LayoutSetLocalServiceUtil.updateLayoutSetPrototypeLinkEnabled(layoutSet.getGroupId(),layoutSet.isPrivateLayout(),layoutSet.isLayoutSetPrototypeLinkEnabled(),_layoutSetPrototype.getUuid());
  User user=TestPropsValues.getUser();
  long roleIds[]=user.getRoleIds();
  List<String> resourceActions=ResourceActionsUtil.getModelResourceActions(Layout.class.getName());
  Map<Long,String[]> roleIdsToActionIds=new HashMap<Long,String[]>();
  for (  long roleId : roleIds) {
    roleIdsToActionIds.put(roleId,resourceActions.toArray(new String[resourceActions.size()]));
  }
  Date modifiedDate=layout.getModifiedDate();
  ResourcePermissionServiceUtil.setIndividualResourcePermissions(layout.getGroupId(),layout.getCompanyId(),Layout.class.getName(),String.valueOf(layout.getPrimaryKey()),roleIdsToActionIds);
  layout=LayoutLocalServiceUtil.getLayout(layout.getPlid());
  Assert.assertNotEquals(modifiedDate,layout.getModifiedDate());
}

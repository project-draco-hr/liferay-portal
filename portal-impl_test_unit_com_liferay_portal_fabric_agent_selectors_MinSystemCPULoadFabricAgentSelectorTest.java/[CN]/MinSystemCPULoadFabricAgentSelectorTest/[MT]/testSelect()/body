{
  FabricAgentSelector fabricAgentSelector=new MinSystemCPULoadFabricAgentSelector();
  Assert.assertSame(Collections.emptySet(),fabricAgentSelector.select(Collections.<FabricAgent>emptySet(),null));
  FabricAgent fabricAgent1=createFabricAgent(null);
  FabricAgent fabricAgent2=createFabricAgent(null);
  Collection<FabricAgent> fabricAgents=fabricAgentSelector.select(new ArrayList<FabricAgent>(Arrays.asList(fabricAgent1,fabricAgent2)),null);
  Assert.assertEquals(1,fabricAgents.size());
  Iterator<FabricAgent> iterator=fabricAgents.iterator();
  Assert.assertSame(fabricAgent1,iterator.next());
  fabricAgent1=createFabricAgent(null);
  fabricAgent2=createFabricAgent(1D);
  fabricAgents=fabricAgentSelector.select(new ArrayList<FabricAgent>(Arrays.asList(fabricAgent1,fabricAgent2)),null);
  Assert.assertEquals(1,fabricAgents.size());
  iterator=fabricAgents.iterator();
  Assert.assertSame(fabricAgent2,iterator.next());
  fabricAgent1=createFabricAgent(1D);
  fabricAgent2=createFabricAgent(null);
  fabricAgents=fabricAgentSelector.select(new ArrayList<FabricAgent>(Arrays.asList(fabricAgent1,fabricAgent2)),null);
  Assert.assertEquals(1,fabricAgents.size());
  iterator=fabricAgents.iterator();
  Assert.assertSame(fabricAgent1,iterator.next());
  fabricAgent1=createFabricAgent(1D);
  fabricAgent2=createFabricAgent(2D);
  fabricAgents=fabricAgentSelector.select(new ArrayList<FabricAgent>(Arrays.asList(fabricAgent1,fabricAgent2)),null);
  Assert.assertEquals(1,fabricAgents.size());
  iterator=fabricAgents.iterator();
  Assert.assertSame(fabricAgent1,iterator.next());
}

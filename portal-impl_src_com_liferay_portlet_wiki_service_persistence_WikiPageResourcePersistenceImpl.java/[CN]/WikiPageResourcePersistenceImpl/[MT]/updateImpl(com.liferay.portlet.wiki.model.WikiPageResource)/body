{
  wikiPageResource=toUnwrappedModel(wikiPageResource);
  boolean isNew=wikiPageResource.isNew();
  WikiPageResourceModelImpl wikiPageResourceModelImpl=(WikiPageResourceModelImpl)wikiPageResource;
  if (Validator.isNull(wikiPageResource.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wikiPageResource.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (wikiPageResource.isNew()) {
      session.save(wikiPageResource);
      wikiPageResource.setNew(false);
    }
 else {
      session.merge(wikiPageResource);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WikiPageResourceModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((wikiPageResourceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageResourceModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{wikiPageResourceModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
  }
  EntityCacheUtil.putResult(WikiPageResourceModelImpl.ENTITY_CACHE_ENABLED,WikiPageResourceImpl.class,wikiPageResource.getPrimaryKey(),wikiPageResource);
  clearUniqueFindersCache(wikiPageResource);
  cacheUniqueFindersCache(wikiPageResource);
  wikiPageResource.resetOriginalValues();
  return wikiPageResource;
}

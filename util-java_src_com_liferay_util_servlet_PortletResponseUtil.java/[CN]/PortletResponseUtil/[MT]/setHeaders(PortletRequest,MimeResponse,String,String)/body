{
  if (_log.isDebugEnabled()) {
    _log.debug("Sending file of type " + contentType);
  }
  if (Validator.isNotNull(contentType)) {
    mimeResponse.setContentType(contentType);
  }
  mimeResponse.setProperty(HttpHeaders.CACHE_CONTROL,HttpHeaders.CACHE_CONTROL_PUBLIC_VALUE);
  mimeResponse.setProperty(HttpHeaders.PRAGMA,HttpHeaders.PRAGMA_PUBLIC_VALUE);
  if (Validator.isNotNull(fileName)) {
    String contentDisposition="attachment; filename=\"" + fileName + "\"";
    boolean ascii=true;
    for (int i=0; i < fileName.length(); i++) {
      if (!CharUtils.isAscii(fileName.charAt(i))) {
        ascii=false;
        break;
      }
    }
    try {
      if (!ascii) {
        URLCodec codec=new URLCodec(StringPool.UTF8);
        String encodedFileName=StringUtil.replace(codec.encode(fileName),"+","%20");
        HttpServletRequest request=PortalUtil.getHttpServletRequest(portletRequest);
        if (BrowserSnifferUtil.isIe(request)) {
          contentDisposition="attachment; filename=\"" + encodedFileName + "\"";
        }
 else {
          contentDisposition="attachment; filename*=UTF-8''" + encodedFileName;
        }
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e);
      }
    }
    String extension=GetterUtil.getString(FileUtil.getExtension(fileName)).toLowerCase();
    String[] mimeTypesContentDispositionInline=null;
    try {
      mimeTypesContentDispositionInline=PropsUtil.getArray("mime.types.content.disposition.inline");
    }
 catch (    Exception e) {
      mimeTypesContentDispositionInline=new String[0];
    }
    if (ArrayUtil.contains(mimeTypesContentDispositionInline,extension)) {
      contentDisposition=StringUtil.replace(contentDisposition,"attachment; ","inline; ");
    }
    mimeResponse.setProperty(HttpHeaders.CONTENT_DISPOSITION,contentDisposition);
  }
}

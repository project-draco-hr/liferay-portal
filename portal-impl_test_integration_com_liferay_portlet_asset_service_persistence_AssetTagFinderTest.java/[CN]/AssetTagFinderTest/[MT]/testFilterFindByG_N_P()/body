{
  Group scopeGroup=addScopeGroup();
  Group siteGroup=scopeGroup.getParentGroup();
  String assetTagName=ServiceTestUtil.randomString();
  String[] assetTagProperties=new String[]{"key" + AssetTagConstants.TAG_PROPERTY_SEPARATOR + "value"};
  List<AssetTag> initialScopeGroupAssetTags=AssetTagFinderUtil.filterFindByG_N_P(new long[]{scopeGroup.getGroupId()},assetTagName,assetTagProperties,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  List<AssetTag> initialSiteGroupAssetTags=AssetTagFinderUtil.filterFindByG_N_P(new long[]{siteGroup.getGroupId()},assetTagName,assetTagProperties,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  addAssetTag(siteGroup.getGroupId(),assetTagName,assetTagProperties);
  User user=UserTestUtil.addUser(null,0);
  PermissionChecker originalPermissionChecker=PermissionThreadLocal.getPermissionChecker();
  try {
    PermissionChecker permissionChecker=PermissionCheckerFactoryUtil.create(user);
    PermissionThreadLocal.setPermissionChecker(permissionChecker);
    List<AssetTag> scopeGroupAssetTags=AssetTagFinderUtil.filterFindByG_N_P(new long[]{scopeGroup.getGroupId()},assetTagName,assetTagProperties,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
    Assert.assertEquals(initialScopeGroupAssetTags.size(),scopeGroupAssetTags.size());
    List<AssetTag> siteGroupAssetTags=AssetTagFinderUtil.filterFindByG_N_P(new long[]{siteGroup.getGroupId()},assetTagName,assetTagProperties,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
    Assert.assertEquals(initialSiteGroupAssetTags.size() + 1,siteGroupAssetTags.size());
  }
  finally {
    PermissionThreadLocal.setPermissionChecker(originalPermissionChecker);
  }
}

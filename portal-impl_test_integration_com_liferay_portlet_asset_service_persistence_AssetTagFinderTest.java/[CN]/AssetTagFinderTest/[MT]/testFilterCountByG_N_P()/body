{
  String assetTagName=RandomTestUtil.randomString();
  String[] assetTagProperties={"key" + AssetTagConstants.PROPERTY_KEY_VALUE_SEPARATOR + "value"};
  int initialScopeGroupAssetTagsCount=AssetTagFinderUtil.filterCountByG_N_P(_scopeGroup.getGroupId(),assetTagName,assetTagProperties);
  int initialTagsCountSiteGroup=AssetTagFinderUtil.filterCountByG_N_P(_scopeGroup.getParentGroupId(),assetTagName,assetTagProperties);
  addAssetTag(_scopeGroup.getParentGroupId(),assetTagName,assetTagProperties);
  User user=UserTestUtil.addUser(null,0);
  PermissionChecker originalPermissionChecker=PermissionThreadLocal.getPermissionChecker();
  try {
    PermissionChecker permissionChecker=PermissionCheckerFactoryUtil.create(user);
    PermissionThreadLocal.setPermissionChecker(permissionChecker);
    int scopeGroupAssetTagsCount=AssetTagFinderUtil.filterCountByG_N_P(_scopeGroup.getGroupId(),assetTagName,assetTagProperties);
    Assert.assertEquals(initialScopeGroupAssetTagsCount,scopeGroupAssetTagsCount);
    int siteGroupAssetTagsCount=AssetTagFinderUtil.filterCountByG_N_P(_scopeGroup.getParentGroupId(),assetTagName,assetTagProperties);
    Assert.assertEquals(initialTagsCountSiteGroup + 1,siteGroupAssetTagsCount);
  }
  finally {
    PermissionThreadLocal.setPermissionChecker(originalPermissionChecker);
  }
}

{
  attributes=_attributesTransformer.transformGroup(attributes);
  LDAPGroup ldapGroup=_ldapToPortalConverter.importLDAPGroup(companyId,attributes,groupMappings);
  UserGroup userGroup=null;
  try {
    userGroup=_userGroupLocalService.getUserGroup(companyId,ldapGroup.getGroupName());
    if (!Validator.equals(userGroup.getDescription(),ldapGroup.getDescription())) {
      _userGroupLocalService.updateUserGroup(companyId,userGroup.getUserGroupId(),ldapGroup.getGroupName(),ldapGroup.getDescription(),null);
    }
  }
 catch (  NoSuchUserGroupException nsuge) {
    StopWatch stopWatch=new StopWatch();
    if (_log.isDebugEnabled()) {
      stopWatch.start();
      _log.debug("Adding ldapGroup to portal: " + ldapGroup);
    }
    long defaultUserId=_userLocalService.getDefaultUserId(companyId);
    UserGroupImportTransactionThreadLocal.setOriginatesFromImport(true);
    try {
      userGroup=_userGroupLocalService.addUserGroup(defaultUserId,companyId,ldapGroup.getGroupName(),ldapGroup.getDescription(),null);
      if (_log.isDebugEnabled()) {
        _log.debug("Finished adding ldapGroup " + ldapGroup + " as userGroup "+ userGroup+ " to the portal in "+ stopWatch.getTime()+ "ms");
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to create user group " + ldapGroup.getGroupName());
      }
      if (_log.isDebugEnabled()) {
        _log.debug(e,e);
      }
    }
 finally {
      UserGroupImportTransactionThreadLocal.setOriginatesFromImport(false);
    }
  }
  addRole(companyId,ldapGroup,userGroup);
  return userGroup;
}

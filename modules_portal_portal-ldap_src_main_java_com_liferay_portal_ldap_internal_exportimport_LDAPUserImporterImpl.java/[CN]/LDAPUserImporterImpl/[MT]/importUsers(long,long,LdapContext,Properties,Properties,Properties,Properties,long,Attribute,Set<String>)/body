{
  Set<Long> newUserIds=new LinkedHashSet<>(attribute.size());
  for (int i=0; i < attribute.size(); i++) {
    String fullUserDN=(String)attribute.get(i);
    Attributes userAttributes=null;
    try {
      userAttributes=_portalLDAP.getUserAttributes(ldapServerId,companyId,ldapContext,fullUserDN);
    }
 catch (    NameNotFoundException nnfe) {
      _log.error("LDAP user not found with fullUserDN " + fullUserDN,nnfe);
      continue;
    }
    try {
      User user=importUser(ldapServerId,companyId,userAttributes,userMappings,userExpandoMappings,contactMappings,contactExpandoMappings,StringPool.BLANK,ldapUserIgnoreAttributes);
      if (user != null) {
        if (_log.isDebugEnabled()) {
          _log.debug("Adding " + user.getUserId() + " to group "+ userGroupId);
        }
        _userLocalService.addUserGroupUsers(userGroupId,new long[]{user.getUserId()});
        newUserIds.add(user.getUserId());
      }
    }
 catch (    Exception e) {
      _log.error("Unable to load user " + userAttributes,e);
    }
  }
  List<User> userGroupUsers=_userLocalService.getUserGroupUsers(userGroupId);
  for (  User user : userGroupUsers) {
    if ((ldapServerId == user.getLdapServerId()) && !newUserIds.contains(user.getUserId())) {
      _userLocalService.deleteUserGroupUser(userGroupId,user.getUserId());
    }
  }
}

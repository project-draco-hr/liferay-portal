{
  DefaultNoticeableFuture<V> defaultNoticeableFuture=new DefaultNoticeableFuture<V>();
  DefaultNoticeableFuture<V> previousDefaultNoticeableFuture=_defaultNoticeableFutures.putIfAbsent(key,defaultNoticeableFuture);
  if (previousDefaultNoticeableFuture != null) {
    return previousDefaultNoticeableFuture;
  }
  defaultNoticeableFuture.addFutureListener(new FutureListener<V>(){
    @Override public void complete(    Future<V> future){
      _defaultNoticeableFutures.remove(key);
    }
  }
);
  if (_REFERENT_FIELD != null) {
    FinalizeManager.register(defaultNoticeableFuture,new CancellationFinalizeAction(key),FinalizeManager.PHANTOM_REFERENCE_FACTORY);
  }
  return defaultNoticeableFuture;
}

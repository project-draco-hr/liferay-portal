{
  expandoColumn=toUnwrappedModel(expandoColumn);
  boolean isNew=expandoColumn.isNew();
  ExpandoColumnModelImpl expandoColumnModelImpl=(ExpandoColumnModelImpl)expandoColumn;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,expandoColumn,merge);
    expandoColumn.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if (expandoColumn.getTableId() != expandoColumnModelImpl.getOriginalTableId()) {
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_TABLEID,new Object[]{Long.valueOf(expandoColumnModelImpl.getOriginalTableId())});
    }
    if ((expandoColumn.getTableId() != expandoColumnModelImpl.getOriginalTableId()) || !Validator.equals(expandoColumn.getName(),expandoColumnModelImpl.getOriginalName())) {
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_T_N,new Object[]{Long.valueOf(expandoColumnModelImpl.getOriginalTableId()),expandoColumnModelImpl.getOriginalName()});
    }
  }
  EntityCacheUtil.putResult(ExpandoColumnModelImpl.ENTITY_CACHE_ENABLED,ExpandoColumnImpl.class,expandoColumn.getPrimaryKey(),expandoColumn);
  return expandoColumn;
}

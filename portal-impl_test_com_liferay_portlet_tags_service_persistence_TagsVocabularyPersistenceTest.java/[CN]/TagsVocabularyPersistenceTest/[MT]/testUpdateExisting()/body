{
  long pk=nextLong();
  TagsVocabulary newTagsVocabulary=_persistence.create(pk);
  newTagsVocabulary.setGroupId(nextLong());
  newTagsVocabulary.setCompanyId(nextLong());
  newTagsVocabulary.setUserId(nextLong());
  newTagsVocabulary.setUserName(randomString());
  newTagsVocabulary.setCreateDate(nextDate());
  newTagsVocabulary.setModifiedDate(nextDate());
  newTagsVocabulary.setName(randomString());
  newTagsVocabulary.setDescription(randomString());
  newTagsVocabulary.setFolksonomy(randomBoolean());
  _persistence.update(newTagsVocabulary,false);
  TagsVocabulary existingTagsVocabulary=_persistence.findByPrimaryKey(newTagsVocabulary.getPrimaryKey());
  assertEquals(existingTagsVocabulary.getVocabularyId(),newTagsVocabulary.getVocabularyId());
  assertEquals(existingTagsVocabulary.getGroupId(),newTagsVocabulary.getGroupId());
  assertEquals(existingTagsVocabulary.getCompanyId(),newTagsVocabulary.getCompanyId());
  assertEquals(existingTagsVocabulary.getUserId(),newTagsVocabulary.getUserId());
  assertEquals(existingTagsVocabulary.getUserName(),newTagsVocabulary.getUserName());
  assertEquals(existingTagsVocabulary.getCreateDate(),newTagsVocabulary.getCreateDate());
  assertEquals(existingTagsVocabulary.getModifiedDate(),newTagsVocabulary.getModifiedDate());
  assertEquals(existingTagsVocabulary.getName(),newTagsVocabulary.getName());
  assertEquals(existingTagsVocabulary.getDescription(),newTagsVocabulary.getDescription());
  assertEquals(existingTagsVocabulary.getFolksonomy(),newTagsVocabulary.getFolksonomy());
}

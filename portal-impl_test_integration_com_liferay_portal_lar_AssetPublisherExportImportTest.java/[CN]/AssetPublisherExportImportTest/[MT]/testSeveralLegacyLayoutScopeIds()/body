{
  Layout secondLayout=LayoutTestUtil.addLayout(group.getGroupId(),ServiceTestUtil.randomString());
  GroupTestUtil.addGroup(TestPropsValues.getUserId(),secondLayout);
  Map<String,String[]> preferenceMap=new HashMap<String,String[]>();
  GroupTestUtil.addGroup(TestPropsValues.getUserId(),layout);
  preferenceMap.put("scopeIds",new String[]{AssetPublisher.SCOPE_ID_LAYOUT_PREFIX + layout.getLayoutId(),AssetPublisher.SCOPE_ID_LAYOUT_PREFIX + secondLayout.getLayoutId()});
  PortletPreferences portletPreferences=getImportedPortletPreferences(preferenceMap);
  Layout importedSecondLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(),importedGroup.getGroupId(),importedLayout.isPrivateLayout());
  Assert.assertEquals(null,portletPreferences.getValue("scopeId",null));
  StringBundler sb=new StringBundler(5);
  sb.append(AssetPublisher.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(importedLayout.getUuid());
  sb.append(StringPool.COMMA);
  sb.append(AssetPublisher.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(importedSecondLayout.getUuid());
  Assert.assertEquals(sb.toString(),StringUtil.merge(portletPreferences.getValues("scopeIds",null)));
}

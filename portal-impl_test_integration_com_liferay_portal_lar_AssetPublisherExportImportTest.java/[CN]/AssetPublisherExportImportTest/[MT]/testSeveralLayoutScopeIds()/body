{
  Company company=CompanyLocalServiceUtil.getCompany(_layout.getCompanyId());
  Layout secondLayout=ServiceTestUtil.addLayout(_group.getGroupId(),ServiceTestUtil.randomString());
  addGroup(TestPropsValues.getUserId(),secondLayout);
  Map<String,String[]> preferenceMap=new HashMap<String,String[]>();
  addGroup(TestPropsValues.getUserId(),_layout);
  Group companyGroup=company.getGroup();
  preferenceMap.put("scopeIds",new String[]{AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX + companyGroup.getGroupId(),AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX + _layout.getUuid(),AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX + secondLayout.getUuid()});
  PortletPreferences portletPreferences=getImportedPortletPreferences(_layout,preferenceMap);
  Layout importedSecondLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(),_importedGroup.getGroupId(),_importedLayout.isPrivateLayout());
  Assert.assertEquals(null,portletPreferences.getValue("scopeId",null));
  StringBundler sb=new StringBundler(8);
  sb.append(AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX);
  sb.append(companyGroup.getGroupId());
  sb.append(StringPool.COMMA);
  sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(_importedLayout.getUuid());
  sb.append(StringPool.COMMA);
  sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(importedSecondLayout.getUuid());
  Assert.assertEquals(sb.toString(),StringUtil.merge(portletPreferences.getValues("scopeIds",null)));
}

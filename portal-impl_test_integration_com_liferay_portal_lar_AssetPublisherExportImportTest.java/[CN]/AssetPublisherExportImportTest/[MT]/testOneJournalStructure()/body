{
  DDMStructure ddmStructure=DDMStructureTestUtil.addStructure(group.getGroupId(),JournalArticle.class.getName());
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setUuid(ddmStructure.getUuid());
  DDMStructure importedDDMStructure=DDMStructureTestUtil.addStructure(importedGroup.getGroupId(),JournalArticle.class.getName(),ddmStructure.getXsd(),LocaleUtil.getDefault(),serviceContext);
  Map<String,String[]> preferenceMap=new HashMap<String,String[]>();
  long journalArticleClassNameId=PortalUtil.getClassNameId(JournalArticle.class);
  preferenceMap.put("anyAssetType",new String[]{String.valueOf(journalArticleClassNameId)});
  preferenceMap.put("anyClassTypeJournalArticleAssetRendererFactory",new String[]{String.valueOf(ddmStructure.getStructureId())});
  preferenceMap.put("classTypeIds",new String[]{String.valueOf(ddmStructure.getStructureId())});
  PortletPreferences portletPreferences=getImportedPortletPreferences(preferenceMap);
  long anyClassTypeJournalArticleAssetRendererFactory=GetterUtil.getLong(portletPreferences.getValue("anyClassTypeJournalArticleAssetRendererFactory",null));
  Assert.assertEquals(anyClassTypeJournalArticleAssetRendererFactory,importedDDMStructure.getStructureId());
  long anyAssetType=GetterUtil.getLong(portletPreferences.getValue("anyAssetType",null));
  Assert.assertEquals(journalArticleClassNameId,anyAssetType);
  long classTypeIds=GetterUtil.getLong(portletPreferences.getValue("classTypeIds",null));
  Assert.assertEquals(importedDDMStructure.getStructureId(),classTypeIds);
}

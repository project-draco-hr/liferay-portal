{
  io.netty.util.concurrent.Future<?> future=master.terminationFuture();
  future.addListener(new io.netty.util.concurrent.FutureListener<Object>(){
    @Override public void operationComplete(    io.netty.util.concurrent.Future<Object> future) throws InterruptedException {
      slave.shutdownGracefully(quietPeriod,timeout,TimeUnit.MILLISECONDS);
      if (!slave.awaitTermination(timeout,TimeUnit.MILLISECONDS) && _log.isWarnEnabled()) {
        _log.warn("Bind shutdown timeout " + slave);
      }
    }
  }
);
}

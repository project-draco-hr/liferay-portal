{
  EventLoop eventLoop=channel.eventLoop();
  final Future<?> cancellationFuture=eventLoop.schedule(new Runnable(){
    @Override public void run(){
      if (noticeableFuture.cancel(true) && _log.isWarnEnabled()) {
        _log.warn("Cancelled timeout " + noticeableFuture);
      }
    }
  }
,timeout,TimeUnit.MILLISECONDS);
  noticeableFuture.addFutureListener(new FutureListener<T>(){
    @Override public void complete(    Future<T> future){
      if (cancellationFuture.cancel(true) && _log.isDebugEnabled()) {
        _log.debug("Cancelled scheduled cancellation for " + noticeableFuture);
      }
    }
  }
);
}

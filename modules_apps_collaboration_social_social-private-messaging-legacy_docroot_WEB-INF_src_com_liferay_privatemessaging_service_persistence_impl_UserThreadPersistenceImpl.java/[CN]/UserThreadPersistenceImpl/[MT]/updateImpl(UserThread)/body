{
  userThread=toUnwrappedModel(userThread);
  boolean isNew=userThread.isNew();
  UserThreadModelImpl userThreadModelImpl=(UserThreadModelImpl)userThread;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (userThread.getCreateDate() == null)) {
    if (serviceContext == null) {
      userThread.setCreateDate(now);
    }
 else {
      userThread.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!userThreadModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      userThread.setModifiedDate(now);
    }
 else {
      userThread.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (userThread.isNew()) {
      session.save(userThread);
      userThread.setNew(false);
    }
 else {
      userThread=(UserThread)session.merge(userThread);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !UserThreadModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((userThreadModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MBTHREADID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{userThreadModelImpl.getOriginalMbThreadId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_MBTHREADID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MBTHREADID,args);
      args=new Object[]{userThreadModelImpl.getMbThreadId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_MBTHREADID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MBTHREADID,args);
    }
    if ((userThreadModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{userThreadModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{userThreadModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((userThreadModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_D.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{userThreadModelImpl.getOriginalUserId(),userThreadModelImpl.getOriginalDeleted()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_D,args);
      args=new Object[]{userThreadModelImpl.getUserId(),userThreadModelImpl.getDeleted()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_D,args);
    }
    if ((userThreadModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_R_D.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{userThreadModelImpl.getOriginalUserId(),userThreadModelImpl.getOriginalRead(),userThreadModelImpl.getOriginalDeleted()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_R_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_R_D,args);
      args=new Object[]{userThreadModelImpl.getUserId(),userThreadModelImpl.getRead(),userThreadModelImpl.getDeleted()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_R_D,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_R_D,args);
    }
  }
  entityCache.putResult(UserThreadModelImpl.ENTITY_CACHE_ENABLED,UserThreadImpl.class,userThread.getPrimaryKey(),userThread,false);
  clearUniqueFindersCache(userThreadModelImpl);
  cacheUniqueFindersCache(userThreadModelImpl,isNew);
  userThread.resetOriginalValues();
  return userThread;
}

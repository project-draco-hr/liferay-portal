{
  try (LoggingTimer loggingTimer=new LoggingTimer(tableName)){
    StringBundler updateSB=new StringBundler(7);
    updateSB.append("update ");
    updateSB.append(tableName);
    updateSB.append(" set ");
    updateSB.append(columnName);
    updateSB.append(" = ? where ");
    updateSB.append(columnName);
    updateSB.append(" = ?");
    String updateSQL=updateSB.toString();
    StringBundler selectPrefixSB=new StringBundler(7);
    selectPrefixSB.append("select distinct ");
    selectPrefixSB.append(columnName);
    selectPrefixSB.append(" from ");
    selectPrefixSB.append(tableName);
    selectPrefixSB.append(" where ");
    selectPrefixSB.append(columnName);
    if (wildcardMode.equals(WildcardMode.LEADING) || wildcardMode.equals(WildcardMode.SURROUND)) {
      selectPrefixSB.append(" like '%");
    }
 else {
      selectPrefixSB.append(" like '");
    }
    String selectPrefix=selectPrefixSB.toString();
    String selectPostfix=StringPool.APOSTROPHE;
    if (wildcardMode.equals(WildcardMode.SURROUND) || wildcardMode.equals(WildcardMode.TRAILING)) {
      selectPostfix="%'";
    }
    for (    String[] name : names) {
      String selectSQL=selectPrefix.concat(name[0]).concat(selectPostfix);
      futures.add(_threadPoolExecutor.submit(new UpgradeKernelPackageCallable(columnName,selectSQL,updateSQL,name)));
    }
  }
 }

{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(portletRequest);
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  checkPermission(themeDisplay.getScopeGroupId(),getFolderId(uploadPortletRequest),themeDisplay.getPermissionChecker());
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  try {
    UploadException uploadException=(UploadException)portletRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
    if (uploadException != null) {
      Throwable cause=uploadException.getCause();
      if (uploadException.isExceededFileSizeLimit()) {
        throw new FileSizeException(cause);
      }
      if (uploadException.isExceededLiferayFileItemSizeLimit()) {
        throw new LiferayFileItemException(cause);
      }
      if (uploadException.isExceededUploadRequestSizeLimit()) {
        throw new UploadRequestSizeException(cause);
      }
      throw new PortalException(cause);
    }
    JSONObject imageJSONObject=getImageJSONObject(portletRequest);
    String randomId=ParamUtil.getString(uploadPortletRequest,"randomId");
    imageJSONObject.put("randomId",randomId);
    jsonObject.put("file",imageJSONObject);
    jsonObject.put("success",Boolean.TRUE);
    JSONPortletResponseUtil.writeJSON(portletRequest,portletResponse,jsonObject);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
catch (  PortalException pe) {
    handleUploadException(portletRequest,portletResponse,pe,jsonObject);
  }
}

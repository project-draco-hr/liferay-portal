{
  HttpSession session=request.getSession();
  long companyId=PortalUtil.getCompanyId(request);
  String pathInfo=request.getPathInfo();
  Object forceLogout=session.getAttribute(WebKeys.CAS_FORCE_LOGOUT);
  if (forceLogout != null) {
    session.removeAttribute(WebKeys.CAS_FORCE_LOGOUT);
    String logoutUrl=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_LOGOUT_URL,_casConfiguration.logoutURL());
    response.sendRedirect(logoutUrl);
    return;
  }
  if (Validator.isNotNull(pathInfo) && pathInfo.contains("/portal/logout")) {
    session.invalidate();
    String logoutUrl=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_LOGOUT_URL,_casConfiguration.logoutURL());
    response.sendRedirect(logoutUrl);
    return;
  }
 else {
    String login=(String)session.getAttribute(WebKeys.CAS_LOGIN);
    if (Validator.isNotNull(login)) {
      processFilter(CASFilter.class,request,response,filterChain);
      return;
    }
    String serverName=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_SERVER_NAME,_casConfiguration.serverName());
    String serviceUrl=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_SERVICE_URL,_casConfiguration.serviceURL());
    if (Validator.isNull(serviceUrl)) {
      serviceUrl=CommonUtils.constructServiceUrl(request,response,serviceUrl,serverName,"ticket",false);
    }
    String ticket=ParamUtil.getString(request,"ticket");
    if (Validator.isNull(ticket)) {
      String loginUrl=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_LOGIN_URL,_casConfiguration.loginURL());
      loginUrl=HttpUtil.addParameter(loginUrl,"service",serviceUrl);
      response.sendRedirect(loginUrl);
      return;
    }
    TicketValidator ticketValidator=getTicketValidator(companyId);
    Assertion assertion=ticketValidator.validate(ticket,serviceUrl);
    if (assertion != null) {
      AttributePrincipal attributePrincipal=assertion.getPrincipal();
      login=attributePrincipal.getName();
      session.setAttribute(WebKeys.CAS_LOGIN,login);
    }
  }
  processFilter(CASFilter.class,request,response,filterChain);
}

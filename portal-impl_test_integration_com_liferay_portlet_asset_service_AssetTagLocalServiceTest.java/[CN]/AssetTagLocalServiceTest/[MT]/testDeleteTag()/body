{
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId(),TestPropsValues.getUserId());
  AssetTag assetTag=AssetTagLocalServiceUtil.addTag(TestPropsValues.getUserId(),_group.getGroupId(),"Tag",serviceContext);
  serviceContext.setAssetTagNames(new String[]{assetTag.getName()});
  _organization=OrganizationLocalServiceUtil.addOrganization(TestPropsValues.getUserId(),OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,RandomTestUtil.randomString(),OrganizationConstants.TYPE_ORGANIZATION,0,0,ListTypeConstants.ORGANIZATION_STATUS_DEFAULT,RandomTestUtil.randomString(),true,serviceContext);
  TestAssetIndexer testAssetIndexer=new TestAssetIndexer();
  testAssetIndexer.setExpectedValues(Organization.class.getName(),_organization.getOrganizationId());
  if (_organizationIndexer == null) {
    _organizationIndexer=IndexerRegistryUtil.getIndexer(Organization.class);
  }
  IndexerRegistryUtil.register(testAssetIndexer);
  AssetTagLocalServiceUtil.deleteTag(assetTag);
  Assert.assertNull(AssetTagLocalServiceUtil.fetchAssetTag(assetTag.getTagId()));
  long classNameId=PortalUtil.getClassNameId(Organization.class);
  AssetTagStats assetTagStats=AssetTagStatsLocalServiceUtil.getTagStats(assetTag.getTagId(),classNameId);
  Assert.assertEquals(0,assetTagStats.getAssetCount());
}

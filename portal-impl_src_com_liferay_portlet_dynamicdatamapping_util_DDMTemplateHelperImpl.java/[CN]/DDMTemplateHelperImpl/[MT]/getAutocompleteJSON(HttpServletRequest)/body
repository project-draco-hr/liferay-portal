{
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  for (  TemplateVariableDefinition templateVariableDefinition : getAutocompleteTemplateVariableDefinitions(request)) {
    JSONObject valueJSONObject=JSONFactoryUtil.createJSONObject();
    Class<?> clazz=templateVariableDefinition.getClazz();
    if (clazz == null) {
      continue;
    }
    for (    Field field : clazz.getFields()) {
      valueJSONObject.put(field.getName(),JSONFactoryUtil.getUnmodifiableJSONObject());
    }
    for (    Method method : clazz.getMethods()) {
      Class<?>[] parameterTypes=method.getParameterTypes();
      StringBundler sb=new StringBundler(3 + ((parameterTypes.length * 2) - 1));
      sb.append(method.getName());
      sb.append(StringPool.OPEN_PARENTHESIS);
      for (      Class<?> parameterType : parameterTypes) {
        sb.append(parameterType.getSimpleName());
        sb.append(StringPool.COMMA_AND_SPACE);
      }
      if (parameterTypes.length > 0) {
        sb.setIndex(sb.index() - 1);
      }
      sb.append(StringPool.CLOSE_PARENTHESIS);
      valueJSONObject.put(sb.toString(),JSONFactoryUtil.getUnmodifiableJSONObject());
    }
    jsonObject.put(templateVariableDefinition.getName(),valueJSONObject);
  }
  return jsonObject.toString();
}

{
  String javaTermContent=javaTerm.getContent();
  if (javaTermContent.contains(StringPool.TAB + "super();")) {
    String newJavaTermContent=StringUtil.replace(javaTermContent,StringPool.TAB + "super();",StringPool.BLANK);
    _content=StringUtil.replace(_content,javaTermContent,newJavaTermContent);
    return;
  }
  if (!ListUtil.isEmpty(javaTerm.getParameterTypes())) {
    checkConstructorParameterOrder(javaTerm);
    return;
  }
  if ((_packagePath == null) || (_constructorCount > 1) || !javaTermContent.contains("{\n" + _indent + "}\n")) {
    return;
  }
  String accessModifier=getAccessModifier();
  if ((javaTerm.isPrivate() && !accessModifier.equals(_ACCESS_MODIFIER_PRIVATE)) || (javaTerm.isProtected() && !accessModifier.equals(_ACCESS_MODIFIER_PRIVATE) && !accessModifier.equals(_ACCESS_MODIFIER_PROTECTED))) {
    return;
  }
  Pattern pattern=Pattern.compile("class " + _name + "[ \t\n]+extends");
  Matcher matcher=pattern.matcher(_content);
  if (!matcher.find()) {
    return;
  }
  JavaDocBuilder javaDocBuilder=new JavaDocBuilder();
  javaDocBuilder.addSource(_file);
  com.thoughtworks.qdox.model.JavaClass javaClass=javaDocBuilder.getClassByName(getClassName());
  com.thoughtworks.qdox.model.JavaClass superJavaClass=javaClass.getSuperJavaClass();
  JavaMethod superJavaClassConstructor=superJavaClass.getMethodBySignature(superJavaClass.getName(),null);
  if ((superJavaClassConstructor != null) && ArrayUtil.isEmpty(superJavaClassConstructor.getExceptions())) {
    _content=StringUtil.replace(_content,javaTermContent,StringPool.BLANK);
  }
}

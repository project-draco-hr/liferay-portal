{
  int x=-1;
  while (true) {
    x=operator.indexOf(StringPool.QUESTION,x + 1);
    if (x == -1) {
      return null;
    }
    if (!ToolsUtil.isInsideQuotes(operator,x) && _javaSourceProcessor.getLevel(operator.substring(0,x),"<",">") == 0) {
      break;
    }
  }
  int y=x;
  while (true) {
    y=operator.indexOf(StringPool.COLON,y + 1);
    if (y == -1) {
      return null;
    }
    if (!ToolsUtil.isInsideQuotes(operator,y)) {
      break;
    }
  }
  String falseValue=StringUtil.trim(operator.substring(y + 1));
  String ifCondition=StringUtil.trim(operator.substring(0,x));
  String trueValue=StringUtil.trim(operator.substring(x + 1,y));
  if ((_javaSourceProcessor.getLevel(falseValue) == 0) && (_javaSourceProcessor.getLevel(ifCondition) == 0) && (_javaSourceProcessor.getLevel(trueValue) == 0)) {
    return new String[]{ifCondition,trueValue,falseValue};
  }
  return null;
}

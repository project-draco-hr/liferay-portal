{
  StringBuilder sb=new StringBuilder();
  List<Layout> layouts=LayoutLocalServiceUtil.getLayouts(groupId,false);
  sb.append("update LayoutSet ");
  sb.append("set themeId = 'liferayjedi_WAR_liferayjeditheme', ");
  sb.append("pageCount = ");
  sb.append(layouts.size());
  sb.append(" where groupId = ");
  sb.append(groupId);
  sb.append(" and privateLayout = FALSE;\n\n");
  Collections.sort(layouts,new LayoutComparator(true));
  for (  Layout layout : layouts) {
    getNewPrimaryKey(layout.getPlid());
  }
  for (  Layout layout : layouts) {
    Properties props=layout.getTypeSettingsProperties();
    long linkToPlid=GetterUtil.getLong(props.getProperty("linkToPlid"));
    if (linkToPlid > 0) {
      long newLinkToPlid=getNewPrimaryKey(linkToPlid);
      props.setProperty("linkToPlid",String.valueOf(newLinkToPlid));
    }
    sb.append("insert into Layout (");
    sb.append("plid, groupId, companyId, privateLayout, layoutId, ");
    sb.append("parentLayoutId, name, title, type_, typeSettings, ");
    sb.append("hidden_, friendlyURL, iconImage, iconImageId, ");
    sb.append("css, priority");
    sb.append(") values (");
    addPKColumn(sb,layout.getPlid());
    addColumn(sb,layout.getGroupId());
    addColumn(sb,layout.getCompanyId());
    addColumn(sb,layout.isPrivateLayout());
    addColumn(sb,layout.getLayoutId());
    addColumn(sb,layout.getParentLayoutId());
    addColumn(sb,layout.getName());
    addColumn(sb,layout.getTitle());
    addColumn(sb,layout.getType());
    addColumn(sb,layout.getTypeSettings());
    addColumn(sb,layout.isHidden());
    addColumn(sb,layout.getFriendlyURL());
    addColumn(sb,layout.isIconImage());
    addColumn(sb,layout.getIconImageId());
    addColumn(sb,layout.getCss());
    addColumn(sb,layout.getPriority());
    removeTrailingComma(sb);
    sb.append(");\n");
  }
  sb.append("\n");
  for (  Layout layout : layouts) {
    LayoutTypePortlet layoutType=(LayoutTypePortlet)layout.getLayoutType();
    List<String> portletIds=layoutType.getPortletIds();
    Collections.sort(portletIds);
    for (int i=0; i < portletIds.size(); i++) {
      String portletId=portletIds.get(i);
      try {
        PortletPreferences portletPreferences=PortletPreferencesLocalServiceUtil.getPortletPreferences(PortletKeys.PREFS_OWNER_ID_DEFAULT,PortletKeys.PREFS_OWNER_TYPE_LAYOUT,layout.getPlid(),portletId);
        String prefsXml=portletPreferences.getPreferences();
        PortletPreferencesImpl prefs=(PortletPreferencesImpl)PortletPreferencesSerializer.fromDefaultXML(portletPreferences.getPreferences());
        String articleId=prefs.getValue("article-id",StringPool.BLANK);
        articleId=articleId.toUpperCase();
        if (Validator.isNotNull(articleId)) {
          if (!JournalArticleLocalServiceUtil.hasArticle(layout.getGroupId(),articleId)) {
            continue;
          }
          prefs.setValue("article-id",getNewPrimaryKey(articleId));
          prefsXml=PortletPreferencesSerializer.toXML(prefs);
          long contentSearchId=CounterLocalServiceUtil.increment();
          JournalContentSearch journalContentSearch=JournalContentSearchUtil.create(contentSearchId);
          journalContentSearch.setContentSearchId(contentSearchId);
          journalContentSearch.setCompanyId(layout.getCompanyId());
          journalContentSearch.setGroupId(layout.getGroupId());
          journalContentSearch.setPrivateLayout(layout.isPrivateLayout());
          journalContentSearch.setPortletId(portletId);
          journalContentSearch.setLayoutId(layout.getLayoutId());
          journalContentSearch.setPortletId(portletId);
          journalContentSearch.setArticleId(getNewPrimaryKey(articleId));
          journalContentSearches.add(journalContentSearch);
        }
        sb.append("insert into PortletPreferences (");
        sb.append("portletPreferencesId, ownerId, ownerType, ");
        sb.append("plid, portletId, preferences");
        sb.append(") values (");
        addPKColumn(sb,portletPreferences.getPortletPreferencesId());
        addColumn(sb,portletPreferences.getOwnerId());
        addColumn(sb,portletPreferences.getOwnerType());
        addPKColumn(sb,portletPreferences.getPlid());
        addColumn(sb,portletId);
        addColumn(sb,prefsXml);
        removeTrailingComma(sb);
        sb.append(");\n");
      }
 catch (      NoSuchPortletPreferencesException nsppe) {
        _log.warn(nsppe.getMessage());
      }
    }
    sb.append("\n");
  }
  removeTrailingNewLine(sb);
  removeTrailingNewLine(sb);
  zipWriter.addEntry("portal-data-cms-layout.sql",sb);
}

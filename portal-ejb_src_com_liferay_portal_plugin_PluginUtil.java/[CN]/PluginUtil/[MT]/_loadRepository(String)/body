{
  PluginRepository repository;
  String pluginsXmlURL=repositoryURL + StringPool.SLASH + _PLUGINS_XML_FILENAME;
  try {
    HttpClient client=new HttpClient();
    GetMethod getFile=new GetMethod(pluginsXmlURL);
    int responseCode=client.executeMethod(getFile);
    if (responseCode != 200) {
      throw new RuntimeException("Cannot download file: " + pluginsXmlURL + " Response"+ " code: "+ responseCode);
    }
    byte[] bytes=getFile.getResponseBody();
    getFile.releaseConnection();
    if ((bytes != null) && (bytes.length > 0)) {
      repository=_parsePluginsXml(new String(bytes),repositoryURL);
      _repositoryCache.put(repositoryURL,repository);
      _availableTagsCache.addAll(repository.getTags());
      _lastUpdateDate=new Date();
      return repository;
    }
 else {
      throw new RuntimeException("Download error");
    }
  }
 catch (  MalformedURLException mue) {
    throw new RuntimeException("Invalid URL:" + pluginsXmlURL);
  }
catch (  IOException ioe) {
    throw new RuntimeException("Communication error: " + ioe);
  }
catch (  DocumentException de) {
    throw new RuntimeException("Parse Error: " + de);
  }
}

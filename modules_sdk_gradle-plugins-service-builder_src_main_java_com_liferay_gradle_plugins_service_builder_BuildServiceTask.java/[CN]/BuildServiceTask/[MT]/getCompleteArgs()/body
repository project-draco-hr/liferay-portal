{
  List<String> args=new ArrayList<>(getArgs());
  args.add("service.api.dir=" + _relativize(getApiDir()));
  args.add("service.auto.import.default.references=" + isAutoImportDefaultReferences());
  args.add("service.auto.namespace.tables=" + isAutoNamespaceTables());
  args.add("service.bean.locator.util=" + getBeanLocatorUtil());
  args.add("service.build.number.increment=" + isBuildNumberIncrement());
  args.add("service.build.number=" + getBuildNumber());
  args.add("service.hbm.file=" + _relativize(getHbmFile()));
  args.add("service.impl.dir=" + _relativize(getImplDir()));
  args.add("service.input.file=" + _relativize(getInputFile()));
  args.add("service.model.hints.configs=" + CollectionUtils.join(",",getCompleteModelHintsConfigs()));
  args.add("service.model.hints.file=" + _relativize(getModelHintsFile()));
  args.add("service.osgi.module=" + isOsgiModule());
  args.add("service.plugin.name=" + getPluginName());
  args.add("service.props.util=" + getPropsUtil());
  args.add("service.read.only.prefixes=" + CollectionUtils.join(",",getReadOnlyPrefixes()));
  args.add("service.resource.actions.configs=" + CollectionUtils.join(",",getResourceActionsConfigs()));
  args.add("service.resources.dir=" + _relativize(getResourcesDir()));
  args.add("service.spring.file=" + _relativize(getSpringFile()));
  args.add("service.spring.namespaces=" + CollectionUtils.join(",",getSpringNamespaces()));
  args.add("service.sql.dir=" + _relativize(getSqlDir()));
  args.add("service.sql.file=" + getSqlFileName());
  args.add("service.sql.indexes.file=" + getSqlIndexesFileName());
  args.add("service.sql.sequences.file=" + getSqlSequencesFileName());
  String targetEntityName=getTargetEntityName();
  if (Validator.isNull(targetEntityName)) {
    targetEntityName="${service.target.entity.name}";
  }
  args.add("service.target.entity.name=" + targetEntityName);
  File testDir=getTestDir();
  if (testDir != null) {
    args.add("service.test.dir=" + _relativize(testDir));
  }
  return args;
}

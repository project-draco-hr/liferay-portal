{
  Method method=null;
  if (publicMethod) {
    method=clazz.getMethod(name,parameterTypes);
  }
 else {
    method=clazz.getDeclaredMethod(name,parameterTypes);
  }
  if (method.isBridge()) {
    return method;
  }
  Method[] methods=null;
  if (publicMethod) {
    methods=clazz.getMethods();
  }
 else {
    methods=clazz.getDeclaredMethods();
  }
  bridge:   for (  Method currentMethod : methods) {
    if (!currentMethod.isBridge() || !name.equals(currentMethod.getName())) {
      continue;
    }
    Class<?>[] currentParameterTypes=currentMethod.getParameterTypes();
    if (currentParameterTypes.length != parameterTypes.length) {
      continue;
    }
    for (int i=0; i < currentParameterTypes.length; i++) {
      if (!currentParameterTypes[i].isAssignableFrom(parameterTypes[i])) {
        continue bridge;
      }
    }
    return currentMethod;
  }
  throw new NoSuchMethodException("No bridge method on " + clazz + " with name "+ name+ " and parameter types "+ Arrays.toString(parameterTypes));
}

{
  JournalContentSearch journalContentSearch=findByPrimaryKey(journalContentSearchPK);
  int count=countByC_G_A(companyId,groupId,articleId);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM com.liferay.portlet.journal.model.JournalContentSearch WHERE ");
    if (companyId == null) {
      query.append("companyId IS NULL");
    }
 else {
      query.append("companyId = ?");
    }
    query.append(" AND ");
    if (groupId == null) {
      query.append("groupId IS NULL");
    }
 else {
      query.append("groupId = ?");
    }
    query.append(" AND ");
    if (articleId == null) {
      query.append("articleId IS NULL");
    }
 else {
      query.append("articleId = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
    Query q=session.createQuery(query.toString());
    q.setCacheable(true);
    int queryPos=0;
    if (companyId != null) {
      q.setString(queryPos++,companyId);
    }
    if (groupId != null) {
      q.setString(queryPos++,groupId);
    }
    if (articleId != null) {
      q.setString(queryPos++,articleId);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,journalContentSearch);
    JournalContentSearch[] array=new JournalContentSearchImpl[3];
    array[0]=(JournalContentSearch)objArray[0];
    array[1]=(JournalContentSearch)objArray[1];
    array[2]=(JournalContentSearch)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

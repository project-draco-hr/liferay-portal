{
  User user=UserUtil.findByPrimaryKey(userId);
  folderId=getFolderId(user.getCompanyId(),folderId);
  DLFolder folder=DLFolderUtil.findByPrimaryKey(folderId);
  Date now=new Date();
  if (Validator.isNull(title)) {
    title=name;
  }
  try {
    DLServiceUtil.addFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,folder.getGroupId(),folderId,name,byteArray);
  }
 catch (  RemoteException re) {
    throw new SystemException(re);
  }
  DLFileEntryPK pk=new DLFileEntryPK(folderId,name);
  DLFileEntry fileEntry=DLFileEntryUtil.create(pk);
  fileEntry.setCompanyId(user.getCompanyId());
  fileEntry.setUserId(user.getUserId());
  fileEntry.setUserName(user.getFullName());
  fileEntry.setVersionUserId(user.getUserId());
  fileEntry.setVersionUserName(user.getFullName());
  fileEntry.setCreateDate(now);
  fileEntry.setModifiedDate(now);
  fileEntry.setTitle(title);
  fileEntry.setDescription(description);
  fileEntry.setVersion(DLFileEntry.DEFAULT_VERSION);
  fileEntry.setSize(byteArray.length);
  fileEntry.setReadCount(DLFileEntry.DEFAULT_READ_COUNT);
  DLFileEntryUtil.update(fileEntry);
  addFileEntryResources(folder,fileEntry,addCommunityPermissions,addGuestPermissions);
  folder.setLastPostDate(fileEntry.getModifiedDate());
  DLFolderUtil.update(folder);
  return fileEntry;
}

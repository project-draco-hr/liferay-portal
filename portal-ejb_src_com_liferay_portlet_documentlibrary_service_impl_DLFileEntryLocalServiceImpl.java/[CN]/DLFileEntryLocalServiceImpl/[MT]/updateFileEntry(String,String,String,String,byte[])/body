{
  User user=UserUtil.findByPrimaryKey(userId);
  DLFolder folder=DLFolderUtil.findByPrimaryKey(folderId);
  DLFileEntryPK pk=new DLFileEntryPK(folderId,name);
  DLFileEntry fileEntry=DLFileEntryUtil.findByPrimaryKey(pk);
  double oldVersion=fileEntry.getVersion();
  double newVersion=MathUtil.format(oldVersion + 0.1,1,1);
  DLFileVersion fileVersion=DLFileVersionUtil.create(new DLFileVersionPK(folderId,name,oldVersion));
  String versionUserId=GetterUtil.getString(fileEntry.getVersionUserId(),fileEntry.getUserId());
  String versionUserName=GetterUtil.getString(fileEntry.getVersionUserName(),fileEntry.getUserName());
  fileVersion.setCompanyId(fileEntry.getCompanyId());
  fileVersion.setUserId(versionUserId);
  fileVersion.setUserName(versionUserName);
  fileVersion.setCreateDate(fileEntry.getModifiedDate());
  fileVersion.setSize(fileEntry.getSize());
  DLFileVersionUtil.update(fileVersion);
  fileEntry.setVersionUserId(user.getUserId());
  fileEntry.setVersionUserName(user.getFullName());
  fileEntry.setModifiedDate(new Date());
  fileEntry.setVersion(newVersion);
  fileEntry.setSize(byteArray.length);
  DLFileEntryUtil.update(fileEntry);
  try {
    DLServiceUtil.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,folder.getGroupId(),folderId,name,newVersion,sourceFileName,byteArray);
  }
 catch (  RemoteException re) {
    throw new SystemException(re);
  }
  folder.setLastPostDate(fileEntry.getModifiedDate());
  DLFolderUtil.update(folder);
  return fileEntry;
}

{
  if (!JournalServiceConfigurationValues.JOURNAL_ARTICLE_EXPIRE_ALL_VERSIONS) {
    return;
  }
  StringBundler sb=new StringBundler(13);
  sb.append("select JournalArticle.* from JournalArticle left join ");
  sb.append("JournalArticle tempJournalArticle on ");
  sb.append("(JournalArticle.groupId = tempJournalArticle.groupId) and ");
  sb.append("(JournalArticle.articleId = tempJournalArticle.articleId) ");
  sb.append("and (JournalArticle.version < tempJournalArticle.version) ");
  sb.append("and (JournalArticle.status = tempJournalArticle.status) ");
  sb.append("where (JournalArticle.classNameId = ");
  sb.append(JournalArticleConstants.CLASSNAME_ID_DEFAULT);
  sb.append(") and (tempJournalArticle.version is null) and ");
  sb.append("(JournalArticle.expirationDate is not null) and ");
  sb.append("(JournalArticle.status = ");
  sb.append(WorkflowConstants.STATUS_APPROVED);
  sb.append(")");
  try (PreparedStatement ps=con.prepareStatement(sb.toString());ResultSet rs=ps.executeQuery()){
    while (rs.next()) {
      long groupId=rs.getLong("groupId");
      long articleId=rs.getLong("articleId");
      Timestamp expirationDate=rs.getTimestamp("expirationDate");
      int status=rs.getInt("status");
      updateExpirationDate(con,groupId,articleId,expirationDate,status);
    }
  }
 }

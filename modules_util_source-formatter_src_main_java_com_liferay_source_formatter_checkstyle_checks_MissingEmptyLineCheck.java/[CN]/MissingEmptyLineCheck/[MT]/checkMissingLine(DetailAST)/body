{
  DetailAST firstChildAST=detailAST.getFirstChild();
  if ((firstChildAST == null) || (firstChildAST.getType() == TokenTypes.DOT)) {
    return;
  }
  DetailAST parentAST=detailAST.getParent();
  DetailAST nextSibling=parentAST.getNextSibling();
  if ((nextSibling == null) || (nextSibling.getType() != TokenTypes.SEMI)) {
    return;
  }
  nextSibling=nextSibling.getNextSibling();
  if (nextSibling == null) {
    return;
  }
  DetailAST nameAST=null;
  if (parentAST.getType() == TokenTypes.EXPR) {
    nameAST=detailAST.findFirstToken(TokenTypes.IDENT);
  }
 else   if (parentAST.getType() == TokenTypes.VARIABLE_DEF) {
    nameAST=parentAST.findFirstToken(TokenTypes.IDENT);
  }
  if (nameAST == null) {
    return;
  }
  int endLine=DetailASTUtil.getEndLine(detailAST);
  int startLineNextExpression=DetailASTUtil.getStartLine(nextSibling);
  if ((endLine + 1) != startLineNextExpression) {
    return;
  }
  String name=nameAST.getText();
  if (_isExpressionAssignsVariable(nextSibling,name)) {
    return;
  }
  List<DetailAST> identASTList=DetailASTUtil.getAllChildTokens(nextSibling,TokenTypes.IDENT,true);
  for (  DetailAST identAST : identASTList) {
    String identName=identAST.getText();
    if (identName.equals(name)) {
      log(startLineNextExpression,MSG_MISSING_EMPTY_LINE,name);
    }
  }
}

{
  mdrRule=toUnwrappedModel(mdrRule);
  boolean isNew=mdrRule.isNew();
  MDRRuleModelImpl mdrRuleModelImpl=(MDRRuleModelImpl)mdrRule;
  if (Validator.isNull(mdrRule.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    mdrRule.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (mdrRule.getCreateDate() == null)) {
    if (serviceContext == null) {
      mdrRule.setCreateDate(now);
    }
 else {
      mdrRule.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!mdrRuleModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      mdrRule.setModifiedDate(now);
    }
 else {
      mdrRule.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (mdrRule.isNew()) {
      session.save(mdrRule);
      mdrRule.setNew(false);
    }
 else {
      mdrRule=(MDRRule)session.merge(mdrRule);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !MDRRuleModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((mdrRuleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{mdrRuleModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((mdrRuleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleModelImpl.getOriginalUuid(),mdrRuleModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{mdrRuleModelImpl.getUuid(),mdrRuleModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((mdrRuleModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleModelImpl.getOriginalRuleGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RULEGROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID,args);
      args=new Object[]{mdrRuleModelImpl.getRuleGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RULEGROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID,args);
    }
  }
  entityCache.putResult(MDRRuleModelImpl.ENTITY_CACHE_ENABLED,MDRRuleImpl.class,mdrRule.getPrimaryKey(),mdrRule,false);
  clearUniqueFindersCache(mdrRuleModelImpl);
  cacheUniqueFindersCache(mdrRuleModelImpl,isNew);
  mdrRule.resetOriginalValues();
  return mdrRule;
}

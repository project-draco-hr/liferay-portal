{
  if (Validator.isNull(className)) {
    return null;
  }
  className=normalizeClassName(className);
  String[] beanNameParts=StringUtil.split(className,_MODEL);
  Object serviceBean=null;
  if (Validator.isNotNull(servletContextName)) {
    if (servletContextName.startsWith(StringPool.SLASH)) {
      servletContextName=servletContextName.substring(1);
    }
    try {
      serviceBean=PortletBeanLocatorUtil.locate(servletContextName,beanNameParts[0] + _SERVICE + beanNameParts[1]+ _LOCAL_SERVICE_UTIL);
    }
 catch (    BeanLocatorException ble) {
    }
  }
 else {
    try {
      serviceBean=PortalBeanLocatorUtil.locate(beanNameParts[0] + _SERVICE + beanNameParts[1]+ _LOCAL_SERVICE_UTIL);
    }
 catch (    BeanLocatorException ble) {
    }
  }
  Object bean=null;
  if (serviceBean == null) {
    return renderBean(request,response,servletContextName,bean,varientSuffix);
  }
  Method getMethod=null;
  try {
    getMethod=serviceBean.getClass().getDeclaredMethod("get" + beanNameParts[1],classPK.getClass());
  }
 catch (  Exception e) {
  }
  if (getMethod == null) {
    try {
      getMethod=serviceBean.getClass().getDeclaredMethod("get" + beanNameParts[1],mapToPrimitive(classPK.getClass()));
    }
 catch (    Exception e) {
    }
  }
  if (getMethod != null) {
    try {
      bean=getMethod.invoke(null,classPK);
    }
 catch (    Exception e) {
      _log.warn(e.getMessage());
    }
  }
  return renderBean(request,response,servletContextName,bean,varientSuffix);
}

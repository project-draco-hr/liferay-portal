{
  if (bean == null) {
    return null;
  }
  long companyId=PortalUtil.getCompanyId(request);
  String className=normalizeClassName(bean.getClass().getName());
  if (Validator.isNotNull(varientSuffix)) {
    className=varientSuffix;
  }
  String velocityTemplateContent=null;
  PortletPreferences preferences=getPortletPreferences(request);
  if (preferences != null) {
    velocityTemplateContent=preferences.getValue(RENDERER_TEMPLATE_PREFIX + className,StringPool.BLANK);
  }
  if (Validator.isNull(velocityTemplateContent) && Validator.isNotNull(servletContextName)) {
    if (servletContextName.startsWith(StringPool.SLASH)) {
      servletContextName=servletContextName.substring(1);
    }
    try {
      BeanLocator beanLocator=PortletBeanLocatorUtil.getBeanLocator(servletContextName);
      velocityTemplateContent=ContentUtil.get(beanLocator.getClassLoader(),PropsUtil.get(RENDERER_TEMPLATE_PREFIX + className));
    }
 catch (    Exception e) {
    }
  }
  if (Validator.isNull(velocityTemplateContent)) {
    try {
      velocityTemplateContent=PrefsPropsUtil.getContent(companyId,RENDERER_TEMPLATE_PREFIX + className);
    }
 catch (    Exception e) {
    }
  }
  if (Validator.isNull(velocityTemplateContent)) {
    _log.warn("No entity renderer template found for " + className);
    return null;
  }
  try {
    Template template=TemplateManagerUtil.getTemplate(TemplateManager.VELOCITY,className,velocityTemplateContent,TemplateContextType.STANDARD);
    template.prepare(request);
    template.put(_BEAN,bean);
    UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
    template.processTemplate(unsyncStringWriter);
    return unsyncStringWriter.toString();
  }
 catch (  Exception e) {
    _log.error(e,e);
    throw new RendererException(e);
  }
}

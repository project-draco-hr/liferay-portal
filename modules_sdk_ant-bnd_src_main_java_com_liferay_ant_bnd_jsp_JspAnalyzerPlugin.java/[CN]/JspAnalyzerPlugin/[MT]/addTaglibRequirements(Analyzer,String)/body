{
  Set<String> taglibRequirements=new TreeSet<String>();
  for (  String uri : getTaglibURIs(content)) {
    if (containsTLD(analyzer,analyzer.getJar(),"META-INF",uri) || containsTLD(analyzer,analyzer.getJar(),"WEB-INF/tld",uri) || containsTLDInBundleClassPath(analyzer,"META-INF",uri)) {
      continue;
    }
    if (Arrays.binarySearch(_JSTL_CORE_URIS,uri) < 0) {
      addTaglibRequirement(taglibRequirements,uri);
    }
  }
  if (taglibRequirements.isEmpty()) {
    return;
  }
  String value=analyzer.getProperty(Constants.REQUIRE_CAPABILITY);
  if (value != null) {
    Parameters parameters=OSGiHeader.parseHeader(value);
    for (    Entry<String,Attrs> entry : parameters.entrySet()) {
      StringBuilder sb=new StringBuilder(entry.getKey());
      Attrs attrs=entry.getValue();
      if (attrs != null) {
        sb.append(";");
        attrs.append(sb);
      }
      taglibRequirements.add(sb.toString());
    }
  }
  analyzer.setProperty(Constants.REQUIRE_CAPABILITY,Strings.join(taglibRequirements));
}

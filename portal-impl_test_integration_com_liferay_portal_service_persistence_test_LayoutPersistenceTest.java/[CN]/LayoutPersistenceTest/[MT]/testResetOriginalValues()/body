{
  Layout newLayout=addLayout();
  _persistence.clearCache();
  Layout existingLayout=_persistence.findByPrimaryKey(newLayout.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingLayout.getUuid(),ReflectionTestUtil.invoke(existingLayout,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingLayout.getGroupId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Boolean.valueOf(existingLayout.getPrivateLayout()),ReflectionTestUtil.<Boolean>invoke(existingLayout,"getOriginalPrivateLayout",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingLayout.getIconImageId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalIconImageId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingLayout.getGroupId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Boolean.valueOf(existingLayout.getPrivateLayout()),ReflectionTestUtil.<Boolean>invoke(existingLayout,"getOriginalPrivateLayout",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingLayout.getLayoutId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalLayoutId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingLayout.getGroupId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Boolean.valueOf(existingLayout.getPrivateLayout()),ReflectionTestUtil.<Boolean>invoke(existingLayout,"getOriginalPrivateLayout",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingLayout.getFriendlyURL(),ReflectionTestUtil.invoke(existingLayout,"getOriginalFriendlyURL",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingLayout.getGroupId()),ReflectionTestUtil.<Long>invoke(existingLayout,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Boolean.valueOf(existingLayout.getPrivateLayout()),ReflectionTestUtil.<Boolean>invoke(existingLayout,"getOriginalPrivateLayout",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingLayout.getSourcePrototypeLayoutUuid(),ReflectionTestUtil.invoke(existingLayout,"getOriginalSourcePrototypeLayoutUuid",new Class<?>[0])));
}

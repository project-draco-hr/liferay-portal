{
  if (_log.isDebugEnabled()) {
    _log.debug("Begin initializing company with web id " + webId);
  }
  long companyId=0;
  try {
    Company company=CompanyLocalServiceUtil.checkCompany(webId);
    companyId=company.getCompanyId();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  Long currentThreadCompanyId=CompanyThreadLocal.getCompanyId();
  Long currentThreadUserId=PrincipalThreadLocal.getUserId();
  try {
    CompanyThreadLocal.setCompanyId(companyId);
    long userId=0;
    try {
      User user=UserLocalServiceUtil.getUser(currentThreadUserId);
      if (user.getCompanyId() == companyId) {
        userId=currentThreadUserId;
      }
    }
 catch (    Exception e) {
    }
    PrincipalThreadLocal.setName(userId);
    LuceneHelperUtil.startup(companyId);
    if (_log.isDebugEnabled()) {
      _log.debug("Initialize display");
    }
    try {
      String xml=HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-display.xml"));
      PortletCategory portletCategory=(PortletCategory)WebAppPool.get(companyId,WebKeys.PORTLET_CATEGORY);
      if (portletCategory == null) {
        portletCategory=new PortletCategory();
      }
      PortletCategory newPortletCategory=PortletLocalServiceUtil.getEARDisplay(xml);
      portletCategory.merge(newPortletCategory);
      for (int i=0; i < _companyIds.length; i++) {
        long currentCompanyId=_companyIds[i];
        PortletCategory currentPortletCategory=(PortletCategory)WebAppPool.get(currentCompanyId,WebKeys.PORTLET_CATEGORY);
        if (currentPortletCategory != null) {
          portletCategory.merge(currentPortletCategory);
        }
      }
      WebAppPool.put(companyId,WebKeys.PORTLET_CATEGORY,portletCategory);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Check journal content search");
    }
    if (GetterUtil.getBoolean(PropsUtil.get(PropsKeys.JOURNAL_SYNC_CONTENT_SEARCH_ON_STARTUP))) {
      try {
        JournalContentSearchLocalServiceUtil.checkContentSearches(companyId);
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Process application startup events");
    }
    try {
      EventsProcessorUtil.process(PropsKeys.APPLICATION_STARTUP_EVENTS,PropsValues.APPLICATION_STARTUP_EVENTS,new String[]{String.valueOf(companyId)});
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    if (_log.isDebugEnabled()) {
      _log.debug("End initializing company with web id " + webId + " and company id "+ companyId);
    }
    addCompanyId(companyId);
  }
  finally {
    CompanyThreadLocal.setCompanyId(currentThreadCompanyId);
    PrincipalThreadLocal.setName(currentThreadUserId);
  }
  return companyId;
}

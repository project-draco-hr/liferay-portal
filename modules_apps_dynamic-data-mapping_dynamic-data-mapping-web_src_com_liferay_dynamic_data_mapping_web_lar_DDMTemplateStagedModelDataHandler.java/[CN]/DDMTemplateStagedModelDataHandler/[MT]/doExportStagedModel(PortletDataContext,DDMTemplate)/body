{
  Element templateElement=portletDataContext.getExportDataElement(template);
  DDMStructure structure=DDMStructureLocalServiceUtil.fetchStructure(template.getClassPK());
  if (structure != null) {
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,template,structure,PortletDataContext.REFERENCE_TYPE_STRONG);
  }
  ExportImportContentProcessor exportImportContentProcessor=getExportImportContentProcessor(DDMTemplate.class);
  if (template.isSmallImage()) {
    Image smallImage=ImageLocalServiceUtil.fetchImage(template.getSmallImageId());
    if (Validator.isNotNull(template.getSmallImageURL())) {
      String smallImageURL=exportImportContentProcessor.replaceExportContentReferences(portletDataContext,template,template.getSmallImageURL() + StringPool.SPACE,true,true);
      template.setSmallImageURL(smallImageURL);
    }
 else     if (smallImage != null) {
      String smallImagePath=ExportImportPathUtil.getModelPath(template,smallImage.getImageId() + StringPool.PERIOD + template.getSmallImageType());
      templateElement.addAttribute("small-image-path",smallImagePath);
      template.setSmallImageType(smallImage.getType());
      portletDataContext.addZipEntry(smallImagePath,smallImage.getTextObj());
    }
  }
  String script=exportImportContentProcessor.replaceExportContentReferences(portletDataContext,template,template.getScript(),portletDataContext.getBooleanParameter(DDMPortletDataHandler.NAMESPACE,"referenced-content"),true);
  template.setScript(script);
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(template.getCompanyId());
  if (defaultUserId == template.getUserId()) {
    templateElement.addAttribute("preloaded","true");
  }
  portletDataContext.addClassedModel(templateElement,ExportImportPathUtil.getModelPath(template),template);
}

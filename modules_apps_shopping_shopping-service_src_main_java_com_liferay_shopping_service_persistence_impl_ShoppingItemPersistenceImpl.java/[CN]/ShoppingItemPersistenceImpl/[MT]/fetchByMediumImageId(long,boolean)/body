{
  Object[] finderArgs=new Object[]{mediumImageId};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_MEDIUMIMAGEID,finderArgs,this);
  }
  if (result instanceof ShoppingItem) {
    ShoppingItem shoppingItem=(ShoppingItem)result;
    if ((mediumImageId != shoppingItem.getMediumImageId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_SHOPPINGITEM_WHERE);
    query.append(_FINDER_COLUMN_MEDIUMIMAGEID_MEDIUMIMAGEID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(mediumImageId);
      List<ShoppingItem> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_MEDIUMIMAGEID,finderArgs,list);
      }
 else {
        if (list.size() > 1) {
          Collections.sort(list,Collections.reverseOrder());
          if (_log.isWarnEnabled()) {
            _log.warn("ShoppingItemPersistenceImpl.fetchByMediumImageId(long, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
          }
        }
        ShoppingItem shoppingItem=list.get(0);
        result=shoppingItem;
        cacheResult(shoppingItem);
        if ((shoppingItem.getMediumImageId() != mediumImageId)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_MEDIUMIMAGEID,finderArgs,shoppingItem);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_MEDIUMIMAGEID,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (ShoppingItem)result;
  }
}

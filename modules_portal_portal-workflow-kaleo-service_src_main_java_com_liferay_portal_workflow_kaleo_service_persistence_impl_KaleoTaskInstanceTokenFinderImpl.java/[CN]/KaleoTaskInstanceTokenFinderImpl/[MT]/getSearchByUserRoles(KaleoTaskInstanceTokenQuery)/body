{
  Boolean searchByUserRoles=kaleoTaskInstanceTokenQuery.isSearchByUserRoles();
  if (searchByUserRoles == null) {
    return StringPool.BLANK;
  }
  if (searchByUserRoles) {
    List<Long> roleIds=getSearchByUserRoleIds(kaleoTaskInstanceTokenQuery);
    List<UserGroupRole> userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRoles(kaleoTaskInstanceTokenQuery.getUserId());
    List<UserGroupGroupRole> userGroupGroupRoles=getUserGroupGroupRoles(kaleoTaskInstanceTokenQuery.getUserId());
    if (roleIds.isEmpty() && userGroupRoles.isEmpty() && userGroupGroupRoles.isEmpty()) {
      return StringPool.BLANK;
    }
    StringBundler sb=new StringBundler();
    sb.append("AND ((");
    sb.append("KaleoTaskAssignmentInstance.assigneeClassName = ?) ");
    sb.append("AND (");
    for (int i=0; i < roleIds.size(); i++) {
      sb.append("(KaleoTaskAssignmentInstance.assigneeClassPK = ?)");
      sb.append(" OR ");
    }
    for (int i=0; i < userGroupRoles.size(); i++) {
      sb.append("((KaleoTaskAssignmentInstance.groupId = ?) AND ");
      sb.append("(KaleoTaskAssignmentInstance.assigneeClassPK = ?))");
      sb.append(" OR ");
    }
    for (int i=0; i < userGroupGroupRoles.size(); i++) {
      sb.append("((KaleoTaskAssignmentInstance.groupId = ?) AND ");
      sb.append("(KaleoTaskAssignmentInstance.assigneeClassPK = ?))");
      sb.append(" OR ");
    }
    sb.setIndex(sb.index() - 1);
    sb.append("))");
    return sb.toString();
  }
  StringBundler sb=new StringBundler(3);
  sb.append("AND ((");
  sb.append("KaleoTaskAssignmentInstance.assigneeClassName = ?) ");
  sb.append("AND (KaleoTaskAssignmentInstance.assigneeClassPK = ?))");
  return sb.toString();
}

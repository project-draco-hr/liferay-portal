{
  FlagsRequest flagsRequest=(FlagsRequest)message.getPayload();
  ServiceContext serviceContext=flagsRequest.getServiceContext();
  long companyId=serviceContext.getCompanyId();
  Company company=_companyLocalService.getCompany(serviceContext.getCompanyId());
  Layout layout=_layoutLocalService.getLayout(serviceContext.getPlid());
  Group group=layout.getGroup();
  String groupName=group.getDescriptiveName();
  String reporterUserName=null;
  String reporterEmailAddress=null;
  User reporterUser=_userLocalService.getUserById(serviceContext.getUserId());
  Locale locale=LocaleUtil.getDefault();
  if (reporterUser.isDefaultUser()) {
    reporterUserName=LanguageUtil.get(locale,"anonymous");
  }
 else {
    reporterUserName=reporterUser.getFullName();
    reporterEmailAddress=reporterUser.getEmailAddress();
  }
  String reportedUserName=StringPool.BLANK;
  String reportedEmailAddress=StringPool.BLANK;
  String reportedURL=StringPool.BLANK;
  User reportedUser=_userLocalService.getUserById(flagsRequest.getReportedUserId());
  if (reportedUser.isDefaultUser()) {
    reportedUserName=group.getDescriptiveName();
  }
 else {
    reportedUserName=reportedUser.getFullName();
    reportedEmailAddress=reportedUser.getEmailAddress();
    reportedURL=reportedUser.getDisplayURL(serviceContext.getThemeDisplay());
  }
  String contentType=ResourceActionsUtil.getModelResource(locale,flagsRequest.getClassName());
  String reason=LanguageUtil.get(locale,flagsRequest.getReason());
  FlagsGroupServiceConfiguration flagsGroupServiceConfiguration=ConfigurationProviderUtil.getConfiguration(FlagsGroupServiceConfiguration.class,new CompanyServiceSettingsLocator(companyId,"com.liferay.flags.configuration.FlagsConfiguration"));
  String fromName=flagsGroupServiceConfiguration.emailFromName();
  String fromAddress=flagsGroupServiceConfiguration.emailFromAddress();
  String subject=ContentUtil.get(FlagsRequestMessageListener.class.getClassLoader(),flagsGroupServiceConfiguration.emailSubject());
  String body=ContentUtil.get(FlagsRequestMessageListener.class.getClassLoader(),flagsGroupServiceConfiguration.emailBody());
  Set<User> recipients=getRecipients(companyId,serviceContext.getScopeGroupId());
  for (  User recipient : recipients) {
    try {
      notify(reporterUser.getUserId(),company,groupName,reporterEmailAddress,reporterUserName,reportedEmailAddress,reportedUserName,reportedURL,flagsRequest.getClassPK(),flagsRequest.getContentTitle(),contentType,flagsRequest.getContentURL(),reason,fromName,fromAddress,recipient.getFullName(),recipient.getEmailAddress(),subject,body,serviceContext);
    }
 catch (    IOException ioe) {
      if (_log.isWarnEnabled()) {
        _log.warn(ioe);
      }
    }
  }
}

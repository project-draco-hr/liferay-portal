{
  Map<String,Map<String,Map<String,String>>> localizedFieldsMap=getLocalizedFieldsMap();
  Map<String,Map<String,String>> fieldsMap=localizedFieldsMap.get(locale);
  Map<String,Map<String,Map<String,String>>> localizedTransientFieldsMap=getLocalizedTransientFieldsMap();
  Map<String,Map<String,String>> transientFieldsMap=localizedTransientFieldsMap.get(locale);
  if (fieldsMap != null) {
    return;
  }
  if (getParentStructureId() > 0) {
    DDMStructure parentStructure=DDMStructureLocalServiceUtil.getStructure(getParentStructureId());
    fieldsMap=parentStructure.getFieldsMap(locale);
    transientFieldsMap=parentStructure.getTransientFieldsMap(locale);
  }
 else {
    fieldsMap=new LinkedHashMap<String,Map<String,String>>();
    transientFieldsMap=new LinkedHashMap<String,Map<String,String>>();
  }
  XPath xPathSelector=SAXReaderUtil.createXPath("//dynamic-element");
  List<Node> nodes=xPathSelector.selectNodes(getDocument());
  for (  Node node : nodes) {
    Element element=(Element)node;
    String name=element.attributeValue("name");
    if (Validator.isNotNull(element.attributeValue("dataType"))) {
      fieldsMap.put(name,_getField(element,locale));
    }
 else {
      transientFieldsMap.put(name,_getField(element,locale));
    }
  }
  String[] privateFieldNames=PropsValues.DYNAMIC_DATA_MAPPING_STRUCTURE_PRIVATE_FIELD_NAMES;
  for (  String privateFieldName : privateFieldNames) {
    Map<String,String> privateField=_getPrivateField(privateFieldName);
    fieldsMap.put(privateFieldName,privateField);
  }
  localizedFieldsMap.put(locale,fieldsMap);
  localizedTransientFieldsMap.put(locale,transientFieldsMap);
}

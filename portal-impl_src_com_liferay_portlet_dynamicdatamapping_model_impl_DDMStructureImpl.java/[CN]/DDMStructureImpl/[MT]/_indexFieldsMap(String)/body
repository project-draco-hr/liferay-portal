{
  Map<String,Map<String,Map<String,String>>> localizedFieldsMap=getLocalizedFieldsMap();
  if (localizedFieldsMap.containsKey(locale)) {
    return;
  }
  Map<String,Map<String,Map<String,String>>> localizedPersistentFieldsMap=getLocalizedPersistentFieldsMap();
  Map<String,Map<String,Map<String,String>>> localizedTransientFieldsMap=getLocalizedTransientFieldsMap();
  Map<String,Map<String,String>> fieldsMap=new LinkedHashMap<String,Map<String,String>>();
  Map<String,Map<String,String>> persistentFieldsMap=new LinkedHashMap<String,Map<String,String>>();
  Map<String,Map<String,String>> transientFieldsMap=new LinkedHashMap<String,Map<String,String>>();
  if (getParentStructureId() > 0) {
    DDMStructure parentStructure=DDMStructureLocalServiceUtil.getStructure(getParentStructureId());
    fieldsMap.putAll(parentStructure.getFieldsMap(locale,true));
    persistentFieldsMap.putAll(parentStructure.getPersistentFieldsMap(locale));
    transientFieldsMap.putAll(parentStructure.getTransientFieldsMap(locale));
  }
  XPath xPathSelector=SAXReaderUtil.createXPath("//dynamic-element");
  Document document;
  try {
    document=SAXReaderUtil.read(getXsd());
  }
 catch (  DocumentException de) {
    throw new PortalException(de);
  }
  List<Node> nodes=xPathSelector.selectNodes(document);
  for (  Node node : nodes) {
    Element element=(Element)node;
    String name=element.attributeValue("name");
    fieldsMap.put(name,_getField(element,locale));
    if (Validator.isNotNull(element.attributeValue("dataType"))) {
      persistentFieldsMap.put(name,_getField(element,locale));
    }
 else {
      transientFieldsMap.put(name,_getField(element,locale));
    }
  }
  String[] privateFieldNames=PropsValues.DYNAMIC_DATA_MAPPING_STRUCTURE_PRIVATE_FIELD_NAMES;
  for (  String privateFieldName : privateFieldNames) {
    Map<String,String> privateField=_getPrivateField(privateFieldName);
    fieldsMap.put(privateFieldName,privateField);
    persistentFieldsMap.put(privateFieldName,privateField);
  }
  localizedFieldsMap.put(locale,fieldsMap);
  localizedPersistentFieldsMap.put(locale,persistentFieldsMap);
  localizedTransientFieldsMap.put(locale,transientFieldsMap);
}

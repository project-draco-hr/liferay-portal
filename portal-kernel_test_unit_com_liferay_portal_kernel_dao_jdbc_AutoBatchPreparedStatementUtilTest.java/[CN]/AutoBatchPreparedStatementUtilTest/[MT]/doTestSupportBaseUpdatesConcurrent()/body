{
  PreparedStatementInvocationHandler preparedStatementInvocationHandler=new PreparedStatementInvocationHandler(true);
  List<Method> methods=preparedStatementInvocationHandler.getMethods();
  ReflectionTestUtil.setFieldValue(AutoBatchPreparedStatementUtil.class,"_HIBERNATE_JDBC_BATCH_SIZE",2);
  try (PreparedStatement preparedStatement=AutoBatchPreparedStatementUtil.concurrentAutoBatch((Connection)ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(),new Class<?>[]{Connection.class},new ConnectionInvocationHandler(preparedStatementInvocationHandler)),StringPool.BLANK)){
    InvocationHandler invocationHandler=ProxyUtil.getInvocationHandler(preparedStatement);
    Assert.assertEquals(Integer.valueOf(0),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    Assert.assertTrue(methods.toString(),methods.isEmpty());
    Assert.assertArrayEquals(new int[0],preparedStatement.executeBatch());
    Assert.assertTrue(methods.toString(),methods.isEmpty());
    Assert.assertEquals(Integer.valueOf(0),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    preparedStatement.addBatch();
    Assert.assertEquals(methods.toString(),1,methods.size());
    Assert.assertEquals(PreparedStatement.class.getMethod("addBatch"),methods.remove(0));
    Assert.assertEquals(Integer.valueOf(1),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    preparedStatement.addBatch();
    Assert.assertEquals(methods.toString(),3,methods.size());
    Assert.assertEquals(PreparedStatement.class.getMethod("addBatch"),methods.remove(0));
    Assert.assertEquals(PreparedStatement.class.getMethod("executeBatch"),methods.remove(0));
    Assert.assertEquals(Integer.valueOf(0),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    Assert.assertEquals(PreparedStatement.class.getMethod("close"),methods.remove(0));
    preparedStatement.addBatch();
    Assert.assertEquals(methods.toString(),1,methods.size());
    Assert.assertEquals(PreparedStatement.class.getMethod("addBatch"),methods.remove(0));
    Assert.assertEquals(Integer.valueOf(1),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    preparedStatement.executeBatch();
    Assert.assertEquals(methods.toString(),2,methods.size());
    Assert.assertEquals(PreparedStatement.class.getMethod("executeBatch"),methods.remove(0));
    Assert.assertEquals(Integer.valueOf(0),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
    Assert.assertEquals(PreparedStatement.class.getMethod("close"),methods.remove(0));
    preparedStatement.execute();
    Assert.assertEquals(methods.toString(),1,methods.size());
    Assert.assertEquals(PreparedStatement.class.getMethod("execute"),methods.remove(0));
    Assert.assertEquals(Integer.valueOf(0),ReflectionTestUtil.getFieldValue(invocationHandler,"_count"));
  }
  finally {
    ReflectionTestUtil.setFieldValue(AutoBatchPreparedStatementUtil.class,"_HIBERNATE_JDBC_BATCH_SIZE",_HIBERNATE_JDBC_BATCH_SIZE);
  }
  Assert.assertEquals(methods.toString(),1,methods.size());
  Assert.assertEquals(PreparedStatement.class.getMethod("close"),methods.remove(0));
}

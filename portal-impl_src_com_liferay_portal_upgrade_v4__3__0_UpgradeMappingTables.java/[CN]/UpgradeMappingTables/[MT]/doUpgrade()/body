{
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",AvailableMappersUtil.getGroupIdMapper());
  UpgradeColumn upgradeOrganizationIdColumn=new SwapUpgradeColumnImpl("organizationId",AvailableMappersUtil.getOrganizationIdMapper());
  UpgradeColumn upgradeRoleIdColumn=new SwapUpgradeColumnImpl("roleId",AvailableMappersUtil.getRoleIdMapper());
  UpgradeColumn upgradeUserGroupIdColumn=new SwapUpgradeColumnImpl("userGroupId",AvailableMappersUtil.getUserGroupIdMapper());
  UpgradeColumn upgradeUserIdColumn=new SwapUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(_TABLE_GROUPS_ORGS,_COLUMNS_GROUPS_ORGS,upgradeGroupIdColumn,upgradeOrganizationIdColumn);
  upgradeTable.setCreateSQL(_CREATE_GROUPS_ORGS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_GROUPS_PERMISSIONS,_COLUMNS_GROUPS_PERMISSIONS,upgradeGroupIdColumn);
  upgradeTable.setCreateSQL(_CREATE_GROUPS_PERMISSIONS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_GROUPS_ROLES,_COLUMNS_GROUPS_ROLES,upgradeGroupIdColumn,upgradeRoleIdColumn);
  upgradeTable.setCreateSQL(_CREATE_GROUPS_ROLES);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_GROUPS_USERGROUPS,_COLUMNS_GROUPS_USERGROUPS,upgradeGroupIdColumn,upgradeUserGroupIdColumn);
  upgradeTable.setCreateSQL(_CREATE_GROUPS_USERGROUPS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_ROLES_PERMISSIONS,_COLUMNS_ROLES_PERMISSIONS,upgradeRoleIdColumn);
  upgradeTable.setCreateSQL(_CREATE_ROLES_PERMISSIONS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_USERS_GROUPS,_COLUMNS_USERS_GROUPS,upgradeUserIdColumn,upgradeGroupIdColumn);
  upgradeTable.setCreateSQL(_CREATE_USERS_GROUPS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_USERS_ORGS,_COLUMNS_USERS_ORGS,upgradeUserIdColumn,upgradeOrganizationIdColumn);
  upgradeTable.setCreateSQL(_CREATE_USERS_ORGS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_USERS_PERMISSIONS,_COLUMNS_USERS_PERMISSIONS,upgradeUserIdColumn);
  upgradeTable.setCreateSQL(_CREATE_USERS_PERMISSIONS);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_USERS_ROLES,_COLUMNS_USERS_ROLES,upgradeUserIdColumn,upgradeRoleIdColumn);
  upgradeTable.setCreateSQL(_CREATE_USERS_ROLES);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(_TABLE_USERS_USERGROUPS,_COLUMNS_USERS_USERGROUPS,upgradeUserIdColumn,upgradeUserGroupIdColumn);
  upgradeTable.setCreateSQL(_CREATE_USERS_USERGROUPS);
  upgradeTable.updateTable();
  persistValueMapper(AvailableMappersUtil.getBlogsCategoryIdMapper(),"blogs-category-id");
  persistValueMapper(AvailableMappersUtil.getBlogsEntryIdMapper(),"blogs-entry-id");
  persistValueMapper(AvailableMappersUtil.getBookmarksFolderIdMapper(),"bookmarks-folder-id");
  persistValueMapper(AvailableMappersUtil.getBookmarksEntryIdMapper(),"bookmarks-entry-id");
  persistValueMapper(AvailableMappersUtil.getCalEventIdMapper(),"cal-event-id");
  persistValueMapper(AvailableMappersUtil.getCompanyIdMapper(),"company-id");
  persistValueMapper(AvailableMappersUtil.getContactIdMapper(),"contact-id");
  persistValueMapper(AvailableMappersUtil.getDLFileEntryIdMapper(),"dl-file-entry-id");
  persistValueMapper(AvailableMappersUtil.getDLFileShortcutIdMapper(),"dl-file-shortcut-id");
  persistValueMapper(AvailableMappersUtil.getDLFolderIdMapper(),"dl-folder-id");
  persistValueMapper(AvailableMappersUtil.getGroupIdMapper(),"group-id");
  persistValueMapper(AvailableMappersUtil.getIGFolderIdMapper(),"ig-folder-id");
  persistValueMapper(AvailableMappersUtil.getIGImageIdMapper(),"ig-image-id");
  persistValueMapper(AvailableMappersUtil.getImageIdMapper(),"image-id");
  persistValueMapper(AvailableMappersUtil.getJournalArticleIdMapper(),"journal-article-id");
  persistValueMapper(AvailableMappersUtil.getJournalStructureIdMapper(),"journal-structure-id");
  persistValueMapper(AvailableMappersUtil.getJournalTemplateIdMapper(),"journal-template-id");
  persistValueMapper(AvailableMappersUtil.getLayoutPlidMapper(),"layout-plid");
  persistValueMapper(AvailableMappersUtil.getMBCategoryIdMapper(),"mb-category-id");
  persistValueMapper(AvailableMappersUtil.getMBMessageIdMapper(),"mb-message-id");
  persistValueMapper(AvailableMappersUtil.getOrganizationIdMapper(),"organization-id");
  persistValueMapper(AvailableMappersUtil.getPollsQuestionIdMapper(),"polls-question-id");
  persistValueMapper(AvailableMappersUtil.getRoleIdMapper(),"role-id");
  persistValueMapper(AvailableMappersUtil.getShoppingCategoryIdMapper(),"shopping-category-id");
  persistValueMapper(AvailableMappersUtil.getShoppingItemIdMapper(),"shopping-item-id");
  persistValueMapper(AvailableMappersUtil.getUserGroupIdMapper(),"user-group-id");
  persistValueMapper(AvailableMappersUtil.getUserIdMapper(),"user-id");
  persistValueMapper(AvailableMappersUtil.getWikiNodeIdMapper(),"wiki-node-id");
  persistValueMapper(AvailableMappersUtil.getWikiPageIdMapper(),"wiki-page-id");
}

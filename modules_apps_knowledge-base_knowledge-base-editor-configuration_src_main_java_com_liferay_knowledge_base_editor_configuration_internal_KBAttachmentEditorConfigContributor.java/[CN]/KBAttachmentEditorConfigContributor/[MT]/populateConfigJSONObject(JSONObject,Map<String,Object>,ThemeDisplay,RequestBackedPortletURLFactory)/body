{
  boolean allowBrowseDocuments=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:allowBrowseDocuments"));
  if (!allowBrowseDocuments) {
    return;
  }
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  long resourcePrimKey=0;
  if (fileBrowserParamsMap != null) {
    resourcePrimKey=GetterUtil.getLong(fileBrowserParamsMap.get("resourcePrimKey"));
  }
  if (resourcePrimKey == 0) {
    return;
  }
  List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(new FileEntryItemSelectorReturnType());
  desiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  ItemSelectorCriterion kbAttachmentsItemSelectorCriterion=getKBAttachmentItemSelectorCriterion(resourcePrimKey,desiredItemSelectorReturnTypes);
  ItemSelectorCriterion imageItemSelectorCriterion=getImageItemSelectorCriterion(desiredItemSelectorReturnTypes);
  ItemSelectorCriterion urlItemSelectorCriterion=getURLItemSelectorCriterion();
  ItemSelectorCriterion uploadItemSelectorCriterion=getUploadItemSelectorCriterion(resourcePrimKey,themeDisplay,requestBackedPortletURLFactory);
  String namespace=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:namespace"));
  String name=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  PortletURL itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,namespace + name + "selectItem",kbAttachmentsItemSelectorCriterion,imageItemSelectorCriterion,urlItemSelectorCriterion,uploadItemSelectorCriterion);
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL.toString());
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL.toString());
}

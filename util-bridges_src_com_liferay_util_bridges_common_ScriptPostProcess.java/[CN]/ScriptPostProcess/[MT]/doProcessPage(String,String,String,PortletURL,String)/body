{
  StringBundler sb=new StringBundler();
  String content=_sb.toString();
  int startTagPos=content.indexOf(startTag);
  int endTagPos=0;
  int startRefPos=0;
  int endRefPos=0;
  while (startTagPos != -1) {
    sb.append(content.substring(0,startTagPos));
    content=content.substring(startTagPos);
    endTagPos=content.indexOf(endTag);
    startRefPos=content.indexOf(ref);
    if ((startRefPos == -1) || (startRefPos > endTagPos)) {
      sb.append(content.substring(0,endTagPos));
      content=content.substring(endTagPos);
    }
 else {
      startRefPos=startRefPos + ref.length();
      sb.append(content.substring(0,startRefPos));
      content=content.substring(startRefPos);
      String quote=StringPool.BLANK;
      if (content.startsWith(StringPool.APOSTROPHE)) {
        quote=StringPool.APOSTROPHE;
      }
 else       if (content.startsWith(StringPool.QUOTE)) {
        quote=StringPool.QUOTE;
      }
      String url=StringPool.BLANK;
      if (quote.length() > 0) {
        sb.append(quote);
        content=content.substring(1);
        endRefPos=content.indexOf(quote);
        url=content.substring(0,endRefPos);
      }
 else {
        endTagPos=content.indexOf(endTag);
        endRefPos=0;
        StringBundler unquotedURL=new StringBundler();
        while (true) {
          char c=content.charAt(endRefPos);
          if (!Character.isSpaceChar(c) && (endRefPos < endTagPos)) {
            endRefPos++;
            unquotedURL.append(c);
          }
 else {
            endRefPos--;
            break;
          }
        }
        url=unquotedURL.toString();
      }
      if ((url.charAt(0) == CharPool.POUND) || url.startsWith("http")) {
        sb.append(url);
        sb.append(quote);
      }
 else {
        actionURL.setParameter(actionParameterName,url);
        sb.append(actionURL.toString());
        sb.append(quote);
      }
      content=content.substring(endRefPos + 1);
    }
    startTagPos=content.indexOf(startTag);
  }
  sb.append(content);
  _sb=sb;
}

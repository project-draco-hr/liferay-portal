{
  String fileExtension=fileUtil.getExtension(fileName);
  if (!portalSource || fileExtension.equals("vm")) {
    return;
  }
  if (_portalLanguageKeysProperties == null) {
    _portalLanguageKeysProperties=new Properties();
    ClassLoader classLoader=BaseSourceProcessor.class.getClassLoader();
    InputStream inputStream=classLoader.getResourceAsStream("content/Language.properties");
    _portalLanguageKeysProperties.load(inputStream);
  }
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    String[] languageKeys=getLanguageKeys(matcher);
    for (    String languageKey : languageKeys) {
      if (Validator.isNumber(languageKey) || languageKey.endsWith(StringPool.DASH) || languageKey.endsWith(StringPool.OPEN_BRACKET)|| languageKey.endsWith(StringPool.PERIOD)|| languageKey.endsWith(StringPool.UNDERLINE)|| languageKey.startsWith(StringPool.DASH)|| languageKey.startsWith(StringPool.OPEN_BRACKET)|| languageKey.startsWith(StringPool.OPEN_CURLY_BRACE)|| languageKey.startsWith(StringPool.PERIOD)|| languageKey.startsWith(StringPool.UNDERLINE)|| _portalLanguageKeysProperties.containsKey(languageKey)) {
        continue;
      }
      Properties languageProperties=getLanguageProperties(fileName);
      if ((languageProperties == null) || !languageProperties.containsKey(languageKey)) {
        processErrorMessage(fileName,"missing language key: " + languageKey + StringPool.SPACE+ fileName);
      }
    }
  }
}

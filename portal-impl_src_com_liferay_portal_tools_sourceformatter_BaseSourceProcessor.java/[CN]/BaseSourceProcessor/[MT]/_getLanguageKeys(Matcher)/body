{
  if (matcher.groupCount() > 0) {
    String languageKey=matcher.group(1);
    if (Validator.isNotNull(languageKey)) {
      return new String[]{languageKey};
    }
  }
  StringBundler sb=new StringBundler();
  String match=matcher.group();
  int count=0;
  for (int i=0; i < match.length(); i++) {
    char c=match.charAt(i);
switch (c) {
case CharPool.CLOSE_PARENTHESIS:
      if (count <= 1) {
        return new String[0];
      }
    count--;
  break;
case CharPool.OPEN_PARENTHESIS:
count++;
break;
case CharPool.QUOTE:
if (count > 1) {
break;
}
while (i < match.length()) {
i++;
if (match.charAt(i) == CharPool.QUOTE) {
String languageKey=sb.toString();
if (match.startsWith("names")) {
return StringUtil.split(languageKey);
}
 else {
return new String[]{languageKey};
}
}
sb.append(match.charAt(i));
}
}
}
return new String[0];
}

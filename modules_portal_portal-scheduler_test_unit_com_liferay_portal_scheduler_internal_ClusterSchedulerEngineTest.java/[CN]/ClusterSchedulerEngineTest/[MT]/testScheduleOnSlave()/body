{
  _mockClusterMasterExecutor.reset(false,1,0);
  _mockSchedulerEngine.resetJobs(0,0);
  _clusterSchedulerEngine.start();
  List<SchedulerResponse> schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertEquals(1,_memoryClusteredJobs.size());
  Trigger trigger=getTrigger(_TEST_JOB_NAME_PREFIX + "new",_MEMORY_CLUSTER_TEST_GROUP_NAME,_DEFAULT_INTERVAL);
  _clusterSchedulerEngine.schedule(trigger,StringPool.BLANK,StringPool.BLANK,new Message(),StorageType.MEMORY_CLUSTERED);
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertEquals(2,_memoryClusteredJobs.size());
  ClusterInvokeThreadLocal.setEnabled(false);
  Assert.assertTrue(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
}

{
  _mockClusterMasterExecutor.reset(false,1,0);
  _mockSchedulerEngine.resetJobs(0,0);
  _clusterSchedulerEngine.start();
  Assert.assertNull(_clusterSchedulerEngine.getScheduledJob(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME,StorageType.MEMORY_CLUSTERED));
  SchedulerResponse schedulerResponse=getMemoryClusteredJob(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  assertSuppressErrorValue(schedulerResponse,null);
  _clusterSchedulerEngine.suppressError(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME,StorageType.MEMORY_CLUSTERED);
  Assert.assertNull(_clusterSchedulerEngine.getScheduledJob(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME,StorageType.MEMORY_CLUSTERED));
  schedulerResponse=getMemoryClusteredJob(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  assertSuppressErrorValue(schedulerResponse,null);
  ClusterInvokeThreadLocal.setEnabled(false);
  Assert.assertTrue(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
}

{
  if (recipientsElement == null) {
    return;
  }
  List<Element> addressRecipientElements=recipientsElement.elements("address");
  for (  Element addressRecipientElement : addressRecipientElements) {
    AddressRecipient addressRecipient=new AddressRecipient(addressRecipientElement.getText());
    addressRecipient.setNotificationReceptionType(notificationReceptionType);
    notification.addRecipients(addressRecipient);
  }
  Element assigneesRecipientElement=recipientsElement.element("assignees");
  if (assigneesRecipientElement != null) {
    AssigneesRecipient assigneesRecipient=new AssigneesRecipient();
    assigneesRecipient.setNotificationReceptionType(notificationReceptionType);
    notification.addRecipients(assigneesRecipient);
  }
  Element rolesElement=recipientsElement.element("roles");
  if (rolesElement != null) {
    List<Element> roleReceipientElements=rolesElement.elements("role");
    for (    Element roleReceipientElement : roleReceipientElements) {
      long roleId=GetterUtil.getLong(roleReceipientElement.elementText("role-id"));
      String roleType=roleReceipientElement.elementText("role-type");
      String name=roleReceipientElement.elementText("name");
      RoleRecipient roleRecipient=null;
      if (roleId > 0) {
        roleRecipient=new RoleRecipient(roleId,roleType);
      }
 else {
        roleRecipient=new RoleRecipient(name,roleType);
        boolean autoCreate=GetterUtil.getBoolean(roleReceipientElement.elementText("auto-create"),true);
        roleRecipient.setAutoCreate(autoCreate);
      }
      roleRecipient.setNotificationReceptionType(notificationReceptionType);
      notification.addRecipients(roleRecipient);
    }
  }
  List<Element> scriptedRecipientElements=recipientsElement.elements("scripted-recipient");
  for (  Element scriptedRecipientElement : scriptedRecipientElements) {
    String script=scriptedRecipientElement.elementText("script");
    String scriptLanguage=scriptedRecipientElement.elementText("script-language");
    String scriptRequiredContexts=scriptedRecipientElement.elementText("script-required-contexts");
    ScriptRecipient scriptRecipient=new ScriptRecipient(script,scriptLanguage,scriptRequiredContexts);
    scriptRecipient.setNotificationReceptionType(notificationReceptionType);
    notification.addRecipients(scriptRecipient);
  }
  List<Element> userRecipientElements=recipientsElement.elements("user");
  for (  Element userRecipientElement : userRecipientElements) {
    long userId=GetterUtil.getLong(userRecipientElement.elementText("user-id"));
    String screenName=userRecipientElement.elementText("screen-name");
    String emailAddress=userRecipientElement.elementText("email-address");
    UserRecipient userRecipient=new UserRecipient(userId,screenName,emailAddress);
    userRecipient.setNotificationReceptionType(notificationReceptionType);
    notification.addRecipients(userRecipient);
  }
}

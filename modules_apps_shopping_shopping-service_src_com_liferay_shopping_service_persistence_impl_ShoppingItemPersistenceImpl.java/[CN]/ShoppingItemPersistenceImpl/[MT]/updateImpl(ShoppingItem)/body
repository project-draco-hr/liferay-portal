{
  shoppingItem=toUnwrappedModel(shoppingItem);
  boolean isNew=shoppingItem.isNew();
  ShoppingItemModelImpl shoppingItemModelImpl=(ShoppingItemModelImpl)shoppingItem;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (shoppingItem.getCreateDate() == null)) {
    if (serviceContext == null) {
      shoppingItem.setCreateDate(now);
    }
 else {
      shoppingItem.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!shoppingItemModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      shoppingItem.setModifiedDate(now);
    }
 else {
      shoppingItem.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (shoppingItem.isNew()) {
      session.save(shoppingItem);
      shoppingItem.setNew(false);
    }
 else {
      shoppingItem=(ShoppingItem)session.merge(shoppingItem);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !ShoppingItemModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((shoppingItemModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{shoppingItemModelImpl.getOriginalGroupId(),shoppingItemModelImpl.getOriginalCategoryId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C,args);
      args=new Object[]{shoppingItemModelImpl.getGroupId(),shoppingItemModelImpl.getCategoryId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_G_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C,args);
    }
  }
  EntityCacheUtil.putResult(ShoppingItemModelImpl.ENTITY_CACHE_ENABLED,ShoppingItemImpl.class,shoppingItem.getPrimaryKey(),shoppingItem,false);
  clearUniqueFindersCache(shoppingItemModelImpl);
  cacheUniqueFindersCache(shoppingItemModelImpl,isNew);
  shoppingItem.resetOriginalValues();
  return shoppingItem;
}

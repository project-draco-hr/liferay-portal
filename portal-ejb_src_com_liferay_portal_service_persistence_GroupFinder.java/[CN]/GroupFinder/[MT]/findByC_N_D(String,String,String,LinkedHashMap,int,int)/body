{
  name=StringUtil.lowerCase(name);
  description=StringUtil.lowerCase(description);
  if (params == null) {
    params=new LinkedHashMap();
  }
  String userId=(String)params.get("usersGroups");
  LinkedHashMap params1=params;
  LinkedHashMap params2=new LinkedHashMap();
  params2.putAll(params1);
  if (Validator.isNotNull(userId)) {
    params2.remove("usersGroups");
    params2.put("groupsOrgs",userId);
  }
  LinkedHashMap params3=new LinkedHashMap();
  params3.putAll(params1);
  if (Validator.isNotNull(userId)) {
    params3.remove("usersGroups");
    params3.put("groupsUserGroups",userId);
  }
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    StringBuffer sb=new StringBuffer();
    sb.append("(");
    sb.append(CustomSQLUtil.get(FIND_BY_C_N_D));
    String sql=sb.toString();
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin(params1));
    sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere(params1));
    sb=new StringBuffer();
    sb.append(sql);
    sb.append(")");
    if (Validator.isNotNull(userId)) {
      sb.append(" UNION (");
      sb.append(CustomSQLUtil.get(FIND_BY_C_N_D));
      sql=sb.toString();
      sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin(params2));
      sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere(params2));
      sb=new StringBuffer();
      sb.append(sql);
      sb.append(") UNION (");
      sb.append(CustomSQLUtil.get(FIND_BY_C_N_D));
      sql=sb.toString();
      sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin(params3));
      sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere(params3));
      sb=new StringBuffer();
      sb.append(sql);
      sb.append(")");
    }
    sb.append(" ORDER BY groupName ASC");
    sql=sb.toString();
    SQLQuery q=session.createSQLQuery(sql);
    q.setCacheable(false);
    q.addScalar("groupId",Hibernate.STRING);
    QueryPos qPos=QueryPos.getInstance(q);
    _setJoin(qPos,params1);
    qPos.add(companyId);
    qPos.add(name);
    qPos.add(name);
    qPos.add(description);
    qPos.add(description);
    if (Validator.isNotNull(userId)) {
      _setJoin(qPos,params2);
      qPos.add(companyId);
      qPos.add(name);
      qPos.add(name);
      qPos.add(description);
      qPos.add(description);
      _setJoin(qPos,params3);
      qPos.add(companyId);
      qPos.add(name);
      qPos.add(name);
      qPos.add(description);
      qPos.add(description);
    }
    List list=new ArrayList();
    Iterator itr=QueryUtil.iterate(q,HibernateUtil.getDialect(),begin,end);
    while (itr.hasNext()) {
      long groupId=GetterUtil.getLong((String)itr.next());
      Group group=GroupUtil.findByPrimaryKey(groupId);
      list.add(group);
    }
    return list;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

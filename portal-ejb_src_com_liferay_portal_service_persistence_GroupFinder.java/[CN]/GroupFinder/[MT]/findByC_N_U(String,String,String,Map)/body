{
  name=StringUtil.lowerCase(name);
  List list=new ArrayList();
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    Map orgsGroupsParams=new HashMap();
    orgsGroupsParams.putAll(params);
    orgsGroupsParams.remove("usersGroups");
    String sql=null;
    sql="(";
    sql+=CustomSQLUtil.get(FIND_BY_C_N_1);
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin(params));
    sql+=")";
    sql+=" UNION ";
    sql+="(";
    sql+=CustomSQLUtil.get(FIND_BY_ORGS_GROUPS);
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin(orgsGroupsParams));
    sql+=")";
    sql+=" ORDER BY groupName ASC";
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar("groupId",Hibernate.STRING);
    QueryPos qPos=QueryPos.getInstance(q);
    _setJoin(qPos,params);
    qPos.add(companyId);
    qPos.add(StringPool.BLANK);
    qPos.add(StringPool.BLANK);
    qPos.add(name);
    qPos.add(name);
    _setJoin(qPos,orgsGroupsParams);
    qPos.add(userId);
    qPos.add(Organization.class.getName());
    Iterator itr=q.list().iterator();
    while (itr.hasNext()) {
      String groupId=(String)itr.next();
      Group group=GroupUtil.findByPrimaryKey(groupId);
      list.add(group);
    }
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
  return list;
}

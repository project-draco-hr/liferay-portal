{
  HttpServletRequest request=serviceContext.getRequest();
  if (!(request instanceof UploadRequest)) {
    return;
  }
  UploadRequest uploadRequest=(UploadRequest)request;
  Fields fields=StorageEngineUtil.getFields(storageId);
  List<String> fieldNames=getFieldNames(structureId,fieldName,fieldNamespace,serviceContext);
  List<Serializable> fieldValues=new ArrayList<Serializable>(fieldNames.size());
  for (  String fieldNameValue : fieldNames) {
    InputStream inputStream=null;
    try {
      String fileName=uploadRequest.getFileName(fieldNameValue);
      inputStream=uploadRequest.getFileAsStream(fieldName,true);
      if (inputStream != null) {
        String filePath=storeFieldFile(baseModel,fieldName,inputStream,serviceContext);
        JSONObject recordFileJSONObject=JSONFactoryUtil.createJSONObject();
        recordFileJSONObject.put("name",fileName);
        recordFileJSONObject.put("path",filePath);
        recordFileJSONObject.put("className",baseModel.getModelClassName());
        recordFileJSONObject.put("classPK",String.valueOf(baseModel.getPrimaryKeyObj()));
        String fieldValue=recordFileJSONObject.toString();
        fieldValues.add(fieldValue);
      }
 else       if (fields.contains(fieldName)) {
        continue;
      }
    }
  finally {
      StreamUtil.cleanUp(inputStream);
    }
  }
  Field field=new Field(structureId,fieldName,fieldValues);
  fields.put(field);
  StorageEngineUtil.update(storageId,fields,true,serviceContext);
}

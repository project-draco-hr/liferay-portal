{
  if (fieldValue instanceof Date) {
    Date valueDate=(Date)fieldValue;
    DateFormat dateFormat=DateFormatFactoryUtil.getDate(themeDisplay.getLocale());
    fieldValue=dateFormat.format(valueDate);
  }
 else   if (type.equals(DDMImpl.TYPE_CHECKBOX)) {
    Boolean valueBoolean=(Boolean)fieldValue;
    if (valueBoolean) {
      fieldValue=LanguageUtil.get(themeDisplay.getLocale(),"yes");
    }
 else {
      fieldValue=LanguageUtil.get(themeDisplay.getLocale(),"no");
    }
  }
 else   if (type.equals(DDMImpl.TYPE_DDM_DOCUMENTLIBRARY)) {
    if (Validator.isNull(fieldValue)) {
      return StringPool.BLANK;
    }
    String valueString=String.valueOf(fieldValue);
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject(valueString);
    String uuid=jsonObject.getString("uuid");
    long groupId=jsonObject.getLong("groupId");
    FileEntry fileEntry=DLAppLocalServiceUtil.getFileEntryByUuidAndGroupId(uuid,groupId);
    fieldValue=DLUtil.getPreviewURL(fileEntry,fileEntry.getFileVersion(),null,StringPool.BLANK,false,true);
  }
 else   if (type.equals(DDMImpl.TYPE_DDM_LINK_TO_PAGE)) {
    if (Validator.isNull(fieldValue)) {
      return StringPool.BLANK;
    }
    String valueString=String.valueOf(fieldValue);
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject(valueString);
    long groupId=jsonObject.getLong("groupId");
    boolean privateLayout=jsonObject.getBoolean("privateLayout");
    long layoutId=jsonObject.getLong("layoutId");
    Layout layout=LayoutLocalServiceUtil.getLayout(groupId,privateLayout,layoutId);
    fieldValue=PortalUtil.getLayoutFriendlyURL(layout,themeDisplay);
  }
 else   if (type.equals(DDMImpl.TYPE_RADIO) || type.equals(DDMImpl.TYPE_SELECT)) {
    String valueString=String.valueOf(fieldValue);
    JSONArray jsonArray=JSONFactoryUtil.createJSONArray(valueString);
    String[] stringArray=ArrayUtil.toStringArray(jsonArray);
    fieldValue=stringArray[0];
  }
  return fieldValue;
}

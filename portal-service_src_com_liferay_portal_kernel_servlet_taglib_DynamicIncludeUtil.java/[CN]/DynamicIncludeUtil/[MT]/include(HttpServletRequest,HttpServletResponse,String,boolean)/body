{
  List<DynamicInclude> dynamicIncludes=getDynamicIncludes(key);
  if ((dynamicIncludes == null) || dynamicIncludes.isEmpty()) {
    return;
  }
  Iterator<DynamicInclude> iterator=null;
  if (ascendingPriority) {
    iterator=dynamicIncludes.iterator();
  }
 else {
    iterator=ListUtil.reverseIterator(dynamicIncludes);
  }
  while (iterator.hasNext()) {
    DynamicInclude dynamicInclude=iterator.next();
    try {
      dynamicInclude.include(request,response,key,ascendingPriority);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
}

{
  long start=System.currentTimeMillis();
  JSONObject computerJSONObject=null;
  JSONObject queueJSONObject=null;
  try {
    computerJSONObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/computer/api/json?pretty&tree=computer" + "[displayName,idle,offline]"),false,5000);
    queueJSONObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/queue/api/json"),false,5000);
  }
 catch (  Exception e) {
    System.out.println("Unable to read " + url);
    return null;
  }
  int idleCount=0;
  JSONArray computersJSONArray=computerJSONObject.getJSONArray("computer");
  for (int i=0; i < computersJSONArray.length(); i++) {
    JSONObject curComputerJSONObject=computersJSONArray.getJSONObject(i);
    if (curComputerJSONObject.getBoolean("idle") && !curComputerJSONObject.getBoolean("offline")) {
      String displayName=curComputerJSONObject.getString("displayName");
      if (!displayName.equals("master")) {
        idleCount++;
      }
    }
  }
  int queueCount=0;
  if (queueJSONObject.has("items")) {
    JSONArray itemsJSONArray=queueJSONObject.getJSONArray("items");
    for (int i=0; i < itemsJSONArray.length(); i++) {
      JSONObject itemJSONObject=itemsJSONArray.getJSONObject(i);
      if (itemJSONObject.has("why")) {
        String why=itemJSONObject.getString("why");
        if (why.endsWith("is offline")) {
          continue;
        }
        queueCount++;
      }
    }
  }
  int availableSlaveCount=idleCount - queueCount;
  if (recentJobCount != null) {
    availableSlaveCount-=recentJobCount;
  }
  StringBuilder sb=new StringBuilder();
  sb.append("{available=");
  sb.append(availableSlaveCount);
  sb.append(", duration=");
  sb.append(System.currentTimeMillis() - start);
  sb.append("ms");
  sb.append(", idle=");
  sb.append(idleCount);
  sb.append(", queue=");
  sb.append(queueCount);
  sb.append(", recentJobs=");
  sb.append(recentJobCount);
  sb.append(", url=");
  sb.append(url);
  sb.append("}");
  System.out.println(sb.toString());
  return availableSlaveCount;
}

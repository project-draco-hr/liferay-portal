{
  pollsVote=toUnwrappedModel(pollsVote);
  boolean isNew=pollsVote.isNew();
  PollsVoteModelImpl pollsVoteModelImpl=(PollsVoteModelImpl)pollsVote;
  if (Validator.isNull(pollsVote.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    pollsVote.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (pollsVote.getCreateDate() == null)) {
    if (serviceContext == null) {
      pollsVote.setCreateDate(now);
    }
 else {
      pollsVote.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!pollsVoteModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      pollsVote.setModifiedDate(now);
    }
 else {
      pollsVote.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (pollsVote.isNew()) {
      session.save(pollsVote);
      pollsVote.setNew(false);
    }
 else {
      pollsVote=(PollsVote)session.merge(pollsVote);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !PollsVoteModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((pollsVoteModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsVoteModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{pollsVoteModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((pollsVoteModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsVoteModelImpl.getOriginalUuid(),pollsVoteModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{pollsVoteModelImpl.getUuid(),pollsVoteModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((pollsVoteModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsVoteModelImpl.getOriginalQuestionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_QUESTIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID,args);
      args=new Object[]{pollsVoteModelImpl.getQuestionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_QUESTIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID,args);
    }
    if ((pollsVoteModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CHOICEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsVoteModelImpl.getOriginalChoiceId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CHOICEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CHOICEID,args);
      args=new Object[]{pollsVoteModelImpl.getChoiceId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CHOICEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CHOICEID,args);
    }
    if ((pollsVoteModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_Q_U.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsVoteModelImpl.getOriginalQuestionId(),pollsVoteModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_Q_U,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_Q_U,args);
      args=new Object[]{pollsVoteModelImpl.getQuestionId(),pollsVoteModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_Q_U,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_Q_U,args);
    }
  }
  entityCache.putResult(PollsVoteModelImpl.ENTITY_CACHE_ENABLED,PollsVoteImpl.class,pollsVote.getPrimaryKey(),pollsVote,false);
  clearUniqueFindersCache(pollsVoteModelImpl);
  cacheUniqueFindersCache(pollsVoteModelImpl,isNew);
  pollsVote.resetOriginalValues();
  return pollsVote;
}

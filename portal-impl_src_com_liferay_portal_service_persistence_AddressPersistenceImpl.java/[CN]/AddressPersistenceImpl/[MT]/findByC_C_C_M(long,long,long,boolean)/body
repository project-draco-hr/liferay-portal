{
  boolean finderClassNameCacheEnabled=AddressModelImpl.CACHE_ENABLED;
  String finderClassName=Address.class.getName();
  String finderMethodName="findByC_C_C_M";
  String[] finderParams=new String[]{Long.class.getName(),Long.class.getName(),Long.class.getName(),Boolean.class.getName()};
  Object[] finderArgs=new Object[]{new Long(companyId),new Long(classNameId),new Long(classPK),Boolean.valueOf(mailing)};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringMaker query=new StringMaker();
      query.append("FROM com.liferay.portal.model.Address WHERE ");
      query.append("companyId = ?");
      query.append(" AND ");
      query.append("classNameId = ?");
      query.append(" AND ");
      query.append("classPK = ?");
      query.append(" AND ");
      query.append("mailing = ?");
      query.append(" ");
      query.append("ORDER BY ");
      query.append("createDate ASC");
      Query q=session.createQuery(query.toString());
      int queryPos=0;
      q.setLong(queryPos++,companyId);
      q.setLong(queryPos++,classNameId);
      q.setLong(queryPos++,classPK);
      q.setBoolean(queryPos++,mailing);
      List<Address> list=q.list();
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      return list;
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (List<Address>)result;
  }
}

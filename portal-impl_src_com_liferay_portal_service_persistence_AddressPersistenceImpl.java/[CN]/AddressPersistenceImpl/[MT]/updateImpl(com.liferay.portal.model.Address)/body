{
  address=toUnwrappedModel(address);
  boolean isNew=address.isNew();
  AddressModelImpl addressModelImpl=(AddressModelImpl)address;
  if (Validator.isNull(address.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    address.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (address.isNew()) {
      session.save(address);
      address.setNew(false);
    }
 else {
      session.merge(address);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AddressModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{addressModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalUuid(),addressModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{addressModelImpl.getUuid(),addressModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{addressModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{addressModelImpl.getUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalCompanyId(),addressModelImpl.getOriginalClassNameId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{addressModelImpl.getCompanyId(),addressModelImpl.getClassNameId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalCompanyId(),addressModelImpl.getOriginalClassNameId(),addressModelImpl.getOriginalClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C,args);
      args=new Object[]{addressModelImpl.getCompanyId(),addressModelImpl.getClassNameId(),addressModelImpl.getClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_M.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalCompanyId(),addressModelImpl.getOriginalClassNameId(),addressModelImpl.getOriginalClassPK(),addressModelImpl.getOriginalMailing()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C_M,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_M,args);
      args=new Object[]{addressModelImpl.getCompanyId(),addressModelImpl.getClassNameId(),addressModelImpl.getClassPK(),addressModelImpl.getMailing()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C_M,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_M,args);
    }
    if ((addressModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{addressModelImpl.getOriginalCompanyId(),addressModelImpl.getOriginalClassNameId(),addressModelImpl.getOriginalClassPK(),addressModelImpl.getOriginalPrimary()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P,args);
      args=new Object[]{addressModelImpl.getCompanyId(),addressModelImpl.getClassNameId(),addressModelImpl.getClassPK(),addressModelImpl.getPrimary()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_C_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_C_P,args);
    }
  }
  EntityCacheUtil.putResult(AddressModelImpl.ENTITY_CACHE_ENABLED,AddressImpl.class,address.getPrimaryKey(),address);
  address.resetOriginalValues();
  return address;
}

{
  Map<String,?> results=_notificationRecipientEvaluator.evaluate(kaleoNotificationRecipient,executionContext);
  Map<String,Serializable> resultsWorkflowContext=(Map<String,Serializable>)results.get(WorkflowContextUtil.WORKFLOW_CONTEXT_NAME);
  WorkflowContextUtil.mergeWorkflowContexts(executionContext,resultsWorkflowContext);
  User user=(User)results.get(ScriptingNotificationRecipientConstants.USER_RECIPIENT);
  if (user != null) {
    if (user.isActive()) {
      NotificationRecipient notificationRecipient=new NotificationRecipient(user,notificationReceptionType);
      notificationRecipients.add(notificationRecipient);
    }
  }
 else {
    List<Role> roles=(List<Role>)results.get(ScriptingNotificationRecipientConstants.ROLES_RECIPIENT);
    for (    Role role : roles) {
      _roleNotificationRecipientBuilder.addRoleRecipientAddresses(notificationRecipients,role.getRoleId(),role.getType(),notificationReceptionType,executionContext);
    }
  }
}

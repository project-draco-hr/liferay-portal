{
  Properties props=new Properties();
  PropertiesUtil.load(props,oldTypeSettings);
  String[] columnOrder=StringUtil.split((String)props.remove("column-order"));
  String layoutTemplateId="1_column";
  if (columnOrder.length == 3) {
    layoutTemplateId="3_columns";
  }
 else   if (columnOrder.length == 2) {
    if (columnOrder[0].equals("n1")) {
      layoutTemplateId="2_columns_ii";
    }
 else {
      layoutTemplateId="2_columns_iii";
    }
  }
  props.put(LayoutTypePortletImpl.LAYOUT_TEMPLATE_ID,layoutTemplateId);
  String narrow1=GetterUtil.getString((String)props.remove("narrow-1"));
  String narrow2=GetterUtil.getString((String)props.remove("narrow-2"));
  String wide1=GetterUtil.getString((String)props.remove("wide-1"));
  for (int i=0; i < columnOrder.length; i++) {
    String value=StringPool.BLANK;
    if (columnOrder[i].equals("n1")) {
      value=narrow1;
    }
 else     if (columnOrder[i].equals("n2")) {
      value=narrow2;
    }
 else     if (columnOrder[i].equals("w1")) {
      value=wide1;
    }
    String[] ids=StringUtil.split(value);
    for (int j=0; j < ids.length; j++) {
      ids[j]=_getNewPortletId(ids[j]);
    }
    props.put("column-" + (i + 1),StringUtil.merge(ids));
  }
  return PropertiesUtil.toString(props);
}

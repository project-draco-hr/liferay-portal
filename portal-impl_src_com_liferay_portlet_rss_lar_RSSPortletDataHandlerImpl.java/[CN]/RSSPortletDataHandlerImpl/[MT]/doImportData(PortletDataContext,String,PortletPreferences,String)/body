{
  if (Validator.isNull(data)) {
    return null;
  }
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element dlFoldersElement=rootElement.element("dl-folders");
  List<Element> dlFolderElements=Collections.emptyList();
  if (dlFoldersElement != null) {
    dlFolderElements=dlFoldersElement.elements("folder");
  }
  for (  Element folderElement : dlFolderElements) {
    DLPortletDataHandlerImpl.importFolder(portletDataContext,folderElement);
  }
  Element dlFileEntriesElement=rootElement.element("dl-file-entries");
  List<Element> dlFileEntryElements=Collections.emptyList();
  if (dlFileEntriesElement != null) {
    dlFileEntryElements=dlFileEntriesElement.elements("file-entry");
  }
  for (  Element fileEntryElement : dlFileEntryElements) {
    DLPortletDataHandlerImpl.importFileEntry(portletDataContext,fileEntryElement);
  }
  Element dlFileRanksElement=rootElement.element("dl-file-ranks");
  List<Element> dlFileRankElements=Collections.emptyList();
  if (dlFileRanksElement != null) {
    dlFileRankElements=dlFileRanksElement.elements("file-rank");
  }
  for (  Element fileRankElement : dlFileRankElements) {
    DLPortletDataHandlerImpl.importFileRank(portletDataContext,fileRankElement);
  }
  Element igFoldersElement=rootElement.element("ig-folders");
  List<Element> igFolderElements=Collections.emptyList();
  if (igFoldersElement != null) {
    igFolderElements=igFoldersElement.elements("folder");
  }
  for (  Element folderElement : igFolderElements) {
    IGPortletDataHandlerImpl.importFolder(portletDataContext,folderElement);
  }
  Element igImagesElement=rootElement.element("ig-images");
  List<Element> igImageElements=Collections.emptyList();
  if (igImagesElement != null) {
    igImageElements=igImagesElement.elements("image");
  }
  for (  Element imageElement : igImageElements) {
    IGPortletDataHandlerImpl.importImage(portletDataContext,imageElement);
  }
  List<Element> structureElements=rootElement.elements("structure");
  for (  Element structureElement : structureElements) {
    JournalPortletDataHandlerImpl.importStructure(portletDataContext,structureElement);
  }
  List<Element> templateElements=rootElement.elements("template");
  for (  Element templateElement : templateElements) {
    JournalPortletDataHandlerImpl.importTemplate(portletDataContext,templateElement);
  }
  Map<String,String> articleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class);
  Layout layout=LayoutLocalServiceUtil.getLayout(portletDataContext.getPlid());
  Element footerArticleElement=rootElement.element("footer-article");
  if (footerArticleElement != null) {
    JournalPortletDataHandlerImpl.importArticle(portletDataContext,footerArticleElement);
  }
  String[] footerArticleValues=portletPreferences.getValues("footerArticleValues",new String[]{"0",""});
  String footerArticleId=footerArticleValues[1];
  if (Validator.isNotNull(footerArticleId)) {
    footerArticleId=MapUtil.getString(articleIds,footerArticleId,footerArticleId);
    portletPreferences.setValues("footerArticleValues",new String[]{String.valueOf(portletDataContext.getScopeGroupId()),footerArticleId});
    JournalContentSearchLocalServiceUtil.updateContentSearch(portletDataContext.getScopeGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletId,footerArticleId,true);
  }
  Element headerArticleElement=rootElement.element("header-article");
  if (headerArticleElement != null) {
    JournalPortletDataHandlerImpl.importArticle(portletDataContext,headerArticleElement);
  }
  String[] headerArticleValues=portletPreferences.getValues("headerArticleValues",new String[]{"0",""});
  String headerArticleId=headerArticleValues[1];
  if (Validator.isNotNull(headerArticleId)) {
    headerArticleId=MapUtil.getString(articleIds,headerArticleId,headerArticleId);
    portletPreferences.setValues("headerArticleValues",new String[]{String.valueOf(portletDataContext.getScopeGroupId()),headerArticleId});
    JournalContentSearchLocalServiceUtil.updateContentSearch(portletDataContext.getScopeGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletId,headerArticleId,true);
  }
  return portletPreferences;
}

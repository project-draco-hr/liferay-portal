{
  long pk=RandomTestUtil.nextLong();
  AssetTag newAssetTag=_persistence.create(pk);
  newAssetTag.setUuid(RandomTestUtil.randomString());
  newAssetTag.setGroupId(RandomTestUtil.nextLong());
  newAssetTag.setCompanyId(RandomTestUtil.nextLong());
  newAssetTag.setUserId(RandomTestUtil.nextLong());
  newAssetTag.setUserName(RandomTestUtil.randomString());
  newAssetTag.setCreateDate(RandomTestUtil.nextDate());
  newAssetTag.setModifiedDate(RandomTestUtil.nextDate());
  newAssetTag.setName(RandomTestUtil.randomString());
  newAssetTag.setAssetCount(RandomTestUtil.nextInt());
  _assetTags.add(_persistence.update(newAssetTag));
  AssetTag existingAssetTag=_persistence.findByPrimaryKey(newAssetTag.getPrimaryKey());
  Assert.assertEquals(existingAssetTag.getUuid(),newAssetTag.getUuid());
  Assert.assertEquals(existingAssetTag.getTagId(),newAssetTag.getTagId());
  Assert.assertEquals(existingAssetTag.getGroupId(),newAssetTag.getGroupId());
  Assert.assertEquals(existingAssetTag.getCompanyId(),newAssetTag.getCompanyId());
  Assert.assertEquals(existingAssetTag.getUserId(),newAssetTag.getUserId());
  Assert.assertEquals(existingAssetTag.getUserName(),newAssetTag.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingAssetTag.getCreateDate()),Time.getShortTimestamp(newAssetTag.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAssetTag.getModifiedDate()),Time.getShortTimestamp(newAssetTag.getModifiedDate()));
  Assert.assertEquals(existingAssetTag.getName(),newAssetTag.getName());
  Assert.assertEquals(existingAssetTag.getAssetCount(),newAssetTag.getAssetCount());
}

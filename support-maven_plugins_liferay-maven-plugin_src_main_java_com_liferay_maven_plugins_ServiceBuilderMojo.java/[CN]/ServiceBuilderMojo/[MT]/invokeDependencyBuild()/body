{
  if (!postBuildDependencyModules) {
    return;
  }
  List<Dependency> dependencies=new ArrayList<Dependency>();
  MavenProject parentProject=project.getParent();
  if (parentProject == null) {
    return;
  }
  String groupId=project.getGroupId();
  List<String> modules=parentProject.getModules();
  List<String> reactorIncludes=new ArrayList<String>();
  for (  Object dependencyObj : project.getDependencies()) {
    Dependency dependency=(Dependency)dependencyObj;
    if (groupId.equals(dependency.getGroupId()) && modules.contains(dependency.getArtifactId())) {
      reactorIncludes.add(dependency.getArtifactId() + "/pom.xml");
    }
  }
  if (reactorIncludes.isEmpty()) {
    return;
  }
  InvocationRequest invocationRequest=new DefaultInvocationRequest();
  invocationRequest.activateReactor(reactorIncludes.toArray(new String[0]),null);
  invocationRequest.setBaseDirectory(parentProject.getBasedir());
  if (postBuildGoals == null) {
    postBuildGoals=new ArrayList<String>();
    postBuildGoals.add("install");
  }
  invocationRequest.setGoals(postBuildGoals);
  invocationRequest.setRecursive(false);
  MavenCommandLineBuilder mavenCommandLineBuilder=new MavenCommandLineBuilder();
  getLog().info("Executing " + mavenCommandLineBuilder.build(request));
  InvocationResult invocationResult=invoker.execute(request);
  if (result.getExecutionException() != null) {
    throw invocationResult.getExecutionException();
  }
 else   if (invocationResult.getExitCode() != 0) {
    throw new MojoExecutionException("Exit code " + invocationResult.getExitCode());
  }
}

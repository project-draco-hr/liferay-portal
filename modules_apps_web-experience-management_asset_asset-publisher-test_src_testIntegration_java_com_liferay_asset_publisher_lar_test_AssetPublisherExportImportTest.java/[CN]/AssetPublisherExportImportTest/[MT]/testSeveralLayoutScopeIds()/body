{
  Company company=CompanyLocalServiceUtil.getCompany(layout.getCompanyId());
  Layout secondLayout=LayoutTestUtil.addLayout(group);
  GroupTestUtil.addGroup(TestPropsValues.getUserId(),secondLayout);
  Map<String,String[]> preferenceMap=new HashMap<>();
  GroupTestUtil.addGroup(TestPropsValues.getUserId(),layout);
  Group companyGroup=company.getGroup();
  preferenceMap.put("scopeIds",new String[]{AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX + companyGroup.getGroupId(),AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX + layout.getUuid(),AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX + secondLayout.getUuid()});
  PortletPreferences portletPreferences=getImportedPortletPreferences(preferenceMap);
  Layout importedSecondLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(),importedGroup.getGroupId(),importedLayout.isPrivateLayout());
  Assert.assertEquals(null,portletPreferences.getValue("scopeId",null));
  StringBundler sb=new StringBundler(8);
  sb.append(AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX);
  sb.append(companyGroup.getGroupId());
  sb.append(StringPool.COMMA);
  sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(importedLayout.getUuid());
  sb.append(StringPool.COMMA);
  sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX);
  sb.append(importedSecondLayout.getUuid());
  Assert.assertEquals(sb.toString(),StringUtil.merge(portletPreferences.getValues("scopeIds",null)));
}

{
  oAuthToken=toUnwrappedModel(oAuthToken);
  boolean isNew=oAuthToken.isNew();
  OAuthTokenModelImpl oAuthTokenModelImpl=(OAuthTokenModelImpl)oAuthToken;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (oAuthToken.getCreateDate() == null)) {
    if (serviceContext == null) {
      oAuthToken.setCreateDate(now);
    }
 else {
      oAuthToken.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!oAuthTokenModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      oAuthToken.setModifiedDate(now);
    }
 else {
      oAuthToken.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (oAuthToken.isNew()) {
      session.save(oAuthToken);
      oAuthToken.setNew(false);
    }
 else {
      oAuthToken=(OAuthToken)session.merge(oAuthToken);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !OAuthTokenModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((oAuthTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{oAuthTokenModelImpl.getOriginalGadgetKey(),oAuthTokenModelImpl.getOriginalServiceName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S,args);
      args=new Object[]{oAuthTokenModelImpl.getGadgetKey(),oAuthTokenModelImpl.getServiceName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_S,args);
    }
  }
  entityCache.putResult(OAuthTokenModelImpl.ENTITY_CACHE_ENABLED,OAuthTokenImpl.class,oAuthToken.getPrimaryKey(),oAuthToken,false);
  clearUniqueFindersCache(oAuthTokenModelImpl);
  cacheUniqueFindersCache(oAuthTokenModelImpl,isNew);
  oAuthToken.resetOriginalValues();
  return oAuthToken;
}

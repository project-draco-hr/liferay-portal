{
  User user=UserUtil.findByPrimaryKey(userId);
  Date now=new Date();
  name=name.trim().toLowerCase();
  validate(name);
  if (hasEntry(user.getCompanyId(),name)) {
    throw new DuplicateEntryException();
  }
  long entryId=CounterLocalServiceUtil.increment(Counter.class.getName());
  TagsEntry entry=TagsEntryUtil.create(entryId);
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setUserName(user.getFullName());
  entry.setCreateDate(now);
  entry.setModifiedDate(now);
  entry.setName(name);
  TagsEntryUtil.update(entry);
  for (int i=0; i < properties.length; i++) {
    String[] property=StringUtil.split(properties[i],StringPool.COLON);
    String key=StringPool.BLANK;
    if (property.length > 1) {
      key=GetterUtil.getString(property[1]);
    }
    String value=StringPool.BLANK;
    if (property.length > 2) {
      value=GetterUtil.getString(property[2]);
    }
    if (Validator.isNotNull(key)) {
      TagsPropertyLocalServiceUtil.addProperty(userId,entryId,key,value);
    }
  }
  return entry;
}

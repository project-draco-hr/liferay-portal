{
  if (skipSubDayGenerators(hourGenerator,minuteGenerator,secondGenerator)) {
    return new Generator(){
      @Override public boolean generate(      DTBuilder builder) throws IteratorShortCircuitingException {
        do {
          while (!dayGenerator.generate(builder)) {
            while (!monthGenerator.generate(builder)) {
              if (!yearGenerator.generate(builder)) {
                return false;
              }
            }
          }
        }
 while (!filter.apply(builder.toDateTime()));
        return true;
      }
    }
;
  }
 else {
    return new Generator(){
      @Override public boolean generate(      DTBuilder builder) throws IteratorShortCircuitingException {
        do {
          while (!secondGenerator.generate(builder)) {
            while (!minuteGenerator.generate(builder)) {
              while (!hourGenerator.generate(builder)) {
                while (!dayGenerator.generate(builder)) {
                  while (!monthGenerator.generate(builder)) {
                    if (!yearGenerator.generate(builder)) {
                      return false;
                    }
                  }
                }
              }
            }
          }
        }
 while (!filter.apply(builder.toDateTime()));
        return true;
      }
    }
;
  }
}

{
  if (templateContextType.equals(TemplateContextType.CLASS_LOADER)) {
    ClassLoader contextClassLoader=PACLClassLoaderUtil.getContextClassLoader();
    PACLPolicy threadLocalPACLPolicy=PortalSecurityManagerThreadLocal.getPACLPolicy();
    PACLPolicy contextClassLoaderPACLPolicy=PACLPolicyManager.getPACLPolicy(contextClassLoader);
    try {
      PortalSecurityManagerThreadLocal.setPACLPolicy(contextClassLoaderPACLPolicy);
      Map<String,Object> helperUtilities=_classLoaderHelperUtilities.get(contextClassLoader);
      if (helperUtilities == null) {
        helperUtilities=_templateContextHelper.getHelperUtilities();
        _classLoaderHelperUtilities.put(contextClassLoader,helperUtilities);
      }
      return new PACLFreeMarkerTemplate(templateId,templateContent,errorTemplateId,errorTemplateContent,helperUtilities,_configuration,_templateContextHelper,_stringTemplateLoader,contextClassLoaderPACLPolicy);
    }
  finally {
      PortalSecurityManagerThreadLocal.setPACLPolicy(threadLocalPACLPolicy);
    }
  }
 else   if (templateContextType.equals(TemplateContextType.EMPTY)) {
    return new FreeMarkerTemplate(templateId,templateContent,errorTemplateId,errorTemplateContent,null,_configuration,_templateContextHelper,_stringTemplateLoader);
  }
 else   if (templateContextType.equals(TemplateContextType.RESTRICTED)) {
    return new RestrictedTemplate(new FreeMarkerTemplate(templateId,templateContent,errorTemplateId,errorTemplateContent,_restrictedHelperUtilities,_configuration,_templateContextHelper,_stringTemplateLoader),_templateContextHelper.getRestrictedVariables());
  }
 else   if (templateContextType.equals(TemplateContextType.STANDARD)) {
    return new FreeMarkerTemplate(templateId,templateContent,errorTemplateId,errorTemplateContent,_standardHelperUtilities,_configuration,_templateContextHelper,_stringTemplateLoader);
  }
  return null;
}

{
  if (_configuration != null) {
    return;
  }
  _configuration=new Configuration();
  _configuration.setDefaultEncoding(StringPool.UTF8);
  _configuration.setLocalizedLookup(PropsValues.FREEMARKER_ENGINE_LOCALIZED_LOOKUP);
  _configuration.setNewBuiltinClassResolver(new LiferayTemplateClassResolver());
  _configuration.setObjectWrapper(new LiferayObjectWrapper());
  try {
    _configuration.setSetting("template_exception_handler",PropsValues.FREEMARKER_ENGINE_TEMPLATE_EXCEPTION_HANDLER);
  }
 catch (  Exception e) {
    throw new TemplateException("Unable to init freemarker manager",e);
  }
  _standardHelperUtilities=_templateContextHelper.getHelperUtilities();
  _restrictedHelperUtilities=_templateContextHelper.getRestrictedHelperUtilities();
  for (  String macroLibrary : PropsValues.FREEMARKER_ENGINE_MACRO_LIBRARY) {
    int index=macroLibrary.indexOf(StringPool.COLON);
    String libraryFile=macroLibrary.substring(0,index).trim();
    String libraryName=macroLibrary.substring(index + 1).trim();
    _autoImportLibraries.put(libraryName,TemplateResourceLoaderUtil.getTemplateResource(FREEMARKER,libraryFile));
  }
}

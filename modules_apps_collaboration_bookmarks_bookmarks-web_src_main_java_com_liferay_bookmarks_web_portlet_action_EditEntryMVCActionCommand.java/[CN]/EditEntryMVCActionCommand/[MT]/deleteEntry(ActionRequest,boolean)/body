{
  long[] deleteEntryIds=null;
  long entryId=ParamUtil.getLong(actionRequest,"entryId");
  if (entryId > 0) {
    deleteEntryIds=new long[]{entryId};
  }
 else {
    deleteEntryIds=ParamUtil.getLongValues(actionRequest,"rowIdsBookmarksEntry");
  }
  List<TrashedModel> trashedModels=new ArrayList<>();
  for (  long deleteEntryId : deleteEntryIds) {
    if (moveToTrash) {
      BookmarksEntry entry=_bookmarksEntryService.moveEntryToTrash(deleteEntryId);
      trashedModels.add(entry);
    }
 else {
      _bookmarksEntryService.deleteEntry(deleteEntryId);
    }
  }
  long[] deleteFolderIds=ParamUtil.getLongValues(actionRequest,"rowIdsBookmarksFolder");
  for (int i=0; i < deleteFolderIds.length; i++) {
    long deleteFolderId=deleteFolderIds[i];
    if (moveToTrash) {
      BookmarksFolder folder=_bookmarksFolderService.moveFolderToTrash(deleteFolderId);
      trashedModels.add(folder);
    }
 else {
      _bookmarksFolderService.deleteFolder(deleteFolderId);
    }
  }
  if (moveToTrash && !trashedModels.isEmpty()) {
    TrashUtil.addTrashSessionMessages(actionRequest,trashedModels);
    hideDefaultSuccessMessage(actionRequest);
  }
}

{
  List<Element> metadataElements=dynamicElementElement.elements("meta-data");
  for (  Element metadataElement : metadataElements) {
    String languageId=metadataElement.attributeValue("locale");
    if (languageId.equals(defaultLanguageId)) {
      getJournalMetadataElement(metadataElement);
    }
 else {
      dynamicElementElement.remove(metadataElement);
    }
  }
  Element parentElement=dynamicElementElement.getParent();
  String parentType=parentElement.attributeValue("type");
  if (Validator.equals(parentType,"list") || Validator.equals(parentType,"multi-list")) {
    Element metadataElement=dynamicElementElement.element("meta-data");
    Element labelElement=fetchMetadataEntry(metadataElement,"name","label");
    String repeatable=parentElement.attributeValue("repeatable");
    String value=dynamicElementElement.attributeValue("value");
    dynamicElementElement.addAttribute("name",labelElement.getText());
    dynamicElementElement.addAttribute("repeatable",repeatable);
    dynamicElementElement.addAttribute("type",value);
    removeAttribute(dynamicElementElement,"value");
    dynamicElementElement.remove(metadataElement);
    return;
  }
  String indexType=GetterUtil.getString(dynamicElementElement.attributeValue("indexType"));
  removeAttribute(dynamicElementElement,"indexType");
  dynamicElementElement.addAttribute("index-type",indexType);
  String type=dynamicElementElement.attributeValue("type");
  boolean multiple=GetterUtil.getBoolean(dynamicElementElement.attributeValue("multiple"));
  String newType=_ddmTypesToJournalTypes.get(type);
  if (newType.equals("list") && multiple) {
    newType="multi-list";
  }
  dynamicElementElement.addAttribute("type",newType);
  String[] removableAttributeNames=new String[]{"dataType","fieldNamespace","multiple","readOnly","required","showLabel","width"};
  for (  String removableAttributeName : removableAttributeNames) {
    removeAttribute(dynamicElementElement,removableAttributeName);
  }
  List<Element> childrenDynamicElementElements=dynamicElementElement.elements("dynamic-element");
  for (  Element childrenDynamicElementElement : childrenDynamicElementElements) {
    updateDDMXSDDynamicElement(childrenDynamicElementElement,defaultLanguageId);
  }
}

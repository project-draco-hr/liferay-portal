{
  String fieldType=ddmStructure.getFieldType(fieldName);
  String indexType=ddmStructure.getFieldProperty(fieldName,"indexType");
  boolean multiple=GetterUtil.getBoolean(ddmStructure.getFieldProperty(fieldName,"multiple"));
  String type=_ddmTypesToJournalTypes.get(fieldType);
  if (type == null) {
    type=fieldType;
  }
  dynamicElementElement.addAttribute("type",type);
  dynamicElementElement.addAttribute("index-type",indexType);
  int count=ddmFieldsCounter.get(fieldName);
  dynamicElementElement.addAttribute("index",String.valueOf(count));
  String instanceId=getFieldInstanceId(ddmFields,fieldName,count);
  dynamicElementElement.addAttribute("instance-id",instanceId);
  Field ddmField=ddmFields.get(fieldName);
  if (!ddmStructure.isFieldTransient(fieldName) && (ddmField != null)) {
    for (    Locale locale : ddmField.getAvailableLocales()) {
      Element dynamicContentElement=dynamicElementElement.addElement("dynamic-content");
      dynamicContentElement.addAttribute("language-id",LocaleUtil.toLanguageId(locale));
      Serializable fieldValue=ddmField.getValue(locale,count);
      if (fieldValue instanceof Date) {
        Date valueDate=(Date)fieldValue;
        fieldValue=valueDate.getTime();
      }
      String valueString=String.valueOf(fieldValue);
      updateDynamicContentValue(dynamicContentElement,fieldType,multiple,valueString.trim());
    }
  }
  ddmFieldsCounter.incrementKey(fieldName);
}

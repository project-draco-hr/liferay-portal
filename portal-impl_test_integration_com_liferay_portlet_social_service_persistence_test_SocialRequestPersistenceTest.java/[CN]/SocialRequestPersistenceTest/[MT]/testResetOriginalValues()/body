{
  SocialRequest newSocialRequest=addSocialRequest();
  _persistence.clearCache();
  SocialRequest existingSocialRequest=_persistence.findByPrimaryKey(newSocialRequest.getPrimaryKey());
  Assert.assertTrue(Validator.equals(existingSocialRequest.getUuid(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(existingSocialRequest.getGroupId(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingSocialRequest.getUserId(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalUserId",new Class<?>[0]));
  Assert.assertEquals(existingSocialRequest.getClassNameId(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(existingSocialRequest.getClassPK(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertEquals(existingSocialRequest.getType(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalType",new Class<?>[0]));
  Assert.assertEquals(existingSocialRequest.getReceiverUserId(),ReflectionTestUtil.invoke(existingSocialRequest,"getOriginalReceiverUserId",new Class<?>[0]));
}

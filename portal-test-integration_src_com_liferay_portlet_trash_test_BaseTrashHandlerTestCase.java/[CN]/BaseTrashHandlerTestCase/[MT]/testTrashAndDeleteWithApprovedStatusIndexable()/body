{
  Assume.assumeTrue(this instanceof WhenIsIndexableBaseModel);
  Assume.assumeFalse(this instanceof WhenParentModelIsSameType);
  WhenIsIndexableBaseModel whenIsIndexableBaseModel=(WhenIsIndexableBaseModel)this;
  int initialBaseModelsSearchCount=whenIsIndexableBaseModel.searchBaseModelsCount(getBaseModelClass(),group.getGroupId());
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  int initialTrashEntriesSearchCount=whenIsIndexableBaseModel.searchTrashEntriesCount(whenIsIndexableBaseModel.getSearchKeywords(),serviceContext);
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  baseModel=getBaseModel((Long)baseModel.getPrimaryKeyObj());
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  trashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));
  Assert.assertEquals(initialBaseModelsSearchCount,whenIsIndexableBaseModel.searchBaseModelsCount(getBaseModelClass(),group.getGroupId()));
  Assert.assertEquals(initialTrashEntriesSearchCount,whenIsIndexableBaseModel.searchTrashEntriesCount(whenIsIndexableBaseModel.getSearchKeywords(),serviceContext));
}

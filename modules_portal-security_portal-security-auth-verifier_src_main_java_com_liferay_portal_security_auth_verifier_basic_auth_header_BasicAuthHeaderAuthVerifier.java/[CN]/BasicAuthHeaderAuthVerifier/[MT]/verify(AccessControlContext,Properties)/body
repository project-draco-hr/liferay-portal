{
  try {
    AuthVerifierResult authVerifierResult=new AuthVerifierResult();
    String[] credentials=login(accessControlContext.getRequest(),accessControlContext.getResponse());
    if (credentials != null) {
      authVerifierResult.setPassword(credentials[1]);
      authVerifierResult.setPasswordBasedAuthentication(true);
      authVerifierResult.setState(AuthVerifierResult.State.SUCCESS);
      authVerifierResult.setUserId(Long.valueOf(credentials[0]));
    }
 else {
      boolean forcedBasicAuth=MapUtil.getBoolean(accessControlContext.getSettings(),"basic_auth");
      if (!forcedBasicAuth) {
        forcedBasicAuth=GetterUtil.getBoolean(properties.getProperty("basic_auth"));
      }
      if (forcedBasicAuth) {
        HttpAuthorizationHeader httpAuthorizationHeader=new HttpAuthorizationHeader(HttpAuthorizationHeader.SCHEME_BASIC);
        HttpAuthManagerUtil.generateChallenge(accessControlContext.getRequest(),accessControlContext.getResponse(),httpAuthorizationHeader);
        authVerifierResult.setState(AuthVerifierResult.State.INVALID_CREDENTIALS);
      }
    }
    return authVerifierResult;
  }
 catch (  AutoLoginException ale) {
    throw new AuthException(ale);
  }
}

{
  PermissionCheckerBag bag=getUserBag(userId);
  if (bag == null) {
    return query;
  }
  List<Group> groups=new ArrayList<Group>();
  List<Role> roles=bag.getRoles();
  List<UserGroupRole> userGroupRoles=new ArrayList<UserGroupRole>();
  if ((groupIds == null) || (groupIds.length == 0)) {
    groups.addAll(GroupLocalServiceUtil.getUserGroups(userId,true));
    groups.addAll(bag.getGroups());
    userGroupRoles=UserGroupRoleLocalServiceUtil.getUserGroupRoles(userId);
  }
 else {
    groups.addAll(bag.getGroups());
    for (    long groupId : groupIds) {
      if (GroupLocalServiceUtil.hasUserGroup(userId,groupId)) {
        Group group=GroupLocalServiceUtil.getGroup(groupId);
        groups.add(group);
      }
      userGroupRoles.addAll(UserGroupRoleLocalServiceUtil.getUserGroupRoles(userId,groupId));
      userGroupRoles.addAll(UserGroupRoleLocalServiceUtil.getUserGroupRolesByUserUserGroupAndGroup(userId,groupId));
    }
  }
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
  if (defaultUserId != userId) {
    roles.add(RoleLocalServiceUtil.getRole(companyId,RoleConstants.GUEST));
  }
  BooleanQuery permissionQuery=BooleanQueryFactoryUtil.create(searchContext);
  if (userId > 0) {
    permissionQuery.addTerm(Field.USER_ID,userId);
  }
  for (  Role role : roles) {
    if (role.getName().equals(RoleConstants.ADMINISTRATOR)) {
      return query;
    }
    long roleId=role.getRoleId();
    if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_COMPANY,String.valueOf(companyId),roleId,ActionKeys.VIEW)) {
      return query;
    }
    if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupConstants.DEFAULT_PARENT_GROUP_ID),roleId,ActionKeys.VIEW)) {
      return query;
    }
    for (    Group group : groups) {
      if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP,String.valueOf(group.getGroupId()),roleId,ActionKeys.VIEW)) {
        return query;
      }
    }
    permissionQuery.addTerm(Field.ROLE_ID,roleId);
  }
  for (  Group group : groups) {
    addRequiredMemberRole(group,permissionQuery);
  }
  for (  UserGroupRole userGroupRole : userGroupRoles) {
    permissionQuery.addTerm(Field.GROUP_ROLE_ID,userGroupRole.getGroupId() + StringPool.DASH + userGroupRole.getRoleId());
  }
  BooleanQuery fullQuery=BooleanQueryFactoryUtil.create(searchContext);
  fullQuery.add(query,BooleanClauseOccur.MUST);
  fullQuery.add(permissionQuery,BooleanClauseOccur.MUST);
  return fullQuery;
}

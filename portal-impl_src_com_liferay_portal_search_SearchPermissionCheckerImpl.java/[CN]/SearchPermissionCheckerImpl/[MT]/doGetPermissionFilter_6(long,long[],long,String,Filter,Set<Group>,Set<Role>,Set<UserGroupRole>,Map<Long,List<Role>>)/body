{
  BooleanFilter permissionFilter=new BooleanFilter();
  if (userId > 0) {
    permissionFilter.addTerm(Field.USER_ID,userId);
  }
  BooleanFilter groupsFilter=new BooleanFilter();
  BooleanFilter rolesFilter=new BooleanFilter();
  for (  Role role : roles) {
    String roleName=role.getName();
    if (roleName.equals(RoleConstants.ADMINISTRATOR)) {
      return filter;
    }
    if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_COMPANY,String.valueOf(companyId),role.getRoleId(),ActionKeys.VIEW)) {
      return filter;
    }
    if ((role.getType() == RoleConstants.TYPE_REGULAR) && ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupConstants.DEFAULT_PARENT_GROUP_ID),role.getRoleId(),ActionKeys.VIEW)) {
      return filter;
    }
    for (    Group group : groups) {
      if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP,String.valueOf(group.getGroupId()),role.getRoleId(),ActionKeys.VIEW)) {
        groupsFilter.addTerm(Field.GROUP_ID,group.getGroupId());
      }
      if ((role.getType() != RoleConstants.TYPE_REGULAR) && ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupConstants.DEFAULT_PARENT_GROUP_ID),role.getRoleId(),ActionKeys.VIEW)) {
        List<Role> groupRoles=groupIdsToRoles.get(group.getGroupId());
        if (groupRoles.contains(role)) {
          groupsFilter.addTerm(Field.GROUP_ID,group.getGroupId());
        }
      }
      if (group.isSite() && !roleName.equals(RoleConstants.SITE_MEMBER) && (role.getType() == RoleConstants.TYPE_SITE)) {
        rolesFilter.addTerm(Field.GROUP_ROLE_ID,group.getGroupId() + StringPool.DASH + role.getRoleId());
      }
    }
    if (ArrayUtil.isNotEmpty(groupIds)) {
      for (      long groupId : groupIds) {
        if (ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,className,ResourceConstants.SCOPE_GROUP,String.valueOf(groupId),role.getRoleId(),ActionKeys.VIEW)) {
          groupsFilter.addTerm(Field.GROUP_ID,groupId);
        }
      }
    }
    rolesFilter.addTerm(Field.ROLE_ID,role.getRoleId());
  }
  for (  Group group : groups) {
    addRequiredMemberRole(group,rolesFilter);
  }
  for (  UserGroupRole userGroupRole : userGroupRoles) {
    rolesFilter.addTerm(Field.GROUP_ROLE_ID,userGroupRole.getGroupId() + StringPool.DASH + userGroupRole.getRoleId());
  }
  if (groupsFilter.hasClauses()) {
    permissionFilter.add(groupsFilter);
  }
  if (rolesFilter.hasClauses()) {
    permissionFilter.add(rolesFilter);
  }
  BooleanFilter fullFilter=new BooleanFilter();
  if (filter != null) {
    fullFilter.add(filter,BooleanClauseOccur.MUST);
  }
  fullFilter.add(permissionFilter,BooleanClauseOccur.MUST);
  return fullFilter;
}

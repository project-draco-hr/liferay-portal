{
  if (!PropsValues.BLOGS_PINGBACK_ENABLED) {
    return XmlRpcUtil.createFault(XmlRpcConstants.REQUESTED_METHOD_NOT_FOUND,"Pingbacks are disabled");
  }
  Response response=validateSource();
  if (response != null) {
    return response;
  }
  try {
    BlogsEntry entry=getBlogsEntry(companyId);
    if (!entry.isAllowPingbacks()) {
      return XmlRpcUtil.createFault(XmlRpcConstants.REQUESTED_METHOD_NOT_FOUND,"Pingbacks are disabled");
    }
    long userId=UserLocalServiceUtil.getDefaultUserId(companyId);
    String className=BlogsEntry.class.getName();
    long classPK=entry.getEntryId();
    MBMessageDisplay messageDisplay=MBMessageLocalServiceUtil.getDiscussionMessageDisplay(userId,className,classPK,StatusConstants.APPROVED);
    ThemeDisplay themeDisplay=ThemeDisplayFactory.create();
    MBThread thread=messageDisplay.getThread();
    long threadId=thread.getThreadId();
    long parentMessageId=thread.getRootMessageId();
    String body="[...] " + getExcerpt() + " [...] [url="+ _sourceUri+ "]"+ themeDisplay.translate("read-more")+ "[/url]";
    MBMessageLocalServiceUtil.addDiscussionMessage(userId,"",className,classPK,threadId,parentMessageId,"",body,new ServiceContext());
    response=XmlRpcUtil.createSuccess("Pingback accepted");
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
    return XmlRpcUtil.createFault(TARGET_URI_INVALID,"Error parsing target URI");
  }
  return response;
}

{
  if (!PropsValues.BLOGS_PINGBACK_ENABLED) {
    return XmlRpcUtil.createFault(XmlRpcConstants.REQUESTED_METHOD_NOT_FOUND,"Pingbacks are disabled");
  }
  Response response=validateSource();
  if (response != null) {
    return response;
  }
  try {
    BlogsEntry entry=getBlogsEntry(companyId);
    if (!entry.isAllowPingbacks()) {
      return XmlRpcUtil.createFault(XmlRpcConstants.REQUESTED_METHOD_NOT_FOUND,"Pingbacks are disabled");
    }
    long userId=UserLocalServiceUtil.getDefaultUserId(companyId);
    long groupId=entry.getGroupId();
    String className=BlogsEntry.class.getName();
    long classPK=entry.getEntryId();
    MBMessageDisplay messageDisplay=MBMessageLocalServiceUtil.getDiscussionMessageDisplay(userId,groupId,className,classPK,WorkflowConstants.STATUS_APPROVED);
    MBThread thread=messageDisplay.getThread();
    long threadId=thread.getThreadId();
    long parentMessageId=thread.getRootMessageId();
    String body="[...] " + getExcerpt() + " [...] [url="+ _sourceUri+ "]"+ LanguageUtil.get(LocaleUtil.getDefault(),"read-more")+ "[/url]";
    List<MBMessage> messages=MBMessageLocalServiceUtil.getThreadMessages(threadId,WorkflowConstants.STATUS_APPROVED);
    for (    MBMessage message : messages) {
      if (message.getBody().equals(body)) {
        return XmlRpcUtil.createFault(PINGBACK_ALREADY_REGISTERED,"Pingback previously registered");
      }
    }
    ServiceContext serviceContext=new ServiceContext();
    String layoutFullURL=PortalUtil.getLayoutFullURL(groupId,PortletKeys.BLOGS);
    serviceContext.setLayoutFullURL(layoutFullURL);
    String emailUserName=LanguageUtil.get(LocaleUtil.getDefault(),"pingback");
    serviceContext.setAttribute("emailUserName",emailUserName);
    Portlet portlet=PortletLocalServiceUtil.getPortletById(companyId,PortletKeys.BLOGS);
    StringBundler sb=new StringBundler(5);
    sb.append(layoutFullURL);
    sb.append(Portal.FRIENDLY_URL_SEPARATOR);
    sb.append(portlet.getFriendlyURLMapping());
    sb.append(StringPool.SLASH);
    sb.append(entry.getUrlTitle());
    serviceContext.setAttribute("redirect",sb.toString());
    MBMessageLocalServiceUtil.addDiscussionMessage(userId,StringPool.BLANK,groupId,className,classPK,threadId,parentMessageId,StringPool.BLANK,body,serviceContext);
    return XmlRpcUtil.createSuccess("Pingback accepted");
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
    return XmlRpcUtil.createFault(TARGET_URI_INVALID,"Error parsing target URI");
  }
}

{
  PKUpgradeColumnImpl upgradeColumn=new PKUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),true);
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(UserImpl.TABLE_NAME,UserImpl.TABLE_COLUMNS,upgradeColumn);
  upgradeTable.updateTable();
  ValueMapper userIdMapper=new DefaultPKMapper(upgradeColumn.getValueMapper());
  AvailableMappersUtil.setUserIdMapper(userIdMapper);
  UpgradeColumn upgradeUserIdColumn=new SwapUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),userIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(AccountImpl.TABLE_NAME,AccountImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(BookmarksEntryImpl.TABLE_NAME,BookmarksEntryImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(BookmarksFolderImpl.TABLE_NAME,BookmarksFolderImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(CalEventImpl.TABLE_NAME,CalEventImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeContactIdColumn=new SkipUpgradeColumnImpl("contactId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(ContactImpl.TABLE_NAME,ContactImpl.TABLE_COLUMNS,upgradeContactIdColumn,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(CyrusUser.TABLE_NAME,CyrusUser.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(CyrusVirtual.TABLE_NAME,CyrusVirtual.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeVersionUserIdColumn=new SwapUpgradeColumnImpl("versionUserId",new Integer(Types.VARCHAR),userIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(DLFileEntryImpl.TABLE_NAME,DLFileEntryImpl.TABLE_COLUMNS,upgradeUserIdColumn,upgradeVersionUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(DLFileRankImpl.TABLE_NAME,DLFileRankImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(DLFileShortcutImpl.TABLE_NAME,DLFileShortcutImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(DLFileVersionImpl.TABLE_NAME,DLFileVersionImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(DLFolderImpl.TABLE_NAME,DLFolderImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(IGFolderImpl.TABLE_NAME,IGFolderImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(IGImageImpl.TABLE_NAME,IGImageImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeApprovedByUserIdColumn=new SwapUpgradeColumnImpl("approvedByUserId",new Integer(Types.VARCHAR),userIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(JournalArticleImpl.TABLE_NAME,JournalArticleImpl.TABLE_COLUMNS,upgradeUserIdColumn,upgradeApprovedByUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(JournalStructureImpl.TABLE_NAME,JournalStructureImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(JournalTemplateImpl.TABLE_NAME,JournalTemplateImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBCategoryImpl.TABLE_NAME,MBCategoryImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBMessageImpl.TABLE_NAME,MBMessageImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBMessageFlagImpl.TABLE_NAME,MBMessageFlagImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBStatsUserImpl.TABLE_NAME,MBStatsUserImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeLastPostByUserIdColumn=new SwapUpgradeColumnImpl("lastPostByUserId",new Integer(Types.VARCHAR),userIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(MBThreadImpl.TABLE_NAME,MBThreadImpl.TABLE_COLUMNS,upgradeLastPostByUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(PasswordTrackerImpl.TABLE_NAME,PasswordTrackerImpl.TABLE_COLUMNS,new PKUpgradeColumnImpl("passwordTrackerId",false),upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(PollsQuestionImpl.TABLE_NAME,PollsQuestionImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeChoiceIdColumn=new SkipUpgradeColumnImpl("choiceId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(PollsVoteImpl.TABLE_NAME,PollsVoteImpl.TABLE_COLUMNS,upgradeUserIdColumn,upgradeChoiceIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn skipUpgradeClassNameIdColumn=new SkipUpgradeColumnImpl("classNameId",new Integer(Types.VARCHAR));
  UpgradeColumn skipUpgradeClassPKColumn=new SkipUpgradeColumnImpl("classPK",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(RatingsEntryImpl.TABLE_NAME,RatingsEntryImpl.TABLE_COLUMNS,upgradeUserIdColumn,skipUpgradeClassNameIdColumn,skipUpgradeClassPKColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeCartIdColumn=new SkipUpgradeColumnImpl("cartId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCartImpl.TABLE_NAME,ShoppingCartImpl.TABLE_COLUMNS,upgradeCartIdColumn,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCategoryImpl.TABLE_NAME,ShoppingCategoryImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeCouponIdColumn=new SkipUpgradeColumnImpl("couponId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCouponImpl.TABLE_NAME,ShoppingCouponImpl.TABLE_COLUMNS,upgradeCouponIdColumn,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingItemImpl.TABLE_NAME,ShoppingItemImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingOrderImpl.TABLE_NAME,ShoppingOrderImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(UserIdMapperImpl.TABLE_NAME,UserIdMapperImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(WikiNodeImpl.TABLE_NAME,WikiNodeImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(WikiPageImpl.TABLE_NAME,WikiPageImpl.TABLE_COLUMNS,upgradeUserIdColumn);
  upgradeTable.updateTable();
  for (int i=0; i < _TABLES.length; i++) {
    String sql="alter_column_type " + _TABLES[i] + " userId LONG";
    if (_log.isDebugEnabled()) {
      _log.debug(sql);
    }
    runSQL(sql);
  }
  runSQL("alter_column_type JournalArticle approvedByUserId LONG");
  runSQL("alter_column_type MBThread lastPostByUserId LONG");
}

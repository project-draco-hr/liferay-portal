{
  Project project=new Project();
  BuildLogger buildLogger=new DefaultLogger(){
    @Override public void messageLogged(    BuildEvent buildEvent){
      int priority=buildEvent.getPriority();
      if (priority > msgOutputLevel) {
        return;
      }
      StringBundler sb=new StringBundler();
      try {
        boolean first=true;
        UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(buildEvent.getMessage()));
        String line=unsyncBufferedReader.readLine();
        while (line != null) {
          if (!first) {
            sb.append(StringPool.OS_EOL);
          }
          first=false;
          sb.append(StringPool.DOUBLE_SPACE);
          sb.append(line);
          line=unsyncBufferedReader.readLine();
        }
      }
 catch (      IOException ioe) {
      }
      String message=sb.toString();
      if (priority != Project.MSG_ERR) {
        printMessage(message,out,priority);
      }
 else {
        printMessage(message,err,priority);
      }
      log(message);
    }
  }
;
  buildLogger.setErrorPrintStream(System.err);
  buildLogger.setMessageOutputLevel(Project.MSG_INFO);
  buildLogger.setOutputPrintStream(System.out);
  project.addBuildListener(buildLogger);
  return project;
}

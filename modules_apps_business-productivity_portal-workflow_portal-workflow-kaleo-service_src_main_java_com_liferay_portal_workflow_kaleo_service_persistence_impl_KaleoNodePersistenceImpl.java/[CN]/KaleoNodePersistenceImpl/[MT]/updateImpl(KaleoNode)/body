{
  kaleoNode=toUnwrappedModel(kaleoNode);
  boolean isNew=kaleoNode.isNew();
  KaleoNodeModelImpl kaleoNodeModelImpl=(KaleoNodeModelImpl)kaleoNode;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoNode.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoNode.setCreateDate(now);
    }
 else {
      kaleoNode.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoNodeModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoNode.setModifiedDate(now);
    }
 else {
      kaleoNode.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoNode.isNew()) {
      session.save(kaleoNode);
      kaleoNode.setNew(false);
    }
 else {
      kaleoNode=(KaleoNode)session.merge(kaleoNode);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoNodeModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoNodeModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{kaleoNodeModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoNodeModelImpl.getOriginalKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
      args=new Object[]{kaleoNodeModelImpl.getKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
    }
    if ((kaleoNodeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDI.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoNodeModelImpl.getOriginalCompanyId(),kaleoNodeModelImpl.getOriginalKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_KDI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDI,args);
      args=new Object[]{kaleoNodeModelImpl.getCompanyId(),kaleoNodeModelImpl.getKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_KDI,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_KDI,args);
    }
  }
  entityCache.putResult(KaleoNodeModelImpl.ENTITY_CACHE_ENABLED,KaleoNodeImpl.class,kaleoNode.getPrimaryKey(),kaleoNode,false);
  kaleoNode.resetOriginalValues();
  return kaleoNode;
}

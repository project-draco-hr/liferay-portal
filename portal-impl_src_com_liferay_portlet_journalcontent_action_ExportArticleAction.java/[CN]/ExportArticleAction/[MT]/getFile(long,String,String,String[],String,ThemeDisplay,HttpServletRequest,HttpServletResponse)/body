{
  InputStream is=null;
  try {
    JournalArticleDisplay articleDisplay=JournalContentUtil.getDisplay(groupId,articleId,null,languageId,themeDisplay);
    StringBuilder sb=new StringBuilder();
    sb.append("<html>");
    sb.append("<head>");
    sb.append("<meta content=\"");
    sb.append(ContentTypes.TEXT_HTML_UTF8);
    sb.append("\" http-equiv=\"content-type\" />");
    sb.append("<base href=\"");
    sb.append(themeDisplay.getPortalURL());
    sb.append("\" />");
    sb.append("</head>");
    sb.append("<body>");
    sb.append(articleDisplay.getContent());
    int pages=articleDisplay.getNumberOfPages();
    for (int i=2; i <= pages; i++) {
      articleDisplay=JournalContentUtil.getDisplay(groupId,articleId,"export",languageId,themeDisplay,i);
      sb.append(articleDisplay.getContent());
    }
    sb.append("</body>");
    sb.append("</html>");
    is=new ByteArrayInputStream(sb.toString().getBytes(StringPool.UTF8));
    String title=articleDisplay.getTitle();
    String sourceExtension="html";
    sb=new StringBuilder();
    sb.append(title);
    sb.append(StringPool.PERIOD);
    sb.append(sourceExtension);
    String fileName=sb.toString();
    if (Validator.isNotNull(targetExtension) && ArrayUtil.contains(allowedExtensions,targetExtension)) {
      String id=DocumentConversionUtil.getTempFileId(articleDisplay.getId(),articleDisplay.getVersion());
      InputStream convertedIS=DocumentConversionUtil.convert(id,is,sourceExtension,targetExtension);
      if ((convertedIS != null) && (convertedIS != is)) {
        sb=new StringBuilder();
        sb.append(title);
        sb.append(StringPool.PERIOD);
        sb.append(targetExtension);
        fileName=sb.toString();
        is=convertedIS;
      }
    }
    String contentType=MimeTypesUtil.getContentType(fileName);
    ServletResponseUtil.sendFile(response,fileName,is,contentType);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    ServletResponseUtil.cleanUp(is);
  }
}

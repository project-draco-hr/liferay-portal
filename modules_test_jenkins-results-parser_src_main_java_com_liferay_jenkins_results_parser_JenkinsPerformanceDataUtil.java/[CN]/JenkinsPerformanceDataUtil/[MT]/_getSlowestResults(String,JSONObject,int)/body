{
  List<Result> results=new ArrayList<>();
  JSONArray childReportsJSONArray=jobJSONObject.getJSONArray("childReports");
  for (int i=0; i < childReportsJSONArray.length(); i++) {
    JSONObject childReportJSONObject=childReportsJSONArray.getJSONObject(i);
    JSONObject childJSONObject=childReportJSONObject.getJSONObject("child");
    if (!childReportJSONObject.has("result")) {
      throw new IllegalArgumentException("Result is not available for " + childJSONObject.getString("url"));
    }
    JSONObject childResultJSONObject=childReportJSONObject.getJSONObject("result");
    JSONArray suitesJSONArray=childResultJSONObject.getJSONArray("suites");
    for (int j=0; j < suitesJSONArray.length(); j++) {
      JSONObject suiteJSONObject=suitesJSONArray.getJSONObject(j);
      JSONArray casesJSONArray=suiteJSONObject.getJSONArray("cases");
      for (int k=0; k < casesJSONArray.length(); k++) {
        JSONObject caseJSONObject=casesJSONArray.getJSONObject(k);
        Result result=new Result(caseJSONObject,childJSONObject,name);
        results.add(result);
      }
    }
  }
  Collections.sort(results);
  _truncate(results,maxSize);
  return results;
}

{
  JSONObject jsonObject=null;
  if (url.contains("-source")) {
    jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"),false);
    _results.add(new Result(jobName,jsonObject));
    Collections.sort(_results);
    _truncate(_results,size);
    return;
  }
  int retryCount=0;
  while (true) {
    try {
      jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/testReport/api/json"),false);
    }
 catch (    FileNotFoundException fnfe) {
      jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"),false);
      _results.add(new Result(jobName,jsonObject));
      break;
    }
    try {
      _results.addAll(_getSlowestResults(jobName,jsonObject,size));
      break;
    }
 catch (    IllegalArgumentException iae) {
      String message=iae.getMessage();
      if (!message.contains("Result is not available for ")) {
        throw iae;
      }
      retryCount++;
      if (retryCount > 5) {
        System.out.println("Exceeded max retries");
        throw iae;
      }
      System.out.println("Retry in 60 seconds: " + message);
      Thread.sleep(60 * 1000);
    }
  }
  Collections.sort(_results);
  _truncate(_results,size);
}

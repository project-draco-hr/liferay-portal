{
  User user=userPersistence.findByPrimaryKey(userId);
  if (Validator.isNull(name)) {
    name=url;
  }
  validate(url);
  long entryId=counterLocalService.increment();
  BookmarksEntry entry=bookmarksEntryPersistence.create(entryId);
  entry.setUuid(serviceContext.getUuid());
  entry.setGroupId(groupId);
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setUserName(user.getFullName());
  entry.setFolderId(folderId);
  entry.setTreePath(entry.buildTreePath());
  entry.setName(name);
  entry.setUrl(url);
  entry.setDescription(description);
  entry.setExpandoBridgeAttributes(serviceContext);
  bookmarksEntryPersistence.update(entry);
  resourceLocalService.addModelResources(entry,serviceContext);
  updateAsset(userId,entry,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds(),serviceContext.getAssetPriority());
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",entry.getName());
  socialActivityLocalService.addActivity(userId,groupId,BookmarksEntry.class.getName(),entryId,BookmarksActivityKeys.ADD_ENTRY,extraDataJSONObject.toString(),0);
  notifySubscribers(userId,entry,serviceContext);
  return entry;
}

{
  StagingLocalServiceUtil.enableLocalStaging(TestPropsValues.getUserId(),group,false,false,new ServiceContext());
  Group stagingGroup=group.getStagingGroup();
  JournalArticle article=JournalTestUtil.addArticle(stagingGroup.getGroupId(),JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  BookmarksEntry bookmarksEntry=BookmarksTestUtil.addEntry(stagingGroup.getGroupId(),true);
  addAssetLink(article,bookmarksEntry,1);
  Map<String,String[]> parameterMap=ExportImportConfigurationParameterMapFactory.buildParameterMap();
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA,new String[]{Boolean.FALSE.toString()});
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{Boolean.FALSE.toString()});
  StagingUtil.publishLayouts(TestPropsValues.getUserId(),stagingGroup.getGroupId(),group.getGroupId(),false,parameterMap);
  JournalArticle liveArticle=JournalArticleLocalServiceUtil.fetchJournalArticleByUuidAndGroupId(article.getUuid(),group.getGroupId());
  Assert.assertNull(liveArticle);
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA,new String[]{Boolean.TRUE.toString()});
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{Boolean.TRUE.toString()});
  StagingUtil.publishLayouts(TestPropsValues.getUserId(),stagingGroup.getGroupId(),group.getGroupId(),false,parameterMap);
  AssetEntry assetEntry=AssetEntryLocalServiceUtil.fetchEntry(group.getGroupId(),article.getArticleResourceUuid());
  Assert.assertNotNull(assetEntry);
  List<AssetLink> links=AssetLinkLocalServiceUtil.getLinks(assetEntry.getEntryId());
  Assert.assertNotNull(links);
  Assert.assertTrue(links.size() == 2);
}

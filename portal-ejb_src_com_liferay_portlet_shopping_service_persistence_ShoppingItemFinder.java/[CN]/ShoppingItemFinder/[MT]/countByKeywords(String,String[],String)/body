{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    StringBuffer query=new StringBuffer();
    query.append("SELECT COUNT(*) FROM ");
    query.append(ShoppingItemHBM.class.getName());
    query.append(" AS shoppingItem ");
    query.append("WHERE ");
    if ((categoryIds != null) && (categoryIds.length > 0)) {
      query.append("(");
      for (int i=0; i < categoryIds.length; i++) {
        query.append("shoppingItem.categoryId = ? ");
        if (i + 1 < categoryIds.length) {
          query.append("OR ");
        }
      }
      query.append(") AND ");
    }
    query.append("shoppingItem.groupId = ? AND (");
    query.append("shoppingItem.name LIKE ? OR ");
    query.append("shoppingItem.description LIKE ? OR ");
    query.append("shoppingItem.properties LIKE ?)");
    keywords='%' + keywords + '%';
    Query q=session.createQuery(query.toString());
    for (int i=0; i < categoryIds.length; i++) {
      q.setString(i,categoryIds[i]);
    }
    q.setString(categoryIds.length,groupId);
    q.setString(categoryIds.length + 1,keywords);
    q.setString(categoryIds.length + 2,keywords);
    q.setString(categoryIds.length + 3,keywords);
    Iterator itr=q.iterate();
    if (itr.hasNext()) {
      Long count=(Long)itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

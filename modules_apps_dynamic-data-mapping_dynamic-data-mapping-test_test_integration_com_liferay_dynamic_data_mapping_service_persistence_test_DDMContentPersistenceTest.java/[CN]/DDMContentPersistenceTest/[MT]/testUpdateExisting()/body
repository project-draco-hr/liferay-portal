{
  long pk=RandomTestUtil.nextLong();
  DDMContent newDDMContent=_persistence.create(pk);
  newDDMContent.setUuid(RandomTestUtil.randomString());
  newDDMContent.setGroupId(RandomTestUtil.nextLong());
  newDDMContent.setCompanyId(RandomTestUtil.nextLong());
  newDDMContent.setUserId(RandomTestUtil.nextLong());
  newDDMContent.setUserName(RandomTestUtil.randomString());
  newDDMContent.setCreateDate(RandomTestUtil.nextDate());
  newDDMContent.setModifiedDate(RandomTestUtil.nextDate());
  newDDMContent.setName(RandomTestUtil.randomString());
  newDDMContent.setDescription(RandomTestUtil.randomString());
  newDDMContent.setData(RandomTestUtil.randomString());
  _ddmContents.add(_persistence.update(newDDMContent));
  DDMContent existingDDMContent=_persistence.findByPrimaryKey(newDDMContent.getPrimaryKey());
  Assert.assertEquals(existingDDMContent.getUuid(),newDDMContent.getUuid());
  Assert.assertEquals(existingDDMContent.getContentId(),newDDMContent.getContentId());
  Assert.assertEquals(existingDDMContent.getGroupId(),newDDMContent.getGroupId());
  Assert.assertEquals(existingDDMContent.getCompanyId(),newDDMContent.getCompanyId());
  Assert.assertEquals(existingDDMContent.getUserId(),newDDMContent.getUserId());
  Assert.assertEquals(existingDDMContent.getUserName(),newDDMContent.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMContent.getCreateDate()),Time.getShortTimestamp(newDDMContent.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingDDMContent.getModifiedDate()),Time.getShortTimestamp(newDDMContent.getModifiedDate()));
  Assert.assertEquals(existingDDMContent.getName(),newDDMContent.getName());
  Assert.assertEquals(existingDDMContent.getDescription(),newDDMContent.getDescription());
  Assert.assertEquals(existingDDMContent.getData(),newDDMContent.getData());
}

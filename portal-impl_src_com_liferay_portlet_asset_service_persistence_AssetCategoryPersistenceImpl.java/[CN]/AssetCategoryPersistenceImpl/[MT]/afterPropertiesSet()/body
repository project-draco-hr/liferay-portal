{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portlet.asset.model.AssetCategory")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<AssetCategory>> listenersList=new ArrayList<ModelListener<AssetCategory>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<AssetCategory>)InstanceFactory.newInstance(getClassLoader(),listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  assetCategoryToAssetEntryTableMapping=TableMappingFactory.getTableMapping("AssetEntries_AssetCategories","categoryId","entryId",this,assetEntryPersistence);
  expandTreeLeftCategoryId=new ExpandTreeLeftCategoryId();
  expandTreeRightCategoryId=new ExpandTreeRightCategoryId();
  shrinkTreeLeftCategoryId=new ShrinkTreeLeftCategoryId();
  shrinkTreeRightCategoryId=new ShrinkTreeRightCategoryId();
  updateTree=new UpdateTree();
}

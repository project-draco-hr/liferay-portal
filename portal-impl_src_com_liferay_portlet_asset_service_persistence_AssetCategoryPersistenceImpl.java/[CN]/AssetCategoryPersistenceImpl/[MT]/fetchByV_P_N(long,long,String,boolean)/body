{
  Object[] finderArgs=new Object[]{new Long(vocabularyId),new Long(parentCategoryId),name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_V_P_N,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_SELECT_ASSETCATEGORY_WHERE);
      query.append(_FINDER_COLUMN_V_P_N_VOCABULARYID_2);
      query.append(_FINDER_COLUMN_V_P_N_PARENTCATEGORYID_2);
      if (name == null) {
        query.append(_FINDER_COLUMN_V_P_N_NAME_1);
      }
 else {
        if (name.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_V_P_N_NAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_V_P_N_NAME_2);
        }
      }
      query.append(AssetCategoryModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(vocabularyId);
      qPos.add(parentCategoryId);
      if (name != null) {
        qPos.add(name);
      }
      List<AssetCategory> list=q.list();
      result=list;
      AssetCategory assetCategory=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_V_P_N,finderArgs,list);
      }
 else {
        assetCategory=list.get(0);
        cacheResult(assetCategory);
        if ((assetCategory.getVocabularyId() != vocabularyId) || (assetCategory.getParentCategoryId() != parentCategoryId) || (assetCategory.getName() == null)|| !assetCategory.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_V_P_N,finderArgs,assetCategory);
        }
      }
      return assetCategory;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_V_P_N,finderArgs,new ArrayList<AssetCategory>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (AssetCategory)result;
    }
  }
}

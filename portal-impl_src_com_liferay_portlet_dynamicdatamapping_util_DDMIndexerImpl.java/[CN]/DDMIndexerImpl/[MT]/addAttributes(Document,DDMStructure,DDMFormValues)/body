{
  long groupId=GetterUtil.getLong(document.get(com.liferay.portal.kernel.search.Field.GROUP_ID));
  Locale[] locales=LanguageUtil.getAvailableLocales(groupId);
  for (  DDMFormFieldValue ddmFormFieldValue : ddmFormValues.getDDMFormFieldValues()) {
    try {
      String indexType=ddmStructure.getFieldProperty(ddmFormFieldValue.getName(),"indexType");
      if (Validator.isNull(indexType)) {
        continue;
      }
      for (      Locale locale : locales) {
        String name=encodeName(ddmStructure.getStructureId(),ddmFormFieldValue.getName(),locale);
        String valueString=ddmFormFieldValue.getValue().getString(locale);
        String type=ddmStructure.getDDMFormField(ddmFormFieldValue.getName()).getType();
        if (type.equals(DDMImpl.TYPE_RADIO) || type.equals(DDMImpl.TYPE_SELECT)) {
          JSONArray jsonArray=JSONFactoryUtil.createJSONArray(valueString);
          String[] stringArray=ArrayUtil.toStringArray(jsonArray);
          if (indexType.equals("keyword")) {
            document.addKeyword(name,stringArray);
          }
 else {
            document.addText(name,stringArray);
          }
        }
 else {
          if (type.equals(DDMImpl.TYPE_DDM_TEXT_HTML)) {
            valueString=HtmlUtil.extractText(valueString);
          }
          if (indexType.equals("keyword")) {
            document.addKeyword(name,valueString);
          }
 else {
            document.addText(name,valueString);
          }
        }
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
}

{
  boolean finderClassNameCacheEnabled=JournalStructureModelImpl.CACHE_ENABLED;
  String finderClassName=JournalStructure.class.getName();
  String finderMethodName="fetchByG_S";
  String[] finderParams=new String[]{Long.class.getName(),String.class.getName()};
  Object[] finderArgs=new Object[]{new Long(groupId),structureId};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringMaker query=new StringMaker();
      query.append("FROM com.liferay.portlet.journal.model.JournalStructure WHERE ");
      query.append("groupId = ?");
      query.append(" AND ");
      if (structureId == null) {
        query.append("structureId IS NULL");
      }
 else {
        query.append("structureId = ?");
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("structureId ASC");
      Query q=session.createQuery(query.toString());
      int queryPos=0;
      q.setLong(queryPos++,groupId);
      if (structureId != null) {
        q.setString(queryPos++,structureId);
      }
      List<JournalStructure> list=q.list();
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      if (list.size() == 0) {
        return null;
      }
 else {
        return list.get(0);
      }
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    List<JournalStructure> list=(List<JournalStructure>)result;
    if (list.size() == 0) {
      return null;
    }
 else {
      return list.get(0);
    }
  }
}

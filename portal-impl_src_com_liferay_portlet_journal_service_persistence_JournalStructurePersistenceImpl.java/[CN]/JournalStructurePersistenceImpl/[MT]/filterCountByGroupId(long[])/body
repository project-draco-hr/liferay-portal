{
  if (!InlineSQLHelperUtil.isEnabled(groupIds)) {
    return countByGroupId(groupIds);
  }
  StringBundler query=new StringBundler();
  query.append(_FILTER_SQL_COUNT_JOURNALSTRUCTURE_WHERE);
  boolean conjunctionable=false;
  if ((groupIds == null) || (groupIds.length > 0)) {
    if (conjunctionable) {
      query.append(WHERE_AND);
    }
    query.append(StringPool.OPEN_PARENTHESIS);
    for (int i=0; i < groupIds.length; i++) {
      query.append(_FINDER_COLUMN_GROUPID_GROUPID_5);
      if ((i + 1) < groupIds.length) {
        query.append(WHERE_OR);
      }
    }
    query.append(StringPool.CLOSE_PARENTHESIS);
    conjunctionable=true;
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),JournalStructure.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,groupIds);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    if (groupIds != null) {
      qPos.add(groupIds);
    }
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

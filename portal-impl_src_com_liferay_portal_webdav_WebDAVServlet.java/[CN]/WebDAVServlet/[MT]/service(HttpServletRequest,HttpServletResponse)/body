{
  int status=HttpServletResponse.SC_PRECONDITION_FAILED;
  try {
    if (isIgnoredResource(request)) {
      status=HttpServletResponse.SC_NOT_FOUND;
      return;
    }
    WebDAVStorage storage=getStorage(request);
    if (storage.getRootPath() == null) {
      storage.setRootPath(getRootPath(request));
    }
    PermissionChecker permissionChecker=null;
    String remoteUser=request.getRemoteUser();
    if (remoteUser != null) {
      PrincipalThreadLocal.setName(remoteUser);
      long userId=GetterUtil.getLong(remoteUser);
      User user=UserLocalServiceUtil.getUserById(userId);
      permissionChecker=PermissionCheckerFactoryUtil.create(user,true);
      PermissionThreadLocal.setPermissionChecker(permissionChecker);
    }
    Method method=MethodFactory.create(request);
    WebDAVRequest webDavRequest=new WebDAVRequestImpl(storage,request,response,permissionChecker);
    if (_log.isInfoEnabled()) {
      _log.info("Request URI " + request.getRequestURI());
      _log.info("Method " + request.getMethod());
      _log.info("User agent " + request.getHeader("User-agent"));
    }
    status=method.process(webDavRequest);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    if (status > 0) {
      response.setStatus(status);
      if (_log.isInfoEnabled()) {
        _log.info("Status code " + status);
      }
    }
  }
}

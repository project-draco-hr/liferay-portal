{
  KaleoTimerInstanceToken kaleoTimerInstanceToken=(KaleoTimerInstanceToken)EntityCacheUtil.getResult(KaleoTimerInstanceTokenModelImpl.ENTITY_CACHE_ENABLED,KaleoTimerInstanceTokenImpl.class,primaryKey);
  if (kaleoTimerInstanceToken == _nullKaleoTimerInstanceToken) {
    return null;
  }
  if (kaleoTimerInstanceToken == null) {
    Session session=null;
    try {
      session=openSession();
      kaleoTimerInstanceToken=(KaleoTimerInstanceToken)session.get(KaleoTimerInstanceTokenImpl.class,primaryKey);
      if (kaleoTimerInstanceToken != null) {
        cacheResult(kaleoTimerInstanceToken);
      }
 else {
        EntityCacheUtil.putResult(KaleoTimerInstanceTokenModelImpl.ENTITY_CACHE_ENABLED,KaleoTimerInstanceTokenImpl.class,primaryKey,_nullKaleoTimerInstanceToken);
      }
    }
 catch (    Exception e) {
      EntityCacheUtil.removeResult(KaleoTimerInstanceTokenModelImpl.ENTITY_CACHE_ENABLED,KaleoTimerInstanceTokenImpl.class,primaryKey);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return kaleoTimerInstanceToken;
}

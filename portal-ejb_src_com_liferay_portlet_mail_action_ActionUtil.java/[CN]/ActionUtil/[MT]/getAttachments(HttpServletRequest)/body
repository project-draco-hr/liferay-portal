{
  try {
    HttpSession ses=req.getSession();
    Message msg=(Message)req.getAttribute(WebKeys.MAIL_MESSAGE);
    if (msg == null) {
      msg=(Message)ses.getAttribute(WebKeys.MAIL_MESSAGE);
    }
    if (msg == null) {
      msg=MailUtil.getNewMessage();
      ses.setAttribute(WebKeys.MAIL_MESSAGE,msg);
    }
    Object content=msg.getContent();
    if (content instanceof Multipart) {
      Multipart multipart=(Multipart)content;
      List attachments=new ArrayList();
      double totalSize=0.0;
      boolean overLimit=false;
      for (int i=1; i < multipart.getCount(); i++) {
        Part part=multipart.getBodyPart(i);
        String fileName=part.getFileName();
        boolean defaultFileName=true;
        if (fileName == null) {
          defaultFileName=false;
          fileName="message" + i + ".txt";
        }
        double size=0.0;
        int availableSize=part.getInputStream().available();
        if (availableSize == 0) {
          size=(double)part.getSize();
        }
 else {
          size=(double)availableSize;
        }
        size=size * MailUtil.SIZE_DIFFERENTIAL;
        totalSize=totalSize + size;
        if (totalSize >= MailUtil.ATTACHMENTS_MAX_SIZE) {
          multipart.removeBodyPart(i);
          totalSize=totalSize - size;
          overLimit=true;
        }
        attachments.add(new Attachment(i,fileName,size,defaultFileName));
      }
      req.setAttribute(WebKeys.MAIL_ATTACHMENTS,attachments);
      req.setAttribute(WebKeys.MAIL_ATTACHMENT_TOTAL_SIZE,new Double(totalSize));
      Boolean sesOverLimit=(Boolean)ses.getAttribute(WebKeys.MAIL_ATTACHMENT_OVER_LIMIT);
      if (sesOverLimit == null) {
        ses.setAttribute(WebKeys.MAIL_ATTACHMENT_OVER_LIMIT,new Boolean(overLimit));
      }
    }
  }
 catch (  MessagingException me) {
    _log.error(me);
  }
}

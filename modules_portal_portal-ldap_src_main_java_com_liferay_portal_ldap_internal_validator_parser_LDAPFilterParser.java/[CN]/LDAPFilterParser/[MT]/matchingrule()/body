{
  try {
{
      int cnt15=0;
      loop15:       do {
        int alt15=2;
        int LA15_0=input.LA(1);
        if (((LA15_0 >= ASCII_LATIN1 && LA15_0 <= DOT))) {
          alt15=1;
        }
switch (alt15) {
case 1:
{
            if ((input.LA(1) >= ASCII_LATIN1 && input.LA(1) <= DOT)) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_matchingrule374);
              throw mse;
            }
          }
        break;
default :
      if (cnt15 >= 1)       break loop15;
    EarlyExitException eee=new EarlyExitException(15,input);
  throw eee;
}
cnt15++;
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}

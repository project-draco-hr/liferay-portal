{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  StringBundler sb=new StringBundler();
  try {
    if (_showGuestGroup) {
      buildGuestGroupBreadcrumb(themeDisplay,sb);
    }
    if (_showParentGroups) {
      buildParentGroupsBreadcrumb(themeDisplay,sb);
    }
    if (_showCurrentGroup) {
      buildScopeGroupBreadcrumb(themeDisplay,sb);
    }
    if (_showLayout) {
      buildLayoutBreadcrumb(themeDisplay,sb);
    }
    if (_showPortletBreadcrumb) {
      buildPortletBreadcrumb(request,themeDisplay,sb);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  String breadcrumbString=sb.toString();
  if (Validator.isNull(breadcrumbString)) {
    return StringPool.BLANK;
  }
  String breadcrumbTruncateClass=StringPool.BLANK;
  String[] breadcrumbArray=breadcrumbString.split("<li",-1);
  boolean breadcrumbTruncate=false;
  if (breadcrumbArray.length > 3) {
    breadcrumbTruncate=true;
  }
  if (breadcrumbTruncate) {
    breadcrumbTruncateClass=" breadcrumb-truncate";
  }
  int x=breadcrumbString.indexOf("<li") + 3;
  int y=breadcrumbString.lastIndexOf("<li") + 3;
  if (x == y) {
    breadcrumbString=StringUtil.insert(breadcrumbString," class=\"active only" + breadcrumbTruncateClass + "\"",x);
  }
 else {
    breadcrumbString=StringUtil.insert(breadcrumbString," class=\"active last" + breadcrumbTruncateClass + "\"",y);
    breadcrumbString=StringUtil.insert(breadcrumbString," class=\"first" + breadcrumbTruncateClass + "\"",x);
  }
  if (breadcrumbTruncate) {
    y=breadcrumbString.lastIndexOf("<li");
    int z=breadcrumbString.lastIndexOf("<li",y - 1) + 3;
    breadcrumbString=StringUtil.insert(breadcrumbString," class=\"current-parent" + breadcrumbTruncateClass + "\"",z);
  }
  return breadcrumbString;
}

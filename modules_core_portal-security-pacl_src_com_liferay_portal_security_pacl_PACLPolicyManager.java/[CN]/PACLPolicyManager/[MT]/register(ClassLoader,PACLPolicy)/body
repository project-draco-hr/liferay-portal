{
  List<URL> urLs=paclPolicy.getURLs();
  if (classLoader instanceof URLClassLoader) {
    URLClassLoader urlClassLoader=(URLClassLoader)classLoader;
    for (    URL url : urlClassLoader.getURLs()) {
      String path=url.getPath();
      if (path.startsWith(PropsValues.LIFERAY_LIB_GLOBAL_SHARED_DIR)) {
        continue;
      }
      urLs.add(url);
      _urlPACLPolicies.put(new URLWrapper(url),paclPolicy);
    }
  }
  URLContainer urlContainer=paclPolicy.getURLContainer();
  URL path=urlContainer.getResource(StringPool.SLASH);
  String realPath=path.getPath();
  if (realPath.endsWith(StringPool.SLASH)) {
    realPath=realPath.substring(0,realPath.length() - 1);
  }
  try {
    URL url=new URL("file","",-1,realPath);
    urLs.add(url);
    _urlPACLPolicies.put(new URLWrapper(url),paclPolicy);
    url=new URL("file","",-1,realPath + StringPool.SLASH);
    urLs.add(url);
    _urlPACLPolicies.put(new URLWrapper(url),paclPolicy);
    url=new URL("file","",-1,realPath + "/WEB-INF/classes/*");
    urLs.add(url);
    _urlPACLPolicies.put(new URLWrapper(url),paclPolicy);
  }
 catch (  MalformedURLException murle) {
    throw new RuntimeException(murle);
  }
  _classLoaderPACLPolicies.put(classLoader,paclPolicy);
  refresh();
}

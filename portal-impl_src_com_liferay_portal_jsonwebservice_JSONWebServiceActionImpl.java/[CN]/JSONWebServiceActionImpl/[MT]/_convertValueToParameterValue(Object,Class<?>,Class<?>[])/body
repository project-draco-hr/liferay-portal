{
  if (parameterType.isArray()) {
    List<?> list=null;
    if (value instanceof List) {
      list=(List<?>)value;
    }
 else {
      String stringValue=value.toString();
      stringValue=stringValue.trim();
      if (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {
        stringValue=StringPool.OPEN_BRACKET.concat(stringValue).concat(StringPool.CLOSE_BRACKET);
      }
      list=JSONFactoryUtil.looseDeserializeSafe(stringValue,ArrayList.class);
    }
    return _convertListToArray(list,parameterType.getComponentType());
  }
 else   if (parameterType.equals(Calendar.class)) {
    Calendar calendar=Calendar.getInstance();
    calendar.setLenient(false);
    String stringValue=value.toString();
    stringValue=stringValue.trim();
    long timeInMillis=GetterUtil.getLong(stringValue);
    calendar.setTimeInMillis(timeInMillis);
    return calendar;
  }
 else   if (Collection.class.isAssignableFrom(parameterType)) {
    List<?> list=null;
    if (value instanceof List) {
      list=(List<?>)value;
    }
 else {
      String stringValue=value.toString();
      stringValue=stringValue.trim();
      if (!stringValue.startsWith(StringPool.OPEN_BRACKET)) {
        stringValue=StringPool.OPEN_BRACKET.concat(stringValue).concat(StringPool.CLOSE_BRACKET);
      }
      list=JSONFactoryUtil.looseDeserializeSafe(stringValue,ArrayList.class);
    }
    return _generifyList(list,genericParameterTypes);
  }
 else   if (parameterType.equals(Locale.class)) {
    String stringValue=value.toString();
    stringValue=stringValue.trim();
    return LocaleUtil.fromLanguageId(stringValue);
  }
 else   if (parameterType.equals(Map.class)) {
    String stringValue=value.toString();
    stringValue=stringValue.trim();
    Map<?,?> map=JSONFactoryUtil.looseDeserializeSafe(stringValue,HashMap.class);
    return _generifyMap(map,genericParameterTypes);
  }
 else {
    Object parameterValue=null;
    try {
      parameterValue=_convertType(value,parameterType);
    }
 catch (    Exception e) {
      String stringValue=value.toString();
      stringValue=stringValue.trim();
      if (!stringValue.startsWith(StringPool.OPEN_CURLY_BRACE)) {
        throw new ClassCastException(e.getMessage());
      }
      parameterValue=JSONFactoryUtil.looseDeserializeSafe(stringValue,parameterType);
    }
    return parameterValue;
  }
}

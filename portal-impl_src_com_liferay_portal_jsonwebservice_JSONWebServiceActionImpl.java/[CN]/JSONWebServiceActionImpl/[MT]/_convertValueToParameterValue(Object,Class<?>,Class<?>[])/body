{
  if (parameterType.isArray()) {
    List<?> list=null;
    if (value instanceof List) {
      list=(List<?>)value;
    }
 else {
      String valueString=value.toString();
      valueString=valueString.trim();
      if (!valueString.startsWith(StringPool.OPEN_BRACKET)) {
        valueString=StringPool.OPEN_BRACKET.concat(valueString).concat(StringPool.CLOSE_BRACKET);
      }
      list=JSONFactoryUtil.looseDeserialize(valueString,ArrayList.class);
    }
    return _convertListToArray(list,parameterType.getComponentType());
  }
 else   if (parameterType.equals(Calendar.class)) {
    Calendar calendar=Calendar.getInstance();
    calendar.setLenient(false);
    String valueString=value.toString();
    valueString=valueString.trim();
    long timeInMillis=GetterUtil.getLong(valueString);
    calendar.setTimeInMillis(timeInMillis);
    return calendar;
  }
 else   if (Collection.class.isAssignableFrom(parameterType)) {
    List<?> list=null;
    if (value instanceof List) {
      list=(List<?>)value;
    }
 else {
      String valueString=value.toString();
      valueString=valueString.trim();
      if (!valueString.startsWith(StringPool.OPEN_BRACKET)) {
        valueString=StringPool.OPEN_BRACKET.concat(valueString).concat(StringPool.CLOSE_BRACKET);
      }
      list=JSONFactoryUtil.looseDeserialize(valueString,ArrayList.class);
    }
    return _generifyList(list,genericParameterTypes);
  }
 else   if (parameterType.equals(Locale.class)) {
    String valueString=value.toString();
    valueString=valueString.trim();
    return LocaleUtil.fromLanguageId(valueString);
  }
 else   if (parameterType.equals(Map.class)) {
    Map<?,?> map=null;
    if (value instanceof Map) {
      map=(Map<Object,Object>)value;
    }
 else {
      String valueString=value.toString();
      valueString=valueString.trim();
      map=JSONFactoryUtil.looseDeserialize(valueString,HashMap.class);
    }
    return _generifyMap(map,genericParameterTypes);
  }
 else {
    Object parameterValue=null;
    try {
      parameterValue=_convertType(value,parameterType);
    }
 catch (    Exception e1) {
      if (value instanceof Map) {
        try {
          parameterValue=_createDefaultParameterValue(null,parameterType);
        }
 catch (        Exception e2) {
          throw new ClassCastException(e1.getMessage());
        }
        BeanCopy beanCopy=BeanCopy.beans(value,parameterValue);
        beanCopy.copy();
      }
 else {
        String valueString=value.toString();
        valueString=valueString.trim();
        if (!valueString.startsWith(StringPool.OPEN_CURLY_BRACE)) {
          throw new ClassCastException(e1.getMessage());
        }
        parameterValue=JSONFactoryUtil.looseDeserialize(valueString,parameterType);
      }
    }
    return parameterValue;
  }
}

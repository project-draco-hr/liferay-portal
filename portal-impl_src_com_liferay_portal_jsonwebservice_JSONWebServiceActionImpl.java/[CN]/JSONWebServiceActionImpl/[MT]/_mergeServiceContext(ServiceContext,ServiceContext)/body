{
  serviceContextSource.setAddGroupPermissions(serviceContextDestination.isAddGroupPermissions());
  serviceContextSource.setAddGuestPermissions(serviceContextDestination.isAddGuestPermissions());
  if (serviceContextDestination.getAssetCategoryIds() != null) {
    serviceContextSource.setAssetCategoryIds(serviceContextDestination.getAssetCategoryIds());
  }
  if (serviceContextDestination.getAssetLinkEntryIds() != null) {
    serviceContextSource.setAssetLinkEntryIds(serviceContextDestination.getAssetLinkEntryIds());
  }
  if (serviceContextDestination.getAssetTagNames() != null) {
    serviceContextSource.setAssetTagNames(serviceContextDestination.getAssetTagNames());
  }
  if (serviceContextDestination.getAttributes() != null) {
    serviceContextSource.setAttributes(serviceContextDestination.getAttributes());
  }
  if (Validator.isNotNull(serviceContextDestination.getCommand())) {
    serviceContextSource.setCommand(serviceContextDestination.getCommand());
  }
  if (serviceContextDestination.getCompanyId() > 0) {
    serviceContextSource.setCompanyId(serviceContextDestination.getCompanyId());
  }
  if (serviceContextDestination.getCreateDate() != null) {
    serviceContextSource.setCreateDate(serviceContextDestination.getCreateDate());
  }
  if (Validator.isNotNull(serviceContextDestination.getCurrentURL())) {
    serviceContextSource.setCurrentURL(serviceContextDestination.getCurrentURL());
  }
  if (serviceContextDestination.getExpandoBridgeAttributes() != null) {
    serviceContextSource.setExpandoBridgeAttributes(serviceContextDestination.getExpandoBridgeAttributes());
  }
  if (serviceContextDestination.getGroupPermissions() != null) {
    serviceContextSource.setGroupPermissions(serviceContextDestination.getGroupPermissions());
  }
  if (serviceContextDestination.getGuestPermissions() != null) {
    serviceContextSource.setGuestPermissions(serviceContextDestination.getGuestPermissions());
  }
  if (serviceContextDestination.getHeaders() != null) {
    serviceContextSource.setHeaders(serviceContextDestination.getHeaders());
  }
  serviceContextSource.setLanguageId(serviceContextDestination.getLanguageId());
  if (Validator.isNotNull(serviceContextDestination.getLayoutFullURL())) {
    serviceContextSource.setLayoutFullURL(serviceContextDestination.getLayoutFullURL());
  }
  if (Validator.isNotNull(serviceContextDestination.getLayoutURL())) {
    serviceContextSource.setLayoutURL(serviceContextDestination.getLayoutURL());
  }
  if (serviceContextDestination.getModifiedDate() != null) {
    serviceContextSource.setModifiedDate(serviceContextDestination.getModifiedDate());
  }
  if (Validator.isNotNull(serviceContextDestination.getPathMain())) {
    serviceContextSource.setPathMain(serviceContextDestination.getPathMain());
  }
  if (serviceContextDestination.getPlid() > 0) {
    serviceContextSource.setPlid(serviceContextDestination.getPlid());
  }
  if (Validator.isNotNull(serviceContextDestination.getPortalURL())) {
    serviceContextSource.setPortalURL(serviceContextDestination.getPortalURL());
  }
  if (serviceContextDestination.getPortletPreferencesIds() != null) {
    serviceContextSource.setPortletPreferencesIds(serviceContextDestination.getPortletPreferencesIds());
  }
  if (Validator.isNotNull(serviceContextDestination.getRemoteAddr())) {
    serviceContextSource.setRemoteAddr(serviceContextDestination.getRemoteAddr());
  }
  if (Validator.isNotNull(serviceContextDestination.getRemoteHost())) {
    serviceContextSource.setRemoteHost(serviceContextDestination.getRemoteHost());
  }
  if (serviceContextDestination.getScopeGroupId() > 0) {
    serviceContextSource.setScopeGroupId(serviceContextDestination.getScopeGroupId());
  }
  serviceContextSource.setSignedIn(serviceContextDestination.isSignedIn());
  if (Validator.isNotNull(serviceContextDestination.getUserDisplayURL())) {
    serviceContextSource.setUserDisplayURL(serviceContextDestination.getUserDisplayURL());
  }
  if (serviceContextDestination.getUserId() > 0) {
    serviceContextSource.setUserId(serviceContextDestination.getUserId());
  }
  if (Validator.isNotNull(serviceContextDestination.getUuid())) {
    serviceContextSource.setUuid(serviceContextDestination.getUuid());
  }
  if (serviceContextDestination.getWorkflowAction() > 0) {
    serviceContextSource.setWorkflowAction(serviceContextDestination.getWorkflowAction());
  }
  return serviceContextDestination;
}

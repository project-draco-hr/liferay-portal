{
  SocialActivity newSocialActivity=addSocialActivity();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialActivity.class,SocialActivity.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("activityId"));
  Object newActivityId=newSocialActivity.getActivityId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("activityId",new Object[]{newActivityId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingActivityId=result.get(0);
  assertEquals(existingActivityId,newActivityId);
}

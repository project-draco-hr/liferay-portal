{
  long sourceGroupId=ParamUtil.getLong(portletRequest,"stagingGroupId");
  Group sourceGroup=_groupLocalService.getGroup(sourceGroupId);
  long targetGroupId=sourceGroup.getLiveGroupId();
  long exportImportConfigurationId=ParamUtil.getLong(portletRequest,"exportImportConfigurationId");
  Map<String,String[]> parameterMap=null;
  boolean privateLayout=false;
  long[] layoutIds=null;
  if (exportImportConfigurationId > 0) {
    ExportImportConfiguration exportImportConfiguration=_exportImportConfigurationLocalService.fetchExportImportConfiguration(exportImportConfigurationId);
    if (exportImportConfiguration != null) {
      Map<String,Serializable> settingsMap=exportImportConfiguration.getSettingsMap();
      parameterMap=(Map<String,String[]>)settingsMap.get("parameterMap");
      privateLayout=MapUtil.getBoolean(settingsMap,"privateLayout");
      layoutIds=(long[])settingsMap.get("layoutIds");
    }
  }
  if (parameterMap == null) {
    privateLayout=getPrivateLayout(portletRequest);
    layoutIds=ExportImportHelperUtil.getLayoutIds(portletRequest,targetGroupId);
    parameterMap=ExportImportConfigurationParameterMapFactory.buildParameterMap(portletRequest);
  }
  String groupName=getSchedulerGroupName(DestinationNames.LAYOUTS_LOCAL_PUBLISHER,targetGroupId);
  int recurrenceType=ParamUtil.getInteger(portletRequest,"recurrenceType");
  Calendar startCalendar=ExportImportDateUtil.getCalendar(portletRequest,"schedulerStartDate",true);
  String cronText=SchedulerEngineHelperUtil.getCronText(portletRequest,startCalendar,true,recurrenceType);
  Date schedulerEndDate=null;
  int endDateType=ParamUtil.getInteger(portletRequest,"endDateType");
  if (endDateType == 1) {
    Calendar endCalendar=ExportImportDateUtil.getCalendar(portletRequest,"schedulerEndDate",true);
    schedulerEndDate=endCalendar.getTime();
  }
  String name=ParamUtil.getString(portletRequest,"name");
  _layoutService.schedulePublishToLive(sourceGroupId,targetGroupId,privateLayout,layoutIds,parameterMap,groupName,cronText,startCalendar.getTime(),schedulerEndDate,name);
}

{
  JournalFolder newJournalFolder=addJournalFolder();
  _persistence.clearCache();
  JournalFolder existingJournalFolder=_persistence.findByPrimaryKey(newJournalFolder.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingJournalFolder.getUuid(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingJournalFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingJournalFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingJournalFolder.getName(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingJournalFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingJournalFolder.getParentFolderId()),ReflectionTestUtil.<Long>invoke(existingJournalFolder,"getOriginalParentFolderId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingJournalFolder.getName(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalName",new Class<?>[0])));
}

{
  boolean doScoring=forceScoring;
  if (sort == null || sort.length == 0) {
    if (q != null && !(q instanceof MatchAllDocsQuery)) {
      sort=new SortField[]{SortField.FIELD_SCORE};
    }
  }
  if (sort == null || sort.length == 0) {
    sort=new SortField[]{SortField.FIELD_DOC};
  }
  Set<String> facetNames=browser.getFacetNames();
  for (  SortField sf : sort) {
    if (sf.getType() == SortField.SCORE) {
      doScoring=true;
      break;
    }
  }
  DocComparatorSource compSource;
  if (sort.length == 1) {
    SortField sf=convert(browser,sort[0]);
    compSource=getComparatorSource(browser,sf);
  }
 else {
    DocComparatorSource[] compSources=new DocComparatorSource[sort.length];
    for (int i=0; i < sort.length; ++i) {
      compSources[i]=getComparatorSource(browser,convert(browser,sort[i]));
    }
    compSource=new MultiDocIdComparatorSource(compSources);
  }
  return new SortCollectorImpl(compSource,sort,browser,offset,count,doScoring,fetchStoredFields,termVectorsToFetch,groupBy,maxPerGroup,collectDocIdCache);
}

{
  if (Validator.isBlank(portletModel.getResourceBundle())) {
    return;
  }
  for (  Locale locale : LanguageUtil.getAvailableLocales()) {
    try {
      ResourceBundle resourceBundle=ResourceBundleUtil.getBundle(portletModel.getResourceBundle(),locale,classLoader);
      Dictionary<String,Object> properties=new HashMapDictionary<>();
      properties.put("javax.portlet.name",portletModel.getPortletId());
      properties.put("language.id",LocaleUtil.toLanguageId(locale));
      ServiceRegistration<ResourceBundle> serviceRegistration=bundleContext.registerService(ResourceBundle.class,resourceBundle,properties);
      serviceRegistrations.addServiceRegistration(serviceRegistration);
    }
 catch (    MissingResourceException mre) {
      if (_log.isInfoEnabled()) {
        _log.info("Portlet " + portletModel.getPortletName() + " does "+ "not have translations for available locale "+ locale);
      }
    }
    Dictionary<String,Object> properties=new HashMapDictionary<>();
    properties.put("javax.portlet.name",portletModel.getPortletId());
    properties.put("language.id",LocaleUtil.toLanguageId(locale));
    properties.put("service.ranking",Integer.MIN_VALUE);
    ServiceRegistration<ResourceBundle> serviceRegistration=bundleContext.registerService(ResourceBundle.class,LanguageResources.getResourceBundle(locale),properties);
    serviceRegistrations.addServiceRegistration(serviceRegistration);
  }
}

{
  InputStream is=null;
  try {
    String altDDName=(String)ctxt.getAttribute(Constants.ALT_DD_ATTR);
    if (altDDName != null) {
      try {
        is=new FileInputStream(altDDName);
      }
 catch (      FileNotFoundException e) {
        if (log.isLoggable(Level.WARNING)) {
          log.warning(Localizer.getMessage("jsp.error.internal.filenotfound",altDDName));
        }
      }
    }
 else {
      is=ctxt.getResourceAsStream(WEB_XML);
    }
    if (is == null) {
      return;
    }
    TreeNode webtld=null;
    if (altDDName != null) {
      webtld=new ParserUtils().parseXMLDocument(altDDName,is);
    }
 else {
      webtld=new ParserUtils().parseXMLDocument(WEB_XML,is);
    }
    TreeNode jspConfig=webtld.findChild("jsp-config");
    if (jspConfig != null) {
      webtld=jspConfig;
    }
    Iterator taglibs=webtld.findChildren("taglib");
    while (taglibs.hasNext()) {
      TreeNode taglib=(TreeNode)taglibs.next();
      String tagUri=null;
      String tagLoc=null;
      TreeNode child=taglib.findChild("taglib-uri");
      if (child != null)       tagUri=child.getBody();
      if (systemUris.contains(tagUri) || (!useMyFaces && systemUrisJsf.contains(tagUri))) {
        continue;
      }
      child=taglib.findChild("taglib-location");
      if (child != null)       tagLoc=child.getBody();
      if (tagLoc == null)       continue;
      if (uriType(tagLoc) == NOROOT_REL_URI)       tagLoc="/WEB-INF/" + tagLoc;
      String tagLoc2=null;
      if (tagLoc.endsWith(JAR_FILE_SUFFIX)) {
        tagLoc=ctxt.getResource(tagLoc).toString();
        tagLoc2="META-INF/taglib.tld";
      }
      mappings.put(tagUri,new String[]{tagLoc,tagLoc2});
    }
  }
  finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      Throwable t) {
      }
    }
  }
}

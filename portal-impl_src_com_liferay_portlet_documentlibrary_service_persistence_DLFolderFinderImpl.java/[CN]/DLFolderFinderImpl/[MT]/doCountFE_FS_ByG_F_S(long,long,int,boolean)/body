{
  Session session=null;
  try {
    session=openSession();
    StringBundler sb=new StringBundler(5);
    sb.append(StringPool.OPEN_PARENTHESIS);
    String sql=null;
    if (status == WorkflowConstants.STATUS_ANY) {
      sql=CustomSQLUtil.get(COUNT_FE_BY_G_F);
    }
 else {
      sql=CustomSQLUtil.get(COUNT_FE_BY_G_F_S);
    }
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFileEntry.class.getName(),"DLFileEntry.fileEntryId",groupId);
    }
    sb.append(sql);
    sb.append(") UNION ALL (");
    sql=CustomSQLUtil.get(COUNT_FS_BY_G_F_S);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFileShortcut.class.getName(),"DLFileShortcut.fileShortcutId",groupId);
    }
    sb.append(sql);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    sql=sb.toString();
    if (status == WorkflowConstants.STATUS_ANY) {
      sql=StringUtil.replace(sql,"[$FILE_ENTRY_FOLDER_ID$]",getFolderId(folderId,"DLFileEntry"));
    }
 else {
      sql=StringUtil.replace(sql,"[$FILE_ENTRY_FOLDER_ID$]",getFolderId(folderId,"DLFileVersion"));
    }
    sql=StringUtil.replace(sql,"[$FILE_SHORTCUT_FOLDER_ID$]",getFolderId(folderId,"DLFileShortcut"));
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (status != WorkflowConstants.STATUS_ANY) {
      qPos.add(status);
    }
    qPos.add(folderId);
    qPos.add(groupId);
    qPos.add(folderId);
    int count=0;
    Iterator<Long> itr=q.iterate();
    while (itr.hasNext()) {
      Long l=itr.next();
      if (l != null) {
        count+=l.intValue();
      }
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

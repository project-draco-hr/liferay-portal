{
  Session session=null;
  try {
    session=openSession();
    StringBundler sb=new StringBundler(7);
    sb.append(StringPool.OPEN_PARENTHESIS);
    String sql=CustomSQLUtil.get(COUNT_F_BY_G_M_F,queryDefinition,DLFolderImpl.TABLE_NAME);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFolder.class.getName(),"DLFolder.folderId",groupId);
    }
    sb.append(sql);
    sb.append(") UNION ALL (");
    sb.append(getFileVersionsSQL(COUNT_FE_BY_G_F,groupId,mimeTypes,queryDefinition,inlineSQLHelper));
    sb.append(") UNION ALL (");
    sb.append(getFileShortcutsSQL(COUNT_FS_BY_G_F_A,groupId,mimeTypes,queryDefinition,inlineSQLHelper));
    sb.append(StringPool.CLOSE_PARENTHESIS);
    sql=sb.toString();
    sql=updateSQL(sql,folderId,includeMountFolders);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (!includeMountFolders) {
      qPos.add(false);
    }
    qPos.add(queryDefinition.getStatus());
    qPos.add(folderId);
    qPos.add(groupId);
    qPos.add(queryDefinition.getStatus());
    qPos.add(folderId);
    if (mimeTypes != null) {
      qPos.add(mimeTypes);
    }
    qPos.add(groupId);
    qPos.add(true);
    qPos.add(queryDefinition.getStatus());
    qPos.add(folderId);
    if (mimeTypes != null) {
      qPos.add(mimeTypes);
    }
    int count=0;
    Iterator<Long> itr=q.iterate();
    while (itr.hasNext()) {
      Long l=itr.next();
      if (l != null) {
        count+=l.intValue();
      }
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

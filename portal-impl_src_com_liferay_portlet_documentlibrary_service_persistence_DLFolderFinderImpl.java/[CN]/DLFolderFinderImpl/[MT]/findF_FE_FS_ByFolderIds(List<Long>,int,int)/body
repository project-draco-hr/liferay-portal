{
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_F_FE_FS_BY_FOLDER_IDS);
    sql=StringUtil.replace(sql,"[$FOLDER_PARENT_FOLDER_ID$]",getFolderIds(folderIds,"DLFolder"));
    sql=StringUtil.replace(sql,"[$FILE_ENTRY_FOLDER_ID$]",getFolderIds(folderIds,"DLFileEntry"));
    sql=StringUtil.replace(sql,"[$FILE_SHORTCUT_FOLDER_ID$]",getFolderIds(folderIds,"DLFileShortcut"));
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar("folderId",Type.LONG);
    q.addScalar("name",Type.STRING);
    q.addScalar("title",Type.STRING);
    q.addScalar("fileShortcutId",Type.LONG);
    q.addScalar("className",Type.STRING);
    QueryPos qPos=QueryPos.getInstance(q);
    for (    Long folderId : folderIds) {
      qPos.add(folderId);
    }
    for (    Long folderId : folderIds) {
      qPos.add(folderId);
    }
    for (    Long folderId : folderIds) {
      qPos.add(folderId);
    }
    List<Object> models=new ArrayList<Object>();
    Iterator<Object[]> itr=(Iterator<Object[]>)QueryUtil.iterate(q,getDialect(),start,end);
    while (itr.hasNext()) {
      Object[] array=itr.next();
      Long folderId=(Long)array[0];
      String name=(String)array[1];
      long fileShortcutId=((Long)array[3]).longValue();
      String className=(String)array[4];
      Object obj=null;
      if (className.equals(DLFolder.class.getName())) {
        obj=DLFolderUtil.findByPrimaryKey(folderId.longValue());
      }
 else       if (className.equals(DLFileEntry.class.getName())) {
        obj=DLFileEntryUtil.findByF_N(folderId.longValue(),name);
      }
 else       if (className.equals(DLFileShortcut.class.getName())) {
        obj=DLFileShortcutUtil.findByPrimaryKey(fileShortcutId);
      }
      if (obj != null) {
        models.add(obj);
      }
    }
    return models;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

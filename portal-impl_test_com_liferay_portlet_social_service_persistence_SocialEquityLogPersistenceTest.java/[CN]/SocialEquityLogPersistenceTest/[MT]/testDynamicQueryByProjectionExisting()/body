{
  SocialEquityLog newSocialEquityLog=addSocialEquityLog();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialEquityLog.class,SocialEquityLog.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("equityLogId"));
  Object newEquityLogId=newSocialEquityLog.getEquityLogId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("equityLogId",new Object[]{newEquityLogId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingEquityLogId=result.get(0);
  assertEquals(existingEquityLogId,newEquityLogId);
}

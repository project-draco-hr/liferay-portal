{
  long pk=RandomTestUtil.nextLong();
  KaleoTaskAssignmentInstance newKaleoTaskAssignmentInstance=_persistence.create(pk);
  newKaleoTaskAssignmentInstance.setGroupId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setCompanyId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setUserId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setUserName(RandomTestUtil.randomString());
  newKaleoTaskAssignmentInstance.setCreateDate(RandomTestUtil.nextDate());
  newKaleoTaskAssignmentInstance.setModifiedDate(RandomTestUtil.nextDate());
  newKaleoTaskAssignmentInstance.setKaleoDefinitionId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setKaleoInstanceId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setKaleoInstanceTokenId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setKaleoTaskInstanceTokenId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setKaleoTaskId(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setKaleoTaskName(RandomTestUtil.randomString());
  newKaleoTaskAssignmentInstance.setAssigneeClassName(RandomTestUtil.randomString());
  newKaleoTaskAssignmentInstance.setAssigneeClassPK(RandomTestUtil.nextLong());
  newKaleoTaskAssignmentInstance.setCompleted(RandomTestUtil.randomBoolean());
  newKaleoTaskAssignmentInstance.setCompletionDate(RandomTestUtil.nextDate());
  _kaleoTaskAssignmentInstances.add(_persistence.update(newKaleoTaskAssignmentInstance));
  KaleoTaskAssignmentInstance existingKaleoTaskAssignmentInstance=_persistence.findByPrimaryKey(newKaleoTaskAssignmentInstance.getPrimaryKey());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoTaskAssignmentInstanceId(),newKaleoTaskAssignmentInstance.getKaleoTaskAssignmentInstanceId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getGroupId(),newKaleoTaskAssignmentInstance.getGroupId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getCompanyId(),newKaleoTaskAssignmentInstance.getCompanyId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getUserId(),newKaleoTaskAssignmentInstance.getUserId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getUserName(),newKaleoTaskAssignmentInstance.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoTaskAssignmentInstance.getCreateDate()),Time.getShortTimestamp(newKaleoTaskAssignmentInstance.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoTaskAssignmentInstance.getModifiedDate()),Time.getShortTimestamp(newKaleoTaskAssignmentInstance.getModifiedDate()));
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoDefinitionId(),newKaleoTaskAssignmentInstance.getKaleoDefinitionId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoInstanceId(),newKaleoTaskAssignmentInstance.getKaleoInstanceId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoInstanceTokenId(),newKaleoTaskAssignmentInstance.getKaleoInstanceTokenId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoTaskInstanceTokenId(),newKaleoTaskAssignmentInstance.getKaleoTaskInstanceTokenId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoTaskId(),newKaleoTaskAssignmentInstance.getKaleoTaskId());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getKaleoTaskName(),newKaleoTaskAssignmentInstance.getKaleoTaskName());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getAssigneeClassName(),newKaleoTaskAssignmentInstance.getAssigneeClassName());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getAssigneeClassPK(),newKaleoTaskAssignmentInstance.getAssigneeClassPK());
  Assert.assertEquals(existingKaleoTaskAssignmentInstance.getCompleted(),newKaleoTaskAssignmentInstance.getCompleted());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoTaskAssignmentInstance.getCompletionDate()),Time.getShortTimestamp(newKaleoTaskAssignmentInstance.getCompletionDate()));
}

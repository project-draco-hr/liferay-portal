{
  KaleoTaskAssignmentInstance newKaleoTaskAssignmentInstance=addKaleoTaskAssignmentInstance();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoTaskAssignmentInstance.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoTaskAssignmentInstanceId"));
  Object newKaleoTaskAssignmentInstanceId=newKaleoTaskAssignmentInstance.getKaleoTaskAssignmentInstanceId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoTaskAssignmentInstanceId",new Object[]{newKaleoTaskAssignmentInstanceId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoTaskAssignmentInstanceId=result.get(0);
  Assert.assertEquals(existingKaleoTaskAssignmentInstanceId,newKaleoTaskAssignmentInstanceId);
}

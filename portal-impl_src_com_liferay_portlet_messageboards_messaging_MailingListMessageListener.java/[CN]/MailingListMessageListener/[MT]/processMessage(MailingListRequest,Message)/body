{
  String from=StringPool.BLANK;
  String[] messageIds=message.getHeader("Message-ID");
  if (Validator.isNotNull(messageIds)) {
    for (    String messageId : messageIds) {
      if (messageId.contains(_SUBDOMAIN_PART)) {
        _log.debug("Message received but already posted.");
        return;
      }
    }
  }
  Address[] addresses=message.getFrom();
  if (addresses != null && addresses.length != 0) {
    from=addresses[0].toString();
  }
  StopWatch stopWatch=null;
  if (_log.isDebugEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
    _log.debug("Deliver message from " + from);
  }
  Company company=CompanyLocalServiceUtil.getCompany(request.getCompanyId());
  long categoryId=request.getCategoryId();
  if (_log.isDebugEnabled()) {
    _log.debug("Category id " + categoryId);
  }
  boolean anonymous=false;
  User user=UserLocalServiceUtil.getUserById(company.getCompanyId(),request.getUserId());
  try {
    user=UserLocalServiceUtil.getUserByEmailAddress(company.getCompanyId(),from);
  }
 catch (  NoSuchUserException nsue) {
    anonymous=true;
  }
  long parentMessageId=getParentMessageId(message);
  if (_log.isDebugEnabled()) {
    _log.debug("Parent message id " + parentMessageId);
  }
  MBMessage parentMessage=null;
  try {
    if (parentMessageId > 0) {
      parentMessage=MBMessageLocalServiceUtil.getMessage(parentMessageId);
    }
  }
 catch (  NoSuchMessageException nsme) {
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Parent message " + parentMessage);
  }
  MBMailMessage collector=new MBMailMessage();
  collectPartContent(message,collector);
  PermissionCheckerUtil.setThreadValues(user);
  MBUtil.addEmailReceivedByMailing(collector.getBody());
  if (parentMessage == null) {
    MBMessageServiceUtil.addMessage(categoryId,message.getSubject(),collector.getBody(),collector.getFiles(),anonymous,0.0,null,true,true);
  }
 else {
    MBMessageServiceUtil.addMessage(categoryId,parentMessage.getThreadId(),parentMessage.getMessageId(),message.getSubject(),collector.getBody(),collector.getFiles(),anonymous,0.0,null,true,true);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Delivering message takes " + stopWatch.getTime() + " ms");
  }
}

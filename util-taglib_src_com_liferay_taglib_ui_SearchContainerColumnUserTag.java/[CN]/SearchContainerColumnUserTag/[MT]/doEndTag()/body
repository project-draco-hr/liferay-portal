{
  try {
    SearchContainerRowTag<R> searchContainerRowTag=(SearchContainerRowTag<R>)findAncestorWithClass(this,SearchContainerRowTag.class);
    ResultRow resultRow=searchContainerRowTag.getRow();
    if ((_userId == -1) && (resultRow.getObject() != null)) {
      if (Validator.isNull(_property)) {
        _userId=(Long)BeanPropertiesUtil.getObject(resultRow.getObject(),"userId");
      }
 else {
        _userId=(Integer)BeanPropertiesUtil.getObject(resultRow.getObject(),_property);
      }
    }
    if (index <= -1) {
      List<SearchEntry> searchEntries=resultRow.getEntries();
      index=searchEntries.size();
    }
    if (resultRow.isRestricted()) {
      _href=null;
    }
    UserSearchEntry userSearchEntry=new UserSearchEntry();
    userSearchEntry.setAlign(getAlign());
    userSearchEntry.setColspan(getColspan());
    userSearchEntry.setCssClass(getCssClass());
    userSearchEntry.setDate(_date);
    userSearchEntry.setRequest((HttpServletRequest)pageContext.getRequest());
    userSearchEntry.setResponse((HttpServletResponse)pageContext.getResponse());
    userSearchEntry.setServletContext(pageContext.getServletContext());
    userSearchEntry.setUserId(_userId);
    userSearchEntry.setValign(getValign());
    resultRow.addSearchEntry(index,userSearchEntry);
    return EVAL_PAGE;
  }
  finally {
    index=-1;
    _date=null;
    _userId=-1;
    if (!ServerDetector.isResin()) {
      align=SearchEntry.DEFAULT_ALIGN;
      colspan=SearchEntry.DEFAULT_COLSPAN;
      cssClass=SearchEntry.DEFAULT_CSS_CLASS;
      _href=null;
      name=null;
      _orderable=false;
      _orderableProperty=null;
      _property=null;
      valign=SearchEntry.DEFAULT_VALIGN;
    }
  }
}

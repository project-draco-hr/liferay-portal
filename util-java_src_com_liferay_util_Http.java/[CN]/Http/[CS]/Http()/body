{
  MultiThreadedHttpConnectionManager connectionManager=new MultiThreadedHttpConnectionManager();
  connectionManager.getParams().setParameter("maxConnectionsPerHost",new Integer(MAX_CONNECTIONS_PER_HOST));
  connectionManager.getParams().setParameter("maxTotalConnections",new Integer(MAX_TOTAL_CONNECTIONS));
  connectionManager.getParams().setConnectionTimeout(TIMEOUT);
  connectionManager.getParams().setSoTimeout(TIMEOUT);
  _client=new HttpClient(connectionManager);
  if (Validator.isNotNull(PROXY_HOST) && PROXY_PORT > 0) {
    connectionManager=new MultiThreadedHttpConnectionManager();
    connectionManager.getParams().setParameter("maxConnectionsPerHost",new Integer(MAX_CONNECTIONS_PER_HOST));
    connectionManager.getParams().setParameter("maxTotalConnections",new Integer(MAX_TOTAL_CONNECTIONS));
    connectionManager.getParams().setConnectionTimeout(TIMEOUT);
    connectionManager.getParams().setSoTimeout(TIMEOUT);
    _proxiedClient=new HttpClient(connectionManager);
    if (Validator.isNotNull(PROXY_USERNAME)) {
      Credentials credentials=null;
      if (PROXY_AUTH_TYPE.equals("username-password")) {
        credentials=new UsernamePasswordCredentials(PROXY_USERNAME,PROXY_PASSWORD);
      }
 else       if (PROXY_AUTH_TYPE.equals("ntlm")) {
        credentials=new NTCredentials(PROXY_USERNAME,PROXY_PASSWORD,PROXY_NTLM_HOST,PROXY_NTLM_DOMAIN);
        List authPrefs=new ArrayList();
        authPrefs.add(AuthPolicy.NTLM);
        authPrefs.add(AuthPolicy.BASIC);
        authPrefs.add(AuthPolicy.DIGEST);
        _proxiedClient.getParams().setParameter(AuthPolicy.AUTH_SCHEME_PRIORITY,authPrefs);
      }
      _proxiedClient.getState().setProxyCredentials(new AuthScope(PROXY_HOST,PROXY_PORT,null),credentials);
    }
  }
}

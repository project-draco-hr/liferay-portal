{
  if (Validator.isNull(path) || (path.charAt(0) != CharPool.SLASH)) {
    return mainPath;
  }
  if (!PropsValues.AUTH_FORWARD_BY_LAST_PATH && (request.getRemoteUser() != null)) {
    return mainPath;
  }
  String friendlyURL=null;
  int pos=path.indexOf(CharPool.SLASH,1);
  if (pos != -1) {
    friendlyURL=path.substring(0,pos);
  }
 else   if (path.length() > 1) {
    friendlyURL=path;
  }
  if (Validator.isNull(friendlyURL)) {
    return mainPath;
  }
  long companyId=PortalInstances.getCompanyId(request);
  Group group=GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId,friendlyURL);
  if (group == null) {
    String screenName=friendlyURL.substring(1);
    if (_user || !Validator.isNumber(screenName)) {
      User user=UserLocalServiceUtil.fetchUserByScreenName(companyId,screenName);
      if (user != null) {
        group=user.getGroup();
      }
 else       if (_log.isWarnEnabled()) {
        _log.warn("No user exists with friendly URL " + screenName);
      }
    }
 else {
      long groupId=GetterUtil.getLong(screenName);
      group=GroupLocalServiceUtil.fetchGroup(groupId);
      if (group == null) {
        if (_log.isDebugEnabled()) {
          _log.debug("No group exists with friendly URL " + groupId + ". Try fetching by screen name instead.");
        }
        User user=UserLocalServiceUtil.fetchUserByScreenName(companyId,screenName);
        if (user != null) {
          group=user.getGroup();
        }
 else         if (_log.isWarnEnabled()) {
          _log.warn("No user or group exists with friendly URL " + groupId);
        }
      }
    }
  }
  if (group == null) {
    return mainPath;
  }
  friendlyURL=null;
  if ((pos != -1) && ((pos + 1) != path.length())) {
    friendlyURL=path.substring(pos,path.length());
  }
  Map<String,Object> requestContext=new HashMap<String,Object>();
  requestContext.put("request",request);
  return PortalUtil.getActualURL(group.getGroupId(),_private,mainPath,friendlyURL,params,requestContext);
}

{
  String uri=(String)servletRequest.getAttribute(WebKeys.INVOKER_FILTER_URI);
  HttpServletRequest httpServletRequest=(HttpServletRequest)servletRequest;
  String uuid=httpServletRequest.getHeader("Sync-UUID");
  if (uuid != null) {
    SyncDevice syncDevice=SyncDeviceLocalServiceUtil.fetchSyncDeviceByUuidAndCompanyId(uuid,PortalUtil.getCompanyId(httpServletRequest));
    SyncDeviceThreadLocal.setSyncDevice(syncDevice);
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  if (uri.equals("/api/jsonws/invoke")) {
    String contentType=httpServletRequest.getHeader(HttpHeaders.CONTENT_TYPE);
    if ((contentType == null) || !contentType.startsWith(ContentTypes.MULTIPART_FORM_DATA)) {
      filterChain.doFilter(servletRequest,servletResponse);
      return;
    }
    if (!(httpServletRequest instanceof UploadServletRequest)) {
      servletRequest=PortalUtil.getUploadServletRequest(httpServletRequest);
    }
    if (!isSyncJSONRequest(servletRequest)) {
      filterChain.doFilter(servletRequest,servletResponse);
      return;
    }
  }
 else   if (!uri.startsWith("/api/jsonws/sync-web.")) {
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  if (ParamUtil.get(httpServletRequest,"debug",false)) {
    filterChain.doFilter(servletRequest,servletResponse);
    return;
  }
  Throwable throwable=null;
  if (PrefsPropsUtil.getBoolean(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_SERVICES_ENABLED,PortletPropsValues.SYNC_SERVICES_ENABLED)) {
    int absoluteSyncClientMinBuild=0;
    int syncClientMinBuild=0;
    String syncDevice=httpServletRequest.getHeader("Sync-Device");
    if (syncDevice == null) {
      throwable=new SyncDeviceHeaderException();
    }
 else     if (syncDevice.startsWith("desktop")) {
      absoluteSyncClientMinBuild=_ABSOLUTE_SYNC_CLIENT_MIN_BUILD_DESKTOP;
      syncClientMinBuild=PrefsPropsUtil.getInteger(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_CLIENT_MIN_BUILD_DESKTOP,PortletPropsValues.SYNC_CLIENT_MIN_BUILD_DESKTOP);
    }
 else     if (syncDevice.equals("mobile-android")) {
      absoluteSyncClientMinBuild=_ABSOLUTE_SYNC_CLIENT_MIN_BUILD_ANDROID;
      syncClientMinBuild=PrefsPropsUtil.getInteger(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_CLIENT_MIN_BUILD_ANDROID,PortletPropsValues.SYNC_CLIENT_MIN_BUILD_ANDROID);
    }
 else     if (syncDevice.equals("mobile-ios")) {
      absoluteSyncClientMinBuild=_ABSOLUTE_SYNC_CLIENT_MIN_BUILD_IOS;
      syncClientMinBuild=PrefsPropsUtil.getInteger(PortalUtil.getCompanyId(httpServletRequest),PortletPropsKeys.SYNC_CLIENT_MIN_BUILD_IOS,PortletPropsValues.SYNC_CLIENT_MIN_BUILD_IOS);
    }
 else {
      throwable=new SyncDeviceHeaderException();
    }
    if (throwable == null) {
      if (syncClientMinBuild < absoluteSyncClientMinBuild) {
        syncClientMinBuild=absoluteSyncClientMinBuild;
      }
      int syncBuild=httpServletRequest.getIntHeader("Sync-Build");
      if (syncBuild >= syncClientMinBuild) {
        filterChain.doFilter(servletRequest,servletResponse);
        return;
      }
 else {
        throwable=new SyncClientMinBuildException("Sync client does not meet minimum build " + syncClientMinBuild);
      }
    }
  }
 else {
    throwable=new SyncServicesUnavailableException();
  }
  servletResponse.setCharacterEncoding(StringPool.UTF8);
  servletResponse.setContentType(ContentTypes.APPLICATION_JSON);
  OutputStream outputStream=servletResponse.getOutputStream();
  String json=SyncUtil.buildExceptionMessage(throwable);
  json="{\"exception\": \"" + json + "\"}";
  outputStream.write(json.getBytes(StringPool.UTF8));
  outputStream.close();
}

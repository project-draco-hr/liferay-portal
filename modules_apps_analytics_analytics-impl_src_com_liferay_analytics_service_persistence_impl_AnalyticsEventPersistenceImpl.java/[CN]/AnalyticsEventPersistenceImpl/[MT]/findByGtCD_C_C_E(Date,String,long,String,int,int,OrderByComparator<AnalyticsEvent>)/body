{
  boolean pagination=true;
  FinderPath finderPath=null;
  Object[] finderArgs=null;
  finderPath=FINDER_PATH_WITH_PAGINATION_FIND_BY_GTCD_C_C_E;
  finderArgs=new Object[]{createDate,className,classPK,type,start,end,orderByComparator};
  List<AnalyticsEvent> list=(List<AnalyticsEvent>)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if ((list != null) && !list.isEmpty()) {
    for (    AnalyticsEvent analyticsEvent : list) {
      if ((createDate.getTime() >= analyticsEvent.getCreateDate().getTime()) || !Validator.equals(className,analyticsEvent.getClassName()) || (classPK != analyticsEvent.getClassPK())|| !Validator.equals(type,analyticsEvent.getType())) {
        list=null;
        break;
      }
    }
  }
  if (list == null) {
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(6 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(6);
    }
    query.append(_SQL_SELECT_ANALYTICSEVENT_WHERE);
    boolean bindCreateDate=false;
    if (createDate == null) {
      query.append(_FINDER_COLUMN_GTCD_C_C_E_CREATEDATE_1);
    }
 else {
      bindCreateDate=true;
      query.append(_FINDER_COLUMN_GTCD_C_C_E_CREATEDATE_2);
    }
    boolean bindClassName=false;
    if (className == null) {
      query.append(_FINDER_COLUMN_GTCD_C_C_E_CLASSNAME_1);
    }
 else     if (className.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_GTCD_C_C_E_CLASSNAME_3);
    }
 else {
      bindClassName=true;
      query.append(_FINDER_COLUMN_GTCD_C_C_E_CLASSNAME_2);
    }
    query.append(_FINDER_COLUMN_GTCD_C_C_E_CLASSPK_2);
    boolean bindType=false;
    if (type == null) {
      query.append(_FINDER_COLUMN_GTCD_C_C_E_TYPE_1);
    }
 else     if (type.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_GTCD_C_C_E_TYPE_3);
    }
 else {
      bindType=true;
      query.append(_FINDER_COLUMN_GTCD_C_C_E_TYPE_2);
    }
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else     if (pagination) {
      query.append(AnalyticsEventModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindCreateDate) {
        qPos.add(new Timestamp(createDate.getTime()));
      }
      if (bindClassName) {
        qPos.add(className);
      }
      qPos.add(classPK);
      if (bindType) {
        qPos.add(type);
      }
      if (!pagination) {
        list=(List<AnalyticsEvent>)QueryUtil.list(q,getDialect(),start,end,false);
        Collections.sort(list);
        list=Collections.unmodifiableList(list);
      }
 else {
        list=(List<AnalyticsEvent>)QueryUtil.list(q,getDialect(),start,end);
      }
      cacheResult(list);
      FinderCacheUtil.putResult(finderPath,finderArgs,list);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return list;
}

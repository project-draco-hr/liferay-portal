{
  long[] deleteThreadIds=null;
  long threadId=ParamUtil.getLong(actionRequest,"threadId");
  if (threadId > 0) {
    deleteThreadIds=new long[]{threadId};
  }
 else {
    deleteThreadIds=StringUtil.split(ParamUtil.getString(actionRequest,"threadIds"),0L);
  }
  for (  long deleteThreadId : deleteThreadIds) {
    if (moveToTrash) {
      MBThreadServiceUtil.moveThreadToTrash(deleteThreadId);
    }
 else {
      MBThreadServiceUtil.deleteThread(deleteThreadId);
    }
  }
  if (moveToTrash && (deleteThreadIds.length > 0)) {
    Map<String,String[]> data=new HashMap<String,String[]>();
    data.put("restoreThreadIds",ArrayUtil.toStringArray(deleteThreadIds));
    SessionMessages.add(actionRequest,liferayPortletConfig.getPortletId() + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS_DATA,data);
    SessionMessages.add(actionRequest,liferayPortletConfig.getPortletId() + SessionMessages.KEY_SUFFIX_HIDE_DEFAULT_SUCCESS_MESSAGE);
  }
}

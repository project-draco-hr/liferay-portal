{
  try {
    DLFileEntry fileEntry=null;
    try {
      fileEntry=DLFileEntryLocalServiceUtil.getFileEntry(repositoryId,fileName);
    }
 catch (    NoSuchFileEntryException nsfe) {
      if (_log.isWarnEnabled()) {
        _log.warn("File " + fileName + " in repository "+ repositoryId+ " exists in the JCR but does "+ "not exist in the database");
      }
      return null;
    }
    StringBuilder sb=new StringBuilder();
    sb.append(fileEntry.getTitle());
    sb.append(StringPool.SPACE);
    sb.append(fileEntry.getDescription());
    sb.append(StringPool.SPACE);
    Properties extraSettingsProps=fileEntry.getExtraSettingsProperties();
    Iterator<Map.Entry<Object,Object>> itr=extraSettingsProps.entrySet().iterator();
    while (itr.hasNext()) {
      Map.Entry<Object,Object> entry=itr.next();
      String value=GetterUtil.getString((String)entry.getValue());
      sb.append(value);
    }
    String properties=sb.toString();
    String[] tagsEntries=TagsEntryLocalServiceUtil.getEntryNames(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
    return getFileDocument(companyId,portletId,groupId,repositoryId,fileName,properties,tagsEntries);
  }
 catch (  PortalException pe) {
    throw new SearchException(pe.getMessage());
  }
catch (  SystemException se) {
    throw new SearchException(se.getMessage());
  }
}

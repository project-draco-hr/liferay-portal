{
  List<AssetEntry> results=new ArrayList<>();
  int groupTotal=0;
  if (searchWithIndex && (assetEntryQuery.getLinkedAssetEntryId() == 0) && !portletName.equals(AssetPublisherPortletKeys.HIGHEST_RATED_ASSETS)&& !portletName.equals(AssetPublisherPortletKeys.MOST_VIEWED_ASSETS)) {
    BaseModelSearchResult<AssetEntry> baseModelSearchResult=AssetUtil.searchAssetEntries(request,assetEntryQuery,start,end);
    groupTotal=baseModelSearchResult.getLength();
    results=baseModelSearchResult.getBaseModels();
  }
 else {
    groupTotal=AssetEntryServiceUtil.getEntriesCount(assetEntryQuery);
    assetEntryQuery.setStart(start);
    assetEntryQuery.setEnd(end);
    results=AssetEntryServiceUtil.getEntries(assetEntryQuery);
  }
  return new BaseModelSearchResult<>(results,groupTotal);
}

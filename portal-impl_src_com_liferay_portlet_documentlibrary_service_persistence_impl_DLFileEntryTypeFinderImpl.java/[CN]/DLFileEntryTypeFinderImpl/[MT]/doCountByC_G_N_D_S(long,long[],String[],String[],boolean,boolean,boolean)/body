{
  names=CustomSQLUtil.keywords(names);
  descriptions=CustomSQLUtil.keywords(descriptions,false);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_C_G_N_D_S);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFileEntryType.class.getName(),"DLFileEntryType.fileEntryTypeId",groupIds);
    }
    sql=StringUtil.replace(sql,"[$GROUP_ID$]",getGroupIds(groupIds));
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(name)",StringPool.LIKE,false,names);
    sql=CustomSQLUtil.replaceKeywords(sql,"description",StringPool.LIKE,true,descriptions);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    qPos.add(groupIds);
    qPos.add(names,2);
    qPos.add(descriptions,2);
    int countValue=0;
    if (includeBasicFileEntryType) {
      countValue=1;
    }
    Iterator<Long> itr=q.iterate();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return countValue + count.intValue();
      }
    }
    return countValue;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

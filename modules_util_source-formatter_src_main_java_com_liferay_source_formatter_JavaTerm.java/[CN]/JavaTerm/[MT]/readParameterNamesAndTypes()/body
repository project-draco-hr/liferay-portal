{
  _parameterNames=new ArrayList<>();
  _parameterTypes=new ArrayList<>();
  _returnType=StringPool.BLANK;
  if (!isConstructor() && !isMethod()) {
    return;
  }
  int x=-1;
  if (isPrivate()) {
    x=_content.indexOf("\tprivate ");
  }
 else   if (isProtected()) {
    x=_content.indexOf("\tprotected ");
  }
 else   if (isPublic()) {
    x=_content.indexOf("\tpublic ");
  }
  if (x == -1) {
    return;
  }
  int y=_content.indexOf(CharPool.OPEN_PARENTHESIS,x);
  if (isMethod()) {
    String linePart=_content.substring(x,y);
    linePart=StringUtil.removeChar(linePart,CharPool.TAB);
    linePart=StringUtil.replace(linePart,CharPool.NEW_LINE,StringPool.SPACE);
    int z=linePart.lastIndexOf(CharPool.SPACE);
    linePart=linePart.substring(0,z);
    while (true) {
      z=linePart.lastIndexOf(CharPool.SPACE,z - 1);
      _returnType=linePart.substring(z + 1);
      if (_javaSourceProcessor.getLevel(_returnType,"<",">") == 0) {
        break;
      }
    }
    if (_returnType.equals("void")) {
      _returnType=StringPool.BLANK;
    }
  }
  x=y;
  String parameters=StringPool.BLANK;
  while (true) {
    y=_content.indexOf(CharPool.CLOSE_PARENTHESIS,y + 1);
    if (y == -1) {
      return;
    }
    parameters=_content.substring(x + 1,y);
    if (_javaSourceProcessor.getLevel(parameters) == 0) {
      break;
    }
  }
  parameters=StringUtil.removeChar(parameters,CharPool.TAB);
  parameters=StringUtil.replace(parameters,CharPool.NEW_LINE,StringPool.SPACE);
  for (x=0; ; ) {
    parameters=StringUtil.trim(parameters);
    if (parameters.startsWith(StringPool.AT)) {
      parameters=stripAnnotation(parameters);
    }
    if (parameters.startsWith("final ")) {
      parameters=parameters.substring(6);
    }
    x=parameters.indexOf(CharPool.SPACE,x + 1);
    if (x == -1) {
      return;
    }
    String parameterType=parameters.substring(0,x);
    if (_javaSourceProcessor.getLevel(parameterType,"<",">") != 0) {
      continue;
    }
    _parameterTypes.add(parameterType);
    y=parameters.indexOf(CharPool.COMMA,x);
    if (y == -1) {
      _parameterNames.add(parameters.substring(x + 1));
      return;
    }
    _parameterNames.add(parameters.substring(x + 1,y));
    parameters=parameters.substring(y + 1);
    x=0;
  }
}

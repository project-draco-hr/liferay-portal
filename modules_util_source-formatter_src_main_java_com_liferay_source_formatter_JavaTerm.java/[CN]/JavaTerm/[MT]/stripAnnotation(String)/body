{
  int pos=-1;
  while (true) {
    pos=parameters.indexOf(CharPool.SPACE,pos + 1);
    if (pos == -1) {
      return parameters;
    }
    String annotation=parameters.substring(0,pos);
    int closeParenthesesCount=StringUtil.count(annotation,StringPool.CLOSE_PARENTHESIS);
    int greaterThanCount=StringUtil.count(annotation,StringPool.GREATER_THAN);
    int lessThanCount=StringUtil.count(annotation,StringPool.LESS_THAN);
    int openParenthesesCount=StringUtil.count(annotation,StringPool.OPEN_PARENTHESIS);
    if ((closeParenthesesCount == openParenthesesCount) && (greaterThanCount == lessThanCount)) {
      return parameters.substring(pos + 1);
    }
  }
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=PortalUtil.getClassNameId(className);
  if (entryNames == null) {
    entryNames=new String[0];
  }
  title=StringUtil.shorten(title,300,StringPool.BLANK);
  Date now=new Date();
  validate(className,entryNames);
  TagsAsset asset=tagsAssetPersistence.fetchByC_C(classNameId,classPK);
  if (asset == null) {
    long assetId=counterLocalService.increment();
    asset=tagsAssetPersistence.create(assetId);
    asset.setCompanyId(user.getCompanyId());
    asset.setUserId(user.getUserId());
    asset.setUserName(user.getFullName());
    asset.setCreateDate(now);
    asset.setClassNameId(classNameId);
    asset.setClassPK(classPK);
    asset.setPublishDate(publishDate);
    asset.setExpirationDate(expirationDate);
    asset.setPriority(0);
    asset.setViewCount(0);
  }
  asset.setGroupId(groupId);
  asset.setModifiedDate(now);
  asset.setStartDate(startDate);
  asset.setEndDate(endDate);
  asset.setPublishDate(publishDate);
  asset.setExpirationDate(expirationDate);
  asset.setMimeType(mimeType);
  asset.setTitle(title);
  asset.setDescription(description);
  asset.setSummary(summary);
  asset.setUrl(url);
  asset.setHeight(height);
  asset.setWidth(width);
  tagsAssetPersistence.update(asset);
  List entries=new ArrayList(entryNames.length);
  for (int i=0; i < entryNames.length; i++) {
    String name=entryNames[i].trim().toLowerCase();
    TagsEntry entry=tagsEntryPersistence.fetchByC_N(user.getCompanyId(),name);
    if (entry == null) {
      String defaultProperties="0:category:no category";
      TagsEntry newTagsEntry=tagsEntryLocalService.addEntry(user.getUserId(),entryNames[i],new String[]{defaultProperties});
      entries.add(newTagsEntry);
    }
 else {
      entries.add(entry);
    }
  }
  tagsAssetPersistence.setTagsEntries(asset.getAssetId(),entries);
  return asset;
}

{
  if (!PortalInstances.matches()) {
    return;
  }
  String path=GetterUtil.getString(req.getPathInfo());
  if (path.endsWith(StringPool.SLASH)) {
    path=path.substring(0,path.length() - 1);
  }
  if (path.startsWith(StringPool.SLASH)) {
    path=path.substring(1,path.length());
  }
  if ((_redirectProperties != null) && _redirectsEnabled) {
    String redirect=_redirectProperties.getProperty(path);
    if (Validator.isNotNull(redirect)) {
      res.sendRedirect(redirect);
      return;
    }
  }
  String languageId=LanguageUtil.getLanguageId(req);
  String rootPath=StringPool.BLANK;
  String content=getContent(path,languageId,rootPath);
  if (Validator.isNotNull(content)) {
    _log.debug("Content found for " + path);
    String mimeType=ParamUtil.getString(req,"mimeType",Constants.TEXT_HTML);
    res.setContentType(mimeType);
    ServletOutputStream out=res.getOutputStream();
    try {
      if (!res.isCommitted()) {
        out.print(content);
      }
    }
 catch (    Exception e) {
      _log.warn(StackTraceUtil.getStackTrace(e));
    }
 finally {
      out.flush();
      out.close();
    }
  }
 else {
    _log.debug("Content NOT found for " + path);
  }
}

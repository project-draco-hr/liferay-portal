{
  List<ShardRecoveryResponse> shardRecoveryResponses=IdempotentRetryAssert.retryAssert(3,TimeUnit.SECONDS,new Callable<List<ShardRecoveryResponse>>(){
    @Override public List<ShardRecoveryResponse> call() throws Exception {
      List<ShardRecoveryResponse> shardRecoveryResponses=getShardRecoveryResponses();
      Assert.assertEquals(expectedShards,shardRecoveryResponses.size());
      return shardRecoveryResponses;
    }
  }
);
  RecoveryState[] recoveryStates=new RecoveryState[expectedShards];
  for (int i=0; i < expectedShards; i++) {
    ShardRecoveryResponse shardRecoveryResponse=shardRecoveryResponses.get(i);
    recoveryStates[i]=shardRecoveryResponse.recoveryState();
  }
  return recoveryStates;
}

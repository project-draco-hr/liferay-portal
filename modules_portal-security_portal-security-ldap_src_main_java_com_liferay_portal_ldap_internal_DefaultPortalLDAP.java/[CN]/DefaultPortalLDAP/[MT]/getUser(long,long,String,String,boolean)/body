{
  LdapContext ldapContext=getContext(ldapServerId,companyId);
  NamingEnumeration<SearchResult> enu=null;
  try {
    if (ldapContext == null) {
      if (_log.isDebugEnabled()) {
        _log.debug("No LDAP server configuration available for " + "LDAP server " + ldapServerId + " and company "+ companyId);
      }
      return null;
    }
    LDAPServerConfiguration ldapServerConfiguration=_ldapServerConfigurationProvider.getConfiguration(companyId,ldapServerId);
    String baseDN=ldapServerConfiguration.baseDN();
    String userSearchFilter=ldapServerConfiguration.userSearchFilter();
    _ldapFilterValidator.validate(userSearchFilter,"LDAPServerConfiguration.userSearchFilter");
    StringBundler sb=new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5);
    if (Validator.isNotNull(userSearchFilter)) {
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(StringPool.AMPERSAND);
    }
    sb.append(StringPool.OPEN_PARENTHESIS);
    String loginMapping=null;
    String login=null;
    Properties userMappings=_ldapSettings.getUserMappings(ldapServerId,companyId);
    String authType=PrefsPropsUtil.getString(companyId,PropsKeys.COMPANY_SECURITY_AUTH_TYPE,_companySecurityAuthType);
    if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId,PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) {
      loginMapping=userMappings.getProperty("screenName");
      login=screenName;
    }
 else {
      loginMapping=userMappings.getProperty("emailAddress");
      login=emailAddress;
    }
    sb.append(loginMapping);
    sb.append(StringPool.EQUAL);
    sb.append(login);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    if (Validator.isNotNull(userSearchFilter)) {
      sb.append(userSearchFilter);
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    SearchControls searchControls=new SearchControls(SearchControls.SUBTREE_SCOPE,1,0,null,false,false);
    enu=ldapContext.search(baseDN,sb.toString(),searchControls);
    if (enu.hasMoreElements()) {
      return enu.nextElement();
    }
    if (checkOriginalEmail) {
      String originalEmailAddress=UserImportTransactionThreadLocal.getOriginalEmailAddress();
      if (Validator.isNotNull(originalEmailAddress) && !emailAddress.equals(originalEmailAddress)) {
        return getUser(ldapServerId,companyId,screenName,originalEmailAddress,false);
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to retrieve user with LDAP server " + ldapServerId + ", company "+ companyId+ ", loginMapping "+ loginMapping+ ", and login "+ login);
    }
    return null;
  }
  finally {
    if (enu != null) {
      enu.close();
    }
    if (ldapContext != null) {
      ldapContext.close();
    }
  }
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  DDLRecord record=ddlRecordPersistence.findByPrimaryKey(recordId);
  record.setModifiedDate(serviceContext.getModifiedDate(null));
  ddlRecordPersistence.update(record,false);
  DDLRecordVersion recordVersion=record.getLatestRecordVersion();
  if (recordVersion.isApproved()) {
    DDLRecordSet recordSet=record.getRecordSet();
    long classPK=StorageEngineUtil.create(recordSet.getCompanyId(),recordSet.getDDMStructureId(),fields,serviceContext);
    String version=getNextVersion(record,majorVersion,serviceContext.getWorkflowAction());
    addRecordVersion(user,record,classPK,version,displayIndex,WorkflowConstants.STATUS_DRAFT);
  }
 else {
    StorageEngineUtil.update(recordVersion.getClassPK(),fields,mergeFields,serviceContext);
    String version=recordVersion.getVersion();
    updateRecordVersion(user,recordVersion,version,displayIndex,recordVersion.getStatus(),serviceContext);
  }
  WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),record.getGroupId(),userId,DDLRecord.class.getName(),record.getRecordId(),record,serviceContext);
  return record;
}

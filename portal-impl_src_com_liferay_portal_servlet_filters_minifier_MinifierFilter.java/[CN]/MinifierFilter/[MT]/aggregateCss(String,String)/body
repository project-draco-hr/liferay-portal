{
  StringBuilder sb=new StringBuilder(content.length());
  int pos=0;
  while (true) {
    int x=content.indexOf(_CSS_IMPORT_BEGIN,pos);
    int y=content.indexOf(_CSS_IMPORT_END,x + _CSS_IMPORT_BEGIN.length());
    if ((x == -1) || (y == -1)) {
      sb.append(content.substring(pos,content.length()));
      break;
    }
 else {
      sb.append(content.substring(pos,x));
      String importFile=content.substring(x + _CSS_IMPORT_BEGIN.length(),y);
      String importContent=FileUtil.read(dir + StringPool.SLASH + importFile);
      String importFilePath=StringPool.BLANK;
      if (importFile.lastIndexOf(StringPool.SLASH) != -1) {
        importFilePath=StringPool.SLASH + importFile.substring(0,importFile.lastIndexOf(StringPool.SLASH) + 1);
      }
      importContent=aggregateCss(dir + importFilePath,importContent);
      int importDepth=StringUtil.count(importFile,StringPool.SLASH);
      String relativePath=StringPool.BLANK;
      for (int i=0; i < importDepth; i++) {
        relativePath+="../";
      }
      importContent=StringUtil.replace(importContent,new String[]{"url('" + relativePath,"url(\"" + relativePath,"url(" + relativePath},new String[]{"url('[$TEMP_RELATIVE_PATH$]","url(\"[$TEMP_RELATIVE_PATH$]","url([$TEMP_RELATIVE_PATH$]"});
      importContent=StringUtil.replace(importContent,"[$TEMP_RELATIVE_PATH$]",StringPool.BLANK);
      sb.append(importContent);
      pos=y + _CSS_IMPORT_END.length();
    }
  }
  return sb.toString();
}

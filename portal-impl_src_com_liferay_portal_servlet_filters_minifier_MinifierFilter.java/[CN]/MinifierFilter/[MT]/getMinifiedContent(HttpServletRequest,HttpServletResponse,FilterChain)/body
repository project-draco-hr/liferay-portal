{
  String minifierType=ParamUtil.getString(request,"minifierType");
  String minifierBundleId=ParamUtil.getString(request,"minifierBundleId");
  String minifierBundleDir=ParamUtil.getString(request,"minifierBundleDir");
  if (Validator.isNull(minifierType) || Validator.isNotNull(minifierBundleId) || Validator.isNotNull(minifierBundleDir)) {
    return null;
  }
  String requestURI=request.getRequestURI();
  String requestPath=requestURI;
  String contextPath=request.getContextPath();
  if (!contextPath.equals(StringPool.SLASH)) {
    requestPath=requestPath.substring(contextPath.length());
  }
  String realPath=ServletContextUtil.getRealPath(_servletContext,requestPath);
  if (realPath == null) {
    return null;
  }
  realPath=StringUtil.replace(realPath,StringPool.BACK_SLASH,StringPool.SLASH);
  File file=new File(realPath);
  if (!file.exists()) {
    return null;
  }
  String minifiedContent=null;
  String cacheCommonFileName=_tempDir + requestURI;
  String queryString=request.getQueryString();
  if (queryString != null) {
    cacheCommonFileName+=_QUESTION_SEPARATOR + queryString;
  }
  File cacheContentTypeFile=new File(cacheCommonFileName + "_E_CONTENT_TYPE");
  File cacheDataFile=new File(cacheCommonFileName + "_E_DATA");
  if ((cacheDataFile.exists()) && (cacheDataFile.lastModified() >= file.lastModified())) {
    minifiedContent=FileUtil.read(cacheDataFile);
    if (cacheContentTypeFile.exists()) {
      String contentType=FileUtil.read(cacheContentTypeFile);
      response.setContentType(contentType);
    }
  }
 else {
    if (realPath.endsWith(_CSS_EXTENSION)) {
      if (_log.isInfoEnabled()) {
        _log.info("Minifying CSS " + file);
      }
      minifiedContent=minifyCss(request,file);
      response.setContentType(ContentTypes.TEXT_CSS);
      FileUtil.write(cacheContentTypeFile,ContentTypes.TEXT_CSS);
    }
 else     if (realPath.endsWith(_JAVASCRIPT_EXTENSION)) {
      if (_log.isInfoEnabled()) {
        _log.info("Minifying JavaScript " + file);
      }
      minifiedContent=minifyJavaScript(file);
      response.setContentType(ContentTypes.TEXT_JAVASCRIPT);
      FileUtil.write(cacheContentTypeFile,ContentTypes.TEXT_JAVASCRIPT);
    }
 else     if (realPath.endsWith(_JSP_EXTENSION)) {
      if (_log.isInfoEnabled()) {
        _log.info("Minifying JSP " + file);
      }
      CacheResponse cacheResponse=new CacheResponse(response,StringPool.UTF8);
      processFilter(MinifierFilter.class,request,cacheResponse,filterChain);
      CacheResponseUtil.addHeaders(response,cacheResponse.getHeaders());
      response.setContentType(cacheResponse.getContentType());
      minifiedContent=new String(cacheResponse.unsafeGetData(),0,cacheResponse.getContentLength(),StringPool.UTF8);
      if (minifierType.equals("css")) {
        minifiedContent=minifyCss(request,minifiedContent);
      }
 else       if (minifierType.equals("js")) {
        minifiedContent=minifyJavaScript(minifiedContent);
      }
      FileUtil.write(cacheContentTypeFile,cacheResponse.getContentType());
    }
 else {
      return null;
    }
    FileUtil.write(cacheDataFile,minifiedContent);
  }
  return minifiedContent;
}

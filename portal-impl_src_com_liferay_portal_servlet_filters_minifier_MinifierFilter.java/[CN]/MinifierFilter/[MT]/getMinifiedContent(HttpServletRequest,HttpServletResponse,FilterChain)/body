{
  String minifierType=ParamUtil.getString(request,"minifierType");
  String minifierBundleId=ParamUtil.getString(request,"minifierBundleId");
  String minifierBundleDir=ParamUtil.getString(request,"minifierBundleDir");
  if (Validator.isNull(minifierType) || Validator.isNotNull(minifierBundleId) || Validator.isNotNull(minifierBundleDir)) {
    return null;
  }
  String requestURI=request.getRequestURI();
  String requestPath=requestURI;
  String contextPath=request.getContextPath();
  if (!contextPath.equals(StringPool.SLASH)) {
    requestPath=requestPath.substring(contextPath.length());
  }
  String realPath=ServletContextUtil.getRealPath(_servletContext,requestPath);
  if (realPath == null) {
    return null;
  }
  realPath=StringUtil.replace(realPath,CharPool.BACK_SLASH,CharPool.SLASH);
  File file=new File(realPath);
  if (!file.exists()) {
    return null;
  }
  StringBundler sb=new StringBundler(4);
  sb.append(_tempDir);
  sb.append(requestURI);
  String queryString=request.getQueryString();
  if (queryString != null) {
    sb.append(_QUESTION_SEPARATOR);
    sb.append(sterilizeQueryString(queryString));
  }
  String fileNameHashCode=_cacheKeyGenerator.getCacheKey(sb.toString()).toString();
  String cacheCommonFileName=_tempDir.concat(StringPool.SLASH).concat(fileNameHashCode);
  File cacheContentTypeFile=new File(cacheCommonFileName + "_E_CONTENT_TYPE");
  File cacheDataFile=new File(cacheCommonFileName + "_E_DATA");
  if ((cacheDataFile.exists()) && (cacheDataFile.lastModified() >= file.lastModified())) {
    if (cacheContentTypeFile.exists()) {
      String contentType=FileUtil.read(cacheContentTypeFile);
      response.setContentType(contentType);
    }
    return cacheDataFile;
  }
  String minifiedContent=null;
  if (realPath.endsWith(_CSS_EXTENSION)) {
    if (_log.isInfoEnabled()) {
      _log.info("Minifying CSS " + file);
    }
    minifiedContent=minifyCss(request,response,file);
    response.setContentType(ContentTypes.TEXT_CSS);
    FileUtil.write(cacheContentTypeFile,ContentTypes.TEXT_CSS);
  }
 else   if (realPath.endsWith(_JAVASCRIPT_EXTENSION)) {
    if (_log.isInfoEnabled()) {
      _log.info("Minifying JavaScript " + file);
    }
    minifiedContent=minifyJavaScript(file);
    response.setContentType(ContentTypes.TEXT_JAVASCRIPT);
    FileUtil.write(cacheContentTypeFile,ContentTypes.TEXT_JAVASCRIPT);
  }
 else   if (realPath.endsWith(_JSP_EXTENSION)) {
    if (_log.isInfoEnabled()) {
      _log.info("Minifying JSP " + file);
    }
    StringServletResponse stringResponse=new StringServletResponse(response);
    processFilter(MinifierFilter.class,request,stringResponse,filterChain);
    CacheResponseUtil.setHeaders(response,stringResponse.getHeaders());
    response.setContentType(stringResponse.getContentType());
    minifiedContent=stringResponse.getString();
    if (minifierType.equals("css")) {
      minifiedContent=minifyCss(request,response,realPath,minifiedContent);
    }
 else     if (minifierType.equals("js")) {
      minifiedContent=minifyJavaScript(minifiedContent);
    }
    FileUtil.write(cacheContentTypeFile,stringResponse.getContentType());
  }
 else {
    return null;
  }
  FileUtil.write(cacheDataFile,minifiedContent);
  return minifiedContent;
}

{
  portletDataContext.addPermissions("com.liferay.portlet.dynamicdatamapping",portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery structureActionableDynamicQuery=new DDMStructureActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      DDMStructure structure=(DDMStructure)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,structure);
    }
  }
;
  structureActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  structureActionableDynamicQuery.performActions();
  ActionableDynamicQuery templateActionableDynamicQuery=new DDMTemplateActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      DDMTemplate template=(DDMTemplate)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,template);
    }
  }
;
  templateActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  templateActionableDynamicQuery.performActions();
  return getExportDataRootElementString(rootElement);
}

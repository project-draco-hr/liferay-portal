{
  String html=HtmlUtil.escape(bbcode);
  html=StringUtil.replace(html,_BBCODE_TAGS,_HTML_TAGS);
  for (int i=0; i < emoticons.length; i++) {
    String[] emoticon=emoticons[i];
    html=StringUtil.replace(html,emoticon[1],emoticon[0]);
  }
  BBCodeTag tag=null;
  StringBundler sb=null;
  while ((tag=getFirstTag(html,"code")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    String code=tag.getElement().replaceAll("\t",StringPool.FOUR_SPACES);
    String[] lines=code.split("\\n");
    int digits=String.valueOf(lines.length + 1).length();
    sb=new StringBundler(preTag);
    sb.append("<div class='code'>");
    for (int i=0; i < lines.length; i++) {
      String index=String.valueOf(i + 1);
      int ld=index.length();
      sb.append("<span class='code-lines'>");
      for (int j=0; j < digits - ld; j++) {
        sb.append("&nbsp;");
      }
      lines[i]=StringUtil.replace(lines[i],"   ",StringPool.NBSP + StringPool.SPACE + StringPool.NBSP);
      lines[i]=StringUtil.replace(lines[i],"  ",StringPool.NBSP + StringPool.SPACE);
      sb.append(index + "</span>");
      sb.append(lines[i]);
      if (index.length() < lines.length) {
        sb.append("<br />");
      }
    }
    sb.append("</div>");
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"color")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    if (tag.hasParameter()) {
      sb.append("<span style='color: ");
      sb.append(tag.getParameter() + ";'>");
      sb.append(tag.getElement() + "</span>");
    }
 else {
      sb.append(tag.getElement());
    }
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"email")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    String mailto=GetterUtil.getString(tag.getParameter(),tag.getElement().trim());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    sb.append("<a href='mailto: ");
    sb.append(mailto);
    sb.append("'>");
    sb.append(tag.getElement() + "</a>");
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"font")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    if (tag.hasParameter()) {
      sb.append("<span style='font-family: ");
      sb.append(tag.getParameter() + ";'>");
      sb.append(tag.getElement() + "</span>");
    }
 else {
      sb.append(tag.getElement());
    }
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"img")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    sb.append("<img alt='' src='");
    sb.append(tag.getElement().trim());
    sb.append("' />");
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"list")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    String[] items=_getListItems(tag.getElement());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    String tagParameterValue=null;
    if (tag.hasParameter() && (tagParameterValue=listStyles.get(tag.getParameter())) != null) {
      sb.append(tagParameterValue);
      for (int i=0; i < items.length; i++) {
        if (items[i].trim().length() > 0) {
          sb.append("<li>" + items[i].trim() + "</li>");
        }
      }
      sb.append("</ol>");
    }
 else {
      sb.append("<ul style='list-style: disc inside;'>");
      for (int i=0; i < items.length; i++) {
        if (items[i].trim().length() > 0) {
          sb.append("<li>" + items[i].trim() + "</li>");
        }
      }
      sb.append("</ul>");
    }
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"quote")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    if (tag.hasParameter()) {
      sb.append("<div class='quote-title'>");
      sb.append(tag.getParameter() + ":</div>");
    }
    sb.append("<div class='quote'>");
    sb.append("<div class='quote-content'>");
    sb.append(tag.getElement());
    sb.append("</div></div>");
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"size")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    if (tag.hasParameter()) {
      Integer size=new Integer(GetterUtil.getInteger(tag.getParameter()));
      if (size.intValue() > 7) {
        size=new Integer(7);
      }
      String fontSize=fontSizes.get(size);
      if (fontSize != null) {
        sb.append(fontSize);
        sb.append(tag.getElement() + "</span>");
      }
 else {
        sb.append(tag.getElement());
      }
    }
 else {
      sb.append(tag.getElement());
    }
    sb.append(postTag);
    html=sb.toString();
  }
  while ((tag=getFirstTag(html,"url")) != null) {
    String preTag=html.substring(0,tag.getStartPos());
    String postTag=html.substring(tag.getEndPos());
    String url=GetterUtil.getString(tag.getParameter(),tag.getElement().trim());
    if (sb == null) {
      sb=new StringBundler(preTag);
    }
 else {
      sb.setIndex(0);
      sb.append(preTag);
    }
    sb.append("<a href='");
    sb.append(HtmlUtil.escapeHREF(url));
    sb.append("'>");
    sb.append(tag.getElement());
    sb.append("</a>");
    sb.append(postTag);
    html=sb.toString();
  }
  html=StringUtil.replace(html,"\n","<br />");
  return html;
}

{
  if (PropsValues.SESSION_DISABLED) {
    return;
  }
  HttpSession ses=event.getSession();
  PortalSessionContext.remove(ses.getId());
  try {
    Long userIdObj=(Long)ses.getAttribute(WebKeys.USER_ID);
    if (userIdObj == null) {
      _log.warn("User id is not in the session");
    }
    if (userIdObj == null) {
      return;
    }
    long userId=userIdObj.longValue();
    if (CompanyThreadLocal.getCompanyId() == 0) {
      setCompanyId(userId);
    }
    LiveUsers.signOut(ses.getId(),userId);
  }
 catch (  IllegalStateException ise) {
    _log.warn("Please upgrade to a servlet 2.4 compliant container");
  }
catch (  Exception e) {
    _log.error(e,e);
  }
  ses.removeAttribute(WebKeys.PORTLET_SESSION_TRACKER);
  try {
    EventsProcessor.process(PropsKeys.SERVLET_SESSION_DESTROY_EVENTS,PropsValues.SERVLET_SESSION_DESTROY_EVENTS,ses);
  }
 catch (  ActionException ae) {
    _log.error(ae,ae);
  }
}

{
  if (!containsTableMapping(companyId,leftPrimaryKey,rightPrimaryKey,false)) {
    return false;
  }
  PortalCache<Long,long[]> leftToRightPortalCache=getLeftToRightPortalCache(companyId);
  leftToRightPortalCache.remove(leftPrimaryKey);
  PortalCache<Long,long[]> rightToLeftPortalCache=getRightToLeftPortalCache(companyId);
  rightToLeftPortalCache.remove(rightPrimaryKey);
  Class<R> rightModelClass=rightBasePersistence.getModelClass();
  ModelListener<L>[] leftModelListeners=leftBasePersistence.getListeners();
  for (  ModelListener<L> leftModelListener : leftModelListeners) {
    leftModelListener.onBeforeRemoveAssociation(leftPrimaryKey,rightModelClass.getName(),rightPrimaryKey);
  }
  Class<L> leftModelClass=leftBasePersistence.getModelClass();
  ModelListener<R>[] rightModelListeners=rightBasePersistence.getListeners();
  for (  ModelListener<R> rightModelListener : rightModelListeners) {
    rightModelListener.onBeforeRemoveAssociation(rightPrimaryKey,leftModelClass.getName(),leftPrimaryKey);
  }
  int rowCount=0;
  try {
    rowCount=deleteTableMappingSqlUpdate.update(companyId,leftPrimaryKey,rightPrimaryKey);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
  if (rowCount > 0) {
    for (    ModelListener<L> leftModelListener : leftModelListeners) {
      leftModelListener.onAfterRemoveAssociation(leftPrimaryKey,rightModelClass.getName(),rightPrimaryKey);
    }
    for (    ModelListener<R> rightModelListener : rightModelListeners) {
      rightModelListener.onAfterRemoveAssociation(rightPrimaryKey,leftModelClass.getName(),leftPrimaryKey);
    }
    return true;
  }
  return false;
}

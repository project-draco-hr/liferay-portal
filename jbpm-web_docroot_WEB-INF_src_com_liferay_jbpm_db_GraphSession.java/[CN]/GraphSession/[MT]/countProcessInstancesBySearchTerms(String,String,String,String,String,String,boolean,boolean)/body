{
  try {
    int workflowVersionInt=0;
    if (!Validator.isNumber(workflowVersion)) {
      workflowVersion=null;
    }
 else {
      workflowVersionInt=GetterUtil.getInteger(workflowVersion);
    }
    String endDateCheck="(pi.end IS NULL) ";
    if (hideEndedTasks) {
      endDateCheck="((pi.end >= ? [$AND_OR_NULL_CHECK$]) AND " + "(pi.end <= ? [$AND_OR_NULL_CHECK$])) ";
    }
    String sql=COUNT_PROCESS_INSTANCES_BY_SEARCH_TERMS;
    sql=StringUtil.replace(sql,"[$END_DATE_CHECK$]",endDateCheck);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    Query q=_session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(workflowName);
    qPos.add(workflowName);
    qPos.add(workflowVersionInt);
    qPos.add(workflowVersion);
    qPos.add(_getDate(gtStartDate,true));
    qPos.add(_getDate(gtStartDate,true));
    qPos.add(_getDate(ltStartDate,false));
    qPos.add(_getDate(ltStartDate,false));
    if (hideEndedTasks) {
      qPos.add(_getDate(gtEndDate,true));
      qPos.add(_getDate(gtEndDate,true));
      qPos.add(_getDate(ltEndDate,false));
      qPos.add(_getDate(ltEndDate,false));
    }
    Iterator itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=(Long)itr.next();
      if (count != null) {
        return count.longValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    _log.error(StackTraceUtil.getStackTrace(e));
    throw new RuntimeException(e.getMessage());
  }
}

{
  List list=new ArrayList();
  try {
    int definitionVersionInt=0;
    if (!Validator.isNumber(definitionVersion)) {
      definitionVersion=null;
    }
 else {
      definitionVersionInt=GetterUtil.getInteger(definitionVersion);
    }
    String endDateCheck="(pi.end IS NULL) ";
    if (hideEndedTasks) {
      endDateCheck="((pi.end >= ? [$AND_OR_NULL_CHECK$]) AND " + "(pi.end <= ? [$AND_OR_NULL_CHECK$])) ";
    }
    String sql=CustomSQLUtil.get(FIND_PROCESS_INSTANCES_BY_SEARCH_TERMS);
    sql=StringUtil.replace(sql,"[$END_DATE_CHECK$]",endDateCheck);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    Query q=_session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(definitionName);
    qPos.add(definitionName);
    qPos.add(definitionVersionInt);
    qPos.add(definitionVersion);
    qPos.add(_getDate(startDateGT,true));
    qPos.add(_getDate(startDateGT,true));
    qPos.add(_getDate(startDateLT,false));
    qPos.add(_getDate(startDateLT,false));
    if (hideEndedTasks) {
      qPos.add(_getDate(endDateGT,true));
      qPos.add(_getDate(endDateGT,true));
      qPos.add(_getDate(endDateLT,false));
      qPos.add(_getDate(endDateLT,false));
    }
    list=QueryUtil.list(q,_dialect,begin,end);
    for (int i=0; i < list.size(); i++) {
      ProcessInstance processInstance=(ProcessInstance)list.get(i);
      WorkflowUtil.initInstance(processInstance);
    }
  }
 catch (  Exception e) {
    _log.error(StackTraceUtil.getStackTrace(e));
    throw new RuntimeException(e.getMessage());
  }
  return list;
}

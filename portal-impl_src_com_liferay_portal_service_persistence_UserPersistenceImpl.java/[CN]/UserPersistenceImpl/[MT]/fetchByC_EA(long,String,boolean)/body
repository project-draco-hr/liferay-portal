{
  Object[] finderArgs=new Object[]{companyId,emailAddress};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_EA,finderArgs,this);
  }
  if (result instanceof User) {
    User user=(User)result;
    if ((companyId != user.getCompanyId()) || !Validator.equals(emailAddress,user.getEmailAddress())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_USER_WHERE);
    query.append(_FINDER_COLUMN_C_EA_COMPANYID_2);
    if (emailAddress == null) {
      query.append(_FINDER_COLUMN_C_EA_EMAILADDRESS_1);
    }
 else {
      if (emailAddress.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_C_EA_EMAILADDRESS_3);
      }
 else {
        query.append(_FINDER_COLUMN_C_EA_EMAILADDRESS_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      if (emailAddress != null) {
        qPos.add(emailAddress);
      }
      List<User> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_EA,finderArgs,list);
      }
 else {
        User user=list.get(0);
        result=user;
        cacheResult(user);
        if ((user.getCompanyId() != companyId) || (user.getEmailAddress() == null) || !user.getEmailAddress().equals(emailAddress)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_EA,finderArgs,user);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_C_EA,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (User)result;
  }
}

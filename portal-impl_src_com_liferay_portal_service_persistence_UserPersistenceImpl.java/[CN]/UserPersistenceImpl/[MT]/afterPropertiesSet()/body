{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portal.model.User")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<User>> listenersList=new ArrayList<ModelListener<User>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<User>)InstanceFactory.newInstance(getClassLoader(),listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsGroup=new ContainsGroup();
  addGroup=new AddGroup();
  clearGroups=new ClearGroups();
  removeGroup=new RemoveGroup();
  containsOrganization=new ContainsOrganization();
  addOrganization=new AddOrganization();
  clearOrganizations=new ClearOrganizations();
  removeOrganization=new RemoveOrganization();
  containsRole=new ContainsRole();
  addRole=new AddRole();
  clearRoles=new ClearRoles();
  removeRole=new RemoveRole();
  containsTeam=new ContainsTeam();
  addTeam=new AddTeam();
  clearTeams=new ClearTeams();
  removeTeam=new RemoveTeam();
  containsUserGroup=new ContainsUserGroup();
  addUserGroup=new AddUserGroup();
  clearUserGroups=new ClearUserGroups();
  removeUserGroup=new RemoveUserGroup();
}

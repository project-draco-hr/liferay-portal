{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(PropsUtil.get("value.object.listener.com.liferay.portal.model.User")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener> listeners=new ArrayList<ModelListener>();
      for (      String listenerClassName : listenerClassNames) {
        listeners.add((ModelListener)Class.forName(listenerClassName).newInstance());
      }
      _listeners=listeners.toArray(new ModelListener[listeners.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsGroup=new ContainsGroup(this);
  addGroup=new AddGroup(this);
  clearGroups=new ClearGroups(this);
  removeGroup=new RemoveGroup(this);
  containsOrganization=new ContainsOrganization(this);
  addOrganization=new AddOrganization(this);
  clearOrganizations=new ClearOrganizations(this);
  removeOrganization=new RemoveOrganization(this);
  containsPermission=new ContainsPermission(this);
  addPermission=new AddPermission(this);
  clearPermissions=new ClearPermissions(this);
  removePermission=new RemovePermission(this);
  containsRole=new ContainsRole(this);
  addRole=new AddRole(this);
  clearRoles=new ClearRoles(this);
  removeRole=new RemoveRole(this);
  containsUserGroup=new ContainsUserGroup(this);
  addUserGroup=new AddUserGroup(this);
  clearUserGroups=new ClearUserGroups(this);
  removeUserGroup=new RemoveUserGroup(this);
}

{
  ConcurrentLRUCache<String,String> concurrentLRUCache=new ConcurrentLRUCache<String,String>(2);
  try {
    concurrentLRUCache.put(null,"testValue");
    fail();
  }
 catch (  NullPointerException ne) {
  }
  concurrentLRUCache.put("testKey1","testValue1");
  assertEquals(0,concurrentLRUCache.evictCount());
  assertEquals(0,concurrentLRUCache.hitCount());
  assertEquals(0,concurrentLRUCache.missCount());
  assertEquals(1,concurrentLRUCache.putCount());
  assertEquals(1,concurrentLRUCache.size());
  concurrentLRUCache.put("testKey2","testValue2");
  assertEquals(0,concurrentLRUCache.evictCount());
  assertEquals(0,concurrentLRUCache.hitCount());
  assertEquals(0,concurrentLRUCache.missCount());
  assertEquals(2,concurrentLRUCache.putCount());
  assertEquals(2,concurrentLRUCache.size());
  concurrentLRUCache.put("testKey1","testValue1-2");
  assertEquals(0,concurrentLRUCache.evictCount());
  assertEquals(0,concurrentLRUCache.hitCount());
  assertEquals(0,concurrentLRUCache.missCount());
  assertEquals(3,concurrentLRUCache.putCount());
  assertEquals(2,concurrentLRUCache.size());
  concurrentLRUCache.put("testKey2","testValue2-2");
  assertEquals(0,concurrentLRUCache.evictCount());
  assertEquals(0,concurrentLRUCache.hitCount());
  assertEquals(0,concurrentLRUCache.missCount());
  assertEquals(4,concurrentLRUCache.putCount());
  assertEquals(2,concurrentLRUCache.size());
  concurrentLRUCache.put("testKey3","testValue3");
  assertEquals(1,concurrentLRUCache.evictCount());
  assertEquals(0,concurrentLRUCache.hitCount());
  assertEquals(0,concurrentLRUCache.missCount());
  assertEquals(5,concurrentLRUCache.putCount());
  assertEquals(2,concurrentLRUCache.size());
  assertNull(concurrentLRUCache.get("testKey1"));
  assertEquals("testValue2-2",concurrentLRUCache.get("testKey2"));
  assertEquals("testValue3",concurrentLRUCache.get("testKey3"));
  concurrentLRUCache.put("testKey4","testValue4");
  assertEquals(2,concurrentLRUCache.evictCount());
  assertEquals(2,concurrentLRUCache.hitCount());
  assertEquals(1,concurrentLRUCache.missCount());
  assertEquals(6,concurrentLRUCache.putCount());
  assertEquals(2,concurrentLRUCache.size());
  assertNull(concurrentLRUCache.get("testKey1"));
  assertNull(concurrentLRUCache.get("testKey2"));
  assertEquals("testValue3",concurrentLRUCache.get("testKey3"));
  assertEquals("testValue4",concurrentLRUCache.get("testKey4"));
}

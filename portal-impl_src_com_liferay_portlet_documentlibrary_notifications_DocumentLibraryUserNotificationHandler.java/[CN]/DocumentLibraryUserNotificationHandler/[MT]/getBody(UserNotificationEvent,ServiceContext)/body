{
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject(userNotificationEvent.getPayload());
  long classPK=jsonObject.getLong("classPK");
  FileEntry file=null;
  try {
    file=DLAppLocalServiceUtil.getFileEntry(classPK);
  }
 catch (  Exception e) {
    UserNotificationEventLocalServiceUtil.deleteUserNotificationEvent(userNotificationEvent.getUserNotificationEventId());
    return null;
  }
  int notificationType=jsonObject.getInt("notificationType");
  String title=StringPool.BLANK;
  if (notificationType == UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY) {
    title="x-wrote-a-new-document";
  }
 else   if (notificationType == UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY) {
    title="x-updated-a-document";
  }
  StringBundler sb=new StringBundler(5);
  sb.append("<div class=\"title\">");
  sb.append(serviceContext.translate(title,HtmlUtil.escape(PortalUtil.getUserName(file.getUserId(),StringPool.BLANK))));
  sb.append("</div><div class=\"body\">");
  sb.append(HtmlUtil.escape(StringUtil.shorten(file.getTitle(),50)));
  sb.append("</div>");
  return sb.toString();
}

{
  GroupPermissionUtil.check(getPermissionChecker(),targetGroupId,ActionKeys.PUBLISH_STAGING);
  String jobName=PortalUUIDUtil.generate();
  Trigger trigger=new CronTrigger(jobName,groupName,schedulerStartDate,schedulerEndDate,cronText);
  String command=StringPool.BLANK;
  if (scope.equals("all-pages")) {
    command=LayoutsLocalPublisherRequest.COMMAND_ALL_PAGES;
  }
 else   if (scope.equals("selected-pages")) {
    command=LayoutsLocalPublisherRequest.COMMAND_SELECTED_PAGES;
  }
  LayoutsLocalPublisherRequest publisherRequest=new LayoutsLocalPublisherRequest(command,getUserId(),sourceGroupId,targetGroupId,privateLayout,layoutIdMap,parameterMap,startDate,endDate);
  SchedulerEngineHelperUtil.schedule(trigger,StorageType.PERSISTED,description,DestinationNames.LAYOUTS_LOCAL_PUBLISHER,publisherRequest,0);
}

{
  PermissionChecker permissionChecker=getPermissionChecker();
  if (!GroupPermissionUtil.contains(permissionChecker,targetGroupId,ActionKeys.MANAGE_STAGING) && !GroupPermissionUtil.contains(permissionChecker,targetGroupId,ActionKeys.PUBLISH_STAGING)) {
    throw new PrincipalException();
  }
  String command=StringPool.BLANK;
  if (scope.equals("all-pages")) {
    command=LayoutsLocalPublisherRequest.COMMAND_ALL_PAGES;
  }
 else   if (scope.equals("selected-pages")) {
    command=LayoutsLocalPublisherRequest.COMMAND_SELECTED_PAGES;
  }
  LayoutsLocalPublisherRequest publisherRequest=new LayoutsLocalPublisherRequest(command,getUserId(),sourceGroupId,targetGroupId,privateLayout,layoutIdMap,parameterMap,startDate,endDate);
  Trigger trigger=new CronTrigger(groupName,groupName,schedulerStartDate,schedulerEndDate,cronText);
  SchedulerEngineUtil.schedule(trigger,description,DestinationNames.LAYOUTS_LOCAL_PUBLISHER,publisherRequest);
}

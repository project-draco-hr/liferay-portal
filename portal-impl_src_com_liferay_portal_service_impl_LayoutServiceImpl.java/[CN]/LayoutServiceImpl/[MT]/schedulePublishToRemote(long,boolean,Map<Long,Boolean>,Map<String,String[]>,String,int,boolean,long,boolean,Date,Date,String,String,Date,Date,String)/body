{
  PermissionChecker permissionChecker=getPermissionChecker();
  Group group=groupLocalService.getGroup(sourceGroupId);
  if (group.isStagingGroup()) {
    group=group.getLiveGroup();
  }
  if (group.isWorkflowEnabled() && !GroupPermissionUtil.contains(permissionChecker,sourceGroupId,ActionKeys.MANAGE_STAGING) && !GroupPermissionUtil.contains(permissionChecker,sourceGroupId,ActionKeys.PUBLISH_STAGING)) {
    throw new PrincipalException();
  }
 else {
    GroupPermissionUtil.check(permissionChecker,sourceGroupId,ActionKeys.MANAGE_LAYOUTS);
  }
  LayoutsRemotePublisherRequest publisherRequest=new LayoutsRemotePublisherRequest(getUserId(),sourceGroupId,privateLayout,layoutIdMap,parameterMap,remoteAddress,remotePort,secureConnection,remoteGroupId,remotePrivateLayout,startDate,endDate);
  String jobName=PortalUUIDUtil.generate();
  Trigger trigger=new CronTrigger(jobName,groupName,schedulerStartDate,schedulerEndDate,cronText);
  SchedulerEngineUtil.schedule(trigger,description,DestinationNames.LAYOUTS_REMOTE_PUBLISHER,publisherRequest);
}

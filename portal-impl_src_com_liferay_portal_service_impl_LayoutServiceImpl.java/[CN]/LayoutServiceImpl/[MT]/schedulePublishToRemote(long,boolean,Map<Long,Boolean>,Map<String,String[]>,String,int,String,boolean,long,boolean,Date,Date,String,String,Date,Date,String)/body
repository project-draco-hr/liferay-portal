{
  GroupPermissionUtil.check(getPermissionChecker(),sourceGroupId,ActionKeys.PUBLISH_STAGING);
  Trigger trigger=new CronTrigger(PortalUUIDUtil.generate(),groupName,schedulerStartDate,schedulerEndDate,cronText);
  User user=userPersistence.findByPrimaryKey(getUserId());
  Map<String,Serializable> publishLayoutRemoteSettingsMap=ExportImportConfigurationSettingsMapFactory.buildPublishLayoutRemoteSettingsMap(getUserId(),sourceGroupId,privateLayout,layoutIdMap,parameterMap,remoteAddress,remotePort,remotePathContext,secureConnection,remoteGroupId,remotePrivateLayout,user.getLocale(),user.getTimeZone());
  ExportImportConfiguration exportImportConfiguration=exportImportConfigurationLocalService.addDraftExportImportConfiguration(getUserId(),trigger.getJobName(),ExportImportConfigurationConstants.TYPE_SCHEDULED_PUBLISH_LAYOUT_REMOTE,publishLayoutRemoteSettingsMap);
  SchedulerEngineHelperUtil.schedule(trigger,StorageType.PERSISTED,description,DestinationNames.LAYOUTS_REMOTE_PUBLISHER,exportImportConfiguration.getExportImportConfigurationId(),0);
}

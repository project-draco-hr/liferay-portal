{
  if (groupId <= 0) {
    return LayoutConstants.DEFAULT_PLID;
  }
  PermissionChecker permissionChecker=getPermissionChecker();
  String scopeGroupLayoutUuid=null;
  Group scopeGroup=groupLocalService.getGroup(scopeGroupId);
  if (scopeGroup.isLayout()) {
    Layout scopeGroupLayout=layoutLocalService.getLayout(scopeGroup.getClassPK());
    scopeGroupLayoutUuid=scopeGroupLayout.getUuid();
  }
  Map<Long,javax.portlet.PortletPreferences> jxPreferencesMap=PortletPreferencesFactoryUtil.getPortletSetupMap(scopeGroup.getCompanyId(),groupId,PortletKeys.PREFS_OWNER_ID_DEFAULT,PortletKeys.PREFS_OWNER_TYPE_LAYOUT,portletId,privateLayout);
  for (  Map.Entry<Long,javax.portlet.PortletPreferences> entry : jxPreferencesMap.entrySet()) {
    long plid=entry.getKey();
    Layout layout=null;
    try {
      layout=layoutLocalService.getLayout(plid);
    }
 catch (    NoSuchLayoutException nsle) {
      continue;
    }
    if (!LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.VIEW)) {
      continue;
    }
    if (!layout.isTypePortlet()) {
      continue;
    }
    LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
    if (!layoutTypePortlet.hasPortletId(portletId)) {
      continue;
    }
    javax.portlet.PortletPreferences jxPreferences=entry.getValue();
    String scopeType=GetterUtil.getString(jxPreferences.getValue("lfrScopeType",null));
    if (scopeGroup.isLayout()) {
      String scopeLayoutUuid=GetterUtil.getString(jxPreferences.getValue("lfrScopeLayoutUuid",null));
      if (Validator.isNotNull(scopeType) && Validator.isNotNull(scopeLayoutUuid) && scopeLayoutUuid.equals(scopeGroupLayoutUuid)) {
        return layout.getPlid();
      }
    }
 else     if (scopeGroup.isCompany()) {
      if (Validator.isNotNull(scopeType) && scopeType.equals("company")) {
        return layout.getPlid();
      }
    }
 else {
      if (Validator.isNull(scopeType)) {
        return layout.getPlid();
      }
    }
  }
  return LayoutConstants.DEFAULT_PLID;
}

{
  try {
    Convention convention=Convention.getInstance();
    convention.putBoolean(ConventionKeys.SORT,false);
    convention.putInt(ConventionKeys.BLANK_LINES_AFTER_HEADER,1);
    convention.putBoolean(ConventionKeys.HEADER,true);
    convention.put(ConventionKeys.HEADER_TEXT,FileUtil.read("../copyright.txt"));
    convention.putInt(ConventionKeys.BLANK_LINES_AFTER_IMPORT,1);
    convention.putInt(ConventionKeys.INDENT_SIZE_TABS,4);
    convention.putBoolean(ConventionKeys.INDENT_WITH_TABS,true);
    convention.putBoolean(ConventionKeys.INSERT_TRAILING_NEWLINE,false);
    convention.putBoolean(ConventionKeys.BRACE_NEWLINE_RIGHT,true);
    convention.putInt(ConventionKeys.INDENT_SIZE_BRACE_RIGHT_AFTER,0);
    convention.putBoolean(ConventionKeys.SPACE_AFTER_CAST,false);
    String classMask="/**\n" + " * <a href=\"$fileName$.html\"><b><i>View Source</i></b></a>\n" + " *\n"+ " * @author $author$\n"+ " *\n"+ " */";
    convention.putInt(ConventionKeys.COMMENT_JAVADOC_CLASS_MASK,1);
    convention.putBoolean(ConventionKeys.COMMENT_JAVADOC_REMOVE,true);
    convention.putBoolean(ConventionKeys.COMMENT_REMOVE_MULTI_LINE,true);
    convention.putBoolean(ConventionKeys.COMMENT_REMOVE_SINGLE_LINE,true);
    convention.put(ConventionKeys.COMMENT_JAVADOC_TEMPLATE_CLASS,classMask);
    convention.put(ConventionKeys.COMMENT_JAVADOC_TEMPLATE_INTERFACE,classMask);
    convention.exportSettings(new FileOutputStream(new File("../tools/jalopy.xml")),Convention.EXTENSION_XML);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

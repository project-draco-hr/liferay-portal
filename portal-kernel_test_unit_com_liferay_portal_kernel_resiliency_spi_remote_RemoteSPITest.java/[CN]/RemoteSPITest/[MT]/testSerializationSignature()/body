{
  Method readObjectMethod=RemoteSPI.class.getDeclaredMethod("readObject",ObjectInputStream.class);
  Assert.assertNotNull(readObjectMethod);
  Assert.assertEquals(Modifier.PRIVATE,readObjectMethod.getModifiers());
  Assert.assertSame(void.class,readObjectMethod.getReturnType());
  Class<?>[] parameterTypes=readObjectMethod.getParameterTypes();
  Assert.assertEquals(1,parameterTypes.length);
  Assert.assertSame(ObjectInputStream.class,parameterTypes[0]);
  List<Class<?>> exceptionTypes=Arrays.asList(readObjectMethod.getExceptionTypes());
  Assert.assertEquals(2,exceptionTypes.size());
  Assert.assertTrue(exceptionTypes.contains(ClassNotFoundException.class));
  Assert.assertTrue(exceptionTypes.contains(IOException.class));
  Method writeObjectMethod=RemoteSPI.class.getDeclaredMethod("writeObject",ObjectOutputStream.class);
  Assert.assertNotNull(writeObjectMethod);
  Assert.assertEquals(Modifier.PRIVATE,writeObjectMethod.getModifiers());
  Assert.assertSame(void.class,writeObjectMethod.getReturnType());
  parameterTypes=writeObjectMethod.getParameterTypes();
  Assert.assertEquals(1,parameterTypes.length);
  Assert.assertSame(ObjectOutputStream.class,parameterTypes[0]);
  Class<?>[] exceptionTypeArray=writeObjectMethod.getExceptionTypes();
  Assert.assertEquals(1,exceptionTypeArray.length);
  Assert.assertSame(IOException.class,exceptionTypeArray[0]);
}

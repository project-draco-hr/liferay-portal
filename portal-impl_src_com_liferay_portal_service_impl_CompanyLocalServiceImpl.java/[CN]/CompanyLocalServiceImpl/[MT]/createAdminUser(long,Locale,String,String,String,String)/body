{
  User user=UserLocalServiceUtil.fetchUserByScreenName(companyId,screenName);
  int screenNameIndex=0;
  String newScreenName=screenName;
  while (user != null) {
    screenNameIndex++;
    newScreenName=screenName + screenNameIndex;
    user=UserLocalServiceUtil.fetchUserByScreenName(companyId,newScreenName);
  }
  screenName=newScreenName;
  long creatorUserId=0;
  boolean autoPassword=false;
  String password1=PropsValues.DEFAULT_ADMIN_PASSWORD;
  String password2=password1;
  boolean autoScreenName=false;
  long facebookId=0;
  String openId=StringPool.BLANK;
  Locale locale=defaultLocale;
  String middleName=PropsValues.DEFAULT_ADMIN_MIDDLE_NAME;
  int prefixId=0;
  int suffixId=0;
  boolean male=true;
  int birthdayMonth=Calendar.JANUARY;
  int birthdayDay=1;
  int birthdayYear=1970;
  String jobTitle=StringPool.BLANK;
  Group guestGroup=groupLocalService.getGroup(companyId,GroupConstants.GUEST);
  long[] groupIds=new long[]{guestGroup.getGroupId()};
  long[] organizationIds=null;
  Role adminRole=roleLocalService.getRole(companyId,RoleConstants.ADMINISTRATOR);
  Role powerUserRole=roleLocalService.getRole(companyId,RoleConstants.POWER_USER);
  long[] roleIds=new long[]{adminRole.getRoleId(),powerUserRole.getRoleId()};
  long[] userGroupIds=null;
  boolean sendEmail=false;
  ServiceContext serviceContext=new ServiceContext();
  User defaultAdminUser=userLocalService.addUser(creatorUserId,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,facebookId,openId,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,serviceContext);
  userLocalService.updateEmailAddressVerified(defaultAdminUser.getUserId(),true);
  userLocalService.updateLastLogin(defaultAdminUser.getUserId(),defaultAdminUser.getLoginIP());
  userLocalService.updatePasswordReset(defaultAdminUser.getUserId(),false);
}

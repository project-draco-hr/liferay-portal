{
  PortletPreferences preferences=PrefsPropsUtil.getPreferences(companyId);
  try {
    String newLocales=properties.getProperty(PropsKeys.LOCALES);
    if (newLocales != null) {
      String oldLocales=preferences.getValue(PropsKeys.LOCALES,StringPool.BLANK);
      if (!Validator.equals(oldLocales,newLocales)) {
        validateLocales(newLocales);
        LanguageUtil.resetAvailableLocales(companyId);
        Date now=new Date();
        for (        LayoutSetPrototype layoutSetPrototype : LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypes(QueryUtil.ALL_POS,QueryUtil.ALL_POS)) {
          layoutSetPrototype.setModifiedDate(now);
          LayoutSetPrototypeLocalServiceUtil.updateLayoutSetPrototype(layoutSetPrototype);
        }
      }
    }
    List<String> resetKeys=new ArrayList<String>();
    for (    Map.Entry<String,String> entry : properties.entrySet()) {
      String key=entry.getKey();
      String value=entry.getValue();
      if (value.equals(Portal.TEMP_OBFUSCATION_VALUE)) {
        continue;
      }
      String propsUtilValue=PropsUtil.get(key);
      if (!value.equals(propsUtilValue)) {
        preferences.setValue(key,value);
      }
 else {
        String preferencesValue=preferences.getValue(key,null);
        if (preferencesValue != null) {
          resetKeys.add(key);
        }
      }
    }
    for (    String key : resetKeys) {
      preferences.reset(key);
    }
    preferences.store();
  }
 catch (  LocaleException le) {
    throw le;
  }
catch (  Exception e) {
    throw new SystemException(e);
  }
}

{
  PortletPreferences preferences=PrefsPropsUtil.getPreferences(companyId);
  try {
    if (properties.containsKey(PropsKeys.LOCALES)) {
      String oldLocales=preferences.getValue(PropsKeys.LOCALES,StringPool.BLANK);
      String newLocales=properties.getProperty(PropsKeys.LOCALES);
      Locale[] newLocalesArray=LocaleUtil.fromLanguageIds(StringUtil.split(newLocales));
      HashSet<Locale> localeSet=new HashSet<Locale>(newLocalesArray.length);
      for (      Locale locale : newLocalesArray) {
        localeSet.add(locale);
      }
      newLocales=StringUtil.merge(localeSet);
      if (!Validator.equals(oldLocales,newLocales)) {
        LanguageUtil.resetAvailableLocales(companyId);
      }
    }
    List<String> resetKeys=new ArrayList<String>();
    for (    Map.Entry<String,String> entry : properties.entrySet()) {
      String key=entry.getKey();
      String value=entry.getValue();
      if (value.equals(Portal.TEMP_OBFUSCATION_VALUE)) {
        continue;
      }
      String propsUtilValue=PropsUtil.get(key);
      if (!value.equals(propsUtilValue)) {
        preferences.setValue(key,value);
      }
 else {
        String preferencesValue=preferences.getValue(key,null);
        if (preferencesValue != null) {
          resetKeys.add(key);
        }
      }
    }
    for (    String key : resetKeys) {
      preferences.reset(key);
    }
    preferences.store();
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
}

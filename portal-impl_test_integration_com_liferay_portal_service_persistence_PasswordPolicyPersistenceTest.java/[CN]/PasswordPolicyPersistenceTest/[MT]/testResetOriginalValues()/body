{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  PasswordPolicy newPasswordPolicy=addPasswordPolicy();
  _persistence.clearCache();
  PasswordPolicy existingPasswordPolicy=_persistence.findByPrimaryKey(newPasswordPolicy.getPrimaryKey());
  Assert.assertEquals(existingPasswordPolicy.getCompanyId(),ReflectionTestUtil.invoke(existingPasswordPolicy,"getOriginalCompanyId",new Class<?>[0]));
  Assert.assertEquals(existingPasswordPolicy.getDefaultPolicy(),ReflectionTestUtil.invoke(existingPasswordPolicy,"getOriginalDefaultPolicy",new Class<?>[0]));
  Assert.assertEquals(existingPasswordPolicy.getCompanyId(),ReflectionTestUtil.invoke(existingPasswordPolicy,"getOriginalCompanyId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingPasswordPolicy.getName(),ReflectionTestUtil.invoke(existingPasswordPolicy,"getOriginalName",new Class<?>[0])));
}

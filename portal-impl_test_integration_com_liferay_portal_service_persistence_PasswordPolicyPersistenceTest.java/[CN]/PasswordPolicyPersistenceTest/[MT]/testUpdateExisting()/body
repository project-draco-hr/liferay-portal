{
  long pk=nextLong();
  PasswordPolicy newPasswordPolicy=_persistence.create(pk);
  newPasswordPolicy.setCompanyId(nextLong());
  newPasswordPolicy.setUserId(nextLong());
  newPasswordPolicy.setUserName(randomString());
  newPasswordPolicy.setCreateDate(nextDate());
  newPasswordPolicy.setModifiedDate(nextDate());
  newPasswordPolicy.setDefaultPolicy(randomBoolean());
  newPasswordPolicy.setName(randomString());
  newPasswordPolicy.setDescription(randomString());
  newPasswordPolicy.setChangeable(randomBoolean());
  newPasswordPolicy.setChangeRequired(randomBoolean());
  newPasswordPolicy.setMinAge(nextLong());
  newPasswordPolicy.setCheckSyntax(randomBoolean());
  newPasswordPolicy.setAllowDictionaryWords(randomBoolean());
  newPasswordPolicy.setMinAlphanumeric(nextInt());
  newPasswordPolicy.setMinLength(nextInt());
  newPasswordPolicy.setMinLowerCase(nextInt());
  newPasswordPolicy.setMinNumbers(nextInt());
  newPasswordPolicy.setMinSymbols(nextInt());
  newPasswordPolicy.setMinUpperCase(nextInt());
  newPasswordPolicy.setHistory(randomBoolean());
  newPasswordPolicy.setHistoryCount(nextInt());
  newPasswordPolicy.setExpireable(randomBoolean());
  newPasswordPolicy.setMaxAge(nextLong());
  newPasswordPolicy.setWarningTime(nextLong());
  newPasswordPolicy.setGraceLimit(nextInt());
  newPasswordPolicy.setLockout(randomBoolean());
  newPasswordPolicy.setMaxFailure(nextInt());
  newPasswordPolicy.setLockoutDuration(nextLong());
  newPasswordPolicy.setRequireUnlock(randomBoolean());
  newPasswordPolicy.setResetFailureCount(nextLong());
  newPasswordPolicy.setResetTicketMaxAge(nextLong());
  _persistence.update(newPasswordPolicy,false);
  PasswordPolicy existingPasswordPolicy=_persistence.findByPrimaryKey(newPasswordPolicy.getPrimaryKey());
  assertEquals(existingPasswordPolicy.getPasswordPolicyId(),newPasswordPolicy.getPasswordPolicyId());
  assertEquals(existingPasswordPolicy.getCompanyId(),newPasswordPolicy.getCompanyId());
  assertEquals(existingPasswordPolicy.getUserId(),newPasswordPolicy.getUserId());
  assertEquals(existingPasswordPolicy.getUserName(),newPasswordPolicy.getUserName());
  assertEquals(Time.getShortTimestamp(existingPasswordPolicy.getCreateDate()),Time.getShortTimestamp(newPasswordPolicy.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingPasswordPolicy.getModifiedDate()),Time.getShortTimestamp(newPasswordPolicy.getModifiedDate()));
  assertEquals(existingPasswordPolicy.getDefaultPolicy(),newPasswordPolicy.getDefaultPolicy());
  assertEquals(existingPasswordPolicy.getName(),newPasswordPolicy.getName());
  assertEquals(existingPasswordPolicy.getDescription(),newPasswordPolicy.getDescription());
  assertEquals(existingPasswordPolicy.getChangeable(),newPasswordPolicy.getChangeable());
  assertEquals(existingPasswordPolicy.getChangeRequired(),newPasswordPolicy.getChangeRequired());
  assertEquals(existingPasswordPolicy.getMinAge(),newPasswordPolicy.getMinAge());
  assertEquals(existingPasswordPolicy.getCheckSyntax(),newPasswordPolicy.getCheckSyntax());
  assertEquals(existingPasswordPolicy.getAllowDictionaryWords(),newPasswordPolicy.getAllowDictionaryWords());
  assertEquals(existingPasswordPolicy.getMinAlphanumeric(),newPasswordPolicy.getMinAlphanumeric());
  assertEquals(existingPasswordPolicy.getMinLength(),newPasswordPolicy.getMinLength());
  assertEquals(existingPasswordPolicy.getMinLowerCase(),newPasswordPolicy.getMinLowerCase());
  assertEquals(existingPasswordPolicy.getMinNumbers(),newPasswordPolicy.getMinNumbers());
  assertEquals(existingPasswordPolicy.getMinSymbols(),newPasswordPolicy.getMinSymbols());
  assertEquals(existingPasswordPolicy.getMinUpperCase(),newPasswordPolicy.getMinUpperCase());
  assertEquals(existingPasswordPolicy.getHistory(),newPasswordPolicy.getHistory());
  assertEquals(existingPasswordPolicy.getHistoryCount(),newPasswordPolicy.getHistoryCount());
  assertEquals(existingPasswordPolicy.getExpireable(),newPasswordPolicy.getExpireable());
  assertEquals(existingPasswordPolicy.getMaxAge(),newPasswordPolicy.getMaxAge());
  assertEquals(existingPasswordPolicy.getWarningTime(),newPasswordPolicy.getWarningTime());
  assertEquals(existingPasswordPolicy.getGraceLimit(),newPasswordPolicy.getGraceLimit());
  assertEquals(existingPasswordPolicy.getLockout(),newPasswordPolicy.getLockout());
  assertEquals(existingPasswordPolicy.getMaxFailure(),newPasswordPolicy.getMaxFailure());
  assertEquals(existingPasswordPolicy.getLockoutDuration(),newPasswordPolicy.getLockoutDuration());
  assertEquals(existingPasswordPolicy.getRequireUnlock(),newPasswordPolicy.getRequireUnlock());
  assertEquals(existingPasswordPolicy.getResetFailureCount(),newPasswordPolicy.getResetFailureCount());
  assertEquals(existingPasswordPolicy.getResetTicketMaxAge(),newPasswordPolicy.getResetTicketMaxAge());
}

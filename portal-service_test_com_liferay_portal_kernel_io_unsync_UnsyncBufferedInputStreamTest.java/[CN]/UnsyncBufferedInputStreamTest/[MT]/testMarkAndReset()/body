{
  UnsyncBufferedInputStream unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER));
  assertEquals(-1,unsyncBufferedInputStream.markIndex);
  int markLimit=10;
  unsyncBufferedInputStream.mark(markLimit);
  assertEquals(0,unsyncBufferedInputStream.markIndex);
  assertEquals(_SIZE,unsyncBufferedInputStream.available());
  assertEquals(0,unsyncBufferedInputStream.read());
  assertEquals(1,unsyncBufferedInputStream.read());
  assertEquals(2,unsyncBufferedInputStream.read());
  assertEquals(3,unsyncBufferedInputStream.index);
  unsyncBufferedInputStream.reset();
  assertEquals(_SIZE,unsyncBufferedInputStream.available());
  assertEquals(0,unsyncBufferedInputStream.read());
  assertEquals(1,unsyncBufferedInputStream.read());
  assertEquals(2,unsyncBufferedInputStream.read());
  assertEquals(3,unsyncBufferedInputStream.index);
  int bufferSize=20;
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER),bufferSize);
  assertEquals(-1,unsyncBufferedInputStream.markIndex);
  unsyncBufferedInputStream.mark(markLimit);
  assertEquals(0,unsyncBufferedInputStream.markIndex);
  for (int i=0; i < bufferSize * 2; i++) {
    assertEquals(i,unsyncBufferedInputStream.read());
  }
  assertEquals(bufferSize,unsyncBufferedInputStream.index);
  assertEquals(_SIZE - bufferSize * 2,unsyncBufferedInputStream.available());
  assertEquals(-1,unsyncBufferedInputStream.markIndex);
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER));
  for (int i=0; i < 4097; i++) {
    assertEquals(i & 0xff,unsyncBufferedInputStream.read());
  }
  unsyncBufferedInputStream.mark(markLimit);
  assertEquals(_SIZE - 4097,unsyncBufferedInputStream.available());
  assertEquals(4097 & 0xff,unsyncBufferedInputStream.read());
  assertEquals(4098 & 0xff,unsyncBufferedInputStream.read());
  assertEquals(_SIZE - 4099,unsyncBufferedInputStream.available());
  unsyncBufferedInputStream.reset();
  assertEquals(_SIZE - 4097,unsyncBufferedInputStream.available());
  assertEquals(4097 & 0xff,unsyncBufferedInputStream.read());
  assertEquals(4098 & 0xff,unsyncBufferedInputStream.read());
  assertEquals(_SIZE - 4099,unsyncBufferedInputStream.available());
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER),5);
  assertEquals(0,unsyncBufferedInputStream.read());
  assertEquals(1,unsyncBufferedInputStream.read());
  unsyncBufferedInputStream.mark(markLimit);
  assertEquals(2,unsyncBufferedInputStream.read());
  assertEquals(3,unsyncBufferedInputStream.read());
  assertEquals(4,unsyncBufferedInputStream.read());
  assertEquals(5,unsyncBufferedInputStream.read());
  unsyncBufferedInputStream.reset();
  assertEquals(2,unsyncBufferedInputStream.read());
  assertEquals(3,unsyncBufferedInputStream.read());
  assertEquals(4,unsyncBufferedInputStream.read());
  assertEquals(5,unsyncBufferedInputStream.read());
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER),16);
  unsyncBufferedInputStream.mark(8192);
  assertEquals(0,unsyncBufferedInputStream.markIndex);
  for (int i=0; i < 4097; i++) {
    assertEquals(i & 0xff,unsyncBufferedInputStream.read());
  }
  assertEquals(8192,unsyncBufferedInputStream.buffer.length);
  assertEquals(0,unsyncBufferedInputStream.markIndex);
  assertEquals(4097,unsyncBufferedInputStream.index);
  unsyncBufferedInputStream.mark(8192);
  assertEquals(4097,unsyncBufferedInputStream.markIndex);
  for (int i=4097; i < 8193; i++) {
    assertEquals(i & 0xff,unsyncBufferedInputStream.read());
  }
  assertEquals(0,unsyncBufferedInputStream.markIndex);
}

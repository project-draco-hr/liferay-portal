{
  ByteArrayInputStream byteArrayInputStream=new ByteArrayInputStream(_BUFFER);
  int size=10;
  UnsyncBufferedInputStream unsyncBufferedInputStream=new UnsyncBufferedInputStream(byteArrayInputStream,size);
  assertEquals(_SIZE,byteArrayInputStream.available());
  assertEquals(_SIZE,unsyncBufferedInputStream.available());
  assertEquals(0,unsyncBufferedInputStream.read());
  assertEquals(_SIZE - size,byteArrayInputStream.available());
  assertEquals(_SIZE - 1,unsyncBufferedInputStream.available());
  byte[] buffer=new byte[5];
  int read=unsyncBufferedInputStream.read(buffer);
  assertEquals(buffer.length,read);
  for (int i=1; i < buffer.length + 1; i++) {
    assertEquals(i,buffer[i - 1]);
  }
  assertEquals(6,unsyncBufferedInputStream.read());
  assertEquals(7,unsyncBufferedInputStream.read());
  assertEquals(8,unsyncBufferedInputStream.read());
  assertEquals(9,unsyncBufferedInputStream.read());
  read=unsyncBufferedInputStream.read(buffer);
  assertEquals(buffer.length,read);
  for (int i=10; i < buffer.length + 10; i++) {
    assertEquals(i,buffer[i - 10]);
  }
  assertEquals(_SIZE - size * 2,byteArrayInputStream.available());
  assertEquals(_SIZE - 15,unsyncBufferedInputStream.available());
  buffer=new byte[10];
  read=unsyncBufferedInputStream.read(buffer);
  assertEquals(buffer.length,read);
  for (int i=15; i < buffer.length + 15; i++) {
    assertEquals(i,buffer[i - 15]);
  }
  assertEquals(_SIZE - size * 3,byteArrayInputStream.available());
  assertEquals(_SIZE - 25,unsyncBufferedInputStream.available());
  for (int i=25; i < _SIZE - 5; i++) {
    assertEquals(i & 0xff,unsyncBufferedInputStream.read());
  }
  assertEquals(_SIZE % 5,byteArrayInputStream.available());
  assertEquals(5,unsyncBufferedInputStream.available());
  read=unsyncBufferedInputStream.read(buffer);
  assertEquals(5,read);
  assertEquals(-1,unsyncBufferedInputStream.read(buffer));
}

{
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
  String languageId=LocaleUtil.toLanguageId(LocaleUtil.getMostRelevantLocale());
  long plid=0;
  String portletSetupTitle=StringPool.BLANK;
  String scopeType=StringPool.BLANK;
  String scopeLayoutUuid=StringPool.BLANK;
  if (layout != null) {
    plid=layout.getPlid();
    if (preserveScopeLayoutId && (portletId != null)) {
      javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
      portletSetupTitle=GetterUtil.getString(jxPreferences.getValue("portletSetupTitle_" + languageId,PortalUtil.getPortletTitle(portletId,languageId)));
      scopeType=GetterUtil.getString(jxPreferences.getValue("lfrScopeType",null));
      scopeLayoutUuid=GetterUtil.getString(jxPreferences.getValue("lfrScopeLayoutUuid",null));
      portletDataContext.setScopeType(scopeType);
      portletDataContext.setScopeLayoutUuid(scopeLayoutUuid);
    }
  }
  List<Element> portletPreferencesElements=parentElement.elements("portlet-preferences");
  for (  Element portletPreferencesElement : portletPreferencesElements) {
    String path=portletPreferencesElement.attributeValue("path");
    if (portletDataContext.isPathNotProcessed(path)) {
      String xml=null;
      Element element=null;
      try {
        xml=portletDataContext.getZipEntryAsString(path);
        Document preferencesDocument=SAXReaderUtil.read(xml);
        element=preferencesDocument.getRootElement();
      }
 catch (      DocumentException de) {
        throw new SystemException(de);
      }
      long ownerId=GetterUtil.getLong(element.attributeValue("owner-id"));
      int ownerType=GetterUtil.getInteger(element.attributeValue("owner-type"));
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_COMPANY) {
        continue;
      }
      if (((ownerType == PortletKeys.PREFS_OWNER_TYPE_GROUP) || (ownerType == PortletKeys.PREFS_OWNER_TYPE_LAYOUT)) && !importPortletSetup) {
        continue;
      }
      if ((ownerType == PortletKeys.PREFS_OWNER_TYPE_ARCHIVED) && !importPortletArchivedSetups) {
        continue;
      }
      if ((ownerType == PortletKeys.PREFS_OWNER_TYPE_USER) && (ownerId != PortletKeys.PREFS_OWNER_ID_DEFAULT) && !importPortletUserPreferences) {
        continue;
      }
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_GROUP) {
        plid=PortletKeys.PREFS_PLID_SHARED;
        ownerId=portletDataContext.getScopeGroupId();
      }
      boolean defaultUser=GetterUtil.getBoolean(element.attributeValue("default-user"));
      if (portletId == null) {
        portletId=element.attributeValue("portlet-id");
      }
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_ARCHIVED) {
        portletId=PortletConstants.getRootPortletId(portletId);
        String userUuid=element.attributeValue("archive-user-uuid");
        String name=element.attributeValue("archive-name");
        long userId=portletDataContext.getUserId(userUuid);
        PortletItem portletItem=PortletItemLocalServiceUtil.updatePortletItem(userId,groupId,name,portletId,PortletPreferences.class.getName());
        plid=0;
        ownerId=portletItem.getPortletItemId();
      }
 else       if (ownerType == PortletKeys.PREFS_OWNER_TYPE_USER) {
        String userUuid=element.attributeValue("user-uuid");
        ownerId=portletDataContext.getUserId(userUuid);
      }
      if (defaultUser) {
        ownerId=defaultUserId;
      }
      javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.fromXML(companyId,ownerId,ownerType,plid,portletId,xml);
      Portlet portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
      if (portlet != null) {
        PortletDataHandler portletDataHandler=portlet.getPortletDataHandlerInstance();
        if (portletDataHandler != null) {
          jxPreferences=portletDataHandler.processImportPortletPreferences(portletDataContext,portletId,jxPreferences);
        }
      }
      updatePortletPreferences(portletDataContext,ownerId,ownerType,plid,portletId,PortletPreferencesFactoryUtil.toXML(jxPreferences),importPortletData);
    }
  }
  if (preserveScopeLayoutId && (layout != null)) {
    javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
    try {
      jxPreferences.setValue("portletSetupTitle_" + languageId,portletSetupTitle);
      jxPreferences.setValue("lfrScopeType",scopeType);
      jxPreferences.setValue("lfrScopeLayoutUuid",scopeLayoutUuid);
      jxPreferences.store();
    }
  finally {
      portletDataContext.setScopeType(scopeType);
      portletDataContext.setScopeLayoutUuid(scopeLayoutUuid);
    }
  }
}

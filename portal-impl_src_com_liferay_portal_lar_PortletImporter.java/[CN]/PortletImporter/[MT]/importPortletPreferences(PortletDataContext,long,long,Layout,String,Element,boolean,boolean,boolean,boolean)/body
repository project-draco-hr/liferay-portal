{
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
  long plid=0;
  String scopeType=StringPool.BLANK;
  String scopeLayoutUuid=StringPool.BLANK;
  if (layout != null) {
    plid=layout.getPlid();
    if (preserveScopeLayoutId && (portletId != null)) {
      javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
      scopeType=GetterUtil.getString(jxPreferences.getValue("lfr-scope-type",null));
      scopeLayoutUuid=GetterUtil.getString(jxPreferences.getValue("lfr-scope-layout-uuid",null));
      context.setScopeType(scopeType);
      context.setScopeLayoutUuid(scopeLayoutUuid);
    }
  }
  List<Element> preferencesEls=parentEl.elements("portlet-preferences");
  for (  Element preferencesEl : preferencesEls) {
    String path=preferencesEl.attributeValue("path");
    if (context.isPathNotProcessed(path)) {
      Element el=null;
      String xml=null;
      try {
        xml=context.getZipEntryAsString(path);
        Document preferencesDoc=SAXReaderUtil.read(xml);
        el=preferencesDoc.getRootElement();
      }
 catch (      DocumentException de) {
        throw new SystemException(de);
      }
      long ownerId=GetterUtil.getLong(el.attributeValue("owner-id"));
      int ownerType=GetterUtil.getInteger(el.attributeValue("owner-type"));
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_COMPANY) {
        continue;
      }
      if (((ownerType == PortletKeys.PREFS_OWNER_TYPE_GROUP) || (ownerType == PortletKeys.PREFS_OWNER_TYPE_LAYOUT)) && !importPortletSetup) {
        continue;
      }
      if ((ownerType == PortletKeys.PREFS_OWNER_TYPE_ARCHIVED) && !importPortletArchivedSetups) {
        continue;
      }
      if ((ownerType == PortletKeys.PREFS_OWNER_TYPE_USER) && (ownerId != PortletKeys.PREFS_OWNER_ID_DEFAULT) && !importPortletUserPreferences) {
        continue;
      }
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_GROUP) {
        plid=PortletKeys.PREFS_PLID_SHARED;
        ownerId=context.getGroupId();
      }
      boolean defaultUser=GetterUtil.getBoolean(el.attributeValue("default-user"));
      if (portletId == null) {
        portletId=el.attributeValue("portlet-id");
      }
      if (ownerType == PortletKeys.PREFS_OWNER_TYPE_ARCHIVED) {
        portletId=PortletConstants.getRootPortletId(portletId);
        String userUuid=el.attributeValue("archive-user-uuid");
        String name=el.attributeValue("archive-name");
        long userId=context.getUserId(userUuid);
        PortletItem portletItem=PortletItemLocalServiceUtil.updatePortletItem(userId,groupId,name,portletId,PortletPreferences.class.getName());
        plid=0;
        ownerId=portletItem.getPortletItemId();
      }
      if (defaultUser) {
        ownerId=defaultUserId;
      }
      PortletPreferencesLocalServiceUtil.updatePreferences(ownerId,ownerType,plid,portletId,xml);
    }
  }
  if (preserveScopeLayoutId && (layout != null)) {
    javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
    try {
      jxPreferences.setValue("lfr-scope-type",scopeType);
      jxPreferences.setValue("lfr-scope-layout-uuid",scopeLayoutUuid);
      jxPreferences.store();
    }
 catch (    Exception e) {
      throw new PortalException(e);
    }
 finally {
      context.setScopeType(scopeType);
      context.setScopeLayoutUuid(scopeLayoutUuid);
    }
  }
}

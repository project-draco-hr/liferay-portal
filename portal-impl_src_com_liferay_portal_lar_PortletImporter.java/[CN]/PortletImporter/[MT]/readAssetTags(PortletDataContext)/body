{
  String xml=portletDataContext.getZipEntryAsString(ExportImportPathUtil.getSourceRootPath(portletDataContext) + "/tags.xml");
  if (xml == null) {
    return;
  }
  Document document=SAXReaderUtil.read(xml);
  Element rootElement=document.getRootElement();
  List<Element> assetTagElements=rootElement.elements("tag");
  for (  Element assetTagElement : assetTagElements) {
    String path=assetTagElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    AssetTag assetTag=(AssetTag)portletDataContext.getZipEntryAsObject(path);
    Map<Long,Long> assetTagPKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetTag.class);
    importAssetTag(portletDataContext,assetTagPKs,assetTagElement,assetTag);
  }
  List<Element> assetElements=rootElement.elements("asset");
  for (  Element assetElement : assetElements) {
    String className=GetterUtil.getString(assetElement.attributeValue("class-name"));
    long classPK=GetterUtil.getLong(assetElement.attributeValue("class-pk"));
    String assetTagNames=GetterUtil.getString(assetElement.attributeValue("tags"));
    portletDataContext.addAssetTags(className,classPK,StringUtil.split(assetTagNames));
  }
}

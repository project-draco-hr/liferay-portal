{
  String xml=portletDataContext.getZipEntryAsString(portletDataContext.getSourceRootPath() + "/categories-hierarchy.xml");
  if (xml == null) {
    return;
  }
  Document document=SAXReaderUtil.read(xml);
  Element rootElement=document.getRootElement();
  Element assetVocabulariesElement=rootElement.element("vocabularies");
  List<Element> assetVocabularyElements=assetVocabulariesElement.elements("vocabulary");
  Map<Long,Long> assetVocabularyPKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetVocabulary.class);
  for (  Element assetVocabularyElement : assetVocabularyElements) {
    String path=assetVocabularyElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    AssetVocabulary assetVocabulary=(AssetVocabulary)portletDataContext.getZipEntryAsObject(path);
    importAssetVocabulary(portletDataContext,assetVocabularyPKs,assetVocabularyElement,assetVocabulary);
  }
  Element assetCategoriesElement=rootElement.element("categories");
  List<Element> assetCategoryElements=assetCategoriesElement.elements("category");
  Map<Long,Long> assetCategoryPKs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetCategory.class);
  Map<String,String> assetCategoryUuids=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(AssetCategory.class.getName() + "uuid");
  for (  Element assetCategoryElement : assetCategoryElements) {
    String path=assetCategoryElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    AssetCategory assetCategory=(AssetCategory)portletDataContext.getZipEntryAsObject(path);
    importAssetCategory(portletDataContext,assetVocabularyPKs,assetCategoryPKs,assetCategoryUuids,assetCategoryElement,assetCategory);
  }
  Element assetsElement=rootElement.element("assets");
  List<Element> assetElements=assetsElement.elements("asset");
  for (  Element assetElement : assetElements) {
    String className=GetterUtil.getString(assetElement.attributeValue("class-name"));
    long classPK=GetterUtil.getLong(assetElement.attributeValue("class-pk"));
    String[] assetCategoryUuidArray=StringUtil.split(GetterUtil.getString(assetElement.attributeValue("category-uuids")));
    long[] assetCategoryIds=new long[0];
    for (    String assetCategoryUuid : assetCategoryUuidArray) {
      assetCategoryUuid=MapUtil.getString(assetCategoryUuids,assetCategoryUuid,assetCategoryUuid);
      AssetCategory assetCategory=AssetCategoryUtil.fetchByUUID_G(assetCategoryUuid,portletDataContext.getScopeGroupId());
      if (assetCategory != null) {
        assetCategoryIds=ArrayUtil.append(assetCategoryIds,assetCategory.getCategoryId());
      }
    }
    portletDataContext.addAssetCategories(className,classPK,assetCategoryIds);
  }
}

{
  Company company=CompanyLocalServiceUtil.getCompanyById(companyId);
  Group companyGroup=company.getGroup();
  javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.fromXML(companyId,ownerId,ownerType,plid,portletId,xml);
  Enumeration<String> enu=jxPreferences.getNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    String value=GetterUtil.getString(jxPreferences.getValue(name,null));
    String prefix="queryName";
    if (value.equalsIgnoreCase("assetCategories") && name.startsWith(prefix)) {
      String index=name.substring(prefix.length(),name.length());
      updateAssetPublisherClassPKs(portletDataContext,jxPreferences,"queryValues" + index,AssetCategory.class,portletDataContext.getScopeGroupId(),companyGroup.getGroupId());
    }
 else     if (name.equals("anyClassTypeJournalArticleAssetRendererFactory") || name.equals("classTypeIdsJournalArticleAssetRendererFactory") || name.equals("classTypeIds")) {
      updateAssetPublisherClassPKs(portletDataContext,jxPreferences,name,JournalStructure.class,portletDataContext.getScopeGroupId(),companyGroup.getGroupId());
    }
 else     if (name.equals("defaultScope") || name.equals("scopeIds")) {
      updateAssetPublisherGlobalScopeId(jxPreferences,name,companyGroup.getGroupId());
    }
  }
  return PortletPreferencesFactoryUtil.toXML(jxPreferences);
}

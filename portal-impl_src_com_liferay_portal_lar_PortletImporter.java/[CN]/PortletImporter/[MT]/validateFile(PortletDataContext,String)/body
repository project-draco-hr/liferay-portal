{
  readXML(portletDataContext);
  int buildNumber=ReleaseInfo.getBuildNumber();
  int importBuildNumber=GetterUtil.getInteger(_headerElement.attributeValue("build-number"));
  if (buildNumber != importBuildNumber) {
    throw new LayoutImportException("LAR build number " + importBuildNumber + " does not match "+ "portal build number "+ buildNumber);
  }
  String larType=_headerElement.attributeValue("type");
  if (!larType.equals("portlet")) {
    throw new LARTypeException(larType);
  }
  String rootPortletId=_headerElement.attributeValue("root-portlet-id");
  if (!PortletConstants.getRootPortletId(portletId).equals(rootPortletId)) {
    throw new PortletIdException("Invalid portlet id " + rootPortletId);
  }
  Portlet portlet=PortletLocalServiceUtil.getPortletById(portletDataContext.getCompanyId(),portletId);
  PortletDataHandler portletDataHandler=portlet.getPortletDataHandlerInstance();
  if (portletDataHandler.isDataLocalized()) {
    Locale[] sourceAvailableLocales=LocaleUtil.fromLanguageIds(StringUtil.split(_headerElement.attributeValue("available-locales")));
    Locale[] targetAvailableLocales=LanguageUtil.getAvailableLocales(PortalUtil.getSiteGroupId(portletDataContext.getScopeGroupId()));
    for (    Locale sourceAvailableLocale : sourceAvailableLocales) {
      if (!ArrayUtil.contains(targetAvailableLocales,sourceAvailableLocale)) {
        LocaleException le=new LocaleException(LocaleException.EXPORT_IMPORT,"Locale " + sourceAvailableLocale + " is not "+ "available in company "+ portletDataContext.getCompanyId());
        le.setSourceAvailableLocales(sourceAvailableLocales);
        le.setTargetAvailableLocales(targetAvailableLocales);
        throw le;
      }
    }
  }
}

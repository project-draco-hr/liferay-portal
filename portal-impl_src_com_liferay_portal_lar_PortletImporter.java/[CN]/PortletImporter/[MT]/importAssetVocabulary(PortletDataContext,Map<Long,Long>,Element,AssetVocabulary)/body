{
  long userId=portletDataContext.getUserId(assetVocabulary.getUserUuid());
  long groupId=portletDataContext.getScopeGroupId();
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setCreateDate(assetVocabulary.getCreateDate());
  serviceContext.setModifiedDate(assetVocabulary.getModifiedDate());
  serviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());
  AssetVocabulary importedAssetVocabulary=null;
  AssetVocabulary existingAssetVocabulary=AssetVocabularyUtil.fetchByUUID_G(assetVocabulary.getUuid(),groupId);
  if (existingAssetVocabulary == null) {
    existingAssetVocabulary=AssetVocabularyUtil.fetchByUUID_G(assetVocabulary.getUuid(),portletDataContext.getCompanyGroupId());
  }
  if (existingAssetVocabulary == null) {
    String name=getAssetVocabularyName(null,groupId,assetVocabulary.getName(),2);
    serviceContext.setUuid(assetVocabulary.getUuid());
    importedAssetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(userId,StringPool.BLANK,getAssetVocabularyTitleMap(assetVocabulary,name),assetVocabulary.getDescriptionMap(),assetVocabulary.getSettings(),serviceContext);
  }
 else   if (portletDataContext.isCompanyStagedGroupedModel(existingAssetVocabulary)) {
    return;
  }
 else {
    String name=getAssetVocabularyName(assetVocabulary.getUuid(),groupId,assetVocabulary.getName(),2);
    importedAssetVocabulary=AssetVocabularyLocalServiceUtil.updateVocabulary(existingAssetVocabulary.getVocabularyId(),StringPool.BLANK,getAssetVocabularyTitleMap(assetVocabulary,name),assetVocabulary.getDescriptionMap(),assetVocabulary.getSettings(),serviceContext);
  }
  assetVocabularyPKs.put(assetVocabulary.getVocabularyId(),importedAssetVocabulary.getVocabularyId());
  portletDataContext.importPermissions(AssetVocabulary.class,assetVocabulary.getVocabularyId(),importedAssetVocabulary.getVocabularyId());
}

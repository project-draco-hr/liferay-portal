{
  long userId=portletDataContext.getUserId(assetVocabulary.getUserUuid());
  long groupId=portletDataContext.getScopeGroupId();
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setCreateDate(assetVocabulary.getCreateDate());
  serviceContext.setModifiedDate(assetVocabulary.getModifiedDate());
  serviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());
  boolean global=GetterUtil.getBoolean(assetVocabularyElement.attributeValue("global"));
  if (global) {
    Group companyGroup=GroupLocalServiceUtil.getCompanyGroup(portletDataContext.getCompanyId());
    groupId=companyGroup.getGroupId();
  }
  AssetVocabulary importedAssetVocabulary=null;
  AssetVocabulary existingAssetVocabulary=AssetVocabularyUtil.fetchByUUID_G(assetVocabulary.getUuid(),groupId);
  if ((existingAssetVocabulary == null) && !global) {
    Group companyGroup=GroupLocalServiceUtil.getCompanyGroup(portletDataContext.getCompanyId());
    existingAssetVocabulary=AssetVocabularyUtil.fetchByUUID_G(assetVocabulary.getUuid(),companyGroup.getGroupId());
  }
  if (existingAssetVocabulary == null) {
    String name=getAssetVocabularyName(null,groupId,assetVocabulary.getName(),2);
    serviceContext.setUuid(assetVocabulary.getUuid());
    if (global) {
      if (AssetPermission.contains(PermissionThreadLocal.getPermissionChecker(),groupId,ActionKeys.ADD_VOCABULARY)) {
        serviceContext.setScopeGroupId(groupId);
      }
 else {
        _log.error("Vocabulary " + assetVocabulary.getName() + " could not be imported to the Global scope because"+ " the user doesn't have enough permissions. "+ "Importing it into the current scope.");
      }
    }
    importedAssetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(userId,StringPool.BLANK,getAssetVocabularyTitleMap(assetVocabulary,name),assetVocabulary.getDescriptionMap(),assetVocabulary.getSettings(),serviceContext);
  }
 else {
    String name=getAssetVocabularyName(assetVocabulary.getUuid(),groupId,assetVocabulary.getName(),2);
    boolean updateVocabulary=true;
    if (global) {
      PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
      if (permissionChecker.hasPermission(groupId,AssetVocabulary.class.getName(),existingAssetVocabulary.getVocabularyId(),ActionKeys.UPDATE)) {
        serviceContext.setScopeGroupId(groupId);
      }
 else {
        updateVocabulary=false;
      }
    }
    if (updateVocabulary) {
      importedAssetVocabulary=AssetVocabularyLocalServiceUtil.updateVocabulary(existingAssetVocabulary.getVocabularyId(),StringPool.BLANK,getAssetVocabularyTitleMap(assetVocabulary,name),assetVocabulary.getDescriptionMap(),assetVocabulary.getSettings(),serviceContext);
    }
 else {
      _log.error("Vocabulary " + existingAssetVocabulary.getName() + " could not be updated in the global scope because"+ " the user doesn't have enough permissions. Updating "+ "it in the current scope.");
    }
  }
  assetVocabularyPKs.put(assetVocabulary.getVocabularyId(),importedAssetVocabulary.getVocabularyId());
  portletDataContext.importPermissions(AssetVocabulary.class,assetVocabulary.getVocabularyId(),importedAssetVocabulary.getVocabularyId());
}

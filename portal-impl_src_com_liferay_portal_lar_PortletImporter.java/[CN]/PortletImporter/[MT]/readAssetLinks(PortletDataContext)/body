{
  String xml=portletDataContext.getZipEntryAsString(ExportImportPathUtil.getSourceRootPath(portletDataContext) + "/links.xml");
  if (xml == null) {
    return;
  }
  Document document=SAXReaderUtil.read(xml);
  Element rootElement=document.getRootElement();
  List<Element> assetLinkGroupElements=rootElement.elements("asset-link-group");
  for (  Element assetLinkGroupElement : assetLinkGroupElements) {
    List<Element> assetLinksElements=assetLinkGroupElement.elements("asset-link");
    String sourceUuid=assetLinkGroupElement.attributeValue("source-uuid");
    AssetEntry originAssetEntry=null;
    try {
      originAssetEntry=AssetEntryLocalServiceUtil.getEntry(portletDataContext.getScopeGroupId(),sourceUuid);
    }
 catch (    NoSuchEntryException nse) {
      _log.error("Unable to find asset entry with uuid " + sourceUuid);
      continue;
    }
    for (    Element assetLinkElement : assetLinksElements) {
      String path=assetLinkElement.attributeValue("path");
      String targetUuid=assetLinkElement.attributeValue("target-uuid");
      if (!portletDataContext.isPathNotProcessed(path)) {
        continue;
      }
      AssetEntry targetAssetEntry=null;
      try {
        targetAssetEntry=AssetEntryLocalServiceUtil.getEntry(portletDataContext.getScopeGroupId(),targetUuid);
      }
 catch (      NoSuchEntryException nse) {
        _log.warn("Unable to find asset entry with uuid " + targetUuid);
        continue;
      }
      AssetLink assetLink=(AssetLink)portletDataContext.getZipEntryAsObject(path);
      long userId=portletDataContext.getUserId(assetLink.getUserUuid());
      AssetLink existingLink=null;
      try {
        existingLink=AssetLinkLocalServiceUtil.getLink(portletDataContext.getScopeGroupId(),sourceUuid,targetUuid,assetLink.getType());
      }
 catch (      Exception e) {
      }
      if (existingLink == null) {
        AssetLinkLocalServiceUtil.addLink(userId,originAssetEntry.getEntryId(),targetAssetEntry.getEntryId(),assetLink.getType(),assetLink.getWeight());
      }
 else {
        AssetLinkLocalServiceUtil.updateLink(userId,originAssetEntry.getEntryId(),targetAssetEntry.getEntryId(),assetLink.getType(),assetLink.getWeight());
      }
    }
  }
}

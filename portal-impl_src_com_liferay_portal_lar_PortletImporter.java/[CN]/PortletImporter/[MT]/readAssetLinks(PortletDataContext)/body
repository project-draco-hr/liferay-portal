{
  String xml=portletDataContext.getZipEntryAsString(portletDataContext.getSourceRootPath() + "/links.xml");
  if (xml == null) {
    return;
  }
  Document document=SAXReaderUtil.read(xml);
  Element rootElement=document.getRootElement();
  List<Element> assetElements=rootElement.elements("asset-link");
  for (  Element assetElement : assetElements) {
    String sourceUuid=GetterUtil.getString(assetElement.attributeValue("source-uuid"));
    String[] assetEntryUuidArray=StringUtil.split(GetterUtil.getString(assetElement.attributeValue("target-uuids")));
    List<Long> entryIds=new ArrayList<Long>();
    for (    String assetEntryUuid : assetEntryUuidArray) {
      try {
        AssetEntry entry=AssetEntryLocalServiceUtil.getEntry(portletDataContext.getScopeGroupId(),assetEntryUuid);
        entryIds.add(entry.getEntryId());
      }
 catch (      NoSuchEntryException nsee) {
      }
    }
    if (entryIds.size() > 0) {
      long[] entryIdsArray=ArrayUtil.toArray(entryIds.toArray(new Long[entryIds.size()]));
      try {
        AssetEntry sourceEntry=AssetEntryLocalServiceUtil.getEntry(portletDataContext.getScopeGroupId(),sourceUuid);
        AssetLinkLocalServiceUtil.updateLinks(sourceEntry.getUserId(),sourceEntry.getEntryId(),entryIdsArray,AssetLinkConstants.TYPE_RELATED);
      }
 catch (      NoSuchEntryException nsee) {
      }
    }
  }
}

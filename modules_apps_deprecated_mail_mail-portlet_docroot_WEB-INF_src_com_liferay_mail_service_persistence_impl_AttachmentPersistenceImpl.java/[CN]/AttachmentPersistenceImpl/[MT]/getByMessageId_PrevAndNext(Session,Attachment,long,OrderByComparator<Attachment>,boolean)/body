{
  StringBundler query=null;
  if (orderByComparator != null) {
    query=new StringBundler(4 + (orderByComparator.getOrderByConditionFields().length * 3) + (orderByComparator.getOrderByFields().length * 3));
  }
 else {
    query=new StringBundler(3);
  }
  query.append(_SQL_SELECT_ATTACHMENT_WHERE);
  query.append(_FINDER_COLUMN_MESSAGEID_MESSAGEID_2);
  if (orderByComparator != null) {
    String[] orderByConditionFields=orderByComparator.getOrderByConditionFields();
    if (orderByConditionFields.length > 0) {
      query.append(WHERE_AND);
    }
    for (int i=0; i < orderByConditionFields.length; i++) {
      query.append(_ORDER_BY_ENTITY_ALIAS);
      query.append(orderByConditionFields[i]);
      if ((i + 1) < orderByConditionFields.length) {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(WHERE_GREATER_THAN_HAS_NEXT);
        }
 else {
          query.append(WHERE_LESSER_THAN_HAS_NEXT);
        }
      }
 else {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(WHERE_GREATER_THAN);
        }
 else {
          query.append(WHERE_LESSER_THAN);
        }
      }
    }
    query.append(ORDER_BY_CLAUSE);
    String[] orderByFields=orderByComparator.getOrderByFields();
    for (int i=0; i < orderByFields.length; i++) {
      query.append(_ORDER_BY_ENTITY_ALIAS);
      query.append(orderByFields[i]);
      if ((i + 1) < orderByFields.length) {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(ORDER_BY_ASC_HAS_NEXT);
        }
 else {
          query.append(ORDER_BY_DESC_HAS_NEXT);
        }
      }
 else {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(ORDER_BY_ASC);
        }
 else {
          query.append(ORDER_BY_DESC);
        }
      }
    }
  }
 else {
    query.append(AttachmentModelImpl.ORDER_BY_JPQL);
  }
  String sql=query.toString();
  Query q=session.createQuery(sql);
  q.setFirstResult(0);
  q.setMaxResults(2);
  QueryPos qPos=QueryPos.getInstance(q);
  qPos.add(messageId);
  if (orderByComparator != null) {
    Object[] values=orderByComparator.getOrderByConditionValues(attachment);
    for (    Object value : values) {
      qPos.add(value);
    }
  }
  List<Attachment> list=q.list();
  if (list.size() == 2) {
    return list.get(1);
  }
 else {
    return null;
  }
}

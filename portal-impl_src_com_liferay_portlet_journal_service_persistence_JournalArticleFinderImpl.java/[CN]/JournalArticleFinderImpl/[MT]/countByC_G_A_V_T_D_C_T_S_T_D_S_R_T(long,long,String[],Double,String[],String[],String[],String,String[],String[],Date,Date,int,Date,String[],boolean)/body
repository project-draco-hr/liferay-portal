{
  articleIds=CustomSQLUtil.keywords(articleIds,false);
  titles=CustomSQLUtil.keywords(titles);
  descriptions=CustomSQLUtil.keywords(descriptions,false);
  contents=CustomSQLUtil.keywords(contents,false);
  structureIds=CustomSQLUtil.keywords(structureIds,false);
  tags=CustomSQLUtil.keywords(tags,false);
  templateIds=CustomSQLUtil.keywords(templateIds,false);
  Timestamp displayDateGT_TS=CalendarUtil.getTimestamp(displayDateGT);
  Timestamp displayDateLT_TS=CalendarUtil.getTimestamp(displayDateLT);
  Timestamp reviewDate_TS=CalendarUtil.getTimestamp(reviewDate);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_C_G_A_V_T_D_C_T_S_T_D_S_R_T);
    if (Validator.isNotNull(tags[0])) {
      sql=StringUtil.replace(sql,"[$JOIN$]","LEFT JOIN AssetEntry ON " + "((JournalArticle.title = AssetEntry.title) AND " + "(JournalArticle.groupId = AssetEntry.groupId) AND "+ "(JournalArticle.companyId = AssetEntry.companyId) "+ "AND "+ "(JournalArticle.userId = AssetEntry.userId)) "+ "LEFT JOIN AssetEntries_AssetTags ON "+ "(AssetEntries_AssetTags.entryId = "+ "AssetEntry.entryId) "+ "LEFT JOIN AssetTag ON "+ "(AssetEntries_AssetTags.tagId = "+ "AssetTag.tagId)");
      sql=StringUtil.replace(sql,"[$WHERE$]","(AssetTag.name LIKE ? [$AND_OR_NULL_CHECK$]) " + "[$AND_OR_CONNECTOR$]");
    }
 else {
      sql=StringUtil.replace(sql,"[$JOIN$]","");
      sql=StringUtil.replace(sql,"[$WHERE$]","");
    }
    if (groupId <= 0) {
      sql=StringUtil.replace(sql,"(JournalArticle.groupId = ?) AND","");
    }
    sql=CustomSQLUtil.replaceKeywords(sql,"JournalArticle.articleId",StringPool.LIKE,false,articleIds);
    if (version == null) {
      sql=StringUtil.replace(sql,"(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]","");
    }
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(JournalArticle.title)",StringPool.LIKE,false,titles);
    sql=CustomSQLUtil.replaceKeywords(sql,"JournalArticle.description",StringPool.LIKE,false,descriptions);
    sql=CustomSQLUtil.replaceKeywords(sql,"JournalArticle.content",StringPool.LIKE,false,contents);
    if (Validator.isNotNull(tags[0])) {
      sql=CustomSQLUtil.replaceKeywords(sql,"AssetTag.name",StringPool.LIKE,false,tags);
    }
    sql=CustomSQLUtil.replaceKeywords(sql,"JournalArticle.structureId",StringPool.EQUAL,false,structureIds);
    sql=CustomSQLUtil.replaceKeywords(sql,"JournalArticle.templateId",StringPool.EQUAL,false,templateIds);
    if (status == StatusConstants.ANY) {
      sql=StringUtil.replace(sql,"(JournalArticle.status = ?) " + "AND","");
    }
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    if (groupId > 0) {
      qPos.add(groupId);
    }
    qPos.add(articleIds,2);
    if (version != null) {
      qPos.add(version);
    }
    qPos.add(titles,2);
    qPos.add(descriptions,2);
    qPos.add(contents,2);
    if (Validator.isNotNull(tags[0])) {
      qPos.add(tags,2);
    }
    qPos.add(type);
    qPos.add(type);
    qPos.add(structureIds,2);
    qPos.add(templateIds,2);
    qPos.add(displayDateGT_TS);
    qPos.add(displayDateGT_TS);
    qPos.add(displayDateLT_TS);
    qPos.add(displayDateLT_TS);
    if (status != StatusConstants.ANY) {
      qPos.add(status);
    }
    qPos.add(reviewDate_TS);
    qPos.add(reviewDate_TS);
    Iterator<Long> itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

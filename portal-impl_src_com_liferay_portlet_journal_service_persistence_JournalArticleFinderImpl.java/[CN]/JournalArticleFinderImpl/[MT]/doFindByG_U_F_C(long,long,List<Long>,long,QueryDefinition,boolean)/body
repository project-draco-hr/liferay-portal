{
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_G_U_F_C,queryDefinition,"JournalArticle");
    sql=CustomSQLUtil.replaceOrderBy(sql,queryDefinition.getOrderByComparator());
    if (folderIds.isEmpty()) {
      sql=StringUtil.replace(sql,"([$FOLDER_ID$]) AND",StringPool.BLANK);
    }
 else {
      sql=StringUtil.replace(sql,"[$FOLDER_ID$]",getFolderIds(folderIds,JournalArticleImpl.TABLE_NAME));
    }
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,JournalArticle.class.getName(),"JournalArticle.resourcePrimKey",groupId);
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity(JournalArticleImpl.TABLE_NAME,JournalArticleImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(classNameId);
    qPos.add(userId);
    for (    long folderId : folderIds) {
      qPos.add(folderId);
    }
    qPos.add(queryDefinition.getStatus());
    return (List<JournalArticle>)QueryUtil.list(q,getDialect(),queryDefinition.getStart(),queryDefinition.getEnd());
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  Properties p=new Properties();
  ClassLoader classLoader=getClass().getClassLoader();
  try {
    URL url=classLoader.getResource("system.properties");
    if (url != null) {
      InputStream is=url.openStream();
      p.load(is);
      is.close();
      System.out.println("Loading " + url);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    URL url=classLoader.getResource("system-ext.properties");
    if (url != null) {
      InputStream is=url.openStream();
      p.load(is);
      is.close();
      System.out.println("Loading " + url);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  SystemEnv.setProperties(p);
  boolean systemPropertiesLoad=GetterUtil.getBoolean(System.getProperty(SYSTEM_PROPERTIES_LOAD),true);
  boolean systemPropertiesFinal=GetterUtil.getBoolean(System.getProperty(SYSTEM_PROPERTIES_FINAL),true);
  if (systemPropertiesLoad) {
    Enumeration enu=p.propertyNames();
    while (enu.hasMoreElements()) {
      String key=(String)enu.nextElement();
      if (systemPropertiesFinal || Validator.isNull(System.getProperty(key))) {
        System.setProperty(key,(String)p.get(key));
      }
    }
  }
  boolean useTrove=false;
  if (GetterUtil.getBoolean(System.getProperty("trove"),true)) {
    try {
      Class.forName("gnu.trove.THashMap");
    }
 catch (    Exception e) {
      useTrove=false;
    }
  }
  if (useTrove) {
    _props=new SyncMap(new THashMap(),new WriterPreferenceReadWriteLock());
  }
 else {
    _props=new SyncMap(new HashMap(),new WriterPreferenceReadWriteLock());
  }
  PropertiesUtil.fromProperties(p,_props);
}

{
  List<UserNotificationEvent> userNotificationEvents=UserNotificationEventLocalServiceUtil.getUserNotificationEvents(getUserId());
  List<String> invalidNotificationEventUuids=new ArrayList<String>(_unconfirmedNotificationEvents.size());
  long currentTime=System.currentTimeMillis();
  for (  UserNotificationEvent persistedNotificationEvent : userNotificationEvents) {
    try {
      JSONObject payloadJSONObject=JSONFactoryUtil.createJSONObject(persistedNotificationEvent.getPayload());
      NotificationEvent notificationEvent=NotificationEventFactoryUtil.createNotificationEvent(persistedNotificationEvent.getTimestamp(),persistedNotificationEvent.getType(),payloadJSONObject);
      notificationEvent.setDeliveryRequired(persistedNotificationEvent.getDeliverBy());
      if (isRemoveNotificationEvent(notificationEvent,currentTime)) {
        invalidNotificationEventUuids.add(notificationEvent.getUuid());
      }
 else {
        _unconfirmedNotificationEvents.put(notificationEvent.getUuid(),notificationEvent);
      }
    }
 catch (    JSONException jsone) {
      _log.error(jsone,jsone);
      invalidNotificationEventUuids.add(persistedNotificationEvent.getUuid());
    }
  }
  if (!invalidNotificationEventUuids.isEmpty()) {
    UserNotificationEventLocalServiceUtil.deleteUserNotificationEvents(invalidNotificationEventUuids);
  }
}

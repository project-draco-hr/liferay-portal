{
  _reentrantLock.lock();
  try {
    long currentTime=System.currentTimeMillis();
    Iterator<NotificationEvent> itr1=_getNotificationEvents().iterator();
    while (itr1.hasNext()) {
      NotificationEvent notificationEvent=itr1.next();
      boolean remove=isRemoveNotificationEvent(notificationEvent,currentTime);
      if (remove) {
        itr1.remove();
      }
    }
    Map<String,NotificationEvent> unconfirmedNotificationEvents=_getUnconfirmedNotificationEvents();
    List<String> invalidNotificationEventUuids=new ArrayList<String>(unconfirmedNotificationEvents.size());
    Iterator<Map.Entry<String,NotificationEvent>> itr2=unconfirmedNotificationEvents.entrySet().iterator();
    while (itr2.hasNext()) {
      Map.Entry<String,NotificationEvent> entry=itr2.next();
      NotificationEvent notificationEvent=entry.getValue();
      if (isRemoveNotificationEvent(notificationEvent,currentTime)) {
        invalidNotificationEventUuids.add(entry.getKey());
        itr2.remove();
      }
    }
    if (PropsValues.USER_NOTIFICATION_EVENT_CONFIRMATION_ENABLED && !invalidNotificationEventUuids.isEmpty()) {
      UserNotificationEventLocalServiceUtil.deleteUserNotificationEvents(invalidNotificationEventUuids);
    }
  }
 catch (  Exception e) {
    throw new ChannelException("Unable to clean up channel " + getUserId(),e);
  }
 finally {
    _reentrantLock.unlock();
  }
}

{
  Session session=null;
  try {
    if (mbThread.isNew() || mbThread.isModified()) {
      session=openSession();
      if (mbThread.isNew()) {
        MBThreadHBM mbThreadHBM=new MBThreadHBM();
        mbThreadHBM.setThreadId(mbThread.getThreadId());
        mbThreadHBM.setRootMessageId(mbThread.getRootMessageId());
        mbThreadHBM.setTopicId(mbThread.getTopicId());
        mbThreadHBM.setMessageCount(mbThread.getMessageCount());
        mbThreadHBM.setViewCount(mbThread.getViewCount());
        mbThreadHBM.setLastPostDate(mbThread.getLastPostDate());
        session.save(mbThreadHBM);
        session.flush();
      }
 else {
        MBThreadHBM mbThreadHBM=(MBThreadHBM)session.get(MBThreadHBM.class,mbThread.getPrimaryKey());
        if (mbThreadHBM != null) {
          mbThreadHBM.setRootMessageId(mbThread.getRootMessageId());
          mbThreadHBM.setTopicId(mbThread.getTopicId());
          mbThreadHBM.setMessageCount(mbThread.getMessageCount());
          mbThreadHBM.setViewCount(mbThread.getViewCount());
          mbThreadHBM.setLastPostDate(mbThread.getLastPostDate());
          session.flush();
        }
 else {
          mbThreadHBM=new MBThreadHBM();
          mbThreadHBM.setThreadId(mbThread.getThreadId());
          mbThreadHBM.setRootMessageId(mbThread.getRootMessageId());
          mbThreadHBM.setTopicId(mbThread.getTopicId());
          mbThreadHBM.setMessageCount(mbThread.getMessageCount());
          mbThreadHBM.setViewCount(mbThread.getViewCount());
          mbThreadHBM.setLastPostDate(mbThread.getLastPostDate());
          session.save(mbThreadHBM);
          session.flush();
        }
      }
      mbThread.setNew(false);
      mbThread.setModified(false);
    }
    return mbThread;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

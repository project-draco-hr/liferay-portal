{
  portletDataContext.importPermissions(DLPermission.RESOURCE_NAME,portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Element fileEntryTypesElement=portletDataContext.getImportDataGroupElement(DLFileEntryType.class);
  List<Element> fileEntryTypeElements=fileEntryTypesElement.elements();
  for (  Element fileEntryTypeElement : fileEntryTypeElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,fileEntryTypeElement);
  }
  Element foldersElement=portletDataContext.getImportDataGroupElement(Folder.class);
  List<Element> folderElements=foldersElement.elements();
  for (  Element folderElement : folderElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,folderElement);
  }
  Element fileEntriesElement=portletDataContext.getImportDataGroupElement(FileEntry.class);
  List<Element> fileEntryElements=fileEntriesElement.elements();
  for (  Element fileEntryElement : fileEntryElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,fileEntryElement);
  }
  if (portletDataContext.getBooleanParameter(DLPortletDataHandler.NAMESPACE,"shortcuts")) {
    Element fileShortcutsElement=portletDataContext.getImportDataGroupElement(DLFileShortcut.class);
    List<Element> fileShortcutElements=fileShortcutsElement.elements();
    for (    Element fileShortcutElement : fileShortcutElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,fileShortcutElement);
    }
  }
  if (portletDataContext.getBooleanParameter(DLPortletDataHandler.NAMESPACE,"ranks")) {
    Element fileRanksElement=portletDataContext.getImportDataGroupElement(DLFileRank.class);
    List<Element> fileRankElements=fileRanksElement.elements();
    for (    Element fileRankElement : fileRankElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,fileRankElement);
    }
  }
  Element rootElement=portletDataContext.getImportDataRootElement();
  long rootFolderId=GetterUtil.getLong(rootElement.attributeValue("root-folder-id"));
  boolean defaultRepository=GetterUtil.getBoolean(rootElement.attributeValue("default-repository"),true);
  if (rootFolderId > 0) {
    Map<Long,Long> folderIds=null;
    if (defaultRepository) {
      folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Folder.class);
    }
 else {
      folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(RepositoryEntry.class);
    }
    rootFolderId=MapUtil.getLong(folderIds,rootFolderId,rootFolderId);
    portletPreferences.setValue("rootFolderId",String.valueOf(rootFolderId));
  }
  return portletPreferences;
}

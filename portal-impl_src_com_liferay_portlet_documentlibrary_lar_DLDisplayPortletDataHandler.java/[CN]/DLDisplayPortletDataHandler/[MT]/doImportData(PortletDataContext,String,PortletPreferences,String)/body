{
  portletDataContext.importPermissions("com.liferay.portlet.documentlibrary",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Element rootElement=portletDataContext.getImportDataRootElement();
  Element fileEntryTypesElement=rootElement.element("file-entry-types");
  List<Element> fileEntryTypeElements=fileEntryTypesElement.elements("file-entry-type");
  for (  Element fileEntryTypeElement : fileEntryTypeElements) {
    DLPortletDataHandler.importFileEntryType(portletDataContext,fileEntryTypeElement);
  }
  Element foldersElement=rootElement.element("folders");
  List<Element> folderElements=foldersElement.elements("folder");
  for (  Element folderElement : folderElements) {
    DLPortletDataHandler.importFolder(portletDataContext,folderElement);
  }
  Element fileEntriesElement=rootElement.element("file-entries");
  List<Element> fileEntryElements=fileEntriesElement.elements("file-entry");
  for (  Element fileEntryElement : fileEntryElements) {
    DLPortletDataHandler.importFileEntry(portletDataContext,fileEntryElement);
  }
  if (portletDataContext.getBooleanParameter(DLPortletDataHandler.NAMESPACE,"shortcuts")) {
    List<Element> fileShortcutElements=rootElement.element("file-shortcuts").elements("file-shortcut");
    for (    Element fileShortcutElement : fileShortcutElements) {
      DLPortletDataHandler.importFileShortcut(portletDataContext,fileShortcutElement);
    }
  }
  if (portletDataContext.getBooleanParameter(DLPortletDataHandler.NAMESPACE,"ranks")) {
    Element fileRanksElement=rootElement.element("file-ranks");
    List<Element> fileRankElements=fileRanksElement.elements("file-rank");
    for (    Element fileRankElement : fileRankElements) {
      DLPortletDataHandler.importFileRank(portletDataContext,fileRankElement);
    }
  }
  long rootFolderId=GetterUtil.getLong(rootElement.attributeValue("root-folder-id"));
  boolean defaultRepository=GetterUtil.getBoolean(rootElement.attributeValue("default-repository"),true);
  if (rootFolderId > 0) {
    Map<Long,Long> folderIds=null;
    if (defaultRepository) {
      folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DLFolder.class);
    }
 else {
      folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(RepositoryEntry.class);
    }
    rootFolderId=MapUtil.getLong(folderIds,rootFolderId,rootFolderId);
    portletPreferences.setValue("rootFolderId",String.valueOf(rootFolderId));
  }
  return portletPreferences;
}

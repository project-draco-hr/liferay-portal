{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  long templateId=ParamUtil.getLong(uploadPortletRequest,"templateId");
  long groupId=ParamUtil.getLong(uploadPortletRequest,"groupId");
  long templateClassNameId=ParamUtil.getLong(uploadPortletRequest,"templateClassNameId");
  long templateClassPK=ParamUtil.getLong(uploadPortletRequest,"templateClassPK");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  String type=ParamUtil.getString(uploadPortletRequest,"type");
  String mode=ParamUtil.getString(uploadPortletRequest,"mode");
  String language=ParamUtil.getString(uploadPortletRequest,"language",DDMTemplateConstants.LANG_TYPE_VM);
  String script=ParamUtil.getString(uploadPortletRequest,"script");
  String scriptContent=JS.decodeURIComponent(ParamUtil.getString(uploadPortletRequest,"scriptContent"));
  if (Validator.isNull(script)) {
    script=scriptContent;
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DDMTemplate.class.getName(),actionRequest);
  DDMTemplate template=null;
  if (templateId <= 0) {
    template=DDMTemplateServiceUtil.addTemplate(groupId,templateClassNameId,templateClassPK,nameMap,descriptionMap,type,mode,language,script,serviceContext);
  }
 else {
    template=DDMTemplateServiceUtil.updateTemplate(templateId,nameMap,descriptionMap,type,mode,language,script,serviceContext);
  }
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  if (Validator.isNotNull(portletResource)) {
    PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest,portletResource);
    if (type.equals(DDMTemplateConstants.TEMPLATE_TYPE_DETAIL)) {
      preferences.setValue("detailDDMTemplateId",String.valueOf(template.getTemplateId()));
    }
 else {
      preferences.setValue("listDDMTemplateId",String.valueOf(template.getTemplateId()));
    }
    preferences.store();
  }
  return template;
}

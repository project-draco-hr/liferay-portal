{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  String portletResource=ParamUtil.getString(uploadPortletRequest,"portletResource");
  PortletPreferences portletPreferences=null;
  if (Validator.isNotNull(portletResource)) {
    ThemeDisplay themeDisplay=(ThemeDisplay)uploadPortletRequest.getAttribute(WebKeys.THEME_DISPLAY);
    portletPreferences=PortletPreferencesFactoryUtil.getStrictPortletSetup(themeDisplay.getLayout(),portletResource);
    if (portletPreferences instanceof StrictPortletPreferencesImpl) {
      throw new PrincipalException();
    }
  }
  long templateId=ParamUtil.getLong(uploadPortletRequest,"templateId");
  long groupId=ParamUtil.getLong(uploadPortletRequest,"groupId");
  long classNameId=ParamUtil.getLong(uploadPortletRequest,"classNameId");
  long classPK=ParamUtil.getLong(uploadPortletRequest,"classPK");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  String type=ParamUtil.getString(uploadPortletRequest,"type");
  String mode=ParamUtil.getString(uploadPortletRequest,"mode");
  String language=ParamUtil.getString(uploadPortletRequest,"language",TemplateConstants.LANG_TYPE_VM);
  String script=getScript(uploadPortletRequest);
  String scriptContent=ParamUtil.getString(uploadPortletRequest,"scriptContent");
  if (Validator.isNull(script)) {
    script=scriptContent;
  }
  boolean cacheable=ParamUtil.getBoolean(uploadPortletRequest,"cacheable");
  boolean smallImage=ParamUtil.getBoolean(uploadPortletRequest,"smallImage");
  String smallImageURL=ParamUtil.getString(uploadPortletRequest,"smallImageURL");
  File smallImageFile=uploadPortletRequest.getFile("smallImageFile");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DDMTemplate.class.getName(),actionRequest);
  DDMTemplate template=null;
  if (templateId <= 0) {
    template=DDMTemplateServiceUtil.addTemplate(groupId,classNameId,classPK,null,nameMap,descriptionMap,type,mode,language,script,cacheable,smallImage,smallImageURL,smallImageFile,serviceContext);
  }
 else {
    template=DDMTemplateServiceUtil.updateTemplate(templateId,classPK,nameMap,descriptionMap,type,mode,language,script,cacheable,smallImage,smallImageURL,smallImageFile,serviceContext);
  }
  if (portletPreferences != null) {
    if (type.equals(DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY)) {
      portletPreferences.setValue("displayDDMTemplateId",String.valueOf(template.getTemplateId()));
    }
 else {
      portletPreferences.setValue("formDDMTemplateId",String.valueOf(template.getTemplateId()));
    }
    portletPreferences.store();
  }
  return template;
}

{
  _component=_dependencyManager.createComponent();
  _component.setImplementation(new ModuleApplicationContextRegistrator(_bundle,_bundleContext.getBundle(),_serviceConfigurator));
  BundleWiring bundleWiring=_bundle.adapt(BundleWiring.class);
  ClassLoader classLoader=bundleWiring.getClassLoader();
  List<ContextDependency> contextDependencies=_processServiceReferences(_bundle);
  for (  ContextDependency contextDependency : contextDependencies) {
    ServiceDependency serviceDependency=_dependencyManager.createServiceDependency();
    serviceDependency.setRequired(true);
    Class<?> serviceClass=Class.forName(contextDependency.getServiceClassName(),false,classLoader);
    serviceDependency.setService(serviceClass,contextDependency.getFilterString());
    _component.add(serviceDependency);
  }
  Dictionary<String,String> headers=_bundle.getHeaders();
  String requireSchemaVersion=headers.get("Require-SchemaVersion");
  if (Validator.isNull(GetterUtil.getString(requireSchemaVersion))) {
    ServiceDependency serviceDependency=_dependencyManager.createServiceDependency();
    serviceDependency.setRequired(true);
    serviceDependency.setService(Release.class,"(&(release.bundle.symbolic.name=" + _bundle.getSymbolicName() + ")(release.schema.version="+ _bundle.getVersion()+ "))");
    _component.add(serviceDependency);
  }
  _dependencyManager.add(_component);
  _upgradeStepsRegistrations=_installInitialUpgrade();
}

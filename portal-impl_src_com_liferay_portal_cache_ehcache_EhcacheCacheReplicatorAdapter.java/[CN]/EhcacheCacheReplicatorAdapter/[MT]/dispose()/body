{
  super.dispose();
  if (!(cacheEventListener instanceof RMIAsynchronousCacheReplicator)) {
    return;
  }
  RMIAsynchronousCacheReplicator asynchronousCacheReplicator=(RMIAsynchronousCacheReplicator)cacheEventListener;
  try {
    Thread replicationThread=(Thread)_REPLICATION_THREAD_FIELD.get(asynchronousCacheReplicator);
    replicationThread.interrupt();
    replicationThread.join(_WAIT_TIME);
    if (replicationThread.isAlive() && _log.isWarnEnabled()) {
      _log.warn("Give up waiting on thread " + replicationThread + " after waiting for "+ _WAIT_TIME+ "ms");
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to dispose cache event listener " + cacheEventListener,e);
    }
  }
}

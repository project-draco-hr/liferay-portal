{
  velocityContext.put("request",request);
  PortletConfigImpl portletConfigImpl=(PortletConfigImpl)request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);
  if (portletConfigImpl != null) {
    velocityContext.put("portletConfig",portletConfigImpl);
  }
  PortletRequest portletRequest=(PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
  if (portletRequest != null) {
    if (portletRequest instanceof RenderRequest) {
      velocityContext.put("renderRequest",portletRequest);
    }
  }
  PortletResponse portletResponse=(PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  if (portletResponse != null) {
    if (portletResponse instanceof RenderResponse) {
      velocityContext.put("renderResponse",portletResponse);
    }
  }
  if ((portletRequest != null) && (portletResponse != null)) {
    String xmlRequest=PortletRequestUtil.toXML(portletRequest,portletResponse);
    velocityContext.put("xmlRequest",xmlRequest);
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  if (themeDisplay != null) {
    Theme theme=themeDisplay.getTheme();
    Layout layout=themeDisplay.getLayout();
    List<Layout> layouts=themeDisplay.getLayouts();
    velocityContext.put("themeDisplay",themeDisplay);
    velocityContext.put("company",themeDisplay.getCompany());
    velocityContext.put("user",themeDisplay.getUser());
    velocityContext.put("realUser",themeDisplay.getRealUser());
    velocityContext.put("layout",layout);
    velocityContext.put("layouts",layouts);
    velocityContext.put("plid",String.valueOf(themeDisplay.getPlid()));
    velocityContext.put("layoutTypePortlet",themeDisplay.getLayoutTypePortlet());
    velocityContext.put("scopeGroupId",new Long(themeDisplay.getScopeGroupId()));
    velocityContext.put("permissionChecker",themeDisplay.getPermissionChecker());
    velocityContext.put("locale",themeDisplay.getLocale());
    velocityContext.put("timeZone",themeDisplay.getTimeZone());
    velocityContext.put("theme",theme);
    velocityContext.put("colorScheme",themeDisplay.getColorScheme());
    velocityContext.put("portletDisplay",themeDisplay.getPortletDisplay());
    if (layout != null) {
      RequestVars requestVars=new RequestVars(request,themeDisplay,layout.getAncestorPlid(),layout.getAncestorLayoutId());
      List<NavItem> navItems=NavItem.fromLayouts(requestVars,layouts);
      velocityContext.put("navItems",navItems);
    }
    String servletContextName=GetterUtil.getString(theme.getServletContextName());
    velocityContext.put("fullCssPath",servletContextName + theme.getVelocityResourceListener() + theme.getCssPath());
    velocityContext.put("fullTemplatesPath",servletContextName + theme.getVelocityResourceListener() + theme.getTemplatesPath());
    velocityContext.put("init",themeDisplay.getPathContext() + VelocityResourceListener.SERVLET_SEPARATOR + "/html/themes/_unstyled/templates/init.vm");
    velocityContext.put("portletGroupId",new Long(themeDisplay.getScopeGroupId()));
  }
  String tilesTitle=_insertTilesVariables(velocityContext,request,"tilesTitle","title");
  String tilesContent=_insertTilesVariables(velocityContext,request,"tilesContent","content");
  boolean tilesSelectable=GetterUtil.getBoolean(_insertTilesVariables(velocityContext,request,"tilesSelectable","selectable"));
  if (themeDisplay != null) {
    themeDisplay.setTilesTitle(tilesTitle);
    themeDisplay.setTilesContent(tilesContent);
    themeDisplay.setTilesSelectable(tilesSelectable);
  }
  velocityContext.put("pageTitle",request.getAttribute(WebKeys.PAGE_TITLE));
  velocityContext.put("pageSubtitle",request.getAttribute(WebKeys.PAGE_SUBTITLE));
  insertHelperUtilities(velocityContext,null);
  Map<String,Object> vmVariables=(Map<String,Object>)request.getAttribute(WebKeys.VM_VARIABLES);
  if (vmVariables != null) {
    for (    Map.Entry<String,Object> entry : vmVariables.entrySet()) {
      String key=entry.getKey();
      Object value=entry.getValue();
      if (Validator.isNotNull(key)) {
        velocityContext.put(key,value);
      }
    }
  }
}

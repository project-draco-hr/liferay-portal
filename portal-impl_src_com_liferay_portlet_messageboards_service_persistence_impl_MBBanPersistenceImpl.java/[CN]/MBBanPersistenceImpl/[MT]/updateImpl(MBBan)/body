{
  mbBan=toUnwrappedModel(mbBan);
  boolean isNew=mbBan.isNew();
  MBBanModelImpl mbBanModelImpl=(MBBanModelImpl)mbBan;
  if (Validator.isNull(mbBan.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    mbBan.setUuid(uuid);
  }
  if (!ExportImportThreadLocal.isImportInProcess()) {
    ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
    Date now=new Date();
    if (isNew && (mbBan.getCreateDate() == null)) {
      if (serviceContext == null) {
        mbBan.setCreateDate(now);
      }
 else {
        mbBan.setCreateDate(serviceContext.getCreateDate(now));
      }
    }
    if (!mbBanModelImpl.hasSetModifiedDate()) {
      if (serviceContext == null) {
        mbBan.setModifiedDate(now);
      }
 else {
        mbBan.setModifiedDate(serviceContext.getModifiedDate(now));
      }
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (mbBan.isNew()) {
      session.save(mbBan);
      mbBan.setNew(false);
    }
 else {
      session.merge(mbBan);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !MBBanModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((mbBanModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mbBanModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{mbBanModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((mbBanModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mbBanModelImpl.getOriginalUuid(),mbBanModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{mbBanModelImpl.getUuid(),mbBanModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((mbBanModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mbBanModelImpl.getOriginalGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{mbBanModelImpl.getGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((mbBanModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mbBanModelImpl.getOriginalUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{mbBanModelImpl.getUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((mbBanModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BANUSERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mbBanModelImpl.getOriginalBanUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_BANUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BANUSERID,args);
      args=new Object[]{mbBanModelImpl.getBanUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_BANUSERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BANUSERID,args);
    }
  }
  EntityCacheUtil.putResult(MBBanModelImpl.ENTITY_CACHE_ENABLED,MBBanImpl.class,mbBan.getPrimaryKey(),mbBan,false);
  clearUniqueFindersCache(mbBan);
  cacheUniqueFindersCache(mbBan);
  mbBan.resetOriginalValues();
  return mbBan;
}

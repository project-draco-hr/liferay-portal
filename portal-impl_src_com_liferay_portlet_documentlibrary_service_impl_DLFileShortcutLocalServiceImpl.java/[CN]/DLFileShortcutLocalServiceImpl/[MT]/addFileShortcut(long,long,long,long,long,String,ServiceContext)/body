{
  User user=userPersistence.findByPrimaryKey(userId);
  folderId=getFolderId(user.getCompanyId(),folderId);
  Date now=new Date();
  validate(user,toGroupId,toFolderId,toName);
  long fileShortcutId=counterLocalService.increment();
  DLFileShortcut fileShortcut=dlFileShortcutPersistence.create(fileShortcutId);
  fileShortcut.setUuid(serviceContext.getUuid());
  fileShortcut.setGroupId(groupId);
  fileShortcut.setToGroupId(toGroupId);
  fileShortcut.setCompanyId(user.getCompanyId());
  fileShortcut.setUserId(user.getUserId());
  fileShortcut.setUserName(user.getFullName());
  fileShortcut.setCreateDate(serviceContext.getCreateDate(now));
  fileShortcut.setModifiedDate(serviceContext.getModifiedDate(now));
  fileShortcut.setFolderId(folderId);
  fileShortcut.setToFolderId(toFolderId);
  fileShortcut.setToName(toName);
  fileShortcut.setStatus(WorkflowConstants.STATUS_APPROVED);
  fileShortcut.setStatusByUserId(userId);
  fileShortcut.setStatusByUserName(user.getFullName());
  fileShortcut.setStatusDate(now);
  dlFileShortcutPersistence.update(fileShortcut,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addFileShortcutResources(fileShortcut,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addFileShortcutResources(fileShortcut,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    DLFolder folder=dlFolderPersistence.findByPrimaryKey(folderId);
    folder.setLastPostDate(fileShortcut.getModifiedDate());
    dlFolderPersistence.update(folder,false);
  }
  DLFileEntry fileEntry=dlAppLocalService.getFileEntry(toGroupId,toFolderId,toName);
  copyAssetTags(fileEntry,serviceContext);
  updateAsset(userId,fileShortcut,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  return fileShortcut;
}

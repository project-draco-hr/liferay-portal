{
  List<String> communityDefaultActions=ResourceActionsUtil.getModelResourceCommunityDefaultActions(name);
  List<String> guestDefaultActions=ResourceActionsUtil.getModelResourceGuestDefaultActions(name);
  List<Resource> resources=resourceFinder.findByN_S(name,ResourceConstants.SCOPE_INDIVIDUAL);
  for (  Resource resource : resources) {
    for (    String actionId : actionIds) {
      Permission permission=permissionPersistence.fetchByA_R(actionId,resource.getResourceId());
      if (permission == null) {
        try {
          long permissionId=counterLocalService.increment(Permission.class.getName());
          permission=permissionPersistence.create(permissionId);
          permission.setCompanyId(resource.getCompanyId());
          permission.setActionId(actionId);
          permission.setResourceId(resource.getResourceId());
          permissionPersistence.update(permission,false);
          if (communityDefaultActions.contains(actionId)) {
            addRolePermissions(RoleConstants.COMMUNITY_MEMBER,permission);
          }
          if (guestDefaultActions.contains(actionId)) {
            addRolePermissions(RoleConstants.GUEST,permission);
          }
          addRolePermissions(RoleConstants.OWNER,permission);
          PermissionCacheUtil.clearCache();
          SearchEngineUtil.updatePermissionFields(resource.getResourceId());
        }
 catch (        PortalException pe) {
          _log.error(pe,pe);
        }
      }
    }
  }
}

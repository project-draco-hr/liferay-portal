{
  ResourceCode resourceCode=resourceCodePersistence.fetchByC_N_S(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL);
  if (resourceCode == null) {
    return;
  }
  long classNameId=0;
  Role role=rolePersistence.findByC_N(companyId,roleName);
  if (role.getType() == RoleConstants.TYPE_ORGANIZATION) {
    classNameId=PortalUtil.getClassNameId(Organization.class);
  }
 else   if (role.getType() == RoleConstants.TYPE_SITE) {
    classNameId=PortalUtil.getClassNameId(Group.class);
  }
  List<Resource> resources=resourceFinder.findByContainerResource(resourceCode.getCodeId(),classNameId);
  if (resources.isEmpty()) {
    return;
  }
  List<Permission> permissions=new ArrayList<Permission>(resources.size());
  for (  Resource resource : resources) {
    Permission permission=permissionPersistence.fetchByA_R(actionId,resource.getResourceId());
    if (permission == null) {
      long permissionId=counterLocalService.increment(Permission.class.getName());
      permission=permissionPersistence.create(permissionId);
      permission.setCompanyId(companyId);
      permission.setActionId(actionId);
      permission.setResourceId(resource.getResourceId());
      permissionPersistence.update(permission,false);
    }
    permissions.add(permission);
  }
  if ((PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) || !roleName.equals(RoleConstants.GUEST)) {
    rolePersistence.addPermissions(role.getRoleId(),permissions);
  }
 else {
    long defaultUserId=userLocalService.getDefaultUserId(companyId);
    userPersistence.addPermissions(defaultUserId,permissions);
  }
}

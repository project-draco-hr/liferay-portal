{
  User user=userPersistence.findByPrimaryKey(userId);
  DDLRecord record=ddlRecordPersistence.findByPrimaryKey(recordId);
  record.setModifiedDate(serviceContext.getModifiedDate(null));
  ddlRecordPersistence.update(record);
  includeDDMFormFieldValueLocales(ddmFormValues);
  DDLRecordVersion recordVersion=record.getLatestRecordVersion();
  if (recordVersion.isApproved()) {
    DDLRecordSet recordSet=record.getRecordSet();
    long ddmStorageId=StorageEngineUtil.create(recordSet.getCompanyId(),recordSet.getDDMStructureId(),ddmFormValues,serviceContext);
    String version=getNextVersion(recordVersion.getVersion(),majorVersion,serviceContext.getWorkflowAction());
    recordVersion=addRecordVersion(user,record,ddmStorageId,version,displayIndex,WorkflowConstants.STATUS_DRAFT);
  }
 else {
    StorageEngineUtil.update(recordVersion.getDDMStorageId(),ddmFormValues,serviceContext);
    String version=recordVersion.getVersion();
    updateRecordVersion(user,recordVersion,version,displayIndex,recordVersion.getStatus(),serviceContext);
  }
  if (isKeepRecordVersionLabel(record.getRecordVersion(),recordVersion,serviceContext)) {
    ddlRecordVersionPersistence.remove(recordVersion);
    StorageEngineUtil.deleteByClass(recordVersion.getDDMStorageId());
    return record;
  }
  WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),record.getGroupId(),userId,DDLRecord.class.getName(),recordVersion.getRecordVersionId(),recordVersion,serviceContext);
  return record;
}

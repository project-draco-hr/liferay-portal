{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  String tempFilename="temp-db-EmailAddress-" + System.currentTimeMillis();
  try {
    con=HibernateUtil.getConnection();
    ps=con.prepareStatement(_SELECT_EMAIL_ADDRESS);
    rs=ps.executeQuery();
    while (rs.next()) {
      StringBuffer sb=new StringBuffer();
      long emailAddressId=CounterLocalServiceUtil.increment(Counter.class.getName());
      appendColumn(sb,new Long(emailAddressId));
      for (int i=1; i < _COLUMNS.length; i++) {
        boolean last=(i == _COLUMNS.length - 1);
        appendColumn(sb,rs,(String)_COLUMNS[i][0],(Integer)_COLUMNS[i][1],last);
      }
      FileUtil.append(tempFilename,sb.toString());
    }
    _log.info("EmailAddress table backed up to file " + tempFilename);
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
  Statement stmt=null;
  try {
    con=HibernateUtil.getConnection();
    stmt=con.createStatement();
    stmt.executeUpdate(_DELETE_EMAIL_ADDRESS);
  }
  finally {
    DataAccess.cleanUp(con,stmt);
  }
  BufferedReader br=new BufferedReader(new FileReader(tempFilename));
  String line=null;
  try {
    con=HibernateUtil.getConnection();
    while ((line=br.readLine()) != null) {
      String[] values=StringUtil.split(line);
      if (values.length != _COLUMNS.length) {
        throw new UpgradeException("Columns differ between temp file and schema");
      }
      ps=con.prepareStatement(_INSERT_EMAIL_ADDRESS);
      for (int i=0; i < values.length; i++) {
        setColumn(ps,i + 1,(Integer)_COLUMNS[i][1],values[i]);
      }
      ps.executeUpdate();
      ps.close();
    }
  }
  finally {
    DataAccess.cleanUp(con,ps);
  }
  FileUtil.delete(tempFilename);
  _log.info("EmailAddress table repopulated with data");
}

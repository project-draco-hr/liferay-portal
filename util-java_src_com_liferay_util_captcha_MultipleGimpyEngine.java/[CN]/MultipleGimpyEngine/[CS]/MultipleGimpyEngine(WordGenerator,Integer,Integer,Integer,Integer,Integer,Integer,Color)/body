{
  AbstractBackgroundGenerator[] backgrounds=new AbstractBackgroundGenerator[]{new EllipseBackgroundGenerator(width,height),new FunkyBackgroundGenerator(width,height),new MultipleShapeBackgroundGenerator(width,height)};
  AbstractFontGenerator[] fonts=new AbstractFontGenerator[]{new RandomFontGenerator(minFontSize,maxFontSize),new TwistedAndShearedRandomFontGenerator(minFontSize,maxFontSize),new TwistedRandomFontGenerator(minFontSize,maxFontSize)};
  AbstractTextPaster[] pasters=new AbstractTextPaster[]{new DoubleRandomTextPaster(minWordLength,maxWordLength,textColor),new RandomTextPaster(minWordLength,maxWordLength,textColor),new SimpleTextPaster(minWordLength,maxWordLength,textColor)};
  int combinations=backgrounds.length * fonts.length * pasters.length;
  _factories=new ImageCaptchaFactory[combinations];
  for (int i=0; i < combinations; i++) {
    int backgroundsPos=i / (fonts.length * pasters.length);
    int fontsPos=i / pasters.length;
    if (fontsPos >= fonts.length) {
      fontsPos=fontsPos % fonts.length;
    }
    int pastersPos=i;
    if (pastersPos >= pasters.length) {
      pastersPos=pastersPos % pasters.length;
    }
    WordToImage wordToImage=new ComposedWordToImage(fonts[fontsPos],backgrounds[backgroundsPos],pasters[pastersPos]);
    _factories[i]=new GimpyFactory(wordGenerator,wordToImage);
  }
}

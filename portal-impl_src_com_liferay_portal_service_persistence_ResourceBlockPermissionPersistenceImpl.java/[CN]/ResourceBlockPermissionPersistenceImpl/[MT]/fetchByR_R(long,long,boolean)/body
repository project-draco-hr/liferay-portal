{
  Object[] finderArgs=new Object[]{resourceBlockId,roleId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_R_R,finderArgs,this);
  }
  if (result instanceof ResourceBlockPermission) {
    ResourceBlockPermission resourceBlockPermission=(ResourceBlockPermission)result;
    if ((resourceBlockId != resourceBlockPermission.getResourceBlockId()) || (roleId != resourceBlockPermission.getRoleId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_RESOURCEBLOCKPERMISSION_WHERE);
    query.append(_FINDER_COLUMN_R_R_RESOURCEBLOCKID_2);
    query.append(_FINDER_COLUMN_R_R_ROLEID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(resourceBlockId);
      qPos.add(roleId);
      List<ResourceBlockPermission> list=q.list();
      result=list;
      ResourceBlockPermission resourceBlockPermission=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_R,finderArgs,list);
      }
 else {
        resourceBlockPermission=list.get(0);
        cacheResult(resourceBlockPermission);
        if ((resourceBlockPermission.getResourceBlockId() != resourceBlockId) || (resourceBlockPermission.getRoleId() != roleId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_R,finderArgs,resourceBlockPermission);
        }
      }
      return resourceBlockPermission;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_R_R,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (ResourceBlockPermission)result;
    }
  }
}

{
  scFrameworkVersion=toUnwrappedModel(scFrameworkVersion);
  boolean isNew=scFrameworkVersion.isNew();
  SCFrameworkVersionModelImpl scFrameworkVersionModelImpl=(SCFrameworkVersionModelImpl)scFrameworkVersion;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (scFrameworkVersion.getCreateDate() == null)) {
    if (serviceContext == null) {
      scFrameworkVersion.setCreateDate(now);
    }
 else {
      scFrameworkVersion.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!scFrameworkVersionModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      scFrameworkVersion.setModifiedDate(now);
    }
 else {
      scFrameworkVersion.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (scFrameworkVersion.isNew()) {
      session.save(scFrameworkVersion);
      scFrameworkVersion.setNew(false);
    }
 else {
      scFrameworkVersion=(SCFrameworkVersion)session.merge(scFrameworkVersion);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !SCFrameworkVersionModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((scFrameworkVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scFrameworkVersionModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{scFrameworkVersionModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((scFrameworkVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scFrameworkVersionModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{scFrameworkVersionModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((scFrameworkVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scFrameworkVersionModelImpl.getOriginalGroupId(),scFrameworkVersionModelImpl.getOriginalActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_A,args);
      args=new Object[]{scFrameworkVersionModelImpl.getGroupId(),scFrameworkVersionModelImpl.getActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_A,args);
    }
  }
  entityCache.putResult(SCFrameworkVersionModelImpl.ENTITY_CACHE_ENABLED,SCFrameworkVersionImpl.class,scFrameworkVersion.getPrimaryKey(),scFrameworkVersion,false);
  scFrameworkVersion.resetOriginalValues();
  return scFrameworkVersion;
}

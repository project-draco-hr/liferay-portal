{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    StringBuilder sb=new StringBuilder();
    sb.append("SELECT * FROM Permission_ P, Resource_ R, ");
    sb.append("ResourceCode RC WHERE (");
    for (int i=0; i < actionIds.length; i++) {
      String actionId=actionIds[i];
      sb.append("actionId='");
      sb.append(actionId);
      sb.append("'");
      if (i < (actionIds.length - 1)) {
        sb.append(" OR ");
      }
    }
    sb.append(") AND P.resourceId=R.resourceId AND R.codeId=RC.codeId");
    sb.append(" AND RC.name=? and RC.scope=4");
    ps=con.prepareStatement(sb.toString());
    ps.setString(1,portletName);
    rs=ps.executeQuery();
    while (rs.next()) {
      long permissionId=rs.getLong("P.permissionId");
      String primKey=rs.getString("R.primKey");
      String actionId=rs.getString("P.actionId");
      long companyId=rs.getLong("RC.companyId");
      int scope=rs.getInt("RC.scope");
      try {
        long plid=GetterUtil.getLong(primKey.substring(0,primKey.indexOf("_LAYOUT_")));
        Layout layout=LayoutLocalServiceUtil.getLayout(plid);
        String resourcePrimKey=String.valueOf(layout.getGroupId());
        Resource resource=ResourceLocalServiceUtil.addResource(companyId,modelName,scope,resourcePrimKey);
        ps=con.prepareStatement("select COUNT(*) as COUNT_VALUE FROM Permission_ P, " + "Resource_ R, ResourceCode RC WHERE actionId=? " + "and R.resourceId=P.resourceId AND "+ "R.resourceId=? AND RC.codeId=R.codeId "+ "and name=? and scope=4");
        ps.setString(1,actionId);
        ps.setLong(2,resource.getResourceId());
        ps.setString(3,modelName);
        ResultSet rs2=ps.executeQuery();
        rs2.next();
        if (rs2.getInt("COUNT_VALUE") == 0) {
          Permission permission=PermissionLocalServiceUtil.getPermission(permissionId);
          permission.setResourceId(resource.getResourceId());
          PermissionLocalServiceUtil.updatePermission(permission);
        }
 else {
          PermissionLocalServiceUtil.deletePermission(permissionId);
        }
        rs2.close();
        ps.close();
      }
 catch (      Exception e) {
        _log.error("Error upgrading permission " + permissionId,e);
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

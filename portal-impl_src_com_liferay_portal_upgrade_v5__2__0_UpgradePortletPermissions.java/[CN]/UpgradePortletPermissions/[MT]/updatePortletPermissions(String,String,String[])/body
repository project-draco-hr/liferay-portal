{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    StringBuilder sb=new StringBuilder();
    sb.append("select Permission_.permissionId, ");
    sb.append("Permission_.actionId, Resource_.primKey, ");
    sb.append("ResourceCode.scope from Permission_ ");
    sb.append("inner join Resource_ on Resource_.resourceId = ");
    sb.append("Permission_.resourceId inner join ResourceCode on ");
    sb.append("ResourceCode.codeId = Resource_.codeId where (");
    for (int i=0; i < actionIds.length; i++) {
      String actionId=actionIds[i];
      sb.append("Permission_.actionId = '");
      sb.append(actionId);
      sb.append("'");
      if (i < (actionIds.length - 1)) {
        sb.append(" or ");
      }
    }
    sb.append(") and ResourceCode.name = ? and ResourceCode.scope = ?");
    ps=con.prepareStatement(sb.toString());
    ps.setString(1,portletName);
    ps.setInt(2,ResourceConstants.SCOPE_INDIVIDUAL);
    rs=ps.executeQuery();
    while (rs.next()) {
      long permissionId=rs.getLong("Permission_.permissionId");
      String actionId=rs.getString("Permission_.actionId");
      String primKey=rs.getString("Resource_.primKey");
      int scope=rs.getInt("ResourceCode.scope");
      try {
        updatePortletPermission(permissionId,actionId,primKey,modelName,scope);
      }
 catch (      Exception e) {
        _log.error("Uanble to upgrade permission " + permissionId,e);
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

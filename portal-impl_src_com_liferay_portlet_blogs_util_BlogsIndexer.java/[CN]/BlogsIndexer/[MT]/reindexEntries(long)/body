{
  final Collection<Document> documents=new ArrayList<Document>();
  ActionableDynamicQuery actionableDynamicQuery=new BaseActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      Property displayDateProperty=PropertyFactoryUtil.forName("displayDate");
      dynamicQuery.add(displayDateProperty.lt(new Date()));
      Property statusProperty=PropertyFactoryUtil.forName("status");
      Integer[] statuses={WorkflowConstants.STATUS_APPROVED,WorkflowConstants.STATUS_IN_TRASH};
      dynamicQuery.add(statusProperty.in(statuses));
    }
    @Override protected void performAction(    Object object) throws PortalException {
      BlogsEntry entry=(BlogsEntry)object;
      Document document=getDocument(entry);
      documents.add(document);
    }
  }
;
  actionableDynamicQuery.setBaseLocalService(BlogsEntryLocalServiceUtil.getService());
  actionableDynamicQuery.setClass(BlogsEntry.class);
  actionableDynamicQuery.setClassLoader(PACLClassLoaderUtil.getPortalClassLoader());
  actionableDynamicQuery.setCompanyId(companyId);
  actionableDynamicQuery.setPrimaryKeyPropertyName("entryId");
  actionableDynamicQuery.performActions();
  SearchEngineUtil.updateDocuments(getSearchEngineId(),companyId,documents);
}

{
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(BlogsEntry.class,PACLClassLoaderUtil.getPortalClassLoader());
  Projection minEntryIdProjection=ProjectionFactoryUtil.min("entryId");
  Projection maxEntryIdProjection=ProjectionFactoryUtil.max("entryId");
  ProjectionList projectionList=ProjectionFactoryUtil.projectionList();
  projectionList.add(minEntryIdProjection);
  projectionList.add(maxEntryIdProjection);
  dynamicQuery.setProjection(projectionList);
  addReindexCriteria(dynamicQuery,companyId);
  List<Object[]> results=BlogsEntryLocalServiceUtil.dynamicQuery(dynamicQuery);
  Object[] minAndMaxEntryIds=results.get(0);
  if ((minAndMaxEntryIds[0] == null) || (minAndMaxEntryIds[1] == null)) {
    return;
  }
  long minEntryId=(Long)minAndMaxEntryIds[0];
  long maxEntryId=(Long)minAndMaxEntryIds[1];
  long startEntryId=minEntryId;
  long endEntryId=startEntryId + DEFAULT_INTERVAL;
  while (startEntryId <= maxEntryId) {
    reindexEntries(companyId,startEntryId,endEntryId);
    startEntryId=endEntryId;
    endEntryId+=DEFAULT_INTERVAL;
  }
}

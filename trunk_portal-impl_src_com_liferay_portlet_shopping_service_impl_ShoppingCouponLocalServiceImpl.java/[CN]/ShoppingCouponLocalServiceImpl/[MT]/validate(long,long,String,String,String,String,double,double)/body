{
  if (Validator.isNull(name)) {
    throw new CouponNameException();
  }
 else   if (Validator.isNull(description)) {
    throw new CouponDescriptionException();
  }
  long[] categoryIds=StringUtil.split(limitCategories,0L);
  List<Long> invalidCategoryIds=new ArrayList<Long>();
  for (  long categoryId : categoryIds) {
    ShoppingCategory category=shoppingCategoryPersistence.fetchByPrimaryKey(categoryId);
    if ((category == null) || (category.getGroupId() != groupId)) {
      invalidCategoryIds.add(categoryId);
    }
  }
  if (invalidCategoryIds.size() > 0) {
    CouponLimitCategoriesException clce=new CouponLimitCategoriesException();
    clce.setCategoryIds(invalidCategoryIds);
    throw clce;
  }
  String[] skus=StringUtil.split(limitSkus);
  List<String> invalidSkus=new ArrayList<String>();
  for (  String sku : skus) {
    ShoppingItem item=shoppingItemPersistence.fetchByC_S(companyId,sku);
    if (item != null) {
      ShoppingCategory category=item.getCategory();
      if (category.getGroupId() != groupId) {
        invalidSkus.add(sku);
      }
    }
 else {
      invalidSkus.add(sku);
    }
  }
  if (invalidSkus.size() > 0) {
    CouponLimitSKUsException clskue=new CouponLimitSKUsException();
    clskue.setSkus(invalidSkus);
    throw clskue;
  }
  if (minOrder < 0) {
    throw new CouponMinimumOrderException();
  }
  if (discount < 0) {
    throw new CouponDiscountException();
  }
}

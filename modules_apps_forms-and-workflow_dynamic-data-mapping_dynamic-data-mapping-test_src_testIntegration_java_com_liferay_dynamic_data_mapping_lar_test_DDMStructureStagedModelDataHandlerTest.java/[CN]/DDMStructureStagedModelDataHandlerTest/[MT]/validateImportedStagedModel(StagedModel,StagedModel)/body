{
  super.validateImportedStagedModel(stagedModel,importedStagedModel);
  DDMStructure structure=(DDMStructure)stagedModel;
  DDMStructure importedStructure=(DDMStructure)importedStagedModel;
  Assert.assertEquals(structure.getStructureKey(),importedStructure.getStructureKey());
  Assert.assertEquals(structure.getName(),importedStructure.getName());
  Assert.assertEquals(structure.getDescription(),importedStructure.getDescription());
  Assert.assertEquals(structure.getStructureKey(),importedStructure.getStructureKey());
  Assert.assertEquals(structure.getStorageType(),importedStructure.getStorageType());
  Assert.assertEquals(structure.getType(),importedStructure.getType());
  List<DDMDataProviderInstanceLink> dataProviderInstanceLinks=DDMDataProviderInstanceLinkLocalServiceUtil.getDataProviderInstanceLinks(structure.getStructureId());
  List<DDMDataProviderInstanceLink> importedDataProviderInstanceLinks=DDMDataProviderInstanceLinkLocalServiceUtil.getDataProviderInstanceLinks(importedStructure.getStructureId());
  Assert.assertEquals(1,dataProviderInstanceLinks.size());
  Assert.assertEquals(1,importedDataProviderInstanceLinks.size());
  long dataProviderInstanceId=dataProviderInstanceLinks.get(0).getDataProviderInstanceId();
  DDMDataProviderInstance dataProviderInstance=DDMDataProviderInstanceLocalServiceUtil.getDataProviderInstance(dataProviderInstanceId);
  dataProviderInstanceId=importedDataProviderInstanceLinks.get(0).getDataProviderInstanceId();
  DDMDataProviderInstance importedDataProviderInstance=DDMDataProviderInstanceLocalServiceUtil.getDataProviderInstance(dataProviderInstanceId);
  Assert.assertEquals(getDDMDataProviderInstanceFormValues(dataProviderInstance),getDDMDataProviderInstanceFormValues(importedDataProviderInstance));
}

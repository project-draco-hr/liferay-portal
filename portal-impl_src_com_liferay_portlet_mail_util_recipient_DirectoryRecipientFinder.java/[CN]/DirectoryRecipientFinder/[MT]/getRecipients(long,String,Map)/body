{
  SortedSet recipients=new TreeSet();
  data=data.toLowerCase();
  try {
    String optionOrganization=(String)options.get(_OPTION_ORGANIZATION);
    User user=UserLocalServiceUtil.getUserById(userId);
    LinkedHashMap params=null;
    List results;
    if ((user.hasOrganization()) && (Validator.isNull(optionOrganization) || optionOrganization.equals("my-organization"))) {
      params=new LinkedHashMap();
      long[] organizationIds=user.getOrganizationIds();
      results=new ArrayList();
      for (int i=0; i < organizationIds.length; i++) {
        params.put("usersOrgs",String.valueOf(organizationIds[i]));
        List subresults=UserLocalServiceUtil.search(user.getCompanyId(),null,Boolean.TRUE,params,0,50,null);
        results.addAll(subresults);
      }
    }
 else {
      results=UserLocalServiceUtil.search(user.getCompanyId(),null,Boolean.TRUE,params,0,50,null);
    }
    for (int i=0; i < results.size(); i++) {
      User recipient=(User)results.get(i);
      String str=recipient.getFullName() + StringPool.SPACE + StringPool.LESS_THAN+ recipient.getEmailAddress()+ StringPool.GREATER_THAN;
      if (str.toLowerCase().indexOf(data) != -1) {
        recipients.add(str);
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return recipients;
}

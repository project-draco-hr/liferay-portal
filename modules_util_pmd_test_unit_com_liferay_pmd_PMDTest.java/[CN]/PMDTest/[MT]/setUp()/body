{
  try (FileReader fileReader=new FileReader(new File(_PROJECT_DIR,"/tools/sdk/build.properties"))){
    _buildProperties.load(fileReader);
  }
   try (FileReader fileReader=new FileReader(new File(_PROJECT_DIR,"build.properties"))){
    _buildProperties.load(fileReader);
  }
   _pmdTask.setProject(new Project());
  _pmdTask.setShortFilenames(true);
  _pmdTask.setThreads(GetterUtil.get(_buildProperties.getProperty("pmd.threads"),2));
  FileSet fileSet=new FileSet();
  fileSet.setDir(new File(_PROJECT_DIR));
  fileSet.setIncludes(_buildProperties.getProperty("pmd.java.includes"));
  fileSet.setExcludes(_buildProperties.getProperty("pmd.java.excludes"));
  if (isCIMode()) {
    DirectoryScanner directoryScanner=fileSet.getDirectoryScanner(_pmdTask.getProject());
    String[] slicedIncludedFiles=slice(directoryScanner.getIncludedFiles());
    fileSet=new FileSet();
    fileSet.setDir(new File(_PROJECT_DIR));
    fileSet.setIncludes(StringUtil.merge(slicedIncludedFiles,StringPool.COMMA));
  }
  _pmdTask.addFileset(fileSet);
  Formatter formatter=new Formatter();
  _logFilePath=Files.createTempFile(null,null);
  formatter.setToFile(_logFilePath.toFile());
  formatter.setType("text");
  _pmdTask.addFormatter(formatter);
  _pmdTask.setRuleSetFiles(StringUtil.replace(_buildProperties.getProperty("pmd.java.ruleset"),"${sdk.dir}",_PROJECT_DIR + "/tools/sdk"));
}

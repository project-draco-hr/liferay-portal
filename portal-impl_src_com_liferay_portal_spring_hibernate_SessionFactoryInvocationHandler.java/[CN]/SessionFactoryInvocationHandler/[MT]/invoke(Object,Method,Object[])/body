{
  String methodName=method.getName();
  if (methodName.equals("getCurrentSession")) {
    try {
      Session session=(Session)SessionFactoryUtils.doGetSession((SessionFactory)proxy,false);
      return wrapLiferaySession(session);
    }
 catch (    IllegalStateException ise) {
      throw new HibernateException(ise.getMessage());
    }
  }
 else   if (methodName.equals("openSession")) {
    Session session=(Session)method.invoke(_sessionFactory,args);
    return wrapLiferaySession(session);
  }
 else   if (methodName.equals("equals")) {
    if (proxy == args[0]) {
      return Boolean.TRUE;
    }
 else {
      return Boolean.FALSE;
    }
  }
 else   if (methodName.equals("hashCode")) {
    return new Integer(hashCode());
  }
  try {
    return method.invoke(_sessionFactory,args);
  }
 catch (  InvocationTargetException ite) {
    throw ite.getTargetException();
  }
}

{
  Element rootElement=portletDataContext.getExportDataRootElement();
  Element headerElement=rootElement.element("header");
  String type=headerElement.attributeValue("type");
  Element portletsElement=rootElement.element("portlets");
  if (portletsElement == null) {
    portletsElement=rootElement.addElement("portlets");
  }
  Element servicesElement=rootElement.element("services");
  if (servicesElement == null) {
    servicesElement=rootElement.addElement("services");
  }
  Map<String,String[]> parameterMap=portletDataContext.getParameterMap();
  boolean permissions=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PERMISSIONS);
  List<Layout> layouts=_layoutLocalService.getLayouts(group.getGroupId(),portletDataContext.isPrivateLayout());
  for (  String portletId : portletIds) {
    exportPortlet(portletDataContext,portletId,LayoutConstants.DEFAULT_PLID,portletDataContext.getGroupId(),StringPool.BLANK,StringPool.BLANK,type,portletsElement,servicesElement,permissions);
    Portlet portlet=_portletLocalService.getPortletById(portletDataContext.getCompanyId(),portletId);
    if (!portlet.isScopeable()) {
      continue;
    }
    for (    Layout layout : layouts) {
      if (!ArrayUtil.contains(layoutIds,layout.getLayoutId()) || !layout.isTypePortlet() || !layout.hasScopeGroup()) {
        continue;
      }
      Group scopeGroup=layout.getScopeGroup();
      exportPortlet(portletDataContext,portletId,layout.getPlid(),scopeGroup.getGroupId(),StringPool.BLANK,layout.getUuid(),type,portletsElement,servicesElement,permissions);
    }
  }
}

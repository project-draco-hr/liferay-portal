{
  portletDataContext.setPlid(plid);
  portletDataContext.setOldPlid(plid);
  portletDataContext.setPortletId(portletId);
  portletDataContext.setScopeGroupId(scopeGroupId);
  portletDataContext.setScopeType(scopeType);
  portletDataContext.setScopeLayoutUuid(scopeLayoutUuid);
  Map<String,Boolean> exportPortletControlsMap=ExportImportHelperUtil.getExportPortletControlsMap(portletDataContext.getCompanyId(),portletId,portletDataContext.getParameterMap(),type);
  try {
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_STARTED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext));
    _portletExportController.exportPortlet(portletDataContext,plid,portletsElement,permissions,exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_DATA),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_SETUP),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_USER_PREFERENCES));
    _portletExportController.exportService(portletDataContext,servicesElement,exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_SETUP));
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_SUCCEEDED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext));
  }
 catch (  Throwable t) {
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_FAILED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),t);
    throw t;
  }
}

{
  if (!method.isAnnotationPresent(BeanReference.class) || !method.equals(ClassUtils.getMostSpecificMethod(method,_class))) {
    return;
  }
  if (Modifier.isStatic(method.getModifiers())) {
    throw new IllegalStateException("@BeanReference annotation is not supported on static methods");
  }
  Class<?>[] parameterTypes=method.getParameterTypes();
  if (parameterTypes.length != 1) {
    throw new IllegalStateException("@BeanReference annotation requires a single argument method " + method);
  }
  PropertyDescriptor propertyDescriptor=BeanUtils.findPropertyForMethod(method);
  _injectionMetadata.addInjectedMethod(new BeanReferenceElement(_beanFactory,method,propertyDescriptor));
}

{
  InternetAddress from=new InternetAddress(replaceContent(fromAddress,locale),replaceContent(fromName,locale));
  String processedSubject=null;
  if (localizedSubjectMap != null) {
    String localizedSubject=localizedSubjectMap.get(locale);
    if (Validator.isNull(localizedSubject)) {
      Locale defaultLocale=LocaleUtil.getDefault();
      processedSubject=localizedSubjectMap.get(defaultLocale);
    }
 else {
      processedSubject=localizedSubject;
    }
  }
 else {
    processedSubject=subject;
  }
  String processedBody=null;
  if (localizedBodyMap != null) {
    String localizedBody=localizedBodyMap.get(locale);
    if (Validator.isNull(localizedBody)) {
      Locale defaultLocale=LocaleUtil.getDefault();
      processedBody=localizedBodyMap.get(defaultLocale);
    }
 else {
      processedBody=localizedBody;
    }
  }
 else {
    processedBody=body;
  }
  MailMessage mailMessage=new MailMessage(from,to,processedSubject,processedBody,htmlFormat);
  if (fileAttachments != null) {
    for (    FileAttachment fileAttachment : fileAttachments) {
      mailMessage.addFileAttachment(fileAttachment.getFile(),fileAttachment.getFileName());
    }
  }
  if (bulk && (_bulkAddresses != null)) {
    mailMessage.setBulkAddresses(_bulkAddresses.toArray(new InternetAddress[_bulkAddresses.size()]));
    _bulkAddresses.clear();
  }
  if (inReplyTo != null) {
    mailMessage.setInReplyTo(inReplyTo);
  }
  mailMessage.setMessageId(mailId);
  if (replyToAddress != null) {
    InternetAddress replyTo=new InternetAddress(replaceContent(replyToAddress,locale),replaceContent(replyToAddress,locale));
    mailMessage.setReplyTo(new InternetAddress[]{replyTo});
  }
  if (smtpAccount != null) {
    mailMessage.setSMTPAccount(smtpAccount);
  }
  processMailMessage(mailMessage,locale);
  MailServiceUtil.sendEmail(mailMessage);
}

{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  int initialArticleImagesCount=JournalArticleImageLocalServiceUtil.getArticleImagesCount(group.getGroupId());
  String xsd=StringUtil.read(getClass().getResourceAsStream(_JOURNAL_DEPENDENCIES_PATH + "test-ddm-structure-image-field.xml"));
  DDMStructure ddmStructure=DDMStructureTestUtil.addStructure(serviceContext.getScopeGroupId(),JournalArticle.class.getName(),xsd);
  DDMTemplate ddmTemplate=DDMTemplateTestUtil.addTemplate(serviceContext.getScopeGroupId(),ddmStructure.getStructureId());
  String content=StringUtil.read(getClass().getResourceAsStream(_JOURNAL_DEPENDENCIES_PATH + "test-journal-content-image-field.xml"));
  Map<String,byte[]> images=new HashMap<String,byte[]>();
  images.put("_image_1_0_en_US",FileTestUtil.getBytes(getClass(),_JOURNAL_DEPENDENCIES_PATH + "liferay.png"));
  baseModel=JournalTestUtil.addArticleWithXMLContent(JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,content,ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey(),images,serviceContext);
  Assert.assertEquals(initialArticleImagesCount + 1,JournalArticleImageLocalServiceUtil.getArticleImagesCount(group.getGroupId()));
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  trashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));
  Assert.assertEquals(initialArticleImagesCount,JournalArticleImageLocalServiceUtil.getArticleImagesCount(group.getGroupId()));
}

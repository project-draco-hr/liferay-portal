{
  String completeURL=HttpUtil.getCompleteURL(request);
  if (isMatchingURL(completeURL)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Processing " + completeURL);
    }
    CacheResponse cacheResponse=new CacheResponse(response,StringPool.UTF8);
    processFilter(VelocityFilter.class,request,cacheResponse,filterChain);
    VelocityContext velocityContext=VelocityEngineUtil.getWrappedStandardToolsContext();
    String content=new String(cacheResponse.getData());
    String contentId=completeURL;
    StringWriter writer=new StringWriter();
    ThemeDisplay themeDisplay=null;
    try {
      long companyId=ParamUtil.getLong(request,"companyId");
      Company company=CompanyLocalServiceUtil.getCompanyById(companyId);
      String contextPath=PortalUtil.getPathContext();
      String languageId=ParamUtil.getString(request,"languageId");
      Locale locale=LocaleUtil.fromLanguageId(languageId);
      String themeId=ParamUtil.getString(request,"themeId");
      String colorSchemeId=ParamUtil.getString(request,"colorSchemeId");
      boolean wapTheme=BrowserSnifferUtil.isWap(request);
      Theme theme=ThemeLocalServiceUtil.getTheme(companyId,themeId,wapTheme);
      ColorScheme colorScheme=ThemeLocalServiceUtil.getColorScheme(companyId,theme.getThemeId(),colorSchemeId,wapTheme);
      themeDisplay=ThemeDisplayFactory.create();
      themeDisplay.setCompany(company);
      themeDisplay.setLocale(locale);
      themeDisplay.setLookAndFeel(contextPath,theme,colorScheme);
      themeDisplay.setPathContext(contextPath);
      request.setAttribute(WebKeys.THEME_DISPLAY,themeDisplay);
      VelocityVariables.insertVariables(velocityContext,request);
      VelocityEngineUtil.mergeTemplate(contentId,content,velocityContext,writer);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
 finally {
      try {
        if (themeDisplay != null) {
          ThemeDisplayFactory.recycle(themeDisplay);
        }
      }
 catch (      Exception e) {
      }
    }
    CacheResponseData data=new CacheResponseData(writer.toString().getBytes(StringPool.UTF8),cacheResponse.getContentType(),cacheResponse.getHeaders());
    CacheResponseUtil.write(response,data);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Not processing " + completeURL);
    }
    processFilter(VelocityFilter.class,request,response,filterChain);
  }
}

{
  Object[] finderArgs=new Object[]{name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_NAME,finderArgs,this);
  }
  if (result instanceof Shard) {
    Shard shard=(Shard)result;
    if (!Validator.equals(name,shard.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(2);
    query.append(_SQL_SELECT_SHARD_WHERE);
    if (name == null) {
      query.append(_FINDER_COLUMN_NAME_NAME_1);
    }
 else {
      if (name.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_NAME_NAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_NAME_NAME_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (name != null) {
        qPos.add(name);
      }
      List<Shard> list=q.list();
      result=list;
      Shard shard=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_NAME,finderArgs,list);
      }
 else {
        shard=list.get(0);
        cacheResult(shard);
        if ((shard.getName() == null) || !shard.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_NAME,finderArgs,shard);
        }
      }
      return shard;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_NAME,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Shard)result;
    }
  }
}

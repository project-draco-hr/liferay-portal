{
  XMLSecurityTest documentBuilderTestCase=new XMLSecurityTest(){
    @Override public void run(    String xml) throws Exception {
      DocumentBuilderFactory documentBuilderFactory=_secureXMLFactoryProvider.newDocumentBuilderFactory();
      DocumentBuilder documentBuilder=documentBuilderFactory.newDocumentBuilder();
      documentBuilder.parse(new ByteArrayInputStream(xml.getBytes()));
    }
  }
;
  runXMLSecurityTest(documentBuilderTestCase,_xmlBombBillionLaughsXML,OutOfMemoryError.class,"Billion Laughs XML attack does not work.",SAXParseException.class,"Vulnerable to Billion Laughs XML attack.");
  runXMLSecurityTest(documentBuilderTestCase,_xmlBombQuadraticBlowupXML,OutOfMemoryError.class,"Quadratic Blowup XML attack does not work.",SAXParseException.class,"Vulnerable to Quadratic Blowup XML attack.");
  runXMLSecurityTest(documentBuilderTestCase,_xxeGeneralEntitiesXML1,ConnectException.class,"General Entities XXE attack using SYSTEM entity does not work.",SAXParseException.class,"Vulnerable to General Entities XXE attack using SYSTEM entity.");
  runXMLSecurityTest(documentBuilderTestCase,_xxeGeneralEntitiesXML2,ConnectException.class,"General Entities XXE attack using PUBLIC entity does not work.",SAXParseException.class,"Vulnerable to General Entities XXE attack using PUBLIC entity.");
  runXMLSecurityTest(documentBuilderTestCase,_xxeParameterEntitiesXML1,ConnectException.class,"Parameter Entities XXE using SYSTEM entity does not work.",SAXParseException.class,"Vulnerable to Parameter Entities XXE using SYSTEM entity.");
  runXMLSecurityTest(documentBuilderTestCase,_xxeParameterEntitiesXML2,ConnectException.class,"Parameter Entities XXE attack using PUBLIC entity does not work.",SAXParseException.class,"Vulnerable to Parameter Entities XXE attack using PUBLIC entity.");
}

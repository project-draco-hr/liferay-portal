{
  XMLSecurityTest xmlReaderTest=new XMLSecurityTest(){
    @Override public void run(    String xml) throws Exception {
      XMLReader xmlReader=_secureXMLFactoryProvider.newXMLReader();
      if (xmlReader instanceof StripDoctypeXMLReader) {
        xmlReader=((StripDoctypeXMLReader)xmlReader).getXmlReader();
      }
      xmlReader.setContentHandler(new DefaultHandler(){
        int contentLenght=0;
        @Override public void characters(        char[] ch,        int start,        int length){
          contentLenght+=length;
          if (contentLenght > 10 * 1024 * 1024) {
            throw new RuntimeException(new OutOfMemoryError());
          }
        }
      }
);
      xmlReader.parse(new InputSource(new StringReader(xml)));
    }
  }
;
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xmlBombBillionLaughsXML,OutOfMemoryError.class,"Billion Laughs XML attack doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xmlBombBillionLaughsXML,SAXParseException.class,"Vulnerable to Billion Laughs XML attack!");
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xmlBombQuadraticBlowupXML,OutOfMemoryError.class,"Quadratic Blowup XML attack doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xmlBombQuadraticBlowupXML,SAXParseException.class,"Vulnerable to Quadratic Blowup XML attack!");
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeGeneralEntitiesXML,ConnectException.class,"General Entities XXE attack using SYSTEM entity doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeGeneralEntitiesXML,SAXParseException.class,"Vulnerable to General Entities XXE attack using SYSTEM entity!");
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeGeneralEntitiesXML2,ConnectException.class,"General Entities XXE attack using PUBLIC entity doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeGeneralEntitiesXML2,SAXParseException.class,"Vulnerable to General Entities XXE attack using PUBLIC entity!");
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeParameterEntitiesXML,ConnectException.class,"Parameter Entities XXE using SYSTEM entity doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeParameterEntitiesXML,SAXParseException.class,"Vulnerable to Parameter Entities XXE using SYSTEM entity!");
  disableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeParameterEntitiesXML2,ConnectException.class,"Parameter Entities XXE attack using PUBLIC entity doesn't work!");
  enableXMLSecurity();
  runXMLSecurityTest(xmlReaderTest,_xxeParameterEntitiesXML2,SAXParseException.class,"Vulnerable to Parameter Entities XXE attack using PUBLIC entity!");
}

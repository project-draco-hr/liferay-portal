{
  ClusterExecutorImpl clusterExecutorImpl1=null;
  ClusterExecutorImpl clusterExecutorImpl2=null;
  try {
    clusterExecutorImpl1=getClusterExecutorImpl(false,false);
    MockClusterEventListener mockClusterEventListener=new MockClusterEventListener();
    clusterExecutorImpl1.addClusterEventListener(mockClusterEventListener);
    clusterExecutorImpl2=getClusterExecutorImpl(false,false);
    ClusterNode clusterNode1=clusterExecutorImpl1.getLocalClusterNode();
    ClusterNode clusterNode2=clusterExecutorImpl2.getLocalClusterNode();
    Address address1=clusterExecutorImpl1.getLocalClusterNodeAddress();
    Address address2=clusterExecutorImpl2.getLocalClusterNodeAddress();
    Assert.assertNotNull(clusterNode1);
    Assert.assertNotNull(clusterNode2);
    Assert.assertNotNull(address1);
    Assert.assertNotNull(address2);
    ClusterEvent clusterEvent=mockClusterEventListener.waitJoinMessage();
    assertClusterEvent(clusterEvent,ClusterEventType.JOIN,clusterNode2);
    List<Address> addresses=clusterExecutorImpl1.getClusterNodeAddresses();
    Assert.assertEquals(2,addresses.size());
    Assert.assertTrue(addresses.contains(address1));
    Assert.assertTrue(addresses.contains(address2));
    List<ClusterNode> clusterNodes=clusterExecutorImpl1.getClusterNodes();
    Assert.assertEquals(2,clusterNodes.size());
    Assert.assertTrue(clusterNodes.contains(clusterNode1));
    Assert.assertTrue(clusterNodes.contains(clusterNode2));
    boolean clusterNodeAlive=clusterExecutorImpl1.isClusterNodeAlive(clusterNode2.getClusterNodeId());
    Assert.assertTrue(clusterNodeAlive);
    clusterNodeAlive=clusterExecutorImpl1.isClusterNodeAlive(address2);
    Assert.assertTrue(clusterNodeAlive);
  }
  finally {
    if (clusterExecutorImpl1 != null) {
      clusterExecutorImpl1.destroy();
    }
    if (clusterExecutorImpl2 != null) {
      clusterExecutorImpl2.destroy();
    }
  }
}

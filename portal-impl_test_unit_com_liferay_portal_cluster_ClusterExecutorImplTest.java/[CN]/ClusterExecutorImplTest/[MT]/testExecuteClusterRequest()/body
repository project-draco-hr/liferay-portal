{
  ClusterExecutorImpl clusterExecutorImpl=getClusterExecutorImpl();
  try {
    ClusterNodeResponse clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(null));
    Exception exception=clusterNodeResponse.getException();
    Assert.assertEquals("Payload is not of type " + MethodHandler.class.getName(),exception.getMessage());
    String timeStamp=String.valueOf(System.currentTimeMillis());
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(testMethod3MethodKey,timeStamp)));
    try {
      clusterNodeResponse.getResult();
      Assert.fail();
    }
 catch (    InvocationTargetException ite) {
      Throwable throwable=ite.getTargetException();
      Assert.assertEquals(timeStamp,throwable.getMessage());
    }
    timeStamp=String.valueOf(System.currentTimeMillis());
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(testMethod1MethodKey,timeStamp)));
    Assert.assertEquals(timeStamp,clusterNodeResponse.getResult());
    Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(new MethodKey(TestBean.class,"testMethod5"))));
    Assert.assertFalse((Boolean)clusterNodeResponse.getResult());
    Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
  }
  finally {
    clusterExecutorImpl.destroy();
  }
}

{
  ClusterExecutorImpl clusterExecutorImpl=getClusterExecutorImpl();
  try {
    ClusterRequest clusterRequest=ClusterRequest.createMulticastRequest(null);
    ClusterNodeResponse clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(clusterRequest);
    Exception exception=clusterNodeResponse.getException();
    Assert.assertEquals("Payload is not of type " + MethodHandler.class.getName(),exception.getMessage());
    String timeStamp=String.valueOf(System.currentTimeMillis());
    MethodHandler methodHandler=new MethodHandler(testMethod3MethodKey,timeStamp);
    clusterRequest=ClusterRequest.createMulticastRequest(methodHandler);
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(clusterRequest);
    try {
      clusterNodeResponse.getResult();
      Assert.fail();
    }
 catch (    Exception e) {
      InvocationTargetException invocationTargetException=(InvocationTargetException)e;
      Throwable throwable=invocationTargetException.getTargetException();
      Assert.assertEquals(timeStamp,throwable.getMessage());
    }
    timeStamp=String.valueOf(System.currentTimeMillis());
    methodHandler=new MethodHandler(testMethod1MethodKey,timeStamp);
    clusterRequest=ClusterRequest.createMulticastRequest(methodHandler);
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(clusterRequest);
    Assert.assertEquals(timeStamp,(String)clusterNodeResponse.getResult());
    MethodKey testMethod5MethodKey=new MethodKey(TestBean.class,"testMethod5");
    methodHandler=new MethodHandler(testMethod5MethodKey);
    clusterRequest=ClusterRequest.createMulticastRequest(methodHandler);
    Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
    clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(clusterRequest);
    Assert.assertFalse((Boolean)clusterNodeResponse.getResult());
    Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
  }
  finally {
    clusterExecutorImpl.destroy();
  }
}

{
  ClusterExecutorImpl clusterExecutorImpl=getClusterExecutorImpl();
  ClusterNodeResponse clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(StringPool.BLANK));
  Exception exception=clusterNodeResponse.getException();
  Assert.assertEquals("Payload is not of type " + MethodHandler.class.getName(),exception.getMessage());
  String timestamp=String.valueOf(System.currentTimeMillis());
  clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(new MethodKey(TestBean.class,"testMethod3",String.class),timestamp)));
  try {
    clusterNodeResponse.getResult();
    Assert.fail();
  }
 catch (  InvocationTargetException ite) {
    Throwable throwable=ite.getTargetException();
    Assert.assertEquals(timestamp,throwable.getMessage());
  }
  timestamp=String.valueOf(System.currentTimeMillis());
  clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(new MethodKey(TestBean.class,"testMethod1",String.class),timestamp)));
  Assert.assertEquals(timestamp,clusterNodeResponse.getResult());
  Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
  clusterNodeResponse=clusterExecutorImpl.executeClusterRequest(ClusterRequest.createMulticastRequest(new MethodHandler(new MethodKey(TestBean.class,"testMethod5"))));
  Assert.assertFalse((Boolean)clusterNodeResponse.getResult());
  Assert.assertTrue(ClusterInvokeThreadLocal.isEnabled());
}

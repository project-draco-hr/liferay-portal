{
  ClusterExecutorImpl clusterExecutorImpl=null;
  try {
    clusterExecutorImpl=getClusterExecutorImpl(true,false);
    Channel channel=clusterExecutorImpl.getControlChannel();
    MockClusterRequestReceiver mockClusterRequestReceiver=(MockClusterRequestReceiver)channel.getReceiver();
    ClusterRequest localClusterRequest=mockClusterRequestReceiver.waitLocalRequestMessage();
    Assert.assertEquals(ClusterMessageType.NOTIFY,localClusterRequest.getClusterMessageType());
    String timestamp=String.valueOf(System.currentTimeMillis());
    MethodHandler methodHandler=new MethodHandler(testMethod1MethodKey,timestamp);
    Address address=clusterExecutorImpl.getLocalClusterNodeAddress();
    ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(methodHandler,address);
    clusterExecutorImpl.setShortcutLocalMethod(false);
    FutureClusterResponses futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    localClusterRequest=mockClusterRequestReceiver.waitLocalRequestMessage();
    Assert.assertEquals(ClusterMessageType.EXECUTE,localClusterRequest.getClusterMessageType());
    assertFutureClusterResponsesWithoutException(futureClusterResponses.get(),clusterRequest.getUuid(),timestamp,address);
    timestamp=String.valueOf(System.currentTimeMillis());
    methodHandler=new MethodHandler(testMethod1MethodKey,timestamp);
    clusterRequest=ClusterRequest.createUnicastRequest(methodHandler,address);
    clusterExecutorImpl.setShortcutLocalMethod(true);
    futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    localClusterRequest=mockClusterRequestReceiver.waitLocalRequestMessage();
    Assert.assertNull(localClusterRequest);
    assertFutureClusterResponsesWithoutException(futureClusterResponses.get(),clusterRequest.getUuid(),timestamp,address);
  }
  finally {
    if (clusterExecutorImpl != null) {
      clusterExecutorImpl.destroy();
    }
  }
}

{
  BaseReceiverAdvice.reset(1);
  ClusterExecutorImpl clusterExecutorImpl=getClusterExecutorImpl();
  try {
    Channel channel=clusterExecutorImpl.getControlChannel();
    Object object=BaseReceiverAdvice.getJGroupsMessagePayload(channel.getReceiver(),channel.getAddress());
    ClusterRequest clusterRequest=(ClusterRequest)object;
    Assert.assertEquals(ClusterMessageType.NOTIFY,clusterRequest.getClusterMessageType());
    BaseReceiverAdvice.reset(1);
    String timestamp=String.valueOf(System.currentTimeMillis());
    MethodHandler methodHandler=new MethodHandler(testMethod1MethodKey,timestamp);
    clusterRequest=ClusterRequest.createUnicastRequest(methodHandler,clusterExecutorImpl.getLocalClusterNodeAddress());
    clusterExecutorImpl.setShortcutLocalMethod(false);
    clusterExecutorImpl.execute(clusterRequest);
    object=BaseReceiverAdvice.getJGroupsMessagePayload(channel.getReceiver(),channel.getAddress());
    clusterRequest=(ClusterRequest)object;
    MethodHandler newMethodHandler=clusterRequest.getMethodHandler();
    Assert.assertEquals(ClusterMessageType.EXECUTE,clusterRequest.getClusterMessageType());
    Assert.assertEquals(methodHandler.toString(),newMethodHandler.toString());
    timestamp=String.valueOf(System.currentTimeMillis());
    clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(testMethod1MethodKey,timestamp),clusterExecutorImpl.getLocalClusterNodeAddress());
    clusterExecutorImpl.setShortcutLocalMethod(true);
    FutureClusterResponses futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    assertFutureClusterResponsesWithoutException(futureClusterResponses.get(),clusterRequest.getUuid(),timestamp,clusterExecutorImpl.getLocalClusterNodeAddress());
  }
  finally {
    clusterExecutorImpl.destroy();
  }
}

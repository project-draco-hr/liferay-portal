{
  ClusterExecutorImpl clusterExecutorImpl=getClusterExecutorImpl();
  try {
    ClusterNode clusterNode=clusterExecutorImpl.getLocalClusterNode();
    ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(testMethod1MethodKey,StringPool.BLANK),clusterNode.getClusterNodeId());
    FutureClusterResponses futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    assertFutureClusterResponsesWithoutException(futureClusterResponses.get(),clusterRequest.getUuid(),null,clusterExecutorImpl.getLocalClusterNodeAddress());
    clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(testMethod2MethodKey),clusterExecutorImpl.getLocalClusterNodeAddress());
    futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    assertFutureClusterResponsesWithException(futureClusterResponses,clusterRequest.getUuid(),clusterExecutorImpl.getLocalClusterNodeAddress(),"Return value is not serializable");
    String timestamp=String.valueOf(System.currentTimeMillis());
    clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(testMethod3MethodKey,timestamp),clusterExecutorImpl.getLocalClusterNodeAddress());
    futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    assertFutureClusterResponsesWithException(futureClusterResponses,clusterRequest.getUuid(),clusterExecutorImpl.getLocalClusterNodeAddress(),timestamp);
    clusterRequest=ClusterRequest.createUnicastRequest(null,clusterExecutorImpl.getLocalClusterNodeAddress());
    futureClusterResponses=clusterExecutorImpl.execute(clusterRequest);
    assertFutureClusterResponsesWithException(futureClusterResponses,clusterRequest.getUuid(),clusterExecutorImpl.getLocalClusterNodeAddress(),"Payload is not of type " + MethodHandler.class.getName());
  }
  finally {
    clusterExecutorImpl.destroy();
  }
}

{
  SetBadPortalAddressAdvice.setPort(8080);
  JDKLoggerTestUtil.configureJDKLogger(ClusterBase.class.getName(),Level.FINE);
  ClusterExecutorImpl clusterExecutorImpl=null;
  try {
    PortalUtil portalUtil=new PortalUtil();
    portalUtil.setPortal(new PortalImpl());
    PortalUUIDUtil portalUUIDUtil=new PortalUUIDUtil();
    portalUUIDUtil.setPortalUUID(new PortalUUIDImpl());
    PropsUtil.setProps(new PropsImpl());
    PortalExecutorManagerUtil portalExecutorManagerUtil=new PortalExecutorManagerUtil();
    portalExecutorManagerUtil.setPortalExecutorManager(new ClusterExecutorImplTest.MockPortalExecutorManager());
    List<LogRecord> logRecords=JDKLoggerTestUtil.configureJDKLogger(ClusterExecutorImpl.class.getName(),Level.SEVERE);
    clusterExecutorImpl=new ClusterExecutorImpl();
    clusterExecutorImpl.afterPropertiesSet();
    clusterExecutorImpl.initialize();
    Assert.assertEquals(2,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Unable to parse portal InetSocketAddress from :" + "bad address:8080",logRecord.getMessage());
    Throwable throwable=logRecord.getThrown();
    Assert.assertSame(UnknownHostException.class,throwable.getClass());
    logRecord=logRecords.get(1);
    Assert.assertEquals("Unable to send notify message",logRecord.getMessage());
    throwable=logRecord.getThrown();
    Assert.assertSame(Exception.class,throwable.getClass());
    logRecords.clear();
    clusterExecutorImpl.portalLocalAddressConfigured(new InetSocketAddress(InetAddress.getLocalHost(),80));
    assertLogger(logRecords,"Unable to determine configure node port",Exception.class);
    ClusterRequest clusterRequest=ClusterRequest.createMulticastRequest(null);
    try {
      clusterExecutorImpl.execute(clusterRequest);
      Assert.fail();
    }
 catch (    Exception e) {
      Assert.assertEquals("Unable to send multicast request",e.getMessage());
    }
    clusterRequest=ClusterRequest.createUnicastRequest(null,new AddressImpl(new MockAddress()));
    try {
      clusterExecutorImpl.execute(clusterRequest);
      Assert.fail();
    }
 catch (    Exception e) {
      Assert.assertEquals("Unable to send unicast request",e.getMessage());
    }
  }
  finally {
    if (clusterExecutorImpl != null) {
      clusterExecutorImpl.destroy();
    }
  }
}

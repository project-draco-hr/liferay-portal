{
  try {
    Indexer indexer=_indexerFactory.createLPKGIndexer(lpkgFile);
    UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
    indexer.index(unsyncByteArrayOutputStream);
    Path indexFilePath=Paths.get(PropsValues.MODULE_FRAMEWORK_BASE_DIR,Indexer.DIR_NAME_TARGET_PLATFORM,symbolicName + "-" + version+ "-index.xml");
    Files.write(indexFilePath,unsyncByteArrayOutputStream.toByteArray());
    if (_log.isInfoEnabled()) {
      _log.info("Wrote index " + indexFilePath);
    }
    IndexValidator indexValidator=_indexValidatorFactory.create(_getTargetPlatformIndexURIs());
    long start=System.currentTimeMillis();
    try {
      List<String> messages=indexValidator.validate(Collections.singletonList(indexFilePath.toUri()));
      if (!messages.isEmpty()) {
        Files.delete(indexFilePath);
        StringBundler sb=new StringBundler((messages.size() * 3) + 1);
        sb.append("LPKG validation failed with {");
        for (        String message : messages) {
          sb.append("[");
          sb.append(message);
          sb.append("], ");
        }
        sb.setIndex(sb.index() - 1);
        sb.append("]}");
        throw new LPKGVerifyException(sb.toString());
      }
    }
  finally {
      if (_log.isInfoEnabled()) {
        long duration=System.currentTimeMillis() - start;
        _log.info(String.format("LPKG validation time %02d:%02ds",MILLISECONDS.toMinutes(duration),MILLISECONDS.toSeconds(duration % Time.MINUTE)));
      }
    }
  }
 catch (  LPKGVerifyException lpkgve) {
    throw lpkgve;
  }
catch (  Exception e) {
    throw new LPKGVerifyException(e);
  }
}

{
  when(_ddmExpression.evaluate()).thenReturn(false);
  DDMForm ddmForm=new DDMForm();
  DDMFormField ddmFormField=new DDMFormField("emailField","text");
  DDMFormFieldValidation ddmFormFieldValidation=new DDMFormFieldValidation();
  ddmFormFieldValidation.setExpression("isEmailAddress(emailField)");
  ddmFormField.setDDMFormFieldValidation(ddmFormFieldValidation);
  ddmForm.addDDMFormField(ddmFormField);
  DDMFormValues ddmFormValues=new DDMFormValues(ddmForm);
  DDMFormFieldValue ddmFormFieldValue=new DDMFormFieldValue();
  ddmFormFieldValue.setName("emailField");
  ddmFormFieldValue.setValue(new UnlocalizedValue("invalidEmail"));
  ddmFormValues.addDDMFormFieldValue(ddmFormFieldValue);
  DDMFormEvaluatorHelper ddmFormEvaluatorHelper=createDDMFormEvaluatorHelper(ddmForm,ddmFormValues,LocaleUtil.US);
  DDMFormEvaluationResult ddmFormEvaluationResult=ddmFormEvaluatorHelper.evaluate();
  Assert.assertEquals(1,ddmFormEvaluationResult.getDDMFormFieldEvaluationResults().size());
  DDMFormFieldEvaluationResult ddmFormFieldEvaluationResult=ddmFormEvaluationResult.getDDMFormFieldEvaluationResults().get(0);
  Assert.assertFalse(ddmFormFieldEvaluationResult.isValid());
  String defaultErrorMessage=LanguageUtil.format(LocaleUtil.US,"this-field-is-invalid-x",ddmFormField.getName(),false);
  Assert.assertEquals(defaultErrorMessage,ddmFormFieldEvaluationResult.getErrorMessage());
}

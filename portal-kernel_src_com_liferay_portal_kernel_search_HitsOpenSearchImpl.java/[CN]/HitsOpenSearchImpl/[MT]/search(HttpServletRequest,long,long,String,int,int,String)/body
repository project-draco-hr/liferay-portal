{
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    SearchContext searchContext=SearchContextFactory.getInstance(request);
    searchContext.setAttribute("paginationType","more");
    if (groupId == 0) {
      searchContext.setGroupIds(null);
    }
 else {
      searchContext.setGroupIds(new long[]{groupId});
    }
    int end=startPage * itemsPerPage;
    searchContext.setEnd(end);
    Layout layout=themeDisplay.getLayout();
    Group layoutGroup=layout.getGroup();
    if (!layoutGroup.isStagingGroup() && !layoutGroup.isControlPanel()) {
      searchContext.setIncludeStagingGroups(false);
    }
    searchContext.setKeywords(keywords);
    searchContext.setScopeStrict(false);
    int start=(startPage * itemsPerPage) - itemsPerPage;
    searchContext.setStart(start);
    searchContext.setUserId(userId);
    Indexer<?> indexer=getIndexer();
    Hits results=indexer.search(searchContext);
    String[] queryTerms=results.getQueryTerms();
    int total=results.getLength();
    Object[] values=addSearchResults(queryTerms,keywords,startPage,itemsPerPage,total,start,getTitle(keywords),getSearchPath(),format,themeDisplay);
    com.liferay.portal.kernel.xml.Document doc=(com.liferay.portal.kernel.xml.Document)values[0];
    Element root=(Element)values[1];
    for (int i=0; i < results.getDocs().length; i++) {
      Document result=results.doc(i);
      String snippet=result.get(Field.SNIPPET);
      long resultGroupId=GetterUtil.getLong(result.get(Field.GROUP_ID));
      if (resultGroupId == 0) {
        resultGroupId=themeDisplay.getScopeGroupId();
      }
      long resultScopeGroupId=GetterUtil.getLong(result.get(Field.SCOPE_GROUP_ID));
      if (resultScopeGroupId == 0) {
        resultScopeGroupId=themeDisplay.getScopeGroupId();
      }
      String className=indexer.getClassName();
      if (Validator.isNull(className)) {
        className=result.get(Field.ENTRY_CLASS_NAME);
      }
      PortletURL portletURL=getPortletURL(request,className,PortletProvider.Action.VIEW,resultScopeGroupId);
      Summary summary=getSummary(indexer,result,themeDisplay.getLocale(),snippet);
      String title=summary.getTitle();
      String url=getURL(themeDisplay,resultScopeGroupId,result,portletURL);
      Date modifiedDate=result.getDate(Field.MODIFIED_DATE);
      String content=summary.getContent();
      String[] tags=new String[0];
      Field assetTagNamesField=result.getFields().get(Field.ASSET_TAG_NAMES);
      if (assetTagNamesField != null) {
        tags=assetTagNamesField.getValues();
      }
      double ratings=0.0;
      String entryClassName=result.get(Field.ENTRY_CLASS_NAME);
      long entryClassPK=GetterUtil.getLong(result.get(Field.ENTRY_CLASS_PK));
      if (Validator.isNotNull(entryClassName) && (entryClassPK > 0)) {
        RatingsStats stats=RatingsStatsLocalServiceUtil.getStats(entryClassName,entryClassPK);
        ratings=stats.getTotalScore();
      }
      double score=results.score(i);
      addSearchResult(root,resultGroupId,resultScopeGroupId,entryClassName,entryClassPK,title,url,modifiedDate,content,tags,ratings,score,format);
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Return\n" + doc.asXML());
    }
    return doc.asXML();
  }
 catch (  Exception e) {
    throw new SearchException(e);
  }
}

{
  List<KaleoTaskAssignment> kaleoTaskAssignments=kaleoTaskAssignmentLocalService.getKaleoTaskAssignments(kaleoClassName,kaleoClassPK);
  Set<Assignment> assignments=new HashSet<>(kaleoTaskAssignments.size());
  for (  KaleoTaskAssignment kaleoTaskAssignment : kaleoTaskAssignments) {
    String assigneeClassName=kaleoTaskAssignment.getAssigneeClassName();
    long assigneeClassPK=kaleoTaskAssignment.getAssigneeClassPK();
    Assignment assignment=null;
    if (assigneeClassName.equals(AssignmentType.SCRIPT.name())) {
      assignment=new ScriptAssignment(kaleoTaskAssignment.getAssigneeScript(),kaleoTaskAssignment.getAssigneeScriptLanguage(),kaleoTaskAssignment.getAssigneeScriptRequiredContexts());
    }
 else     if (assigneeClassName.equals(ResourceAction.class.getName())) {
      assignment=new ResourceActionAssignment(kaleoTaskAssignment.getAssigneeActionId());
    }
 else     if (assigneeClassName.equals(Role.class.getName())) {
      Role role=_roleLocalService.fetchRole(assigneeClassPK);
      assignment=new RoleAssignment(role.getName(),role.getTypeLabel());
    }
 else     if (assigneeClassName.equals(User.class.getName())) {
      if (assigneeClassPK == 0) {
        assignment=new UserAssignment();
      }
 else {
        User user=_userLocalService.getUser(assigneeClassPK);
        assignment=new UserAssignment(user.getUserId(),user.getScreenName(),user.getEmailAddress());
      }
    }
    assignments.add(assignment);
  }
  return assignments;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=PortalUtil.getClassNameId(className);
  long activityId=counterLocalService.increment(SocialActivity.class.getName());
  SocialActivity activity=socialActivityPersistence.create(activityId);
  activity.setGroupId(groupId);
  activity.setCompanyId(user.getCompanyId());
  activity.setUserId(user.getUserId());
  activity.setCreateDate(createDate);
  activity.setMirrorActivityId(0);
  activity.setClassNameId(classNameId);
  activity.setClassPK(classPK);
  activity.setType(type);
  activity.setExtraData(extraData);
  activity.setReceiverUserId(receiverUserId);
  socialActivityPersistence.update(activity,false);
  if ((receiverUserId > 0) && (userId != receiverUserId)) {
    long mirrorActivityId=counterLocalService.increment(SocialActivity.class.getName());
    SocialActivity mirrorActivity=socialActivityPersistence.create(mirrorActivityId);
    mirrorActivity.setGroupId(groupId);
    mirrorActivity.setCompanyId(user.getCompanyId());
    mirrorActivity.setUserId(receiverUserId);
    mirrorActivity.setCreateDate(createDate);
    mirrorActivity.setMirrorActivityId(activityId);
    mirrorActivity.setClassNameId(classNameId);
    mirrorActivity.setClassPK(classPK);
    mirrorActivity.setType(type);
    mirrorActivity.setExtraData(extraData);
    mirrorActivity.setReceiverUserId(user.getUserId());
    socialActivityPersistence.update(mirrorActivity,false);
  }
  return activity;
}

{
  if (PropsValues.SCHEMA_RUN_MINIMAL || !SetupWizardUtil.isSetupFinished()) {
    return;
  }
  Company company=CompanyLocalServiceUtil.getCompany(companyId);
  String webId=company.getWebId();
  if (!webId.equals(company.getDefaultWebId())) {
    return;
  }
  List<Organization> organizations=OrganizationLocalServiceUtil.getOrganizations(company.getCompanyId(),OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID);
  if (!organizations.isEmpty()) {
    return;
  }
  StopWatch stopWatch=null;
  if (_log.isInfoEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
    _log.info("Adding sample portal data");
  }
  Account account=company.getAccount();
  account.setName("Liferay");
  account.setLegalName("Liferay, Inc");
  AccountLocalServiceUtil.updateAccount(account);
  User defaultUser=company.getDefaultUser();
  Organization organization=OrganizationLocalServiceUtil.addOrganization(defaultUser.getUserId(),OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,"Liferay, Inc.",true);
  GroupLocalServiceUtil.updateFriendlyURL(organization.getGroupId(),"/liferay");
  Layout extranetLayout=LayoutLocalServiceUtil.addLayout(defaultUser.getUserId(),organization.getGroupId(),false,LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,"Liferay, Inc. Extranet",null,null,LayoutConstants.TYPE_PORTLET,false,"/extranet",new ServiceContext());
  LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)extranetLayout.getLayoutType();
  layoutTypePortlet.addPortletId(0,PortletKeys.SEARCH,"column-1",-1,false);
  layoutTypePortlet.addPortletId(0,PortletKeys.MESSAGE_BOARDS,"column-2",-1,false);
  LayoutLocalServiceUtil.updateLayout(extranetLayout.getGroupId(),false,extranetLayout.getLayoutId(),extranetLayout.getTypeSettings());
  Layout intranetLayout=LayoutLocalServiceUtil.addLayout(defaultUser.getUserId(),organization.getGroupId(),true,LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,"Liferay, Inc. Intranet",null,null,LayoutConstants.TYPE_PORTLET,false,"/intranet",new ServiceContext());
  layoutTypePortlet=(LayoutTypePortlet)intranetLayout.getLayoutType();
  layoutTypePortlet.addPortletId(0,PortletKeys.SEARCH,"column-1",-1,false);
  layoutTypePortlet.addPortletId(0,PortletKeys.MESSAGE_BOARDS,"column-2",-1,false);
  LayoutLocalServiceUtil.updateLayout(intranetLayout.getGroupId(),true,intranetLayout.getLayoutId(),intranetLayout.getTypeSettings());
  User user=UserLocalServiceUtil.fetchUserByEmailAddress(company.getCompanyId(),"test@liferay.com");
  if (user == null) {
    user=UserLocalServiceUtil.addDefaultAdminUser(companyId,"joebloggs","test@liferay.com",LocaleUtil.getDefault(),"Joe",StringPool.BLANK,"Bloggs");
  }
 else {
    user.setScreenName("joebloggs");
    user.setGreeting("Welcome Joe Bloggs!");
    user.setFirstName("Joe");
    user.setLastName("Bloggs");
  }
  user.setPasswordReset(false);
  user.setAgreedToTermsOfUse(true);
  UserLocalServiceUtil.updateUser(user);
  OrganizationLocalServiceUtil.addUserOrganization(user.getUserId(),organization);
  for (  Object[] organizationArray : _organizationArrays) {
    String name="Liferay " + organizationArray[0];
    long regionId=(Long)organizationArray[1];
    long countryId=(Long)organizationArray[2];
    String type=(String)organizationArray[3];
    Organization curOrganization=OrganizationLocalServiceUtil.addOrganization(defaultUser.getUserId(),organization.getOrganizationId(),name,type,regionId,countryId,ListTypeConstants.ORGANIZATION_STATUS_DEFAULT,StringPool.BLANK,true,null);
    GroupLocalServiceUtil.updateFriendlyURL(curOrganization.getGroupId(),FriendlyURLNormalizerUtil.normalize(StringPool.SLASH + organizationArray[0]));
    if (organizationArray.length <= 4) {
      continue;
    }
    String organizationPrefix=(String)organizationArray[4];
    long[] groupIds={curOrganization.getGroupId()};
    long[] organizationIds={organization.getOrganizationId(),curOrganization.getOrganizationId()};
    for (int i=1; i <= 10; i++) {
      String screenName=organizationPrefix + i;
      StringBundler sb=new StringBundler(4);
      sb.append("test.");
      sb.append(organizationPrefix);
      sb.append(StringPool.PERIOD);
      sb.append(i);
      sb.append("@liferay.com");
      String emailAddress=sb.toString();
      String lastName=organizationPrefix + StringPool.SPACE + i;
      user=UserLocalServiceUtil.addUser(0,company.getCompanyId(),false,"test","test",false,screenName,emailAddress,0,null,LocaleUtil.getDefault(),"Test",null,lastName,0,0,true,Calendar.JANUARY,1,1970,null,groupIds,organizationIds,null,null,false,new ServiceContext());
      user.setPasswordReset(false);
      user.setAgreedToTermsOfUse(true);
      UserLocalServiceUtil.updateUser(user);
    }
  }
  if (_log.isInfoEnabled()) {
    _log.info("Finished adding data in " + stopWatch.getTime() + " ms");
  }
}

{
  long pk=RandomTestUtil.nextLong();
  JournalArticle newJournalArticle=_persistence.create(pk);
  newJournalArticle.setUuid(RandomTestUtil.randomString());
  newJournalArticle.setResourcePrimKey(RandomTestUtil.nextLong());
  newJournalArticle.setGroupId(RandomTestUtil.nextLong());
  newJournalArticle.setCompanyId(RandomTestUtil.nextLong());
  newJournalArticle.setUserId(RandomTestUtil.nextLong());
  newJournalArticle.setUserName(RandomTestUtil.randomString());
  newJournalArticle.setCreateDate(RandomTestUtil.nextDate());
  newJournalArticle.setModifiedDate(RandomTestUtil.nextDate());
  newJournalArticle.setFolderId(RandomTestUtil.nextLong());
  newJournalArticle.setClassNameId(RandomTestUtil.nextLong());
  newJournalArticle.setClassPK(RandomTestUtil.nextLong());
  newJournalArticle.setTreePath(RandomTestUtil.randomString());
  newJournalArticle.setArticleId(RandomTestUtil.randomString());
  newJournalArticle.setVersion(RandomTestUtil.nextDouble());
  newJournalArticle.setUrlTitle(RandomTestUtil.randomString());
  newJournalArticle.setContent(RandomTestUtil.randomString());
  newJournalArticle.setDDMStructureKey(RandomTestUtil.randomString());
  newJournalArticle.setDDMTemplateKey(RandomTestUtil.randomString());
  newJournalArticle.setDefaultLanguageId(RandomTestUtil.randomString());
  newJournalArticle.setLayoutUuid(RandomTestUtil.randomString());
  newJournalArticle.setDisplayDate(RandomTestUtil.nextDate());
  newJournalArticle.setExpirationDate(RandomTestUtil.nextDate());
  newJournalArticle.setReviewDate(RandomTestUtil.nextDate());
  newJournalArticle.setIndexable(RandomTestUtil.randomBoolean());
  newJournalArticle.setSmallImage(RandomTestUtil.randomBoolean());
  newJournalArticle.setSmallImageId(RandomTestUtil.nextLong());
  newJournalArticle.setSmallImageURL(RandomTestUtil.randomString());
  newJournalArticle.setLastPublishDate(RandomTestUtil.nextDate());
  newJournalArticle.setStatus(RandomTestUtil.nextInt());
  newJournalArticle.setStatusByUserId(RandomTestUtil.nextLong());
  newJournalArticle.setStatusByUserName(RandomTestUtil.randomString());
  newJournalArticle.setStatusDate(RandomTestUtil.nextDate());
  _journalArticles.add(_persistence.update(newJournalArticle));
  JournalArticle existingJournalArticle=_persistence.findByPrimaryKey(newJournalArticle.getPrimaryKey());
  Assert.assertEquals(existingJournalArticle.getUuid(),newJournalArticle.getUuid());
  Assert.assertEquals(existingJournalArticle.getId(),newJournalArticle.getId());
  Assert.assertEquals(existingJournalArticle.getResourcePrimKey(),newJournalArticle.getResourcePrimKey());
  Assert.assertEquals(existingJournalArticle.getGroupId(),newJournalArticle.getGroupId());
  Assert.assertEquals(existingJournalArticle.getCompanyId(),newJournalArticle.getCompanyId());
  Assert.assertEquals(existingJournalArticle.getUserId(),newJournalArticle.getUserId());
  Assert.assertEquals(existingJournalArticle.getUserName(),newJournalArticle.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getCreateDate()),Time.getShortTimestamp(newJournalArticle.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getModifiedDate()),Time.getShortTimestamp(newJournalArticle.getModifiedDate()));
  Assert.assertEquals(existingJournalArticle.getFolderId(),newJournalArticle.getFolderId());
  Assert.assertEquals(existingJournalArticle.getClassNameId(),newJournalArticle.getClassNameId());
  Assert.assertEquals(existingJournalArticle.getClassPK(),newJournalArticle.getClassPK());
  Assert.assertEquals(existingJournalArticle.getTreePath(),newJournalArticle.getTreePath());
  Assert.assertEquals(existingJournalArticle.getArticleId(),newJournalArticle.getArticleId());
  AssertUtils.assertEquals(existingJournalArticle.getVersion(),newJournalArticle.getVersion());
  Assert.assertEquals(existingJournalArticle.getUrlTitle(),newJournalArticle.getUrlTitle());
  Assert.assertEquals(existingJournalArticle.getContent(),newJournalArticle.getContent());
  Assert.assertEquals(existingJournalArticle.getDDMStructureKey(),newJournalArticle.getDDMStructureKey());
  Assert.assertEquals(existingJournalArticle.getDDMTemplateKey(),newJournalArticle.getDDMTemplateKey());
  Assert.assertEquals(existingJournalArticle.getDefaultLanguageId(),newJournalArticle.getDefaultLanguageId());
  Assert.assertEquals(existingJournalArticle.getLayoutUuid(),newJournalArticle.getLayoutUuid());
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getDisplayDate()),Time.getShortTimestamp(newJournalArticle.getDisplayDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getExpirationDate()),Time.getShortTimestamp(newJournalArticle.getExpirationDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getReviewDate()),Time.getShortTimestamp(newJournalArticle.getReviewDate()));
  Assert.assertEquals(existingJournalArticle.getIndexable(),newJournalArticle.getIndexable());
  Assert.assertEquals(existingJournalArticle.getSmallImage(),newJournalArticle.getSmallImage());
  Assert.assertEquals(existingJournalArticle.getSmallImageId(),newJournalArticle.getSmallImageId());
  Assert.assertEquals(existingJournalArticle.getSmallImageURL(),newJournalArticle.getSmallImageURL());
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getLastPublishDate()),Time.getShortTimestamp(newJournalArticle.getLastPublishDate()));
  Assert.assertEquals(existingJournalArticle.getStatus(),newJournalArticle.getStatus());
  Assert.assertEquals(existingJournalArticle.getStatusByUserId(),newJournalArticle.getStatusByUserId());
  Assert.assertEquals(existingJournalArticle.getStatusByUserName(),newJournalArticle.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingJournalArticle.getStatusDate()),Time.getShortTimestamp(newJournalArticle.getStatusDate()));
}

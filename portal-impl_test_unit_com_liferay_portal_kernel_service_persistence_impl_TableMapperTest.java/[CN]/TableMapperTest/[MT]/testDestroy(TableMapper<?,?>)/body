{
  Registry registry=RegistryUtil.getRegistry();
  MultiVMPool multiVMPool=registry.getService(MultiVMPool.class);
  Map<String,PortalCache<?,?>> portalCaches=ReflectionTestUtil.getFieldValue(multiVMPool,"_portalCaches");
  Assert.assertEquals(2,portalCaches.size());
  if (tableMapper instanceof ReverseTableMapper) {
    Assert.assertSame(ReflectionTestUtil.getFieldValue(tableMapper.getReverseTableMapper(),"leftToRightPortalCache"),portalCaches.get(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-LeftToRight"));
    Assert.assertSame(ReflectionTestUtil.getFieldValue(tableMapper.getReverseTableMapper(),"rightToLeftPortalCache"),portalCaches.get(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-RightToLeft"));
  }
 else {
    Assert.assertSame(ReflectionTestUtil.getFieldValue(tableMapper,"leftToRightPortalCache"),portalCaches.get(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-LeftToRight"));
    Assert.assertSame(ReflectionTestUtil.getFieldValue(tableMapper,"rightToLeftPortalCache"),portalCaches.get(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-RightToLeft"));
  }
  tableMapper.destroy();
  Assert.assertTrue(portalCaches.isEmpty());
}

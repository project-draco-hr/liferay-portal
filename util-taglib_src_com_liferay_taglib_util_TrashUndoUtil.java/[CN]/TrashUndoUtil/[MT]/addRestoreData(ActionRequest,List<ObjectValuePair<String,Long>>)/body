{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if ((entries == null) || entries.isEmpty()) {
    return;
  }
  List<String> restoreClassNames=new ArrayList<>();
  List<String> restoreEntryLinks=new ArrayList<>();
  List<String> restoreEntryMessages=new ArrayList<>();
  List<String> restoreLinks=new ArrayList<>();
  List<String> restoreMessages=new ArrayList<>();
  for (  ObjectValuePair<String,Long> entry : entries) {
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(entry.getKey());
    String restoreEntryLink=trashHandler.getRestoreContainedModelLink(actionRequest,entry.getValue());
    String restoreLink=trashHandler.getRestoreContainerModelLink(actionRequest,entry.getValue());
    String restoreMessage=trashHandler.getRestoreMessage(actionRequest,entry.getValue());
    if (Validator.isNull(restoreLink) || Validator.isNull(restoreMessage)) {
      continue;
    }
    restoreClassNames.add(trashHandler.getClassName());
    restoreEntryLinks.add(restoreEntryLink);
    TrashRenderer trashRenderer=trashHandler.getTrashRenderer(entry.getValue());
    String restoreEntryTitle=trashRenderer.getTitle(themeDisplay.getLocale());
    restoreEntryMessages.add(restoreEntryTitle);
    restoreLinks.add(restoreLink);
    restoreMessages.add(restoreMessage);
  }
  Map<String,List<String>> data=new HashMap<>();
  data.put("restoreClassNames",restoreClassNames);
  data.put("restoreEntryLinks",restoreEntryLinks);
  data.put("restoreEntryMessages",restoreEntryMessages);
  data.put("restoreLinks",restoreLinks);
  data.put("restoreMessages",restoreMessages);
  SessionMessages.add(actionRequest,PortalUtil.getPortletId(actionRequest) + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS_DATA,data);
}

{
  String path=super.processPath(request,response);
  HttpSession session=request.getSession();
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  UserTracker userTracker=LiveUsers.getUserTracker(themeDisplay.getCompanyId(),session.getId());
  if ((userTracker != null) && (path != null) && (!path.equals(_PATH_C))&& (path.indexOf(_PATH_J_SECURITY_CHECK) == -1)&& (path.indexOf(_PATH_PORTAL_PROTECTED) == -1)&& (!_trackerIgnorePaths.contains(path))) {
    StringBuilder sb=null;
    try {
      if (PropsValues.SESSION_TRACKER_FRIENDLY_PATHS_ENABLED) {
        sb=getFriendlyTrackerPath(path,themeDisplay,request);
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    if (sb == null) {
      sb=new StringBuilder();
      sb.append(path);
      sb.append(StringPool.QUESTION);
      sb.append(request.getQueryString());
    }
    UserTrackerPath userTrackerPath=UserTrackerPathUtil.create(0);
    userTrackerPath.setUserTrackerId(userTracker.getUserTrackerId());
    userTrackerPath.setPath(sb.toString());
    userTrackerPath.setPathDate(new Date());
    userTracker.addPath(userTrackerPath);
  }
  String remoteUser=request.getRemoteUser();
  User user=null;
  try {
    user=PortalUtil.getUser(request);
  }
 catch (  Exception e) {
  }
  if ((path != null) && (_lastPaths.contains(path)) && (!_trackerIgnorePaths.contains(path))) {
    boolean saveLastPath=ParamUtil.getBoolean(request,"saveLastPath",true);
    if (themeDisplay.isLifecycleResource() || themeDisplay.isStateExclusive() || themeDisplay.isStatePopUp()|| !request.getMethod().equalsIgnoreCase(HttpMethods.GET)) {
      saveLastPath=false;
    }
    if (saveLastPath) {
      LastPath lastPath=(LastPath)request.getAttribute(WebKeys.LAST_PATH);
      if (lastPath == null) {
        lastPath=new LastPath(themeDisplay.getPathMain(),path,request.getParameterMap());
      }
      session.setAttribute(WebKeys.LAST_PATH,lastPath);
    }
  }
  if (((remoteUser != null) || (user != null)) && (path != null) && (path.equals(_PATH_PORTAL_LOGOUT))) {
    return path;
  }
  if (((remoteUser != null) || (user != null)) && (path != null) && (path.equals(_PATH_PORTAL_EXPIRE_SESSION) || path.equals(_PATH_PORTAL_EXTEND_SESSION))) {
    return path;
  }
  if (((remoteUser != null) || (user != null)) && (path != null) && (path.equals(_PATH_PORTAL_CSS) || path.equals(_PATH_PORTAL_CSS_CACHED) || path.equals(_PATH_PORTAL_JAVASCRIPT)|| path.equals(_PATH_PORTAL_JAVASCRIPT_CACHED))) {
    return path;
  }
  if (((remoteUser != null) || (user != null)) && (path != null) && (path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE))) {
    return path;
  }
  if ((remoteUser != null) && (user == null)) {
    return _PATH_PORTAL_LOGOUT;
  }
  if ((user != null) && (!user.isAgreedToTermsOfUse())) {
    if (PropsValues.TERMS_OF_USE_REQUIRED) {
      return _PATH_PORTAL_TERMS_OF_USE;
    }
  }
  if ((user != null) && (!user.isActive())) {
    SessionErrors.add(request,UserActiveException.class.getName());
    return _PATH_PORTAL_ERROR;
  }
  if ((user != null) && (user.isPasswordReset())) {
    return _PATH_PORTAL_CHANGE_PASSWORD;
  }
  if (user != null) {
    List<Layout> layouts=themeDisplay.getLayouts();
    if ((layouts == null) || (layouts.size() == 0)) {
      SessionErrors.add(request,RequiredLayoutException.class.getName());
      return _PATH_PORTAL_ERROR;
    }
  }
  if (!isPublicPath(path)) {
    if (user == null) {
      SessionErrors.add(request,PrincipalException.class.getName());
      return _PATH_PORTAL_LOGIN;
    }
  }
  ActionMapping mapping=(ActionMapping)moduleConfig.findActionConfig(path);
  path=mapping.getPath();
  if (user != null) {
    try {
      if (false) {
        SessionErrors.add(request,RequiredRoleException.class.getName());
        return _PATH_PORTAL_ERROR;
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  if (isPortletPath(path)) {
    try {
      Portlet portlet=null;
      long companyId=PortalUtil.getCompanyId(request);
      String portletId=ParamUtil.getString(request,"p_p_id");
      if (Validator.isNotNull(portletId)) {
        portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
      }
      if (portlet == null) {
        String strutsPath=path.substring(1,path.lastIndexOf(StringPool.SLASH));
        portlet=PortletLocalServiceUtil.getPortletByStrutsPath(companyId,strutsPath);
      }
      if ((portlet != null) && portlet.isActive()) {
        defineObjects(request,response,portlet);
      }
    }
 catch (    Exception e) {
      request.setAttribute(PageContext.EXCEPTION,e);
      path=_PATH_COMMON_ERROR;
    }
  }
  if (SessionErrors.contains(request,LayoutPermissionException.class.getName())) {
    return _PATH_PORTAL_ERROR;
  }
  return path;
}

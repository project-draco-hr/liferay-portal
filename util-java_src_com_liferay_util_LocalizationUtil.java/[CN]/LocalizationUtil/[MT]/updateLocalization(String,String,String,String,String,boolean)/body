{
  if (Validator.isNull(xml) || (xml.indexOf("<root") == -1)) {
    xml="<root />";
  }
  String updatedXml=xml;
  try {
    SAXReader reader=new SAXReader();
    Document doc=reader.read(new StringReader(xml));
    Element root=doc.getRootElement();
    String availableLocales=root.attributeValue("available-locales");
    Element localeEl=null;
    Iterator itr=root.elements().iterator();
    while (itr.hasNext()) {
      Element el=(Element)itr.next();
      String languageId=el.attributeValue("language-id",defaultLanguageId);
      if (languageId.equals(requestedLanguageId)) {
        localeEl=el;
        break;
      }
    }
    if (localeEl != null) {
      localeEl.addAttribute("language-id",requestedLanguageId);
      if (isCDATA) {
        localeEl.addCDATA(value);
      }
 else {
        localeEl.setText(value);
      }
    }
 else {
      localeEl=root.addElement(key);
      localeEl.addAttribute("language-id",requestedLanguageId);
      if (isCDATA) {
        localeEl.addCDATA(value);
      }
 else {
        localeEl.setText(value);
      }
      if (availableLocales == null) {
        availableLocales=defaultLanguageId;
      }
      if (!requestedLanguageId.equals(defaultLanguageId)) {
        availableLocales+=StringPool.COMMA + requestedLanguageId;
      }
      root.addAttribute("available-locales",availableLocales);
    }
    root.addAttribute("default-locale",defaultLanguageId);
    updatedXml=XMLFormatter.toString(doc,"  ");
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e);
    }
  }
  return updatedXml;
}

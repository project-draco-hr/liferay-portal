{
  _removeCachedValue(xml);
  xml=_sanitizeXML(xml);
  XMLStreamReader reader=null;
  XMLStreamWriter writer=null;
  try {
    XMLInputFactory inputFactory=XMLInputFactory.newInstance();
    reader=inputFactory.createXMLStreamReader(new StringReader(xml));
    String availableLocales=StringPool.BLANK;
    if (reader.hasNext()) {
      reader.nextTag();
      availableLocales=reader.getAttributeValue(null,_AVAILABLE_LOCALES);
      if (Validator.isNull(availableLocales)) {
        availableLocales=defaultLanguageId;
      }
      if (availableLocales.indexOf(requestedLanguageId) == -1) {
        availableLocales+=StringPool.COMMA + requestedLanguageId;
      }
    }
    StringWriter sw=new StringWriter(xml.length());
    XMLOutputFactory outputFactory=XMLOutputFactory.newInstance();
    writer=outputFactory.createXMLStreamWriter(sw);
    writer.writeStartDocument();
    writer.writeStartElement(_ROOT);
    writer.writeAttribute(_AVAILABLE_LOCALES,availableLocales);
    writer.writeAttribute(_DEFAULT_LOCALE,defaultLanguageId);
    _copyNonExempt(reader,writer,requestedLanguageId,defaultLanguageId,cdata);
    if (cdata) {
      writer.writeStartElement(key);
      writer.writeAttribute(_LANGUAGE_ID,requestedLanguageId);
      writer.writeCData(value);
      writer.writeEndElement();
    }
 else {
      writer.writeStartElement(key);
      writer.writeAttribute(_LANGUAGE_ID,requestedLanguageId);
      writer.writeCharacters(value);
      writer.writeEndElement();
    }
    writer.writeEndElement();
    writer.writeEndDocument();
    writer.close();
    writer=null;
    xml=sw.toString();
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e);
    }
  }
 finally {
    if (reader != null) {
      try {
        reader.close();
      }
 catch (      Exception e) {
      }
    }
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return xml;
}

{
  if (Validator.isNull(xml)) {
    return StringPool.BLANK;
  }
  xml=_sanitizeXML(xml);
  String systemDefaultLanguageId=LocaleUtil.toLanguageId(LocaleUtil.getDefault());
  XMLStreamReader reader=null;
  XMLStreamWriter writer=null;
  try {
    XMLInputFactory inputFactory=XMLInputFactory.newInstance();
    reader=inputFactory.createXMLStreamReader(new StringReader(xml));
    String availableLocales=StringPool.BLANK;
    String defaultLanguageId=StringPool.BLANK;
    if (reader.hasNext()) {
      reader.nextTag();
      availableLocales=reader.getAttributeValue(null,_AVAILABLE_LOCALES);
      defaultLanguageId=reader.getAttributeValue(null,_DEFAULT_LOCALE);
      if (Validator.isNull(defaultLanguageId)) {
        defaultLanguageId=systemDefaultLanguageId;
      }
    }
    if ((availableLocales != null) && (availableLocales.indexOf(requestedLanguageId) != -1)) {
      availableLocales=StringUtil.remove(availableLocales,requestedLanguageId,StringPool.COMMA);
      StringWriter sw=new StringWriter(xml.length());
      XMLOutputFactory outputFactory=XMLOutputFactory.newInstance();
      writer=outputFactory.createXMLStreamWriter(sw);
      writer.writeStartDocument();
      writer.writeStartElement(_ROOT);
      writer.writeAttribute(_AVAILABLE_LOCALES,availableLocales);
      writer.writeAttribute(_DEFAULT_LOCALE,defaultLanguageId);
      _copyNonExempt(reader,writer,requestedLanguageId,defaultLanguageId,cdata);
      writer.writeEndElement();
      writer.writeEndDocument();
      writer.close();
      writer=null;
      xml=sw.toString();
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
 finally {
    if (reader != null) {
      try {
        reader.close();
      }
 catch (      Exception e) {
      }
    }
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return xml;
}

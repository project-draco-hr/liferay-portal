{
  boolean required=ddmFormFieldEvaluationResult.isRequired();
  boolean emptyValue=isDDMFormFieldValueEmpty(ddmFormField,ddmFormFieldValue);
  if (!required && emptyValue) {
    return;
  }
  boolean visible=ddmFormFieldEvaluationResult.isVisible();
  if (required && visible && emptyValue) {
    ddmFormFieldEvaluationResult.setErrorMessage(LanguageUtil.get(_locale,"this-field-is-required"));
    ddmFormFieldEvaluationResult.setValid(false);
    return;
  }
  DDMFormFieldValidation ddmFormFieldValidation=ddmFormField.getDDMFormFieldValidation();
  if (ddmFormFieldValidation == null) {
    return;
  }
  String validationExpression=ddmFormFieldValidation.getExpression();
  if (Validator.isNull(validationExpression)) {
    return;
  }
  try {
    DDMExpression<Boolean> ddmExpression=_ddmExpressionFactory.createBooleanDDMExpression(validationExpression);
    setDDMExpressionVariables(ddmExpression,ddmFormFieldValue);
    boolean valid=ddmExpression.evaluate();
    if (!valid) {
      ddmFormFieldEvaluationResult.setErrorMessage(ddmFormFieldValidation.getErrorMessage());
      ddmFormFieldEvaluationResult.setValid(false);
    }
  }
 catch (  DDMExpressionException ddmee) {
    if (_log.isDebugEnabled()) {
      _log.debug(String.format("Error processing validation expression \"%s\" for " + "field \"%s\"",validationExpression,ddmFormField.getName()),ddmee);
    }
  }
}

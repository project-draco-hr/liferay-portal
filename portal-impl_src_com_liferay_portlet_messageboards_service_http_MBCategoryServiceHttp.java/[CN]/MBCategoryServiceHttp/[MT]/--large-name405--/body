{
  try {
    Object paramObj0=new LongWrapper(plid);
    Object paramObj1=new LongWrapper(parentCategoryId);
    Object paramObj2=name;
    if (name == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=description;
    if (description == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=mailingListAddress;
    if (mailingListAddress == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=mailAddress;
    if (mailAddress == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=mailInProtocol;
    if (mailInProtocol == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=mailInServerName;
    if (mailInServerName == null) {
      paramObj7=new NullWrapper("java.lang.String");
    }
    Object paramObj8=mailInUseSSL;
    if (mailInUseSSL == null) {
      paramObj8=new NullWrapper("java.lang.Boolean");
    }
    Object paramObj9=mailInServerPort;
    if (mailInServerPort == null) {
      paramObj9=new NullWrapper("java.lang.Integer");
    }
    Object paramObj10=mailInUserName;
    if (mailInUserName == null) {
      paramObj10=new NullWrapper("java.lang.String");
    }
    Object paramObj11=mailInPassword;
    if (mailInPassword == null) {
      paramObj11=new NullWrapper("java.lang.String");
    }
    Object paramObj12=mailInReadInterval;
    if (mailInReadInterval == null) {
      paramObj12=new NullWrapper("java.lang.Integer");
    }
    Object paramObj13=mailOutConfigured;
    if (mailOutConfigured == null) {
      paramObj13=new NullWrapper("java.lang.Boolean");
    }
    Object paramObj14=mailOutServerName;
    if (mailOutServerName == null) {
      paramObj14=new NullWrapper("java.lang.String");
    }
    Object paramObj15=mailOutUseSSL;
    if (mailOutUseSSL == null) {
      paramObj15=new NullWrapper("java.lang.Boolean");
    }
    Object paramObj16=mailOutServerPort;
    if (mailOutServerPort == null) {
      paramObj16=new NullWrapper("java.lang.Integer");
    }
    Object paramObj17=mailOutUserName;
    if (mailOutUserName == null) {
      paramObj17=new NullWrapper("java.lang.String");
    }
    Object paramObj18=mailOutPassword;
    if (mailOutPassword == null) {
      paramObj18=new NullWrapper("java.lang.String");
    }
    Object paramObj19=communityPermissions;
    if (communityPermissions == null) {
      paramObj19=new NullWrapper("[Ljava.lang.String;");
    }
    Object paramObj20=guestPermissions;
    if (guestPermissions == null) {
      paramObj20=new NullWrapper("[Ljava.lang.String;");
    }
    MethodWrapper methodWrapper=new MethodWrapper(MBCategoryServiceUtil.class.getName(),"addCategory",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      throw new com.liferay.portal.SystemException(e);
    }
    return (com.liferay.portlet.messageboards.model.MBCategory)returnObj;
  }
 catch (  com.liferay.portal.SystemException se) {
    _log.error(se,se);
    throw se;
  }
}

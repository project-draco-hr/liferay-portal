{
  List<Node> sourceNodes=new ArrayList<>();
  sourceNodes.add(join);
  for (  Transition transition : join.getIncomingTransitions()) {
    sourceNodes.add(transition.getSourceNode());
  }
  for (int i=1; i < sourceNodes.size(); i++) {
    Node sourceNode=sourceNodes.get(i);
    NodeType nodeType=sourceNode.getNodeType();
    if (nodeType.equals(NodeType.FORK) && Validator.equals(fork,sourceNode)) {
      continue;
    }
 else     if (nodeType.equals(NodeType.JOIN) || nodeType.equals(NodeType.JOIN_XOR)) {
      sourceNode=joinForkMap.get((Join)sourceNode);
      sourceNodes.set(i,sourceNode);
    }
    List<Node> unvisitedSourceNodes=getUnvisitedNodes(sourceNodes,sourceNode.getIncomingTransitions(),false);
    sourceNodes.addAll(unvisitedSourceNodes);
  }
  if ((sourceNodes.size() != targetNodes.size()) || !sourceNodes.containsAll(targetNodes)) {
    throw new WorkflowException("There are errors between fork " + fork.getName() + " and join "+ join.getName());
  }
}

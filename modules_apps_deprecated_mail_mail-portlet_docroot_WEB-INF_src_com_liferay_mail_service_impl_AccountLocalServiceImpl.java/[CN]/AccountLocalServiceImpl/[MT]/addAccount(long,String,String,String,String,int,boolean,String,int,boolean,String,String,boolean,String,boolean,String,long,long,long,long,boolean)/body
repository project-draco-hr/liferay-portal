{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  long accountId=counterLocalService.increment();
  Account account=accountPersistence.create(accountId);
  account.setCompanyId(user.getCompanyId());
  account.setUserId(user.getUserId());
  account.setUserName(user.getFullName());
  account.setCreateDate(now);
  account.setModifiedDate(now);
  account.setAddress(address);
  account.setPersonalName(personalName);
  account.setProtocol(protocol);
  account.setIncomingHostName(incomingHostName);
  account.setIncomingPort(incomingPort);
  account.setIncomingSecure(incomingSecure);
  account.setOutgoingHostName(outgoingHostName);
  account.setOutgoingPort(outgoingPort);
  account.setOutgoingSecure(outgoingSecure);
  account.setLogin(login);
  if (savePassword && Validator.isNotNull(password)) {
    account.setPasswordDecrypted(password);
  }
 else {
    account.setPasswordDecrypted(StringPool.BLANK);
  }
  account.setSavePassword(savePassword);
  account.setSignature(signature);
  account.setUseSignature(useSignature);
  account.setFolderPrefix(folderPrefix);
  account.setInboxFolderId(inboxFolderId);
  account.setDraftFolderId(draftFolderId);
  account.setSentFolderId(sentFolderId);
  account.setTrashFolderId(trashFolderId);
  account.setDefaultSender(defaultSender);
  accountPersistence.update(account);
  return account;
}

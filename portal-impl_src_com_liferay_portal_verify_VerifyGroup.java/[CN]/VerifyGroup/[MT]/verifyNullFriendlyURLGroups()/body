{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    List<Group> groups=GroupLocalServiceUtil.getNullFriendlyURLGroups();
    for (    Group group : groups) {
      String friendlyURL=StringPool.SLASH + group.getGroupId();
      User user=null;
      if (group.isCompany() && !group.isCompanyStagingGroup()) {
        friendlyURL=GroupConstants.GLOBAL_FRIENDLY_URL;
      }
 else       if (group.isUser()) {
        user=UserLocalServiceUtil.getUserById(group.getClassPK());
        friendlyURL=StringPool.SLASH + user.getScreenName();
      }
 else       if (group.getClassPK() > 0) {
        friendlyURL=StringPool.SLASH + group.getClassPK();
      }
      try {
        GroupLocalServiceUtil.updateFriendlyURL(group.getGroupId(),friendlyURL);
      }
 catch (      GroupFriendlyURLException gfurle) {
        if (user != null) {
          long userId=user.getUserId();
          String screenName=user.getScreenName();
          if (_log.isWarnEnabled()) {
            StringBundler sb=new StringBundler(7);
            sb.append("Updating user screen name ");
            sb.append(screenName);
            sb.append(" to ");
            sb.append(userId);
            sb.append(" because it is generating an invalid ");
            sb.append("friendly URL ");
            sb.append(friendlyURL);
            _log.warn(sb.toString());
          }
          UserLocalServiceUtil.updateScreenName(userId,String.valueOf(userId));
        }
 else {
          _log.error("Invalid Friendly URL " + friendlyURL);
          throw gfurle;
        }
      }
    }
  }
 }

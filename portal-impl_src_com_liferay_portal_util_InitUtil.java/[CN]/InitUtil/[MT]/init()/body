{
  if (_initialized) {
    return;
  }
  StopWatch stopWatch=new StopWatch();
  stopWatch.start();
  String userLanguage=SystemProperties.get("user.language");
  String userCountry=SystemProperties.get("user.country");
  String userVariant=SystemProperties.get("user.variant");
  LocaleUtil.setDefault(userLanguage,userCountry,userVariant);
  String userTimeZone=SystemProperties.get("user.timezone");
  TimeZoneUtil.setDefault(userTimeZone);
  try {
    PortalClassLoaderUtil.setClassLoader(ClassLoaderUtil.getContextClassLoader());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  com.liferay.portal.kernel.util.PropsUtil.setProps(new PropsImpl());
  if (GetterUtil.getBoolean(SystemProperties.get("log4j.configure.on.startup"),true)) {
    ClassLoader classLoader=InitUtil.class.getClassLoader();
    Log4JUtil.configureLog4J(classLoader);
  }
  try {
    LogFactoryUtil.setLogFactory(new Log4jLogFactoryImpl());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  SanitizerLogWrapper.init();
  JavaDetector.isJDK5();
  SecurityManagerUtil.init();
  if (SecurityManagerUtil.ENABLED) {
    com.liferay.portal.kernel.util.PropsUtil.setProps(DoPrivilegedUtil.wrap(com.liferay.portal.kernel.util.PropsUtil.getProps()));
    LogFactoryUtil.setLogFactory(DoPrivilegedUtil.wrap(LogFactoryUtil.getLogFactory()));
  }
  CacheRegistryUtil.setCacheRegistry(DoPrivilegedUtil.wrap(new CacheRegistryImpl()));
  ConfigurationFactoryUtil.setConfigurationFactory(DoPrivilegedUtil.wrap(new ConfigurationFactoryImpl()));
  DataSourceFactoryUtil.setDataSourceFactory(DoPrivilegedUtil.wrap(new DataSourceFactoryImpl()));
  DBFactoryUtil.setDBFactory(DoPrivilegedUtil.wrap(new DBFactoryImpl()));
  XmlReader.setDefaultEncoding(StringPool.UTF8);
  if (_PRINT_TIME) {
    System.out.println("InitAction takes " + stopWatch.getTime() + " ms");
  }
  _initialized=true;
}

{
  if (_initialized) {
    return;
  }
  if (!_neverInitialized) {
    PropsUtil.reload();
  }
 else {
    _neverInitialized=false;
  }
  init();
  try {
    if (initModuleFramework) {
      PropsValues.LIFERAY_WEB_PORTAL_CONTEXT_TEMPDIR=System.getProperty(SystemProperties.TMP_DIR);
      ModuleFrameworkUtilAdapter.initFramework();
    }
    ApplicationContext applicationContext=new ArrayApplicationContext(PropsValues.SPRING_CONFIGS_INFRASTRUCTURE);
    if (initModuleFramework) {
      ModuleFrameworkUtilAdapter.registerContext(applicationContext);
      ModuleFrameworkUtilAdapter.startFramework();
    }
    applicationContext=new ClassPathXmlApplicationContext(configLocations.toArray(new String[configLocations.size()]),applicationContext);
    BeanLocator beanLocator=new BeanLocatorImpl(ClassLoaderUtil.getPortalClassLoader(),applicationContext);
    PortalBeanLocatorUtil.setBeanLocator(beanLocator);
    if (initModuleFramework) {
      ModuleFrameworkUtilAdapter.registerContext(applicationContext);
      ModuleFrameworkUtilAdapter.startRuntime();
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  _initialized=true;
}

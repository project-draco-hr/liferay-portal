{
  for (int i=0; i < _GUID_CHECK.length; i++) {
    if (name.equals(_GUID_CHECK[i])) {
      if (_log.isWarnEnabled()) {
        _log.warn("Using '" + Counter.class.getName() + "' instead of '"+ name+ "'.  The id is deprecated and using a GUID.");
      }
      name=Counter.class.getName();
      break;
    }
  }
  if (size < _MINIMUM_INCREMENT_SIZE) {
    size=_MINIMUM_INCREMENT_SIZE;
  }
  CounterRegister register=getCounterRegister(name);
synchronized (register) {
    long newValue=register.getCurrentValue() + size;
    if (newValue > register.getRangeMax()) {
      Session session=null;
      try {
        session=openSession();
        Counter counter=(Counter)session.get(Counter.class,register.getName(),LockMode.UPGRADE);
        newValue=counter.getCurrentId() + 1;
        long rangeMax=counter.getCurrentId() + register.getRangeSize();
        counter.setCurrentId(rangeMax);
        session.save(counter);
        session.flush();
        register.setCurrentValue(newValue);
        register.setRangeMax(rangeMax);
      }
 catch (      HibernateException he) {
        throw new SystemException(he);
      }
 finally {
        closeSession(session);
      }
    }
 else {
      register.setCurrentValue(newValue);
    }
    return newValue;
  }
}

{
  Object[] finderArgs=new Object[]{kaleoTaskFormId};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_KALEOTASKFORMID,finderArgs,this);
  }
  if (result instanceof KaleoTaskFormInstance) {
    KaleoTaskFormInstance kaleoTaskFormInstance=(KaleoTaskFormInstance)result;
    if ((kaleoTaskFormId != kaleoTaskFormInstance.getKaleoTaskFormId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_KALEOTASKFORMINSTANCE_WHERE);
    query.append(_FINDER_COLUMN_KALEOTASKFORMID_KALEOTASKFORMID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(kaleoTaskFormId);
      List<KaleoTaskFormInstance> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_KALEOTASKFORMID,finderArgs,list);
      }
 else {
        if (list.size() > 1) {
          Collections.sort(list,Collections.reverseOrder());
          if (_log.isWarnEnabled()) {
            _log.warn("KaleoTaskFormInstancePersistenceImpl.fetchByKaleoTaskFormId(long, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
          }
        }
        KaleoTaskFormInstance kaleoTaskFormInstance=list.get(0);
        result=kaleoTaskFormInstance;
        cacheResult(kaleoTaskFormInstance);
        if ((kaleoTaskFormInstance.getKaleoTaskFormId() != kaleoTaskFormId)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_KALEOTASKFORMID,finderArgs,kaleoTaskFormInstance);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_KALEOTASKFORMID,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (KaleoTaskFormInstance)result;
  }
}

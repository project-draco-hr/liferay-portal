{
  long pk=RandomTestUtil.nextLong();
  WorkflowDefinitionLink workflowDefinitionLink=_persistence.create(pk);
  workflowDefinitionLink.setMvccVersion(RandomTestUtil.nextLong());
  workflowDefinitionLink.setGroupId(RandomTestUtil.nextLong());
  workflowDefinitionLink.setCompanyId(RandomTestUtil.nextLong());
  workflowDefinitionLink.setUserId(RandomTestUtil.nextLong());
  workflowDefinitionLink.setUserName(RandomTestUtil.randomString());
  workflowDefinitionLink.setCreateDate(RandomTestUtil.nextDate());
  workflowDefinitionLink.setModifiedDate(RandomTestUtil.nextDate());
  workflowDefinitionLink.setClassNameId(RandomTestUtil.nextLong());
  workflowDefinitionLink.setClassPK(RandomTestUtil.nextLong());
  workflowDefinitionLink.setTypePK(RandomTestUtil.nextLong());
  workflowDefinitionLink.setWorkflowDefinitionName(RandomTestUtil.randomString());
  workflowDefinitionLink.setWorkflowDefinitionVersion(RandomTestUtil.nextInt());
  _models.add(_persistence.update(workflowDefinitionLink));
  return workflowDefinitionLink;
}

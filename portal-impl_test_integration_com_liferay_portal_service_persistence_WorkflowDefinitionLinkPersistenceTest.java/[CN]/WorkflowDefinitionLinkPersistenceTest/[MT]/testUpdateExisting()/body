{
  long pk=RandomTestUtil.nextLong();
  WorkflowDefinitionLink newWorkflowDefinitionLink=_persistence.create(pk);
  newWorkflowDefinitionLink.setMvccVersion(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setGroupId(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setCompanyId(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setUserId(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setUserName(RandomTestUtil.randomString());
  newWorkflowDefinitionLink.setCreateDate(RandomTestUtil.nextDate());
  newWorkflowDefinitionLink.setModifiedDate(RandomTestUtil.nextDate());
  newWorkflowDefinitionLink.setClassNameId(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setClassPK(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setTypePK(RandomTestUtil.nextLong());
  newWorkflowDefinitionLink.setWorkflowDefinitionName(RandomTestUtil.randomString());
  newWorkflowDefinitionLink.setWorkflowDefinitionVersion(RandomTestUtil.nextInt());
  _persistence.update(newWorkflowDefinitionLink);
  WorkflowDefinitionLink existingWorkflowDefinitionLink=_persistence.findByPrimaryKey(newWorkflowDefinitionLink.getPrimaryKey());
  Assert.assertEquals(existingWorkflowDefinitionLink.getMvccVersion(),newWorkflowDefinitionLink.getMvccVersion());
  Assert.assertEquals(existingWorkflowDefinitionLink.getWorkflowDefinitionLinkId(),newWorkflowDefinitionLink.getWorkflowDefinitionLinkId());
  Assert.assertEquals(existingWorkflowDefinitionLink.getGroupId(),newWorkflowDefinitionLink.getGroupId());
  Assert.assertEquals(existingWorkflowDefinitionLink.getCompanyId(),newWorkflowDefinitionLink.getCompanyId());
  Assert.assertEquals(existingWorkflowDefinitionLink.getUserId(),newWorkflowDefinitionLink.getUserId());
  Assert.assertEquals(existingWorkflowDefinitionLink.getUserName(),newWorkflowDefinitionLink.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingWorkflowDefinitionLink.getCreateDate()),Time.getShortTimestamp(newWorkflowDefinitionLink.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingWorkflowDefinitionLink.getModifiedDate()),Time.getShortTimestamp(newWorkflowDefinitionLink.getModifiedDate()));
  Assert.assertEquals(existingWorkflowDefinitionLink.getClassNameId(),newWorkflowDefinitionLink.getClassNameId());
  Assert.assertEquals(existingWorkflowDefinitionLink.getClassPK(),newWorkflowDefinitionLink.getClassPK());
  Assert.assertEquals(existingWorkflowDefinitionLink.getTypePK(),newWorkflowDefinitionLink.getTypePK());
  Assert.assertEquals(existingWorkflowDefinitionLink.getWorkflowDefinitionName(),newWorkflowDefinitionLink.getWorkflowDefinitionName());
  Assert.assertEquals(existingWorkflowDefinitionLink.getWorkflowDefinitionVersion(),newWorkflowDefinitionLink.getWorkflowDefinitionVersion());
}

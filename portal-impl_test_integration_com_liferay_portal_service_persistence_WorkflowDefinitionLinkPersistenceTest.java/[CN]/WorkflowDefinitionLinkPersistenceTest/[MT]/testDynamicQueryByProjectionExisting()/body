{
  WorkflowDefinitionLink newWorkflowDefinitionLink=addWorkflowDefinitionLink();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(WorkflowDefinitionLink.class,WorkflowDefinitionLink.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("workflowDefinitionLinkId"));
  Object newWorkflowDefinitionLinkId=newWorkflowDefinitionLink.getWorkflowDefinitionLinkId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("workflowDefinitionLinkId",new Object[]{newWorkflowDefinitionLinkId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingWorkflowDefinitionLinkId=result.get(0);
  Assert.assertEquals(existingWorkflowDefinitionLinkId,newWorkflowDefinitionLinkId);
}

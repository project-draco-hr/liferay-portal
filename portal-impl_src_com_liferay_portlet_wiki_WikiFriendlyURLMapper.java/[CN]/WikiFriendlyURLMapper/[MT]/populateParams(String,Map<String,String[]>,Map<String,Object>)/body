{
  addParam(params,"p_p_id",_PORTLET_ID);
  addParam(params,"p_p_lifecycle","0");
  addParam(params,"p_p_mode",PortletMode.VIEW);
  addParam(params,"struts_action","/wiki/view");
  int x=friendlyURLPath.indexOf(StringPool.SLASH,1);
  String wikiPath=friendlyURLPath.substring(x + 1);
  int lastSlash=wikiPath.lastIndexOf(StringPool.SLASH);
  if (lastSlash != -1) {
    String lastFragment=wikiPath.substring(lastSlash + 1);
    if (lastFragment.equalsIgnoreCase("exclusive") || lastFragment.equalsIgnoreCase("maximized") || lastFragment.equalsIgnoreCase("normal")) {
      addParam(params,"p_p_state",lastFragment);
      wikiPath=wikiPath.substring(0,lastSlash);
    }
  }
  String firstFragment=wikiPath;
  int firstSlash=wikiPath.indexOf(StringPool.SLASH);
  if (firstSlash != -1) {
    firstFragment=wikiPath.substring(0,firstSlash);
    wikiPath=wikiPath.substring(firstSlash + 1);
  }
 else {
    wikiPath=null;
  }
  if (firstFragment.equalsIgnoreCase("tag") && (wikiPath != null)) {
    addParam(params,"struts_action","/wiki/view_tagged_pages");
    String tag=HttpUtil.decodeURL(wikiPath);
    addParam(params,"tag",tag);
  }
 else {
    if (Validator.isNumber(firstFragment)) {
      addParam(params,"nodeId",firstFragment);
      addParam(params,"nodeName",StringPool.BLANK);
    }
 else {
      addParam(params,"nodeId",StringPool.BLANK);
      addParam(params,"nodeName",firstFragment);
    }
    if (wikiPath != null) {
      if (wikiPath.equals("all_pages") || wikiPath.equals("draft_pages") || wikiPath.equals("orphan_pages")|| wikiPath.equals("recent_changes")) {
        addParam(params,"struts_action","/wiki/view_" + wikiPath);
      }
 else {
        wikiPath=HttpUtil.decodeURL(wikiPath);
        addParam(params,"title",wikiPath);
      }
    }
    addParam(params,"tag",StringPool.BLANK);
  }
}

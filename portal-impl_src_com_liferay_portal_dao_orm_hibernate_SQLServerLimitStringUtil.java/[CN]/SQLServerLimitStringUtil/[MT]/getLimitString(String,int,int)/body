{
  String sqlLowerCase=StringUtil.toLowerCase(sql);
  int fromPos=sqlLowerCase.indexOf(" from ");
  String selectFrom=sql.substring(0,fromPos);
  int orderByPos=sqlLowerCase.lastIndexOf(" order by ");
  String selectFromWhere=null;
  String orderBy=StringPool.BLANK;
  if (orderByPos > 0) {
    selectFromWhere=sql.substring(fromPos,orderByPos);
    orderBy=sql.substring(orderByPos + 9);
  }
 else {
    selectFromWhere=sql.substring(fromPos);
  }
  String[] splitOrderBy=_splitOrderBy(selectFrom,orderBy);
  String innerOrderBy=splitOrderBy[0];
  String outerOrderBy=splitOrderBy[1];
  String[] splitSelectFrom=_splitSelectFrom(selectFrom,innerOrderBy,limit);
  String innerSelectFrom=splitSelectFrom[0];
  String outerSelectFrom=splitSelectFrom[1];
  StringBundler sb=new StringBundler(15);
  sb.append(outerSelectFrom);
  sb.append(" from (");
  sb.append(outerSelectFrom);
  sb.append(", row_number() over (");
  sb.append(outerOrderBy);
  sb.append(") as _page_row_num from (");
  sb.append(innerSelectFrom);
  sb.append(selectFromWhere);
  sb.append(innerOrderBy);
  sb.append(" ) _temp_table_1 ) _temp_table_2");
  sb.append(" where _page_row_num between ");
  sb.append(offset + 1);
  sb.append(" and ");
  sb.append(limit);
  sb.append(" order by _page_row_num");
  return sb.toString();
}

{
  String innerSelectFrom=selectFrom;
  if (Validator.isNotNull(innerOrderBy)) {
    Matcher matcher=_selectPattern.matcher(innerSelectFrom);
    innerSelectFrom=matcher.replaceAll("select top ".concat(String.valueOf(limit)).concat(StringPool.SPACE));
  }
  String outerSelectFrom=selectFrom;
  while (outerSelectFrom.charAt(0) == CharPool.OPEN_PARENTHESIS) {
    outerSelectFrom=outerSelectFrom.substring(1);
  }
  Matcher matcher=_columnAliasPattern.matcher(outerSelectFrom);
  outerSelectFrom=matcher.replaceAll("$1");
  matcher=_distinctPattern.matcher(outerSelectFrom);
  outerSelectFrom=matcher.replaceAll(StringPool.SPACE);
  matcher=_qualifiedColumnPattern.matcher(outerSelectFrom);
  outerSelectFrom=matcher.replaceAll("$1");
  return new String[]{innerSelectFrom,outerSelectFrom};
}

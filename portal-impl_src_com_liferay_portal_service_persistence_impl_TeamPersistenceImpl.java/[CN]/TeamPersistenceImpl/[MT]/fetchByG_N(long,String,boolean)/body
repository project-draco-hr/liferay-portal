{
  Object[] finderArgs=new Object[]{groupId,name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_N,finderArgs,this);
  }
  if (result instanceof Team) {
    Team team=(Team)result;
    if ((groupId != team.getGroupId()) || !Validator.equals(name,team.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_TEAM_WHERE);
    query.append(_FINDER_COLUMN_G_N_GROUPID_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_G_N_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_N_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_G_N_NAME_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindName) {
        qPos.add(name);
      }
      List<Team> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_N,finderArgs,list);
      }
 else {
        Team team=list.get(0);
        result=team;
        cacheResult(team);
        if ((team.getGroupId() != groupId) || (team.getName() == null) || !team.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_N,finderArgs,team);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_N,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (Team)result;
  }
}

{
  String cmd=ParamUtil.getString(req,Constants.CMD);
  WikiPage page=null;
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      page=updatePage(req);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deletePage(req);
    }
 else     if (cmd.equals(Constants.REVERT)) {
      revertPage(req);
    }
 else     if (cmd.equals(Constants.SUBSCRIBE)) {
      subscribePage(req);
    }
 else     if (cmd.equals(Constants.UNSUBSCRIBE)) {
      unsubscribePage(req);
    }
    if (Validator.isNotNull(cmd)) {
      String redirect=ParamUtil.getString(req,"redirect");
      if (page != null) {
        boolean saveAndContinue=ParamUtil.getBoolean(req,"saveAndContinue");
        if (saveAndContinue) {
          redirect=getSaveAndContinueRedirect(config,req,page,redirect);
        }
      }
      sendRedirect(req,res,redirect);
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchNodeException || e instanceof NoSuchPageException || e instanceof PrincipalException) {
      SessionErrors.add(req,e.getClass().getName());
      setForward(req,"portlet.wiki.error");
    }
 else     if (e instanceof PageContentException || e instanceof PageVersionException || e instanceof PageTitleException) {
      SessionErrors.add(req,e.getClass().getName());
    }
 else     if (e instanceof TagsEntryException) {
      SessionErrors.add(req,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

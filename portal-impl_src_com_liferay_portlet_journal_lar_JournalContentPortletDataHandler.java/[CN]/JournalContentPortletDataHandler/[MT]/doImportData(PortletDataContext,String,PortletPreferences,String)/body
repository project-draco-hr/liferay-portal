{
  portletDataContext.importPermissions("com.liferay.portlet.journal",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  long previousScopeGroupId=portletDataContext.getScopeGroupId();
  long importGroupId=GetterUtil.getLong(portletPreferences.getValue("groupId",null));
  if (importGroupId == portletDataContext.getSourceGroupId()) {
    portletDataContext.setScopeGroupId(portletDataContext.getGroupId());
  }
  Element rootElement=portletDataContext.getImportDataRootElement();
  JournalPortletDataHandler.importReferenceData(portletDataContext,rootElement);
  Element ddmStructuresElement=portletDataContext.getImportDataGroupElement(DDMStructure.class);
  List<Element> ddmStructureElements=ddmStructuresElement.elements();
  for (  Element ddmStructureElement : ddmStructureElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmStructureElement);
  }
  Element ddmTemplatesElement=portletDataContext.getImportDataGroupElement(DDMTemplate.class);
  List<Element> ddmTemplateElements=ddmTemplatesElement.elements();
  for (  Element ddmTemplateElement : ddmTemplateElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmTemplateElement);
  }
  Element articlesElement=portletDataContext.getImportDataGroupElement(JournalArticle.class);
  List<Element> articleElements=articlesElement.elements();
  if (!articleElements.isEmpty()) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,articleElements.get(0));
  }
  String articleId=portletPreferences.getValue("articleId",null);
  if (Validator.isNotNull(articleId)) {
    Map<String,String> articleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class + ".articleId");
    articleId=MapUtil.getString(articleIds,articleId,articleId);
    portletPreferences.setValue("articleId",articleId);
    String importedArticleGroupId=String.valueOf(portletDataContext.getScopeGroupId());
    portletPreferences.setValue("groupId",importedArticleGroupId);
    Layout layout=LayoutLocalServiceUtil.getLayout(portletDataContext.getPlid());
    JournalContentSearchLocalServiceUtil.updateContentSearch(portletDataContext.getScopeGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletId,articleId,true);
  }
 else {
    portletPreferences.setValue("groupId",StringPool.BLANK);
    portletPreferences.setValue("articleId",StringPool.BLANK);
  }
  String ddmTemplateKey=portletPreferences.getValue("ddmTemplateKey",null);
  if (Validator.isNotNull(ddmTemplateKey)) {
    Map<String,String> ddmTemplateKeys=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(DDMTemplate.class + ".ddmTemplateKey");
    ddmTemplateKey=MapUtil.getString(ddmTemplateKeys,ddmTemplateKey,ddmTemplateKey);
    portletPreferences.setValue("ddmTemplateKey",ddmTemplateKey);
  }
 else {
    portletPreferences.setValue("ddmTemplateKey",StringPool.BLANK);
  }
  portletDataContext.setScopeGroupId(previousScopeGroupId);
  return portletPreferences;
}

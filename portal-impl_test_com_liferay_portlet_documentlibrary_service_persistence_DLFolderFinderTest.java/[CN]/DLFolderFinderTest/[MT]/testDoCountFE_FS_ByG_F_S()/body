{
  String expectSQL1="(SELECT COUNT(DISTINCT DLFileEntry.fileEntryId)" + "AS COUNT_VALUE FROM DLFileEntry WHERE(DLFileEntry.groupId = ?)" + "AND DLFileEntry.folderId= ?)UNION ALL(SELECT COUNT(DISTINCT "+ "fileShortcutId)AS COUNT_VALUE FROM DLFileShortcut WHERE("+ "DLFileShortcut.groupId = ?)AND(DLFileShortcut.status = 0)AND "+ "DLFileShortcut.folderId= ?)";
  _finderImpl.doCountFE_FS_ByG_F_S(0,0,WorkflowConstants.STATUS_ANY,false);
  String actualSQL1=SQLRecorderThreadLocal.getSQL();
  actualSQL1=SQLRecorderUtil.stripSQL(actualSQL1);
  assertEquals(expectSQL1,actualSQL1);
  String expectSQL2="(SELECT COUNT(DISTINCT " + "DLFileVersion.fileEntryId)AS COUNT_VALUE FROM DLFileVersion " + "WHERE(DLFileVersion.groupId = ?)AND(DLFileVersion.status = ?)"+ "AND DLFileVersion.folderId= ?)UNION ALL(SELECT COUNT(DISTINCT "+ "fileShortcutId)AS COUNT_VALUE FROM DLFileShortcut WHERE"+ "(DLFileShortcut.groupId = ?)AND(DLFileShortcut.status = 0)AND "+ "DLFileShortcut.folderId= ?)";
  _finderImpl.doCountFE_FS_ByG_F_S(0,0,WorkflowConstants.STATUS_APPROVED,false);
  String actualSQL2=SQLRecorderThreadLocal.getSQL();
  actualSQL2=SQLRecorderUtil.stripSQL(actualSQL2);
  assertEquals(expectSQL2,actualSQL2);
  String expectSQL3="(SELECT COUNT(DISTINCT " + "DLFileVersion.fileEntryId)AS COUNT_VALUE FROM DLFileVersion " + "WHERE(DLFileVersion.groupId = ?)AND(DLFileVersion.status = ?)"+ "AND DLFileVersion.folderId= ?)UNION ALL(SELECT COUNT(DISTINCT "+ "fileShortcutId)AS COUNT_VALUE FROM DLFileShortcut WHERE"+ "(DLFileShortcut.groupId = ?)AND(DLFileShortcut.status = 0)AND "+ "DLFileShortcut.folderId= ?)";
  _finderImpl.doCountFE_FS_ByG_F_S(0,0,WorkflowConstants.STATUS_APPROVED,true);
  String actualSQL3=SQLRecorderThreadLocal.getSQL();
  actualSQL3=SQLRecorderUtil.stripSQL(actualSQL3);
  assertEquals(expectSQL3,actualSQL3);
}

{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  String propertiesDestDir=GetterUtil.getString(arguments.get("properties.dest.dir"));
  String propertiesFileName=GetterUtil.getString(arguments.get("properties.file"));
  String title=GetterUtil.getString(arguments.get("properties.title"));
  boolean toc=GetterUtil.getBoolean(arguments.get("properties.toc"));
  System.out.println("Converting " + propertiesFileName + " to HTML");
  File propertiesFile=new File(propertiesFileName);
  Map<String,Object> context=new HashMap<String,Object>();
  context.put("pageTitle",title);
  context.put("toc",toc);
  int pos=propertiesFileName.lastIndexOf(StringPool.SLASH);
  if (pos != -1) {
    propertiesFileName=propertiesFileName.substring(pos + 1);
  }
  context.put("propertiesFileName",propertiesFileName);
  String propertiesString=_fileUtil.read(propertiesFile);
  String[] sectionStrings=propertiesString.split("\n\n");
  List<PropertiesSection> sections=new ArrayList<PropertiesSection>(sectionStrings.length);
  for (  String sectionString : sectionStrings) {
    sectionString=StringUtil.trimLeading(sectionString,CharPool.SPACE);
    PropertiesSection section=new PropertiesSection(sectionString);
    if (sectionString.startsWith("##")) {
      int lineCount=_getLineCount(sectionString);
      if (lineCount == 3) {
        section.setTitle(_extractTitle(section));
        sections.add(section);
      }
 else       if (lineCount > 3) {
        section.setComments(_extractComments(section));
        sections.add(section);
      }
 else {
        StringBundler sb=new StringBundler(8);
        sb.append("Error: PropertiesSection should consist of 3 ");
        sb.append("or more lines:");
        sb.append(StringPool.NEW_LINE);
        sb.append("##");
        sb.append(StringPool.NEW_LINE);
        sb.append("## Comment(s)");
        sb.append(StringPool.NEW_LINE);
        sb.append("##");
        System.out.println(sb.toString());
        return;
      }
    }
 else {
      section.setDefaultProperties(_extractDefaultProperties(section));
      section.setExampleProperties(_extractExampleProperties(section));
      section.setPropertyComments(_extractPropertyComments(section));
      sections.add(section);
    }
  }
  context.put("sections",sections);
  try {
    StringBundler sb=new StringBundler(4);
    sb.append(propertiesDestDir);
    sb.append(StringPool.SLASH);
    sb.append(propertiesFileName);
    sb.append(".html");
    String htmlFileName=sb.toString();
    System.out.println("Writing " + htmlFileName);
    File propertiesHTMLFile=new File(htmlFileName);
    Writer writer=new FileWriter(propertiesHTMLFile);
    try {
      FreeMarkerUtil.process(_TPL_PROPERTIES_HTML,context,writer);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    writer.flush();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
}

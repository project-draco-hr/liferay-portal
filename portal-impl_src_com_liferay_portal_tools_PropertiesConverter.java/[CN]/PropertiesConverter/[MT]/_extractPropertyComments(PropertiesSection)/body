{
  List<PropertyComment> propertyComments=new ArrayList<PropertyComment>();
  StringBundler paragraph=new StringBundler();
  boolean prevIsPreformatted=false;
  String[] lines=propertiesSection.getText().split(StringPool.NEW_LINE);
  for (int i=0; i < lines.length; i++) {
    String line=StringUtil.trimTrailing(lines[i]);
    if (line.startsWith(_INDENT_DOUBLE + "#")) {
      break;
    }
 else     if (line.trim().startsWith("# " + _INDENT)) {
      if (prevIsPreformatted) {
        paragraph.append(line.trim().replaceFirst("#",StringPool.BLANK));
      }
 else {
        _appendParagraphAsPropertyComment(propertyComments,paragraph);
        paragraph=new StringBundler(line.trim().replaceFirst("#",StringPool.BLANK));
      }
      paragraph.append(StringPool.NEW_LINE);
      prevIsPreformatted=true;
    }
 else     if (line.trim().startsWith("# ")) {
      if (prevIsPreformatted) {
        _appendParagraphAsPropertyComment(propertyComments,paragraph);
        paragraph=new StringBundler(line.trim().replaceFirst("#",StringPool.BLANK).trim());
      }
 else {
        if (paragraph.length() > 0) {
          paragraph.append(StringPool.SPACE);
        }
        paragraph.append(line.replaceFirst("#",StringPool.BLANK).trim());
      }
      paragraph.append(StringPool.NEW_LINE);
      prevIsPreformatted=false;
    }
 else {
      String trimmedLine=line.trim();
      if (trimmedLine.startsWith("#")) {
        if (trimmedLine.length() < 2) {
          _appendParagraphAsPropertyComment(propertyComments,paragraph);
          paragraph=new StringBundler();
          continue;
        }
 else {
          _appendParagraphAsPropertyComment(propertyComments,paragraph);
          break;
        }
      }
 else {
        _appendParagraphAsPropertyComment(propertyComments,paragraph);
        break;
      }
    }
  }
  return propertyComments;
}

{
  Object[] finderArgs=new Object[]{ppTxnId};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_PPTXNID,finderArgs,this);
  }
  if (result instanceof ShoppingOrder) {
    ShoppingOrder shoppingOrder=(ShoppingOrder)result;
    if (!Objects.equals(ppTxnId,shoppingOrder.getPpTxnId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_SHOPPINGORDER_WHERE);
    boolean bindPpTxnId=false;
    if (ppTxnId == null) {
      query.append(_FINDER_COLUMN_PPTXNID_PPTXNID_1);
    }
 else     if (ppTxnId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_PPTXNID_PPTXNID_3);
    }
 else {
      bindPpTxnId=true;
      query.append(_FINDER_COLUMN_PPTXNID_PPTXNID_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindPpTxnId) {
        qPos.add(ppTxnId);
      }
      List<ShoppingOrder> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_PPTXNID,finderArgs,list);
      }
 else {
        if (list.size() > 1) {
          Collections.sort(list,Collections.reverseOrder());
          if (_log.isWarnEnabled()) {
            _log.warn("ShoppingOrderPersistenceImpl.fetchByPPTxnId(String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
          }
        }
        ShoppingOrder shoppingOrder=list.get(0);
        result=shoppingOrder;
        cacheResult(shoppingOrder);
        if ((shoppingOrder.getPpTxnId() == null) || !shoppingOrder.getPpTxnId().equals(ppTxnId)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_PPTXNID,finderArgs,shoppingOrder);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_PPTXNID,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (ShoppingOrder)result;
  }
}

{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  if (!cmd.equals(Constants.UPDATE)) {
    return;
  }
  String title=ParamUtil.getString(actionRequest,"title");
  String description=ParamUtil.getString(actionRequest,"description");
  boolean requireCaptcha=ParamUtil.getBoolean(actionRequest,"requireCaptcha");
  String successURL=ParamUtil.getString(actionRequest,"successURL");
  boolean sendAsEmail=ParamUtil.getBoolean(actionRequest,"sendAsEmail");
  String subject=ParamUtil.getString(actionRequest,"subject");
  String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
  boolean saveToDatabase=ParamUtil.getBoolean(actionRequest,"saveToDatabase");
  boolean saveToFile=ParamUtil.getBoolean(actionRequest,"saveToFile");
  String fileName=ParamUtil.getString(actionRequest,"fileName");
  boolean updateFields=ParamUtil.getBoolean(actionRequest,"updateFields");
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  PortletPreferences prefs=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest,portletResource);
  if (Validator.isNull(title)) {
    SessionErrors.add(actionRequest,"titleRequired");
  }
  if (Validator.isNull(subject)) {
    SessionErrors.add(actionRequest,"subjectRequired");
  }
  if (!sendAsEmail && !saveToDatabase && !saveToFile) {
    SessionErrors.add(actionRequest,"handlingRequired");
  }
  if (sendAsEmail) {
    if (Validator.isNull(emailAddress)) {
      SessionErrors.add(actionRequest,"emailAddressRequired");
    }
 else     if (!Validator.isEmailAddress(emailAddress)) {
      SessionErrors.add(actionRequest,"emailAddressInvalid");
    }
  }
  if (saveToFile) {
    try {
      FileOutputStream fos=new FileOutputStream(fileName,true);
      fos.close();
    }
 catch (    SecurityException es) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
catch (    FileNotFoundException fnfe) {
      SessionErrors.add(actionRequest,"fileNameInvalid");
    }
  }
  if (!SessionErrors.isEmpty(actionRequest)) {
    return;
  }
  prefs.setValue("title",title);
  prefs.setValue("description",description);
  prefs.setValue("requireCaptcha",String.valueOf(requireCaptcha));
  prefs.setValue("successURL",successURL);
  prefs.setValue("sendAsEmail",String.valueOf(sendAsEmail));
  prefs.setValue("subject",subject);
  prefs.setValue("emailAddress",emailAddress);
  prefs.setValue("saveToDatabase",String.valueOf(saveToDatabase));
  prefs.setValue("saveToFile",String.valueOf(saveToFile));
  prefs.setValue("fileName",fileName);
  if (updateFields) {
    int i=1;
    String databaseTableName=WebFormUtil.getNewDatabaseTableName(portletResource);
    prefs.setValue("databaseTableName",databaseTableName);
    String fieldLabel=ParamUtil.getString(actionRequest,"fieldLabel" + i);
    String fieldType=ParamUtil.getString(actionRequest,"fieldType" + i);
    boolean fieldOptional=ParamUtil.getBoolean(actionRequest,"fieldOptional" + i);
    String fieldOptions=ParamUtil.getString(actionRequest,"fieldOptions" + i);
    String fieldValidationScript=ParamUtil.getString(actionRequest,"fieldValidationScript" + i);
    String fieldValidationErrorMessage=ParamUtil.getString(actionRequest,"fieldValidationErrorMessage" + i);
    while ((i == 1) || (Validator.isNotNull(fieldLabel))) {
      if ((Validator.isNotNull(fieldValidationScript) ^ (Validator.isNotNull(fieldValidationErrorMessage)))) {
        SessionErrors.add(actionRequest,"invalidValidationDefinition" + i);
      }
      prefs.setValue("fieldLabel" + i,fieldLabel);
      prefs.setValue("fieldType" + i,fieldType);
      prefs.setValue("fieldOptional" + i,String.valueOf(fieldOptional));
      prefs.setValue("fieldOptions" + i,fieldOptions);
      prefs.setValue("fieldValidationScript" + i,fieldValidationScript);
      prefs.setValue("fieldValidationErrorMessage" + i,fieldValidationErrorMessage);
      i++;
      fieldLabel=ParamUtil.getString(actionRequest,"fieldLabel" + i);
      fieldType=ParamUtil.getString(actionRequest,"fieldType" + i);
      fieldOptional=ParamUtil.getBoolean(actionRequest,"fieldOptional" + i);
      fieldOptions=ParamUtil.getString(actionRequest,"fieldOptions" + i);
      fieldValidationScript=ParamUtil.getString(actionRequest,"fieldValidationScript" + i);
      fieldValidationErrorMessage=ParamUtil.getString(actionRequest,"fieldValidationErrorMessage" + i);
    }
    if (!SessionErrors.isEmpty(actionRequest)) {
      return;
    }
    fieldLabel=prefs.getValue("fieldLabel" + i,StringPool.BLANK);
    while (Validator.isNotNull(fieldLabel)) {
      prefs.setValue("fieldLabel" + i,StringPool.BLANK);
      prefs.setValue("fieldType" + i,StringPool.BLANK);
      prefs.setValue("fieldOptional" + i,StringPool.BLANK);
      prefs.setValue("fieldOptions" + i,StringPool.BLANK);
      prefs.setValue("fieldValidationScript" + i,StringPool.BLANK);
      prefs.setValue("fieldValidationErrorMessage" + i,StringPool.BLANK);
      i++;
      fieldLabel=prefs.getValue("fieldLabel" + i,StringPool.BLANK);
    }
  }
  if (SessionErrors.isEmpty(actionRequest)) {
    prefs.store();
    SessionMessages.add(actionRequest,portletConfig.getPortletName() + ".doConfigure");
  }
}

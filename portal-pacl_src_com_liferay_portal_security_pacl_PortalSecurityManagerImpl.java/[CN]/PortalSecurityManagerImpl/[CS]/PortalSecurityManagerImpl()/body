{
  _originalSecurityManager=System.getSecurityManager();
  initClasses();
  try {
    Policy policy=null;
    if (_originalSecurityManager != null) {
      policy=Policy.getPolicy();
    }
    _portalPolicy=new PortalPolicy(policy);
    Policy.setPolicy(_portalPolicy);
    _portalPolicy.refresh();
  }
 catch (  Exception e) {
    if (_log.isInfoEnabled()) {
      _log.info("Unable to override the original Java security policy " + "because sufficient privileges are not granted to " + "Liferay. PACL is not enabled.");
    }
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
    return;
  }
  try {
    initInitialContextFactoryBuilder();
  }
 catch (  Exception e) {
    if (_log.isInfoEnabled()) {
      _log.info("Unable to override the initial context factory builder " + "because one already exists. JNDI security is not " + "enabled.");
    }
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
  try {
    initPACLImpls();
  }
 catch (  Exception e) {
    if (_log.isInfoEnabled()) {
      _log.info("Unable to initialize portal runtime permissions. Some " + "portal runtime security is not enabled.");
    }
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
  if (ServerDetector.isWebLogic()) {
    addWebLogicHook();
  }
  if (ServerDetector.isWebSphere()) {
    addWebSphereHook();
  }
}

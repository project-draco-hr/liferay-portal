{
  List<ResultRowSplitterEntry> resultRowSplitterEntries=new ArrayList<>();
  List<ResultRow> newResultRows=new ArrayList<>();
  List<ResultRow> inProgressResultRows=new ArrayList<>();
  List<ResultRow> completedResultRows=new ArrayList<>();
  for (  ResultRow resultRow : resultRows) {
    KBComment kbComment=(KBComment)resultRow.getObject();
    if (kbComment.getStatus() == KBCommentConstants.STATUS_NEW) {
      newResultRows.add(resultRow);
    }
 else     if (kbComment.getStatus() == KBCommentConstants.STATUS_IN_PROGRESS) {
      inProgressResultRows.add(resultRow);
    }
 else {
      completedResultRows.add(resultRow);
    }
  }
  if (!newResultRows.isEmpty()) {
    resultRowSplitterEntries.add(new ResultRowSplitterEntry(getNewKBCommentsLabel(),newResultRows));
  }
  if (!inProgressResultRows.isEmpty()) {
    resultRowSplitterEntries.add(new ResultRowSplitterEntry(getInProgressKBCommentsLabel(),inProgressResultRows));
  }
  if (!completedResultRows.isEmpty()) {
    resultRowSplitterEntries.add(new ResultRowSplitterEntry(getCompletedKBCommentsLabel(),completedResultRows));
  }
  if (_orderByType.equals("asc")) {
    Collections.reverse(resultRowSplitterEntries);
  }
  return resultRowSplitterEntries;
}

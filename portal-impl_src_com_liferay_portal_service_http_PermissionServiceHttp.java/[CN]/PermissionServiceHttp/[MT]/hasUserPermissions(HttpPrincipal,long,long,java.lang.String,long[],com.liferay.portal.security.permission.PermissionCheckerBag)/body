{
  try {
    Object paramObj0=new LongWrapper(userId);
    Object paramObj1=new LongWrapper(groupId);
    Object paramObj2=actionId;
    if (actionId == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=resourceIds;
    if (resourceIds == null) {
      paramObj3=new NullWrapper("[J");
    }
    Object paramObj4=permissionCheckerBag;
    if (permissionCheckerBag == null) {
      paramObj4=new NullWrapper("com.liferay.portal.security.permission.PermissionCheckerBag");
    }
    MethodWrapper methodWrapper=new MethodWrapper(PermissionServiceUtil.class.getName(),"hasUserPermissions",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      throw new com.liferay.portal.SystemException(e);
    }
    return ((Boolean)returnObj).booleanValue();
  }
 catch (  com.liferay.portal.SystemException se) {
    _log.error(se,se);
    throw se;
  }
}

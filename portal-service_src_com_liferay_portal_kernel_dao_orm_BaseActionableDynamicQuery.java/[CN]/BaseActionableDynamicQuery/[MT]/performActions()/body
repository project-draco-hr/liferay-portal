{
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(_clazz,_classLoader);
  Projection minPrimaryKeyProjection=ProjectionFactoryUtil.min(_primaryKeyPropertyName);
  Projection maxPrimaryKeyProjection=ProjectionFactoryUtil.max(_primaryKeyPropertyName);
  ProjectionList projectionList=ProjectionFactoryUtil.projectionList();
  projectionList.add(minPrimaryKeyProjection);
  projectionList.add(maxPrimaryKeyProjection);
  dynamicQuery.setProjection(projectionList);
  addDefaultCriteria(dynamicQuery);
  addCriteria(dynamicQuery);
  List<Object[]> results=(List<Object[]>)executeDynamicQuery(_dynamicQueryMethod,dynamicQuery);
  Object[] minAndMaxPrimaryKeys=results.get(0);
  if ((minAndMaxPrimaryKeys[0] == null) || (minAndMaxPrimaryKeys[1] == null)) {
    return;
  }
  long minPrimaryKey=(Long)minAndMaxPrimaryKeys[0];
  long maxPrimaryKey=(Long)minAndMaxPrimaryKeys[1];
  long startPrimaryKey=minPrimaryKey;
  long endPrimaryKey=startPrimaryKey + _interval;
  while (startPrimaryKey <= maxPrimaryKey) {
    performActions(startPrimaryKey,endPrimaryKey);
    intervalCompleted(startPrimaryKey,endPrimaryKey);
    indexInterval();
    startPrimaryKey=endPrimaryKey;
    endPrimaryKey+=_interval;
  }
}

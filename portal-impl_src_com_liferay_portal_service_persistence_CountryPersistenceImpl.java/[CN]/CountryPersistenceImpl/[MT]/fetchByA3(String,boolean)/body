{
  Object[] finderArgs=new Object[]{a3};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_A3,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_COUNTRY_WHERE);
    if (a3 == null) {
      query.append(_FINDER_COLUMN_A3_A3_1);
    }
 else {
      if (a3.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_A3_A3_3);
      }
 else {
        query.append(_FINDER_COLUMN_A3_A3_2);
      }
    }
    query.append(CountryModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (a3 != null) {
        qPos.add(a3);
      }
      List<Country> list=q.list();
      result=list;
      Country country=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A3,finderArgs,list);
      }
 else {
        country=list.get(0);
        cacheResult(country);
        if ((country.getA3() == null) || !country.getA3().equals(a3)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A3,finderArgs,country);
        }
      }
      return country;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_A3,finderArgs,new ArrayList<Country>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Country)result;
    }
  }
}

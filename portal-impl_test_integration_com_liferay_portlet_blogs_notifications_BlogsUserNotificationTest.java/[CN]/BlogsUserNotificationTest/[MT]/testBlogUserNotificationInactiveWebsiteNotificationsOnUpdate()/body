{
  int initialUserNotificationEventsCount=UserNotificationEventLocalServiceUtil.getUserNotificationEventsCount(_user.getUserId());
  setActiveUserNotificationDeliveryType(UserNotificationDeliveryConstants.TYPE_WEBSITE,UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY,false);
  setActiveUserNotificationDeliveryType(UserNotificationDeliveryConstants.TYPE_WEBSITE,UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY,false);
  BlogsEntry entry=addBlogsEntry();
  updateEntry(entry);
  Assert.assertEquals(2,_logRecords.size());
  LogRecord logRecord=_logRecords.get(0);
  Assert.assertEquals("No mail has been sent","Sending email",logRecord.getMessage());
  logRecord=_logRecords.get(1);
  Assert.assertEquals("No mail has been sent","Sending email",logRecord.getMessage());
  List<JSONObject> entryUserNotificationEventsJsonObjects=getEntryUserNotificationEventsJsonObjects(entry.getEntryId());
  if (!entryUserNotificationEventsJsonObjects.isEmpty()) {
    Assert.fail("A userNotification exists for this entry");
  }
  Assert.assertTrue((initialUserNotificationEventsCount) == _userNotificationEvents.size());
  Assert.assertEquals(0,entryUserNotificationEventsJsonObjects.size());
}

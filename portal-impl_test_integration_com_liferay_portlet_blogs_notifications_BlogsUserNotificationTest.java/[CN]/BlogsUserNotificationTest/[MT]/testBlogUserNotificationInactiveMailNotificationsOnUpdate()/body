{
  int initialUserNotificationEventsCount=UserNotificationEventLocalServiceUtil.getUserNotificationEventsCount(_user.getUserId());
  updateUserNotificationDelivery(UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY,UserNotificationDeliveryConstants.TYPE_EMAIL,false);
  updateUserNotificationDelivery(UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY,UserNotificationDeliveryConstants.TYPE_EMAIL,false);
  BlogsEntry entry=addBlogsEntry();
  updateEntry(entry);
  Assert.assertEquals("An email has been sent",0,_logRecords.size());
  List<JSONObject> entryUserNotificationEventsJsonObjects=getEntryUserNotificationEventsJsonObjects(_user.getUserId(),entry.getEntryId());
  if (entryUserNotificationEventsJsonObjects.isEmpty()) {
    Assert.fail("userNotification doesn't exists for this entry");
  }
  List<UserNotificationEvent> userNotificationEvents=getUserNotificationEvents(_user.getUserId());
  Assert.assertEquals(initialUserNotificationEventsCount + 2,userNotificationEvents.size());
  Assert.assertEquals(2,entryUserNotificationEventsJsonObjects.size());
  int[] notificationTypes=new int[0];
  for (  JSONObject jsonObject : entryUserNotificationEventsJsonObjects) {
    notificationTypes=ArrayUtil.append(notificationTypes,jsonObject.getInt("notificationType"));
  }
  Assert.assertNotEquals(notificationTypes[0],notificationTypes[1]);
  Assert.assertTrue(ArrayUtil.contains(notificationTypes,UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY));
  Assert.assertTrue(ArrayUtil.contains(notificationTypes,UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY));
}

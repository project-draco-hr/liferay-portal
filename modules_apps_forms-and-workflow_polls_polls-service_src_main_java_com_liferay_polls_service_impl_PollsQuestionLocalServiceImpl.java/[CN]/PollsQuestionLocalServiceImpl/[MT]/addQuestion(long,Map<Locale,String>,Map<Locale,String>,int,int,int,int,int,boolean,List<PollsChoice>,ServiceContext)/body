{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=serviceContext.getScopeGroupId();
  Date expirationDate=null;
  if (!neverExpire) {
    expirationDate=PortalUtil.getDate(expirationDateMonth,expirationDateDay,expirationDateYear,expirationDateHour,expirationDateMinute,user.getTimeZone(),QuestionExpirationDateException.class);
  }
  validate(titleMap,descriptionMap,choices,expirationDate);
  long questionId=counterLocalService.increment();
  PollsQuestion question=pollsQuestionPersistence.create(questionId);
  question.setUuid(serviceContext.getUuid());
  question.setGroupId(groupId);
  question.setCompanyId(user.getCompanyId());
  question.setUserId(user.getUserId());
  question.setUserName(user.getFullName());
  question.setTitleMap(titleMap);
  question.setDescriptionMap(descriptionMap);
  question.setExpirationDate(expirationDate);
  pollsQuestionPersistence.update(question);
  if (serviceContext.isAddGroupPermissions() || serviceContext.isAddGuestPermissions()) {
    addQuestionResources(question,serviceContext.isAddGroupPermissions(),serviceContext.isAddGuestPermissions());
  }
 else {
    addQuestionResources(question,serviceContext.getGroupPermissions(),serviceContext.getGuestPermissions());
  }
  if (choices != null) {
    for (    PollsChoice choice : choices) {
      pollsChoiceLocalService.addChoice(userId,questionId,choice.getName(),choice.getDescription(),serviceContext);
    }
  }
  return question;
}

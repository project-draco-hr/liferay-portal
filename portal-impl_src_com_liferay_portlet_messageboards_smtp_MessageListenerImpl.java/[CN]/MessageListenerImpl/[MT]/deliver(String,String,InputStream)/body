{
  try {
    StopWatch stopWatch=null;
    if (_log.isDebugEnabled()) {
      stopWatch=new StopWatch();
      stopWatch.start();
      _log.debug("Deliver message from " + from + " to "+ recipient);
    }
    Company company=_getCompany(recipient);
    long categoryId=_getCategoryId(recipient);
    long parentMessageId=_getParentMessageId(recipient);
    if (_log.isDebugEnabled()) {
      _log.debug("Category id " + categoryId);
    }
    User user=UserLocalServiceUtil.getUserByEmailAddress(company.getCompanyId(),from);
    MimeMessage message=new MimeMessage(MailEngine.getSession(),data);
    String parentHeader=null;
    String[] references=message.getHeader("References");
    if ((references != null) && (references.length > 0)) {
      parentHeader=references[0].substring(references[0].lastIndexOf("<"));
    }
    if (parentHeader == null) {
      String[] inReplyToHeaders=message.getHeader("In-Reply-To");
      parentHeader=inReplyToHeaders[0];
    }
    MBMessage parentMessage=null;
    if (parentHeader != null) {
      if (_log.isDebugEnabled()) {
        _log.debug("Parent header " + parentHeader);
      }
      if (parentMessageId == -1) {
        parentMessageId=MBUtil.getMessageId(parentHeader);
      }
      if (_log.isDebugEnabled()) {
        _log.debug("Previous message id " + parentMessageId);
      }
      try {
        if (parentMessageId > 0) {
          parentMessage=MBMessageLocalServiceUtil.getMessage(parentMessageId);
        }
      }
 catch (      NoSuchMessageException nsme) {
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Previous message " + parentMessage);
    }
    MBMailMessage collector=new MBMailMessage();
    _collectPartContent(message,collector);
    PermissionCheckerUtil.setThreadValues(user);
    if (parentMessage == null) {
      MBMessageServiceUtil.addMessage(categoryId,message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
 else {
      MBMessageServiceUtil.addMessage(categoryId,parentMessage.getThreadId(),parentMessage.getMessageId(),message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Delivering message takes " + stopWatch.getTime() + " ms");
    }
  }
 catch (  PrincipalException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Prevented unauthorized post from " + from);
    }
    throw new MessageListenerException(pe);
  }
catch (  Exception e) {
    _log.error(e,e);
    throw new MessageListenerException(e);
  }
}

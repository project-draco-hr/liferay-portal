{
  try {
    Company company=_getCompany(recipient);
    long categoryId=_getCategoryId(recipient);
    if (_log.isDebugEnabled()) {
      _log.debug("Deliver message from " + from + " to category "+ categoryId);
    }
    User user=UserLocalServiceUtil.getUserByEmailAddress(company.getCompanyId(),from);
    MimeMessage message=new MimeMessage(MailEngine.getSession(),data);
    String[] inReplyToHeaders=message.getHeader("In-Reply-To");
    MBMessage prevMessage=null;
    if ((inReplyToHeaders != null) && (inReplyToHeaders.length > 0)) {
      String inReplyTo=inReplyToHeaders[0];
      if (_log.isDebugEnabled()) {
        _log.debug("In-Reply-To " + inReplyTo);
      }
      long prevMessageId=MBUtil.getMessageId(inReplyTo);
      if (_log.isDebugEnabled()) {
        _log.debug("Previous message id " + prevMessageId);
      }
      try {
        if (prevMessageId > 0) {
          prevMessage=MBMessageLocalServiceUtil.getMessage(prevMessageId);
        }
      }
 catch (      NoSuchMessageException nsme) {
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Previous message " + prevMessage);
    }
    MBMailMessage collector=new MBMailMessage();
    _collectPartContent(message,collector);
    PrincipalBean.setThreadValues(user);
    if (prevMessage == null) {
      MBMessageServiceUtil.addMessage(categoryId,message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
 else {
      MBMessageServiceUtil.addMessage(categoryId,prevMessage.getThreadId(),prevMessage.getMessageId(),message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
  }
 catch (  PrincipalException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Prevented unauthorized post from " + from);
    }
    throw new MessageListenerException(pe);
  }
catch (  Exception e) {
    _log.error(e,e);
    throw new MessageListenerException(e);
  }
}

{
  RulesEngineProxyBean rulesEngineProxyBean=new RulesEngineProxyBean();
  rulesEngineProxyBean.setDestinationName(RulesEngineConstants.DESTINATION_NAME);
  rulesEngineProxyBean.setSynchronousDestinationName(RulesEngineConstants.DESTINATION_NAME);
  rulesEngineProxyBean.setSynchronousMessageSenderMode(SynchronousMessageSender.Mode.DIRECT);
  rulesEngineProxyBean.afterPropertiesSet();
  InvocationHandlerFactory invocationHandlerFactory=MessagingProxyInvocationHandler.getInvocationHandlerFactory();
  InvocationHandler invocationHandler=invocationHandlerFactory.createInvocationHandler(rulesEngineProxyBean);
  Class<?> beanClass=rulesEngineProxyBean.getClass();
  RulesEngine rulesEngine=(RulesEngine)ProxyUtil.newProxyInstance(beanClass.getClassLoader(),beanClass.getInterfaces(),invocationHandler);
  Dictionary<String,Object> dictionary=new HashMapDictionary<>();
  dictionary.put("rules.engine.proxy",Boolean.TRUE);
  _serviceRegistration=bundleContext.registerService(RulesEngine.class,rulesEngine,dictionary);
}

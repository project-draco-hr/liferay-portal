{
  StringBuilder sb=new StringBuilder();
  sb.append("<h1>");
  sb.append(project.getProperty("top.level.result.message"));
  sb.append("</h1>");
  sb.append("<p>Build Time: ");
  sb.append(project.getProperty("top.level.build.time"));
  sb.append("</p>");
  String rebaseBranchGitCommit=project.getProperty("rebase.branch.git.commit");
  if (!rebaseBranchGitCommit.equals("")) {
    sb.append("<h4>Base Branch:</h4>");
    sb.append("<p>Branch Name: ");
    sb.append("<a href=\"https://github.com/liferay/");
    sb.append(project.getProperty("repository"));
    sb.append("/tree/");
    sb.append(project.getProperty("branch.name"));
    sb.append("\">");
    sb.append(project.getProperty("branch.name"));
    sb.append("</a><br />");
    sb.append("Branch GIT ID: <a href=\"https://github.com/liferay/");
    sb.append(project.getProperty("repository"));
    sb.append("/commit/");
    sb.append(rebaseBranchGitCommit);
    sb.append("\">");
    sb.append(rebaseBranchGitCommit);
    sb.append("</a></p>");
  }
  String buildURL=project.getProperty("build.url");
  String progressiveText=JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"),false);
  String[] consoleSnippets=progressiveText.split("Executing subrepository task ");
  if (consoleSnippets.length > 1) {
    sb.append("<h4>Task Summary:</h4>");
    sb.append("<ul>");
    for (    String consoleSnippet : consoleSnippets) {
      sb.append("<li><strong><a href=\"");
      sb.append(project.getProperty("top.level.shared.dir.url"));
      sb.append("/");
      String taskName=consoleSnippet.substring(0,consoleSnippet.indexOf("\n"));
      JenkinsResultsParserUtil.write(new File(project.getProperty("top.level.shared.dir") + "/" + taskName+ ".log"),consoleSnippet);
      sb.append(taskName);
      sb.append(".log");
      sb.append("\">");
      sb.append(taskName);
      sb.append("</a></strong> ");
      sb.append("- ");
      SubrepositoryTask subRepositoryTask=_getSubrepositoryTask(buildURL,consoleSnippet);
      sb.append(_getResult(subrepositoryTask));
      sb.append("</li>");
    }
    sb.append("</ul>");
  }
 else {
    sb.append(FailureMessageUtil.getFailureMessage(project,buildURL));
  }
  sb.append("<h5>For more details click <a href=\"");
  sb.append(buildURL);
  sb.append("\">here</a>.</h5>");
  project.setProperty("report.html.content",sb.toString());
}

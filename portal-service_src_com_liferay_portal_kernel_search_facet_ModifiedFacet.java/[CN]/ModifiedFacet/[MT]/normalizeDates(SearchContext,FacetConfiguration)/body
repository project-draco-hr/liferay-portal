{
  Calendar now=Calendar.getInstance();
  now.set(Calendar.SECOND,0);
  now.set(Calendar.MINUTE,0);
  Calendar pastHour=(Calendar)now.clone();
  pastHour.set(Calendar.HOUR_OF_DAY,now.get(Calendar.HOUR_OF_DAY) - 1);
  Calendar past24Hours=(Calendar)now.clone();
  past24Hours.set(Calendar.DAY_OF_YEAR,now.get(Calendar.DAY_OF_YEAR) - 1);
  Calendar pastWeek=(Calendar)now.clone();
  pastWeek.set(Calendar.DAY_OF_YEAR,now.get(Calendar.DAY_OF_YEAR) - 7);
  Calendar pastMonth=(Calendar)now.clone();
  pastMonth.set(Calendar.MONTH,now.get(Calendar.MONTH) - 1);
  Calendar pastYear=(Calendar)now.clone();
  pastYear.set(Calendar.YEAR,now.get(Calendar.YEAR) - 1);
  now.set(Calendar.HOUR_OF_DAY,now.get(Calendar.HOUR_OF_DAY) + 1);
  DateFormat dateFormat=DateFormatFactoryUtil.getSimpleDateFormat("yyyyMMddHHmmss");
  JSONObject dataJSONObject=facetConfiguration.getData();
  if (dataJSONObject.has("ranges")) {
    JSONArray rangesJSONArray=dataJSONObject.getJSONArray("ranges");
    for (int i=0; i < rangesJSONArray.length(); i++) {
      JSONObject rangeObject=rangesJSONArray.getJSONObject(i);
      String rangeString=rangeObject.getString("range");
      rangeString=StringUtil.replace(rangeString,new String[]{"past-hour","past-24-hours","past-week","past-month","past-year","*"},new String[]{dateFormat.format(pastHour.getTime()),dateFormat.format(past24Hours.getTime()),dateFormat.format(pastWeek.getTime()),dateFormat.format(pastMonth.getTime()),dateFormat.format(pastYear.getTime()),dateFormat.format(now.getTime())});
      rangeObject.put("range",rangeString);
    }
  }
}

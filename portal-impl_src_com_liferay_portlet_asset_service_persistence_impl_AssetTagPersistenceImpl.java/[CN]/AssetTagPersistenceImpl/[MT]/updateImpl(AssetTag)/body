{
  assetTag=toUnwrappedModel(assetTag);
  boolean isNew=assetTag.isNew();
  AssetTagModelImpl assetTagModelImpl=(AssetTagModelImpl)assetTag;
  if (Validator.isNull(assetTag.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    assetTag.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (assetTag.getCreateDate() == null)) {
    if (serviceContext == null) {
      assetTag.setCreateDate(now);
    }
 else {
      assetTag.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!assetTagModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      assetTag.setModifiedDate(now);
    }
 else {
      assetTag.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (assetTag.isNew()) {
      session.save(assetTag);
      assetTag.setNew(false);
    }
 else {
      session.merge(assetTag);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AssetTagModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((assetTagModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetTagModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{assetTagModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((assetTagModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetTagModelImpl.getOriginalUuid(),assetTagModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{assetTagModelImpl.getUuid(),assetTagModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((assetTagModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetTagModelImpl.getOriginalGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{assetTagModelImpl.getGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
  }
  EntityCacheUtil.putResult(AssetTagModelImpl.ENTITY_CACHE_ENABLED,AssetTagImpl.class,assetTag.getPrimaryKey(),assetTag,false);
  clearUniqueFindersCache(assetTag);
  cacheUniqueFindersCache(assetTag,isNew);
  assetTag.resetOriginalValues();
  return assetTag;
}

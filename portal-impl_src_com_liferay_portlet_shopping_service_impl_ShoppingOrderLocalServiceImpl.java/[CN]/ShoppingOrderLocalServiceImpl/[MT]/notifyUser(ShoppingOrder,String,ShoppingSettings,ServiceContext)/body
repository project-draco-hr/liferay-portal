{
  User user=userPersistence.findByPrimaryKey(order.getUserId());
  Currency currency=Currency.getInstance(shoppingSettings.getCurrencyId());
  String billingAddress=order.getBillingFirstName() + " " + order.getBillingLastName()+ "<br>"+ order.getBillingEmailAddress()+ "<br>"+ order.getBillingStreet()+ "<br>"+ order.getBillingCity()+ "<br>"+ order.getBillingState()+ "<br>"+ order.getBillingZip()+ "<br>"+ order.getBillingCountry()+ "<br>"+ order.getBillingPhone()+ "<br>";
  String shippingAddress=order.getShippingFirstName() + " " + order.getShippingLastName()+ "<br>"+ order.getShippingEmailAddress()+ "<br>"+ order.getShippingStreet()+ "<br>"+ order.getShippingCity()+ "<br>"+ order.getShippingState()+ "<br>"+ order.getShippingZip()+ "<br>"+ order.getShippingCountry()+ "<br>"+ order.getShippingPhone()+ "<br>";
  double total=ShoppingUtil.calculateTotal(order);
  String fromName=shoppingSettings.getEmailFromName();
  String fromAddress=shoppingSettings.getEmailFromAddress();
  String toName=user.getFullName();
  String toAddress=user.getEmailAddress();
  String subject=null;
  String body=null;
  if (emailType.equals("confirmation")) {
    subject=shoppingSettings.getEmailOrderConfirmationSubject();
    body=shoppingSettings.getEmailOrderConfirmationBody();
  }
 else   if (emailType.equals("shipping")) {
    subject=shoppingSettings.getEmailOrderShippingSubject();
    body=shoppingSettings.getEmailOrderShippingBody();
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(order.getCompanyId());
  subscriptionSender.setContextAttributes("[$ORDER_BILLING_ADDRESS$]",billingAddress,"[$ORDER_CURRENCY$]",currency.getSymbol(),"[$ORDER_NUMBER$]",order.getNumber(),"[$ORDER_SHIPPING_ADDRESS$]",shippingAddress,"[$ORDER_TOTAL$]",total);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("shopping_order",order.getOrderId());
  subscriptionSender.setPortletId(PortletKeys.SHOPPING);
  subscriptionSender.setScopeGroupId(order.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(order.getUserId());
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

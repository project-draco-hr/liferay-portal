{
  long pk=ServiceTestUtil.nextLong();
  AnnouncementsFlag newAnnouncementsFlag=_persistence.create(pk);
  newAnnouncementsFlag.setUserId(ServiceTestUtil.nextLong());
  newAnnouncementsFlag.setCreateDate(ServiceTestUtil.nextDate());
  newAnnouncementsFlag.setEntryId(ServiceTestUtil.nextLong());
  newAnnouncementsFlag.setValue(ServiceTestUtil.nextInt());
  _persistence.update(newAnnouncementsFlag);
  AnnouncementsFlag existingAnnouncementsFlag=_persistence.findByPrimaryKey(newAnnouncementsFlag.getPrimaryKey());
  Assert.assertEquals(existingAnnouncementsFlag.getFlagId(),newAnnouncementsFlag.getFlagId());
  Assert.assertEquals(existingAnnouncementsFlag.getUserId(),newAnnouncementsFlag.getUserId());
  Assert.assertEquals(Time.getShortTimestamp(existingAnnouncementsFlag.getCreateDate()),Time.getShortTimestamp(newAnnouncementsFlag.getCreateDate()));
  Assert.assertEquals(existingAnnouncementsFlag.getEntryId(),newAnnouncementsFlag.getEntryId());
  Assert.assertEquals(existingAnnouncementsFlag.getValue(),newAnnouncementsFlag.getValue());
}

{
  Object[] finderArgs=new Object[]{companyId,repositoryId,path,version};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_R_P_V,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_SELECT_DLCONTENT_WHERE);
    query.append(_FINDER_COLUMN_C_R_P_V_COMPANYID_2);
    query.append(_FINDER_COLUMN_C_R_P_V_REPOSITORYID_2);
    if (path == null) {
      query.append(_FINDER_COLUMN_C_R_P_V_PATH_1);
    }
 else {
      if (path.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_C_R_P_V_PATH_3);
      }
 else {
        query.append(_FINDER_COLUMN_C_R_P_V_PATH_2);
      }
    }
    if (version == null) {
      query.append(_FINDER_COLUMN_C_R_P_V_VERSION_1);
    }
 else {
      if (version.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_C_R_P_V_VERSION_3);
      }
 else {
        query.append(_FINDER_COLUMN_C_R_P_V_VERSION_2);
      }
    }
    query.append(DLContentModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      qPos.add(repositoryId);
      if (path != null) {
        qPos.add(path);
      }
      if (version != null) {
        qPos.add(version);
      }
      List<DLContent> list=q.list();
      result=list;
      DLContent dlContent=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_R_P_V,finderArgs,list);
      }
 else {
        dlContent=list.get(0);
        cacheResult(dlContent);
        if ((dlContent.getCompanyId() != companyId) || (dlContent.getRepositoryId() != repositoryId) || (dlContent.getPath() == null)|| !dlContent.getPath().equals(path)|| (dlContent.getVersion() == null)|| !dlContent.getVersion().equals(version)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_R_P_V,finderArgs,dlContent);
        }
      }
      return dlContent;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_C_R_P_V,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (DLContent)result;
    }
  }
}

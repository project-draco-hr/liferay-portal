{
  long companyId=PortalUtil.getCompanyId(request);
  String themeId=ParamUtil.getString(request,"themeId");
  if (Validator.isNotNull(themeId)) {
    try {
      Theme theme=ThemeLocalServiceUtil.getTheme(companyId,themeId,false);
      return theme;
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  String requestURI=URLDecoder.decode(request.getRequestURI(),StringPool.UTF8);
  Matcher portalThemeMatcher=_portalThemePattern.matcher(requestURI);
  if (portalThemeMatcher.find()) {
    String themePathId=portalThemeMatcher.group(1);
    themePathId=StringUtil.replace(themePathId,StringPool.UNDERLINE,StringPool.BLANK);
    themeId=PortalUtil.getJsSafePortletId(themePathId);
  }
 else {
    Matcher pluginThemeMatcher=_pluginThemePattern.matcher(requestURI);
    if (pluginThemeMatcher.find()) {
      String themePathId=pluginThemeMatcher.group(1);
      themePathId=StringUtil.replace(themePathId,StringPool.UNDERLINE,StringPool.BLANK);
      StringBundler sb=new StringBundler(4);
      sb.append(themePathId);
      sb.append(PortletConstants.WAR_SEPARATOR);
      sb.append(themePathId);
      sb.append("theme");
      themePathId=sb.toString();
      themeId=PortalUtil.getJsSafePortletId(themePathId);
    }
  }
  if (Validator.isNull(themeId)) {
    return null;
  }
  try {
    Theme theme=ThemeLocalServiceUtil.getTheme(companyId,themeId,false);
    return theme;
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return null;
}

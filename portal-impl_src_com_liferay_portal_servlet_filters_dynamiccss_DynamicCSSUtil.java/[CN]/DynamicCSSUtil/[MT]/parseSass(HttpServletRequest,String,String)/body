{
  if (!DynamicCSSFilter.ENABLED) {
    return content;
  }
  StopWatch stopWatch=null;
  if (_log.isDebugEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
  }
  if (request == null) {
    return content;
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  Theme theme=null;
  if (themeDisplay == null) {
    theme=_getTheme(request,cssRealPath);
    if (theme == null) {
      String currentURL=PortalUtil.getCurrentURL(request);
      if (_log.isWarnEnabled()) {
        _log.warn("No theme found for " + currentURL);
      }
      return content;
    }
  }
  String parsedContent=null;
  boolean themeCssFastLoad=_isThemeCssFastLoad(request,themeDisplay);
  File cssRealFile=new File(cssRealPath);
  File cacheCssRealFile=SassToCssBuilder.getCacheFile(cssRealPath);
  if (themeCssFastLoad && cacheCssRealFile.exists() && (cacheCssRealFile.lastModified() == cssRealFile.lastModified())) {
    parsedContent=FileUtil.read(cacheCssRealFile);
    if (_log.isDebugEnabled()) {
      _log.debug("Loading SASS cache from " + cacheCssRealFile + " takes "+ stopWatch.getTime()+ " ms");
    }
  }
 else {
    content=SassToCssBuilder.parseStaticTokens(content);
    String queryString=request.getQueryString();
    if (!themeCssFastLoad && Validator.isNotNull(queryString)) {
      content=_propagateQueryString(content,queryString);
    }
    parsedContent=_parseSass(request,themeDisplay,theme,cssRealPath,content);
    if (_log.isDebugEnabled()) {
      _log.debug("Parsing SASS for " + cssRealPath + " takes "+ stopWatch.getTime()+ " ms");
    }
  }
  if (Validator.isNull(parsedContent)) {
    return content;
  }
  parsedContent=StringUtil.replace(parsedContent,"@theme_image_path@",_getThemeImagesPath(request,themeDisplay,theme));
  return parsedContent;
}

{
  final Project project=copy.getProject();
  Logger logger=project.getLogger();
  Properties artifactProperties=getArtifactProperties(recordArtifactTask);
  if (isStale(project,artifactProperties)) {
    if (logger.isDebugEnabled()) {
      logger.debug("Unable to download artifact, {} is stale",project);
    }
    return;
  }
  final String artifactURL=artifactProperties.getProperty("artifact.url");
  if (Validator.isNull(artifactURL)) {
    if (logger.isWarnEnabled()) {
      logger.warn("Unable to find artifact.url in {}",recordArtifactTask.getOutputFile());
    }
    return;
  }
  Task jarTask=GradleUtil.getTask(project,JavaPlugin.JAR_TASK_NAME);
  boolean replaced=GradleUtil.replaceCopySpecSourcePath(copy.getRootSpec(),jarTask,new Callable<File>(){
    @Override public File call() throws Exception {
      return FileUtil.get(project,artifactURL);
    }
  }
);
  if (replaced && logger.isLifecycleEnabled()) {
    logger.lifecycle("Downloading artifact from {}",artifactURL);
  }
}

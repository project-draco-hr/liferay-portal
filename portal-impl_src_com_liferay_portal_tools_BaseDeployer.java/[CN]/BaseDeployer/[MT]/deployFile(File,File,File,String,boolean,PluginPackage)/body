{
  boolean undeployOnRedeploy=false;
  try {
    undeployOnRedeploy=PrefsPropsUtil.getBoolean(PropsKeys.HOT_UNDEPLOY_ON_REDEPLOY,PropsValues.HOT_UNDEPLOY_ON_REDEPLOY);
  }
 catch (  Exception e) {
  }
  if (undeployOnRedeploy) {
    DeployUtil.undeploy(appServerType,deployDir);
  }
  if (!overwrite && UpToDateTask.isUpToDate(srcFile,deployDir)) {
    if (_log.isInfoEnabled()) {
      _log.info(deployDir + " is already up to date");
    }
    return false;
  }
  File tempDir=new File(SystemProperties.get(SystemProperties.TMP_DIR) + File.separator + Time.getTimestamp());
  if (PropsValues.PORTLET_CONTAINER_IMPL_SUN) {
    File sunTempDir=new File(SystemProperties.get(SystemProperties.TMP_DIR) + File.separator + "sun"+ File.separator+ Time.getTimestamp());
    Properties props=new Properties();
    props.setProperty(PortletWarUpdater.ADD_WEB_XML,"true");
    PortletWarUpdater warUpdater=new PortletWarUpdater(props);
    boolean success=warUpdater.preparePortlet(srcFile,sunTempDir.toString());
    if (success) {
      File sunSrcFile=new File(sunTempDir + File.separator + srcFile.getName());
      ExpandTask.expand(sunSrcFile,tempDir);
    }
 else {
      ExpandTask.expand(srcFile,tempDir);
    }
    deployDirectory(tempDir,mergeDir,deployDir,displayName,overwrite,pluginPackage);
    DeleteTask.deleteDirectory(sunTempDir);
  }
 else {
    ExpandTask.expand(srcFile,tempDir);
    deployDirectory(tempDir,mergeDir,deployDir,displayName,overwrite,pluginPackage);
  }
  DeleteTask.deleteDirectory(tempDir);
  return true;
}

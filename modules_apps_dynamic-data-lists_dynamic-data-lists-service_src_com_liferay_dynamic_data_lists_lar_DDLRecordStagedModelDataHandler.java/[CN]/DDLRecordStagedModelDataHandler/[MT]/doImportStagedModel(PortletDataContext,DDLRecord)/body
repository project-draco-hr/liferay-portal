{
  long userId=portletDataContext.getUserId(record.getUserUuid());
  Map<Long,Long> recordSetIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDLRecordSet.class);
  long recordSetId=MapUtil.getLong(recordSetIds,record.getRecordSetId(),record.getRecordSetId());
  ServiceContext serviceContext=portletDataContext.createServiceContext(record);
  Element recordElement=portletDataContext.getImportDataElement(record);
  DDMFormValues ddmFormValues=getImportDDMFormValues(portletDataContext,recordElement,recordSetId);
  DDLRecord importedRecord=null;
  if (portletDataContext.isDataStrategyMirror()) {
    DDLRecord existingRecord=fetchStagedModelByUuidAndGroupId(record.getUuid(),portletDataContext.getScopeGroupId());
    if (existingRecord == null) {
      serviceContext.setUuid(record.getUuid());
      importedRecord=DDLRecordLocalServiceUtil.addRecord(userId,portletDataContext.getScopeGroupId(),recordSetId,record.getDisplayIndex(),ddmFormValues,serviceContext);
    }
 else {
      importedRecord=DDLRecordLocalServiceUtil.updateRecord(userId,existingRecord.getRecordId(),false,record.getDisplayIndex(),ddmFormValues,serviceContext);
    }
  }
 else {
    importedRecord=DDLRecordLocalServiceUtil.addRecord(userId,portletDataContext.getScopeGroupId(),recordSetId,record.getDisplayIndex(),ddmFormValues,serviceContext);
  }
  portletDataContext.importClassedModel(record,importedRecord);
}

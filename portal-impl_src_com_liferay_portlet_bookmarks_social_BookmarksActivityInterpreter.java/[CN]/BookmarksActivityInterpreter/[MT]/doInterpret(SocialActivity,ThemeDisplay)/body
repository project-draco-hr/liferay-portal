{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  if (!BookmarksEntryPermission.contains(permissionChecker,activity.getClassPK(),ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  String receiverUserName=getUserName(activity.getReceiverUserId(),themeDisplay);
  int activityType=activity.getType();
  BookmarksEntry entry=BookmarksEntryLocalServiceUtil.getEntry(activity.getClassPK());
  String link=themeDisplay.getPortalURL() + themeDisplay.getPathMain() + "/bookmarks/find_entry?entryId="+ activity.getClassPK();
  String titlePattern=null;
  if (activityType == BookmarksActivityKeys.ADD_ENTRY) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-bookmarks-add-entry";
    }
 else {
      titlePattern="activity-bookmarks-add-entry-in";
    }
  }
 else   if (activityType == BookmarksActivityKeys.UPDATE_ENTRY) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-bookmarks-update-entry";
    }
 else {
      titlePattern="activity-bookmarks-update-entry-in";
    }
  }
  String entryTitle=wrapLink(link,getTitle(activity.getExtraData(),entry.getName()));
  Object[] titleArguments=new Object[]{groupName,creatorUserName,receiverUserName,entryTitle};
  String title=themeDisplay.translate(titlePattern,titleArguments);
  String body=StringPool.BLANK;
  return new SocialActivityFeedEntry(link,title,body);
}

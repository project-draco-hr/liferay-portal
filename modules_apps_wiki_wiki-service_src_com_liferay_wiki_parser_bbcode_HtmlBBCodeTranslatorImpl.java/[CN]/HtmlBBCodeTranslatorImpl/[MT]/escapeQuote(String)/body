{
  StringBuilder sb=new StringBuilder();
  int index=0;
  Matcher matcher=_bbCodePattern.matcher(quote);
  Collection<String> values=_bbCodeCharacters.values();
  while (matcher.find()) {
    String match=matcher.group();
    int matchStartIndex=matcher.start();
    int nextSemicolonIndex=quote.indexOf(StringPool.SEMICOLON,matchStartIndex);
    sb.append(quote.substring(index,matchStartIndex));
    boolean entityFound=false;
    if (nextSemicolonIndex >= 0) {
      String value=quote.substring(matchStartIndex,nextSemicolonIndex + 1);
      if (values.contains(value)) {
        sb.append(value);
        index=matchStartIndex + value.length();
        entityFound=true;
      }
    }
    if (!entityFound) {
      String escapedValue=_bbCodeCharacters.get(match);
      sb.append(escapedValue);
      index=matchStartIndex + match.length();
    }
  }
  if (index < quote.length()) {
    sb.append(quote.substring(index,quote.length()));
  }
  return sb.toString();
}

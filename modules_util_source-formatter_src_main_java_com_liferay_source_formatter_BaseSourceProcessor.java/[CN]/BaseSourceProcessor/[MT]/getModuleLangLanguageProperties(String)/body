{
  Properties properties=_moduleLangLanguageProperties.get(absolutePath);
  if (properties != null) {
    return properties;
  }
  String buildGradleContent=null;
  String buildGradleFileLocation=absolutePath;
  while (true) {
    int pos=buildGradleFileLocation.lastIndexOf(StringPool.SLASH);
    if (pos == -1) {
      return null;
    }
    buildGradleFileLocation=buildGradleFileLocation.substring(0,pos + 1);
    File file=new File(buildGradleFileLocation + "build.gradle");
    if (file.exists()) {
      buildGradleContent=FileUtil.read(file);
      break;
    }
    buildGradleFileLocation=StringUtil.replaceLast(buildGradleFileLocation,StringPool.SLASH,StringPool.BLANK);
  }
  Matcher matcher=applyLangMergerPluginPattern.matcher(buildGradleContent);
  if (!matcher.find()) {
    return null;
  }
  String moduleLocation=StringUtil.replaceLast(buildGradleFileLocation,StringPool.SLASH,StringPool.BLANK);
  List<String> moduleLangDirNames=getModuleLangDirNames(moduleLocation,buildGradleContent);
  properties=new Properties();
  for (  String moduleLangDirName : moduleLangDirNames) {
    String moduleLangLanguagePropertiesFileName=moduleLangDirName + "/Language.properties";
    File file=new File(moduleLangLanguagePropertiesFileName);
    if (!file.exists()) {
      continue;
    }
    InputStream inputStream=new FileInputStream(file);
    properties.load(inputStream);
  }
  _moduleLangLanguageProperties.put(absolutePath,properties);
  return properties;
}

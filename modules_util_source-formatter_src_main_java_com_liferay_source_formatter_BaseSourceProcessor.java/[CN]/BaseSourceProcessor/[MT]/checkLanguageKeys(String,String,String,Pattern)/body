{
  String fileExtension=FilenameUtils.getExtension(fileName);
  if (!portalSource || fileExtension.equals("vm")) {
    return;
  }
  if (_portalLanguageProperties == null) {
    _portalLanguageProperties=new Properties();
    File portalLanguagePropertiesFile=new File(getFile("portal-impl",PORTAL_MAX_DIR_LEVEL),"src/content/Language.properties");
    InputStream inputStream=new FileInputStream(portalLanguagePropertiesFile);
    _portalLanguageProperties.load(inputStream);
  }
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    String[] languageKeys=getLanguageKeys(matcher);
    for (    String languageKey : languageKeys) {
      if (Validator.isNumber(languageKey) || languageKey.endsWith(StringPool.DASH) || languageKey.endsWith(StringPool.OPEN_BRACKET)|| languageKey.endsWith(StringPool.PERIOD)|| languageKey.endsWith(StringPool.UNDERLINE)|| languageKey.startsWith(StringPool.DASH)|| languageKey.startsWith(StringPool.OPEN_BRACKET)|| languageKey.startsWith(StringPool.OPEN_CURLY_BRACE)|| languageKey.startsWith(StringPool.PERIOD)|| languageKey.startsWith(StringPool.UNDERLINE)|| _portalLanguageProperties.containsKey(languageKey)) {
        continue;
      }
      Properties moduleLanguageProperties=getModuleLanguageProperties(fileName);
      if ((moduleLanguageProperties != null) && moduleLanguageProperties.containsKey(languageKey)) {
        continue;
      }
      Properties moduleLangLanguageProperties=getModuleLangLanguageProperties(absolutePath);
      if ((moduleLangLanguageProperties != null) && moduleLangLanguageProperties.containsKey(languageKey)) {
        continue;
      }
      Properties bndFileLanguageProperties=getBNDFileLanguageProperties(fileName);
      if ((bndFileLanguageProperties == null) || !bndFileLanguageProperties.containsKey(languageKey)) {
        processErrorMessage(fileName,"missing language key: " + languageKey + StringPool.SPACE+ fileName);
      }
    }
  }
}

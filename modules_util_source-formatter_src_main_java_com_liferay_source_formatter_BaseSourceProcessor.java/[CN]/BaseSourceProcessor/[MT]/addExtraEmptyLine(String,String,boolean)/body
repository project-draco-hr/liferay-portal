{
  String trimmedLine=StringUtil.trimLeading(line);
  String trimmedPreviousLine=StringUtil.trimLeading(previousLine);
  if (this instanceof JSPSourceProcessor) {
    if (trimmedPreviousLine.matches("(--)?%>") && Validator.isNotNull(line) && !trimmedLine.equals("-->")) {
      return true;
    }
    if (Validator.isNotNull(previousLine) && !trimmedPreviousLine.equals("<!--") && trimmedLine.matches("<%(--)?")) {
      return true;
    }
    if (trimmedPreviousLine.equals("<%") && trimmedLine.startsWith("//")) {
      return true;
    }
    if (trimmedPreviousLine.startsWith("//") && trimmedLine.equals("%>")) {
      return true;
    }
  }
  if (!javaSource) {
    return false;
  }
  if (Validator.isNull(previousLine) || Validator.isNull(line) || previousLine.contains("/*")|| previousLine.endsWith("*/")) {
    return false;
  }
  if ((trimmedPreviousLine.startsWith("// ") && !trimmedLine.startsWith("// ")) || (!trimmedPreviousLine.startsWith("// ") && trimmedLine.startsWith("// "))) {
    return true;
  }
  if (!trimmedPreviousLine.endsWith(StringPool.OPEN_CURLY_BRACE) && !trimmedPreviousLine.endsWith(StringPool.COLON) && (trimmedLine.startsWith("for (") || trimmedLine.startsWith("if (") || trimmedLine.startsWith("try {"))) {
    return true;
  }
  if (previousLine.endsWith(StringPool.TAB + StringPool.CLOSE_CURLY_BRACE) && !trimmedLine.startsWith(StringPool.CLOSE_CURLY_BRACE) && !trimmedLine.startsWith(StringPool.CLOSE_PARENTHESIS)&& !trimmedLine.startsWith(StringPool.DOUBLE_SLASH)&& !trimmedLine.equals("*/")&& !trimmedLine.startsWith("catch ")&& !trimmedLine.startsWith("else ")&& !trimmedLine.startsWith("finally ")&& !trimmedLine.startsWith("while ")) {
    return true;
  }
  return false;
}

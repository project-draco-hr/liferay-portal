{
  trashVersion=toUnwrappedModel(trashVersion);
  boolean isNew=trashVersion.isNew();
  TrashVersionModelImpl trashVersionModelImpl=(TrashVersionModelImpl)trashVersion;
  Session session=null;
  try {
    session=openSession();
    if (trashVersion.isNew()) {
      session.save(trashVersion);
      trashVersion.setNew(false);
    }
 else {
      session.merge(trashVersion);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !TrashVersionModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((trashVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ENTRYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(trashVersionModelImpl.getOriginalEntryId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_ENTRYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ENTRYID,args);
      args=new Object[]{Long.valueOf(trashVersionModelImpl.getEntryId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_ENTRYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ENTRYID,args);
    }
    if ((trashVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(trashVersionModelImpl.getOriginalClassNameId()),Long.valueOf(trashVersionModelImpl.getOriginalClassPK())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{Long.valueOf(trashVersionModelImpl.getClassNameId()),Long.valueOf(trashVersionModelImpl.getClassPK())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
  }
  EntityCacheUtil.putResult(TrashVersionModelImpl.ENTITY_CACHE_ENABLED,TrashVersionImpl.class,trashVersion.getPrimaryKey(),trashVersion);
  return trashVersion;
}

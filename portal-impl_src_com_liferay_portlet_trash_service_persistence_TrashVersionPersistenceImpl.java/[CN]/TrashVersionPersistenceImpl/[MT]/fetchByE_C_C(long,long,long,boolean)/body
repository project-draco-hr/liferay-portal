{
  Object[] finderArgs=new Object[]{entryId,classNameId,classPK};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_E_C_C,finderArgs,this);
  }
  if (result instanceof TrashVersion) {
    TrashVersion trashVersion=(TrashVersion)result;
    if ((entryId != trashVersion.getEntryId()) || (classNameId != trashVersion.getClassNameId()) || (classPK != trashVersion.getClassPK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_TRASHVERSION_WHERE);
    query.append(_FINDER_COLUMN_E_C_C_ENTRYID_2);
    query.append(_FINDER_COLUMN_E_C_C_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_E_C_C_CLASSPK_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(entryId);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<TrashVersion> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_E_C_C,finderArgs,list);
      }
 else {
        TrashVersion trashVersion=list.get(0);
        result=trashVersion;
        cacheResult(trashVersion);
        if ((trashVersion.getEntryId() != entryId) || (trashVersion.getClassNameId() != classNameId) || (trashVersion.getClassPK() != classPK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_E_C_C,finderArgs,trashVersion);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_E_C_C,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (TrashVersion)result;
  }
}

{
  long pk=nextLong();
  AssetLink newAssetLink=_persistence.create(pk);
  newAssetLink.setCompanyId(nextLong());
  newAssetLink.setUserId(nextLong());
  newAssetLink.setUserName(randomString());
  newAssetLink.setCreateDate(nextDate());
  newAssetLink.setEntryId1(nextLong());
  newAssetLink.setEntryId2(nextLong());
  newAssetLink.setType(nextInt());
  newAssetLink.setWeight(nextInt());
  _persistence.update(newAssetLink,false);
  AssetLink existingAssetLink=_persistence.findByPrimaryKey(newAssetLink.getPrimaryKey());
  assertEquals(existingAssetLink.getLinkId(),newAssetLink.getLinkId());
  assertEquals(existingAssetLink.getCompanyId(),newAssetLink.getCompanyId());
  assertEquals(existingAssetLink.getUserId(),newAssetLink.getUserId());
  assertEquals(existingAssetLink.getUserName(),newAssetLink.getUserName());
  assertEquals(Time.getShortTimestamp(existingAssetLink.getCreateDate()),Time.getShortTimestamp(newAssetLink.getCreateDate()));
  assertEquals(existingAssetLink.getEntryId1(),newAssetLink.getEntryId1());
  assertEquals(existingAssetLink.getEntryId2(),newAssetLink.getEntryId2());
  assertEquals(existingAssetLink.getType(),newAssetLink.getType());
  assertEquals(existingAssetLink.getWeight(),newAssetLink.getWeight());
}

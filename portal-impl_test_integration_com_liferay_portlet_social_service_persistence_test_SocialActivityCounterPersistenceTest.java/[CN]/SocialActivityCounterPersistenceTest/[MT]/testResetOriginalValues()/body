{
  SocialActivityCounter newSocialActivityCounter=addSocialActivityCounter();
  _persistence.clearCache();
  SocialActivityCounter existingSocialActivityCounter=_persistence.findByPrimaryKey(newSocialActivityCounter.getPrimaryKey());
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getGroupId()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getClassNameId()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getClassPK()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingSocialActivityCounter.getName(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(Integer.valueOf(existingSocialActivityCounter.getOwnerType()),ReflectionTestUtil.<Integer>invoke(existingSocialActivityCounter,"getOriginalOwnerType",new Class<?>[0]));
  Assert.assertEquals(Integer.valueOf(existingSocialActivityCounter.getStartPeriod()),ReflectionTestUtil.<Integer>invoke(existingSocialActivityCounter,"getOriginalStartPeriod",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getGroupId()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getClassNameId()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingSocialActivityCounter.getClassPK()),ReflectionTestUtil.<Long>invoke(existingSocialActivityCounter,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingSocialActivityCounter.getName(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(Integer.valueOf(existingSocialActivityCounter.getOwnerType()),ReflectionTestUtil.<Integer>invoke(existingSocialActivityCounter,"getOriginalOwnerType",new Class<?>[0]));
  Assert.assertEquals(Integer.valueOf(existingSocialActivityCounter.getEndPeriod()),ReflectionTestUtil.<Integer>invoke(existingSocialActivityCounter,"getOriginalEndPeriod",new Class<?>[0]));
}

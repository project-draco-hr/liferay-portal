{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  SocialActivityCounter newSocialActivityCounter=addSocialActivityCounter();
  _persistence.clearCache();
  SocialActivityCounter existingSocialActivityCounter=_persistence.findByPrimaryKey(newSocialActivityCounter.getPrimaryKey());
  Assert.assertEquals(existingSocialActivityCounter.getGroupId(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getClassNameId(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getClassPK(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingSocialActivityCounter.getName(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(existingSocialActivityCounter.getOwnerType(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalOwnerType",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getStartPeriod(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalStartPeriod",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getGroupId(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getClassNameId(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getClassPK(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingSocialActivityCounter.getName(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(existingSocialActivityCounter.getOwnerType(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalOwnerType",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivityCounter.getEndPeriod(),ReflectionTestUtil.invoke(existingSocialActivityCounter,"getOriginalEndPeriod",new Class<?>[0]));
}

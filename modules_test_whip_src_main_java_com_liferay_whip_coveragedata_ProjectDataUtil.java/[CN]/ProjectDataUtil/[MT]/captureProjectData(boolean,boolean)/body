{
  String className=ProjectDataUtil.class.getName();
synchronized (className.intern()) {
    try (RandomAccessFile randomAccessFile=new RandomAccessFile(InstrumentationAgent.getLockFile(),"rw")){
      FileChannel fileChannel=randomAccessFile.getChannel();
      FileLock fileLock=fileChannel.lock();
      try {
        File dataFile=InstrumentationAgent.getDataFile();
        if (dataFile.exists()) {
          _projectData.merge(_readProjectData(dataFile));
          dataFile.delete();
        }
        if (saveSessionData) {
          if (useDataFile) {
            _writeProjectData(_projectData,dataFile);
          }
 else {
            _pipingBackProjectData(_projectData);
          }
        }
        return _projectData;
      }
  finally {
        fileLock.release();
      }
    }
 catch (    IOException ioe) {
      throw new RuntimeException(ioe);
    }
  }
}

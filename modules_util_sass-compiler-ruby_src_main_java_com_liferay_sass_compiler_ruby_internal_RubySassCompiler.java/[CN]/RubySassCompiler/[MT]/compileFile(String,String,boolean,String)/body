{
  try {
    File inputFile=new File(inputFileName);
    String includeDirNames=includeDirName + File.pathSeparator + inputFile.getParent();
    String outputFileName=getOutputFileName(inputFileName);
    if ((sourceMapFileName == null) || sourceMapFileName.equals("")) {
      sourceMapFileName=outputFileName + ".map";
    }
    String[] results=_scriptingContainer.callMethod(_scriptObject,"process",new Object[]{inputFileName,includeDirNames,_tmpDirName,false,outputFileName,generateSourceMap,sourceMapFileName},String[].class);
    if (generateSourceMap) {
      try {
        write(new File(sourceMapFileName),results[1]);
      }
 catch (      Exception e) {
        System.out.println("Unable to create source map");
      }
    }
    return results[0];
  }
 catch (  Exception e) {
    throw new RubySassCompilerException("Unable to parse " + inputFileName);
  }
}

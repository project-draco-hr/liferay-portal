{
  SocialActivitySetting newSocialActivitySetting=addSocialActivitySetting();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialActivitySetting.class,SocialActivitySetting.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("activitySettingId"));
  Object newActivitySettingId=newSocialActivitySetting.getActivitySettingId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("activitySettingId",new Object[]{newActivitySettingId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingActivitySettingId=result.get(0);
  assertEquals(existingActivitySettingId,newActivitySettingId);
}

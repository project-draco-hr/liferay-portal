{
  jobName=fixMaxLength(jobName,JOB_NAME_MAX_LENGTH);
  groupName=fixMaxLength(getOriginalGroupName(groupName),GROUP_NAME_MAX_LENGTH);
  JobDetail jobDetail=scheduler.getJobDetail(jobName,groupName);
  if (jobDetail == null) {
    return null;
  }
  JobDataMap jobDataMap=jobDetail.getJobDataMap();
  String description=jobDataMap.getString(DESCRIPTION);
  String destinationName=jobDataMap.getString(DESTINATION_NAME);
  Message message=getMessage(jobDataMap);
  StorageType storageType=StorageType.valueOf(jobDataMap.getString(STORAGE_TYPE));
  SchedulerResponse schedulerResponse=null;
  Trigger trigger=scheduler.getTrigger(jobName,groupName);
  JobState jobState=(JobState)jobDataMap.get(JOB_STATE);
  message.put(JOB_STATE,jobState.clone());
  if (trigger == null) {
    schedulerResponse=new SchedulerResponse();
    schedulerResponse.setDescription(description);
    schedulerResponse.setDestinationName(destinationName);
    schedulerResponse.setGroupName(groupName);
    schedulerResponse.setJobName(jobName);
    schedulerResponse.setMessage(message);
    schedulerResponse.setStorageType(storageType);
  }
 else {
    message.put(END_TIME,trigger.getEndTime());
    message.put(FINAL_FIRE_TIME,trigger.getFinalFireTime());
    message.put(NEXT_FIRE_TIME,trigger.getNextFireTime());
    message.put(PREVIOUS_FIRE_TIME,trigger.getPreviousFireTime());
    message.put(START_TIME,trigger.getStartTime());
    if (CronTrigger.class.isAssignableFrom(trigger.getClass())) {
      CronTrigger cronTrigger=CronTrigger.class.cast(trigger);
      schedulerResponse=new SchedulerResponse();
      schedulerResponse.setDescription(description);
      schedulerResponse.setDestinationName(destinationName);
      schedulerResponse.setMessage(message);
      schedulerResponse.setStorageType(storageType);
      schedulerResponse.setTrigger(new com.liferay.portal.kernel.scheduler.CronTrigger(jobName,groupName,cronTrigger.getStartTime(),cronTrigger.getEndTime(),cronTrigger.getCronExpression()));
    }
 else     if (SimpleTrigger.class.isAssignableFrom(trigger.getClass())) {
      SimpleTrigger simpleTrigger=SimpleTrigger.class.cast(trigger);
      schedulerResponse=new SchedulerResponse();
      schedulerResponse.setDescription(description);
      schedulerResponse.setDestinationName(destinationName);
      schedulerResponse.setMessage(message);
      schedulerResponse.setStorageType(storageType);
      schedulerResponse.setTrigger(new IntervalTrigger(jobName,groupName,simpleTrigger.getStartTime(),simpleTrigger.getEndTime(),simpleTrigger.getRepeatInterval()));
    }
  }
  return schedulerResponse;
}

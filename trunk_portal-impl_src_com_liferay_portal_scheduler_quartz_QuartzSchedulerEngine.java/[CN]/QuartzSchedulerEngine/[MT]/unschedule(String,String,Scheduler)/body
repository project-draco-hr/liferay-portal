{
  jobName=fixMaxLength(jobName,JOB_NAME_MAX_LENGTH);
  groupName=fixMaxLength(getOriginalGroupName(groupName),GROUP_NAME_MAX_LENGTH);
  JobDetail jobDetail=scheduler.getJobDetail(jobName,groupName);
  if (jobDetail == null) {
    return;
  }
  if (scheduler == _memoryScheduler) {
    scheduler.unscheduleJob(jobName,groupName);
    return;
  }
  JobDataMap jobDataMap=jobDetail.getJobDataMap();
  JobState jobState=(JobState)jobDataMap.get(JOB_STATE);
  Trigger trigger=scheduler.getTrigger(jobName,groupName);
  Date previousFireTime=trigger.getPreviousFireTime();
  jobState.setTriggerTimeInfomation(END_TIME,new Date());
  jobState.setTriggerTimeInfomation(FINAL_FIRE_TIME,previousFireTime);
  jobState.setTriggerTimeInfomation(NEXT_FIRE_TIME,null);
  jobState.setTriggerTimeInfomation(PREVIOUS_FIRE_TIME,previousFireTime);
  jobState.setTriggerTimeInfomation(START_TIME,trigger.getStartTime());
  jobState.setTriggerState(TriggerState.UNSCHEDULED);
  jobState.clearExceptions();
  jobDataMap.put(JOB_STATE,jobState);
  scheduler.unscheduleJob(jobName,groupName);
  scheduler.addJob(jobDetail,true);
}

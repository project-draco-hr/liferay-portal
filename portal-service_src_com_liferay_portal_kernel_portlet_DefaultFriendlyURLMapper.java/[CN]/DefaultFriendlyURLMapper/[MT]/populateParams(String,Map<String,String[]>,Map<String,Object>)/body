{
  friendlyURLPath=friendlyURLPath.substring(getMapping().length() + 1);
  Map<String,String> routeParameters=router.urlToParameters(friendlyURLPath);
  if (routeParameters == null) {
    if (_log.isWarnEnabled()) {
      _log.warn("No route could be found to match URL " + friendlyURLPath);
    }
    return;
  }
  String portletId=null;
  String namespace=null;
  if (isPortletInstanceable()) {
    portletId=routeParameters.remove("p_p_id");
    if (Validator.isNull(portletId)) {
      String instanceId=routeParameters.remove("instanceId");
      if (Validator.isNull(instanceId)) {
        if (_log.isErrorEnabled()) {
          _log.error("Either p_p_id or instanceId must be provided " + "for an instanceable portlet");
        }
        return;
      }
 else {
        portletId=getPortletId() + PortletConstants.INSTANCE_SEPARATOR + instanceId;
        namespace=PortalUtil.getPortletNamespace(portletId);
      }
    }
 else {
      namespace=PortalUtil.getPortletNamespace(portletId);
    }
  }
 else {
    portletId=getPortletId();
    namespace=getNamespace();
  }
  addParameter(namespace,parameterMap,"p_p_id",portletId);
  if (!parameterMap.containsKey("p_p_lifecycle")) {
    addParameter(namespace,parameterMap,"p_p_lifecycle","0");
  }
  if (!parameterMap.containsKey("p_p_mode")) {
    addParameter(namespace,parameterMap,"p_p_mode",PortletMode.VIEW);
  }
  for (  Map.Entry<String,String> entry : routeParameters.entrySet()) {
    String name=entry.getKey();
    String value=entry.getValue();
    addParameter(namespace,parameterMap,name,value);
  }
}

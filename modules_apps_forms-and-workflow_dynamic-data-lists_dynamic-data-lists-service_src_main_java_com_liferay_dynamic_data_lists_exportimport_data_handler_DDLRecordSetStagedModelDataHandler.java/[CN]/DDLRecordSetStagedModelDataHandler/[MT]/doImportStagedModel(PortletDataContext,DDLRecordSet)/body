{
  Map<Long,Long> ddmStructureIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class);
  long ddmStructureId=MapUtil.getLong(ddmStructureIds,recordSet.getDDMStructureId(),recordSet.getDDMStructureId());
  DDLRecordSet importedRecordSet=(DDLRecordSet)recordSet.clone();
  importedRecordSet.setGroupId(portletDataContext.getScopeGroupId());
  importedRecordSet.setDDMStructureId(ddmStructureId);
  DDLRecordSet existingRecordSet=_stagedModelRepository.fetchStagedModelByUuidAndGroupId(recordSet.getUuid(),portletDataContext.getScopeGroupId());
  if (existingRecordSet == null) {
    importedRecordSet=_stagedModelRepository.addStagedModel(portletDataContext,importedRecordSet);
  }
 else {
    importedRecordSet.setRecordSetId(existingRecordSet.getRecordSetId());
    importedRecordSet=_stagedModelRepository.updateStagedModel(portletDataContext,importedRecordSet);
  }
  if (recordSet.getScope() == DDLRecordSetConstants.SCOPE_FORMS) {
    Element recordSetElement=portletDataContext.getImportDataElement(recordSet);
    DDMFormValues settingsDDMFormValues=getImportRecordSetSettings(portletDataContext,recordSetElement);
    _ddlRecordSetLocalService.updateRecordSet(importedRecordSet.getRecordSetId(),settingsDDMFormValues);
  }
  portletDataContext.importClassedModel(recordSet,importedRecordSet);
}

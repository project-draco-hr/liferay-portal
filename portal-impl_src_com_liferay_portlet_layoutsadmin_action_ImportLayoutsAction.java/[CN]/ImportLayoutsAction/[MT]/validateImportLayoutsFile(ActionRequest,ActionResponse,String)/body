{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long groupId=ParamUtil.getLong(actionRequest,"groupId");
  FileEntry fileEntry=ExportImportHelperUtil.getTempFileEntry(groupId,themeDisplay.getUserId(),folderName);
  File file=DLFileEntryLocalServiceUtil.getFile(themeDisplay.getUserId(),fileEntry.getFileEntryId(),fileEntry.getVersion(),false);
  if ((file == null) || !file.exists()) {
    throw new LARFileException("Import file does not exist");
  }
  boolean successfulRename=false;
  File newFile=null;
  try {
    boolean privateLayout=ParamUtil.getBoolean(actionRequest,"privateLayout");
    String newFileName=StringUtil.replace(file.getPath(),file.getName(),fileEntry.getTitle());
    newFile=new File(newFileName);
    successfulRename=file.renameTo(newFile);
    if (!successfulRename) {
      newFile=FileUtil.createTempFile(fileEntry.getExtension());
      FileUtil.copyFile(file,newFile);
    }
    MissingReferences missingReferences=LayoutServiceUtil.validateImportLayoutsFile(groupId,privateLayout,actionRequest.getParameterMap(),newFile);
    Map<String,MissingReference> weakMissingReferences=missingReferences.getWeakMissingReferences();
    if (weakMissingReferences.isEmpty()) {
      return;
    }
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    if ((weakMissingReferences != null) && (weakMissingReferences.size() > 0)) {
      jsonObject.put("warningMessages",getWarningMessagesJSONArray(themeDisplay,weakMissingReferences));
    }
    writeJSON(actionRequest,actionResponse,jsonObject);
  }
  finally {
    if (successfulRename) {
      successfulRename=newFile.renameTo(file);
      if (!successfulRename) {
        FileUtil.copyFile(newFile,file);
        FileUtil.delete(newFile);
      }
    }
 else {
      FileUtil.delete(newFile);
    }
  }
}

{
  FileEntry fileEntry=null;
  if (Validator.isNotNull(uuid) && (groupId > 0)) {
    fileEntry=DLAppServiceUtil.getFileEntryByUuidAndRepositoryId(uuid,groupId);
    folderId=fileEntry.getFolderId();
  }
  if (fileEntryId > 0) {
    fileEntry=DLAppServiceUtil.getFileEntry(fileEntryId);
  }
 else   if (fileShortcutId <= 0) {
    if (Validator.isNotNull(title)) {
      fileEntry=DLAppServiceUtil.getFileEntry(groupId,folderId,title);
    }
  }
 else {
    DLFileShortcut fileShortcut=DLAppServiceUtil.getFileShortcut(fileShortcutId);
    fileEntryId=fileShortcut.getToFileEntryId();
    fileEntry=DLAppServiceUtil.getFileEntry(fileEntryId);
  }
  if (Validator.isNull(version)) {
    if (Validator.isNotNull(fileEntry.getVersion())) {
      version=fileEntry.getVersion();
    }
 else {
      throw new NoSuchFileEntryException();
    }
  }
  InputStream is=fileEntry.getContentStream(version);
  boolean converted=false;
  String fileName=fileEntry.getTitle();
  if (Validator.isNotNull(targetExtension)) {
    String id=DLUtil.getTempFileId(fileEntry.getFileEntryId(),version);
    String sourceExtension=FileUtil.getExtension(fileName);
    File convertedFile=DocumentConversionUtil.convert(id,is,sourceExtension,targetExtension);
    if (convertedFile != null) {
      fileName=FileUtil.stripExtension(fileEntry.getTitle()).concat(StringPool.PERIOD).concat(targetExtension);
      is=new FileInputStream(convertedFile);
      converted=true;
    }
  }
  int contentLength=0;
  if (!converted) {
    if (DLUtil.compareVersions(version,fileEntry.getVersion()) >= 0) {
      contentLength=(int)fileEntry.getSize();
    }
 else {
      FileVersion fileVersion=fileEntry.getFileVersion(version);
      contentLength=(int)fileVersion.getSize();
    }
  }
  String contentType=MimeTypesUtil.getContentType(fileName);
  ServletResponseUtil.sendFile(request,response,fileName,is,contentLength,contentType);
}

{
  TestPortalCacheListener<String,String> localPortalCacheListener=new TestPortalCacheListener<>();
  _ehcachePortalCache.registerPortalCacheListener(localPortalCacheListener,PortalCacheListenerScope.LOCAL);
  _ehcachePortalCache.put(_KEY_2,_VALUE_2);
  localPortalCacheListener.assertActionsCount(1);
  localPortalCacheListener.assertPut(_KEY_2,_VALUE_2);
  localPortalCacheListener.reset();
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertPut(_KEY_2,_VALUE_2);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertPut(_KEY_2,_VALUE_2);
  _defaultPortalCacheReplicator.reset();
  TestPortalCacheListener<String,String> remotePortalCacheListener=new TestPortalCacheListener<>();
  _ehcachePortalCache.registerPortalCacheListener(remotePortalCacheListener,PortalCacheListenerScope.REMOTE);
  _ehcachePortalCache.put(_KEY_2,_VALUE_1);
  localPortalCacheListener.assertActionsCount(1);
  localPortalCacheListener.assertUpdated(_KEY_2,_VALUE_1);
  localPortalCacheListener.reset();
  remotePortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertUpdated(_KEY_2,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertUpdated(_KEY_2,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  _ehcachePortalCache.registerPortalCacheListener(remotePortalCacheListener,PortalCacheListenerScope.ALL);
  _ehcachePortalCache.put(_KEY_2,_VALUE_2);
  localPortalCacheListener.assertActionsCount(1);
  localPortalCacheListener.assertUpdated(_KEY_2,_VALUE_2);
  localPortalCacheListener.reset();
  remotePortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertUpdated(_KEY_2,_VALUE_2);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertUpdated(_KEY_2,_VALUE_2);
  _defaultPortalCacheReplicator.reset();
  _ehcachePortalCache.unregisterPortalCacheListener(localPortalCacheListener);
  _ehcachePortalCache.put(_KEY_1,_VALUE_2);
  localPortalCacheListener.assertActionsCount(0);
  remotePortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertUpdated(_KEY_1,_VALUE_2);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertUpdated(_KEY_1,_VALUE_2);
  _defaultPortalCacheReplicator.reset();
  _ehcachePortalCache.unregisterPortalCacheListener(new TestPortalCacheListener<String,String>());
  _ehcachePortalCache.put(_KEY_1,_VALUE_1);
  localPortalCacheListener.assertActionsCount(0);
  remotePortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertUpdated(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertUpdated(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  _ehcachePortalCache.unregisterPortalCacheListeners();
  _ehcachePortalCache.put(_KEY_1,_VALUE_2);
  localPortalCacheListener.assertActionsCount(0);
  remotePortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheReplicator.assertActionsCount(0);
}

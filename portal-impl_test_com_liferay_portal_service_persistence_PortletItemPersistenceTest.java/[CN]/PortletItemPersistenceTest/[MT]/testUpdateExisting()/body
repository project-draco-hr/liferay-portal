{
  long pk=nextLong();
  PortletItem newPortletItem=_persistence.create(pk);
  newPortletItem.setCompanyId(nextLong());
  newPortletItem.setUserId(nextLong());
  newPortletItem.setUserName(randomString());
  newPortletItem.setCreateDate(nextDate());
  newPortletItem.setModifiedDate(nextDate());
  newPortletItem.setGroupId(nextLong());
  newPortletItem.setPortletId(randomString());
  newPortletItem.setClassNameId(nextLong());
  newPortletItem.setName(randomString());
  _persistence.update(newPortletItem);
  PortletItem existingPortletItem=_persistence.findByPrimaryKey(newPortletItem.getPrimaryKey());
  assertEquals(existingPortletItem.getPortletItemId(),newPortletItem.getPortletItemId());
  assertEquals(existingPortletItem.getCompanyId(),newPortletItem.getCompanyId());
  assertEquals(existingPortletItem.getUserId(),newPortletItem.getUserId());
  assertEquals(existingPortletItem.getUserName(),newPortletItem.getUserName());
  assertEquals(existingPortletItem.getCreateDate(),newPortletItem.getCreateDate());
  assertEquals(existingPortletItem.getModifiedDate(),newPortletItem.getModifiedDate());
  assertEquals(existingPortletItem.getGroupId(),newPortletItem.getGroupId());
  assertEquals(existingPortletItem.getPortletId(),newPortletItem.getPortletId());
  assertEquals(existingPortletItem.getClassNameId(),newPortletItem.getClassNameId());
  assertEquals(existingPortletItem.getName(),newPortletItem.getName());
}

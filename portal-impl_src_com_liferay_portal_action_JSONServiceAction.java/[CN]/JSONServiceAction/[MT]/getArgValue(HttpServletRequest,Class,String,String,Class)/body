{
  String parameterTypeName=parameterType.getName();
  if (parameterTypeName.equals("boolean") || parameterTypeName.equals(Boolean.class.getName())) {
    return new Boolean(ParamUtil.getBoolean(req,parameter));
  }
 else   if (parameterTypeName.equals("double") || parameterTypeName.equals(Double.class.getName())) {
    return new Double(ParamUtil.getDouble(req,parameter));
  }
 else   if (parameterTypeName.equals("int") || parameterTypeName.equals(Integer.class.getName())) {
    return new Integer(ParamUtil.getInteger(req,parameter));
  }
 else   if (parameterTypeName.equals("long") || parameterTypeName.equals(Long.class.getName())) {
    return new Long(ParamUtil.getLong(req,parameter));
  }
 else   if (parameterTypeName.equals("short") || parameterTypeName.equals(Short.class.getName())) {
    return new Short(ParamUtil.getShort(req,parameter));
  }
 else   if (parameterTypeName.equals(String.class.getName())) {
    return ParamUtil.getString(req,parameter);
  }
 else   if (parameterTypeName.equals("[Ljava.lang.String;")) {
    return StringUtil.split(ParamUtil.getString(req,parameter));
  }
 else {
    _log.error("Unsupported parameter type for class " + classObj + ", method "+ methodName+ ", parameter "+ parameter+ ", and type "+ parameterTypeName);
    return null;
  }
}

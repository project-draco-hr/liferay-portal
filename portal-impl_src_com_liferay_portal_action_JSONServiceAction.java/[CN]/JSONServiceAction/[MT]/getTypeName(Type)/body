{
  String typeName=type.toString();
  if (typeName.contains("class ")) {
    return typeName.substring(6);
  }
  Matcher matcher=_typeNamePattern.matcher(typeName);
  while (matcher.find()) {
    String dimensions=matcher.group(2);
    String name=matcher.group(1);
    if (Validator.isNull(dimensions)) {
      return name;
    }
    dimensions=dimensions.replace(StringPool.CLOSE_BRACKET,StringPool.BLANK);
    if (name.equals("boolean")) {
      name="Z";
    }
 else     if (name.equals("byte")) {
      name="B";
    }
 else     if (name.equals("char")) {
      name="C";
    }
 else     if (name.equals("double")) {
      name="D";
    }
 else     if (name.equals("float")) {
      name="F";
    }
 else     if (name.equals("int")) {
      name="I";
    }
 else     if (name.equals("long")) {
      name="J";
    }
 else     if (name.equals("short")) {
      name="S";
    }
 else {
      name="L".concat(name).concat(StringPool.SEMICOLON);
    }
    return dimensions.concat(name);
  }
  return typeName;
}

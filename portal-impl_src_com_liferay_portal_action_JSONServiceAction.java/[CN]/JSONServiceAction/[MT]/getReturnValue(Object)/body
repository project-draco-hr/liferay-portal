{
  if ((returnObj instanceof Boolean) || (returnObj instanceof Double) || (returnObj instanceof Integer)|| (returnObj instanceof Long)|| (returnObj instanceof Short)|| (returnObj instanceof String)) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("returnValue",returnObj.toString());
    return jsonObject.toString();
  }
 else   if (returnObj instanceof BaseModel<?>) {
    String serlializerClassName=getSerializerClassName(returnObj);
    MethodKey methodKey=new MethodKey(serlializerClassName,"toJSONObject",returnObj.getClass());
    JSONObject jsonObject=(JSONObject)new MethodHandler(methodKey,returnObj).invoke(false);
    return jsonObject.toString();
  }
 else   if (returnObj instanceof BaseModel<?>[]) {
    JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
    BaseModel<?>[] returnArray=(BaseModel[])returnObj;
    if (returnArray.length > 0) {
      BaseModel<?> returnItem0=returnArray[0];
      String serializerClassName=getSerializerClassName(returnItem0);
      MethodKey methodKey=new MethodKey(serializerClassName,"toJSONArray",returnObj.getClass());
      jsonArray=(JSONArray)new MethodHandler(methodKey,returnObj).invoke(false);
    }
    return jsonArray.toString();
  }
 else   if (returnObj instanceof BaseModel<?>[][]) {
    JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
    BaseModel<?>[][] returnArray=(BaseModel<?>[][])returnObj;
    if ((returnArray.length > 0) && (returnArray[0].length > 0)) {
      BaseModel<?> returnItem0=returnArray[0][0];
      String serializerClassName=getSerializerClassName(returnItem0);
      MethodKey methodKey=new MethodKey(serializerClassName,"toJSONArray",returnObj.getClass());
      jsonArray=(JSONArray)new MethodHandler(methodKey,returnObj).invoke(false);
    }
    return jsonArray.toString();
  }
 else   if (returnObj instanceof List<?>) {
    JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
    List<Object> returnList=(List<Object>)returnObj;
    if (!returnList.isEmpty()) {
      Object returnItem0=returnList.get(0);
      String serlializerClassName=getSerializerClassName(returnItem0);
      MethodKey methodKey=new MethodKey(serlializerClassName,"toJSONArray",returnObj.getClass());
      jsonArray=(JSONArray)new MethodHandler(methodKey,returnObj).invoke(false);
    }
    return jsonArray.toString();
  }
 else   if (returnObj instanceof JSONArray) {
    JSONArray jsonArray=(JSONArray)returnObj;
    return jsonArray.toString();
  }
 else   if (returnObj instanceof JSONObject) {
    JSONObject jsonObject=(JSONObject)returnObj;
    return jsonObject.toString();
  }
 else   if (returnObj instanceof AssetEntryDisplay) {
    return getReturnValue((AssetEntryDisplay)returnObj);
  }
 else   if (returnObj instanceof AssetEntryDisplay[]) {
    return getReturnValue((AssetEntryDisplay[])returnObj);
  }
 else   if (returnObj instanceof AssetEntryType) {
    return getReturnValue((AssetEntryType)returnObj);
  }
 else   if (returnObj instanceof AssetEntryType[]) {
    return getReturnValue((AssetEntryType[])returnObj);
  }
 else {
    return JSONFactoryUtil.serialize(returnObj);
  }
}

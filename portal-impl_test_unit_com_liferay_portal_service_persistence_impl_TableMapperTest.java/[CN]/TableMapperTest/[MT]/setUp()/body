{
  MappingSqlQueryFactoryUtil mappingSqlQueryFactoryUtil=new MappingSqlQueryFactoryUtil();
  mappingSqlQueryFactoryUtil.setMappingSqlQueryFactory(new MockMappingSqlQueryFactory());
  MultiVMPoolUtil multiVMPoolUtil=new MultiVMPoolUtil();
  multiVMPoolUtil.setMultiVMPool(new MockMultiVMPool());
  PropsUtil.setProps(new PropsImpl());
  SqlUpdateFactoryUtil sqlUpdateFactoryUtil=new SqlUpdateFactoryUtil();
  sqlUpdateFactoryUtil.setSqlUpdateFactory(new MockSqlUpdateFactory());
  Class<?> clazz=TableMapperTest.class;
  ClassLoader classLoader=clazz.getClassLoader();
  _dataSource=(DataSource)ProxyUtil.newProxyInstance(classLoader,new Class<?>[]{DataSource.class},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      throw new UnsupportedOperationException();
    }
  }
);
  _leftBasePersistence=new MockBasePersistence<Left>(Left.class);
  _leftBasePersistence.setDataSource(_dataSource);
  _rightBasePersistence=new MockBasePersistence<Right>(Right.class);
  _rightBasePersistence.setDataSource(_dataSource);
  _tableMapperImpl=new TableMapperImpl<Left,Right>(_TABLE_NAME,_LEFT_COLUMN_NAME,_RIGHT_COLUMN_NAME,_leftBasePersistence,_rightBasePersistence);
}

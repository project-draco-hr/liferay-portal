{
  new TableMapperFactory();
  Assert.assertTrue(_tableMapperImpl.addTableMappingSqlUpdate instanceof MockAddMappingSqlUpdate);
  Assert.assertTrue(_tableMapperImpl.deleteLeftPrimaryKeyTableMappingsSqlUpdate instanceof MockDeleteLeftPrimaryKeyTableMappingsSqlUpdate);
  Assert.assertTrue(_tableMapperImpl.deleteRightPrimaryKeyTableMappingsSqlUpdate instanceof MockDeleteRightPrimaryKeyTableMappingsSqlUpdate);
  Assert.assertTrue(_tableMapperImpl.deleteTableMappingSqlUpdate instanceof MockDeleteMappingSqlUpdate);
  Assert.assertTrue(_tableMapperImpl.getLeftPrimaryKeysSqlQuery instanceof MockGetLeftPrimaryKeysSqlQuery);
  Assert.assertTrue(_tableMapperImpl.getRightPrimaryKeysSqlQuery instanceof MockGetRightPrimaryKeysSqlQuery);
  Assert.assertSame(_leftBasePersistence,_tableMapperImpl.leftBasePersistence);
  Assert.assertEquals(_LEFT_COLUMN_NAME,_tableMapperImpl.leftColumnName);
  long companyId=0;
  PortalCache<Long,long[]> leftToRightPortalCache=_tableMapperImpl.getLeftToRightPortalCache(companyId);
  Assert.assertTrue(leftToRightPortalCache instanceof TestPortalCache);
  Assert.assertEquals(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-LeftToRight-"+ companyId,leftToRightPortalCache.getPortalCacheName());
  Assert.assertSame(_rightBasePersistence,_tableMapperImpl.rightBasePersistence);
  Assert.assertEquals(_RIGHT_COLUMN_NAME,_tableMapperImpl.rightColumnName);
  PortalCache<Long,long[]> rightToLeftPortalCache=_tableMapperImpl.getRightToLeftPortalCache(companyId);
  Assert.assertTrue(rightToLeftPortalCache instanceof TestPortalCache);
  Assert.assertEquals(TableMapper.class.getName() + "-" + _TABLE_NAME+ "-RightToLeft-"+ companyId,rightToLeftPortalCache.getPortalCacheName());
}

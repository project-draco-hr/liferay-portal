{
  ScapedNode scaped=new ScapedNode();
  Token c=null;
  try {
    int alt151=2;
    int LA151_0=input.LA(1);
    if ((LA151_0 == ESCAPE)) {
      int LA151_1=input.LA(2);
      if ((LA151_1 == STAR)) {
        int LA151_2=input.LA(3);
        if ((LA151_2 == STAR)) {
          alt151=1;
        }
 else         if ((LA151_2 == EOF || (LA151_2 >= FORCED_END_OF_LINE && LA151_2 <= POUND) || (LA151_2 >= EQUAL && LA151_2 <= 78))) {
          alt151=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return scaped;
          }
          NoViableAltException nvae=new NoViableAltException("795:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",151,2,input);
          throw nvae;
        }
      }
 else       if (((LA151_1 >= FORCED_END_OF_LINE && LA151_1 <= POUND) || (LA151_1 >= EQUAL && LA151_1 <= 78))) {
        alt151=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return scaped;
        }
        NoViableAltException nvae=new NoViableAltException("795:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",151,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return scaped;
      }
      NoViableAltException nvae=new NoViableAltException("795:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",151,0,input);
      throw nvae;
    }
switch (alt151) {
case 1:
{
        match(input,ESCAPE,FOLLOW_ESCAPE_in_escaped4864);
        if (failed) {
          return scaped;
        }
        match(input,STAR,FOLLOW_STAR_in_escaped4867);
        if (failed) {
          return scaped;
        }
        match(input,STAR,FOLLOW_STAR_in_escaped4870);
        if (failed) {
          return scaped;
        }
        if (backtracking == 0) {
          scaped.setContent("**");
        }
      }
    break;
case 2:
{
    match(input,ESCAPE,FOLLOW_ESCAPE_in_escaped4877);
    if (failed) {
      return scaped;
    }
    c=(Token)input.LT(1);
    matchAny(input);
    if (failed) {
      return scaped;
    }
    if (backtracking == 0) {
      scaped.setContent(c.getText());
    }
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return scaped;
}

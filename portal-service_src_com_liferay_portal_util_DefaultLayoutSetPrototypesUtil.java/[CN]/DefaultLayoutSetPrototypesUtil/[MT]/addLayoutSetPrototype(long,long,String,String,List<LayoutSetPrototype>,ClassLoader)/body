{
  ResourceBundle resourceBundle=ResourceBundle.getBundle("content.Language",LocaleUtil.getDefault(),classLoader,UTF8Control.INSTANCE);
  String name=LanguageUtil.get(resourceBundle,nameKey);
  String description=LanguageUtil.get(resourceBundle,descriptionKey);
  for (  LayoutSetPrototype layoutSetPrototype : layoutSetPrototypes) {
    String curName=layoutSetPrototype.getName(LocaleUtil.getDefault());
    String curDescription=layoutSetPrototype.getDescription(LocaleUtil.getDefault());
    if (name.equals(curName) && description.equals(curDescription)) {
      return null;
    }
  }
  Map<Locale,String> nameMap=new HashMap<>();
  Map<Locale,String> descriptionMap=new HashMap<>();
  for (  Locale locale : LanguageUtil.getAvailableLocales()) {
    resourceBundle=ResourceBundle.getBundle("content.Language",locale,classLoader,UTF8Control.INSTANCE);
    nameMap.put(locale,LanguageUtil.get(resourceBundle,nameKey));
    descriptionMap.put(locale,LanguageUtil.get(resourceBundle,descriptionKey));
  }
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.addLayoutSetPrototype(defaultUserId,companyId,nameMap,descriptionMap,true,true,new ServiceContext());
  LayoutSet layoutSet=layoutSetPrototype.getLayoutSet();
  ServiceContext serviceContext=new ServiceContext();
  LayoutLocalServiceUtil.deleteLayouts(layoutSet.getGroupId(),layoutSet.isPrivateLayout(),serviceContext);
  return layoutSetPrototype.getLayoutSet();
}

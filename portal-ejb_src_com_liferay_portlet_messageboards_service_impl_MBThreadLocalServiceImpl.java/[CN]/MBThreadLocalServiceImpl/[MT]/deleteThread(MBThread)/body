{
  MBMessage rootMessage=MBMessageUtil.findByPrimaryKey(new MBMessagePK(MBMessageImpl.DEPRECATED_TOPIC_ID,thread.getRootMessageId()));
  try {
    Indexer.deleteMessages(rootMessage.getCompanyId(),thread.getThreadId());
  }
 catch (  IOException ioe) {
    _log.error("Deleting index " + thread.getThreadId(),ioe);
  }
catch (  ParseException pe) {
    _log.error("Deleting index " + thread.getThreadId(),pe);
  }
  String companyId=rootMessage.getCompanyId();
  String portletId=CompanyImpl.SYSTEM;
  String repositoryId=CompanyImpl.SYSTEM;
  String dirName=thread.getAttachmentsDir();
  try {
    DLServiceUtil.deleteDirectory(companyId,portletId,repositoryId,dirName);
  }
 catch (  NoSuchDirectoryException nsde) {
  }
catch (  RemoteException re) {
    throw new SystemException(re);
  }
  Iterator itr=MBMessageUtil.findByThreadId(thread.getThreadId()).iterator();
  while (itr.hasNext()) {
    MBMessage message=(MBMessage)itr.next();
    MBMessageFlagUtil.removeByT_M(message.getTopicId(),message.getMessageId());
    if (!message.isDiscussion()) {
      ResourceLocalServiceUtil.deleteResource(message.getCompanyId(),MBMessage.class.getName(),ResourceImpl.SCOPE_INDIVIDUAL,message.getPrimaryKey().toString());
    }
    MBMessageUtil.remove(message.getPrimaryKey());
  }
  MBThreadUtil.remove(thread.getThreadId());
}

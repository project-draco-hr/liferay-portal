{
  boolean aligned=false;
  int i=difference.getDeletedStart();
  int j=difference.getAddedStart();
  for (; i <= difference.getDeletedEnd(); i++) {
    for (; j <= difference.getAddedEnd(); j++) {
      aligned=!_isMaxLineLengthExceeded(sourceStringList.get(i),targetStringList.get(j)) && _lineDiff(sourceResults,targetResults,sourceStringList,targetStringList,addedMarkerStart,addedMarkerEnd,deletedMarkerStart,deletedMarkerEnd,i,j,false);
      if (aligned) {
        break;
      }
 else {
        _highlightLines(targetStringList,addedMarkerStart,addedMarkerEnd,j,j);
        DiffResult targetResult=new DiffResult(j,targetStringList.subList(j,j + 1));
        targetResults.add(targetResult);
        sourceResults.add(new DiffResult(j,CONTEXT_LINE));
      }
    }
    if (aligned) {
      break;
    }
 else {
      _highlightLines(sourceStringList,deletedMarkerStart,deletedMarkerEnd,i,i);
      DiffResult sourceResult=new DiffResult(i,sourceStringList.subList(i,i + 1));
      sourceResults.add(sourceResult);
      targetResults.add(new DiffResult(i,CONTEXT_LINE));
    }
  }
  i=i + 1;
  j=j + 1;
  for (; i <= difference.getDeletedEnd() && j <= difference.getAddedEnd(); i++, j++) {
    if (!_isMaxLineLengthExceeded(sourceStringList.get(i),targetStringList.get(j))) {
      _lineDiff(sourceResults,targetResults,sourceStringList,targetStringList,addedMarkerStart,addedMarkerEnd,deletedMarkerStart,deletedMarkerEnd,i,j,true);
    }
 else {
      _highlightLines(sourceStringList,deletedMarkerStart,deletedMarkerEnd,i,i);
      DiffResult sourceResult=new DiffResult(i,sourceStringList.subList(i,i + 1));
      sourceResults.add(sourceResult);
      targetResults.add(new DiffResult(i,CONTEXT_LINE));
      _highlightLines(targetStringList,addedMarkerStart,addedMarkerEnd,j,j);
      DiffResult targetResult=new DiffResult(j,targetStringList.subList(j,j + 1));
      targetResults.add(targetResult);
      sourceResults.add(new DiffResult(j,CONTEXT_LINE));
    }
  }
  for (; i <= difference.getDeletedEnd(); i++) {
    _highlightLines(sourceStringList,deletedMarkerStart,deletedMarkerEnd,i,i);
    DiffResult sourceResult=new DiffResult(i,sourceStringList.subList(i,i + 1));
    sourceResults.add(sourceResult);
    targetResults.add(new DiffResult(i,CONTEXT_LINE));
  }
  for (; j <= difference.getAddedEnd(); j++) {
    _highlightLines(targetStringList,addedMarkerStart,addedMarkerEnd,j,j);
    DiffResult targetResult=new DiffResult(j,targetStringList.subList(j,j + 1));
    targetResults.add(targetResult);
    sourceResults.add(new DiffResult(j,CONTEXT_LINE));
  }
}

{
  String source=sourceStringList.get(sourceChangedLine);
  String target=targetStringList.get(targetChangedLine);
  List<String> sourceList=_toList(source);
  List<String> targetList=_toList(target);
  Diff diff=new Diff(sourceList,targetList);
  List<Difference> differences=diff.diff();
  int deletedChars=0;
  int addedChars=0;
  if (!aligned) {
    for (    Difference difference : differences) {
      if (difference.getDeletedEnd() != Difference.NONE) {
        deletedChars+=(difference.getDeletedEnd() - difference.getDeletedStart() + 1);
      }
      if (difference.getAddedEnd() != Difference.NONE) {
        addedChars+=(difference.getAddedEnd() - difference.getAddedStart() + 1);
      }
    }
  }
  if ((deletedChars > (sourceList.size() / 2)) || (addedChars > sourceList.size() / 2)) {
    return false;
  }
  boolean sourceChanged=false;
  boolean targetChanged=false;
  for (  Difference difference : differences) {
    if (difference.getAddedEnd() == Difference.NONE) {
      _highlightChars(sourceList,deletedMarkerStart,deletedMarkerEnd,difference.getDeletedStart(),difference.getDeletedEnd());
      sourceChanged=true;
    }
 else     if (difference.getDeletedEnd() == Difference.NONE) {
      _highlightChars(targetList,addedMarkerStart,addedMarkerEnd,difference.getAddedStart(),difference.getAddedEnd());
      targetChanged=true;
    }
 else {
      _highlightChars(sourceList,deletedMarkerStart,deletedMarkerEnd,difference.getDeletedStart(),difference.getDeletedEnd());
      sourceChanged=true;
      _highlightChars(targetList,addedMarkerStart,addedMarkerEnd,difference.getAddedStart(),difference.getAddedEnd());
      targetChanged=true;
    }
  }
  if (sourceChanged) {
    DiffResult sourceResult=new DiffResult(sourceChangedLine,_toString(sourceList));
    sourceResults.add(sourceResult);
    if (!targetChanged) {
      DiffResult targetResult=new DiffResult(targetChangedLine,target);
      targetResults.add(targetResult);
    }
  }
  if (targetChanged) {
    if (!sourceChanged) {
      DiffResult sourceResult=new DiffResult(sourceChangedLine,source);
      sourceResults.add(sourceResult);
    }
    DiffResult targetResult=new DiffResult(targetChangedLine,_toString(targetList));
    targetResults.add(targetResult);
  }
  return true;
}

{
  Object transactionManager=getOnePhaseCommitSyncTransactionManager(settings,properties);
  try {
    String configurationResourceName=null;
    if (properties != null) {
      configurationResourceName=(String)properties.get(NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME);
    }
    if (Validator.isNull(configurationResourceName)) {
      configurationResourceName=_DEFAULT_CLUSTERED_EHCACHE_CONFIG_FILE;
    }
    boolean usingDefault=configurationResourceName.equals(_DEFAULT_CLUSTERED_EHCACHE_CONFIG_FILE);
    Configuration configuration=null;
    if (Validator.isNull(configurationResourceName)) {
      configuration=ConfigurationFactory.parseConfiguration();
    }
 else {
      configuration=EhcacheConfigurationUtil.getConfiguration(configurationResourceName,true,usingDefault);
    }
    configuration.setDefaultTransactionManager(transactionManager);
    manager=new CacheManager(configuration);
    mbeanRegistrationHelper.registerMBean(manager,properties);
  }
 catch (  net.sf.ehcache.CacheException e) {
    if (e.getMessage().startsWith("Cannot parseConfiguration CacheManager. " + "Attempt to create a new instance of CacheManager " + "using the diskStorePath")) {
      throw new CacheException("Attempt to restart an already started " + "EhCacheRegionFactory.  Use sessionFactory.close() " + "between repeated calls to buildSessionFactory. "+ "Consider using SingletonEhCacheRegionFactory."+ "Error from ehcache was: "+ e.getMessage());
    }
 else {
      throw new CacheException(e);
    }
  }
}

{
  try {
    String configurationPath=null;
    if (properties != null) {
      configurationPath=(String)properties.get(NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME);
    }
    if (Validator.isNull(configurationPath)) {
      configurationPath=_DEFAULT_CLUSTERED_EHCACHE_CONFIG_FILE;
    }
    Configuration configuration=null;
    if (Validator.isNull(configurationPath)) {
      configuration=ConfigurationFactory.parseConfiguration();
    }
 else {
      boolean usingDefault=configurationPath.equals(_DEFAULT_CLUSTERED_EHCACHE_CONFIG_FILE);
      configuration=EhcacheConfigurationUtil.getConfiguration(configurationPath,true,usingDefault);
    }
    manager=new CacheManager(configuration);
    FailSafeTimer failSafeTimer=manager.getTimer();
    failSafeTimer.cancel();
    try {
      Field cacheManagerTimerField=ReflectionUtil.getDeclaredField(CacheManager.class,"cacheManagerTimer");
      cacheManagerTimerField.set(manager,null);
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    mbeanRegistrationHelper.registerMBean(manager,properties);
    _mBeanRegisteringPortalLifecycle=new MBeanRegisteringPortalLifecycle(manager);
    _mBeanRegisteringPortalLifecycle.registerPortalLifecycle(PortalLifecycle.METHOD_INIT);
  }
 catch (  net.sf.ehcache.CacheException ce) {
    throw new CacheException(ce);
  }
}

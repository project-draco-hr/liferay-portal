{
  Path regularFromDirectoryPath=Paths.get("RegularFromDirectory");
  Path regularFromFilePath=regularFromDirectoryPath.resolve("RegularFromFile");
  Path regularToDirectoryPath=Paths.get("RegularToDirectory");
  Path regularToFilePath=regularToDirectoryPath.resolve(regularFromDirectoryPath.relativize(regularFromFilePath));
  createFile(regularFromFilePath);
  FileTime originalFileTime=Files.getLastModifiedTime(regularFromDirectoryPath);
  FileHelperUtil.move(regularFromDirectoryPath,regularToDirectoryPath,false);
  Assert.assertEquals(originalFileTime,Files.getLastModifiedTime(regularToDirectoryPath));
  Assert.assertTrue(Files.notExists(regularFromFilePath));
  Assert.assertTrue(Files.notExists(regularFromDirectoryPath));
  Assert.assertTrue(Files.exists(regularToDirectoryPath));
  Assert.assertTrue(Files.exists(regularToFilePath));
  Files.delete(regularToFilePath);
  Files.delete(regularToDirectoryPath);
  createFile(regularFromFilePath);
  originalFileTime=Files.getLastModifiedTime(regularFromDirectoryPath);
  FileHelperUtil.move(regularFromDirectoryPath,regularToDirectoryPath);
  Assert.assertEquals(originalFileTime,Files.getLastModifiedTime(regularToDirectoryPath));
  Assert.assertTrue(Files.notExists(regularFromFilePath));
  Assert.assertTrue(Files.notExists(regularFromDirectoryPath));
  Assert.assertTrue(Files.exists(regularToDirectoryPath));
  Assert.assertTrue(Files.exists(regularToFilePath));
  Files.delete(regularToFilePath);
  Files.delete(regularToDirectoryPath);
}

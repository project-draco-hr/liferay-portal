{
  Map<String,Object> freeMarkerContext=getFreeMarkerContext(pageContext,portletNamespace,namespace,element,locale);
  if (fields != null) {
    freeMarkerContext.put("fields",fields);
  }
  Map<String,Object> fieldStructure=(Map<String,Object>)freeMarkerContext.get("fieldStructure");
  int fieldRepetition=1;
  DDMFieldsCounter ddmFieldsCounter=getFieldsCounter(pageContext,fields,portletNamespace,namespace);
  String name=element.attributeValue("name");
  boolean fieldDisplayable=isFieldDisplayable(fields,name);
  if (fieldDisplayable) {
    Field fieldsDisplayField=fields.get(DDMImpl.FIELDS_DISPLAY_NAME);
    String[] fieldsDisplayValues=DDMUtil.getFieldsDisplayValues(fieldsDisplayField);
    Map<String,Object> parentFieldStructure=(Map<String,Object>)freeMarkerContext.get("parentFieldStructure");
    String parentFieldName=(String)parentFieldStructure.get("name");
    int offset=ddmFieldsCounter.get(DDMImpl.FIELDS_DISPLAY_NAME);
    fieldRepetition=countFieldRepetition(fieldsDisplayValues,parentFieldName,offset);
  }
  StringBundler sb=new StringBundler(fieldRepetition);
  while (fieldRepetition > 0) {
    fieldStructure.put("fieldNamespace",StringUtil.randomId());
    fieldStructure.put("valueIndex",ddmFieldsCounter.get(name));
    if (fieldDisplayable) {
      ddmFieldsCounter.incrementKey(name);
      ddmFieldsCounter.incrementKey(DDMImpl.FIELDS_DISPLAY_NAME);
    }
    String childrenHTML=getHTML(pageContext,element,fields,portletNamespace,namespace,mode,readOnly,locale);
    fieldStructure.put("children",childrenHTML);
    sb.append(processFTL(pageContext,element,mode,readOnly,freeMarkerContext));
    fieldRepetition--;
  }
  return sb.toString();
}

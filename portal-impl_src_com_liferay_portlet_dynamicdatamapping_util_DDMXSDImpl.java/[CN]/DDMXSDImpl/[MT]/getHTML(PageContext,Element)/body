{
  StringBundler sb=new StringBundler();
  List<Element> dynamicElementElements=element.elements("dynamic-element");
  for (  Element dynamicElementElement : dynamicElementElements) {
    FreeMarkerContext freeMarkerContext=getFreeMarkerContext(dynamicElementElement);
    Map<String,Object> field=(Map<String,Object>)freeMarkerContext.get("field");
    field.put("children",getHTML(pageContext,dynamicElementElement));
    String type=dynamicElementElement.attributeValue("type");
    String fieldNamespace=dynamicElementElement.attributeValue("fieldNamespace",_DEFAULT_NAMESPACE);
    String templateName=StringUtil.replaceFirst(type,fieldNamespace.concat(StringPool.DASH),StringPool.BLANK);
    StringBundler resourcePath=new StringBundler(5);
    resourcePath.append(_TPL_PATH);
    resourcePath.append(fieldNamespace.toLowerCase());
    resourcePath.append(CharPool.SLASH);
    resourcePath.append(templateName);
    resourcePath.append(_TPL_EXT);
    sb.append(processFTL(pageContext,freeMarkerContext,resourcePath.toString()));
  }
  return sb.toString();
}

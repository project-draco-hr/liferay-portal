{
  Map<String,Map<String,Object>> fieldsContext=getFieldsContext(pageContext,portletNamespace,namespace);
  String name=dynamicElementElement.attributeValue("name");
  Map<String,Object> fieldContext=fieldsContext.get(name);
  if (fieldContext != null) {
    return fieldContext;
  }
  Document document=dynamicElementElement.getDocument();
  String[] availableLanguageIds=LocalizationUtil.getAvailableLanguageIds(document);
  String defaultLanguageId=LocalizationUtil.getDefaultLanguageId(document);
  String editingLanguageId=LocaleUtil.toLanguageId(locale);
  String structureLanguageId;
  if (ArrayUtil.contains(availableLanguageIds,editingLanguageId)) {
    structureLanguageId=editingLanguageId;
  }
 else {
    structureLanguageId=defaultLanguageId;
  }
  Element metadataElement=(Element)dynamicElementElement.selectSingleNode("meta-data[@locale='" + structureLanguageId + "']");
  fieldContext=new HashMap<String,Object>();
  if (metadataElement != null) {
    for (    Element metadataEntry : metadataElement.elements()) {
      fieldContext.put(metadataEntry.attributeValue("name"),metadataEntry.getText());
    }
  }
  for (  Attribute attribute : dynamicElementElement.attributes()) {
    fieldContext.put(attribute.getName(),attribute.getValue());
  }
  fieldContext.put("fieldNamespace",StringUtil.randomId());
  boolean checkRequired=GetterUtil.getBoolean(pageContext.getAttribute("checkRequired"),true);
  if (!checkRequired) {
    fieldContext.put("required",Boolean.FALSE.toString());
  }
  boolean localizable=GetterUtil.getBoolean(dynamicElementElement.attributeValue("localizable"),true);
  if (!localizable && !editingLanguageId.equals(defaultLanguageId)) {
    fieldContext.put("disabled",Boolean.TRUE.toString());
  }
  fieldsContext.put(name,fieldContext);
  return fieldContext;
}

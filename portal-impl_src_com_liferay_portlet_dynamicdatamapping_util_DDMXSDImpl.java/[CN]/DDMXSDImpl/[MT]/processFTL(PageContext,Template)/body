{
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  template.prepare(request);
  HttpServletResponse response=(HttpServletResponse)pageContext.getResponse();
  Writer writer=new UnsyncStringWriter();
  TemplateHashModel portalTaglib=FreeMarkerTaglibFactoryUtil.createTaglibFactory(pageContext.getServletContext());
  template.put("PortalJspTagLibs",portalTaglib);
  final Servlet servlet=(Servlet)pageContext.getPage();
  GenericServlet genericServlet=null;
  if (servlet instanceof GenericServlet) {
    genericServlet=(GenericServlet)servlet;
  }
 else {
    genericServlet=new GenericServlet(){
      @Override public void service(      ServletRequest servletRequest,      ServletResponse servletResponse) throws ServletException, IOException {
        servlet.service(servletRequest,servletResponse);
      }
    }
;
    genericServlet.init(pageContext.getServletConfig());
  }
  ServletContextHashModel servletContextHashModel=new ServletContextHashModel(genericServlet,ObjectWrapper.DEFAULT_WRAPPER);
  template.put("Application",servletContextHashModel);
  HttpRequestHashModel httpRequestHashModel=new HttpRequestHashModel(request,response,ObjectWrapper.DEFAULT_WRAPPER);
  template.put("Request",httpRequestHashModel);
  template.processTemplate(writer);
  return writer.toString();
}

{
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  Document document=element.getDocument();
  String defaultLocale=LocalizationUtil.getDefaultLocale(document.asXML());
  List<Element> dynamicElementElements=element.elements("dynamic-element");
  for (  Element dynamicElementElement : dynamicElementElements) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    JSONObject localizationMap=JSONFactoryUtil.createJSONObject();
    List<Element> metadataElements=dynamicElementElement.elements("meta-data");
    for (    Element metadataElement : metadataElements) {
      JSONObject localeMap=JSONFactoryUtil.createJSONObject();
      String locale=metadataElement.attributeValue("locale");
      if (metadataElement != null) {
        for (        Element metadataEntry : metadataElement.elements()) {
          String attributeName=metadataEntry.attributeValue("name");
          String attributeValue=metadataEntry.getText();
          localeMap.put(attributeName,attributeValue);
          if (defaultLocale.equals(locale)) {
            jsonObject.put(attributeName,attributeValue);
          }
        }
      }
      localizationMap.put(locale,localeMap);
    }
    jsonObject.put("localizationMap",localizationMap);
    for (    Attribute attribute : dynamicElementElement.attributes()) {
      jsonObject.put(attribute.getName(),attribute.getValue());
    }
    jsonObject.put("key",dynamicElementElement.attributeValue("name"));
    String type=jsonObject.getString("type");
    String key="fields";
    if (type.equals(_TYPE_RADIO) || type.equals(_TYPE_SELECT)) {
      key="options";
    }
    jsonObject.put(key,getJSONArray(dynamicElementElement));
    jsonArray.put(jsonObject);
  }
  return jsonArray;
}

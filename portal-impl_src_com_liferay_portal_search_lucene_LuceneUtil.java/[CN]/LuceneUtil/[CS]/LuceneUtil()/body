{
  String analyzerName=PropsUtil.get(PropsKeys.LUCENE_ANALYZER);
  if (Validator.isNotNull(analyzerName)) {
    try {
      _analyzerClass=Class.forName(analyzerName);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  if (PropsValues.LUCENE_STORE_TYPE.equals(_LUCENE_STORE_TYPE_JDBC)) {
    Connection con=null;
    try {
      con=HibernateUtil.getConnection();
      String url=con.getMetaData().getURL();
      int x=url.indexOf(":");
      int y=url.indexOf(":",x + 1);
      String urlPrefix=url.substring(x + 1,y);
      String dialectClass=PropsUtil.get(PropsKeys.LUCENE_STORE_JDBC_DIALECT + urlPrefix);
      if (dialectClass != null) {
        if (_log.isDebugEnabled()) {
          _log.debug("JDBC class implementation " + dialectClass);
        }
      }
 else {
        if (_log.isDebugEnabled()) {
          _log.debug("JDBC class implementation is null");
        }
      }
      if (dialectClass != null) {
        _dialect=(Dialect)Class.forName(dialectClass).newInstance();
      }
    }
 catch (    Exception e) {
      _log.error(e);
    }
 finally {
      DataAccess.cleanUp(con);
    }
    if (_dialect == null) {
      _log.error("No JDBC dialect found");
    }
  }
}

{
  Object[] finderArgs=new Object[]{new Long(groupId),templateId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_T,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT journalTemplate FROM JournalTemplate journalTemplate WHERE ");
      query.append("journalTemplate.groupId = ?");
      query.append(" AND ");
      if (templateId == null) {
        query.append("journalTemplate.templateId IS NULL");
      }
 else {
        query.append("journalTemplate.templateId = ?");
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("journalTemplate.templateId ASC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (templateId != null) {
        qPos.add(templateId);
      }
      List<JournalTemplate> list=q.list();
      result=list;
      JournalTemplate journalTemplate=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_T,finderArgs,list);
      }
 else {
        journalTemplate=list.get(0);
        cacheResult(journalTemplate);
        if ((journalTemplate.getGroupId() != groupId) || (journalTemplate.getTemplateId() == null) || !journalTemplate.getTemplateId().equals(templateId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_T,finderArgs,journalTemplate);
        }
      }
      return journalTemplate;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_T,finderArgs,new ArrayList<JournalTemplate>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (JournalTemplate)result;
    }
  }
}

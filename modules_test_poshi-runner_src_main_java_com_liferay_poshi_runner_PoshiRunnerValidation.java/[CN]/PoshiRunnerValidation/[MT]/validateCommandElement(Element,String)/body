{
  List<String> possibleAttributeNames=Arrays.asList("line-number","name","returns","summary","summary-ignore");
  validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
  validateRequiredAttributeNames(element,Arrays.asList("name"),filePath);
  String returns=element.attributeValue("returns");
  List<Element> returnElements=PoshiRunnerGetterUtil.getAllChildElements(element,"return");
  if (returns == null) {
    if (returnElements.size() > 0) {
      _exceptions.add(new Exception(element.attributeValue("name") + " does not return values\n" + filePath+ ":"+ element.attributeValue("line-number")));
    }
  }
 else {
    List<String> returnsList=Arrays.asList(StringUtil.split(returns));
    for (    Element returnElement : returnElements) {
      String returnVariable=returnElement.attributeValue("name");
      if (!returnsList.contains(returnVariable)) {
        _exceptions.add(new Exception(returnVariable + " not listed as a return variable\n" + filePath+ ":"+ element.attributeValue("line-number")));
      }
    }
  }
}

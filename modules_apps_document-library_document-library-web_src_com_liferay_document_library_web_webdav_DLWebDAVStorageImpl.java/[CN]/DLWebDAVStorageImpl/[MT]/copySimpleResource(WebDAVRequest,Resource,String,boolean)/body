{
  File file=null;
  try {
    String[] destinationArray=WebDAVUtil.getPathArray(destination,true);
    long companyId=webDAVRequest.getCompanyId();
    long parentFolderId=DLFolderConstants.DEFAULT_PARENT_FOLDER_ID;
    try {
      parentFolderId=getParentFolderId(companyId,destinationArray);
    }
 catch (    NoSuchFolderException nsfe) {
      if (_log.isDebugEnabled()) {
        _log.debug(nsfe,nsfe);
      }
      return HttpServletResponse.SC_CONFLICT;
    }
    FileEntry fileEntry=(FileEntry)resource.getModel();
    long groupId=WebDAVUtil.getGroupId(companyId,destination);
    String mimeType=fileEntry.getMimeType();
    String title=getTitle(destinationArray);
    String description=fileEntry.getDescription();
    String changeLog=StringPool.BLANK;
    InputStream is=fileEntry.getContentStream();
    file=FileUtil.createTempFile(is);
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddGroupPermissions(isAddGroupPermissions(groupId));
    serviceContext.setAddGuestPermissions(true);
    int status=HttpServletResponse.SC_CREATED;
    if (overwrite) {
      if (deleteResource(groupId,parentFolderId,title,webDAVRequest.getLockUuid())) {
        status=HttpServletResponse.SC_NO_CONTENT;
      }
    }
    _dlAppService.addFileEntry(groupId,parentFolderId,title,mimeType,title,description,changeLog,file,serviceContext);
    return status;
  }
 catch (  DuplicateFileEntryException dfee) {
    if (_log.isDebugEnabled()) {
      _log.debug(dfee,dfee);
    }
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  DuplicateFolderNameException dfne) {
    if (_log.isDebugEnabled()) {
      _log.debug(dfne,dfne);
    }
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  LockException le) {
    if (_log.isDebugEnabled()) {
      _log.debug(le,le);
    }
    return WebDAVUtil.SC_LOCKED;
  }
catch (  PrincipalException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug(pe,pe);
    }
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
 finally {
    FileUtil.delete(file);
  }
}

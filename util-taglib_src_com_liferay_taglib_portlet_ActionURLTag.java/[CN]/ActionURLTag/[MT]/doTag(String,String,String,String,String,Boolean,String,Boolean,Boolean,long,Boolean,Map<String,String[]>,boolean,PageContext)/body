{
  Object returnObj=null;
  ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
  try {
    Thread.currentThread().setContextClassLoader(PortalClassLoaderUtil.getClassLoader());
    Object windowStateWrapper=windowState;
    if (windowStateWrapper == null) {
      windowStateWrapper=new NullWrapper(String.class.getName());
    }
    Object portletModeWrapper=portletMode;
    if (portletModeWrapper == null) {
      portletModeWrapper=new NullWrapper(String.class.getName());
    }
    Object varWrapper=var;
    if (varWrapper == null) {
      varWrapper=new NullWrapper(String.class.getName());
    }
    Object varImplWrapper=varImpl;
    if (varImplWrapper == null) {
      varImplWrapper=new NullWrapper(String.class.getName());
    }
    Object secureWrapper=secure;
    if (secureWrapper == null) {
      secureWrapper=new NullWrapper(Boolean.class.getName());
    }
    Object portletNameWrapper=portletName;
    if (portletNameWrapper == null) {
      portletNameWrapper=new NullWrapper(String.class.getName());
    }
    Object anchorWrapper=anchor;
    if (anchorWrapper == null) {
      anchorWrapper=new NullWrapper(Boolean.class.getName());
    }
    Object encryptWrapper=encrypt;
    if (encryptWrapper == null) {
      encryptWrapper=new NullWrapper(Boolean.class.getName());
    }
    Object portletConfigurationWrapper=portletConfiguration;
    if (portletConfigurationWrapper == null) {
      portletConfigurationWrapper=new NullWrapper(Boolean.class.getName());
    }
    Object paramsWrapper=params;
    if (paramsWrapper == null) {
      paramsWrapper=new NullWrapper(Map.class.getName());
    }
    MethodWrapper methodWrapper=new MethodWrapper(_TAG_CLASS,_TAG_DO_END_METHOD,new Object[]{lifecycle,windowStateWrapper,portletModeWrapper,varWrapper,varImplWrapper,secureWrapper,portletNameWrapper,anchorWrapper,encryptWrapper,new LongWrapper(doAsUserId),portletConfigurationWrapper,paramsWrapper,new BooleanWrapper(writeOutput),pageContext});
    returnObj=MethodInvoker.invoke(methodWrapper);
  }
 catch (  Exception e) {
    _log.error(e,e);
    throw e;
  }
 finally {
    Thread.currentThread().setContextClassLoader(contextClassLoader);
  }
  if (returnObj != null) {
    return returnObj.toString();
  }
 else {
    return StringPool.BLANK;
  }
}

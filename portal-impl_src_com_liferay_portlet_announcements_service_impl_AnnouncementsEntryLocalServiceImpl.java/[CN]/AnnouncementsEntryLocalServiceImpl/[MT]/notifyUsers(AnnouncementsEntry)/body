{
  Company company=companyPersistence.findByPrimaryKey(entry.getCompanyId());
  String className=entry.getClassName();
  long classPK=entry.getClassPK();
  String fromName=PropsValues.ANNOUNCEMENTS_EMAIL_FROM_NAME;
  String fromAddress=PropsValues.ANNOUNCEMENTS_EMAIL_FROM_ADDRESS;
  String toName=PropsValues.ANNOUNCEMENTS_EMAIL_TO_NAME;
  String toAddress=PropsValues.ANNOUNCEMENTS_EMAIL_TO_ADDRESS;
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  params.put("announcementsDeliveryEmailOrSms",entry.getType());
  if (classPK > 0) {
    if (className.equals(Group.class.getName())) {
      Group group=groupPersistence.findByPrimaryKey(classPK);
      toName=group.getName();
      params.put("usersGroups",classPK);
    }
 else     if (className.equals(Organization.class.getName())) {
      Organization organization=organizationPersistence.findByPrimaryKey(classPK);
      toName=organization.getName();
      params.put("usersOrgs",classPK);
    }
 else     if (className.equals(Role.class.getName())) {
      Role role=rolePersistence.findByPrimaryKey(classPK);
      toName=role.getName();
      params.put("usersRoles",classPK);
    }
 else     if (className.equals(UserGroup.class.getName())) {
      UserGroup userGroup=userGroupPersistence.findByPrimaryKey(classPK);
      toName=userGroup.getName();
      params.put("usersUserGroups",classPK);
    }
  }
  List<User> users=null;
  if (className.equals(User.class.getName())) {
    User user=userLocalService.getUserById(classPK);
    toName=user.getFullName();
    toAddress=user.getEmailAddress();
    users=new ArrayList<User>();
    if (Validator.isNotNull(toAddress)) {
      users.add(user);
    }
  }
 else {
    users=userLocalService.search(company.getCompanyId(),null,Boolean.TRUE,params,QueryUtil.ALL_POS,QueryUtil.ALL_POS,(OrderByComparator)null);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Notifying " + users.size() + " users");
  }
  List<InternetAddress> bulkAddresses=new ArrayList<InternetAddress>();
  for (  User user : users) {
    AnnouncementsDelivery announcementsDelivery=announcementsDeliveryLocalService.getUserDelivery(user.getUserId(),entry.getType());
    if (announcementsDelivery.isEmail()) {
      InternetAddress address=new InternetAddress(user.getEmailAddress(),user.getFullName());
      bulkAddresses.add(address);
    }
 else     if (announcementsDelivery.isSms()) {
      String smsSn=user.getContact().getSmsSn();
      InternetAddress address=new InternetAddress(smsSn,user.getFullName());
      bulkAddresses.add(address);
    }
  }
  if (bulkAddresses.size() == 0) {
    return;
  }
  String subject=ContentUtil.get(PropsValues.ANNOUNCEMENTS_EMAIL_SUBJECT);
  String body=ContentUtil.get(PropsValues.ANNOUNCEMENTS_EMAIL_BODY);
  subject=StringUtil.replace(subject,new String[]{"[$ENTRY_CONTENT$]","[$ENTRY_ID$]","[$ENTRY_TITLE$]","[$ENTRY_TYPE$]","[$ENTRY_URL$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{entry.getContent(),String.valueOf(entry.getEntryId()),entry.getTitle(),LanguageUtil.get(company.getCompanyId(),company.getLocale(),entry.getType()),entry.getUrl(),fromAddress,fromName,company.getVirtualHost(),LanguageUtil.get(company.getCompanyId(),company.getLocale(),(entry.isAlert() ? "alert" : "announcement")),toAddress,toName});
  body=StringUtil.replace(body,new String[]{"[$ENTRY_CONTENT$]","[$ENTRY_ID$]","[$ENTRY_TITLE$]","[$ENTRY_TYPE$]","[$ENTRY_URL$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]","[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{entry.getContent(),String.valueOf(entry.getEntryId()),entry.getTitle(),LanguageUtil.get(company.getCompanyId(),company.getLocale(),entry.getType()),entry.getUrl(),fromAddress,fromName,company.getVirtualHost(),LanguageUtil.get(company.getCompanyId(),company.getLocale(),(entry.isAlert() ? "alert" : "announcement")),toAddress,toName});
  InternetAddress from=new InternetAddress(fromAddress,fromName);
  InternetAddress to=new InternetAddress(toAddress,toName);
  InternetAddress[] bulkAddressesArray=bulkAddresses.toArray(new InternetAddress[bulkAddresses.size()]);
  MailMessage message=new MailMessage(from,to,subject,body,true);
  message.setBulkAddresses(bulkAddressesArray);
  mailService.sendEmail(message);
}

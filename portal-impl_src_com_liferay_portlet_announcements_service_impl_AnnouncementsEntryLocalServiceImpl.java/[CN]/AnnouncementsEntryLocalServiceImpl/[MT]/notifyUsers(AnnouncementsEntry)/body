{
  Company company=companyPersistence.findByPrimaryKey(entry.getCompanyId());
  String className=entry.getClassName();
  long classPK=entry.getClassPK();
  String toName=PropsValues.ANNOUNCEMENTS_EMAIL_TO_NAME;
  String toAddress=PropsValues.ANNOUNCEMENTS_EMAIL_TO_ADDRESS;
  long teamId=0;
  LinkedHashMap<String,Object> params=new LinkedHashMap<>();
  params.put("announcementsDeliveryEmailOrSms",entry.getType());
  if (classPK > 0) {
    if (className.equals(Group.class.getName())) {
      Group group=groupPersistence.findByPrimaryKey(classPK);
      toName=group.getDescriptiveName();
      params.put("inherit",Boolean.TRUE);
      params.put("usersGroups",classPK);
    }
 else     if (className.equals(Organization.class.getName())) {
      Organization organization=organizationPersistence.findByPrimaryKey(classPK);
      toName=organization.getName();
      params.put("usersOrgsTree",ListUtil.fromArray(new Organization[]{organization}));
    }
 else     if (className.equals(Role.class.getName())) {
      Role role=rolePersistence.findByPrimaryKey(classPK);
      toName=role.getName();
      if (role.getType() == RoleConstants.TYPE_REGULAR) {
        params.put("inherit",Boolean.TRUE);
        params.put("usersRoles",classPK);
      }
 else       if (role.isTeam()) {
        teamId=role.getClassPK();
      }
 else {
        params.put("userGroupRole",new Long[]{Long.valueOf(0),classPK});
      }
    }
 else     if (className.equals(UserGroup.class.getName())) {
      UserGroup userGroup=userGroupPersistence.findByPrimaryKey(classPK);
      toName=userGroup.getName();
      params.put("usersUserGroups",classPK);
    }
  }
  if (className.equals(User.class.getName())) {
    User user=userPersistence.findByPrimaryKey(classPK);
    if (Validator.isNull(user.getEmailAddress())) {
      return;
    }
    notifyUsers(ListUtil.fromArray(new User[]{user}),entry,company.getLocale(),user.getEmailAddress(),user.getFullName());
  }
 else {
    notifyUsers(entry,teamId,params,toName,toAddress,company);
  }
}

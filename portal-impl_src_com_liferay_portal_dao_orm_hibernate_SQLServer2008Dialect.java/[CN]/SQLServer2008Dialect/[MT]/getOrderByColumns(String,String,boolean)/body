{
  String[] orderByColumns=StringUtil.split(orderBy,StringPool.COMMA);
  for (int i=0; i < orderByColumns.length; i++) {
    String orderByColumn=orderByColumns[i].trim();
    String orderByColumnName=null;
    String orderByType=null;
    int columnPos=orderByColumn.indexOf(CharPool.SPACE);
    if (columnPos == -1) {
      orderByColumnName=orderByColumn;
      orderByType="ASC";
    }
 else {
      orderByColumnName=orderByColumn.substring(0,columnPos);
      orderByType=orderByColumn.substring(columnPos + 1);
    }
    if (useOriginalColumnNames) {
      String patternString="(\\S+) as \\Q".concat(orderByColumnName).concat("\\E\\W");
      Pattern pattern=Pattern.compile(patternString,Pattern.CASE_INSENSITIVE);
      Matcher matcher=pattern.matcher(selectFrom);
      if (matcher.find()) {
        orderByColumnName=matcher.group(1);
      }
    }
    orderByColumns[i]=orderByColumnName.concat(StringPool.SPACE).concat(orderByType);
  }
  return orderByColumns;
}

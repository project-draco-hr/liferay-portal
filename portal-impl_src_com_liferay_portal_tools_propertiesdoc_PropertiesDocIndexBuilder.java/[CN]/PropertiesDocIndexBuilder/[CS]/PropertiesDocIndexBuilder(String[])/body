{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  String propertiesDirName=GetterUtil.getString(arguments.get("properties.dir"));
  File propertiesDir=new File(propertiesDirName);
  if (!propertiesDir.exists()) {
    System.out.println(propertiesDirName + " not found");
    return;
  }
  List<String> propertiesHTMLFileNames=new ArrayList<>();
  File[] files=propertiesDir.listFiles();
  for (  File file : files) {
    String fileName=file.getName();
    if (fileName.endsWith(".properties.html")) {
      String propertiesHTMLFileName=fileName.substring(0,fileName.length() - 5);
      propertiesHTMLFileNames.add(propertiesHTMLFileName);
    }
  }
  if (propertiesHTMLFileNames.isEmpty()) {
    System.out.println("No properties HTML files found in " + propertiesDirName);
    return;
  }
  Map<String,Object> context=new HashMap<>();
  context.put("propertiesHTMLFileNames",propertiesHTMLFileNames);
  context.put("releaseInfoVersion",ReleaseInfo.getVersion());
  try {
    String indexHTMLFileName=propertiesDirName + "/index.html";
    File indexHTMLFile=new File(indexHTMLFileName);
    System.out.println("Writing " + indexHTMLFile);
    Writer writer=new FileWriter(indexHTMLFile);
    try {
      FreeMarkerUtil.process("com/liferay/portal/tools/propertiesdoc/dependencies" + "/index.ftl",context,writer);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    writer.flush();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
}

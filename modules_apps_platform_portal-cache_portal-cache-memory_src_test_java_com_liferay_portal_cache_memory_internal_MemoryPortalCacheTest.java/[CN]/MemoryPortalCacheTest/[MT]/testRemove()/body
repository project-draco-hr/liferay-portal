{
  Assert.assertEquals(_VALUE_1,_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _memoryPortalCache.remove(_KEY_1);
  Assert.assertNull(_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertRemoved(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertRemoved(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  _memoryPortalCache.put(_KEY_1,_VALUE_1);
  PortalCacheHelperUtil.removeWithoutReplicator(_memoryPortalCache,_KEY_1);
  Assert.assertNull(_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(2);
  _defaultPortalCacheListener.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.assertRemoved(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  _memoryPortalCache.remove(_KEY_2);
  Assert.assertNull(_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheReplicator.assertActionsCount(0);
  _memoryPortalCache.put(_KEY_1,_VALUE_1);
  Assert.assertTrue(_memoryPortalCache.remove(_KEY_1,_VALUE_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(2);
  _defaultPortalCacheListener.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.assertRemoved(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(2);
  _defaultPortalCacheReplicator.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.assertRemoved(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  _memoryPortalCache.put(_KEY_1,_VALUE_1);
  Assert.assertFalse(_memoryPortalCache.remove(_KEY_1,_VALUE_2));
  Assert.assertEquals(_VALUE_1,_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(1);
  _defaultPortalCacheListener.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheListener.reset();
  _defaultPortalCacheReplicator.assertActionsCount(1);
  _defaultPortalCacheReplicator.assertPut(_KEY_1,_VALUE_1);
  _defaultPortalCacheReplicator.reset();
  try {
    _memoryPortalCache.remove(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Key is null",npe.getMessage());
  }
  Assert.assertEquals(_VALUE_1,_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheReplicator.assertActionsCount(0);
  try {
    _memoryPortalCache.remove(null,_VALUE_1);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Key is null",npe.getMessage());
  }
  Assert.assertEquals(_VALUE_1,_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheReplicator.assertActionsCount(0);
  try {
    _memoryPortalCache.remove(_KEY_1,null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Value is null",npe.getMessage());
  }
  Assert.assertEquals(_VALUE_1,_memoryPortalCache.get(_KEY_1));
  Assert.assertNull(_memoryPortalCache.get(_KEY_2));
  _defaultPortalCacheListener.assertActionsCount(0);
  _defaultPortalCacheReplicator.assertActionsCount(0);
}

{
  if (!isEnabled()) {
    return;
  }
  Map<String,Fields> rawMetadataMap=null;
  if (fileVersion instanceof LiferayFileVersion) {
    try {
      LiferayFileVersion liferayFileVersion=(LiferayFileVersion)fileVersion;
      File file=liferayFileVersion.getFile(false);
      rawMetadataMap=RawMetadataProcessorUtil.getRawMetadataMap(fileVersion.getExtension(),fileVersion.getMimeType(),file);
    }
 catch (    UnsupportedOperationException uoe) {
    }
  }
  if (rawMetadataMap == null) {
    InputStream inputStream=null;
    try {
      inputStream=fileVersion.getContentStream(false);
      rawMetadataMap=RawMetadataProcessorUtil.getRawMetadataMap(fileVersion.getExtension(),fileVersion.getMimeType(),inputStream);
    }
  finally {
      StreamUtil.cleanUp(inputStream);
    }
  }
  List<DDMStructure> ddmStructures=DDMStructureLocalServiceUtil.getClassStructures(PortalUtil.getClassNameId(DLFileEntry.class),QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setScopeGroupId(fileVersion.getGroupId());
  serviceContext.setUserId(fileVersion.getUserId());
  DLFileEntryMetadataLocalServiceUtil.updateFileEntryMetadata(fileVersion.getCompanyId(),ddmStructures,0L,fileVersion.getFileEntryId(),fileVersion.getFileVersionId(),rawMetadataMap,serviceContext);
  FileEntry fileEntry=fileVersion.getFileEntry();
  if (fileEntry instanceof LiferayFileEntry) {
    Indexer indexer=IndexerRegistryUtil.getIndexer(DLFileEntryConstants.getClassName());
    LiferayFileEntry liferayFileEntry=(LiferayFileEntry)fileEntry;
    indexer.reindex(liferayFileEntry.getDLFileEntry());
  }
}

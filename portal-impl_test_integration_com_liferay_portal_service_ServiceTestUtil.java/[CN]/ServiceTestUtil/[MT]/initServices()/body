{
  InitUtil.initWithSpring();
  _deleteDLDirectories();
  try {
    JCRFactoryUtil.prepare();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    FileUtil.mkdirs(PropsValues.LUCENE_DIR + TestPropsValues.getCompanyId());
    LuceneHelperUtil.startup(TestPropsValues.getCompanyId());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    TemplateManagerUtil.init();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  IndexerRegistryUtil.register(new BlogsIndexer());
  IndexerRegistryUtil.register(new ContactIndexer());
  IndexerRegistryUtil.register(new UserIndexer());
  IndexerRegistryUtil.register(new BookmarksIndexer());
  IndexerRegistryUtil.register(new DLIndexer());
  IndexerRegistryUtil.register(new MBMessageIndexer());
  IndexerRegistryUtil.register(new TrashIndexer());
  IndexerRegistryUtil.register(new WikiNodeIndexer());
  IndexerRegistryUtil.register(new WikiPageIndexer());
  try {
    DBUpgrader.upgrade();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  MessageBus messageBus=(MessageBus)PortalBeanLocatorUtil.locate(MessageBus.class.getName());
  MessageSender messageSender=(MessageSender)PortalBeanLocatorUtil.locate(MessageSender.class.getName());
  SynchronousMessageSender synchronousMessageSender=(SynchronousMessageSender)PortalBeanLocatorUtil.locate(SynchronousMessageSender.class.getName());
  MessageBusUtil.init(messageBus,messageSender,synchronousMessageSender);
  try {
    SchedulerEngineHelperUtil.start();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    DBUpgrader.verify();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  _checkClassNames();
  try {
    _checkResourceActions();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  AssetRendererFactoryRegistryUtil.register(new BlogsEntryAssetRendererFactory());
  AssetRendererFactoryRegistryUtil.register(new DLFileEntryAssetRendererFactory());
  TrashHandlerRegistryUtil.register(new BlogsEntryTrashHandler());
  TrashHandlerRegistryUtil.register(new DLFileEntryTrashHandler());
  TrashHandlerRegistryUtil.register(new DLFileShortcutTrashHandler());
  TrashHandlerRegistryUtil.register(new DLFolderTrashHandler());
  TrashHandlerRegistryUtil.register(new MBThreadTrashHandler());
  TrashHandlerRegistryUtil.register(new WikiNodeTrashHandler());
  TrashHandlerRegistryUtil.register(new WikiPageTrashHandler());
  WorkflowHandlerRegistryUtil.register(new BlogsEntryWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new DLFileEntryWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new JournalArticleWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new MBDiscussionWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new MBMessageWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new UserWorkflowHandler());
  WorkflowHandlerRegistryUtil.register(new WikiPageWorkflowHandler());
  try {
    CompanyLocalServiceUtil.checkCompany(TestPropsValues.COMPANY_WEB_ID);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

{
  long groupId=0;
  long repositoryId=0;
  long folderId=atomRequestContext.getLongParameter("folderId");
  if (folderId != 0) {
    DLFolder dlFolder=DLFolderServiceUtil.getFolder(folderId);
    groupId=dlFolder.getGroupId();
    repositoryId=dlFolder.getRepositoryId();
  }
 else {
    groupId=atomRequestContext.getLongParameter("groupId");
    repositoryId=atomRequestContext.getLongParameter("repositoryId");
  }
  String mimeType=atomRequestContext.getHeader("Media-Content-Type");
  if (mimeType == null) {
    mimeType=MimeTypesUtil.getContentType(title);
  }
  byte[] contentDecoded=Base64.decode(content);
  ByteArrayInputStream contentInputStream=new ByteArrayInputStream(contentDecoded);
  ServiceContext serviceContext=new ServiceContext();
  DLFileEntry dlFileEntry=DLFileEntryServiceUtil.addFileEntry(groupId,repositoryId,folderId,mimeType,title,summary,null,contentInputStream,contentDecoded.length,serviceContext);
  return dlFileEntry;
}

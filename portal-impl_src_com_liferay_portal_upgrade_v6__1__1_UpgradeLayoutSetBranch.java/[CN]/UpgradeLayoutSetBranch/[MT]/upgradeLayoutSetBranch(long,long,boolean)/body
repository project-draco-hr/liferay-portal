{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    StringBundler sb=new StringBundler(4);
    sb.append("select themeId, colorSchemeId, wapThemeId, ");
    sb.append("wapColorSchemeId, css, settings_, ");
    sb.append("layoutSetPrototypeUuid, layoutSetPrototypeLinkEnabled ");
    sb.append("from LayoutSet where groupId = ? and privateLayout = ?");
    ps=con.prepareStatement(sb.toString());
    ps.setLong(1,groupId);
    ps.setBoolean(2,privateLayout);
    rs=ps.executeQuery();
    while (rs.next()) {
      String themeId=rs.getString("themeId");
      String colorSchemeId=rs.getString("colorSchemeId");
      String wapThemeId=rs.getString("wapThemeId");
      String wapColorSchemeId=rs.getString("wapColorSchemeId");
      String css=rs.getString("css");
      String settings=rs.getString("settings_");
      String layoutSetPrototypeUuid=rs.getString("layoutSetPrototypeUuid");
      boolean layoutSetPrototypeLinkEnabled=rs.getBoolean("layoutSetPrototypeLinkEnabled");
      updateLayoutSetBranch(layoutSetBranchId,themeId,colorSchemeId,wapThemeId,wapColorSchemeId,css,settings,layoutSetPrototypeUuid,layoutSetPrototypeLinkEnabled);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

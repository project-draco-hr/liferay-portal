{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    StringBundler sb=new StringBundler(7);
    sb.append("select LayoutSet.layoutSetId, ");
    sb.append("LayoutSet.themeId, LayoutSet.colorSchemeId, ");
    sb.append("LayoutSet.wapThemeId, LayoutSet.wapColorSchemeId, ");
    sb.append("LayoutSet.css, LayoutSet.settings_, ");
    sb.append("LayoutSet.layoutSetPrototypeUuid, ");
    sb.append("LayoutSet.layoutSetPrototypeLinkEnabled ");
    sb.append("from LayoutSet where groupId = ? and privateLayout = ?");
    ps=con.prepareStatement(sb.toString());
    ps.setLong(1,groupId);
    ps.setBoolean(2,privateLayout);
    rs=ps.executeQuery();
    while (rs.next()) {
      long layoutSetId=rs.getLong("LayoutSet.layoutSetId");
      String themeId=rs.getString("LayoutSet.themeId");
      String colorSchemeId=rs.getString("LayoutSet.colorSchemeId");
      String wapThemeId=rs.getString("LayoutSet.wapThemeId");
      String wapColorSchemeId=rs.getString("LayoutSet.wapColorSchemeId");
      String css=rs.getString("LayoutSet.css");
      String settings=rs.getString("LayoutSet.settings_");
      String layoutSetPrototypeUuid=rs.getString("LayoutSet.layoutSetPrototypeUuid");
      boolean layoutSetPrototypeLinkEnabled=rs.getBoolean("LayoutSet.layoutSetPrototypeLinkEnabled");
      updateLayoutSetBranch(layoutSetBranchId,themeId,colorSchemeId,wapThemeId,wapColorSchemeId,css,settings,layoutSetPrototypeUuid,layoutSetPrototypeLinkEnabled);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

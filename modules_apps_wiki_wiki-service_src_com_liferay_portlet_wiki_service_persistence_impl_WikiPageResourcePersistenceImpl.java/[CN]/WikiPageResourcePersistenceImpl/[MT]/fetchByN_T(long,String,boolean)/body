{
  Object[] finderArgs=new Object[]{nodeId,title};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,this);
  }
  if (result instanceof WikiPageResource) {
    WikiPageResource wikiPageResource=(WikiPageResource)result;
    if ((nodeId != wikiPageResource.getNodeId()) || !Validator.equals(title,wikiPageResource.getTitle())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_WIKIPAGERESOURCE_WHERE);
    query.append(_FINDER_COLUMN_N_T_NODEID_2);
    boolean bindTitle=false;
    if (title == null) {
      query.append(_FINDER_COLUMN_N_T_TITLE_1);
    }
 else     if (title.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_N_T_TITLE_3);
    }
 else {
      bindTitle=true;
      query.append(_FINDER_COLUMN_N_T_TITLE_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(nodeId);
      if (bindTitle) {
        qPos.add(title);
      }
      List<WikiPageResource> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,list);
      }
 else {
        WikiPageResource wikiPageResource=list.get(0);
        result=wikiPageResource;
        cacheResult(wikiPageResource);
        if ((wikiPageResource.getNodeId() != nodeId) || (wikiPageResource.getTitle() == null) || !wikiPageResource.getTitle().equals(title)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,wikiPageResource);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_N_T,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (WikiPageResource)result;
  }
}

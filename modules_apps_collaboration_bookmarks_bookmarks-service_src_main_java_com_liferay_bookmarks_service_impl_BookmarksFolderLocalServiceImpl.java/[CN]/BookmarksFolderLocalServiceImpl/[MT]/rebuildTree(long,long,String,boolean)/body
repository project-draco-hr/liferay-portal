{
  TreePathUtil.rebuildTree(companyId,parentFolderId,parentTreePath,new TreeModelTasksAdapter<BookmarksFolder>(){
    @Override public List<BookmarksFolder> findTreeModels(    long previousId,    long companyId,    long parentPrimaryKey,    int size){
      return bookmarksFolderPersistence.findByF_C_P_NotS(previousId,companyId,parentPrimaryKey,WorkflowConstants.STATUS_IN_TRASH,QueryUtil.ALL_POS,size,new FolderIdComparator(true));
    }
    @Override public void rebuildDependentModelsTreePaths(    long parentPrimaryKey,    String treePath) throws PortalException {
      bookmarksEntryLocalService.setTreePaths(parentPrimaryKey,treePath,false);
    }
    @Override public void reindexTreeModels(    List<TreeModel> treeModels) throws PortalException {
      if (!reindex) {
        return;
      }
      Indexer<BookmarksFolder> indexer=IndexerRegistryUtil.nullSafeGetIndexer(BookmarksFolder.class);
      for (      TreeModel treeModel : treeModels) {
        BookmarksFolder bookmarkFolder=(BookmarksFolder)treeModel;
        indexer.reindex(bookmarkFolder);
      }
    }
  }
);
}

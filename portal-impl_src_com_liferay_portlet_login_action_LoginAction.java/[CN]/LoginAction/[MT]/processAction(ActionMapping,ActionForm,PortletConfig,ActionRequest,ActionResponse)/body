{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if (PropsValues.AUTH_LOGIN_DISABLED) {
    actionResponse.sendRedirect(themeDisplay.getPathMain() + PropsValues.AUTH_LOGIN_DISABLED_PATH);
    return;
  }
  try {
    PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest);
    login(themeDisplay,actionRequest,actionResponse,preferences);
    boolean doActionAfterLogin=ParamUtil.getBoolean(actionRequest,"doActionAfterLogin");
    if (doActionAfterLogin) {
      setForward(actionRequest,"portlet.login.login_redirect");
    }
  }
 catch (  Exception e) {
    if (e instanceof AuthException) {
      Throwable cause=e.getCause();
      if (cause instanceof PasswordExpiredException || cause instanceof UserLockoutException) {
        SessionErrors.add(actionRequest,cause.getClass().getName());
      }
 else {
        if (_log.isInfoEnabled()) {
          _log.info("Authentication failed");
        }
        SessionErrors.add(actionRequest,e.getClass().getName());
      }
    }
 else     if (e instanceof CookieNotSupportedException || e instanceof NoSuchUserException || e instanceof PasswordExpiredException|| e instanceof UserEmailAddressException|| e instanceof UserIdException|| e instanceof UserLockoutException|| e instanceof UserPasswordException|| e instanceof UserScreenNameException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
    }
 else {
      _log.error(e,e);
      PortalUtil.sendError(e,actionRequest,actionResponse);
    }
  }
}

{
  try {
    String[] credentials=null;
    String autoUserId=CookieUtil.get(req.getCookies(),CookieKeys.ID);
    String autoPassword=CookieUtil.get(req.getCookies(),CookieKeys.PASSWORD);
    if (Validator.isNotNull(autoUserId) && Validator.isNotNull(autoPassword)) {
      Company company=PortalUtil.getCompany(req);
      KeyValuePair kvp=null;
      if (company.isAutoLogin() && !req.isSecure()) {
        kvp=UserLocalServiceUtil.decryptUserId(company.getCompanyId(),autoUserId,autoPassword);
        credentials=new String[3];
        credentials[0]=kvp.getKey();
        credentials[1]=kvp.getValue();
        credentials[2]=Boolean.FALSE.toString();
      }
    }
    return credentials;
  }
 catch (  Exception e) {
    _log.warn(e,e);
    Cookie cookie=new Cookie(CookieKeys.ID,StringPool.BLANK);
    cookie.setMaxAge(0);
    cookie.setPath(StringPool.SLASH);
    CookieKeys.addCookie(res,cookie);
    cookie=new Cookie(CookieKeys.PASSWORD,StringPool.BLANK);
    cookie.setMaxAge(0);
    cookie.setPath(StringPool.SLASH);
    CookieKeys.addCookie(res,cookie);
    throw new AutoLoginException(e);
  }
}

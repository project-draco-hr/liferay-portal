{
  ServletContext servletContext=getServletContext();
  Bundle bundle=(Bundle)servletContext.getAttribute(HttpServicePropsKeys.HTTP_SERVICE_OSGI_BUNDLE);
  String path=StringPool.SLASH;
  URL entryURL=bundle.getEntry("WEB-INF/service.xml");
  if (entryURL != null) {
    try {
      Document document=SAXReaderUtil.read(entryURL.openStream());
      Element rootElement=document.getRootElement();
      String packagePath=rootElement.attributeValue("package-path");
      if (Validator.isNotNull(packagePath)) {
        path+=StringUtil.replace(packagePath,StringPool.PERIOD,StringPool.SLASH);
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  BundleWiring bundleWiring=bundle.adapt(BundleWiring.class);
  Collection<String> resources=bundleWiring.listResources(path,"*.class",BundleWiring.LISTRESOURCES_RECURSE);
  if ((resources == null) || resources.isEmpty()) {
    return;
  }
  ClassLoader classLoader=getClassLoader();
  for (  String resource : resources) {
    URL resourceURL=classLoader.getResource(resource);
    String className=StringUtil.replace(resourceURL.getPath(),new String[]{StringPool.SLASH,".class"},new String[]{StringPool.PERIOD,StringPool.BLANK});
    if (className.startsWith(StringPool.PERIOD)) {
      className=className.substring(1);
    }
    try {
      registerClass(className,resourceURL.openStream());
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
}

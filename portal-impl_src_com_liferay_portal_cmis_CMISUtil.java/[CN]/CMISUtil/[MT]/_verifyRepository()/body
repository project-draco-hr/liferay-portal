{
  Service service=_getService();
  Workspace workspace=service.getWorkspaces().get(0);
  CMISRepositoryInfo cmisRepositoryInfo=workspace.getFirstChild(_cmisConstants.REPOSITORY_INFO);
  String version=cmisRepositoryInfo.getVersionSupported();
  if (_log.isInfoEnabled()) {
    _log.info("Using CMIS repository " + cmisRepositoryInfo.getProductName() + " "+ cmisRepositoryInfo.getProductVersion());
    _log.info("CMIS repository supports CMIS version " + version);
  }
  if (!version.equals(_cmisConstants.VERSION)) {
    throw new RuntimeException("CMIS repository is running an unsupported version");
  }
  String url=_getCollectionUrl(workspace,_cmisConstants.COLLECTION_ROOT_CHILDREN);
  Entry entry=_getEntry(url,PropsValues.CMIS_SYSTEM_ROOT_DIR,_cmisConstants.BASE_TYPE_FOLDER);
  if (entry == null) {
    entry=_createFolder(url,PropsValues.CMIS_SYSTEM_ROOT_DIR);
  }
  Link link=entry.getLink(_cmisConstants.LINK_CHILDREN);
  _linkChildrenURL=link.getHref().toString();
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  int nodeCount=_wikiNodeLocalService.getNodesCount(themeDisplay.getScopeGroupId());
  if (nodeCount == 1) {
    SessionErrors.add(actionRequest,RequiredNodeException.class);
    return;
  }
  List<TrashedModel> trashedModels=new ArrayList<>();
  long[] deleteNodeIds=null;
  long nodeId=ParamUtil.getLong(actionRequest,"nodeId");
  if (nodeId > 0) {
    deleteNodeIds=new long[]{nodeId};
  }
 else {
    deleteNodeIds=ParamUtil.getLongValues(actionRequest,"rowIdsWikiNode");
  }
  WikiPortletInstanceOverriddenConfiguration wikiPortletInstanceOverriddenConfiguration=getWikiPortletInstanceOverriddenConfiguration(actionRequest);
  for (  long deleteNodeId : deleteNodeIds) {
    WikiNode wikiNode=_wikiNodeService.getNode(deleteNodeId);
    String oldName=wikiNode.getName();
    WikiCacheThreadLocal.setClearCache(false);
    WikiNode trashWikiNode=null;
    if (moveToTrash) {
      trashWikiNode=_wikiNodeService.moveNodeToTrash(deleteNodeId);
      trashedModels.add(trashWikiNode);
    }
 else {
      _wikiNodeService.deleteNode(deleteNodeId);
    }
    WikiCacheUtil.clearCache(deleteNodeId);
    updateSettings(wikiPortletInstanceOverriddenConfiguration,oldName,StringPool.BLANK);
  }
  WikiCacheThreadLocal.setClearCache(true);
  if (moveToTrash && !trashedModels.isEmpty()) {
    TrashUtil.addTrashSessionMessages(actionRequest,trashedModels);
    hideDefaultSuccessMessage(actionRequest);
  }
}

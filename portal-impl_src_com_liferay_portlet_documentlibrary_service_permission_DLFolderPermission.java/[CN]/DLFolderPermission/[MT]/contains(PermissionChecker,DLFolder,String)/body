{
  if (actionId.equals(ActionKeys.ADD_FOLDER)) {
    actionId=ActionKeys.ADD_SUBFOLDER;
  }
  Boolean hasPermission=StagingPermissionUtil.hasPermission(permissionChecker,dlFolder.getGroupId(),DLFolder.class.getName(),dlFolder.getFolderId(),PortletKeys.DOCUMENT_LIBRARY,actionId);
  if (hasPermission != null) {
    return hasPermission.booleanValue();
  }
  long folderId=dlFolder.getFolderId();
  if (actionId.equals(ActionKeys.VIEW)) {
    while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      try {
        dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
        folderId=dlFolder.getParentFolderId();
        if (!permissionChecker.hasOwnerPermission(dlFolder.getCompanyId(),DLFolder.class.getName(),dlFolder.getFolderId(),dlFolder.getUserId(),actionId) && !permissionChecker.hasPermission(dlFolder.getGroupId(),DLFolder.class.getName(),dlFolder.getFolderId(),actionId)) {
          return false;
        }
        if (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {
          break;
        }
      }
 catch (      NoSuchFolderException nsfe) {
        if (dlFolder.isInTrash()) {
          break;
        }
        throw nsfe;
      }
    }
    return true;
  }
 else {
    while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
      folderId=dlFolder.getParentFolderId();
      if (permissionChecker.hasOwnerPermission(dlFolder.getCompanyId(),DLFolder.class.getName(),dlFolder.getFolderId(),dlFolder.getUserId(),actionId)) {
        return true;
      }
      if (permissionChecker.hasPermission(dlFolder.getGroupId(),DLFolder.class.getName(),dlFolder.getFolderId(),actionId)) {
        return true;
      }
    }
    return false;
  }
}

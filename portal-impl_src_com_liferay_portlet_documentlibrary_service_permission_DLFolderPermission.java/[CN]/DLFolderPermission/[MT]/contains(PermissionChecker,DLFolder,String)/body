{
  if (actionId.equals(ActionKeys.ADD_FOLDER)) {
    actionId=ActionKeys.ADD_SUBFOLDER;
  }
  Boolean hasPermission=StagingPermissionUtil.hasPermission(permissionChecker,dlFolder.getGroupId(),DLFolder.class.getName(),dlFolder.getFolderId(),PortletKeys.DOCUMENT_LIBRARY,actionId);
  if (hasPermission != null) {
    return hasPermission.booleanValue();
  }
  long folderId=dlFolder.getFolderId();
  if (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {
    long originalFolderId=folderId;
    try {
      while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
        dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
        if (!_hasPermission(permissionChecker,dlFolder,ActionKeys.VIEW)) {
          return false;
        }
        folderId=dlFolder.getParentFolderId();
      }
    }
 catch (    NoSuchFolderException nsfe) {
      if (!dlFolder.isInTrash()) {
        throw nsfe;
      }
    }
    if (actionId.equals(ActionKeys.VIEW)) {
      return true;
    }
    folderId=originalFolderId;
  }
  try {
    while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
      if (_hasPermission(permissionChecker,dlFolder,actionId)) {
        return true;
      }
      folderId=dlFolder.getParentFolderId();
    }
  }
 catch (  NoSuchFolderException nsfe) {
    if (!dlFolder.isInTrash()) {
      throw nsfe;
    }
  }
  return false;
}

{
  if (actionId.equals(ActionKeys.ADD_FOLDER)) {
    actionId=ActionKeys.ADD_SUBFOLDER;
  }
  Boolean hasPermission=StagingPermissionUtil.hasPermission(permissionChecker,dlFolder.getGroupId(),DLFolder.class.getName(),dlFolder.getFolderId(),PortletKeys.DOCUMENT_LIBRARY,actionId);
  if (hasPermission != null) {
    return hasPermission.booleanValue();
  }
  long folderId=dlFolder.getFolderId();
  if (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {
    DLFolder originalFolder=dlFolder;
    try {
      while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
        dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
        if (!permissionChecker.hasOwnerPermission(dlFolder.getCompanyId(),DLFolder.class.getName(),folderId,dlFolder.getUserId(),ActionKeys.VIEW) && !permissionChecker.hasPermission(dlFolder.getGroupId(),DLFolder.class.getName(),folderId,ActionKeys.VIEW)) {
          return false;
        }
        folderId=dlFolder.getParentFolderId();
      }
    }
 catch (    NoSuchFolderException nsfe) {
      if (!dlFolder.isInTrash()) {
        throw nsfe;
      }
    }
    if (Validator.equals(actionId,ActionKeys.VIEW)) {
      return true;
    }
    folderId=originalFolder.getFolderId();
  }
  if (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE || !Validator.equals(actionId,ActionKeys.VIEW)) {
    try {
      while (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
        dlFolder=DLFolderLocalServiceUtil.getFolder(folderId);
        if (permissionChecker.hasOwnerPermission(dlFolder.getCompanyId(),DLFolder.class.getName(),folderId,dlFolder.getUserId(),actionId) || permissionChecker.hasPermission(dlFolder.getGroupId(),DLFolder.class.getName(),folderId,actionId)) {
          return true;
        }
        folderId=dlFolder.getParentFolderId();
      }
    }
 catch (    NoSuchFolderException nsfe) {
      if (!dlFolder.isInTrash()) {
        throw nsfe;
      }
    }
  }
  return false;
}

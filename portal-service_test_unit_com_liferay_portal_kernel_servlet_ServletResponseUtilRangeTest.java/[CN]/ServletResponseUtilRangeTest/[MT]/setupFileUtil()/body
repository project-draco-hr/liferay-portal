{
  new FileUtil().setFile(file);
  when(file.createTempFile()).thenAnswer(new Answer<File>(){
    @Override public File answer(    InvocationOnMock invocation) throws Throwable {
      String name=String.valueOf(System.currentTimeMillis());
      return File.createTempFile(name,null);
    }
  }
);
  when(file.delete(Matchers.any(File.class))).thenAnswer(new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocation) throws Throwable {
      Object[] args=invocation.getArguments();
      File file=(File)args[0];
      return file.delete();
    }
  }
);
}

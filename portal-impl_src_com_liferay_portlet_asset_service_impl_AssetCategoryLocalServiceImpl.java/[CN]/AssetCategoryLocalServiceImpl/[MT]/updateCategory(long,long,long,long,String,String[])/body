{
  AssetCategory category=assetCategoryPersistence.findByPrimaryKey(categoryId);
  category.setModifiedDate(new Date());
  assetCategoryVocabularyPersistence.findByPrimaryKey(vocabularyId);
  category.setVocabularyId(vocabularyId);
  name=name.trim();
  validate(parentCategoryId,categoryId,name);
  category.setName(name);
  category.setParentCategoryId(parentCategoryId);
  assetCategoryPersistence.update(category,false);
  Set<Long> newProperties=new HashSet<Long>();
  List<AssetCategoryProperty> oldProperties=assetCategoryPropertyPersistence.findByCategoryId(categoryId);
  for (int i=0; i < properties.length; i++) {
    String[] property=StringUtil.split(properties[i],StringPool.COLON);
    long propertyId=0;
    if (property.length > 0) {
      propertyId=GetterUtil.getLong(property[0]);
    }
    String key=StringPool.BLANK;
    if (property.length > 1) {
      key=GetterUtil.getString(property[1]);
    }
    String value=StringPool.BLANK;
    if (property.length > 2) {
      value=GetterUtil.getString(property[2]);
    }
    if (propertyId == 0) {
      if (Validator.isNotNull(key)) {
        assetCategoryPropertyLocalService.addCategoryProperty(userId,categoryId,key,value);
      }
    }
 else {
      if (Validator.isNull(key)) {
        assetCategoryPropertyLocalService.deleteCategoryProperty(propertyId);
      }
 else {
        assetCategoryPropertyLocalService.updateCategoryProperty(propertyId,key,value);
        newProperties.add(propertyId);
      }
    }
  }
  for (  AssetCategoryProperty property : oldProperties) {
    if (!newProperties.contains(property.getCategoryPropertyId())) {
      assetCategoryPropertyLocalService.deleteCategoryProperty(property);
    }
  }
  return category;
}

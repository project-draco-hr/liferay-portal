{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=serviceContext.getScopeGroupId();
  if (properties == null) {
    properties=new String[0];
  }
  name=name.trim();
  validate(parentCategoryId,0,name);
  Date now=new Date();
  long categoryId=counterLocalService.increment();
  AssetCategory category=assetCategoryPersistence.create(categoryId);
  category.setGroupId(groupId);
  category.setCompanyId(user.getCompanyId());
  category.setUserId(user.getUserId());
  category.setUserName(user.getFullName());
  category.setCreateDate(now);
  category.setModifiedDate(now);
  category.setName(name);
  assetCategoryVocabularyPersistence.findByPrimaryKey(vocabularyId);
  category.setVocabularyId(vocabularyId);
  if (parentCategoryId > 0) {
    assetCategoryPersistence.findByPrimaryKey(parentCategoryId);
  }
  category.setParentCategoryId(parentCategoryId);
  assetCategoryPersistence.update(category,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addCategoryResources(category,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addCategoryResources(category,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  for (int i=0; i < properties.length; i++) {
    String[] property=StringUtil.split(properties[i],StringPool.COLON);
    String key=StringPool.BLANK;
    if (property.length > 1) {
      key=GetterUtil.getString(property[1]);
    }
    String value=StringPool.BLANK;
    if (property.length > 2) {
      value=GetterUtil.getString(property[2]);
    }
    if (Validator.isNotNull(key)) {
      assetCategoryPropertyLocalService.addCategoryProperty(userId,categoryId,key,value);
    }
  }
  return category;
}

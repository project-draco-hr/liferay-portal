{
  long companyId=PortalUtil.getCompanyId(actionRequest);
  long userId=PortalUtil.getUserId(actionRequest);
  if (!RoleLocalServiceUtil.hasUserRole(userId,companyId,RoleConstants.ADMINISTRATOR,true)) {
    SessionErrors.add(actionRequest,PrincipalException.class.getName());
    setForward(actionRequest,"portlet.enterprise_admin.error");
    return;
  }
  PortletPreferences preferences=PrefsPropsUtil.getPreferences(companyId);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  if (cmd.equals("updateCAS")) {
    updateCAS(actionRequest,companyId,preferences);
  }
 else   if (cmd.equals("updateDefaultGroupsAndRoles")) {
    updateDefaultGroupsAndRoles(actionRequest,preferences);
  }
 else   if (cmd.equals("updateEmails")) {
    updateEmails(actionRequest,preferences);
  }
 else   if (cmd.equals("updateLdap")) {
    updateLdap(actionRequest,companyId,preferences);
  }
 else   if (cmd.equals("updateMailHostNames")) {
    updateMailHostNames(actionRequest,preferences);
  }
 else   if (cmd.equals("updateNtlm")) {
    updateNtlm(actionRequest,companyId,preferences);
  }
 else   if (cmd.equals("updateOpenId")) {
    updateOpenId(actionRequest,preferences);
  }
 else   if (cmd.equals("updateOpenSSO")) {
    updateOpenSSO(actionRequest,companyId,preferences);
  }
 else   if (cmd.equals("updateReservedUsers")) {
    updateReservedUsers(actionRequest,preferences);
  }
 else   if (cmd.equals("updateSecurity")) {
    updateSecurity(actionRequest);
  }
 else   if (cmd.equals("updateSiteMinder")) {
    updateSiteMinder(actionRequest,companyId,preferences);
  }
  if (SessionErrors.isEmpty(actionRequest)) {
    if (!cmd.equals("updateLdap") && !cmd.equals("updateSecurity")) {
      preferences.store();
    }
    sendRedirect(actionRequest,actionResponse);
  }
 else {
    setForward(actionRequest,"portlet.enterprise_admin.view");
  }
}

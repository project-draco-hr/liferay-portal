{
  List<SyncFile> syncFiles=new ArrayList<>();
  SyncFile folderSyncFileA=SyncFileTestUtil.addFolderSyncFile(FileUtil.getFilePathName(filePathName,"a"),syncFileStates[0],syncAccount.getSyncAccountId());
  syncFiles.add(folderSyncFileA);
  SyncFile folderSyncFileAA=SyncFileTestUtil.addFolderSyncFile(FileUtil.getFilePathName(filePathName,"a","a"),folderSyncFileA.getTypePK(),syncFileStates[1],syncAccount.getSyncAccountId());
  syncFiles.add(folderSyncFileAA);
  SyncFile folderSyncFileAB=SyncFileTestUtil.addFolderSyncFile(FileUtil.getFilePathName(filePathName,"a","b"),folderSyncFileA.getTypePK(),syncFileStates[2],syncAccount.getSyncAccountId());
  syncFiles.add(folderSyncFileAB);
  SyncFile folderSyncFileAAA=SyncFileTestUtil.addFolderSyncFile(FileUtil.getFilePathName(filePathName,"a","a","a"),folderSyncFileAA.getTypePK(),syncFileStates[3],syncAccount.getSyncAccountId());
  syncFiles.add(folderSyncFileAAA);
  SyncFilePersistence syncFilePersistence=SyncFileService.getSyncFilePersistence();
  PowerMockito.mockStatic(FileEventUtil.class);
  SyncFileService.resyncFolders(syncAccount.getSyncAccountId(),syncFiles);
  PowerMockito.verifyStatic(Mockito.times(expectedExecutionCount));
  FileEventUtil.resyncFolder(Mockito.anyLong(),Mockito.any(SyncFile.class));
  List<SyncFile> resyncingSyncFiles=syncFilePersistence.queryForEq("uiEvent",SyncFile.UI_EVENT_RESYNCING);
  Assert.assertEquals(expectedModifiedCount,resyncingSyncFiles.size());
  for (  SyncFile syncFile : syncFiles) {
    syncFilePersistence.delete(syncFile);
  }
  FileUtils.deleteDirectory(new File(folderSyncFileA.getFilePathName()));
}

{
  FileUtil fileUtil=new FileUtil();
  fileUtil.setFile(new FileImpl(){
    @Override public File createTempFile(){
      try {
        return File.createTempFile(SPIAgentRequestTest.class.getName(),null);
      }
 catch (      IOException ioe) {
        throw new RuntimeException(ioe);
      }
    }
  }
);
  PortalUtil portalUtil=new PortalUtil();
  portalUtil.setPortal(new PortalImpl());
  ThreadLocalDistributor threadLocalDistributor=new ThreadLocalDistributor();
  threadLocalDistributor.setThreadLocalSources(Arrays.asList(new KeyValuePair(SPIAgentRequestTest.class.getName(),"_threadLocal")));
  threadLocalDistributor.afterPropertiesSet();
  MemoryPortalCacheManager<Serializable,Serializable> memoryPortalCacheManager=new MemoryPortalCacheManager<Serializable,Serializable>();
  memoryPortalCacheManager.afterPropertiesSet();
  MultiVMPoolImpl multiVMPoolImpl=new MultiVMPoolImpl();
  multiVMPoolImpl.setPortalCacheManager(memoryPortalCacheManager);
  MultiVMPoolUtil multiVMPoolUtil=new MultiVMPoolUtil();
  multiVMPoolUtil.setMultiVMPool(multiVMPoolImpl);
}

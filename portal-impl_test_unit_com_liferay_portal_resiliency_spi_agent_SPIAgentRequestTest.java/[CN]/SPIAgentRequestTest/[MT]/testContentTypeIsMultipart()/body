{
  _mockHttpServletRequest.addHeader(HttpHeaders.CONTENT_TYPE,ContentTypes.MULTIPART_FORM_DATA);
  SPIAgentRequest spiAgentRequest=new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest,null,null));
  HttpServletRequest populateHttpServletRequest=spiAgentRequest.populateRequest(new MockHttpServletRequest());
  Assert.assertSame(AgentHttpServletRequestWrapper.class,populateHttpServletRequest.getClass());
  spiAgentRequest=new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest,new HashMap<String,FileItem[]>(),new HashMap<String,List<String>>()));
  populateHttpServletRequest=spiAgentRequest.populateRequest(new MockHttpServletRequest());
  Assert.assertSame(AgentHttpServletRequestWrapper.class,populateHttpServletRequest.getClass());
  Map<String,FileItem[]> fileParameters=new HashMap<String,FileItem[]>();
  String fileParameter="fileParameter";
  FileItem[] fileItems=new FileItem[0];
  fileParameters.put(fileParameter,fileItems);
  spiAgentRequest=new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest,fileParameters,new HashMap<String,List<String>>()));
  populateHttpServletRequest=spiAgentRequest.populateRequest(new MockHttpServletRequest());
  Assert.assertSame(UploadServletRequestImpl.class,populateHttpServletRequest.getClass());
  UploadServletRequestImpl uploadServletRequestImpl=(UploadServletRequestImpl)populateHttpServletRequest;
  Map<String,FileItem[]> populatedFileParameters=uploadServletRequestImpl.getMultipartParameterMap();
  Map<String,List<String>> populatedRegularParameters=uploadServletRequestImpl.getRegularParameterMap();
  Assert.assertEquals(1,populatedFileParameters.size());
  Assert.assertSame(fileItems,populatedFileParameters.get(fileParameter));
  Assert.assertTrue(populatedRegularParameters.isEmpty());
  Map<String,List<String>> regularParameters=new HashMap<String,List<String>>();
  String regularParameter="regularParameter";
  List<String> parameters=new ArrayList<String>();
  regularParameters.put(regularParameter,parameters);
  spiAgentRequest=new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest,fileParameters,regularParameters));
  populateHttpServletRequest=spiAgentRequest.populateRequest(new MockHttpServletRequest());
  Assert.assertSame(UploadServletRequestImpl.class,populateHttpServletRequest.getClass());
  uploadServletRequestImpl=(UploadServletRequestImpl)populateHttpServletRequest;
  populatedFileParameters=uploadServletRequestImpl.getMultipartParameterMap();
  populatedRegularParameters=uploadServletRequestImpl.getRegularParameterMap();
  Assert.assertEquals(1,populatedFileParameters.size());
  Assert.assertSame(fileItems,populatedFileParameters.get(fileParameter));
  Assert.assertEquals(1,populatedRegularParameters.size());
  Assert.assertSame(parameters,populatedRegularParameters.get(regularParameter));
  spiAgentRequest=new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest,new HashMap<String,FileItem[]>(),regularParameters));
  populateHttpServletRequest=spiAgentRequest.populateRequest(new MockHttpServletRequest());
  Assert.assertSame(UploadServletRequestImpl.class,populateHttpServletRequest.getClass());
  uploadServletRequestImpl=(UploadServletRequestImpl)populateHttpServletRequest;
  populatedFileParameters=uploadServletRequestImpl.getMultipartParameterMap();
  populatedRegularParameters=uploadServletRequestImpl.getRegularParameterMap();
  Assert.assertTrue(populatedFileParameters.isEmpty());
  Assert.assertEquals(1,populatedRegularParameters.size());
  Assert.assertSame(parameters,populatedRegularParameters.get(regularParameter));
}

{
  ConcurrentMap<String,Object> attributes=LocalProcessLauncher.ProcessContext.getAttributes();
  attributes.put(SPI.SPI_INSTANCE_PUBLICATION_KEY,new MockSPI());
  MockHttpServletRequest mockHttpServletRequest=new BackwardCompatibleMockHttpServletRequest();
  MockHttpServletRequest originalMockHttpServletRequest=new BackwardCompatibleMockHttpServletRequest();
  final String servletContextName="servletContextName";
  Portlet portlet=new PortletImpl(){
    @Override public String getContextName(){
      return servletContextName;
    }
  }
;
  originalMockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_PORTLET,portlet);
  MockHttpSession originalHttpSession=new MockHttpSession();
  Map<String,Serializable> portletSessionAttributes=new HashMap<>();
  portletSessionAttributes.put("key1","value1");
  portletSessionAttributes.put("key2","value2");
  portletSessionAttributes.put("key3","value3");
  originalHttpSession.setAttribute(WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName),portletSessionAttributes);
  originalMockHttpServletRequest.setSession(originalHttpSession);
  SPIAgentRequest spiAgentRequest=new SPIAgentRequest(originalMockHttpServletRequest);
  mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_REQUEST,spiAgentRequest);
  MockHttpSession mockHttpSession=new MockHttpSession();
  mockHttpSession.setAttribute("key4","value4");
  mockHttpSession.setAttribute("key5","value5");
  mockHttpSession.setAttribute("key6","value6");
  SPIAgentRequest.populatePortletSessionAttributes(mockHttpServletRequest,mockHttpSession);
  Assert.assertSame(mockHttpSession,mockHttpServletRequest.getAttribute(WebKeys.PORTLET_SESSION));
  Assert.assertEquals("value1",mockHttpSession.getAttribute("key1"));
  Assert.assertEquals("value2",mockHttpSession.getAttribute("key2"));
  Assert.assertEquals("value3",mockHttpSession.getAttribute("key3"));
  Enumeration<String> enumeration=mockHttpSession.getAttributeNames();
  Assert.assertTrue(enumeration.hasMoreElements());
  Assert.assertNotNull(enumeration.nextElement());
  Assert.assertTrue(enumeration.hasMoreElements());
  Assert.assertNotNull(enumeration.nextElement());
  Assert.assertTrue(enumeration.hasMoreElements());
  Assert.assertNotNull(enumeration.nextElement());
  Assert.assertFalse(enumeration.hasMoreElements());
}

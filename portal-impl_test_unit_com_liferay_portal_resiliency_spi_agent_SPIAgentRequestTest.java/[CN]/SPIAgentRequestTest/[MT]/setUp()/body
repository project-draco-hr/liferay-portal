{
  _mockHttpServletRequest=new MockHttpServletRequest(){
    @Override public Enumeration<String> getHeaderNames(){
      Enumeration<String> headerNameEnumeration=super.getHeaderNames();
      List<String> headerNames=ListUtil.fromEnumeration(headerNameEnumeration);
      headerNames.add(_headerName3);
      return Collections.enumeration(headerNames);
    }
    @Override public Map<String,String[]> getParameterMap(){
      Map<String,String[]> parameterMap=new LinkedHashMap<String,String[]>(super.getParameterMap());
      parameterMap.put(_parameterName3,new String[0]);
      return parameterMap;
    }
  }
;
  _mockHttpServletRequest.setCookies(_cookie1,_cookie2);
  _mockHttpServletRequest.addHeader(_headerName1,_headerValue1);
  _mockHttpServletRequest.addHeader(_headerName1,_headerValue2);
  _mockHttpServletRequest.addHeader(_headerName2,_headerValue3);
  _mockHttpServletRequest.addHeader(_headerName2,_headerValue4);
  _mockHttpServletRequest.addParameter(_parameterName1,_parameterValue1);
  _mockHttpServletRequest.addParameter(_parameterName1,_parameterValue2);
  _mockHttpServletRequest.addParameter(_parameterName2,_parameterValue3);
  _mockHttpServletRequest.addParameter(_parameterName2,_parameterValue4);
  RequestAttributes.setRequestAttributes(_mockHttpServletRequest);
  _mockHttpServletRequest.setServerName(_serverName);
  _mockHttpServletRequest.setServerPort(_serverPort);
  HttpSession session=_mockHttpServletRequest.getSession();
  session.setAttribute(_sessionAttributeName1,_sessionAttributeValue1);
  session.setAttribute(_sessionAttributeName2,_sessionAttributeValue2);
  session.setAttribute(_sessionAttributeName3,_sessionAttributeValue3);
}

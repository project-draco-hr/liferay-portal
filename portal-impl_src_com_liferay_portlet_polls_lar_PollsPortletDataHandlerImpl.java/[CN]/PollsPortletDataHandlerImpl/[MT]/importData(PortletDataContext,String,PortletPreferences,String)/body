{
  try {
    XStream xStream=new XStream();
    Document doc=DocumentUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    List<Element> questionEls=root.element("questions").elements("question");
    Map<Long,Long> questionPKs=context.getNewPrimaryKeysMap(PollsQuestion.class);
    for (    Element el : questionEls) {
      String path=el.attributeValue("path");
      if (context.isPathNotProcessed(path)) {
        PollsQuestion question=(PollsQuestion)context.getZipEntryAsObject(path);
        importQuestion(context,questionPKs,question);
      }
    }
    List<Element> choiceEls=root.element("choices").elements("choice");
    Map<Long,Long> choicePKs=context.getNewPrimaryKeysMap(PollsChoice.class);
    for (    Element el : choiceEls) {
      String path=el.attributeValue("path");
      if (context.isPathNotProcessed(path)) {
        PollsChoice choice=(PollsChoice)context.getZipEntryAsObject(path);
        importChoice(context,questionPKs,choicePKs,choice);
      }
    }
    if (context.getBooleanParameter(_NAMESPACE,"votes")) {
      List<Element> voteEls=root.element("votes").elements("vote");
      for (      Element el : voteEls) {
        String path=el.attributeValue("path");
        if (context.isPathNotProcessed(path)) {
          PollsVote vote=(PollsVote)context.getZipEntryAsObject(path);
          importVote(context,questionPKs,choicePKs,vote);
        }
      }
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

{
  try {
    XStream xStream=new XStream();
    Document doc=PortalUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    Element el=root.element("poll-questions").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map questionPKs=CollectionFactory.getHashMap();
    List questions=(List)xStream.fromXML(tempDoc.asXML());
    Iterator itr=questions.iterator();
    while (itr.hasNext()) {
      PollsQuestion question=(PollsQuestion)itr.next();
      importQuestion(context,questionPKs,question);
    }
    el=root.element("poll-choices").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map choicePKs=CollectionFactory.getHashMap();
    List choices=(List)xStream.fromXML(tempDoc.asXML());
    itr=choices.iterator();
    while (itr.hasNext()) {
      PollsChoice choice=(PollsChoice)itr.next();
      importChoice(context,questionPKs,choicePKs,choice);
    }
    if (context.getBooleanParameter(_NAMESPACE,"votes")) {
      el=root.element("poll-votes").element("list");
      tempDoc=DocumentHelper.createDocument();
      tempDoc.content().add(el.createCopy());
      List votes=(List)xStream.fromXML(tempDoc.asXML());
      itr=votes.iterator();
      while (itr.hasNext()) {
        PollsVote vote=(PollsVote)itr.next();
        importVote(context,questionPKs,choicePKs,vote);
      }
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

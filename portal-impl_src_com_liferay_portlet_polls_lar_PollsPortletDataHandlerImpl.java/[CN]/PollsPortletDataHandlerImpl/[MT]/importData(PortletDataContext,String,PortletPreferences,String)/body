{
  try {
    XStream xStream=new XStream();
    Document doc=DocumentUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    Element el=root.element("poll-questions").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map<Long,Long> questionPKs=context.getNewPrimaryKeysMap(PollsQuestion.class);
    List<PollsQuestion> questions=(List<PollsQuestion>)xStream.fromXML(tempDoc.asXML());
    for (    PollsQuestion question : questions) {
      importQuestion(context,questionPKs,question);
    }
    el=root.element("poll-choices").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map<Long,Long> choicePKs=context.getNewPrimaryKeysMap(PollsChoice.class);
    List<PollsChoice> choices=(List<PollsChoice>)xStream.fromXML(tempDoc.asXML());
    for (    PollsChoice choice : choices) {
      importChoice(context,questionPKs,choicePKs,choice);
    }
    if (context.getBooleanParameter(_NAMESPACE,"votes")) {
      el=root.element("poll-votes").element("list");
      tempDoc=DocumentHelper.createDocument();
      tempDoc.content().add(el.createCopy());
      List<PollsVote> votes=(List<PollsVote>)xStream.fromXML(tempDoc.asXML());
      for (      PollsVote vote : votes) {
        importVote(context,questionPKs,choicePKs,vote);
      }
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

{
  long userId=context.getUserId(vote.getUserUuid());
  long questionId=MapUtil.getLong(questionPKs,vote.getQuestionId(),vote.getQuestionId());
  long choiceId=MapUtil.getLong(choicePKs,vote.getChoiceId(),vote.getChoiceId());
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setCreateDate(vote.getVoteDate());
  try {
    PollsQuestionUtil.findByPrimaryKey(questionId);
    PollsChoiceUtil.findByPrimaryKey(choiceId);
    PollsVoteLocalServiceUtil.addVote(userId,questionId,choiceId,serviceContext);
  }
 catch (  DuplicateVoteException dve) {
  }
catch (  NoSuchQuestionException nsqe) {
    _log.error("Could not find the question for vote " + vote.getVoteId());
  }
catch (  NoSuchChoiceException nsve) {
    _log.error("Could not find the choice for vote " + vote.getVoteId());
  }
}

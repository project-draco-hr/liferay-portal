{
  long questionId=MapUtil.getLong(questionPKs,choice.getQuestionId(),choice.getQuestionId());
  PollsChoice existingChoice=null;
  try {
    PollsQuestionUtil.findByPrimaryKey(questionId);
    if (context.getDataStrategy().equals(PortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {
      try {
        existingChoice=PollsChoiceFinderUtil.findByUuid_G(choice.getUuid(),context.getGroupId());
        existingChoice=PollsChoiceLocalServiceUtil.updateChoice(existingChoice.getChoiceId(),questionId,choice.getName(),choice.getDescription());
      }
 catch (      NoSuchChoiceException nsce) {
        existingChoice=PollsChoiceLocalServiceUtil.addChoice(choice.getUuid(),questionId,choice.getName(),choice.getDescription());
      }
    }
 else {
      existingChoice=PollsChoiceLocalServiceUtil.addChoice(questionId,choice.getName(),choice.getDescription());
    }
    choicePKs.put(choice.getChoiceId(),existingChoice.getChoiceId());
  }
 catch (  NoSuchQuestionException nsqe) {
    _log.error("Could not find the question for choice " + choice.getChoiceId());
  }
}

{
  Long questionId=(Long)questionPKs.get(new Long(choice.getQuestionId()));
  if (questionId == null) {
    questionId=new Long(choice.getQuestionId());
  }
  PollsChoice existingChoice=null;
  try {
    PollsQuestionUtil.findByPrimaryKey(questionId.longValue());
    if (mergeData) {
      existingChoice=PollsChoiceFinderUtil.findByUuid_G(choice.getUuid(),context.getGroupId());
      if (existingChoice == null) {
        existingChoice=PollsChoiceLocalServiceUtil.addChoice(choice.getUuid(),questionId.longValue(),choice.getName(),choice.getDescription());
      }
 else {
        existingChoice=PollsChoiceLocalServiceUtil.updateChoice(existingChoice.getChoiceId(),questionId.longValue(),choice.getName(),choice.getDescription());
      }
    }
 else {
      existingChoice=PollsChoiceLocalServiceUtil.addChoice(questionId.longValue(),choice.getName(),choice.getDescription());
    }
    choicePKs.put(choice.getPrimaryKeyObj(),existingChoice.getPrimaryKeyObj());
  }
 catch (  NoSuchQuestionException nsqe) {
    _log.error("Could not find the question for choice " + choice.getChoiceId());
  }
}

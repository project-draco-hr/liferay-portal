{
  TemplateHashModel portalTaglib=FreeMarkerTaglibFactoryUtil.createTaglibFactory(pageContext.getServletContext());
  contextObjects.put(PortletDisplayTemplateConstants.PORTAL_JSP_TAG_LIBS,portalTaglib);
  final Servlet servlet=(Servlet)pageContext.getPage();
  GenericServlet genericServlet=null;
  if (servlet instanceof GenericServlet) {
    genericServlet=(GenericServlet)servlet;
  }
 else {
    genericServlet=new GenericServlet(){
      @Override public void service(      ServletRequest servletRequest,      ServletResponse servletResponse) throws IOException, ServletException {
        servlet.service(servletRequest,servletResponse);
      }
    }
;
    genericServlet.init(pageContext.getServletConfig());
  }
  ServletContextHashModel servletContextHashModel=new ServletContextHashModel(genericServlet,ObjectWrapper.DEFAULT_WRAPPER);
  contextObjects.put(PortletDisplayTemplateConstants.APPLICATION,servletContextHashModel);
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  HttpServletResponse response=(HttpServletResponse)pageContext.getResponse();
  HttpRequestHashModel httpRequestHashModel=new HttpRequestHashModel(request,response,ObjectWrapper.DEFAULT_WRAPPER);
  contextObjects.put(PortletDisplayTemplateConstants.FTL_REQUEST,httpRequestHashModel);
}

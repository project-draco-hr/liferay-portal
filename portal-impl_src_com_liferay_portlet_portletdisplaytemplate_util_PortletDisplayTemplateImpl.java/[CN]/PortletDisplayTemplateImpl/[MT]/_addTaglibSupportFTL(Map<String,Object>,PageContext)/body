{
  final Servlet pageServlet=(Servlet)pageContext.getPage();
  GenericServlet genericServlet=null;
  if (pageServlet instanceof GenericServlet) {
    genericServlet=(GenericServlet)pageServlet;
  }
 else {
    genericServlet=new GenericServletWrapper(pageServlet);
    genericServlet.init(pageContext.getServletConfig());
  }
  ServletContextHashModel servletContextHashModel=new ServletContextHashModel(genericServlet,ObjectWrapper.DEFAULT_WRAPPER);
  contextObjects.put(PortletDisplayTemplateConstants.FREEMARKER_SERVLET_APPLICATION,servletContextHashModel);
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  HttpServletResponse response=(HttpServletResponse)pageContext.getResponse();
  HttpRequestHashModel requestHashModel=new HttpRequestHashModel(request,response,ObjectWrapper.DEFAULT_WRAPPER);
  contextObjects.put(PortletDisplayTemplateConstants.FREEMARKER_SERVLET_REQUEST,requestHashModel);
  TemplateHashModel taglibLiferayHash=FreeMarkerTaglibFactoryUtil.createTaglibFactory(pageContext.getServletContext());
  contextObjects.put(PortletDisplayTemplateConstants.TAGLIB_LIFERAY_HASH,taglibLiferayHash);
}

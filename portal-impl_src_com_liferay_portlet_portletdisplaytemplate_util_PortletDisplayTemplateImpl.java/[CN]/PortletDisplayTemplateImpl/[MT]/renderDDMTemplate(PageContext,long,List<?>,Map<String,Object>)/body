{
  contextObjects.put(PortletDisplayTemplateConstants.DDM_TEMPLATE_ID,ddmTemplateId);
  contextObjects.put(PortletDisplayTemplateConstants.ENTRIES,entries);
  if (entries.size() == 1) {
    contextObjects.put(PortletDisplayTemplateConstants.ENTRY,entries.get(0));
  }
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  contextObjects.put(PortletDisplayTemplateConstants.LOCALE,request.getLocale());
  contextObjects.put(PortletDisplayTemplateConstants.REQUEST,request);
  RenderRequest renderRequest=(RenderRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
  contextObjects.put(PortletDisplayTemplateConstants.RENDER_REQUEST,renderRequest);
  RenderResponse renderResponse=(RenderResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  contextObjects.put(PortletDisplayTemplateConstants.RENDER_RESPONSE,renderResponse);
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  contextObjects.put(PortletDisplayTemplateConstants.THEME_DISPLAY,themeDisplay);
  contextObjects.putAll(_getPortletPreferences(renderRequest));
  HttpServletResponse response=(HttpServletResponse)pageContext.getResponse();
  ServletContext servletContext=request.getSession().getServletContext();
  Writer writer=pageContext.getOut();
  VelocityTaglib velocityTaglib=new VelocityTaglib(servletContext,request,new PipingServletResponse(response,writer),pageContext);
  contextObjects.put(PortletDisplayTemplateConstants.TAGLIB_LIFERAY,velocityTaglib);
  DDMTemplate ddmTemplate=DDMTemplateLocalServiceUtil.getTemplate(ddmTemplateId);
  return _transformer.transform(themeDisplay,contextObjects,ddmTemplate.getScript(),ddmTemplate.getLanguage());
}

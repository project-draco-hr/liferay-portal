{
  JobDetail jobDetail=_permanentScheduler.getJobDetail(jobName,groupName);
  JobDataMap jobDataMap=jobDetail.getJobDataMap();
  Message message=getMessage(jobDataMap);
  if (!message.getBoolean(PERMANENT)) {
    return;
  }
  Trigger trigger=_permanentScheduler.getTrigger(jobName,groupName);
  JobState jobState=null;
  if (trigger != null) {
    jobState=new JobState(TriggerState.NORMAL,message.getInteger(EXCEPTIONS_MAX_SIZE));
    jobState.setTriggerTimeInfomation(SchedulerEngine.END_TIME,trigger.getEndTime());
    jobState.setTriggerTimeInfomation(SchedulerEngine.FINAL_FIRE_TIME,trigger.getFinalFireTime());
    jobState.setTriggerTimeInfomation(SchedulerEngine.NEXT_FIRE_TIME,null);
    jobState.setTriggerTimeInfomation(SchedulerEngine.PREVIOUS_FIRE_TIME,trigger.getPreviousFireTime());
    jobState.setTriggerTimeInfomation(SchedulerEngine.START_TIME,trigger.getStartTime());
    jobDataMap.put(JOB_STATE,jobState);
    _permanentScheduler.addJob(jobDetail,true);
  }
 else {
    jobState=(JobState)jobDataMap.get(JOB_STATE);
    if (jobState == null) {
      throw new Exception("Unable to get trigger details of job {jobName=" + jobName + ", groupName="+ groupName+ "}");
    }
  }
  SchedulerContext schedulerContext=_permanentScheduler.getContext();
  schedulerContext.put(jobDetail.getFullName(),jobState);
}

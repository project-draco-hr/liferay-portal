{
  MessageListener schedulerEventListener=null;
  try {
    if (classLoader != PortalClassLoaderUtil.getClassLoader()) {
      Class<?> clazz=classLoader.loadClass(messageListenerClass);
      Constructor<?> constructor=clazz.getConstructor();
      if (constructor == null) {
        throw new Exception("Unable to get public constructor of class " + messageListenerClass);
      }
      schedulerEventListener=(MessageListener)constructor.newInstance();
      schedulerEventListener=(MessageListener)ProxyUtil.newProxyInstance(classLoader,new Class<?>[]{MessageListener.class},new ClassLoaderBeanHandler(schedulerEventListener,classLoader));
    }
 else {
      schedulerEventListener=(MessageListener)Class.forName(messageListenerClass).newInstance();
    }
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to register message listener with name " + messageListenerClass,e);
  }
  return schedulerEventListener;
}

{
  jobName=fixMaxLength(jobName,JOB_NAME_MAX_LENGTH);
  groupName=fixMaxLength(getOriginalGroupName(groupName),GROUP_NAME_MAX_LENGTH);
  JobDetail jobDetail=scheduler.getJobDetail(jobName,groupName);
  if (jobDetail == null) {
    return;
  }
  if (scheduler == _memoryScheduler) {
    scheduler.unscheduleJob(jobName,groupName);
    return;
  }
  JobDataMap jobDataMap=jobDetail.getJobDataMap();
  JobState jobState=getJobState(jobDataMap);
  Trigger trigger=scheduler.getTrigger(jobName,groupName);
  jobState.setTriggerDate(END_TIME,new Date());
  jobState.setTriggerDate(FINAL_FIRE_TIME,trigger.getPreviousFireTime());
  jobState.setTriggerDate(NEXT_FIRE_TIME,null);
  jobState.setTriggerDate(PREVIOUS_FIRE_TIME,trigger.getPreviousFireTime());
  jobState.setTriggerDate(START_TIME,trigger.getStartTime());
  jobState.setTriggerState(TriggerState.UNSCHEDULED);
  jobState.clearExceptions();
  jobDataMap.put(JOB_STATE,JobStateSerializeUtil.serialize(jobState));
  scheduler.unscheduleJob(jobName,groupName);
  scheduler.addJob(jobDetail,true);
}

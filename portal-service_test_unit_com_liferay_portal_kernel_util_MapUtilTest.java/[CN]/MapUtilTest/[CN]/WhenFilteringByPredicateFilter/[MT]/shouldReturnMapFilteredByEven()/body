{
  Map<String,String> inputMap=new HashMap<>();
  inputMap.put("1","one");
  inputMap.put("2","two");
  inputMap.put("3","three");
  inputMap.put("4","four");
  inputMap.put("5","five");
  Map<String,String> outputMap=MapUtil.filter(inputMap,new PredicateFilter<Map.Entry<String,String>>(){
    @Override public boolean filter(    Map.Entry<String,String> entry){
      int value=GetterUtil.getInteger(entry.getKey());
      if ((value % 2) == 0) {
        return true;
      }
      return false;
    }
  }
);
  Assert.assertEquals(2,outputMap.size());
  Assert.assertEquals("two",outputMap.get("2"));
  Assert.assertEquals("four",outputMap.get("4"));
}

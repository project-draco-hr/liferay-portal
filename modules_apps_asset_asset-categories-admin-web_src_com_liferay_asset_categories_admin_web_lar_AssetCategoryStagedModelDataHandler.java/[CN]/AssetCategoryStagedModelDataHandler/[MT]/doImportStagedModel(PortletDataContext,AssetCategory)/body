{
  long userId=portletDataContext.getUserId(category.getUserUuid());
  Map<Long,Long> vocabularyIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetVocabulary.class);
  long vocabularyId=MapUtil.getLong(vocabularyIds,category.getVocabularyId(),category.getVocabularyId());
  Map<Long,Long> categoryIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetCategory.class);
  long parentCategoryId=MapUtil.getLong(categoryIds,category.getParentCategoryId(),category.getParentCategoryId());
  Element categoryElement=portletDataContext.getImportDataElement(category);
  List<Element> propertyElements=categoryElement.elements("property");
  String[] properties=new String[propertyElements.size()];
  for (int i=0; i < propertyElements.size(); i++) {
    Element propertyElement=propertyElements.get(i);
    String key=propertyElement.attributeValue("key");
    String value=propertyElement.attributeValue("value");
    properties[i]=key.concat(AssetCategoryConstants.PROPERTY_KEY_VALUE_SEPARATOR).concat(value);
  }
  ServiceContext serviceContext=createServiceContext(portletDataContext,category);
  AssetCategory importedCategory=null;
  AssetCategory existingCategory=fetchStagedModelByUuidAndGroupId(category.getUuid(),portletDataContext.getScopeGroupId());
  if (existingCategory == null) {
    String name=getCategoryName(null,portletDataContext.getScopeGroupId(),parentCategoryId,category.getName(),vocabularyId,2);
    serviceContext.setUuid(category.getUuid());
    importedCategory=_assetCategoryLocalService.addCategory(userId,portletDataContext.getScopeGroupId(),parentCategoryId,getCategoryTitleMap(portletDataContext.getScopeGroupId(),category,name),category.getDescriptionMap(),vocabularyId,properties,serviceContext);
  }
 else {
    String name=getCategoryName(category.getUuid(),portletDataContext.getScopeGroupId(),parentCategoryId,category.getName(),vocabularyId,2);
    importedCategory=_assetCategoryLocalService.updateCategory(userId,existingCategory.getCategoryId(),parentCategoryId,getCategoryTitleMap(portletDataContext.getScopeGroupId(),category,name),category.getDescriptionMap(),vocabularyId,properties,serviceContext);
  }
  categoryIds.put(category.getCategoryId(),importedCategory.getCategoryId());
  Map<String,String> categoryUuids=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(AssetCategory.class + ".uuid");
  categoryUuids.put(category.getUuid(),importedCategory.getUuid());
  portletDataContext.importPermissions(AssetCategory.class,category.getCategoryId(),importedCategory.getCategoryId());
}

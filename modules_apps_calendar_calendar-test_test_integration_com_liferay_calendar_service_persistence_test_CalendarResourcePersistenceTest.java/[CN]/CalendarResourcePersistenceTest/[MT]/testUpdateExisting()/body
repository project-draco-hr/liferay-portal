{
  long pk=RandomTestUtil.nextLong();
  CalendarResource newCalendarResource=_persistence.create(pk);
  newCalendarResource.setUuid(RandomTestUtil.randomString());
  newCalendarResource.setGroupId(RandomTestUtil.nextLong());
  newCalendarResource.setCompanyId(RandomTestUtil.nextLong());
  newCalendarResource.setUserId(RandomTestUtil.nextLong());
  newCalendarResource.setUserName(RandomTestUtil.randomString());
  newCalendarResource.setCreateDate(RandomTestUtil.nextDate());
  newCalendarResource.setModifiedDate(RandomTestUtil.nextDate());
  newCalendarResource.setResourceBlockId(RandomTestUtil.nextLong());
  newCalendarResource.setClassNameId(RandomTestUtil.nextLong());
  newCalendarResource.setClassPK(RandomTestUtil.nextLong());
  newCalendarResource.setClassUuid(RandomTestUtil.randomString());
  newCalendarResource.setCode(RandomTestUtil.randomString());
  newCalendarResource.setName(RandomTestUtil.randomString());
  newCalendarResource.setDescription(RandomTestUtil.randomString());
  newCalendarResource.setActive(RandomTestUtil.randomBoolean());
  _calendarResources.add(_persistence.update(newCalendarResource));
  CalendarResource existingCalendarResource=_persistence.findByPrimaryKey(newCalendarResource.getPrimaryKey());
  Assert.assertEquals(existingCalendarResource.getUuid(),newCalendarResource.getUuid());
  Assert.assertEquals(existingCalendarResource.getCalendarResourceId(),newCalendarResource.getCalendarResourceId());
  Assert.assertEquals(existingCalendarResource.getGroupId(),newCalendarResource.getGroupId());
  Assert.assertEquals(existingCalendarResource.getCompanyId(),newCalendarResource.getCompanyId());
  Assert.assertEquals(existingCalendarResource.getUserId(),newCalendarResource.getUserId());
  Assert.assertEquals(existingCalendarResource.getUserName(),newCalendarResource.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingCalendarResource.getCreateDate()),Time.getShortTimestamp(newCalendarResource.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingCalendarResource.getModifiedDate()),Time.getShortTimestamp(newCalendarResource.getModifiedDate()));
  Assert.assertEquals(existingCalendarResource.getResourceBlockId(),newCalendarResource.getResourceBlockId());
  Assert.assertEquals(existingCalendarResource.getClassNameId(),newCalendarResource.getClassNameId());
  Assert.assertEquals(existingCalendarResource.getClassPK(),newCalendarResource.getClassPK());
  Assert.assertEquals(existingCalendarResource.getClassUuid(),newCalendarResource.getClassUuid());
  Assert.assertEquals(existingCalendarResource.getCode(),newCalendarResource.getCode());
  Assert.assertEquals(existingCalendarResource.getName(),newCalendarResource.getName());
  Assert.assertEquals(existingCalendarResource.getDescription(),newCalendarResource.getDescription());
  Assert.assertEquals(existingCalendarResource.getActive(),newCalendarResource.getActive());
}

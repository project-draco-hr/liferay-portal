{
  _baseDir=baseDir;
  _seleniumBuilderFileUtil=new SeleniumBuilderFileUtil(_baseDir);
  DirectoryScanner directoryScanner=new DirectoryScanner();
  directoryScanner.setBasedir(_baseDir);
  directoryScanner.setIncludes(new String[]{"**\\*.action","**\\*.function","**\\*.macro","**\\*.path","**\\*.testcase","**\\*.testsuite"});
  directoryScanner.scan();
  String[] fileNames=directoryScanner.getIncludedFiles();
  for (  String fileName : fileNames) {
    addFile(fileName);
  }
  String[] seleniumFileNames={liferaySeleniumDir + "LiferaySelenium.java",liferaySeleniumDir + "SeleniumWrapper.java"};
  for (  String seleniumFileName : seleniumFileNames) {
    String content=_seleniumBuilderFileUtil.getNormalizedContent(seleniumFileName);
    Pattern pattern=Pattern.compile("public [a-z]* [A-Za-z0-9_]*\\(.*?\\)");
    Matcher matcher=pattern.matcher(content);
    while (matcher.find()) {
      String methodSignature=matcher.group();
      int x=methodSignature.indexOf(" ",7);
      int y=methodSignature.indexOf("(");
      String seleniumCommandName=methodSignature.substring(x + 1,y);
      int count=0;
      int z=methodSignature.indexOf(")");
      String parameters=methodSignature.substring(y + 1,z);
      if (!parameters.equals("")) {
        count=StringUtil.count(parameters,",") + 1;
      }
      _seleniumParameterCounts.put(seleniumCommandName,count);
    }
  }
  _seleniumParameterCounts.put("open",1);
}

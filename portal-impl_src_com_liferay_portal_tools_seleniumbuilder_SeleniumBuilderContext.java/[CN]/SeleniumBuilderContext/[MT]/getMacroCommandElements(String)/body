{
  Element currentRootElement=getMacroRootElement(macroName);
  List<Element> currentCommandElements=currentRootElement.elements("command");
  String parentMacroName=currentRootElement.attributeValue("extends");
  Set<Element> commandElementsSet=new HashSet<Element>();
  if (parentMacroName != null) {
    Element parentRootElement=getMacroRootElement(parentMacroName);
    List<Element> parentCommandElements=parentRootElement.elements("command");
    Set<String> commandNames=getMacroCommandNames(macroName);
    for (    String commandName : commandNames) {
      boolean macroElementFound=false;
      for (      Element currentCommandElement : currentCommandElements) {
        String currentCommandName=currentCommandElement.attributeValue("name");
        if (commandName.equals(currentCommandName)) {
          commandElementsSet.add(currentCommandElement);
          macroElementFound=true;
          break;
        }
      }
      if (!macroElementFound) {
        for (        Element parentCommandElement : parentCommandElements) {
          String parentCommandName=parentCommandElement.attributeValue("name");
          if (commandName.equals(parentCommandName)) {
            commandElementsSet.add(parentCommandElement);
            break;
          }
        }
      }
    }
  }
 else {
    commandElementsSet.addAll(currentCommandElements);
  }
  return commandElementsSet;
}

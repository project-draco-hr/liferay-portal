{
  Set<String> allowedProperties=_beanDefinitions.get(className);
  if (allowedProperties == null) {
    throw new SpringFactoryException("Undefined class " + className);
  }
  Object bean=InstanceFactory.newInstance(ClassLoaderUtil.getPortalClassLoader(),className);
  FactoryBean<Object> factoryBean=null;
  if (bean instanceof FactoryBean) {
    factoryBean=(FactoryBean<Object>)bean;
    bean=factoryBean.create();
  }
  if (properties != null) {
    for (    Map.Entry<String,Object> entry : properties.entrySet()) {
      String name=entry.getKey();
      if (!allowedProperties.contains(name)) {
        throw new SpringFactoryException("Undefined property " + name + " for class "+ className);
      }
      Object value=entry.getValue();
      BeanPropertiesUtil.setProperty(bean,name,value);
    }
  }
  if (factoryBean != null) {
    bean=factoryBean.postProcessing(bean);
  }
  return bean;
}

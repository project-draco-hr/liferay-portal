{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  long userId=themeDisplay.getUserId();
  Layout layout=themeDisplay.getLayout();
  LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  String cmd=ParamUtil.getString(request,Constants.CMD);
  String portletId=ParamUtil.getString(request,"p_p_id");
  boolean updateLayout=true;
  boolean deletePortlet=false;
  if (cmd.equals(Constants.ADD)) {
    portletId=layoutTypePortlet.addPortletId(userId,portletId);
    String columnId=ParamUtil.getString(request,"p_p_col_id");
    int columnPos=ParamUtil.getInteger(request,"p_p_col_pos");
    if (Validator.isNotNull(columnId)) {
      layoutTypePortlet.movePortletId(userId,portletId,columnId,columnPos);
    }
  }
 else   if (cmd.equals(Constants.DELETE)) {
    if (layoutTypePortlet.hasPortletId(portletId)) {
      deletePortlet=true;
      layoutTypePortlet.removePortletId(portletId);
    }
  }
 else   if (cmd.equals("drag")) {
    if (LayoutPermissionUtil.contains(permissionChecker,layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),ActionKeys.UPDATE)) {
      String height=ParamUtil.getString(request,"height");
      String width=ParamUtil.getString(request,"width");
      String top=ParamUtil.getString(request,"top");
      String left=ParamUtil.getString(request,"left");
      PortletPreferences prefs=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
      StringBuilder sb=new StringBuilder();
      sb.append("height=" + height + "\n");
      sb.append("width=" + width + "\n");
      sb.append("top=" + top + "\n");
      sb.append("left=" + left + "\n");
      prefs.setValue("portlet-freeform-styles",sb.toString());
      prefs.store();
    }
  }
 else   if (cmd.equals("minimize")) {
    boolean restore=ParamUtil.getBoolean(request,"p_p_restore");
    if (restore) {
      layoutTypePortlet.removeStateMinPortletId(portletId);
    }
 else {
      layoutTypePortlet.addStateMinPortletId(portletId);
    }
    updateLayout=false;
  }
 else   if (cmd.equals("move")) {
    String columnId=ParamUtil.getString(request,"p_p_col_id");
    int columnPos=ParamUtil.getInteger(request,"p_p_col_pos");
    layoutTypePortlet.movePortletId(userId,portletId,columnId,columnPos);
  }
 else   if (cmd.equals("template")) {
    String layoutTemplateId=ParamUtil.getString(request,"layoutTemplateId");
    layoutTypePortlet.setLayoutTemplateId(userId,layoutTemplateId);
  }
  if (updateLayout) {
    layoutTypePortlet.resetStates();
    LayoutServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getTypeSettings());
    if (deletePortlet) {
      String rootPortletId=PortletConstants.getRootPortletId(portletId);
      ResourceLocalServiceUtil.deleteResource(layout.getCompanyId(),rootPortletId,ResourceConstants.SCOPE_INDIVIDUAL,PortletPermissionUtil.getPrimaryKey(layout.getPlid(),portletId));
    }
  }
 else {
    LayoutClone layoutClone=LayoutCloneFactory.getInstance();
    if (layoutClone != null) {
      layoutClone.update(request,layout.getPlid(),layout.getTypeSettings());
    }
  }
  if (ParamUtil.getBoolean(request,"refresh")) {
    return mapping.findForward(ActionConstants.COMMON_REFERER);
  }
 else {
    if (cmd.equals(Constants.ADD) && (portletId != null)) {
      Action renderPortletAction=(Action)InstancePool.get(RenderPortletAction.class.getName());
      long companyId=PortalUtil.getCompanyId(request);
      Portlet portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
      DynamicServletRequest dynamicRequest=null;
      if (portlet.isPrivateRequestAttributes()) {
        String portletNamespace=PortalUtil.getPortletNamespace(portlet.getPortletId());
        dynamicRequest=new NamespaceServletRequest(request,portletNamespace,portletNamespace);
      }
 else {
        dynamicRequest=new DynamicServletRequest(request);
      }
      dynamicRequest.setParameter("p_p_id",portletId);
      renderPortletAction.execute(mapping,form,dynamicRequest,response);
    }
    return null;
  }
}

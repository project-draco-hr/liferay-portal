{
  _assetCategoriesArray=(List<AssetCategoryModel>[])new List<?>[_maxGroupsCount];
  _assetVocabulariesArray=(List<AssetVocabularyModel>[])new List<?>[_maxGroupsCount];
  _defaultAssetVocabulary=newAssetVocabulary(_globalGroupId,_defaultUserId,null,PropsValues.ASSET_VOCABULARY_DEFAULT);
  StringBundler sb=new StringBundler(4);
  for (int i=1; i <= _maxGroupsCount; i++) {
    List<AssetVocabularyModel> assetVocabularies=new ArrayList<AssetVocabularyModel>(_maxAssetVocabularyCount);
    List<AssetCategoryModel> assetCategories=new ArrayList<AssetCategoryModel>(_maxAssetVocabularyCount * _maxAssetCategoryCount);
    long lastRightCategoryId=2;
    for (int j=0; j < _maxAssetVocabularyCount; j++) {
      sb.setIndex(0);
      sb.append("TestVocabulary_");
      sb.append(i);
      sb.append(StringPool.UNDERLINE);
      sb.append(j);
      AssetVocabularyModel assetVocabulary=newAssetVocabulary(i,_sampleUserId,_SAMPLE_USER_NAME,sb.toString());
      assetVocabularies.add(assetVocabulary);
      for (int k=0; k < _maxAssetCategoryCount; k++) {
        sb.setIndex(0);
        sb.append("TestCategory_");
        sb.append(assetVocabulary.getVocabularyId());
        sb.append(StringPool.UNDERLINE);
        sb.append(k);
        AssetCategoryModel assetCategory=newAssetCategory(i,lastRightCategoryId,sb.toString(),assetVocabulary.getVocabularyId());
        lastRightCategoryId+=2;
        assetCategories.add(assetCategory);
      }
    }
    _assetCategoriesArray[i - 1]=assetCategories;
    _assetVocabulariesArray[i - 1]=assetVocabularies;
  }
}

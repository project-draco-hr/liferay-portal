{
  if (currentIndex == 1) {
    return newPortletPreferencesModel(plid,portletId,PortletConstants.DEFAULT_PREFERENCES);
  }
  SimpleCounter counter=_assetPublisherRuleCounter.get(groupId);
  if (counter == null) {
    counter=new SimpleCounter(0);
    _assetPublisherRuleCounter.put(groupId,counter);
  }
  int index=(int)counter.get();
  String[] values=null;
  String type=null;
  if (_assetPublisherCategoryFilter) {
    List<AssetCategoryModel> assetCategoryModels=_assetCategoryModelsArray[(int)groupId - 1];
    if ((assetCategoryModels == null) || assetCategoryModels.isEmpty()) {
      return newPortletPreferencesModel(plid,portletId,PortletConstants.DEFAULT_PREFERENCES);
    }
    values=getCategoryFilterValues(assetCategoryModels,index);
    type="assetCategories";
  }
 else {
    List<AssetTagModel> assetTagModels=_assetTagModelsArray[(int)groupId - 1];
    if ((assetTagModels == null) || assetTagModels.isEmpty()) {
      return newPortletPreferencesModel(plid,portletId,PortletConstants.DEFAULT_PREFERENCES);
    }
    values=getTagFilterValues(assetTagModels,index);
    type="assetTags";
  }
  javax.portlet.PortletPreferences jxPortletPreferences=new com.liferay.portlet.PortletPreferencesImpl();
  jxPortletPreferences.setValue("queryAndOperator0","false");
  jxPortletPreferences.setValue("queryContains0","true");
  jxPortletPreferences.setValue("queryName0",type);
  jxPortletPreferences.setValues("queryValues0",new String[]{values[0],values[1],values[2]});
  jxPortletPreferences.setValue("queryAndOperator1","false");
  jxPortletPreferences.setValue("queryContains1","false");
  jxPortletPreferences.setValue("queryName1",type);
  jxPortletPreferences.setValue("queryValues1",values[3]);
  return newPortletPreferencesModel(plid,portletId,_portletPreferencesFactory.toXML(jxPortletPreferences));
}

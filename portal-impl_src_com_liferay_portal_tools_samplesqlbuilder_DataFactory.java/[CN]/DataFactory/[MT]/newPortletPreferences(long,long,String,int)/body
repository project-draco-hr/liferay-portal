{
  List<AssetCategory> assetCategories=_assetCategoriesArray[(int)groupId - 1];
  boolean assetPublisherFilterEnabled=false;
  if ((_maxAssetPublisherPageCount * _maxAssetPublisherFilterRuleCount) > 0) {
    assetPublisherFilterEnabled=true;
  }
  if (!assetPublisherFilterEnabled || (currentIndex == 1) || (assetCategories == null)|| assetCategories.isEmpty()) {
    return newPortletPreferences(plid,portletId,PortletConstants.DEFAULT_PREFERENCES);
  }
  SimpleCounter counter=_assetPublisherRuleCounter.get(groupId);
  if (counter == null) {
    counter=new SimpleCounter(0);
    _assetPublisherRuleCounter.put(groupId,counter);
  }
  javax.portlet.PortletPreferences jxPreferences=new com.liferay.portlet.PortletPreferencesImpl();
  for (int i=0; i < _maxAssetPublisherFilterRuleCount; i++) {
    int index=(int)counter.get() % assetCategories.size();
    AssetCategory assetCategory=assetCategories.get(index);
    jxPreferences.setValue("queryAndOperator" + i,"false");
    jxPreferences.setValue("queryContains" + i,"false");
    jxPreferences.setValue("queryName" + i,"assetCategories");
    jxPreferences.setValue("queryValues" + i,String.valueOf(assetCategory.getCategoryId()));
  }
  return newPortletPreferences(plid,portletId,PortletPreferencesFactoryUtil.toXML(jxPreferences));
}

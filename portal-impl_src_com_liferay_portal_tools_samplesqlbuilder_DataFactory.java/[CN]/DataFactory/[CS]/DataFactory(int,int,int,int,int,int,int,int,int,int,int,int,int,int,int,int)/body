{
  _maxAssetCategoryCount=maxAssetCategoryCount;
  _maxAssetEntryToAssetCategoryCount=maxAssetEntryToAssetCategoryCount;
  _maxAssetEntryToAssetTagCount=maxAssetEntryToAssetTagCount;
  _maxAssetPublisherFilterRuleCount=maxAssetPublisherFilterRuleCount;
  _maxAssetPublisherPageCount=maxAssetPublisherPageCount;
  _maxAssetTagCount=maxAssetTagCount;
  _maxAssetVocabularyCount=maxAssetVocabularyCount;
  _maxBlogsEntryCount=maxBlogsEntryCount;
  _maxDDLCustomFieldCount=maxDDLCustomFieldCount;
  _maxGroupsCount=maxGroupsCount;
  _maxJournalArticleCount=maxJournalArticleCount;
  _maxMBCategoryCount=maxMBCategoryCount;
  _maxMBThreadCount=maxMBThreadCount;
  _maxMBMessageCount=maxMBMessageCount;
  _maxUserToGroupCount=maxUserToGroupCount;
  _counter=new SimpleCounter(_maxGroupsCount + 1);
  _timeCounter=new SimpleCounter();
  _futureDateCounter=new SimpleCounter();
  _resourcePermissionCounter=new SimpleCounter();
  _socialActivityCounter=new SimpleCounter();
  _userScreenNameCounter=new SimpleCounter();
  _classNameModels=new ArrayList<ClassNameModel>();
  List<String> models=ModelHintsUtil.getModels();
  for (  String model : models) {
    ClassNameModel classNameModel=new ClassNameModelImpl();
    long classNameId=_counter.get();
    classNameModel.setClassNameId(classNameId);
    classNameModel.setValue(model);
    _classNameModels.add(classNameModel);
    _classNameModelsMap.put(model,classNameId);
  }
  _accountId=_counter.get();
  _companyId=_counter.get();
  _defaultUserId=_counter.get();
  _globalGroupId=_counter.get();
  _guestGroupId=_counter.get();
  _sampleUserId=_counter.get();
  _dlDDMStructureContent=StringUtil.read(_getResourceInputStream("ddm_structure_basic_document.xml"));
  initAssetCategoryModels();
  initAssetTagModels();
  initCompanyModel();
  initDLFileEntryTypeModel();
  initGroupModels();
  initJournalArticleContent(maxJournalArticleSize);
  initRoleModels();
  initUserNames();
  initUserModels();
  initVirtualHostModel();
}

{
  Object[][] resourceColumns1={{"companyId",new Integer(Types.BIGINT)},{"name",new Integer(Types.VARCHAR)},{"scope",new Integer(Types.VARCHAR)}};
  Object[][] resourceColumns2=(Object[][])ResourceImpl.TABLE_COLUMNS.clone();
  Object[][] resourceColumns=new Object[resourceColumns1.length + resourceColumns2.length][];
  ArrayUtil.combine(resourceColumns1,resourceColumns2,resourceColumns);
  UpgradeColumn companyIdColumn=new TempUpgradeColumnImpl("companyId");
  UpgradeColumn nameColumn=new TempUpgradeColumnImpl("name");
  UpgradeColumn scopeColumn=new TempUpgradeColumnImpl("scope");
  ResourceCodeIdUpgradeColumnImpl codeIdColumn=new ResourceCodeIdUpgradeColumnImpl(companyIdColumn,nameColumn,scopeColumn);
  UpgradeColumn primKeyColumn=new ResourcePrimKeyUpgradeColumnImpl(nameColumn,codeIdColumn,AvailableMappersUtil.getGroupIdMapper(),getClassPKContainers());
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(ResourceImpl.TABLE_NAME,resourceColumns,companyIdColumn,nameColumn,scopeColumn,codeIdColumn,primKeyColumn);
  String createSQL=ResourceImpl.TABLE_SQL_CREATE;
  createSQL=createSQL.substring(0,createSQL.length() - 1) + ",companyId VARCHAR(75) null, name VARCHAR(75) null, " + "scope VARCHAR(75) null)";
  upgradeTable.setCreateSQL(createSQL);
  upgradeTable.updateTable();
  runSQL(_UPGRADE_SCHEMA);
}

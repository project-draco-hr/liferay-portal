{
  Map classPKContainers=CollectionFactory.getHashMap();
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BlogsCategory.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBlogsCategoryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BlogsEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBlogsEntryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BookmarksEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBookmarksEntryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BookmarksFolder.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBookmarksFolderIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(CalEvent.class.getName())),new ClassPKContainer(AvailableMappersUtil.getCalEventIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Group.class.getName())),new ClassPKContainer(AvailableMappersUtil.getGroupIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Layout.class.getName())),new ClassPKContainer(AvailableMappersUtil.getLayoutPlidMapper(),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Organization.class.getName())),new ClassPKContainer(AvailableMappersUtil.getOrganizationIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Role.class.getName())),new ClassPKContainer(AvailableMappersUtil.getRoleIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(UserGroup.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserGroupIdMapper(),true));
  return classPKContainers;
}

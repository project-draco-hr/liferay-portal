{
  Map classPKContainers=CollectionFactory.getHashMap();
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BlogsCategory.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBlogsCategoryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BlogsEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBlogsEntryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BookmarksEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBookmarksEntryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BookmarksFolder.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBookmarksFolderIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(CalEvent.class.getName())),new ClassPKContainer(AvailableMappersUtil.getCalEventIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(DLFileEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getDLFileEntryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(DLFileShortcut.class.getName())),new ClassPKContainer(AvailableMappersUtil.getDLFileShortcutIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(DLFolder.class.getName())),new ClassPKContainer(AvailableMappersUtil.getDLFolderIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Group.class.getName())),new ClassPKContainer(AvailableMappersUtil.getGroupIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(IGFolder.class.getName())),new ClassPKContainer(AvailableMappersUtil.getIGFolderIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(IGImage.class.getName())),new ClassPKContainer(AvailableMappersUtil.getIGImageIdMapper(),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Layout.class.getName())),new ClassPKContainer(AvailableMappersUtil.getLayoutPlidMapper(),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(MBCategory.class.getName())),new ClassPKContainer(AvailableMappersUtil.getMBCategoryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(MBMessage.class.getName())),new ClassPKContainer(new MBMessageIdMapper(AvailableMappersUtil.getMBMessageIdMapper()),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Organization.class.getName())),new ClassPKContainer(AvailableMappersUtil.getOrganizationIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(PollsQuestion.class.getName())),new ClassPKContainer(AvailableMappersUtil.getPollsQuestionIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Role.class.getName())),new ClassPKContainer(AvailableMappersUtil.getRoleIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(ShoppingCategory.class.getName())),new ClassPKContainer(AvailableMappersUtil.getShoppingCategoryIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(ShoppingItem.class.getName())),new ClassPKContainer(AvailableMappersUtil.getShoppingItemIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(UserGroup.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserGroupIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(WikiNode.class.getName())),new ClassPKContainer(AvailableMappersUtil.getWikiNodeIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(WikiPage.class.getName())),new ClassPKContainer(AvailableMappersUtil.getWikiPageIdMapper(),false));
  return classPKContainers;
}

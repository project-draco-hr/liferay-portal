{
  long organizationId=ParamUtil.getLong(actionRequest,"organizationId");
  long parentOrganizationId=ParamUtil.getLong(actionRequest,"parentOrganizationId",OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID);
  String name=ParamUtil.getString(actionRequest,"name");
  boolean recursable=ParamUtil.getBoolean(actionRequest,"recursable");
  int statusId=ParamUtil.getInteger(actionRequest,"statusId");
  String type=ParamUtil.getString(actionRequest,"type");
  long regionId=ParamUtil.getLong(actionRequest,"regionId");
  long countryId=ParamUtil.getLong(actionRequest,"countryId");
  String comments=ParamUtil.getString(actionRequest,"comments");
  String websitePostfixes=ParamUtil.getString(actionRequest,"websitePostfixes");
  long classPK=organizationId;
  String className=Organization.class.getName();
  Organization organization=null;
  if (organizationId <= 0) {
    organization=OrganizationServiceUtil.addOrganization(parentOrganizationId,name,type,recursable,regionId,countryId,statusId,comments);
    classPK=organization.getOrganizationId();
  }
 else {
    organization=OrganizationServiceUtil.updateOrganization(organizationId,parentOrganizationId,name,type,recursable,regionId,countryId,statusId,comments);
  }
  if (Validator.isNotNull(websitePostfixes)) {
    String[] websitePostfixesArray=websitePostfixes.split(",");
    EnterpriseAdminUtil.updateWebsites(actionRequest,websitePostfixesArray,classPK,className);
  }
  return organization;
}

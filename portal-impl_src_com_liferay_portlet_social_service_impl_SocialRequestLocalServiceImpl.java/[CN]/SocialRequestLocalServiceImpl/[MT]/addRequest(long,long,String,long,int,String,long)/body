{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=PortalUtil.getClassNameId(className);
  User receiverUser=userPersistence.findByPrimaryKey(receiverUserId);
  long now=System.currentTimeMillis();
  if ((userId == receiverUserId) || (user.isDefaultUser()) || (receiverUser.isDefaultUser())|| (user.getCompanyId() != receiverUser.getCompanyId())) {
    throw new RequestUserIdException();
  }
  try {
    socialRequestPersistence.removeByU_C_C_T_R(userId,classNameId,classPK,type,receiverUserId);
  }
 catch (  NoSuchRequestException nsre) {
  }
  long requestId=counterLocalService.increment(SocialRequest.class.getName());
  SocialRequest request=socialRequestPersistence.create(requestId);
  request.setGroupId(groupId);
  request.setCompanyId(user.getCompanyId());
  request.setUserId(user.getUserId());
  request.setCreateDate(now);
  request.setModifiedDate(now);
  request.setClassNameId(classNameId);
  request.setClassPK(classPK);
  request.setType(type);
  request.setExtraData(extraData);
  request.setReceiverUserId(receiverUserId);
  request.setStatus(SocialRequestConstants.STATUS_PENDING);
  socialRequestPersistence.update(request,false);
  return request;
}

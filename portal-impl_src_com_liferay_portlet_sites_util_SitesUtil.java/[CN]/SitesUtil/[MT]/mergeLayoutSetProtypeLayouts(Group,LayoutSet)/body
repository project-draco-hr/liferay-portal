{
  if (!layoutSet.isLayoutSetPrototypeLinkActive() || group.isLayoutPrototype() || group.isLayoutSetPrototype()) {
    return;
  }
  UnicodeProperties settingsProperties=layoutSet.getSettingsProperties();
  long lastMergeTime=GetterUtil.getLong(settingsProperties.getProperty("last-merge-time"));
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypeByUuid(layoutSet.getLayoutSetPrototypeUuid());
  Date modifiedDate=layoutSetPrototype.getModifiedDate();
  if (lastMergeTime >= modifiedDate.getTime()) {
    return;
  }
  LayoutSet layoutSetPrototypeLayoutSet=layoutSetPrototype.getLayoutSet();
  UnicodeProperties layoutSetPrototypeSettingsProperties=layoutSetPrototypeLayoutSet.getSettingsProperties();
  int mergeFailCount=GetterUtil.getInteger(layoutSetPrototypeSettingsProperties.getProperty("merge-fail-count"));
  if (mergeFailCount > PropsValues.LAYOUT_SET_PROTOTYPE_MERGE_FAIL_THRESHOLD) {
    if (_log.isWarnEnabled()) {
      StringBundler sb=new StringBundler();
      sb.append("Merge not performed because the fail threshold was");
      sb.append("reached for layoutSetPrototypeId=");
      sb.append(layoutSetPrototype.getLayoutSetPrototypeId());
      sb.append(" and layoutId = ");
      sb.append(layoutSetPrototypeLayoutSet.getLayoutSetId());
      sb.append(". Update the count in the database to try again.");
      _log.warn(sb.toString());
    }
    return;
  }
  String owner=PortalUUIDUtil.generate();
  try {
    Lock lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),owner,false);
    if (!owner.equals(lock.getOwner())) {
      Date createDate=lock.getCreateDate();
      if ((System.currentTimeMillis() - createDate.getTime()) >= PropsValues.LAYOUT_SET_PROTOTYPE_MERGE_LOCK_MAX_TIME) {
        lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),lock.getOwner(),owner,false);
        if (!owner.equals(lock.getOwner())) {
          return;
        }
      }
 else {
        return;
      }
    }
  }
 catch (  Exception e) {
    return;
  }
  try {
    Map<String,String[]> parameterMap=null;
    boolean importData=true;
    if (lastMergeTime > 0) {
      importData=false;
    }
    parameterMap=getLayoutSetPrototypesParameters(importData);
    importLayoutSetPrototype(layoutSetPrototype,layoutSet.getGroupId(),layoutSet.isPrivateLayout(),parameterMap,importData);
    layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(layoutSet.getGroupId(),layoutSet.isPrivateLayout());
    settingsProperties=layoutSet.getSettingsProperties();
    settingsProperties.setProperty("last-merge-time",String.valueOf(System.currentTimeMillis()));
    LayoutSetLocalServiceUtil.updateLayoutSet(layoutSet,false);
  }
 catch (  Exception e) {
    _log.error(e,e);
    layoutSetPrototypeSettingsProperties.setProperty("merge-fail-count",String.valueOf(++mergeFailCount));
    LayoutSetUtil.updateImpl(layoutSetPrototypeLayoutSet,false);
  }
 finally {
    LockLocalServiceUtil.unlock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),owner,false);
  }
}

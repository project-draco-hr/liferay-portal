{
  int initialNotInTrashCount=getNotInTrashCount();
  int initialTrashEntriesCount=getTrashEntriesCount();
  FileEntry fileEntry=addFileEntry(false,"Test Basic.txt");
  DLFileShortcut dlFileShortcut=addDLFileShortcut(fileEntry);
  Assert.assertEquals(initialNotInTrashCount + 2,getNotInTrashCount());
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount());
  DLAppServiceUtil.moveFileEntryToTrash(fileEntry.getFileEntryId());
  Assert.assertEquals(initialNotInTrashCount,getNotInTrashCount());
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount());
  DLAppServiceUtil.restoreFileEntryFromTrash(fileEntry.getFileEntryId());
  Assert.assertEquals(initialNotInTrashCount + 2,getNotInTrashCount());
  DLAppServiceUtil.moveFileShortcutToTrash(dlFileShortcut.getFileShortcutId());
  Assert.assertEquals(initialNotInTrashCount + 1,getNotInTrashCount());
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount());
  if (delete) {
    TrashEntryServiceUtil.deleteEntries(parentFolder.getGroupId());
    Assert.assertEquals(initialNotInTrashCount + 1,getNotInTrashCount());
    Assert.assertNull(fetchAssetEntry(DLFileShortcut.class.getName(),dlFileShortcut.getFileShortcutId()));
  }
 else {
    DLAppServiceUtil.restoreFileShortcutFromTrash(dlFileShortcut.getFileShortcutId());
    Assert.assertEquals(initialNotInTrashCount + 2,getNotInTrashCount());
  }
  Assert.assertEquals(0,getTrashEntriesCount());
}

{
  InternetAddress[] toAddresses=(InternetAddress[])msg.getRecipients(Message.RecipientType.TO);
  InternetAddress[] ccAddresses=(InternetAddress[])msg.getRecipients(Message.RecipientType.CC);
  InternetAddress[] bccAddresses=(InternetAddress[])msg.getRecipients(Message.RecipientType.BCC);
  List addresses=new ArrayList();
  if (toAddresses != null) {
    for (int i=0; i < toAddresses.length; i++) {
      addresses.add(toAddresses[i]);
    }
  }
  if (ccAddresses != null) {
    for (int i=0; i < ccAddresses.length; i++) {
      addresses.add(ccAddresses[i]);
    }
  }
  if (bccAddresses != null) {
    for (int i=0; i < bccAddresses.length; i++) {
      addresses.add(bccAddresses[i]);
    }
  }
  for (int i=0; i < addresses.size(); i++) {
    InternetAddress toAddress=(InternetAddress)addresses.get(i);
    Message newMsg=MailUtil.getNewMessage();
    newMsg.setFrom(msg.getFrom()[0]);
    newMsg.setRecipient(Message.RecipientType.TO,toAddress);
    newMsg.setSubject(msg.getSubject());
    newMsg.setSentDate(msg.getSentDate());
    MailReceipt receipt=MailReceiptServiceUtil.addReceipt(toAddress.getPersonal(),toAddress.getAddress(),msg.getSubject(),msg.getSentDate());
    String newBody=body + _getUpdateReceiptURL(company,mainPath,receipt);
    BodyPart newBodyPart=new MimeBodyPart();
    if (htmlFormat) {
      newBodyPart.setContent(newBody,Constants.TEXT_HTML);
    }
 else {
      newBodyPart.setText(newBody);
    }
    Multipart newMultipart=new MimeMultipart();
    Multipart multipart=(Multipart)msg.getContent();
    for (int j=0; j < multipart.getCount(); j++) {
      newMultipart.addBodyPart(multipart.getBodyPart(j));
    }
    newMultipart.removeBodyPart(0);
    newMultipart.addBodyPart(newBodyPart,0);
    newMsg.setContent(newMultipart);
    Transport.send(newMsg);
  }
}

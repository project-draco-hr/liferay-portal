{
  ExtendedObjectClassDefinition extendedObjectClassDefinition=mock(ExtendedObjectClassDefinition.class);
  ExtendedAttributeDefinition extendedAttributeDefinition=mock(ExtendedAttributeDefinition.class);
  whenGetAttributeDefinitions(extendedObjectClassDefinition,new ExtendedAttributeDefinition[]{extendedAttributeDefinition},ExtendedObjectClassDefinition.OPTIONAL);
  whenGetCardinality(extendedAttributeDefinition,0);
  whenGetID(extendedAttributeDefinition,"Text");
  whenGetType(extendedAttributeDefinition,ExtendedAttributeDefinition.STRING);
  ConfigurationModel configurationModel=new ConfigurationModel(extendedObjectClassDefinition,null,null,null,false);
  ConfigurationModelToDDMFormConverter configurationModelToDDMFormConverter=new ConfigurationModelToDDMFormConverter(configurationModel,_enLocale,new EmptyResourceBundle());
  DDMForm ddmForm=configurationModelToDDMFormConverter.getDDMForm();
  Map<String,DDMFormField> ddmFormFieldsMap=ddmForm.getDDMFormFieldsMap(false);
  DDMFormField ddmFormField=ddmFormFieldsMap.get("Text");
  Assert.assertNotNull(ddmFormField);
  Assert.assertEquals(DDMFormFieldType.TEXT,ddmFormField.getType());
  Assert.assertEquals("string",ddmFormField.getDataType());
  Assert.assertFalse(ddmFormField.isRepeatable());
  Assert.assertFalse(ddmFormField.isRequired());
}

{
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_S_G_U_P);
    if (ArrayUtil.isEmpty(parentCategoryIds)) {
      sql=StringUtil.replace(sql,"(MBCategory.parentCategoryId = ?) AND",StringPool.BLANK);
    }
 else {
      sql=StringUtil.replace(sql,"MBCategory.parentCategoryId = ?","MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds," OR MBCategory.parentCategoryId = "));
    }
    sql=updateSQL(sql,queryDefinition);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,MBCategory.class.getName(),"MBCategory.categoryId",groupId);
    }
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(PortalUtil.getClassNameId(MBCategory.class.getName()));
    qPos.add(groupId);
    qPos.add(userId);
    if (queryDefinition.getStatus() != WorkflowConstants.STATUS_ANY) {
      qPos.add(queryDefinition.getStatus());
    }
    int count=0;
    Iterator<Long> itr=q.iterate();
    if (itr.hasNext()) {
      Long l=itr.next();
      if (l != null) {
        count=l.intValue();
      }
    }
    try {
      Group group=GroupLocalServiceUtil.getGroup(groupId);
      SubscriptionLocalServiceUtil.getSubscription(group.getCompanyId(),userId,MBCategory.class.getName(),groupId);
      count++;
    }
 catch (    NoSuchSubscriptionException nsse) {
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  boolean deletePortletData=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.DELETE_PORTLET_DATA);
  boolean importPortletData=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PORTLET_DATA);
  boolean importPortletSetup=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PORTLET_SETUP);
  boolean importUserPreferences=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PORTLET_USER_PREFERENCES);
  String userIdStrategy=MapUtil.getString(parameterMap,PortletDataHandlerKeys.USER_ID_STRATEGY);
  StopWatch stopWatch=null;
  if (_log.isInfoEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
  }
  Layout layout=LayoutLocalServiceUtil.getLayout(plid);
  long companyId=layout.getCompanyId();
  User user=userPersistence.findByPrimaryKey(userId);
  UserIdStrategy strategy=null;
  if (UserIdStrategy.ALWAYS_CURRENT_USER_ID.equals(userIdStrategy)) {
    strategy=new AlwaysCurrentUserIdStrategy(user);
  }
 else   if (UserIdStrategy.CURRENT_USER_ID.equals(userIdStrategy)) {
    strategy=new CurrentUserIdStrategy(user);
  }
  ZipReader zipReader=new ZipReader(is);
  PortletDataContext context=new PortletDataContextImpl(companyId,layout.getGroupId(),parameterMap,CollectionFactory.getHashSet(),strategy,zipReader);
  context.setPlid(plid);
  Element root=null;
  try {
    String xml=zipReader.getEntryAsString("portlet.xml");
    SAXReader reader=new SAXReader();
    Document doc=reader.read(new StringReader(xml));
    root=doc.getRootElement();
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
  Element header=(Element)root.element("header");
  int buildNumber=ReleaseInfo.getBuildNumber();
  int importBuildNumber=GetterUtil.getInteger(header.attributeValue("build-number"));
  if (buildNumber != importBuildNumber) {
    throw new LayoutImportException("LAR build number " + importBuildNumber + " does not match "+ "portal build number "+ buildNumber);
  }
  String type=header.attributeValue("type");
  if (!type.equals("portlet")) {
    throw new LayoutImportException("Invalid type of LAR file (" + type + ")");
  }
  readComments(context,root);
  readRatings(context,root);
  readTags(context,root);
  if (_log.isDebugEnabled()) {
    _log.debug("Deleting portlet data");
  }
  if (deletePortletData) {
    deletePortletData(context,layout,root);
  }
  importPortletPreferences(layout.getCompanyId(),plid,root,importPortletSetup,importUserPreferences);
  if (_log.isDebugEnabled()) {
    _log.debug("Importing portlet data");
  }
  if (importPortletData) {
    importPortletData(context,layout,root);
  }
  if (_log.isInfoEnabled()) {
    _log.info("Importing portlet data takes " + stopWatch.getTime() + " ms");
  }
}

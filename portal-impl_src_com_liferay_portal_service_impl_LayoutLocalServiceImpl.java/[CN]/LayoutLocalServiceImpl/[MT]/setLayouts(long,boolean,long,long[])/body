{
  if (layoutIds == null) {
    return;
  }
  if (parentLayoutId == LayoutImpl.DEFAULT_PARENT_LAYOUT_ID) {
    if (layoutIds.length < 1) {
      throw new RequiredLayoutException(RequiredLayoutException.AT_LEAST_ONE);
    }
    Layout layout=LayoutUtil.findByG_P_L(groupId,privateLayout,layoutIds[0]);
    if (!layout.getType().equals(LayoutImpl.TYPE_PORTLET)) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_TYPE);
    }
    if (layout.isHidden()) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_HIDDEN);
    }
  }
  Set layoutIdsSet=new LinkedHashSet();
  for (int i=0; i < layoutIds.length; i++) {
    layoutIdsSet.add(new Long(layoutIds[i]));
  }
  Set newLayoutIdsSet=CollectionFactory.getHashSet();
  Iterator itr=LayoutUtil.findByG_P_P(groupId,privateLayout,parentLayoutId).iterator();
  while (itr.hasNext()) {
    Layout layout=(Layout)itr.next();
    Long layoutIdObj=new Long(layout.getLayoutId());
    if (!layoutIdsSet.contains(layoutIdObj)) {
      deleteLayout(layout,true);
    }
 else {
      newLayoutIdsSet.add(layoutIdObj);
    }
  }
  int priority=0;
  itr=layoutIdsSet.iterator();
  while (itr.hasNext()) {
    Long layoutIdObj=(Long)itr.next();
    Layout layout=LayoutUtil.findByG_P_L(groupId,privateLayout,layoutIdObj.longValue());
    layout.setPriority(priority++);
    LayoutUtil.update(layout);
  }
  LayoutSetLocalServiceUtil.updatePageCount(groupId,privateLayout);
}

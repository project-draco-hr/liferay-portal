{
  parentLayoutId=layoutLocalServiceHelper.getParentLayoutId(groupId,privateLayout,parentLayoutId);
  String name=nameMap.get(LocaleUtil.getSiteDefault());
  friendlyURLMap=layoutLocalServiceHelper.getFriendlyURLMap(groupId,privateLayout,layoutId,name,friendlyURLMap);
  String friendlyURL=friendlyURLMap.get(LocaleUtil.getSiteDefault());
  layoutLocalServiceHelper.validate(groupId,privateLayout,layoutId,parentLayoutId,name,type,hidden,friendlyURLMap);
  layoutLocalServiceHelper.validateParentLayoutId(groupId,privateLayout,layoutId,parentLayoutId);
  Date now=new Date();
  Layout layout=layoutPersistence.findByG_P_L(groupId,privateLayout,layoutId);
  if (parentLayoutId != layout.getParentLayoutId()) {
    int priority=layoutLocalServiceHelper.getNextPriority(groupId,privateLayout,parentLayoutId,layout.getSourcePrototypeLayoutUuid(),-1);
    layout.setPriority(priority);
  }
  layout.setModifiedDate(serviceContext.getModifiedDate(now));
  layout.setParentLayoutId(parentLayoutId);
  layout.setNameMap(nameMap);
  layout.setTitleMap(titleMap);
  layout.setDescriptionMap(descriptionMap);
  layout.setKeywordsMap(keywordsMap);
  layout.setRobotsMap(robotsMap);
  layout.setType(type);
  layout.setHidden(hidden);
  layout.setFriendlyURL(friendlyURL);
  PortalUtil.updateImageId(layout,iconImage,iconBytes,"iconImageId",0,0,0);
  boolean layoutUpdateable=ParamUtil.getBoolean(serviceContext,Sites.LAYOUT_UPDATEABLE,true);
  UnicodeProperties typeSettingsProperties=layout.getTypeSettingsProperties();
  typeSettingsProperties.put(Sites.LAYOUT_UPDATEABLE,String.valueOf(layoutUpdateable));
  if (privateLayout) {
    typeSettingsProperties.put("privateLayout",String.valueOf(privateLayout));
  }
  layout.setTypeSettingsProperties(typeSettingsProperties);
  String layoutPrototypeUuid=ParamUtil.getString(serviceContext,"layoutPrototypeUuid");
  boolean layoutPrototypeLinkEnabled=ParamUtil.getBoolean(serviceContext,"layoutPrototypeLinkEnabled");
  if (Validator.isNotNull(layoutPrototypeUuid)) {
    layout.setLayoutPrototypeUuid(layoutPrototypeUuid);
    layout.setLayoutPrototypeLinkEnabled(layoutPrototypeLinkEnabled);
  }
  layout.setExpandoBridgeAttributes(serviceContext);
  layoutPersistence.update(layout);
  layoutFriendlyURLLocalService.updateLayoutFriendlyURLs(layout.getUserId(),layout.getCompanyId(),layout.getGroupId(),layout.getPlid(),layout.isPrivateLayout(),friendlyURLMap,serviceContext);
  return layout;
}

{
  Layout layout=LayoutUtil.findByG_P_L(groupId,privateLayout,layoutId);
  if (parentLayoutId != layout.getParentLayoutId()) {
    if (parentLayoutId == LayoutImpl.DEFAULT_PARENT_LAYOUT_ID) {
      return;
    }
    Layout parentLayout=LayoutUtil.findByG_P_L(groupId,privateLayout,parentLayoutId);
    if (!PortalUtil.isLayoutParentable(parentLayout)) {
      throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.NOT_PARENTABLE);
    }
    if (isDescendant(layout,parentLayoutId)) {
      throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.SELF_DESCENDANT);
    }
    if (layout.getParentLayoutId() == LayoutImpl.DEFAULT_PARENT_LAYOUT_ID) {
      List layouts=LayoutUtil.findByG_P_P(groupId,privateLayout,LayoutImpl.DEFAULT_PARENT_LAYOUT_ID,0,2);
      long firstLayoutId=((Layout)layouts.get(0)).getLayoutId();
      if (firstLayoutId == layoutId) {
        Layout secondLayout=(Layout)layouts.get(1);
        try {
          validateFirstLayout(secondLayout.getType(),secondLayout.getHidden());
        }
 catch (        LayoutHiddenException lhe) {
          throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.FIRST_LAYOUT_HIDDEN);
        }
catch (        LayoutTypeException lte) {
          throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.FIRST_LAYOUT_TYPE);
        }
      }
    }
  }
}

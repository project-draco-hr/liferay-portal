{
  if (Validator.isNull(friendlyURL)) {
    StringBundler sb=new StringBundler(5);
    sb.append("{groupId=");
    sb.append(groupId);
    sb.append(", privateLayout=");
    sb.append(privateLayout);
    sb.append("}");
    throw new NoSuchLayoutException(sb.toString());
  }
  friendlyURL=layoutLocalServiceHelper.getFriendlyURL(friendlyURL);
  Layout layout=null;
  List<LayoutFriendlyURL> layoutFriendlyURLs=layoutFriendlyURLPersistence.findByG_P_F(groupId,privateLayout,friendlyURL,0,1);
  if (!layoutFriendlyURLs.isEmpty()) {
    LayoutFriendlyURL layoutFriendlyURL=layoutFriendlyURLs.get(0);
    layout=layoutPersistence.findByPrimaryKey(layoutFriendlyURL.getPlid());
  }
  if ((layout == null) && friendlyURL.startsWith(StringPool.SLASH) && Validator.isNumber(friendlyURL.substring(1))) {
    long layoutId=GetterUtil.getLong(friendlyURL.substring(1));
    layout=layoutPersistence.fetchByG_P_L(groupId,privateLayout,layoutId);
  }
  if (layout == null) {
    StringBundler sb=new StringBundler(7);
    sb.append("{groupId=");
    sb.append(groupId);
    sb.append(", privateLayout=");
    sb.append(privateLayout);
    sb.append(", friendlyURL=");
    sb.append(friendlyURL);
    sb.append("}");
    throw new NoSuchLayoutException(sb.toString());
  }
  return layout;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  long layoutId=getNextLayoutId(groupId,privateLayout);
  parentLayoutId=getParentLayoutId(groupId,privateLayout,parentLayoutId);
  String name=nameMap.get(LocaleUtil.getDefault());
  friendlyURL=getFriendlyURL(groupId,privateLayout,layoutId,name,friendlyURL);
  int priority=getNextPriority(groupId,privateLayout,parentLayoutId);
  validate(groupId,privateLayout,layoutId,parentLayoutId,name,type,hidden,friendlyURL);
  Date now=new Date();
  long plid=counterLocalService.increment();
  Layout layout=layoutPersistence.create(plid);
  layout.setUuid(serviceContext.getUuid());
  layout.setGroupId(groupId);
  layout.setCompanyId(user.getCompanyId());
  layout.setCreateDate(serviceContext.getCreateDate(now));
  layout.setModifiedDate(serviceContext.getModifiedDate(now));
  layout.setPrivateLayout(privateLayout);
  layout.setLayoutId(layoutId);
  layout.setParentLayoutId(parentLayoutId);
  layout.setNameMap(nameMap);
  layout.setTitleMap(titleMap);
  layout.setDescriptionMap(descriptionMap);
  layout.setKeywordsMap(keywordsMap);
  layout.setRobotsMap(robotsMap);
  layout.setType(type);
  layout.setHidden(hidden);
  layout.setFriendlyURL(friendlyURL);
  layout.setPriority(priority);
  boolean layoutUpdateable=ParamUtil.getBoolean(serviceContext,"layoutUpdateable",true);
  if (!layoutUpdateable) {
    UnicodeProperties typeSettingsProperties=layout.getTypeSettingsProperties();
    typeSettingsProperties.put("layoutUpdateable",String.valueOf(layoutUpdateable));
    layout.setTypeSettingsProperties(typeSettingsProperties);
  }
  if (type.equals(LayoutConstants.TYPE_PORTLET)) {
    LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
    layoutTypePortlet.setLayoutTemplateId(0,PropsValues.LAYOUT_DEFAULT_TEMPLATE_ID,false);
  }
  layoutPersistence.update(layout,false);
  boolean addGroupPermissions=true;
  Group group=groupLocalService.getGroup(groupId);
  if (privateLayout && group.isUser()) {
    addGroupPermissions=false;
  }
  boolean addGuestPermissions=false;
  if (!privateLayout || type.equals(LayoutConstants.TYPE_CONTROL_PANEL)) {
    addGuestPermissions=true;
  }
  resourceLocalService.addResources(user.getCompanyId(),groupId,user.getUserId(),Layout.class.getName(),layout.getPlid(),false,addGroupPermissions,addGuestPermissions);
  groupLocalService.updateSite(groupId,true);
  layoutSetLocalService.updatePageCount(groupId,privateLayout);
  LayoutSet layoutSet=layoutSetLocalService.getLayoutSet(groupId,privateLayout);
  layout.setLayoutSet(layoutSet);
  ExpandoBridge expandoBridge=layout.getExpandoBridge();
  expandoBridge.setAttributes(serviceContext);
  if (PropsValues.LAYOUT_COMMENTS_ENABLED) {
    mbMessageLocalService.addDiscussionMessage(userId,user.getFullName(),groupId,Layout.class.getName(),plid,WorkflowConstants.ACTION_PUBLISH);
  }
  return layout;
}

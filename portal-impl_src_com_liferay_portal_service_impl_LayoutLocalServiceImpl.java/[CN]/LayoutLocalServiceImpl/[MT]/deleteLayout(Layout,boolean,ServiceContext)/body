{
  if (layout.getParentLayoutId() == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
    List<Layout> rootLayouts=layoutPersistence.findByG_P_P(layout.getGroupId(),layout.isPrivateLayout(),LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,0,2);
    if (rootLayouts.size() > 1) {
      Layout firstLayout=rootLayouts.get(0);
      if (firstLayout.getLayoutId() == layout.getLayoutId()) {
        Layout secondLayout=rootLayouts.get(1);
        layoutLocalServiceHelper.validateFirstLayout(secondLayout);
      }
    }
  }
  List<Layout> childLayouts=layoutPersistence.findByG_P_P(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId());
  for (  Layout childLayout : childLayouts) {
    layoutLocalService.deleteLayout(childLayout,updateLayoutSet,serviceContext);
  }
  layoutFriendlyURLLocalService.deleteLayoutFriendlyURLs(layout.getPlid());
  portletPreferencesLocalService.deletePortletPreferencesByPlid(layout.getPlid());
  subscriptionLocalService.deleteSubscriptions(layout.getCompanyId(),Layout.class.getName(),layout.getPlid());
  SystemEventHierarchyEntryThreadLocal.pop(Layout.class,layout.getPlid());
  try {
    assetEntryLocalService.deleteEntry(Layout.class.getName(),layout.getPlid());
  }
  finally {
    SystemEventHierarchyEntryThreadLocal.push(Layout.class,layout.getPlid());
  }
  ratingsStatsLocalService.deleteStats(Layout.class.getName(),layout.getPlid());
  long layoutClassNameId=classNameLocalService.getClassNameId(Layout.class);
  List<MDRRuleGroupInstance> mdrRuleGroupInstances=mdrRuleGroupInstancePersistence.findByC_C(layoutClassNameId,layout.getPlid());
  for (  MDRRuleGroupInstance mdrRuleGroupInstance : mdrRuleGroupInstances) {
    mdrRuleGroupInstanceLocalService.deleteMDRRuleGroupInstance(mdrRuleGroupInstance);
  }
  mbMessageLocalService.deleteDiscussionMessages(Layout.class.getName(),layout.getPlid());
  journalArticleLocalService.deleteLayoutArticleReferences(layout.getGroupId(),layout.getUuid());
  journalContentSearchLocalService.deleteLayoutContentSearches(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId());
  expandoRowLocalService.deleteRows(layout.getPlid());
  imageLocalService.deleteImage(layout.getIconImageId());
  Group scopeGroup=layout.getScopeGroup();
  if (scopeGroup != null) {
    groupLocalService.deleteGroup(scopeGroup.getGroupId());
  }
  String primKey=layout.getPlid() + PortletConstants.LAYOUT_SEPARATOR + "%";
  List<ResourcePermission> resourcePermissions=resourcePermissionPersistence.findByC_LikeP(layout.getCompanyId(),primKey);
  for (  ResourcePermission resourcePermission : resourcePermissions) {
    resourcePermissionLocalService.deleteResourcePermission(resourcePermission);
  }
  resourceLocalService.deleteResource(layout.getCompanyId(),Layout.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,layout.getPlid());
  layoutPersistence.remove(layout);
  if (updateLayoutSet) {
    layoutSetLocalService.updatePageCount(layout.getGroupId(),layout.isPrivateLayout());
  }
  SystemEventHierarchyEntry systemEventHierarchyEntry=SystemEventHierarchyEntryThreadLocal.peek();
  if ((systemEventHierarchyEntry != null) && systemEventHierarchyEntry.hasTypedModel(Layout.class.getName(),layout.getPlid())) {
    systemEventHierarchyEntry.setExtraDataValue("privateLayout",StringUtil.valueOf(layout.isPrivateLayout()));
  }
}

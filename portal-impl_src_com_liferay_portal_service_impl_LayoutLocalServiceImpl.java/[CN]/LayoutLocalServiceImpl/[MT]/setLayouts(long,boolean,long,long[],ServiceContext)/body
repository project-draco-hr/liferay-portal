{
  if (layoutIds == null) {
    return;
  }
  if (parentLayoutId == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
    if (layoutIds.length < 1) {
      throw new RequiredLayoutException(RequiredLayoutException.AT_LEAST_ONE);
    }
    Layout layout=layoutPersistence.findByG_P_L(groupId,privateLayout,layoutIds[0]);
    if (!PortalUtil.isLayoutFirstPageable(layout.getType())) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_TYPE);
    }
    if (layout.isHidden()) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_HIDDEN);
    }
  }
  Set<Long> layoutIdsSet=new LinkedHashSet<Long>();
  for (  long layoutId : layoutIds) {
    layoutIdsSet.add(layoutId);
  }
  Set<Long> newLayoutIdsSet=new HashSet<Long>();
  List<Layout> layouts=layoutPersistence.findByG_P_P(groupId,privateLayout,parentLayoutId);
  for (  Layout layout : layouts) {
    if (!layoutIdsSet.contains(layout.getLayoutId())) {
      deleteLayout(layout,true,serviceContext);
    }
 else {
      newLayoutIdsSet.add(layout.getLayoutId());
    }
  }
  int priority=0;
  for (  long layoutId : layoutIdsSet) {
    Layout layout=layoutPersistence.findByG_P_L(groupId,privateLayout,layoutId);
    layout.setPriority(priority++);
    layoutPersistence.update(layout);
  }
  layoutSetLocalService.updatePageCount(groupId,privateLayout);
}

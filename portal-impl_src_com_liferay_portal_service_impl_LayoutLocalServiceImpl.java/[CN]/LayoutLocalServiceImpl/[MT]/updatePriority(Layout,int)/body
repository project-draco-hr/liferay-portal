{
  if (layout.getPriority() == priority) {
    return layout;
  }
  int oldPriority=layout.getPriority();
  int nextPriority=layoutLocalServiceHelper.getNextPriority(layout.getGroupId(),layout.isPrivateLayout(),layout.getParentLayoutId(),layout.getSourcePrototypeLayoutUuid(),priority);
  if (oldPriority == nextPriority) {
    return layout;
  }
  layout.setModifiedDate(new Date());
  layout.setPriority(nextPriority);
  layoutPersistence.update(layout);
  List<Layout> layouts=layoutPersistence.findByG_P_P(layout.getGroupId(),layout.isPrivateLayout(),layout.getParentLayoutId());
  boolean lessThan=false;
  if (oldPriority < nextPriority) {
    lessThan=true;
  }
  layouts=ListUtil.sort(layouts,new LayoutPriorityComparator(layout,lessThan));
  Layout firstLayout=layouts.get(0);
  layoutLocalServiceHelper.validateFirstLayout(firstLayout);
  int newPriority=LayoutConstants.FIRST_PRIORITY;
  for (  Layout curLayout : layouts) {
    int curNextPriority=layoutLocalServiceHelper.getNextPriority(layout.getGroupId(),layout.isPrivateLayout(),layout.getParentLayoutId(),curLayout.getSourcePrototypeLayoutUuid(),newPriority++);
    if (curLayout.getPriority() == curNextPriority) {
      continue;
    }
    curLayout.setModifiedDate(layout.getModifiedDate());
    curLayout.setPriority(curNextPriority);
    layoutPersistence.update(curLayout);
    if (curLayout.equals(layout)) {
      layout=curLayout;
    }
  }
  return layout;
}

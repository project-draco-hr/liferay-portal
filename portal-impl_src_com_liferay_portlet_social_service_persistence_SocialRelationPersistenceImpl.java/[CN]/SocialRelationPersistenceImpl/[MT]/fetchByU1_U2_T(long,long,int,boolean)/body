{
  Object[] finderArgs=new Object[]{new Long(userId1),new Long(userId2),new Integer(type)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U1_U2_T,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT socialRelation FROM SocialRelation socialRelation WHERE ");
      query.append("socialRelation.userId1 = ?");
      query.append(" AND ");
      query.append("socialRelation.userId2 = ?");
      query.append(" AND ");
      query.append("socialRelation.type = ?");
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId1);
      qPos.add(userId2);
      qPos.add(type);
      List<SocialRelation> list=q.list();
      result=list;
      SocialRelation socialRelation=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U1_U2_T,finderArgs,list);
      }
 else {
        socialRelation=list.get(0);
        cacheResult(socialRelation);
        if ((socialRelation.getUserId1() != userId1) || (socialRelation.getUserId2() != userId2) || (socialRelation.getType() != type)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U1_U2_T,finderArgs,socialRelation);
        }
      }
      return socialRelation;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U1_U2_T,finderArgs,new ArrayList<SocialRelation>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (SocialRelation)result;
    }
  }
}

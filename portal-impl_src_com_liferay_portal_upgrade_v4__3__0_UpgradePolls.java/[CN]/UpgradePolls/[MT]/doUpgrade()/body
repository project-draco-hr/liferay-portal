{
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",AvailableMappersUtil.getGroupIdMapper());
  UpgradeColumn upgradeUserIdColumn=new SwapUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  PKUpgradeColumnImpl pkUpgradeColumn=new PKUpgradeColumnImpl("questionId",true);
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(PollsQuestionImpl.TABLE_NAME,PollsQuestionImpl.TABLE_COLUMNS,pkUpgradeColumn,upgradeGroupIdColumn,upgradeUserIdColumn);
  upgradeTable.updateTable();
  ValueMapper questionIdMapper=pkUpgradeColumn.getValueMapper();
  AvailableMappersUtil.setPollsQuestionIdMapper(questionIdMapper);
  UpgradeColumn upgradeQuestionIdColumn=new SwapUpgradeColumnImpl("questionId",questionIdMapper);
  PKUpgradeColumnImpl upgradeChoiceId=new PollsChoiceIdUpgradeColumnImpl(upgradeQuestionIdColumn);
  upgradeTable=new DefaultUpgradeTableImpl(PollsChoiceImpl.TABLE_NAME,PollsChoiceImpl.TABLE_COLUMNS,upgradeQuestionIdColumn,upgradeChoiceId);
  upgradeTable.updateTable();
  ValueMapper choiceIdMapper=upgradeChoiceId.getValueMapper();
  UpgradeColumn upgradeVoteChoiceIdColumn=new PollsVoteChoiceIdUpgradeColumnImpl(upgradeQuestionIdColumn,choiceIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(PollsVoteImpl.TABLE_NAME,PollsVoteImpl.TABLE_COLUMNS,new PKUpgradeColumnImpl("voteId",false),upgradeUserIdColumn,upgradeQuestionIdColumn,upgradeVoteChoiceIdColumn);
  upgradeTable.updateTable();
  runSQL(_UPGRADE_SCHEMA);
}

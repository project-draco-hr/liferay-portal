{
  String join=StringPool.BLANK;
  if (key.equals("groupsPermissions")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_PERMISSIONS);
  }
 else   if (key.equals("organizations")) {
    Long[] organizationIds=(Long[])value;
    StringMaker sm=new StringMaker();
    sm.append("WHERE (");
    for (int i=0; i < organizationIds.length; i++) {
      sm.append("(Organization_.organizationId = ?) ");
      if ((i + 1) < organizationIds.length) {
        sm.append("OR ");
      }
    }
    sm.append(")");
    join=sm.toString();
  }
 else   if (key.equals("organizationsGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_GROUPS);
  }
 else   if (key.equals("organizationsPasswordPolicies")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_PASSWORD_POLICIES);
  }
 else   if (key.equals("organizationsRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_ROLES);
  }
 else   if (key.equals("organizationsUsers")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_USERS);
  }
 else   if (key.equals("orgGroupPermission")) {
    join=CustomSQLUtil.get(JOIN_BY_ORG_GROUP_PERMISSION);
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      StringMaker sm=new StringMaker();
      sm.append(join.substring(pos + 5,join.length()));
      sm.append(" AND ");
      join=sm.toString();
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

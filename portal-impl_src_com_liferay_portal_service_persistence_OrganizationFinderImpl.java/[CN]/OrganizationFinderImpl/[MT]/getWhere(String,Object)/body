{
  String join=StringPool.BLANK;
  if (key.equals("organizations")) {
    Long[] organizationIds=(Long[])value;
    if (organizationIds.length == 0) {
      join="WHERE ((Organization_.organizationId = -1) )";
    }
 else {
      StringBundler sb=new StringBundler(organizationIds.length * 2 + 1);
      sb.append("WHERE (");
      for (int i=0; i < organizationIds.length; i++) {
        sb.append("(Organization_.organizationId = ?) ");
        if ((i + 1) < organizationIds.length) {
          sb.append("OR ");
        }
      }
      sb.append(StringPool.CLOSE_PARENTHESIS);
      join=sb.toString();
    }
  }
 else   if (key.equals("organizationsGroups")) {
    if (value instanceof Long) {
      join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_GROUPS);
    }
 else     if (value instanceof Long[]) {
      Long[] organizationGroupIds=(Long[])value;
      if (organizationGroupIds.length == 0) {
        join="WHERE (Groups_Orgs.groupId = -1)";
      }
 else {
        StringBundler sb=new StringBundler(organizationGroupIds.length * 2 + 1);
        sb.append("WHERE (");
        for (int i=0; i < organizationGroupIds.length; i++) {
          sb.append("(Groups_Orgs.groupId = ?) ");
          if ((i + 1) < organizationGroupIds.length) {
            sb.append("OR ");
          }
        }
        sb.append(StringPool.CLOSE_PARENTHESIS);
        join=sb.toString();
      }
    }
  }
 else   if (key.equals("organizationsPasswordPolicies")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_PASSWORD_POLICIES);
  }
 else   if (key.equals("organizationsRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_ROLES);
  }
 else   if (key.equals("organizationsTree")) {
    List<Organization> organizationsTree=(List<Organization>)value;
    int size=organizationsTree.size();
    if (!organizationsTree.isEmpty()) {
      StringBundler sb=new StringBundler(size * 2 + 1);
      sb.append("WHERE (");
      for (int i=0; i < size; i++) {
        sb.append("(Organization_.treePath LIKE ?) ");
        if ((i + 1) < size) {
          sb.append("OR ");
        }
      }
      sb.append(StringPool.CLOSE_PARENTHESIS);
      join=sb.toString();
    }
  }
 else   if (key.equals("organizationsUsers")) {
    join=CustomSQLUtil.get(JOIN_BY_ORGANIZATIONS_USERS);
  }
 else   if (key.equals("usersOrgs")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_ORGS);
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      join=join.substring(pos + 5,join.length()).concat(" AND ");
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

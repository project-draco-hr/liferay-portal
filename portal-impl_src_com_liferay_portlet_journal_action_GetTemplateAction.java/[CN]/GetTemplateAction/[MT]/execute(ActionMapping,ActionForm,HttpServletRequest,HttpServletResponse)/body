{
  try {
    long groupId=ParamUtil.getLong(req,"groupId");
    String templateId=getTemplateId(req);
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    Map tokens=JournalUtil.getTokens(groupId,themeDisplay);
    tokens.put("template_id",templateId);
    String languageId=LanguageUtil.getLanguageId(req);
    boolean transform=ParamUtil.get(req,"transform",true);
    JournalTemplate template=JournalTemplateLocalServiceUtil.getTemplate(groupId,templateId);
    String script=JournalUtil.getTemplateScript(template,tokens,languageId,transform);
    String extension=JournalTemplateImpl.LANG_TYPE_XSL;
    if (template.getLangType() != null) {
      extension=template.getLangType();
    }
    String fileName=templateId + StringPool.PERIOD + extension;
    byte[] byteArray=script.getBytes();
    String contentType=Constants.TEXT_XML;
    if (Validator.equals(extension,JournalTemplateImpl.LANG_TYPE_CSS)) {
      contentType=JournalTemplateImpl.LANG_TYPE_CSS;
    }
    ServletResponseUtil.sendFile(res,fileName,byteArray,contentType);
    return null;
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    return mapping.findForward(Constants.COMMON_ERROR);
  }
}

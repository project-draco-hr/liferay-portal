{
  fullNames=CustomSQLUtil.keywords(fullNames,true);
  emailAddresses=CustomSQLUtil.keywords(emailAddresses,true);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_U_FN_EA);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(fullName)",StringPool.LIKE,false,fullNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(emailAddress)",StringPool.LIKE,true,emailAddresses);
    sql=CustomSQLUtil.replaceAndOperator(sql,false);
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId);
    qPos.add(fullNames,2);
    qPos.add(emailAddresses,2);
    Iterator<Long> itr=q.iterate();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  KaleoTimer newKaleoTimer=addKaleoTimer();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoTimer.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoTimerId"));
  Object newKaleoTimerId=newKaleoTimer.getKaleoTimerId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoTimerId",new Object[]{newKaleoTimerId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoTimerId=result.get(0);
  Assert.assertEquals(existingKaleoTimerId,newKaleoTimerId);
}

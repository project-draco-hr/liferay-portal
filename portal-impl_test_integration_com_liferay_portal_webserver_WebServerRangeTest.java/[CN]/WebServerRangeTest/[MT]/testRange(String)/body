{
  String fileName="Range-Test.txt";
  FileEntry fileEntry=addFileEntry(parentFolder.getFolderId(),fileName,fileName,_SAMPLE_DATA.getBytes());
  String path=fileEntry.getGroupId() + "/" + fileEntry.getFolderId()+ "/"+ fileEntry.getTitle();
  Map<String,String> headers=new HashMap<String,String>();
  if (Validator.isNotNull(rangeHeader)) {
    headers.put(HttpHeaders.RANGE,rangeHeader);
  }
  MockHttpServletResponse response=service(Method.GET,path,headers,null,null,null);
  int status=response.getStatus();
  Assert.assertTrue(response.containsHeader(HttpHeaders.ACCEPT_RANGES));
  if (Validator.isNotNull(rangeHeader)) {
    Assert.assertEquals(HttpServletResponse.SC_PARTIAL_CONTENT,status);
  }
 else {
    Assert.assertEquals(HttpServletResponse.SC_OK,status);
  }
  String contentType=response.getContentType();
  if (Validator.isNotNull(rangeHeader) && rangeHeader.contains(StringPool.COMMA)) {
    Assert.assertTrue(contentType.startsWith("multipart/byteranges"));
  }
 else {
    Assert.assertEquals(ContentTypes.TEXT_PLAIN,contentType);
  }
  return response;
}

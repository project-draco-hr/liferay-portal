{
  boolean importTheme=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.THEME);
  if (_log.isDebugEnabled()) {
    _log.debug("Import theme " + importTheme);
  }
  if (!importTheme || layout.isInheritLookAndFeel()) {
    return;
  }
  StringBundler sb=new StringBundler(4);
  sb.append("theme");
  sb.append(StringPool.DASH);
  sb.append(layout.getLayoutId());
  sb.append(".zip");
  InputStream themeZipInputStream=portletDataContext.getZipEntryAsInputStream(sb.toString());
  if (themeZipInputStream != null) {
    String themeId=layout.getThemeId();
    String colorSchemeId=layout.getColorSchemeId();
    long groupId=portletDataContext.getGroupId();
    boolean privateLayout=portletDataContext.isPrivateLayout();
    Map<Long,Layout> newLayoutsMap=(Map<Long,Layout>)portletDataContext.getNewPrimaryKeysMap(Layout.class + ".layout");
    Layout importedLayout=newLayoutsMap.get(layout.getLayoutId());
    long layoutId=importedLayout.getLayoutId();
    String importThemeId=importTheme(groupId,privateLayout,layoutId,themeZipInputStream);
    if (importThemeId != null) {
      themeId=importThemeId;
      colorSchemeId=ColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();
    }
    LayoutLocalServiceUtil.updateLookAndFeel(groupId,privateLayout,layoutId,themeId,colorSchemeId,importedLayout.getCss(),false);
  }
}

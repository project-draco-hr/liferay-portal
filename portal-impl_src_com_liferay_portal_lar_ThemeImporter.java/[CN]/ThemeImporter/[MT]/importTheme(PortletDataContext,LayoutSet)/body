{
  boolean importTheme=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.THEME);
  boolean importThemeSettings=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.THEME_REFERENCE);
  if (_log.isDebugEnabled()) {
    _log.debug("Import theme " + importTheme);
  }
  Element importDataRootElement=portletDataContext.getImportDataRootElement();
  Element headerElement=importDataRootElement.element("header");
  String themeId=layoutSet.getThemeId();
  String colorSchemeId=layoutSet.getColorSchemeId();
  if (importThemeSettings) {
    Attribute themeIdAttribute=headerElement.attribute("theme-id");
    if (themeIdAttribute != null) {
      themeId=themeIdAttribute.getValue();
    }
    Attribute colorSchemeIdAttribute=headerElement.attribute("color-scheme-id");
    if (colorSchemeIdAttribute != null) {
      colorSchemeId=colorSchemeIdAttribute.getValue();
    }
  }
  InputStream themeZip=null;
  if (importTheme) {
    themeZip=portletDataContext.getZipEntryAsInputStream("theme.zip");
  }
  if (themeZip != null) {
    StopWatch stopWatch=null;
    if (_log.isDebugEnabled()) {
      stopWatch=new StopWatch();
      stopWatch.start();
    }
    String importThemeId=importTheme(layoutSet.getGroupId(),layoutSet.isPrivateLayout(),0,themeZip);
    if (importThemeId != null) {
      themeId=importThemeId;
      colorSchemeId=ColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Importing theme takes " + stopWatch.getTime() + " ms");
    }
  }
  String css=GetterUtil.getString(headerElement.elementText("css"));
  LayoutSetLocalServiceUtil.updateLookAndFeel(layoutSet.getGroupId(),layoutSet.isPrivateLayout(),themeId,colorSchemeId,css,false);
}

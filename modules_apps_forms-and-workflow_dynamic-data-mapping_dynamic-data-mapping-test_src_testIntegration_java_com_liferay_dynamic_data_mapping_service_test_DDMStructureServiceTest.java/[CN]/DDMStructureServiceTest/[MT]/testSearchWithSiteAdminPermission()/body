{
  List<Role> roles=RoleLocalServiceUtil.getRoles(TestPropsValues.getCompanyId());
  DDMStructure structure=addStructure(_classNameId,StringUtil.randomString());
  structure=addStructure(_classNameId,StringUtil.randomString());
  String modelName=ResourceActionsUtil.getCompositeModelName(PortalUtil.getClassName(_classNameId),DDMStructure.class.getName());
  for (  Role role : roles) {
    ResourcePermissionServiceUtil.removeResourcePermission(structure.getGroupId(),structure.getCompanyId(),modelName,ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(structure.getPrimaryKey()),role.getRoleId(),ActionKeys.VIEW);
  }
  long[] groupIds={group.getGroupId(),group.getGroupId()};
  List<DDMStructure> structures=DDMStructureServiceUtil.search(TestPropsValues.getCompanyId(),groupIds,_classNameId,StringPool.BLANK,WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  Assert.assertEquals(2,structures.size());
}

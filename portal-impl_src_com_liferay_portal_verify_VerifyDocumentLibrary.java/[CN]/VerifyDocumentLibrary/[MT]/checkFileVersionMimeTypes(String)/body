{
  ActionableDynamicQuery actionableDynamicQuery=new DLFileVersionActionableDynamicQuery(){
    @Override protected void performAction(    Object object) throws PortalException, SystemException {
      DLFileVersion dlFileVersion=(DLFileVersion)object;
      InputStream inputStream=null;
      try {
        inputStream=DLFileEntryLocalServiceUtil.getFileAsStream(dlFileVersion.getUserId(),dlFileVersion.getFileEntryId(),dlFileVersion.getVersion(),false);
      }
 catch (      Exception e) {
        if (_log.isWarnEnabled()) {
          DLFileEntry fileEntry=DLFileEntryLocalServiceUtil.fetchDLFileEntry(dlFileVersion.getFileEntryId());
          if (fileEntry == null) {
            _log.warn("Unable to find file entry associated with " + "file version " + dlFileVersion.getFileVersionId(),e);
          }
 else {
            _log.warn("Unable to find file version " + dlFileVersion.getVersion() + " for file "+ "entry "+ fileEntry.getName(),e);
          }
        }
        return;
      }
      String title=DLUtil.getTitleWithExtension(dlFileVersion.getTitle(),dlFileVersion.getExtension());
      String mimeType=getMimeType(inputStream,title);
      if (mimeType.equals(originalMimeType)) {
        return;
      }
      dlFileVersion.setMimeType(mimeType);
      DLFileVersionLocalServiceUtil.updateDLFileVersion(dlFileVersion);
    }
  }
;
  actionableDynamicQuery.performActions();
}

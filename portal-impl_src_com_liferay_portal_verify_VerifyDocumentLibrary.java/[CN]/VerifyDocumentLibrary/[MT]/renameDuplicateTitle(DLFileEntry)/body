{
  String newTitle=dlFileEntry.getTitle();
  String newFileName=DLUtil.getSanitizedFileName(newTitle,dlFileEntry.getExtension());
  String titleWithoutExtension=newTitle;
  String titleExtension=StringPool.BLANK;
  if (newTitle.endsWith(StringPool.PERIOD + dlFileEntry.getExtension())) {
    titleWithoutExtension=newTitle.substring(0,newTitle.lastIndexOf(StringPool.PERIOD));
    titleExtension=dlFileEntry.getExtension();
  }
  int count=0;
  boolean duplicate=true;
  while (duplicate) {
    try {
      DLFileEntryLocalServiceUtil.validateFile(dlFileEntry.getGroupId(),dlFileEntry.getFolderId(),dlFileEntry.getFileEntryId(),newFileName,newTitle);
      duplicate=false;
    }
 catch (    PortalException e) {
      if (!(e instanceof DuplicateFolderNameException) && !(e instanceof DuplicateFileException)) {
        throw e;
      }
      count++;
      newTitle=titleWithoutExtension + StringPool.UNDERLINE + String.valueOf(count);
      if (Validator.isNotNull(titleExtension)) {
        newTitle+=StringPool.PERIOD.concat(titleExtension);
      }
      newFileName=DLUtil.getSanitizedFileName(newTitle,dlFileEntry.getExtension());
    }
  }
  if (newTitle.equals(dlFileEntry.getTitle()) && newFileName.equals(dlFileEntry.getFileName())) {
    return;
  }
  String title=dlFileEntry.getTitle();
  dlFileEntry.setTitle(newTitle);
  dlFileEntry.setFileName(newFileName);
  DLFileEntryLocalServiceUtil.updateDLFileEntry(dlFileEntry);
  DLFileVersion dlFileVersion=dlFileEntry.getFileVersion();
  dlFileVersion.setTitle(newTitle);
  dlFileVersion.setFileName(newFileName);
  DLFileVersionLocalServiceUtil.updateDLFileVersion(dlFileVersion);
  if (_log.isDebugEnabled()) {
    _log.debug("Invalid document title " + title + " renamed to "+ newTitle+ " for file entry "+ dlFileEntry.getFileEntryId());
  }
}

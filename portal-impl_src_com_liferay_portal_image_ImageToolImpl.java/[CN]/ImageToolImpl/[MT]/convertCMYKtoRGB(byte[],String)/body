{
  ImageMagick imageMagick=getImageMagick();
  if (!imageMagick.isEnabled()) {
    return null;
  }
  File inputFile=_fileUtil.createTempFile(type);
  final File outputFile=_fileUtil.createTempFile(type);
  try {
    _fileUtil.write(inputFile,bytes);
    IMOperation imOperation=new IMOperation();
    imOperation.addRawArgs("-format","%[colorspace]");
    imOperation.addImage(inputFile.getPath());
    String[] output=imageMagick.identify(imOperation.getCmdArgs());
    if ((output.length == 1) && StringUtil.equalsIgnoreCase(output[0],"CMYK")) {
      if (_log.isInfoEnabled()) {
        _log.info("The image is in the CMYK colorspace");
      }
      imOperation=new IMOperation();
      imOperation.addRawArgs("-colorspace","RGB");
      imOperation.addImage(inputFile.getPath());
      imOperation.addImage(outputFile.getPath());
      Future<Object> future=(Future<Object>)imageMagick.convert(imOperation.getCmdArgs());
      return new FutureConverter<RenderedImage,Object>(future){
        @Override protected RenderedImage convert(        Object obj){
          RenderedImage renderedImage=null;
          try {
            ImageBag imageBag=read(_fileUtil.getBytes(outputFile));
            renderedImage=imageBag.getRenderedImage();
          }
 catch (          ImageResolutionException|IOException e) {
            if (_log.isDebugEnabled()) {
              _log.debug("Unable to convert " + type,e);
            }
          }
          return renderedImage;
        }
      }
;
    }
  }
 catch (  Exception e) {
    if (_log.isErrorEnabled()) {
      _log.error(e,e);
    }
  }
 finally {
    _fileUtil.delete(inputFile);
    _fileUtil.delete(outputFile);
  }
  return null;
}

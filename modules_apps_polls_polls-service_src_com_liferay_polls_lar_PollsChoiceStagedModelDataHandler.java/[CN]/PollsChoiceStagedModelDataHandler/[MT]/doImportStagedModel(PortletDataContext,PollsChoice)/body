{
  long userId=portletDataContext.getUserId(choice.getUserUuid());
  Map<Long,Long> questionIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(PollsQuestion.class);
  long questionId=MapUtil.getLong(questionIds,choice.getQuestionId(),choice.getQuestionId());
  PollsChoice importedChoice=null;
  ServiceContext serviceContext=portletDataContext.createServiceContext(choice);
  if (portletDataContext.isDataStrategyMirror()) {
    PollsChoice existingChoice=fetchStagedModelByUuidAndGroupId(choice.getUuid(),portletDataContext.getScopeGroupId());
    if (existingChoice == null) {
      serviceContext.setUuid(choice.getUuid());
      importedChoice=_pollsChoiceLocalService.addChoice(userId,questionId,choice.getName(),choice.getDescription(),serviceContext);
    }
 else {
      importedChoice=_pollsChoiceLocalService.updateChoice(existingChoice.getChoiceId(),questionId,choice.getName(),choice.getDescription(),serviceContext);
    }
  }
 else {
    importedChoice=_pollsChoiceLocalService.addChoice(userId,questionId,choice.getName(),choice.getDescription(),serviceContext);
  }
  portletDataContext.importClassedModel(choice,importedChoice);
}

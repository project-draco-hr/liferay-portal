{
  List<TrashRenderer> trashRenderers=new ArrayList<>();
  DocumentRepository documentRepository=getDocumentRepository(classPK);
  List<RepositoryEntry> repositoryEntries=documentRepository.getFileEntriesAndFileShortcuts(classPK,WorkflowConstants.STATUS_IN_TRASH,start,end);
  for (  RepositoryEntry repositoryEntry : repositoryEntries) {
    String curClassName=StringPool.BLANK;
    long curClassPK=0;
    if (repositoryEntry instanceof FileShortcut) {
      FileShortcut fileShortcut=(FileShortcut)repositoryEntry;
      curClassName=DLFileShortcutConstants.getClassName();
      curClassPK=fileShortcut.getPrimaryKey();
    }
 else     if (repositoryEntry instanceof FileEntry) {
      FileEntry fileEntry=(FileEntry)repositoryEntry;
      curClassName=DLFileEntry.class.getName();
      curClassPK=fileEntry.getPrimaryKey();
    }
 else {
      continue;
    }
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(curClassName);
    TrashRenderer trashRenderer=trashHandler.getTrashRenderer(curClassPK);
    trashRenderers.add(trashRenderer);
  }
  return trashRenderers;
}

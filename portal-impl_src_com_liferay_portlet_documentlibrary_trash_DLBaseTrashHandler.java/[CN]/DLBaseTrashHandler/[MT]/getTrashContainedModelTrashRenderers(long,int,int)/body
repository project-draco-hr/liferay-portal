{
  Repository repository=getRepository(classPK);
  List<Object> fileEntriesAndFileShortcuts=repository.getFileEntriesAndFileShortcuts(classPK,WorkflowConstants.STATUS_ANY,start,end);
  List<TrashRenderer> trashRenderers=new ArrayList<TrashRenderer>();
  for (  Object fileEntryOrFileShortcut : fileEntriesAndFileShortcuts) {
    String curClassName=StringPool.BLANK;
    long curClassPK=0;
    if (fileEntryOrFileShortcut instanceof DLFileShortcut) {
      DLFileShortcut dlFileShortcut=(DLFileShortcut)fileEntryOrFileShortcut;
      curClassName=DLFileShortcut.class.getName();
      curClassPK=dlFileShortcut.getPrimaryKey();
    }
 else     if (fileEntryOrFileShortcut instanceof FileEntry) {
      FileEntry fileEntry=(FileEntry)fileEntryOrFileShortcut;
      curClassName=DLFileEntry.class.getName();
      curClassPK=fileEntry.getPrimaryKey();
    }
 else {
      continue;
    }
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(curClassName);
    TrashRenderer trashRenderer=trashHandler.getTrashRenderer(curClassPK);
    trashRenderers.add(trashRenderer);
  }
  return trashRenderers;
}

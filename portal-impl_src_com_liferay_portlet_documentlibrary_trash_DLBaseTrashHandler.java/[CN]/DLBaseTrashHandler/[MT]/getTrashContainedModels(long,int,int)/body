{
  Repository repository=getRepository(classPK);
  List<Object> entries=repository.getFileEntriesAndFileShortcuts(classPK,WorkflowConstants.STATUS_ANY,start,end);
  List<TrashRenderer> trashBaseModels=new ArrayList<TrashRenderer>();
  for (  Object entry : entries) {
    String curClassName=StringPool.BLANK;
    long curClassPK=0;
    if (entry instanceof FileEntry) {
      FileEntry fileEntry=(FileEntry)entry;
      curClassName=DLFileEntry.class.getName();
      curClassPK=fileEntry.getPrimaryKey();
    }
 else     if (entry instanceof DLFileShortcut) {
      DLFileShortcut dlFileShortcut=(DLFileShortcut)entry;
      curClassName=DLFileShortcut.class.getName();
      curClassPK=dlFileShortcut.getPrimaryKey();
    }
 else {
      continue;
    }
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(curClassName);
    TrashRenderer trashRenderer=trashHandler.getTrashRenderer(curClassPK);
    trashBaseModels.add(trashRenderer);
  }
  return trashBaseModels;
}

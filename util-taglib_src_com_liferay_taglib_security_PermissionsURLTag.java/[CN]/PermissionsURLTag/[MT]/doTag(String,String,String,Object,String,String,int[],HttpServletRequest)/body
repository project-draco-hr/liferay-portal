{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  if (resourceGroupId instanceof Number) {
    Number resourceGroupIdNumber=(Number)resourceGroupId;
    if (resourceGroupIdNumber.longValue() < 0) {
      resourceGroupId=null;
    }
  }
 else   if (resourceGroupId instanceof String) {
    String esourceGroupIdString=(String)resourceGroupId;
    if (esourceGroupIdString.length() == 0) {
      resourceGroupId=null;
    }
  }
  if (resourceGroupId == null) {
    resourceGroupId=String.valueOf(themeDisplay.getScopeGroupId());
  }
  if (Validator.isNull(redirect) && (Validator.isNull(windowState) || !windowState.equals(LiferayWindowState.POP_UP.toString()))) {
    redirect=PortalUtil.getCurrentURL(request);
  }
  PortletURL portletURL=PortletProviderUtil.getPortletURL(request,PortletConfigurationApplicationType.PortletConfiguration.CLASS_NAME,PortletProvider.Action.VIEW);
  if (Validator.isNotNull(windowState)) {
    portletURL.setWindowState(WindowStateFactory.getWindowState(windowState));
  }
 else   if (themeDisplay.isStatePopUp()) {
    portletURL.setWindowState(LiferayWindowState.POP_UP);
  }
 else {
    portletURL.setWindowState(WindowState.MAXIMIZED);
  }
  portletURL.setParameter("mvcPath","/edit_permissions.jsp");
  if (Validator.isNotNull(redirect)) {
    portletURL.setParameter("redirect",redirect);
    if (!themeDisplay.isStateMaximized()) {
      portletURL.setParameter("returnToFullPageURL",redirect);
    }
  }
  portletURL.setParameter("portletConfiguration",Boolean.TRUE.toString());
  PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
  portletURL.setParameter("portletResource",portletDisplay.getId());
  portletURL.setParameter("modelResource",modelResource);
  portletURL.setParameter("modelResourceDescription",modelResourceDescription);
  portletURL.setParameter("resourceGroupId",String.valueOf(resourceGroupId));
  portletURL.setParameter("resourcePrimKey",resourcePrimKey);
  if (roleTypes != null) {
    portletURL.setParameter("roleTypes",StringUtil.merge(roleTypes));
  }
  return portletURL.toString();
}

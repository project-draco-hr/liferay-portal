{
  boolean finderClassNameCacheEnabled=PortletPreferencesModelImpl.CACHE_ENABLED;
  String finderClassName=PortletPreferences.class.getName();
  String finderMethodName="findByO_O_P";
  String[] finderParams=new String[]{Long.class.getName(),Integer.class.getName(),Long.class.getName(),"java.lang.Integer","java.lang.Integer","com.liferay.portal.kernel.util.OrderByComparator"};
  Object[] finderArgs=new Object[]{new Long(ownerId),new Integer(ownerType),new Long(plid),String.valueOf(start),String.valueOf(end),String.valueOf(obc)};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("FROM com.liferay.portal.model.PortletPreferences WHERE ");
      query.append("ownerId = ?");
      query.append(" AND ");
      query.append("ownerType = ?");
      query.append(" AND ");
      query.append("plid = ?");
      query.append(" ");
      if (obc != null) {
        query.append("ORDER BY ");
        query.append(obc.getOrderBy());
      }
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(ownerId);
      qPos.add(ownerType);
      qPos.add(plid);
      List<PortletPreferences> list=(List<PortletPreferences>)QueryUtil.list(q,getDialect(),start,end);
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      return list;
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (List<PortletPreferences>)result;
  }
}

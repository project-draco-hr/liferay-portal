{
  String finderClassName=PortletPreferences.class.getName();
  String finderMethodName="fetchByO_O_P_P";
  Object[] finderArgs=new Object[]{new Long(ownerId),new Integer(ownerType),new Long(plid),portletId};
  Object result=FinderCache.getResult(finderClassName,finderMethodName,finderArgs);
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringMaker query=new StringMaker();
      query.append("FROM com.liferay.portal.model.PortletPreferences WHERE ");
      query.append("ownerId = ?");
      query.append(" AND ");
      query.append("ownerType = ?");
      query.append(" AND ");
      query.append("plid = ?");
      query.append(" AND ");
      if (portletId == null) {
        query.append("portletId IS NULL");
      }
 else {
        query.append("portletId = ?");
      }
      query.append(" ");
      Query q=session.createQuery(query.toString());
      int queryPos=0;
      q.setLong(queryPos++,ownerId);
      q.setInteger(queryPos++,ownerType);
      q.setLong(queryPos++,plid);
      if (portletId != null) {
        q.setString(queryPos++,portletId);
      }
      List list=q.list();
      if (list.size() == 0) {
        return null;
      }
      PortletPreferences portletPreferences=(PortletPreferences)list.get(0);
      FinderCache.putResult(finderClassName,finderMethodName,finderArgs,portletPreferences);
      return portletPreferences;
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (PortletPreferences)result;
  }
}

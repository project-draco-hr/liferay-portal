{
  tasksReview=toUnwrappedModel(tasksReview);
  boolean isNew=tasksReview.isNew();
  TasksReviewModelImpl tasksReviewModelImpl=(TasksReviewModelImpl)tasksReview;
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,tasksReview,merge);
    tasksReview.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  EntityCacheUtil.putResult(TasksReviewModelImpl.ENTITY_CACHE_ENABLED,TasksReviewImpl.class,tasksReview.getPrimaryKey(),tasksReview);
  if (!isNew && ((tasksReview.getUserId() != tasksReviewModelImpl.getOriginalUserId()) || (tasksReview.getProposalId() != tasksReviewModelImpl.getOriginalProposalId()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_U_P,new Object[]{new Long(tasksReviewModelImpl.getOriginalUserId()),new Long(tasksReviewModelImpl.getOriginalProposalId())});
  }
  if (isNew || ((tasksReview.getUserId() != tasksReviewModelImpl.getOriginalUserId()) || (tasksReview.getProposalId() != tasksReviewModelImpl.getOriginalProposalId()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_P,new Object[]{new Long(tasksReview.getUserId()),new Long(tasksReview.getProposalId())},tasksReview);
  }
  return tasksReview;
}

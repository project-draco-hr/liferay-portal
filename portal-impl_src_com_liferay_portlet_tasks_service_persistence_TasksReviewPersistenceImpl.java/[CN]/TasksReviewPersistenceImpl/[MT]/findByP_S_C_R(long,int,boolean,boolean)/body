{
  Object[] finderArgs=new Object[]{new Long(proposalId),new Integer(stage),Boolean.valueOf(completed),Boolean.valueOf(rejected)};
  List<TasksReview> list=(List<TasksReview>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_P_S_C_R,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(6);
      query.append(_SQL_SELECT_TASKSREVIEW_WHERE);
      query.append(_FINDER_COLUMN_P_S_C_R_PROPOSALID_2);
      query.append(_FINDER_COLUMN_P_S_C_R_STAGE_2);
      query.append(_FINDER_COLUMN_P_S_C_R_COMPLETED_2);
      query.append(_FINDER_COLUMN_P_S_C_R_REJECTED_2);
      query.append(TasksReviewModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(proposalId);
      qPos.add(stage);
      qPos.add(completed);
      qPos.add(rejected);
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<TasksReview>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_P_S_C_R,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

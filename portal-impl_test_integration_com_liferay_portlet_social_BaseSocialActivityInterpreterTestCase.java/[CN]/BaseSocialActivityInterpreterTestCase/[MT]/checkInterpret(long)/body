{
  List<SocialActivity> activities=getActivities();
  Assert.assertFalse(activities.isEmpty());
  Map<String,String> entryTitles=new HashMap<String,String>();
  SocialActivityInterpreter activityInterpreter=getActivityInterpreter();
  for (  SocialActivity activity : activities) {
    String title=activity.getExtraDataValue("title",serviceContext.getLocale());
    if (supportsRename(activity.getClassName()) && Validator.isNotNull(title)) {
      if (activity.getCreateDate() < renameTime) {
        entryTitles.put(activity.getClassName(),title);
      }
 else {
        Assert.assertNotNull(entryTitles.get(activity.getClassName()));
        Assert.assertNotEquals(entryTitles.get(activity.getClassName()),title);
      }
    }
    if (hasClassName(activityInterpreter,activity.getClassName()) && hasActivityType(activity.getType())) {
      SocialActivityFeedEntry activityFeedEntry=activityInterpreter.interpret(activity,serviceContext);
      Assert.assertNotNull(activityFeedEntry);
      title=activityFeedEntry.getTitle();
      if (title.matches("\\{\\d\\}")) {
        Assert.fail("One or more parameters were not replaced: " + title);
      }
    }
  }
}

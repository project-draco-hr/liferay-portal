{
  try {
    ActionUtil.checkPortletConfigurationPermission(renderRequest);
  }
 catch (  PrincipalException pe) {
    SessionErrors.add(renderRequest,PrincipalException.class.getName());
    return actionMapping.findForward("portlet.portlet_configuration.error");
  }
  renderRequest=ActionUtil.getWrappedRenderRequest(renderRequest,null);
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long groupId=ParamUtil.getLong(renderRequest,"resourceGroupId",themeDisplay.getScopeGroupId());
  String portletResource=ParamUtil.getString(renderRequest,"portletResource");
  String modelResource=ParamUtil.getString(renderRequest,"modelResource");
  String resourcePrimKey=ParamUtil.getString(renderRequest,"resourcePrimKey");
  String selResource=portletResource;
  if (Validator.isNotNull(modelResource)) {
    selResource=modelResource;
  }
  try {
    PermissionServiceUtil.checkPermission(groupId,selResource,resourcePrimKey);
  }
 catch (  PrincipalException pe) {
    SessionErrors.add(renderRequest,PrincipalException.class.getName());
    return actionMapping.findForward("portlet.portlet_configuration.error");
  }
  Portlet portlet=PortletLocalServiceUtil.getPortletById(themeDisplay.getCompanyId(),portletResource);
  if (portlet != null) {
    renderResponse.setTitle(ActionUtil.getTitle(portlet,renderRequest));
  }
  return actionMapping.findForward(getForward(renderRequest,"portlet.portlet_configuration.edit_permissions"));
}

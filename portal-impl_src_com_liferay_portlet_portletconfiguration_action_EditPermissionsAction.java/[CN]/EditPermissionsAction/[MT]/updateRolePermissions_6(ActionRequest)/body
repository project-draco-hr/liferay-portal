{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  String modelResource=ParamUtil.getString(actionRequest,"modelResource");
  long[] roleIds=StringUtil.split(ParamUtil.getString(actionRequest,"rolesSearchContainerPrimaryKeys"),0L);
  String selResource=PortletConstants.getRootPortletId(portletResource);
  if (Validator.isNotNull(modelResource)) {
    selResource=modelResource;
  }
  String resourcePrimKey=ParamUtil.getString(actionRequest,"resourcePrimKey");
  if (ResourceBlockLocalServiceUtil.isSupported(selResource)) {
    for (    long roleId : roleIds) {
      List<String> actionIds=getActionIdsList(actionRequest,roleId,true);
      ResourceBlockServiceUtil.setIndividualScopePermissions(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId(),selResource,GetterUtil.getLong(resourcePrimKey),roleId,actionIds);
    }
  }
 else {
    for (    long roleId : roleIds) {
      String[] actionIds=getActionIds(actionRequest,roleId,false);
      ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(),themeDisplay.getCompanyId(),selResource,resourcePrimKey,roleId,actionIds);
    }
  }
  if (PropsValues.PERMISSIONS_PROPAGATION_ENABLED) {
    Portlet portlet=PortletLocalServiceUtil.getPortletById(themeDisplay.getCompanyId(),portletResource);
    PermissionPropagator permissionPropagator=portlet.getPermissionPropagatorInstance();
    if (permissionPropagator != null) {
      permissionPropagator.propagateRolePermissions(actionRequest,modelResource,resourcePrimKey,roleIds);
    }
  }
}

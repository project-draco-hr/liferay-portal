{
  List<Element> elements=trElement.elements();
  for (  Element element : elements) {
    String elementName=element.getName();
    if (!elementName.equals("td")) {
      throwValidationException(1002,fileName,element,elementName);
    }
  }
  if (elements.size() < 3) {
    throwValidationException(1001,fileName,trElement,new String[]{"td"});
  }
  if (elements.size() > 3) {
    Element element=elements.get(3);
    String elementName=element.getName();
    throwValidationException(1002,fileName,element,elementName);
  }
  Element locatorElement=elements.get(1);
  String locator=locatorElement.getText();
  locator=locator.replace("${","");
  locator=locator.replace("}","");
  locator=locator.replace("/-/","/");
  if (locator.endsWith("/")) {
    locator=locator.substring(0,locator.length() - 1);
  }
  if (!locator.equals("") && !locator.startsWith("link=") && !locator.startsWith("title=")&& !locator.contains(".png")) {
    try {
      XPathFactory xPathFactory=XPathFactory.newInstance();
      XPath xPath=xPathFactory.newXPath();
      xPath.compile(locator);
    }
 catch (    Exception e) {
      throwValidationException(2003,fileName,locator);
    }
  }
  Element keyElement=elements.get(0);
  String key=keyElement.getText();
  Element descriptionElement=elements.get(2);
  String description=descriptionElement.getText();
  if (!key.equals("") && !key.equals("EXTEND_ACTION_PATH") && !key.equals("PAGE_NAME")&& !description.equals("")) {
    if (description.endsWith(".")) {
      throwValidationException(2004,fileName,description);
    }
    Matcher statmentMatcher=_pathTrElementStatementPattern.matcher(description);
    if (!statmentMatcher.find()) {
      throwValidationException(2004,fileName,description);
    }
    Matcher wordMatcher1=_pathTrElementWordPattern1.matcher(description);
    while (wordMatcher1.find()) {
      String word=wordMatcher1.group();
      if (word.equals("a") || word.equals("and") || word.equals("as")|| word.equals("at")|| word.equals("by")|| word.equals("for")|| word.equals("from")|| word.equals("in")|| word.equals("of")|| word.equals("the")|| word.equals("to")) {
        continue;
      }
      Matcher wordMatcher2=_pathTrElementWordPattern2.matcher(word);
      if (!wordMatcher2.find()) {
        throwValidationException(2004,fileName,description);
      }
    }
  }
}

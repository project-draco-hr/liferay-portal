{
  if (!Validator.equals(rootElement.getName(),"definition")) {
    throwValidationException(1000,fileName,rootElement);
  }
  String extendedTestCase=rootElement.attributeValue("extends");
  if (extendedTestCase != null) {
    if (Validator.isNull(extendedTestCase)) {
      throwValidationException(1006,fileName,rootElement,"extends");
    }
  }
  String componentName=rootElement.attributeValue("component-name");
  if (componentName == null) {
    throwValidationException(1003,fileName,rootElement,"component-name");
  }
  if ((componentName != null) && !_componentNames.contains(componentName)) {
    throwValidationException(1006,fileName,rootElement,"component-name");
  }
  List<Element> elements=rootElement.elements();
  if (Validator.isNull(extendedTestCase)) {
    if (elements.isEmpty()) {
      throwValidationException(1001,fileName,rootElement,new String[]{"command"});
    }
  }
  for (  Element element : elements) {
    String elementName=element.getName();
    if (elementName.equals("command")) {
      String attributeValue=element.attributeValue("name");
      if (attributeValue == null) {
        throwValidationException(1003,fileName,element,"name");
      }
 else       if (Validator.isNull(attributeValue)) {
        throwValidationException(1006,fileName,element,"name");
      }
      String priorityValue=element.attributeValue("priority");
      if (priorityValue == null) {
        throwValidationException(1003,fileName,element,"priority");
      }
 else       if (!(priorityValue.equals("1") || priorityValue.equals("2") || priorityValue.equals("3")|| priorityValue.equals("4")|| priorityValue.equals("5"))) {
        throwValidationException(1006,fileName,element,"priority");
      }
      validateBlockElement(fileName,element,new String[]{"description","echo","execute","fail","for","if","property","take-screenshot","var","while"},new String[]{"action","macro","test-case"},new String[]{"var"},new String[]{"and","condition","contains","equals","isset","not","or"});
    }
 else     if (elementName.equals("property")) {
      validatePropertyElement(fileName,element);
    }
 else     if (elementName.equals("set-up") || elementName.equals("tear-down")) {
      List<Attribute> attributes=element.attributes();
      for (      Attribute attribute : attributes) {
        String attributeName=attribute.getName();
        if (!attributeName.equals("line-number")) {
          throwValidationException(1005,fileName,element,attributeName);
        }
      }
      validateBlockElement(fileName,element,new String[]{"description","echo","execute","fail","if","take-screenshot","var","while"},new String[]{"action","macro","test-case"},new String[]{"var"},new String[]{"and","condition","contains","equals","isset","not","or"});
    }
 else     if (elementName.equals("var")) {
      validateVarElement(fileName,element);
    }
 else {
      throwValidationException(1002,fileName,element,elementName);
    }
  }
  elements=getAllChildElements(rootElement,"property");
  for (  Element element : elements) {
    String name=element.attributeValue("name");
    String value=element.attributeValue("value");
    if (name.equals("testray.component.names")) {
      List<String> testrayComponentNames=ListUtil.fromArray(StringUtil.split(value));
      for (      String testrayComponentName : testrayComponentNames) {
        if (!_testrayAvailableComponentNames.contains(testrayComponentName)) {
          throwValidationException(3001,fileName,element,name,testrayComponentName);
        }
      }
    }
 else     if (name.equals("testray.main.component.name")) {
      if (!_testrayAvailableComponentNames.contains(value)) {
        throwValidationException(3001,fileName,element,name,value);
      }
    }
  }
}

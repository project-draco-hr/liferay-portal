{
  String content=readFile(fileName);
  if (fileName.endsWith(".path")) {
    int x=content.indexOf("<tbody>");
    int y=content.indexOf("</tbody>");
    if ((x == -1) || (y == -1)) {
      throwValidationException(1002,fileName,"tbody");
    }
    String pathTbody=content.substring(x,y + 8);
    Map<String,Object> context=new HashMap<String,Object>();
    context.put("pathName",getName(fileName));
    context.put("pathTbody",pathTbody);
    String newContent=processTemplate("path_xml.ftl",context);
    if (!content.equals(newContent)) {
      content=newContent;
      writeFile(getBaseDirName(),fileName,newContent,false);
    }
  }
  StringBundler sb=new StringBundler();
  int lineNumber=1;
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(content));
  String line=null;
  while ((line=unsyncBufferedReader.readLine()) != null) {
    Matcher matcher=_tagPattern.matcher(line);
    if (matcher.find()) {
      for (      String reservedTag : _reservedTags) {
        if (line.contains("<" + reservedTag)) {
          line=StringUtil.replace(line,matcher.group(),matcher.group() + " line-number=\"" + lineNumber+ "\"");
          break;
        }
      }
    }
    sb.append(line);
    lineNumber++;
  }
  content=sb.toString();
  if (content != null) {
    content=content.trim();
    content=StringUtil.replace(content,"\n","");
    content=StringUtil.replace(content,"\r\n","");
    content=StringUtil.replace(content,"\t"," ");
    content=content.replaceAll(" +"," ");
  }
  return content;
}

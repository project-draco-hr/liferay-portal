{
  List<Element> elements=ifElement.elements();
  Set<String> elementNames=new HashSet<String>();
  boolean hasAllowedIfConditionElementNames=false;
  for (  Element element : elements) {
    String elementName=element.getName();
    elementNames.add(elementName);
    if (ArrayUtil.contains(allowedIfConditionElementNames,elementName)) {
      hasAllowedIfConditionElementNames=true;
    }
    if (elementName.equals("condition")) {
      validateExecuteElement(fileName,element,allowedExecuteAttributeNames,".*(is|Is).+",allowedExecuteChildElementNames);
    }
 else     if (elementName.equals("contains")) {
      validateSimpleElement(fileName,element,new String[]{"string","substring"});
    }
 else     if (elementName.equals("else") || elementName.equals("then")) {
      validateBlockElement(fileName,element,allowedBlockChildElementNames,allowedExecuteAttributeNames,allowedExecuteChildElementNames,allowedIfConditionElementNames);
    }
 else     if (elementName.equals("elseif")) {
      validateIfElement(fileName,element,allowedBlockChildElementNames,allowedExecuteAttributeNames,allowedExecuteChildElementNames,allowedIfConditionElementNames);
    }
 else     if (elementName.equals("equals")) {
      validateSimpleElement(fileName,element,new String[]{"arg1","arg2"});
    }
 else     if (elementName.equals("isset")) {
      validateSimpleElement(fileName,element,new String[]{"var"});
    }
 else     if (elementName.equals("not")) {
      validateIfElement(fileName,element,allowedBlockChildElementNames,allowedExecuteAttributeNames,allowedExecuteChildElementNames,allowedIfConditionElementNames);
    }
 else {
      throwValidationException(1002,fileName,element,elementName);
    }
  }
  if (!hasAllowedIfConditionElementNames) {
    throwValidationException(1001,fileName,ifElement,allowedIfConditionElementNames);
  }
  if (ifElement.getName() == "not") {
    return;
  }
  if (!elementNames.contains("then")) {
    throwValidationException(1001,fileName,ifElement,new String[]{"then"});
  }
}

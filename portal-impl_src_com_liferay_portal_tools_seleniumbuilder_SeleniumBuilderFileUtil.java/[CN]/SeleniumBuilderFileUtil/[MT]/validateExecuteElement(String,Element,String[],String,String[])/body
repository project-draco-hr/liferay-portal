{
  boolean hasAllowedAttributeName=false;
  List<Attribute> attributes=executeElement.attributes();
  for (  Attribute attribute : attributes) {
    String attributeName=attribute.getName();
    if (ArrayUtil.contains(allowedExecuteAttributeNames,attributeName)) {
      hasAllowedAttributeName=true;
      break;
    }
  }
  if (!hasAllowedAttributeName) {
    throwValidationException(1004,fileName,executeElement,allowedExecuteAttributeNames);
  }
  String action=executeElement.attributeValue("action");
  String function=executeElement.attributeValue("function");
  String macro=executeElement.attributeValue("macro");
  String selenium=executeElement.attributeValue("selenium");
  String testCase=executeElement.attributeValue("test-case");
  String testClass=executeElement.attributeValue("test-class");
  String testSuite=executeElement.attributeValue("test-suite");
  if (action != null) {
    if (Validator.isNull(action) || !action.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"action");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("action") && !attributeName.equals("line-number") && !attributeName.startsWith("locator")&& !attributeName.startsWith("locator-key")&& !attributeName.startsWith("value")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
      if (attributeName.equals("locator") || attributeName.equals("locator-key") || attributeName.equals("value")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (function != null) {
    if (Validator.isNull(function) || !function.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"function");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("function") && !attributeName.equals("line-number") && !attributeName.startsWith("locator")&& !attributeName.startsWith("value")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
      if (attributeName.equals("locator") || attributeName.equals("value")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (macro != null) {
    if (Validator.isNull(macro) || !macro.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"macro");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("macro") && !attributeName.equals("line-number")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (selenium != null) {
    if (Validator.isNull(selenium) || !selenium.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"selenium");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("argument1") && !attributeName.equals("argument2") && !attributeName.equals("line-number")&& !attributeName.equals("selenium")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (testCase != null) {
    if (Validator.isNull(testCase) || !testCase.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"test-case");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("line-number") && !attributeName.equals("test-case")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (testClass != null) {
    if (Validator.isNull(testClass) || !testClass.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"test-class");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("line-number") && !attributeName.equals("test-class")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else   if (testSuite != null) {
    if (Validator.isNull(testSuite) || !testSuite.matches(allowedExecuteAttributeValuesRegex)) {
      throwValidationException(1006,fileName,executeElement,"test-suite");
    }
    for (    Attribute attribute : attributes) {
      String attributeName=attribute.getName();
      if (!attributeName.equals("line-number") && !attributeName.equals("test-suite")) {
        throwValidationException(1005,fileName,executeElement,attributeName);
      }
    }
  }
 else {
    throwValidationException(0,fileName);
  }
  List<Element> elements=executeElement.elements();
  if (allowedExecuteChildElementNames.length == 0) {
    if (!elements.isEmpty()) {
      Element element=elements.get(0);
      String elementName=element.getName();
      throwValidationException(1002,fileName,element,elementName);
    }
  }
 else {
    String executeElementName=executeElement.getName();
    for (    Element element : elements) {
      String elementName=element.getName();
      if (executeElementName.equals("condition")) {
        throwValidationException(1002,fileName,element,elementName);
      }
      if (elementName.equals("var")) {
        validateVarElement(fileName,element);
      }
 else {
        throwValidationException(1002,fileName,element,elementName);
      }
    }
  }
}

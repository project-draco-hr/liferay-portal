{
  Map<String,Boolean> hasNeededAttributes=new HashMap<String,Boolean>();
  for (  String neededAttribute : neededAttributes) {
    hasNeededAttributes.put(neededAttribute,false);
  }
  List<Attribute> attributes=element.attributes();
  for (  Attribute attribute : attributes) {
    String attributeName=attribute.getName();
    String attributeValue=attribute.getValue();
    String elementName=element.getName();
    if (attributeName.equals("value") && elementName.equals("var")) {
      if (attributeValue == null) {
        throwValidationException(1006,fileName,element,attributeName);
      }
    }
 else {
      if (Validator.isNull(attributeValue)) {
        throwValidationException(1006,fileName,element,attributeName);
      }
    }
    if (hasNeededAttributes.containsKey(attributeName)) {
      hasNeededAttributes.put(attributeName,true);
    }
    if (!attributeName.equals("line-number") && !hasNeededAttributes.containsKey(attributeName)) {
      throwValidationException(1005,fileName,element,attributeName);
    }
  }
  for (  String neededAttribute : neededAttributes) {
    if (!hasNeededAttributes.get(neededAttribute)) {
      if (!neededAttribute.equals("value")) {
        throwValidationException(1004,fileName,element,neededAttributes);
      }
 else {
        if (Validator.isNull(element.getText())) {
          throwValidationException(1004,fileName,element,neededAttributes);
        }
      }
    }
  }
  List<Element> childElements=element.elements();
  if (!childElements.isEmpty()) {
    Element childElement=childElements.get(0);
    String childElementName=childElement.getName();
    throwValidationException(1002,fileName,childElement,childElementName);
  }
}

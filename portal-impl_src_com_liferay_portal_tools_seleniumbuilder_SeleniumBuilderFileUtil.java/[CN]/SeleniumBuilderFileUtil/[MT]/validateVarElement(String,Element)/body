{
  List<Attribute> attributes=element.attributes();
  Map<String,String> attributeMap=new HashMap<String,String>();
  for (  Attribute attribute : attributes) {
    String attributeName=attribute.getName();
    String attributeValue=attribute.getValue();
    if (!attributeName.equals("value") && Validator.isNull(attributeValue)) {
      throwValidationException(1006,fileName,element,attributeName);
    }
    if (!_allowedVarAttributes.contains(attributeName)) {
      throwValidationException(1005,fileName,element,attributeName);
    }
    attributeMap.put(attributeName,attributeValue);
  }
  if (!attributeMap.containsKey("name")) {
    throwValidationException(1004,fileName,element,new String[]{"name"});
  }
 else {
    String nameValue=attributeMap.get("name");
    if (Validator.isNull(nameValue)) {
      throwValidationException(1006,fileName,element,"name");
    }
  }
  if (attributeMap.containsKey("locator")) {
    String[] disallowedAttributes={"locator-key","path","value"};
    for (    String disallowedAttribute : disallowedAttributes) {
      if (attributeMap.containsKey(disallowedAttribute)) {
        throwValidationException(1005,fileName,element,disallowedAttribute);
      }
    }
  }
 else   if (attributeMap.containsKey("locator-key") && attributeMap.containsKey("path")) {
    if (attributeMap.containsKey("value")) {
      throwValidationException(1005,fileName,element,"value");
    }
  }
 else   if (attributeMap.containsKey("locator-key")) {
    throwValidationException(1004,fileName,element,new String[]{"path"});
  }
 else   if (attributeMap.containsKey("path")) {
    throwValidationException(1004,fileName,element,new String[]{"locator-key"});
  }
  String varText=element.getText();
  if (attributeMap.containsKey("locator") || attributeMap.containsKey("locator-key") || attributeMap.containsKey("path")) {
    if (!Validator.isNull(varText)) {
      throwValidationException(1005,fileName,element,"value");
    }
  }
  if (!attributeMap.containsKey("value") && Validator.isNull(varText)) {
    if (!attributeMap.containsKey("locator") && !attributeMap.containsKey("locator-key") && !attributeMap.containsKey("path")) {
      throwValidationException(1004,fileName,element,new String[]{"value"});
    }
  }
 else {
    String varValue=attributeMap.get("value");
    if (Validator.isNull(varValue)) {
      varValue=varText;
    }
    Pattern pattern=Pattern.compile("\\$\\{([^\\}]*?)\\}");
    Matcher matcher=pattern.matcher(varValue);
    while (matcher.find()) {
      String statement=matcher.group(1);
      Pattern statementPattern=Pattern.compile("(.*)\\?(.*)\\(([^\\)]*?)\\)");
      Matcher statementMatcher=statementPattern.matcher(statement);
      if (statementMatcher.find()) {
        String operand=statementMatcher.group(1);
        String method=statementMatcher.group(2);
        if (operand.equals("") || method.equals("")) {
          throwValidationException(1006,fileName,element,"value");
        }
        if (!_methodNames.contains(method)) {
          throwValidationException(1013,fileName,element,method);
        }
      }
 else {
        if (statement.matches(".*[\\?\\(\\)\\}\\{].*") && !statement.contains("getIPAddress")) {
          throwValidationException(1006,fileName,element,"value");
        }
      }
    }
  }
  List<Element> childElements=element.elements();
  if (!childElements.isEmpty()) {
    Element childElement=childElements.get(0);
    String childElementName=childElement.getName();
    throwValidationException(1002,fileName,childElement,childElementName);
  }
}

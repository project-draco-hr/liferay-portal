{
  List<JournalArticle> latestArticles=new ArrayList<>();
  List<JournalArticle> articles=journalArticleFinder.findByReviewDate(JournalArticleConstants.CLASSNAME_ID_DEFAULT,reviewDate,_previousCheckDate);
  for (  JournalArticle article : articles) {
    long groupId=article.getGroupId();
    String articleId=article.getArticleId();
    double version=article.getVersion();
    if (!journalArticleLocalService.isLatestVersion(groupId,articleId,version)) {
      article=journalArticleLocalService.getLatestArticle(groupId,articleId);
    }
    if (!latestArticles.contains(article)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Sending review notification for article " + article.getId());
      }
      latestArticles.add(article);
      long ownerId=article.getGroupId();
      int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
      long plid=PortletKeys.PREFS_PLID_SHARED;
      String portletId=PortletProviderUtil.getPortletId(JournalArticle.class.getName(),PortletProvider.Action.EDIT);
      PortletPreferences preferences=portletPreferencesLocalService.getPreferences(article.getCompanyId(),ownerId,ownerType,plid,portletId);
      String articleURL=PortalUtil.getControlPanelFullURL(article.getGroupId(),portletId,null);
      articleURL=buildArticleURL(articleURL,article.getGroupId(),article.getFolderId(),article.getArticleId());
      sendEmail(article,articleURL,preferences,"review",new ServiceContext());
    }
  }
}

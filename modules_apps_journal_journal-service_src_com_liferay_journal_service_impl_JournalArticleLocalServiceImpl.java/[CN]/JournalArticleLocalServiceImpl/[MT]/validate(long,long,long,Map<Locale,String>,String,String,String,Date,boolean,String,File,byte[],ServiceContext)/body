{
  Locale articleDefaultLocale=LocaleUtil.fromLanguageId(LocalizationUtil.getDefaultLanguageId(content));
  if (!LanguageUtil.isAvailableLocale(groupId,articleDefaultLocale)) {
    LocaleException le=new LocaleException(LocaleException.TYPE_CONTENT,"The locale " + articleDefaultLocale + " is not available in site with groupId"+ groupId);
    le.setSourceAvailableLocales(Collections.singleton(articleDefaultLocale));
    le.setTargetAvailableLocales(LanguageUtil.getAvailableLocales(groupId));
    throw le;
  }
  if ((classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) && (titleMap.isEmpty() || Validator.isNull(titleMap.get(articleDefaultLocale)))) {
    throw new ArticleTitleException();
  }
  validateContent(content);
  DDMStructure ddmStructure=ddmStructureLocalService.getStructure(PortalUtil.getSiteGroupId(groupId),classNameLocalService.getClassNameId(JournalArticle.class),ddmStructureKey,true);
  validateDDMStructureFields(ddmStructure,classNameId,content);
  if (Validator.isNotNull(ddmTemplateKey)) {
    DDMTemplate ddmTemplate=ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(groupId),classNameLocalService.getClassNameId(DDMStructure.class),ddmTemplateKey,true);
    if (ddmTemplate.getClassPK() != ddmStructure.getStructureId()) {
      throw new NoSuchTemplateException("{templateKey=" + ddmTemplateKey + "}");
    }
  }
 else   if (classNameId == JournalArticleConstants.CLASSNAME_ID_DEFAULT) {
    throw new NoSuchTemplateException();
  }
  if ((expirationDate != null) && expirationDate.before(new Date()) && !ExportImportThreadLocal.isImportInProcess()) {
    throw new ArticleExpirationDateException();
  }
  String[] imageExtensions=PrefsPropsUtil.getStringArray(PropsKeys.JOURNAL_IMAGE_EXTENSIONS,StringPool.COMMA);
  if (!smallImage || Validator.isNotNull(smallImageURL) || (smallImageFile == null)|| (smallImageBytes == null)) {
    return;
  }
  String smallImageName=smallImageFile.getName();
  if (smallImageName != null) {
    boolean validSmallImageExtension=false;
    for (    String _imageExtension : imageExtensions) {
      if (StringPool.STAR.equals(_imageExtension) || StringUtil.endsWith(smallImageName,_imageExtension)) {
        validSmallImageExtension=true;
        break;
      }
    }
    if (!validSmallImageExtension) {
      throw new ArticleSmallImageNameException(smallImageName);
    }
  }
  long smallImageMaxSize=PrefsPropsUtil.getLong(PropsKeys.JOURNAL_IMAGE_SMALL_MAX_SIZE);
  if ((smallImageMaxSize > 0) && ((smallImageBytes == null) || (smallImageBytes.length > smallImageMaxSize))) {
    throw new ArticleSmallImageSizeException();
  }
}

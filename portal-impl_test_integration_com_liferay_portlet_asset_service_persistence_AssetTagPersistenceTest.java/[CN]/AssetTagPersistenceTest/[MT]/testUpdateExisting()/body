{
  long pk=nextLong();
  AssetTag newAssetTag=_persistence.create(pk);
  newAssetTag.setGroupId(nextLong());
  newAssetTag.setCompanyId(nextLong());
  newAssetTag.setUserId(nextLong());
  newAssetTag.setUserName(randomString());
  newAssetTag.setCreateDate(nextDate());
  newAssetTag.setModifiedDate(nextDate());
  newAssetTag.setName(randomString());
  newAssetTag.setAssetCount(nextInt());
  _persistence.update(newAssetTag,false);
  AssetTag existingAssetTag=_persistence.findByPrimaryKey(newAssetTag.getPrimaryKey());
  assertEquals(existingAssetTag.getTagId(),newAssetTag.getTagId());
  assertEquals(existingAssetTag.getGroupId(),newAssetTag.getGroupId());
  assertEquals(existingAssetTag.getCompanyId(),newAssetTag.getCompanyId());
  assertEquals(existingAssetTag.getUserId(),newAssetTag.getUserId());
  assertEquals(existingAssetTag.getUserName(),newAssetTag.getUserName());
  assertEquals(Time.getShortTimestamp(existingAssetTag.getCreateDate()),Time.getShortTimestamp(newAssetTag.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingAssetTag.getModifiedDate()),Time.getShortTimestamp(newAssetTag.getModifiedDate()));
  assertEquals(existingAssetTag.getName(),newAssetTag.getName());
  assertEquals(existingAssetTag.getAssetCount(),newAssetTag.getAssetCount());
}

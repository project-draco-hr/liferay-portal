{
  List<String> templates=new ArrayList<>();
  File file=FileUtil.getJarFile();
  if (file.isDirectory()) {
    try (DirectoryStream<Path> directoryStream=Files.newDirectoryStream(file.toPath(),TEMPLATE_BUNDLE_PREFIX + "*")){
      Iterator<Path> iterator=directoryStream.iterator();
      while (iterator.hasNext()) {
        Path templateBundleFile=iterator.next();
        Path templateBundleFileNamePath=templateBundleFile.getFileName();
        String template=templateBundleFileNamePath.toString();
        template=template.substring(TEMPLATE_BUNDLE_PREFIX.length(),template.lastIndexOf('.'));
        templates.add(template);
      }
    }
   }
 else {
    try (JarFile jarFile=new JarFile(file)){
      Enumeration<JarEntry> enumeration=jarFile.entries();
      while (enumeration.hasMoreElements()) {
        JarEntry jarEntry=enumeration.nextElement();
        if (!jarEntry.isDirectory()) {
          continue;
        }
        String template=jarEntry.getName();
        if (template.startsWith(TEMPLATE_BUNDLE_PREFIX)) {
          template=template.substring(TEMPLATE_BUNDLE_PREFIX.length(),template.indexOf("-"));
          templates.add(template);
        }
      }
    }
   }
  Collections.sort(templates);
  return templates.toArray(new String[templates.size()]);
}

{
  long companyId=PortalUtil.getCompanyId(req);
  long groupId=DAOParamUtil.getLong(req,"groupId");
  String articleId=null;
  Double version=null;
  String title=null;
  String description=null;
  String content=null;
  String type=DAOParamUtil.getString(req,"type");
  String[] structureIds=StringUtil.split(DAOParamUtil.getString(req,"structureId"));
  String[] templateIds=StringUtil.split(DAOParamUtil.getString(req,"templateId"));
  Date displayDateGT=null;
  String displayDateGTParam=ParamUtil.getString(req,"displayDateGT");
  if (Validator.isNotNull(displayDateGTParam)) {
    DateFormat displayDateGTFormat=DateUtil.getISOFormat(displayDateGTParam);
    displayDateGT=GetterUtil.getDate(displayDateGTParam,displayDateGTFormat);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("displayDateGT is " + displayDateGT);
  }
  Date displayDateLT=null;
  String displayDateLTParam=ParamUtil.getString(req,"displayDateLT");
  if (Validator.isNotNull(displayDateLTParam)) {
    DateFormat displayDateLTFormat=DateUtil.getISOFormat(displayDateLTParam);
    displayDateLT=GetterUtil.getDate(displayDateLTParam,displayDateLTFormat);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("displayDateLT is " + displayDateLT);
  }
  Boolean approved=Boolean.TRUE;
  Boolean expired=Boolean.FALSE;
  Date reviewDate=null;
  boolean andOperator=true;
  int begin=0;
  int end=ParamUtil.getInteger(req,"delta",5);
  String orderBy=ParamUtil.getString(req,"orderBy");
  String orderByCol=ParamUtil.getString(req,"orderByCol",orderBy);
  String orderByType=ParamUtil.getString(req,"orderByType");
  boolean orderByAsc=orderByType.equals("asc");
  OrderByComparator obc=new ArticleModifiedDateComparator(orderByAsc);
  if (orderByCol.equals("display-date")) {
    obc=new ArticleDisplayDateComparator(orderByAsc);
  }
  return JournalArticleLocalServiceUtil.search(companyId,groupId,articleId,version,title,description,content,type,structureIds,templateIds,displayDateGT,displayDateLT,approved,expired,reviewDate,andOperator,begin,end,obc);
}

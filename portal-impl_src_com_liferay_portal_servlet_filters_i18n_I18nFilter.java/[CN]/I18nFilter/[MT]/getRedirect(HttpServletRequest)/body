{
  if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 0) {
    return null;
  }
  String method=request.getMethod();
  if (method.equals(HttpMethods.POST)) {
    return null;
  }
  String contextPath=PortalUtil.getPathContext();
  String requestURI=request.getRequestURI();
  if (Validator.isNotNull(contextPath) && requestURI.contains(contextPath)) {
    requestURI=requestURI.substring(contextPath.length());
  }
  requestURI=StringUtil.replace(requestURI,StringPool.DOUBLE_SLASH,StringPool.SLASH);
  String i18nLanguageId=prependI18nLanguageId(request,PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE);
  if (i18nLanguageId == null) {
    return null;
  }
  Locale locale=LocaleUtil.fromLanguageId(i18nLanguageId);
  if (!LanguageUtil.isAvailableLocale(locale)) {
    return null;
  }
  String i18nPathLanguageId=PortalUtil.getI18nPathLanguageId(locale,i18nLanguageId);
  String i18nPath=StringPool.SLASH.concat(i18nPathLanguageId);
  if (requestURI.contains(i18nPath.concat(StringPool.SLASH))) {
    return null;
  }
  String redirect=contextPath + i18nPath + requestURI;
  LayoutSet layoutSet=(LayoutSet)request.getAttribute(WebKeys.VIRTUAL_HOST_LAYOUT_SET);
  if ((layoutSet != null) && requestURI.startsWith(PropsValues.LAYOUT_FRIENDLY_URL_PUBLIC_SERVLET_MAPPING)) {
    int[] groupFriendlyURLIndex=PortalUtil.getGroupFriendlyURLIndex(requestURI);
    if (groupFriendlyURLIndex != null) {
      int x=groupFriendlyURLIndex[0];
      int y=groupFriendlyURLIndex[1];
      String groupFriendlyURL=requestURI.substring(x,y);
      Group group=layoutSet.getGroup();
      if (groupFriendlyURL.equals(group.getFriendlyURL())) {
        redirect=contextPath + i18nPath + requestURI.substring(y);
      }
    }
  }
  String queryString=request.getQueryString();
  if (queryString == null) {
    queryString=(String)request.getAttribute(JavaConstants.JAVAX_SERVLET_FORWARD_QUERY_STRING);
  }
  if (Validator.isNotNull(queryString)) {
    redirect+=StringPool.QUESTION + request.getQueryString();
  }
  return redirect;
}

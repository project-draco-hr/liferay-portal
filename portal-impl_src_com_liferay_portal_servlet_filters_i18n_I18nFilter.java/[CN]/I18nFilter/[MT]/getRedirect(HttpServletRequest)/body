{
  if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 0) {
    return null;
  }
  String method=request.getMethod();
  if (method.equals(HttpMethods.POST)) {
    return null;
  }
  String contextPath=PortalUtil.getPathContext();
  String requestURI=request.getRequestURI();
  if (Validator.isNotNull(contextPath) && requestURI.contains(contextPath)) {
    requestURI=requestURI.substring(contextPath.length());
  }
  requestURI=StringUtil.replace(requestURI,StringPool.DOUBLE_SLASH,StringPool.SLASH);
  String i18nLanguageId=requestURI.substring(1);
  int pos=requestURI.indexOf(CharPool.SLASH,1);
  if (pos != -1) {
    i18nLanguageId=i18nLanguageId.substring(0,pos - 1);
  }
  if (_languageIds.contains(i18nLanguageId)) {
    return null;
  }
  String userLanguageId=null;
  User user=(User)request.getAttribute(WebKeys.USER);
  if (user != null) {
    userLanguageId=user.getLanguageId();
  }
  String guestLanguageId=userLanguageId;
  if (Validator.isNull(guestLanguageId)) {
    guestLanguageId=CookieKeys.getCookie(request,CookieKeys.GUEST_LANGUAGE_ID,false);
  }
  String defaultLanguageId=LocaleUtil.toLanguageId(LocaleUtil.getDefault());
  if (Validator.isNull(guestLanguageId)) {
    guestLanguageId=defaultLanguageId;
  }
  if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 1) {
    if (!defaultLanguageId.equals(guestLanguageId)) {
      i18nLanguageId=guestLanguageId;
    }
 else {
      return null;
    }
  }
 else   if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 2) {
    i18nLanguageId=LocaleUtil.toLanguageId(PortalUtil.getLocale(request));
  }
 else   if (PropsValues.LOCALE_PREPEND_FRIENDLY_URL_STYLE == 3) {
    if (Validator.isNotNull(userLanguageId)) {
      HttpSession session=request.getSession();
      Locale locale=(Locale)session.getAttribute(Globals.LOCALE_KEY);
      if (!userLanguageId.equals(LocaleUtil.toLanguageId(locale))) {
        i18nLanguageId=LocaleUtil.toLanguageId(locale);
      }
 else {
        return null;
      }
    }
  }
  if (i18nLanguageId == null) {
    return null;
  }
  Locale locale=LocaleUtil.fromLanguageId(i18nLanguageId);
  if (!LanguageUtil.isAvailableLocale(locale)) {
    return null;
  }
  String i18nPathLanguageId=PortalUtil.getI18nPathLanguageId(locale,i18nLanguageId);
  String i18nPath=StringPool.SLASH.concat(i18nPathLanguageId);
  if (requestURI.contains(i18nPath.concat(StringPool.SLASH))) {
    return null;
  }
  String redirect=contextPath + i18nPath + requestURI;
  LayoutSet layoutSet=(LayoutSet)request.getAttribute(WebKeys.VIRTUAL_HOST_LAYOUT_SET);
  if (layoutSet != null) {
    int[] groupFriendlyURLIndex=PortalUtil.getGroupFriendlyURLIndex(requestURI);
    if (groupFriendlyURLIndex != null) {
      int x=groupFriendlyURLIndex[0];
      int y=groupFriendlyURLIndex[1];
      String groupFriendlyURL=requestURI.substring(x,y);
      Group group=layoutSet.getGroup();
      if (groupFriendlyURL.equals(group.getFriendlyURL())) {
        redirect=contextPath + i18nPath + requestURI.substring(y);
      }
    }
  }
  String queryString=request.getQueryString();
  if (Validator.isNotNull(queryString)) {
    redirect+=StringPool.QUESTION + request.getQueryString();
  }
  return redirect;
}

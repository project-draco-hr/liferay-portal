{
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  boolean enabled=DependencyManagementThreadLocal.isEnabled();
  try {
    currentThread.setContextClassLoader(getClassLoader());
    DependencyManagementThreadLocal.setEnabled(false);
    if (initParameters != null) {
      Set<Entry<String,String>> set=initParameters.entrySet();
      Iterator<Entry<String,String>> iterator=set.iterator();
      while (iterator.hasNext()) {
        Entry<String,String> entry=iterator.next();
        String value=entry.getValue();
        if (_initParameters.containsKey(value)) {
          continue;
        }
        _initParameters.put(entry.getKey(),value);
      }
    }
    if (listener instanceof HttpSessionActivationListener) {
      PortletSessionListenerManager.addHttpSessionActivationListener((HttpSessionActivationListener)listener);
    }
    if (listener instanceof HttpSessionAttributeListener) {
      PortletSessionListenerManager.addHttpSessionAttributeListener((HttpSessionAttributeListener)listener);
    }
    if (listener instanceof HttpSessionBindingListener) {
      PortletSessionListenerManager.addHttpSessionBindingListener((HttpSessionBindingListener)listener);
    }
    if (listener instanceof HttpSessionListener) {
      PortletSessionListenerManager.addHttpSessionListener((HttpSessionListener)listener);
    }
    if (listener instanceof ServletContextAttributeListener) {
      _servletContextAttributeListeners.add((ServletContextAttributeListener)listener);
    }
    if (listener instanceof ServletContextListener) {
      ServletContextListener servletContextListener=(ServletContextListener)listener;
      ServletContextEvent servletContextEvent=new ServletContextEvent(this);
      servletContextListener.contextInitialized(servletContextEvent);
      _servletContextListeners.add(servletContextListener);
    }
    if (listener instanceof ServletRequestAttributeListener) {
      _servletRequestAttributeListeners.add((ServletRequestAttributeListener)listener);
    }
    if (listener instanceof ServletRequestListener) {
      _servletRequestListeners.add((ServletRequestListener)listener);
    }
  }
  finally {
    DependencyManagementThreadLocal.setEnabled(enabled);
    currentThread.setContextClassLoader(contextClassLoader);
  }
}

{
  try {
    long groupId=getGroupId(req);
    String version=getVersion(req);
    String baseImageURL=getBaseImageURL(req);
    Date oldestDate=getOldestDate(req);
    int maxNumOfVersions=ParamUtil.getInteger(req,"maxNumOfVersions");
    Properties repoSettings=getRepoSettings(req);
    if (_log.isDebugEnabled()) {
      _log.debug("Group ID " + groupId);
      _log.debug("Base image URL " + baseImageURL);
      _log.debug("Oldtest date " + oldestDate);
      _log.debug("Maximum number of versions " + maxNumOfVersions);
    }
    String repositoryXML=SCProductEntryLocalServiceUtil.getRepositoryXML(groupId,version,baseImageURL,oldestDate,maxNumOfVersions,repoSettings);
    String fileName=null;
    byte[] byteArray=repositoryXML.getBytes("UTF-8");
    ServletResponseUtil.sendFile(res,fileName,byteArray,ContentTypes.TEXT_XML_UTF8);
  }
 catch (  NoSuchGroupException nsge) {
    PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND,nsge,req,res);
  }
catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
    PortalUtil.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,e,req,res);
  }
}

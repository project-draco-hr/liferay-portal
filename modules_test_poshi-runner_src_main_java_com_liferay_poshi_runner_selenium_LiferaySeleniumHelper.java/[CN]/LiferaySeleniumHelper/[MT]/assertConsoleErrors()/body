{
  if (!PropsValues.TEST_ASSERT_CONSOLE_ERRORS) {
    return;
  }
  String content=getTestConsoleLogFileContent();
  if (content.equals("")) {
    return;
  }
  SAXReader saxReader=new SAXReader();
  content="<log4j>" + content + "</log4j>";
  content=content.replaceAll("log4j:","");
  InputStream inputStream=new ByteArrayInputStream(content.getBytes("UTF-8"));
  Document document=saxReader.read(inputStream);
  Element rootElement=document.getRootElement();
  List<Element> eventElements=rootElement.elements("event");
  List<Exception> exceptions=new ArrayList<>();
  for (  Element eventElement : eventElements) {
    String level=eventElement.attributeValue("level");
    if (level.equals("ERROR")) {
      String timestamp=eventElement.attributeValue("timestamp");
      if (_errorTimestamps.contains(timestamp)) {
        continue;
      }
      _errorTimestamps.add(timestamp);
      Element messageElement=eventElement.element("message");
      String messageText=messageElement.getText();
      if (isIgnorableErrorLine(messageText)) {
        continue;
      }
      StringBuilder sb=new StringBuilder();
      sb.append("LIFERAY_ERROR: ");
      sb.append(messageText);
      System.out.println(sb.toString());
      exceptions.add(new PoshiRunnerWarningException(sb.toString()));
    }
  }
  if (!exceptions.isEmpty()) {
    addToLiferayExceptions(exceptions);
    throw exceptions.get(0);
  }
}

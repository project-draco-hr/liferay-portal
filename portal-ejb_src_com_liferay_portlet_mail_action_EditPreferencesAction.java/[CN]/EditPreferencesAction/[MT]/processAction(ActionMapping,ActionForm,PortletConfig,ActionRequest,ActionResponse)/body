{
  String cmd=ParamUtil.getString(req,Constants.CMD);
  if (!cmd.equals(Constants.UPDATE)) {
    return;
  }
  PortletPreferences prefs=req.getPreferences();
  String tabs1=ParamUtil.getString(req,"tabs1");
  if (tabs1.equals("forward-address")) {
    String[] forwardAddressArray=StringUtil.split(ParamUtil.getString(req,"forwardAddress"),"\n");
    List forwardAddressList=new ArrayList();
    for (int i=0; i < forwardAddressArray.length; i++) {
      if (Validator.isEmailAddress(forwardAddressArray[i])) {
        forwardAddressList.add(forwardAddressArray[i]);
      }
    }
    if (forwardAddressList.size() > 0) {
      prefs.setValue("forward-address",StringUtil.merge(forwardAddressArray,StringPool.SPACE));
    }
 else {
      prefs.setValue("forward-address",StringPool.BLANK);
    }
    try {
      MailServiceUtil.addForward(req.getRemoteUser(),forwardAddressList);
    }
 catch (    SystemException se) {
      throw new PortletException(se);
    }
  }
 else   if (tabs1.equals("signature")) {
    String signature=ParamUtil.getString(req,"signature");
    prefs.setValue("signature",signature);
  }
 else   if (tabs1.equals("vacation-message")) {
    String vacationMessage=ParamUtil.getString(req,"vacationMessage");
    prefs.setValue("vacation-message",vacationMessage);
    try {
      User user=PortalUtil.getUser(req);
      MailServiceUtil.addVacationMessage(user.getUserId(),user.getEmailAddress(),vacationMessage);
    }
 catch (    SystemException se) {
      throw new PortletException(se);
    }
  }
  prefs.store();
  SessionMessages.add(req,config.getPortletName() + ".doEdit");
}

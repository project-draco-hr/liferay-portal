{
  long calendarBookingId=ParamUtil.getLong(actionRequest,"calendarBookingId");
  long calendarId=ParamUtil.getLong(actionRequest,"calendarId");
  Calendar calendar=_calendarService.getCalendar(calendarId);
  long[] childCalendarIds=ParamUtil.getLongValues(actionRequest,"childCalendarIds");
  Map<Locale,String> titleMap=LocalizationUtil.getLocalizationMap(actionRequest,"title");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  String location=ParamUtil.getString(actionRequest,"location");
  java.util.Calendar startTimeJCalendar=getJCalendar(actionRequest,"startTime");
  java.util.Calendar endTimeJCalendar=getJCalendar(actionRequest,"endTime");
  boolean allDay=ParamUtil.getBoolean(actionRequest,"allDay");
  String recurrence=getRecurrence(actionRequest,calendar.getTimeZone());
  long[] reminders=getReminders(actionRequest);
  String[] remindersType=getRemindersType(actionRequest);
  int instanceIndex=ParamUtil.getInteger(actionRequest,"instanceIndex");
  boolean updateCalendarBookingInstance=ParamUtil.getBoolean(actionRequest,"updateCalendarBookingInstance");
  boolean allFollowing=ParamUtil.getBoolean(actionRequest,"allFollowing");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(CalendarBooking.class.getName(),actionRequest);
  CalendarBooking calendarBooking=updateCalendarBooking(calendarBookingId,calendar,childCalendarIds,titleMap,descriptionMap,location,startTimeJCalendar.getTimeInMillis(),endTimeJCalendar.getTimeInMillis(),allDay,recurrence,reminders,remindersType,instanceIndex,updateCalendarBookingInstance,allFollowing,serviceContext);
  String redirect=getRedirect(actionRequest,actionResponse);
  redirect=HttpUtil.setParameter(redirect,actionResponse.getNamespace() + "calendarBookingId",calendarBooking.getCalendarBookingId());
  actionRequest.setAttribute(WebKeys.REDIRECT,redirect);
}

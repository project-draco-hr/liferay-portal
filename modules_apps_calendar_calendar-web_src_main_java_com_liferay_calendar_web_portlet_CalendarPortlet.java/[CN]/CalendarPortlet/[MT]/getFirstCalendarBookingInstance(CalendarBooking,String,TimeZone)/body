{
  if (Validator.isNull(recurrence)) {
    return calendarBooking;
  }
  Recurrence recurrenceObj=RecurrenceSerializer.deserialize(recurrence,calendarBooking.getTimeZone());
  List<Integer> daysOfWeek=getDaysOfWeek(recurrenceObj);
  java.util.Calendar startTimeJCalendar=CalendarFactoryUtil.getCalendar(calendarBooking.getStartTime(),timeZone);
  int startTimeDayOfWeek=startTimeJCalendar.get(java.util.Calendar.DAY_OF_WEEK);
  if ((recurrenceObj.getFrequency() == Frequency.WEEKLY) && !daysOfWeek.contains(startTimeDayOfWeek)) {
    calendarBooking.setRecurrence(recurrence);
    calendarBooking=RecurrenceUtil.getCalendarBookingInstance(calendarBooking,1);
  }
  return calendarBooking;
}

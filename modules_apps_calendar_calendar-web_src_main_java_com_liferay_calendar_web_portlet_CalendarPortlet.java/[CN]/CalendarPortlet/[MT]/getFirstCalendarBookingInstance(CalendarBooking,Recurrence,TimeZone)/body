{
  if (recurrenceObj == null) {
    return calendarBooking;
  }
  List<Integer> daysOfWeek=getDaysOfWeek(recurrenceObj);
  java.util.Calendar startTimeJCalendar=CalendarFactoryUtil.getCalendar(calendarBooking.getStartTime(),timeZone);
  int startTimeDayOfWeek=startTimeJCalendar.get(java.util.Calendar.DAY_OF_WEEK);
  if ((recurrenceObj.getFrequency() == Frequency.WEEKLY) && !daysOfWeek.contains(startTimeDayOfWeek)) {
    calendarBooking.setRecurrence(RecurrenceSerializer.serialize(recurrenceObj));
    java.util.Calendar firstDayJCalendar=JCalendarUtil.getJCalendar(calendarBooking.getStartTime(),timeZone);
    firstDayJCalendar.set(java.util.Calendar.DAY_OF_WEEK_IN_MONTH,startTimeJCalendar.get(java.util.Calendar.DAY_OF_WEEK_IN_MONTH));
    firstDayJCalendar.set(java.util.Calendar.DAY_OF_WEEK,7);
    calendarBooking.setEndTime(firstDayJCalendar.getTimeInMillis() + calendarBooking.getDuration());
    calendarBooking.setStartTime(firstDayJCalendar.getTimeInMillis());
    calendarBooking=RecurrenceUtil.getCalendarBookingInstance(calendarBooking,1);
  }
  return calendarBooking;
}

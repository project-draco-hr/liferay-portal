{
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long calendarBookingId=ParamUtil.getLong(resourceRequest,"calendarBookingId");
  int instanceIndex=ParamUtil.getInteger(resourceRequest,"instanceIndex");
  long calendarId=ParamUtil.getLong(resourceRequest,"calendarId");
  Calendar calendar=_calendarService.getCalendar(calendarId);
  String title=ParamUtil.getString(resourceRequest,"title");
  java.util.Calendar startTimeJCalendar=getJCalendar(resourceRequest,"startTime");
  java.util.Calendar endTimeJCalendar=getJCalendar(resourceRequest,"endTime");
  boolean allDay=ParamUtil.getBoolean(resourceRequest,"allDay");
  String recurrence=ParamUtil.getString(resourceRequest,"recurrence");
  boolean updateInstance=ParamUtil.getBoolean(resourceRequest,"updateInstance");
  boolean allFollowing=ParamUtil.getBoolean(resourceRequest,"allFollowing");
  CalendarBooking calendarBooking=_calendarBookingService.fetchCalendarBooking(calendarBookingId);
  long[] childCalendarIds;
  Map<Locale,String> titleMap;
  Map<Locale,String> descriptionMap;
  String location;
  long[] reminders;
  String[] remindersType;
  if (calendarBooking != null) {
    childCalendarIds=_calendarBookingLocalService.getChildCalendarIds(calendarBookingId,calendarId);
    titleMap=calendarBooking.getTitleMap();
    descriptionMap=calendarBooking.getDescriptionMap();
    location=calendarBooking.getLocation();
    reminders=new long[]{calendarBooking.getFirstReminder(),calendarBooking.getSecondReminder()};
    remindersType=new String[]{calendarBooking.getFirstReminderType(),calendarBooking.getSecondReminderType()};
  }
 else {
    childCalendarIds=new long[0];
    titleMap=new HashMap<>();
    descriptionMap=new HashMap<>();
    location=null;
    reminders=new long[]{0,0};
    remindersType=new String[]{"email","email"};
  }
  titleMap.put(themeDisplay.getLocale(),title);
  ServiceContext serviceContext=ServiceContextFactory.getInstance(CalendarBooking.class.getName(),resourceRequest);
  calendarBooking=updateCalendarBooking(calendarBookingId,calendar,childCalendarIds,titleMap,descriptionMap,location,startTimeJCalendar.getTimeInMillis(),endTimeJCalendar.getTimeInMillis(),allDay,recurrence,reminders,remindersType,instanceIndex,updateInstance,allFollowing,serviceContext);
  JSONObject jsonObject=CalendarUtil.toCalendarBookingJSONObject(themeDisplay,calendarBooking,themeDisplay.getTimeZone());
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}

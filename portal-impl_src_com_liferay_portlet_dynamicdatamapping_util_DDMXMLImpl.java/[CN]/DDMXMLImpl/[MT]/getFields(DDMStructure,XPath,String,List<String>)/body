{
  Document document=null;
  try {
    document=SAXReaderUtil.read(xml);
  }
 catch (  DocumentException e) {
    return null;
  }
  if ((xPath != null) && !xPath.booleanValueOf(document)) {
    return null;
  }
  Fields fields=new Fields();
  Element rootElement=document.getRootElement();
  List<Element> dynamicElementElements=rootElement.elements("dynamic-element");
  for (  Element dynamicElementElement : dynamicElementElements) {
    String defaultLanguageId=dynamicElementElement.attributeValue("default-language-id");
    String fieldName=dynamicElementElement.attributeValue("name");
    if (!structure.hasField(fieldName) || ((fieldNames != null) && !fieldNames.contains(fieldName))) {
      continue;
    }
    String fieldDataType=structure.getFieldDataType(fieldName);
    List<Element> dynamicContentElements=dynamicElementElement.elements("dynamic-content");
    for (    Element dynamicContentElement : dynamicContentElements) {
      String fieldValue=dynamicContentElement.getText();
      String languageId=dynamicContentElement.attributeValue("language-id");
      Locale locale=LocaleUtil.fromLanguageId(languageId);
      Serializable fieldValueSerializable=FieldConstants.getSerializable(fieldDataType,fieldValue);
      Field field=fields.get(fieldName);
      if (field == null) {
        field=new Field();
        field.setDefaultLocale(LocaleUtil.fromLanguageId(defaultLanguageId));
        field.setDDMStructureId(structure.getStructureId());
        field.setName(fieldName);
        field.setValue(locale,fieldValueSerializable);
        fields.put(field);
      }
 else {
        field.addValue(locale,fieldValueSerializable);
      }
    }
  }
  return fields;
}

{
  Document document=null;
  try {
    document=SAXReaderUtil.read(xml);
  }
 catch (  DocumentException e) {
    return null;
  }
  if ((xPath != null) && !xPath.booleanValueOf(document)) {
    return null;
  }
  Fields fields=new Fields();
  Element rootElement=document.getRootElement();
  List<Element> dynamicElementElements=rootElement.elements("dynamic-element");
  for (  Element dynamicElementElement : dynamicElementElements) {
    String fieldName=dynamicElementElement.attributeValue("name");
    String fieldValue=dynamicElementElement.elementText("dynamic-content");
    if (!structure.hasField(fieldName) || ((fieldNames != null) && !fieldNames.contains(fieldName))) {
      continue;
    }
    String fieldDataType=structure.getFieldDataType(fieldName);
    Serializable fieldValueSerializable=FieldConstants.getSerializable(fieldDataType,fieldValue);
    Field field=fields.get(fieldName);
    if (field == null) {
      field=new Field(structure.getStructureId(),fieldName,fieldValueSerializable);
      fields.put(field);
    }
 else {
      field.addValue(fieldValueSerializable);
    }
  }
  return fields;
}

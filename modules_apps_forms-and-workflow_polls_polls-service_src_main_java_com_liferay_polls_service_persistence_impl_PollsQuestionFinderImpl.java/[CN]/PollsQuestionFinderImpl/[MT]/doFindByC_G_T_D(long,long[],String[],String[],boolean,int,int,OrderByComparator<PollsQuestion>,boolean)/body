{
  titles=CustomSQLUtil.keywords(titles);
  descriptions=CustomSQLUtil.keywords(descriptions,false);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(getClass(),FIND_BY_C_G_T_D);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,PollsQuestion.class.getName(),"PollsQuestion.questionId",groupIds);
    }
    sql=StringUtil.replace(sql,"[$GROUP_ID$]",getGroupIds(groupIds));
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(PollsQuestion.title)",StringPool.LIKE,false,titles);
    sql=CustomSQLUtil.replaceKeywords(sql,"PollsQuestion.description",StringPool.LIKE,true,descriptions);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sql=CustomSQLUtil.replaceOrderBy(sql,orderByComparator);
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addEntity("PollsQuestion",PollsQuestionImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    if (groupIds != null) {
      qPos.add(groupIds);
    }
    qPos.add(titles,2);
    qPos.add(descriptions,2);
    return (List<PollsQuestion>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

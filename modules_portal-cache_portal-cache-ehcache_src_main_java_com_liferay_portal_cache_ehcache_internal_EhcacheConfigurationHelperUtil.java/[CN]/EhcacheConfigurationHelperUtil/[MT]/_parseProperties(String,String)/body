{
  Properties properties=new Properties();
  if (propertiesString == null) {
    return properties;
  }
  if (propertySeparator == null) {
    propertySeparator=StringPool.COMMA;
  }
  String propertyLines=propertiesString.trim();
  propertyLines=StringUtil.replace(propertyLines,propertySeparator,StringPool.NEW_LINE);
  try {
    properties.load(new UnsyncStringReader(propertyLines));
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
  String portalPropertyKey=(String)properties.remove(_PORTAL_PROPERTY_KEY);
  if (Validator.isNull(portalPropertyKey)) {
    return properties;
  }
  String[] values=props.getArray(portalPropertyKey);
  if (_log.isInfoEnabled()) {
    _log.info("portalPropertyKey " + portalPropertyKey + " has value "+ Arrays.toString(values));
  }
  for (  String value : values) {
    String[] valueParts=StringUtil.split(value,CharPool.EQUAL);
    if (valueParts.length != 2) {
      if (_log.isWarnEnabled()) {
        _log.warn("Ignore malformed value " + value);
      }
      continue;
    }
    properties.put(valueParts[0],_unescape(valueParts[1]));
  }
  return properties;
}

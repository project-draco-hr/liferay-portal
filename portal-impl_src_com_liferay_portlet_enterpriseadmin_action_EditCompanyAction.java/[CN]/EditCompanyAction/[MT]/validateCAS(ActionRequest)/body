{
  String casEnabled=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_AUTH_ENABLED + SETTINGS_POSTFIX);
  if (casEnabled == null || casEnabled.equals("false")) {
    return;
  }
  String casLoginUrl=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_LOGIN_URL + SETTINGS_POSTFIX);
  String casLogoutUrl=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_LOGOUT_URL + SETTINGS_POSTFIX);
  String casServerName=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_SERVER_NAME + SETTINGS_POSTFIX);
  String casServerUrl=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_SERVER_URL + SETTINGS_POSTFIX);
  String casServiceUrl=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_SERVICE_URL + SETTINGS_POSTFIX);
  String casNoSuchUserRedirectUrl=ParamUtil.getString(actionRequest,SETTINGS_PREFIX + PropsKeys.CAS_NO_SUCH_USER_REDIRECT_URL + SETTINGS_POSTFIX);
  if (casLoginUrl.equals("")) {
    SessionErrors.add(actionRequest,"casLoginUrlIsBlank");
  }
 else {
    if (!Validator.isUrl(casLoginUrl)) {
      SessionErrors.add(actionRequest,"casLoginUrlInvalid");
    }
  }
  if (casLogoutUrl.equals("")) {
    SessionErrors.add(actionRequest,"casLogoutUrlIsBlank");
  }
 else {
    if (!Validator.isUrl(casLogoutUrl)) {
      SessionErrors.add(actionRequest,"casLogoutUrlInvalid");
    }
  }
  if (casServerName.equals("")) {
    SessionErrors.add(actionRequest,"casServerNameIsBlank");
  }
  if (!casServerUrl.equals("") && !casServiceUrl.equals("")) {
    SessionErrors.add(actionRequest,"casServerUrlServiceUrlBothCannotBeSet");
  }
  if (casServerUrl.equals("") && casServiceUrl.equals("")) {
    SessionErrors.add(actionRequest,"casServerUrlServiceUrlNeitherIsSet");
  }
  if (!casServerUrl.equals("") && !Validator.isUrl(casServerUrl)) {
    SessionErrors.add(actionRequest,"casServerUrlInvalid");
  }
  if (!casServiceUrl.equals("") && !Validator.isUrl(casServiceUrl)) {
    SessionErrors.add(actionRequest,"casServiceUrlInvalid");
  }
  if (!casNoSuchUserRedirectUrl.equals("") && !Validator.isUrl(casNoSuchUserRedirectUrl)) {
    SessionErrors.add(actionRequest,"casNoSuchUserUrlInvalid");
  }
}

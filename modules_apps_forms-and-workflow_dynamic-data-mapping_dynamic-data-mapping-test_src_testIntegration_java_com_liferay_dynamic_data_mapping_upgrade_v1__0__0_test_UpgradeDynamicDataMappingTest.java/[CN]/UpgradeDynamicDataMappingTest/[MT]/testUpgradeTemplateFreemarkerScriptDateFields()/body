{
  addStructure(_structureId,DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,DDMStructureConstants.VERSION_DEFAULT,read("ddm-structure-with-two-date-fields.xsd"),"xml");
  addTemplate(_templateId,_structureId,null,read("ddm-template-with-two-date-fields.ftl"),"ftl",DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY);
  _upgradeDynamicDataMapping.upgrade();
  String actualDefinition=getTemplateScript(_templateId);
  String[] dateFieldNames=new String[]{"date1","date2"};
  StringBundler sb=null;
  for (  String dateFieldName : dateFieldNames) {
    sb=new StringBundler(5);
    sb.append("<#assign ");
    sb.append(dateFieldName);
    sb.append("_Data = getterUtil.getString(");
    sb.append(dateFieldName);
    sb.append(".getData())>");
    Assert.assertTrue(actualDefinition.contains(sb.toString()));
    sb=new StringBundler(3);
    sb.append("<#if validator.isNotNull(");
    sb.append(dateFieldName);
    sb.append("_Data)>");
    Assert.assertTrue(actualDefinition.contains(sb.toString()));
    sb=new StringBundler(5);
    sb.append("<#assign ");
    sb.append(dateFieldName);
    sb.append("_DateObj = dateUtil.parseDate(\"yyyy-MM-dd\", ");
    sb.append(dateFieldName);
    sb.append("_Data, locale)>");
    Assert.assertTrue(actualDefinition.contains(sb.toString()));
  }
}

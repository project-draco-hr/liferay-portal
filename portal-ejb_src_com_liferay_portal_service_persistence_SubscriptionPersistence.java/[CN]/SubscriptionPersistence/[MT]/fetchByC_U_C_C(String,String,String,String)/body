{
  String pk=SubscriptionPool.getByC_U_C_C(companyId,userId,className,classPK);
  if (pk != null) {
    Subscription subscription=fetchByPrimaryKey(pk);
    if (subscription != null) {
      return subscription;
    }
  }
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM com.liferay.portal.model.Subscription WHERE ");
    if (companyId == null) {
      query.append("companyId IS NULL");
    }
 else {
      query.append("companyId = ?");
    }
    query.append(" AND ");
    if (userId == null) {
      query.append("userId IS NULL");
    }
 else {
      query.append("userId = ?");
    }
    query.append(" AND ");
    if (className == null) {
      query.append("className IS NULL");
    }
 else {
      query.append("className = ?");
    }
    query.append(" AND ");
    if (classPK == null) {
      query.append("classPK IS NULL");
    }
 else {
      query.append("classPK = ?");
    }
    query.append(" ");
    Query q=session.createQuery(query.toString());
    int queryPos=0;
    if (companyId != null) {
      q.setString(queryPos++,companyId);
    }
    if (userId != null) {
      q.setString(queryPos++,userId);
    }
    if (className != null) {
      q.setString(queryPos++,className);
    }
    if (classPK != null) {
      q.setString(queryPos++,classPK);
    }
    List list=q.list();
    if (list.size() == 0) {
      return null;
    }
    Subscription subscription=(Subscription)list.get(0);
    SubscriptionPool.putByC_U_C_C(companyId,userId,className,classPK,subscription.getPrimaryKey());
    return subscription;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

{
  String path=ExportImportPathUtil.getModelPath(stagedModel);
  if (portletDataContext.isPathProcessed(path)) {
    return;
  }
  try {
    ExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(EVENT_STAGED_MODEL_IMPORT_STARTED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),new TransientValue<T>(stagedModel));
    ManifestSummary manifestSummary=portletDataContext.getManifestSummary();
    PortletDataHandlerStatusMessageSenderUtil.sendStatusMessage("stagedModel",stagedModel,manifestSummary);
    if (stagedModel instanceof LocalizedModel) {
      LocalizedModel localizedModel=(LocalizedModel)stagedModel;
      localizedModel.prepareLocalizedFieldsForImport();
    }
    restoreStagedModel(portletDataContext,stagedModel);
    importAssetCategories(portletDataContext,stagedModel);
    importAssetTags(portletDataContext,stagedModel);
    importReferenceStagedModels(portletDataContext,stagedModel);
    doImportStagedModel(portletDataContext,stagedModel);
    importComments(portletDataContext,stagedModel);
    importRatings(portletDataContext,stagedModel);
    manifestSummary.incrementModelAdditionCount(stagedModel.getStagedModelType());
    ExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(EVENT_STAGED_MODEL_IMPORT_SUCCEEDED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),new TransientValue<T>(stagedModel));
  }
 catch (  PortletDataException pde) {
    ExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(EVENT_STAGED_MODEL_IMPORT_FAILED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),new TransientValue<T>(stagedModel),pde);
    throw pde;
  }
catch (  Throwable t) {
    ExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(EVENT_STAGED_MODEL_IMPORT_FAILED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),new TransientValue<T>(stagedModel),t);
    throw new PortletDataException(t);
  }
}

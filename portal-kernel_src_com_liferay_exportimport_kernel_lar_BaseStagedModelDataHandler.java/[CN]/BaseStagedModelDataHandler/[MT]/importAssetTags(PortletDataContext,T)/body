{
  List<Element> referenceElements=portletDataContext.getReferenceElements(stagedModel,AssetTag.class);
  List<Long> assetTagIds=new ArrayList<>(referenceElements.size());
  for (  Element referenceElement : referenceElements) {
    long classPK=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,stagedModel,AssetTag.class,classPK);
    assetTagIds.add(classPK);
  }
  Map<Long,Long> assetTagIdsMap=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(AssetTag.class);
  Set<String> assetTagNames=new HashSet<>();
  for (  long assetTagId : assetTagIds) {
    long importedStagedAssetTagId=MapUtil.getLong(assetTagIdsMap,assetTagId,assetTagId);
    AssetTag assetTag=AssetTagLocalServiceUtil.fetchAssetTag(importedStagedAssetTagId);
    if (assetTag != null) {
      assetTagNames.add(assetTag.getName());
    }
  }
  if (assetTagNames.isEmpty()) {
    return;
  }
  portletDataContext.addAssetTags(ExportImportClassedModelUtil.getClassName(stagedModel),ExportImportClassedModelUtil.getClassPK(stagedModel),assetTagNames.toArray(new String[assetTagNames.size()]));
}

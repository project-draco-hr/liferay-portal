{
  String rootDir="../";
  String portalWebDir="portal-web/docroot/";
  if (!FileUtil.exists(rootDir + portalWebDir + "WEB-INF/web.xml")) {
    portalWebDir="ext-web/tmp/";
  }
  File lookAndFeelFile=new File(rootDir + portalWebDir + lookAndFeelFileName);
  if (!lookAndFeelFile.exists()) {
    return;
  }
  String outDirectory=rootDir + portalWebDir + "html/themes/classic/color_schemes/";
  SAXReader reader=new SAXReader();
  reader.setEntityResolver(new EntityResolver());
  Document doc=null;
  try {
    doc=reader.read(lookAndFeelFile);
  }
 catch (  DocumentException de) {
    de.printStackTrace();
  }
  Element root=doc.getRootElement();
  Element classicThemeEl=null;
  Iterator itr=root.elements("theme").iterator();
  while (itr.hasNext()) {
    Element theme=(Element)itr.next();
    String id=theme.attributeValue("id");
    if (id.equals(Theme.DEFAULT_THEME_ID)) {
      classicThemeEl=theme;
    }
  }
  if (classicThemeEl == null) {
    return;
  }
  itr=classicThemeEl.elements("color-scheme").iterator();
  while (itr.hasNext()) {
    Element colorScheme=(Element)itr.next();
    String id=colorScheme.attributeValue("id");
    String settings=colorScheme.getText();
    Properties p=new NullSafeProperties();
    PropertiesUtil.load(p,settings);
    PropertiesUtil.trimKeys(p);
    if (overwrite || !new File(outDirectory + id).exists()) {
      File file=new File(outDirectory + id);
      file.mkdirs();
      OutputStream os=null;
      os=new FileOutputStream(outDirectory + id + "/button_gradient.gif");
      createButton(os,p.getProperty(ColorScheme.PORTLET_MENU_BG),p.getProperty(ColorScheme.PORTLET_TITLE_BG));
      os.close();
      Enumeration enu=p.propertyNames();
      while (enu.hasMoreElements()) {
        String key=(String)enu.nextElement();
        if (key.endsWith("-bg")) {
          String fileName=outDirectory + id + "/"+ StringUtil.replace(key,"-","_");
          os=new FileOutputStream(fileName + "_x.gif");
          createDottedX(os,p.getProperty(key));
          os.close();
          os=new FileOutputStream(fileName + "_y.gif");
          createDottedY(os,p.getProperty(key));
          os.close();
        }
      }
      os=new FileOutputStream(outDirectory + id + "/portlet_title_bg_gradient.gif");
      createGradient(os,p.getProperty(ColorScheme.PORTLET_MENU_BG),p.getProperty(ColorScheme.PORTLET_TITLE_BG));
      os.close();
      os=new FileOutputStream(outDirectory + id + "/portlet_menu_bg_gradient.gif");
      createGradient(os,p.getProperty(ColorScheme.LAYOUT_BG),p.getProperty(ColorScheme.PORTLET_MENU_BG));
      os.close();
    }
  }
}

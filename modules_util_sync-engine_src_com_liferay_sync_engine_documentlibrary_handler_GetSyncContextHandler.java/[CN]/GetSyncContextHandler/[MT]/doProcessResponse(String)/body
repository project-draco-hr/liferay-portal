{
  SyncContext syncContext=JSONUtil.readValue(response,SyncContext.class);
  SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
  SyncUser remoteSyncUser=syncContext.getSyncUser();
  if (remoteSyncUser == null) {
    throw new HttpResponseException(HttpStatus.SC_UNAUTHORIZED,"Authenticated access required");
  }
  SyncUser localSyncUser=SyncUserService.fetchSyncUser(syncAccount.getSyncAccountId());
  remoteSyncUser.setSyncAccountId(localSyncUser.getSyncAccountId());
  remoteSyncUser.setSyncUserId(localSyncUser.getSyncUserId());
  SyncUserService.update(remoteSyncUser);
  Map<String,String> portletPreferencesMap=syncContext.getPortletPreferencesMap();
  int batchFileMaxSize=GetterUtil.getInteger(portletPreferencesMap.get(SyncContext.PREFERENCE_KEY_BATCH_FILE_MAX_SIZE));
  syncAccount.setBatchFileMaxSize(batchFileMaxSize);
  int maxConnections=GetterUtil.getInteger(portletPreferencesMap.get(SyncContext.PREFERENCE_KEY_MAX_CONNECTIONS),1);
  syncAccount.setMaxConnections(maxConnections);
  int pollInterval=GetterUtil.getInteger(portletPreferencesMap.get(SyncContext.PREFERENCE_KEY_POLL_INTERVAL),5);
  syncAccount.setPollInterval(pollInterval);
  syncAccount.setSocialOfficeInstalled(syncContext.isSocialOfficeInstalled());
  SyncAccountService.update(syncAccount);
  return syncContext;
}

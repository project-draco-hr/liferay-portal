{
  ObjectMapper objectMapper=new ObjectMapper();
  SyncContext syncContext=objectMapper.readValue(response,new TypeReference<SyncContext>(){
  }
);
  SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
  SyncUser remoteSyncUser=syncContext.getSyncUser();
  if (remoteSyncUser == null) {
    throw new HttpResponseException(HttpStatus.SC_UNAUTHORIZED,"Authenticated access required");
  }
  SyncUser localSyncUser=SyncUserService.fetchSyncUser(syncAccount.getSyncAccountId());
  remoteSyncUser.setSyncAccountId(localSyncUser.getSyncAccountId());
  remoteSyncUser.setSyncUserId(localSyncUser.getSyncUserId());
  SyncUserService.update(remoteSyncUser);
  Map<String,String> portletPreferencesMap=syncContext.getPortletPreferencesMap();
  int maxConnections=Integer.parseInt(portletPreferencesMap.get(SyncContext.PREFERENCE_KEY_MAX_CONNECTIONS));
  syncAccount.setMaxConnections(maxConnections);
  int pollInterval=Integer.parseInt(portletPreferencesMap.get(SyncContext.PREFERENCE_KEY_POLL_INTERVAL));
  syncAccount.setPollInterval(pollInterval);
  syncAccount.setSocialOfficeInstalled(syncContext.isSocialOfficeInstalled());
  SyncAccountService.update(syncAccount);
  return syncContext;
}

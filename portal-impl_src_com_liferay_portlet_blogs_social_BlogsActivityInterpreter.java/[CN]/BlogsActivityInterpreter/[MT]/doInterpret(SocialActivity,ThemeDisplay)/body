{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  if (!BlogsEntryPermission.contains(permissionChecker,activity.getClassPK(),ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  String receiverUserName=getUserName(activity.getReceiverUserId(),themeDisplay);
  int activityType=activity.getType();
  BlogsEntry entry=BlogsEntryLocalServiceUtil.getEntry(activity.getClassPK());
  String link=getLink(BlogsEntry.class.getName(),entry.getEntryId(),"/blogs/find_entry?entryId=",themeDisplay);
  String displayTitle;
  String displayDate;
  if ((activityType == BlogsActivityKeys.ADD_ENTRY) && (entry.getStatus() == WorkflowConstants.STATUS_SCHEDULED)) {
    displayTitle=getTitle(entry);
    Format dateFormatDate=FastDateFormatFactoryUtil.getSimpleDateFormat("MMMM d",themeDisplay.getLocale(),themeDisplay.getTimeZone());
    displayDate=dateFormatDate.format(entry.getDisplayDate());
  }
 else {
    displayTitle=wrapLink(link,getTitle(entry));
    displayDate=StringPool.BLANK;
  }
  Object[] titleArguments=new Object[]{groupName,creatorUserName,receiverUserName,displayTitle,displayDate};
  String title=themeDisplay.translate(getTitlePattern(groupName,entry,activityType),titleArguments);
  String body=StringPool.BLANK;
  return new SocialActivityFeedEntry(link,title,body);
}

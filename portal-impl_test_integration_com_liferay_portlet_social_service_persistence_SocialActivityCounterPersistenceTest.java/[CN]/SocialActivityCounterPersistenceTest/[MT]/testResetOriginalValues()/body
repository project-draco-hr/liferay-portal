{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  SocialActivityCounter newSocialActivityCounter=addSocialActivityCounter();
  _persistence.clearCache();
  SocialActivityCounterModelImpl existingSocialActivityCounterModelImpl=(SocialActivityCounterModelImpl)_persistence.findByPrimaryKey(newSocialActivityCounter.getPrimaryKey());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getGroupId(),existingSocialActivityCounterModelImpl.getOriginalGroupId());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getClassNameId(),existingSocialActivityCounterModelImpl.getOriginalClassNameId());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getClassPK(),existingSocialActivityCounterModelImpl.getOriginalClassPK());
  Assert.assertTrue(Validator.equals(existingSocialActivityCounterModelImpl.getName(),existingSocialActivityCounterModelImpl.getOriginalName()));
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getOwnerType(),existingSocialActivityCounterModelImpl.getOriginalOwnerType());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getStartPeriod(),existingSocialActivityCounterModelImpl.getOriginalStartPeriod());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getGroupId(),existingSocialActivityCounterModelImpl.getOriginalGroupId());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getClassNameId(),existingSocialActivityCounterModelImpl.getOriginalClassNameId());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getClassPK(),existingSocialActivityCounterModelImpl.getOriginalClassPK());
  Assert.assertTrue(Validator.equals(existingSocialActivityCounterModelImpl.getName(),existingSocialActivityCounterModelImpl.getOriginalName()));
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getOwnerType(),existingSocialActivityCounterModelImpl.getOriginalOwnerType());
  Assert.assertEquals(existingSocialActivityCounterModelImpl.getEndPeriod(),existingSocialActivityCounterModelImpl.getOriginalEndPeriod());
}

{
  long pk=ServiceTestUtil.nextLong();
  SocialActivityCounter socialActivityCounter=_persistence.create(pk);
  socialActivityCounter.setGroupId(ServiceTestUtil.nextLong());
  socialActivityCounter.setCompanyId(ServiceTestUtil.nextLong());
  socialActivityCounter.setClassNameId(ServiceTestUtil.nextLong());
  socialActivityCounter.setClassPK(ServiceTestUtil.nextLong());
  socialActivityCounter.setName(ServiceTestUtil.randomString());
  socialActivityCounter.setOwnerType(ServiceTestUtil.nextInt());
  socialActivityCounter.setCurrentValue(ServiceTestUtil.nextInt());
  socialActivityCounter.setTotalValue(ServiceTestUtil.nextInt());
  socialActivityCounter.setGraceValue(ServiceTestUtil.nextInt());
  socialActivityCounter.setStartPeriod(ServiceTestUtil.nextInt());
  socialActivityCounter.setEndPeriod(ServiceTestUtil.nextInt());
  socialActivityCounter.setActive(ServiceTestUtil.randomBoolean());
  _persistence.update(socialActivityCounter);
  return socialActivityCounter;
}

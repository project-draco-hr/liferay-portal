{
  String emailAddress=userinfoplus.getEmail();
  String firstName=userinfoplus.getGivenName();
  String lastName=userinfoplus.getFamilyName();
  boolean male=Validator.equals(userinfoplus.getGender(),"male");
  if (emailAddress.equals(user.getEmailAddress()) && firstName.equals(user.getFirstName()) && lastName.equals(user.getLastName())&& (male == user.isMale())) {
    return user;
  }
  Contact contact=user.getContact();
  Calendar birthdayCal=CalendarFactoryUtil.getCalendar();
  birthdayCal.setTime(contact.getBirthday());
  int birthdayMonth=birthdayCal.get(Calendar.MONTH);
  int birthdayDay=birthdayCal.get(Calendar.DAY_OF_MONTH);
  int birthdayYear=birthdayCal.get(Calendar.YEAR);
  long[] groupIds=null;
  long[] organizationIds=null;
  long[] roleIds=null;
  List<UserGroupRole> userGroupRoles=null;
  long[] userGroupIds=null;
  ServiceContext serviceContext=new ServiceContext();
  if (!StringUtil.equalsIgnoreCase(emailAddress,user.getEmailAddress())) {
    UserLocalServiceUtil.updateEmailAddress(user.getUserId(),StringPool.BLANK,emailAddress,emailAddress);
  }
  UserLocalServiceUtil.updateEmailAddressVerified(user.getUserId(),true);
  return UserLocalServiceUtil.updateUser(user.getUserId(),StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,false,user.getReminderQueryQuestion(),user.getReminderQueryAnswer(),user.getScreenName(),emailAddress,0,user.getOpenId(),true,null,user.getLanguageId(),user.getTimeZoneId(),user.getGreeting(),user.getComments(),firstName,user.getMiddleName(),lastName,contact.getPrefixId(),contact.getSuffixId(),male,birthdayMonth,birthdayDay,birthdayYear,contact.getSmsSn(),contact.getFacebookSn(),contact.getJabberSn(),contact.getSkypeSn(),contact.getTwitterSn(),contact.getJobTitle(),groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,serviceContext);
}

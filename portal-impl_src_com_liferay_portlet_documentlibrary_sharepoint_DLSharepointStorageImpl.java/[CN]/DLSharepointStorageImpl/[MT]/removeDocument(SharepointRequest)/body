{
  String parentFolderPath=sharepointRequest.getRootPath();
  long groupId=SharepointUtil.getGroupId(parentFolderPath);
  Folder folder=null;
  FileEntry fileEntry=null;
  try {
    long parentFolderId=getLastFolderId(groupId,parentFolderPath,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
    folder=DLAppServiceUtil.getFolder(groupId,parentFolderId);
  }
 catch (  Exception e1) {
    if (e1 instanceof NoSuchFolderException) {
      try {
        fileEntry=getFileEntry(sharepointRequest);
      }
 catch (      Exception e2) {
      }
    }
  }
  Tree documentTree=new Tree();
  Tree removedDocsTree=new Tree();
  Tree failedDocsTree=new Tree();
  Tree folderTree=new Tree();
  Tree removedDirsTree=new Tree();
  Tree failedDirsTree=new Tree();
  if (fileEntry != null) {
    try {
      documentTree=getFileEntryTree(fileEntry,parentFolderPath);
      DLAppServiceUtil.deleteFileEntry(fileEntry.getFileEntryId());
      removedDocsTree.addChild(documentTree);
    }
 catch (    Exception e1) {
      try {
        failedDocsTree.addChild(documentTree);
      }
 catch (      Exception e2) {
      }
    }
  }
 else   if (folder != null) {
    try {
      folderTree=getFolderTree(folder,parentFolderPath);
      DLAppServiceUtil.deleteFolder(folder.getFolderId());
      removedDirsTree.addChild(folderTree);
    }
 catch (    Exception e1) {
      try {
        failedDirsTree.addChild(folderTree);
      }
 catch (      Exception e2) {
      }
    }
  }
  return new Tree[]{removedDocsTree,removedDirsTree,failedDocsTree,failedDirsTree};
}

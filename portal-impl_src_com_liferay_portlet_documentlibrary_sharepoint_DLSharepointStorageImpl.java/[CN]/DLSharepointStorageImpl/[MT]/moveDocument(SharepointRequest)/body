{
  String parentFolderPath=sharepointRequest.getRootPath();
  long groupId=SharepointUtil.getGroupId(parentFolderPath);
  DLFolder folder=null;
  DLFileEntry fileEntry=null;
  try {
    long parentFolderId=getLastFolderId(groupId,parentFolderPath,DLFolderImpl.DEFAULT_PARENT_FOLDER_ID);
    folder=DLFolderServiceUtil.getFolder(parentFolderId);
  }
 catch (  Exception e1) {
    if (e1 instanceof NoSuchFolderException) {
      try {
        fileEntry=getFileEntry(sharepointRequest);
      }
 catch (      Exception e2) {
      }
    }
  }
  Tree movedDocsTree=new Tree();
  Tree movedDirsTree=new Tree();
  String newPath=sharepointRequest.getParameterValue("newUrl");
  String newParentFolderPath=getParentFolderPath(newPath);
  long newGroupId=SharepointUtil.getGroupId(newParentFolderPath);
  long newParentFolderId=getLastFolderId(newGroupId,newParentFolderPath,DLFolderImpl.DEFAULT_PARENT_FOLDER_ID);
  String newName=getResourceName(newPath);
  ServiceContext serviceContext=new ServiceContext();
  if (fileEntry != null) {
    long folderId=fileEntry.getFolderId();
    String name=fileEntry.getName();
    String description=fileEntry.getDescription();
    String extraSettings=fileEntry.getExtraSettings();
    InputStream is=DLFileEntryLocalServiceUtil.getFileAsStream(sharepointRequest.getCompanyId(),sharepointRequest.getUserId(),fileEntry.getFolderId(),fileEntry.getName());
    byte[] bytes=FileUtil.getBytes(is);
    String[] tagsEntries=TagsEntryLocalServiceUtil.getEntryNames(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
    serviceContext.setTagsEntries(tagsEntries);
    fileEntry=DLFileEntryServiceUtil.updateFileEntry(folderId,newParentFolderId,name,newName,newName,description,extraSettings,bytes,serviceContext);
    Tree documentTree=getFileEntryTree(fileEntry,newParentFolderPath);
    movedDocsTree.addChild(documentTree);
  }
 else   if (folder != null) {
    long folderId=folder.getFolderId();
    String description=folder.getDescription();
    folder=DLFolderServiceUtil.updateFolder(folderId,newParentFolderId,newName,description,serviceContext);
    Tree folderTree=getFolderTree(folder,newParentFolderPath);
    movedDirsTree.addChild(folderTree);
  }
  return new Tree[]{movedDocsTree,movedDirsTree};
}

{
  HttpServletRequest request=sharepointRequest.getHttpServletRequest();
  String documentPath=sharepointRequest.getRootPath();
  String parentFolderPath=getParentFolderPath(documentPath);
  long groupId=SharepointUtil.getGroupId(parentFolderPath);
  long parentFolderId=getLastFolderId(groupId,parentFolderPath,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  String title=getResourceName(documentPath);
  String description=StringPool.BLANK;
  String changeLog=StringPool.BLANK;
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  String contentType=GetterUtil.get(request.getHeader(HttpHeaders.CONTENT_TYPE),ContentTypes.APPLICATION_OCTET_STREAM);
  String extension=FileUtil.getExtension(title);
  File file=null;
  try {
    file=FileUtil.createTempFile(extension);
    FileUtil.write(file,sharepointRequest.getBytes());
    if (contentType.equals(ContentTypes.APPLICATION_OCTET_STREAM)) {
      contentType=MimeTypesUtil.getContentType(file,title);
    }
    try {
      FileEntry fileEntry=getFileEntry(sharepointRequest);
      long fileEntryId=fileEntry.getFileEntryId();
      description=fileEntry.getDescription();
      String[] assetTagNames=AssetTagLocalServiceUtil.getTagNames(DLFileEntryConstants.getClassName(),fileEntry.getFileEntryId());
      serviceContext.setAssetTagNames(assetTagNames);
      DLAppServiceUtil.updateFileEntry(fileEntryId,title,contentType,title,description,changeLog,false,file,serviceContext);
    }
 catch (    NoSuchFileEntryException nsfee) {
      DLAppServiceUtil.addFileEntry(groupId,parentFolderId,title,contentType,title,description,changeLog,file,serviceContext);
    }
  }
  finally {
    FileUtil.delete(file);
  }
}

{
  dlFileEntryType=toUnwrappedModel(dlFileEntryType);
  boolean isNew=dlFileEntryType.isNew();
  DLFileEntryTypeModelImpl dlFileEntryTypeModelImpl=(DLFileEntryTypeModelImpl)dlFileEntryType;
  if (Validator.isNull(dlFileEntryType.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    dlFileEntryType.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (dlFileEntryType.getCreateDate() == null)) {
    if (serviceContext == null) {
      dlFileEntryType.setCreateDate(now);
    }
 else {
      dlFileEntryType.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!dlFileEntryTypeModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      dlFileEntryType.setModifiedDate(now);
    }
 else {
      dlFileEntryType.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (dlFileEntryType.isNew()) {
      session.save(dlFileEntryType);
      dlFileEntryType.setNew(false);
    }
 else {
      session.merge(dlFileEntryType);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DLFileEntryTypeModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((dlFileEntryTypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryTypeModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{dlFileEntryTypeModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((dlFileEntryTypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryTypeModelImpl.getOriginalUuid(),dlFileEntryTypeModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{dlFileEntryTypeModelImpl.getUuid(),dlFileEntryTypeModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((dlFileEntryTypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileEntryTypeModelImpl.getOriginalGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{dlFileEntryTypeModelImpl.getGroupId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
  }
  EntityCacheUtil.putResult(DLFileEntryTypeModelImpl.ENTITY_CACHE_ENABLED,DLFileEntryTypeImpl.class,dlFileEntryType.getPrimaryKey(),dlFileEntryType,false);
  clearUniqueFindersCache(dlFileEntryType);
  cacheUniqueFindersCache(dlFileEntryType,isNew);
  dlFileEntryType.resetOriginalValues();
  return dlFileEntryType;
}

{
  long pk=nextLong();
  ResourcePermission newResourcePermission=_persistence.create(pk);
  newResourcePermission.setCompanyId(nextLong());
  newResourcePermission.setName(randomString());
  newResourcePermission.setScope(nextInt());
  newResourcePermission.setPrimKey(randomString());
  newResourcePermission.setRoleId(nextLong());
  newResourcePermission.setOwnerId(nextLong());
  newResourcePermission.setActionIds(nextLong());
  _persistence.update(newResourcePermission,false);
  ResourcePermission existingResourcePermission=_persistence.findByPrimaryKey(newResourcePermission.getPrimaryKey());
  assertEquals(existingResourcePermission.getResourcePermissionId(),newResourcePermission.getResourcePermissionId());
  assertEquals(existingResourcePermission.getCompanyId(),newResourcePermission.getCompanyId());
  assertEquals(existingResourcePermission.getName(),newResourcePermission.getName());
  assertEquals(existingResourcePermission.getScope(),newResourcePermission.getScope());
  assertEquals(existingResourcePermission.getPrimKey(),newResourcePermission.getPrimKey());
  assertEquals(existingResourcePermission.getRoleId(),newResourcePermission.getRoleId());
  assertEquals(existingResourcePermission.getOwnerId(),newResourcePermission.getOwnerId());
  assertEquals(existingResourcePermission.getActionIds(),newResourcePermission.getActionIds());
}

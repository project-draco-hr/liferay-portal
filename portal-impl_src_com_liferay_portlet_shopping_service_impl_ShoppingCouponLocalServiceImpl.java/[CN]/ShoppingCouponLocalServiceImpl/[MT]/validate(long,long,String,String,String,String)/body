{
  if (Validator.isNull(name)) {
    throw new CouponNameException();
  }
 else   if (Validator.isNull(description)) {
    throw new CouponDescriptionException();
  }
  long[] categoryIds=StringUtil.split(limitCategories,0L);
  List invalidCategoryIds=new ArrayList();
  for (int i=0; i < categoryIds.length; i++) {
    try {
      ShoppingCategory category=ShoppingCategoryUtil.findByPrimaryKey(categoryIds[i]);
      if (category.getGroupId() != groupId) {
        invalidCategoryIds.add(new Long(categoryIds[i]));
      }
    }
 catch (    NoSuchCategoryException nsce) {
      invalidCategoryIds.add(new Long(categoryIds[i]));
    }
  }
  if (invalidCategoryIds.size() > 0) {
    CouponLimitCategoriesException clce=new CouponLimitCategoriesException();
    clce.setCategoryIds(invalidCategoryIds);
    throw clce;
  }
  String[] skus=StringUtil.split(limitSkus);
  List invalidSkus=new ArrayList();
  for (int i=0; i < skus.length; i++) {
    try {
      ShoppingItem item=ShoppingItemUtil.findByC_S(companyId,skus[i]);
      ShoppingCategory category=item.getCategory();
      if (category.getGroupId() != groupId) {
        invalidSkus.add(skus[i]);
      }
    }
 catch (    NoSuchItemException nsie) {
      invalidSkus.add(skus[i]);
    }
  }
  if (invalidSkus.size() > 0) {
    CouponLimitSKUsException clskue=new CouponLimitSKUsException();
    clskue.setSkus(invalidSkus);
    throw clskue;
  }
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  ShoppingCoupon coupon=shoppingCouponPersistence.findByPrimaryKey(couponId);
  Date startDate=PortalUtil.getDate(startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,user.getTimeZone(),CouponStartDateException.class);
  Date endDate=null;
  if (!neverExpire) {
    endDate=PortalUtil.getDate(endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,user.getTimeZone(),CouponEndDateException.class);
  }
  if ((endDate != null) && startDate.after(endDate)) {
    throw new CouponDateException();
  }
  validate(coupon.getCompanyId(),coupon.getGroupId(),name,description,limitCategories,limitSkus,minOrder,discount);
  coupon.setModifiedDate(new Date());
  coupon.setName(name);
  coupon.setDescription(description);
  coupon.setStartDate(startDate);
  coupon.setEndDate(endDate);
  coupon.setActive(active);
  coupon.setLimitCategories(limitCategories);
  coupon.setLimitSkus(limitSkus);
  coupon.setMinOrder(minOrder);
  coupon.setDiscount(discount);
  coupon.setDiscountType(discountType);
  shoppingCouponPersistence.update(coupon);
  return coupon;
}

{
  User user=UserUtil.findByPrimaryKey(userId);
  long groupId=PortalUtil.getPortletGroupId(plid);
  code=code.trim().toUpperCase();
  if (autoCode) {
    code=getCode();
  }
  Date now=new Date();
  Date startDate=PortalUtil.getDate(startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,user.getTimeZone(),new CouponStartDateException());
  Date endDate=null;
  if (!neverExpire) {
    endDate=PortalUtil.getDate(endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,user.getTimeZone(),new CouponEndDateException());
  }
  if ((endDate != null) && (startDate.after(endDate))) {
    throw new CouponDateException();
  }
  validate(user.getCompanyId(),groupId,code,autoCode,name,description,limitCategories,limitSkus);
  long couponId=CounterLocalServiceUtil.increment();
  ShoppingCoupon coupon=ShoppingCouponUtil.create(couponId);
  coupon.setGroupId(groupId);
  coupon.setCompanyId(user.getCompanyId());
  coupon.setUserId(user.getUserId());
  coupon.setUserName(user.getFullName());
  coupon.setCreateDate(now);
  coupon.setModifiedDate(now);
  coupon.setCode(code);
  coupon.setName(name);
  coupon.setDescription(description);
  coupon.setStartDate(startDate);
  coupon.setEndDate(endDate);
  coupon.setActive(active);
  coupon.setLimitCategories(limitCategories);
  coupon.setLimitSkus(limitSkus);
  coupon.setMinOrder(minOrder);
  coupon.setDiscount(discount);
  coupon.setDiscountType(discountType);
  ShoppingCouponUtil.update(coupon);
  return coupon;
}

{
  long pk=ServiceTestUtil.nextLong();
  DLFileEntry dlFileEntry=_persistence.create(pk);
  dlFileEntry.setUuid(ServiceTestUtil.randomString());
  dlFileEntry.setGroupId(ServiceTestUtil.nextLong());
  dlFileEntry.setCompanyId(ServiceTestUtil.nextLong());
  dlFileEntry.setUserId(ServiceTestUtil.nextLong());
  dlFileEntry.setUserName(ServiceTestUtil.randomString());
  dlFileEntry.setVersionUserId(ServiceTestUtil.nextLong());
  dlFileEntry.setVersionUserName(ServiceTestUtil.randomString());
  dlFileEntry.setCreateDate(ServiceTestUtil.nextDate());
  dlFileEntry.setModifiedDate(ServiceTestUtil.nextDate());
  dlFileEntry.setRepositoryId(ServiceTestUtil.nextLong());
  dlFileEntry.setFolderId(ServiceTestUtil.nextLong());
  dlFileEntry.setName(ServiceTestUtil.randomString());
  dlFileEntry.setExtension(ServiceTestUtil.randomString());
  dlFileEntry.setMimeType(ServiceTestUtil.randomString());
  dlFileEntry.setTitle(ServiceTestUtil.randomString());
  dlFileEntry.setDescription(ServiceTestUtil.randomString());
  dlFileEntry.setExtraSettings(ServiceTestUtil.randomString());
  dlFileEntry.setFileEntryTypeId(ServiceTestUtil.nextLong());
  dlFileEntry.setVersion(ServiceTestUtil.randomString());
  dlFileEntry.setSize(ServiceTestUtil.nextLong());
  dlFileEntry.setReadCount(ServiceTestUtil.nextInt());
  dlFileEntry.setSmallImageId(ServiceTestUtil.nextLong());
  dlFileEntry.setLargeImageId(ServiceTestUtil.nextLong());
  dlFileEntry.setCustom1ImageId(ServiceTestUtil.nextLong());
  dlFileEntry.setCustom2ImageId(ServiceTestUtil.nextLong());
  dlFileEntry.setManualCheckInRequired(ServiceTestUtil.randomBoolean());
  _persistence.update(dlFileEntry,false);
  return dlFileEntry;
}

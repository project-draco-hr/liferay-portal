{
  PermissionChecker permissionChecker=getPermissionChecker();
  Team team=teamPersistence.findByPrimaryKey(teamId);
  if (!GroupPermissionUtil.contains(permissionChecker,team.getGroupId(),ActionKeys.MANAGE_TEAMS) && !UserPermissionUtil.contains(permissionChecker,userId,ActionKeys.UPDATE)) {
    throw new PrincipalException.MustHavePermission(userId,Team.class.getName(),teamId,ActionKeys.MANAGE_TEAMS,ActionKeys.UPDATE);
  }
  return userPersistence.containsTeam(userId,teamId);
}

{
  SassCompiler sassCompiler=new RubySassCompiler();
  Assert.assertNotNull(sassCompiler);
  Class<?> clazz=getClass();
  File sourceMapsDir=new File("../sass-compiler-jni/test/unit/com/liferay/sass/compiler/jni" + "/internal/dependencies/sourcemaps");
  File inputFile=new File(sourceMapsDir,"input.scss");
  File sourceMapFile=new File(sourceMapsDir,".sass-cache/input.css.map");
  sourceMapFile.deleteOnExit();
  Assert.assertFalse(sourceMapFile.exists());
  String input=read(inputFile.toPath());
  String actualOutput=sassCompiler.compileString(input,inputFile.getCanonicalPath(),"",true,sourceMapFile.getCanonicalPath());
  Assert.assertNotNull(actualOutput);
  Assert.assertTrue(sourceMapFile.exists());
  File expectedOutputFile=new File(sourceMapsDir,"expected_custom_output.css");
  String expectedOutput=read(expectedOutputFile.toPath());
  Assert.assertEquals(stripNewLines(expectedOutput),stripNewLines(actualOutput));
}

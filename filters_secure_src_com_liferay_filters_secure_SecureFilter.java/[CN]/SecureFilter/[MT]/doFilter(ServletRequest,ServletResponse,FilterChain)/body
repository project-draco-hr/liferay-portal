{
  String remoteAddr=req.getRemoteAddr();
  if (isAccessAllowed(req)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Access allowed for " + remoteAddr);
    }
  }
 else {
    if (_log.isErrorEnabled()) {
      _log.error("Access denied for " + remoteAddr);
    }
    return;
  }
  if (_log.isDebugEnabled()) {
    if (_httpsRequired) {
      _log.debug("https is required");
    }
 else {
      _log.debug("https is not required");
    }
  }
  HttpServletRequest httpReq=(HttpServletRequest)req;
  HttpServletResponse httpRes=(HttpServletResponse)res;
  String completeURL=Http.getCompleteURL(httpReq);
  if (_httpsRequired && !httpReq.isSecure()) {
    if (_log.isDebugEnabled()) {
      _log.debug("Securing " + completeURL);
    }
    StringBuffer redirectURL=new StringBuffer();
    redirectURL.append(Http.HTTPS_WITH_SLASH);
    redirectURL.append(httpReq.getServerName());
    redirectURL.append(httpReq.getServletPath());
    String queryString=httpReq.getQueryString();
    if (Validator.isNotNull(queryString)) {
      redirectURL.append(StringPool.QUESTION);
      redirectURL.append(httpReq.getQueryString());
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Redirect to " + redirectURL);
    }
    httpRes.sendRedirect(redirectURL.toString());
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Not securing " + completeURL);
    }
    chain.doFilter(req,res);
  }
}

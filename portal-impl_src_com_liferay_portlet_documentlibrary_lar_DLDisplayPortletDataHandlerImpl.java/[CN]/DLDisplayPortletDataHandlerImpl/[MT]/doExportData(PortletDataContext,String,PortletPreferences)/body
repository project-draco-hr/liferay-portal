{
  portletDataContext.addPermissions("com.liferay.portlet.documentlibrary",portletDataContext.getScopeGroupId());
  long rootFolderId=GetterUtil.getLong(portletPreferences.getValue("rootFolderId",null));
  Document document=SAXReaderUtil.createDocument();
  Element rootElement=document.addElement("documentlibrary-display-data");
  Element fileEntryTypesElement=rootElement.addElement("file-entry-types");
  Element foldersElement=rootElement.addElement("folders");
  Element fileEntriesElement=rootElement.addElement("file-entries");
  Element fileShortcutsElement=rootElement.addElement("file-shortcuts");
  Element fileRanksElement=rootElement.addElement("file-ranks");
  Element repositoriesElement=rootElement.addElement("repositories");
  Element repositoryEntriesElement=rootElement.addElement("repository-entries");
  if (rootFolderId == DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    List<Folder> folders=FolderUtil.findByRepositoryId(portletDataContext.getScopeGroupId());
    for (    Folder folder : folders) {
      DLPortletDataHandlerImpl.exportFolder(portletDataContext,fileEntryTypesElement,foldersElement,fileEntriesElement,fileShortcutsElement,fileRanksElement,repositoriesElement,repositoryEntriesElement,folder,false);
    }
    List<FileEntry> fileEntries=FileEntryUtil.findByR_F(portletDataContext.getScopeGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
    for (    FileEntry fileEntry : fileEntries) {
      DLPortletDataHandlerImpl.exportFileEntry(portletDataContext,fileEntryTypesElement,foldersElement,fileEntriesElement,fileRanksElement,repositoriesElement,repositoryEntriesElement,fileEntry,true);
    }
  }
 else {
    Folder folder=DLAppLocalServiceUtil.getFolder(rootFolderId);
    rootElement.addAttribute("root-folder-id",String.valueOf(folder.getFolderId()));
    rootElement.addAttribute("default-repository",String.valueOf(folder.isDefaultRepository()));
    DLPortletDataHandlerImpl.exportFolder(portletDataContext,fileEntryTypesElement,foldersElement,fileEntriesElement,fileShortcutsElement,fileRanksElement,repositoriesElement,repositoryEntriesElement,folder,true);
  }
  return document.formattedString();
}

{
  long userId=context.getUserId(entry.getUserUuid());
  long folderId=MapUtil.getLong(folderPKs,entry.getFolderId(),entry.getFolderId());
  String[] tagsEntries=null;
  if (importTags) {
    tagsEntries=context.getTagsEntries(BookmarksEntry.class,entry.getPrimaryKeyObj());
  }
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  BookmarksEntry existingEntry=null;
  try {
    BookmarksFolderUtil.findByPrimaryKey(folderId);
    if (context.getDataStrategy().equals(PortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {
      existingEntry=BookmarksEntryFinderUtil.findByUuid_G(entry.getUuid(),context.getGroupId());
      if (existingEntry == null) {
        BookmarksEntryLocalServiceUtil.addEntry(entry.getUuid(),userId,folderId,entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries,addCommunityPermissions,addGuestPermissions);
      }
 else {
        BookmarksEntryLocalServiceUtil.updateEntry(userId,existingEntry.getEntryId(),folderId,entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries);
      }
    }
 else {
      BookmarksEntryLocalServiceUtil.addEntry(userId,folderId,entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries,addCommunityPermissions,addGuestPermissions);
    }
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for entry " + entry.getEntryId());
  }
}

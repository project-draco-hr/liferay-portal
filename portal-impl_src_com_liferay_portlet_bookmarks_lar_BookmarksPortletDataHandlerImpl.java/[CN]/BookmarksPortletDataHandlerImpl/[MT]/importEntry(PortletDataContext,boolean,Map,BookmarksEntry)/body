{
  Long folderId=(Long)folderPKs.get(new Long(entry.getFolderId()));
  if (folderId == null) {
    folderId=new Long(entry.getFolderId());
  }
  String[] tagsEntries=context.getTagsEntries(BookmarksEntry.class,entry.getPrimaryKeyObj());
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  BookmarksEntry existingEntry=null;
  try {
    BookmarksFolderUtil.findByPrimaryKey(folderId.longValue());
    if (mergeData) {
      existingEntry=BookmarksEntryFinderUtil.findByUuid_G(entry.getUuid(),context.getGroupId());
      if (existingEntry == null) {
        BookmarksEntryLocalServiceUtil.addEntry(entry.getUuid(),entry.getUserId(),folderId.longValue(),entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries,addCommunityPermissions,addGuestPermissions);
      }
 else {
        BookmarksEntryLocalServiceUtil.updateEntry(entry.getUserId(),existingEntry.getEntryId(),folderId.longValue(),entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries);
      }
    }
 else {
      BookmarksEntryLocalServiceUtil.addEntry(entry.getUserId(),folderId.longValue(),entry.getName(),entry.getUrl(),entry.getComments(),tagsEntries,addCommunityPermissions,addGuestPermissions);
    }
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for entry " + entry.getEntryId());
  }
}

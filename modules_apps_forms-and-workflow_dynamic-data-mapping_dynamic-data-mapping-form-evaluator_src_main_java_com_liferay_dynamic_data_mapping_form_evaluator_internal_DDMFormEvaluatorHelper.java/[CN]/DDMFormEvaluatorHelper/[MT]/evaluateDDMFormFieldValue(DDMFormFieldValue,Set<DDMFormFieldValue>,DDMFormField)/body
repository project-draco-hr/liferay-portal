{
  DDMFormFieldEvaluationResult ddmFormFieldEvaluationResult=new DDMFormFieldEvaluationResult(ddmFormFieldValue.getName(),ddmFormFieldValue.getInstanceId());
  boolean visible=evaluateBooleanExpression(ddmFormField.getVisibilityExpression(),ancestorDDMFormFieldValues);
  ddmFormFieldEvaluationResult.setVisible(visible);
  if (visible && ddmFormField.isRequired() && isDDMFormFieldValueEmpty(ddmFormFieldValue)) {
    ddmFormFieldEvaluationResult.setErrorMessage(LanguageUtil.get(_locale,"this-field-is-required"));
    ddmFormFieldEvaluationResult.setValid(false);
  }
 else   if (!isDDMFormFieldValueEmpty(ddmFormFieldValue)) {
    DDMFormFieldValidation ddmFormFieldValidation=ddmFormField.getDDMFormFieldValidation();
    String validationExpression=getValidationExpression(ddmFormFieldValidation);
    boolean valid=evaluateBooleanExpression(validationExpression,ancestorDDMFormFieldValues);
    ddmFormFieldEvaluationResult.setValid(valid);
    if (!valid) {
      String errorMessage=ddmFormFieldValidation.getErrorMessage();
      if (Validator.isNull(errorMessage)) {
        errorMessage=LanguageUtil.format(getResourceBundle(_locale),"this-field-is-invalid-x",ddmFormField.getName(),false);
      }
      ddmFormFieldEvaluationResult.setErrorMessage(errorMessage);
    }
  }
  List<DDMFormFieldEvaluationResult> nestedDDMFormFieldEvaluationResults=evaluateDDMFormFieldValues(ddmFormFieldValue.getNestedDDMFormFieldValues(),ancestorDDMFormFieldValues);
  ddmFormFieldEvaluationResult.setNestedDDMFormFieldEvaluationResults(nestedDDMFormFieldEvaluationResults);
  return ddmFormFieldEvaluationResult;
}

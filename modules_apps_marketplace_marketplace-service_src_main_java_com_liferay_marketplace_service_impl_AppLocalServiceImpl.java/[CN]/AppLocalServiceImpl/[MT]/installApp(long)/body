{
  App app=appPersistence.findByRemoteAppId(remoteAppId);
  if (!DLStoreUtil.hasFile(app.getCompanyId(),CompanyConstants.SYSTEM,app.getFilePath())) {
    throw new NoSuchFileException();
  }
  InputStream inputStream=null;
  try {
    inputStream=DLStoreUtil.getFileAsStream(app.getCompanyId(),CompanyConstants.SYSTEM,app.getFilePath());
    if (inputStream == null) {
      throw new IOException("Unable to open file at " + app.getFilePath());
    }
    StringBundler sb=new StringBundler(5);
    sb.append(SystemProperties.get(SystemProperties.TMP_DIR));
    sb.append(StringPool.SLASH);
    sb.append(encodeSafeFileName(app.getTitle()));
    sb.append(StringPool.PERIOD);
    sb.append(FileUtil.getExtension(app.getFileName()));
    File file=new File(sb.toString());
    FileUtil.write(file,inputStream);
    List<Bundle> bundles=BundleManagerUtil.installLPKG(file);
    for (int i=1; i < bundles.size(); i++) {
      Bundle bundle=bundles.get(i);
      Dictionary<String,String> headers=bundle.getHeaders();
      String contextName=ContextUtil.getContextName(GetterUtil.getString(headers.get("Web-ContextPath")));
      moduleLocalService.addModule(app.getUserId(),app.getAppId(),bundle.getSymbolicName(),String.valueOf(bundle.getVersion()),contextName);
    }
  }
 catch (  IOException ioe) {
    throw new PortalException(ioe.getMessage());
  }
catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    StreamUtil.cleanUp(inputStream);
    clearInstalledAppsCache();
  }
}

{
  Class<?> returnType=method.getReturnType();
  Object defaultValue=null;
  if (ArrayUtil.isNotEmpty(args)) {
    defaultValue=args[0];
  }
  if (returnType.equals(boolean.class)) {
    if (defaultValue == null) {
      return _typedSettings.getBooleanValue(method.getName());
    }
 else {
      return _typedSettings.getBooleanValue(method.getName(),(Boolean)defaultValue);
    }
  }
 else   if (returnType.equals(double.class)) {
    if (defaultValue == null) {
      return _typedSettings.getDoubleValue(method.getName());
    }
 else {
      return _typedSettings.getDoubleValue(method.getName(),(Double)defaultValue);
    }
  }
 else   if (returnType.equals(float.class)) {
    if (defaultValue == null) {
      return _typedSettings.getFloatValue(method.getName());
    }
 else {
      return _typedSettings.getFloatValue(method.getName(),(Float)defaultValue);
    }
  }
 else   if (returnType.equals(int.class)) {
    if (defaultValue == null) {
      return _typedSettings.getIntegerValue(method.getName());
    }
 else {
      return _typedSettings.getIntegerValue(method.getName(),(Integer)defaultValue);
    }
  }
 else   if (returnType.equals(LocalizedValuesMap.class)) {
    return _typedSettings.getLocalizedValuesMap(method.getName());
  }
 else   if (returnType.equals(long.class)) {
    if (defaultValue == null) {
      return _typedSettings.getLongValue(method.getName());
    }
 else {
      return _typedSettings.getLongValue(method.getName(),(Long)defaultValue);
    }
  }
 else   if (returnType.equals(String.class)) {
    if (defaultValue == null) {
      return _typedSettings.getValue(method.getName());
    }
 else {
      return _typedSettings.getValue(method.getName(),(String)defaultValue);
    }
  }
 else   if (returnType.equals(String[].class)) {
    if (defaultValue == null) {
      return _typedSettings.getValues(method.getName());
    }
 else {
      return _typedSettings.getValues(method.getName(),(String[])defaultValue);
    }
  }
  Constructor<?> constructor=returnType.getConstructor(String.class);
  if (defaultValue == null) {
    return constructor.newInstance(_typedSettings.getValue(method.getName()));
  }
 else {
    return constructor.newInstance(_typedSettings.getValue(method.getName(),(String)defaultValue));
  }
}

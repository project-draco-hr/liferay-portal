{
  List<JournalArticle> journalArticles=new ArrayList<JournalArticle>();
  long companyId=CompanyThreadLocal.getCompanyId();
  long groupId=atomRequestContext.getLongParameter("groupId");
  String type=atomRequestContext.getParameter("type","general");
  int page=atomRequestContext.getIntParameter("page");
  int max=atomRequestContext.getIntParameter("max",SearchContainer.DEFAULT_DELTA);
  if ((companyId > 0) && (groupId > 0)) {
    String keywords=null;
    Double version=null;
    String structureId=null;
    String templateId=null;
    Date displayDateGT=null;
    Date displayDateLT=new Date();
    int status=WorkflowConstants.STATUS_APPROVED;
    Date reviewDate=null;
    long classNameId=0;
    OrderByComparator obc=new ArticleVersionComparator();
    int count=JournalArticleLocalServiceUtil.searchCount(companyId,groupId,classNameId,keywords,version,type,structureId,templateId,displayDateGT,displayDateLT,status,reviewDate);
    AtomPager atomPager=new AtomPager(page,count,max);
    AtomUtil.saveAtomPagerInRequest(atomRequestContext,atomPager);
    journalArticles=JournalArticleLocalServiceUtil.search(companyId,groupId,classNameId,keywords,version,type,structureId,templateId,displayDateGT,displayDateLT,status,reviewDate,atomPager.getStart(),atomPager.getEnd() + 1,obc);
  }
  return journalArticles;
}

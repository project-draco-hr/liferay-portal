{
  User user=userPersistence.findByPrimaryKey(userId);
  DDLRecord record=ddlRecordPersistence.findByPrimaryKey(recordId);
  record.setModifiedDate(serviceContext.getModifiedDate(null));
  record.setDisplayIndex(displayIndex);
  if (!record.isPending()) {
    record.setStatus(WorkflowConstants.STATUS_DRAFT);
  }
  ddlRecordPersistence.update(record,false);
  StorageEngineUtil.update(record.getClassPK(),fields,mergeFields,serviceContext);
  WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),record.getGroupId(),userId,DDLRecord.class.getName(),record.getRecordId(),record,serviceContext);
  return record;
}

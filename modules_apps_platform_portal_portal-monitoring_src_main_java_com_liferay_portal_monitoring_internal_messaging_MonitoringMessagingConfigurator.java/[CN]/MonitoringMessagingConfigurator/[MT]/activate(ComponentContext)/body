{
  _bundleContext=componentContext.getBundleContext();
  Dictionary<String,Object> properties=componentContext.getProperties();
  MonitoringConfiguration monitoringConfiguration=Configurable.createConfigurable(MonitoringConfiguration.class,properties);
  DestinationConfiguration destinationConfiguration=new DestinationConfiguration(DestinationConfiguration.DESTINATION_TYPE_PARALLEL,DestinationNames.MONITORING);
  destinationConfiguration.setMaximumQueueSize(monitoringConfiguration.monitoringMessageMaxQueueSize());
  RejectedExecutionHandler rejectedExecutionHandler=new DiscardOldestPolicy(){
    @Override public void rejectedExecution(    Runnable runnable,    ThreadPoolExecutor threadPoolExecutor){
      if (_log.isWarnEnabled()) {
        _log.warn("The current thread will handle the request " + "because the audit router's task queue is at " + "its maximum capacity");
      }
      super.rejectedExecution(runnable,threadPoolExecutor);
    }
  }
;
  destinationConfiguration.setRejectedExecutionHandler(rejectedExecutionHandler);
  Destination destination=_destinationFactory.createDestination(destinationConfiguration);
  Dictionary<String,Object> destinationProperties=new HashMapDictionary<>();
  destinationProperties.put("destination.name",destination.getName());
  _destinationServiceRegistration=_bundleContext.registerService(Destination.class,destination,destinationProperties);
}

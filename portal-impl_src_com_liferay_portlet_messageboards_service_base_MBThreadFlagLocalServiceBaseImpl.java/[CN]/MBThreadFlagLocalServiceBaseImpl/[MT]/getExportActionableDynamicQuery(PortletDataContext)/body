{
  final ExportActionableDynamicQuery exportActionableDynamicQuery=new ExportActionableDynamicQuery(){
    @Override public long performCount() throws PortalException {
      ManifestSummary manifestSummary=portletDataContext.getManifestSummary();
      StagedModelType stagedModelType=getStagedModelType();
      long modelAdditionCount=super.performCount();
      manifestSummary.addModelAdditionCount(stagedModelType,modelAdditionCount);
      long modelDeletionCount=ExportImportHelperUtil.getModelDeletionCount(portletDataContext,stagedModelType);
      manifestSummary.addModelDeletionCount(stagedModelType,modelDeletionCount);
      return modelAdditionCount;
    }
  }
;
  initActionableDynamicQuery(exportActionableDynamicQuery);
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
  }
);
  exportActionableDynamicQuery.setCompanyId(portletDataContext.getCompanyId());
  exportActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<MBThreadFlag>(){
    @Override public void performAction(    MBThreadFlag mbThreadFlag) throws PortalException {
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,mbThreadFlag);
    }
  }
);
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(PortalUtil.getClassNameId(MBThreadFlag.class.getName())));
  return exportActionableDynamicQuery;
}

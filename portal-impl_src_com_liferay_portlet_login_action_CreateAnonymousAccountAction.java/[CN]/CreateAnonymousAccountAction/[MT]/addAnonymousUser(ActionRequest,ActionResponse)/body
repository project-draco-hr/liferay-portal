{
  HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  boolean autoPassword=true;
  String password1=null;
  String password2=null;
  boolean autoScreenName=true;
  String screenName=null;
  String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
  long facebookId=0;
  String openId=StringPool.BLANK;
  String firstName=ParamUtil.getString(actionRequest,"firstName");
  String lastName=ParamUtil.getString(actionRequest,"lastName");
  int prefixId=0;
  int suffixId=0;
  boolean male=true;
  int birthdayMonth=0;
  int birthdayDay=1;
  int birthdayYear=1970;
  String jobTitle=null;
  long[] groupIds=null;
  long[] organizationIds=null;
  long[] roleIds=null;
  long[] userGroupIds=null;
  boolean sendEmail=false;
  ServiceContext serviceContext=ServiceContextFactory.getInstance(User.class.getName(),actionRequest);
  serviceContext.setAttribute("anonymousUser",true);
  if (PropsValues.CAPTCHA_CHECK_PORTAL_CREATE_ACCOUNT) {
    CaptchaUtil.check(actionRequest);
  }
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  User user=UserServiceUtil.addUser(themeDisplay.getCompanyId(),autoPassword,password1,password2,autoScreenName,screenName,emailAddress,facebookId,openId,themeDisplay.getLocale(),firstName,null,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,serviceContext);
  UserLocalServiceUtil.updateStatus(user.getUserId(),WorkflowConstants.STATUS_INCOMPLETE,new ServiceContext());
  SessionMessages.add(request,"userAdded",user.getEmailAddress());
  SessionMessages.add(request,"userAddedPassword",user.getPasswordUnencrypted());
}

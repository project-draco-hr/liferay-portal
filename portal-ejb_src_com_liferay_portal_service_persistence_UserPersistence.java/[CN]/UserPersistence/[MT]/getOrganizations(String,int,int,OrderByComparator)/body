{
  Session session=null;
  try {
    session=openSession();
    UserHBM userHBM=(UserHBM)session.get(UserHBM.class,pk);
    if (userHBM == null) {
      _log.warn("No User exists with the primary key " + pk.toString());
      throw new NoSuchUserException("No User exists with the primary key " + pk.toString());
    }
    StringBuffer query=new StringBuffer();
    query.append("SELECT organizationHBM FROM ");
    query.append(com.liferay.portal.service.persistence.UserHBM.class.getName());
    query.append(" userHBM ");
    query.append("JOIN userHBM.orgs AS organizationHBM ");
    query.append("WHERE userHBM.userId = ? ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("organizationHBM.name ASC");
    }
    Query q=session.createQuery(query.toString());
    q.setString(0,pk);
    List list=new ArrayList();
    Iterator itr=QueryUtil.iterate(q,getDialect(),begin,end);
    while (itr.hasNext()) {
      com.liferay.portal.service.persistence.OrganizationHBM organizationHBM=(com.liferay.portal.service.persistence.OrganizationHBM)itr.next();
      list.add(com.liferay.portal.service.persistence.OrganizationHBMUtil.model(organizationHBM));
    }
    return list;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

{
  if (Validator.isNull(street1)) {
    throw new AddressStreetException();
  }
 else   if (Validator.isNull(city)) {
    throw new AddressCityException();
  }
 else   if (Validator.isNull(zip)) {
    Country country=countryService.fetchCountry(countryId);
    if ((country != null) && country.isZipRequired()) {
      throw new AddressZipException();
    }
  }
  if (addressId > 0) {
    Address address=addressPersistence.findByPrimaryKey(addressId);
    companyId=address.getCompanyId();
    classNameId=address.getClassNameId();
    classPK=address.getClassPK();
  }
  if ((classNameId == classNameLocalService.getClassNameId(Account.class)) || (classNameId == classNameLocalService.getClassNameId(Contact.class)) || (classNameId == classNameLocalService.getClassNameId(Organization.class))) {
    listTypeService.validate(typeId,classNameId,ListTypeConstants.ADDRESS);
  }
  validate(addressId,companyId,classNameId,classPK,mailing,primary);
}

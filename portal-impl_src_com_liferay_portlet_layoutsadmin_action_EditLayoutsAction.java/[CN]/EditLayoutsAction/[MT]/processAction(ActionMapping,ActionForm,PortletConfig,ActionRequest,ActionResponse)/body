{
  try {
    checkPermissions(actionRequest);
  }
 catch (  PrincipalException pe) {
    return;
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    String closeRedirect=ParamUtil.getString(actionRequest,"closeRedirect");
    Layout layout=null;
    String oldFriendlyURL=StringPool.BLANK;
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      Object[] returnValue=updateLayout(actionRequest,actionResponse);
      layout=(Layout)returnValue[0];
      oldFriendlyURL=(String)returnValue[1];
      redirect=updateCloseRedirect(redirect,null,layout,oldFriendlyURL);
      closeRedirect=updateCloseRedirect(closeRedirect,null,layout,oldFriendlyURL);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      Object[] returnValue=SitesUtil.deleteLayout(actionRequest,actionResponse);
      Group group=(Group)returnValue[0];
      oldFriendlyURL=(String)returnValue[1];
      long newRefererPlid=(Long)returnValue[2];
      redirect=updateCloseRedirect(redirect,group,null,oldFriendlyURL);
      redirect=HttpUtil.setParameter(redirect,"refererPlid",newRefererPlid);
      closeRedirect=updateCloseRedirect(closeRedirect,group,null,oldFriendlyURL);
    }
 else     if (cmd.equals("copy_from_live")) {
      StagingUtil.copyFromLive(actionRequest);
    }
 else     if (cmd.equals("display_order")) {
      updateDisplayOrder(actionRequest);
    }
 else     if (cmd.equals("delete_layout_revision")) {
      deleteLayoutRevision(actionRequest);
    }
 else     if (cmd.equals("enable")) {
      enableLayout(actionRequest);
    }
 else     if (cmd.equals("publish_to_live")) {
      StagingUtil.publishToLive(actionRequest);
    }
 else     if (cmd.equals("publish_to_remote")) {
      StagingUtil.publishToRemote(actionRequest);
    }
 else     if (cmd.equals("reset_customized_view")) {
      LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
      if ((layoutTypePortlet != null) && layoutTypePortlet.isCustomizable() && layoutTypePortlet.isCustomizedView()) {
        layoutTypePortlet.resetUserPreferences();
      }
    }
 else     if (cmd.equals("reset_prototype")) {
      SitesUtil.resetPrototype(themeDisplay.getLayout());
    }
 else     if (cmd.equals("schedule_copy_from_live")) {
      StagingUtil.scheduleCopyFromLive(actionRequest);
    }
 else     if (cmd.equals("schedule_publish_to_live")) {
      StagingUtil.schedulePublishToLive(actionRequest);
    }
 else     if (cmd.equals("schedule_publish_to_remote")) {
      StagingUtil.schedulePublishToRemote(actionRequest);
    }
 else     if (cmd.equals("select_layout_set_branch")) {
      selectLayoutSetBranch(actionRequest);
    }
 else     if (cmd.equals("select_layout_branch")) {
      selectLayoutBranch(actionRequest);
    }
 else     if (cmd.equals("unschedule_copy_from_live")) {
      StagingUtil.unscheduleCopyFromLive(actionRequest);
    }
 else     if (cmd.equals("unschedule_publish_to_live")) {
      StagingUtil.unschedulePublishToLive(actionRequest);
    }
 else     if (cmd.equals("unschedule_publish_to_remote")) {
      StagingUtil.unschedulePublishToRemote(actionRequest);
    }
 else     if (cmd.equals("update_layout_revision")) {
      updateLayoutRevision(actionRequest,themeDisplay);
    }
    if (Validator.isNotNull(closeRedirect)) {
      SessionMessages.add(actionRequest,portletConfig.getPortletName() + SessionMessages.KEY_SUFFIX_CLOSE_REDIRECT,closeRedirect);
    }
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchLayoutException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portlet.layouts_admin.error");
    }
 else     if (e instanceof ImageTypeException || e instanceof LayoutFriendlyURLException || e instanceof LayoutHiddenException|| e instanceof LayoutNameException|| e instanceof LayoutParentLayoutIdException|| e instanceof LayoutSetVirtualHostException|| e instanceof LayoutTypeException|| e instanceof RequiredLayoutException|| e instanceof UploadException) {
      if (e instanceof LayoutFriendlyURLException) {
        SessionErrors.add(actionRequest,LayoutFriendlyURLException.class.getName(),e);
      }
 else {
        SessionErrors.add(actionRequest,e.getClass().getName(),e);
      }
    }
 else     if (e instanceof RemoteExportException || e instanceof RemoteOptionsException || e instanceof SystemException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
      String redirect=ParamUtil.getString(actionRequest,"pagesRedirect");
      sendRedirect(actionRequest,actionResponse,redirect);
    }
 else {
      throw e;
    }
  }
}

{
  Group group=getGroup(portletRequest);
  if (group == null) {
    throw new PrincipalException();
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  Layout layout=themeDisplay.getLayout();
  String cmd=ParamUtil.getString(portletRequest,Constants.CMD);
  long selPlid=ParamUtil.getLong(portletRequest,"selPlid");
  if (selPlid > 0) {
    layout=LayoutLocalServiceUtil.getLayout(selPlid);
  }
  if (cmd.equals(Constants.ADD)) {
    long parentPlid=ParamUtil.getLong(portletRequest,"parentPlid");
    if (parentPlid == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
      if (!GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.ADD_LAYOUT)) {
        throw new PrincipalException();
      }
 else {
        return;
      }
    }
 else {
      layout=LayoutLocalServiceUtil.getLayout(parentPlid);
      if (!LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.ADD_LAYOUT)) {
        throw new PrincipalException();
      }
 else {
        return;
      }
    }
  }
 else   if (cmd.equals(Constants.DELETE)) {
    if (!LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.DELETE)) {
      throw new PrincipalException();
    }
 else {
      return;
    }
  }
 else   if (cmd.equals("reset_customized_view")) {
    if (!LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.CUSTOMIZE)) {
      throw new PrincipalException();
    }
 else {
      return;
    }
  }
 else   if (cmd.equals("reset_prototype")) {
    if (!LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.UPDATE)) {
      throw new PrincipalException();
    }
 else     if (!group.isUser() && !GroupPermissionUtil.contains(permissionChecker,layout.getGroupId(),ActionKeys.UPDATE)) {
      throw new PrincipalException();
    }
 else     if (group.isUser() && (permissionChecker.getUserId() != group.getClassPK())) {
      throw new PrincipalException();
    }
 else {
      return;
    }
  }
 else   if (cmd.equals("publish_to_live")) {
    boolean hasUpdateLayoutPermission=false;
    if (layout != null) {
      hasUpdateLayoutPermission=LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.UPDATE);
    }
    if (group.isSite()) {
      boolean publishToLive=GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.PUBLISH_STAGING);
      if (!hasUpdateLayoutPermission && !publishToLive) {
        throw new PrincipalException();
      }
 else {
        return;
      }
    }
 else     if (group.isOrganization()) {
      boolean publishToLive=OrganizationPermissionUtil.contains(permissionChecker,group.getOrganizationId(),ActionKeys.PUBLISH_STAGING);
      if (!hasUpdateLayoutPermission && !publishToLive) {
        throw new PrincipalException();
      }
 else {
        return;
      }
    }
  }
 else   if (cmd.equals(Constants.UPDATE)) {
    if (group.isCompany()) {
      if (!permissionChecker.isCompanyAdmin()) {
        throw new PrincipalException();
      }
 else {
        return;
      }
    }
 else     if (group.isLayoutPrototype()) {
      LayoutPrototypePermissionUtil.check(permissionChecker,group.getClassPK(),ActionKeys.UPDATE);
      return;
    }
 else     if (group.isLayoutSetPrototype()) {
      LayoutSetPrototypePermissionUtil.check(permissionChecker,group.getClassPK(),ActionKeys.UPDATE);
      return;
    }
 else     if (group.isUser()) {
      long groupUserId=group.getClassPK();
      User groupUser=UserLocalServiceUtil.getUserById(groupUserId);
      long[] organizationIds=groupUser.getOrganizationIds();
      UserPermissionUtil.check(permissionChecker,groupUserId,organizationIds,ActionKeys.UPDATE);
      return;
    }
  }
  if (selPlid > 0) {
    LayoutPermissionUtil.check(permissionChecker,layout,ActionKeys.VIEW);
    return;
  }
  GroupPermissionUtil.check(permissionChecker,group,ActionKeys.VIEW);
}

{
  String[] devices=StringUtil.split(ParamUtil.getString(actionRequest,"devices"));
  for (  String device : devices) {
    String themeId=ParamUtil.getString(actionRequest,device + "ThemeId");
    String colorSchemeId=ParamUtil.getString(actionRequest,device + "ColorSchemeId");
    String css=ParamUtil.getString(actionRequest,device + "Css");
    boolean wapTheme=device.equals("wap");
    boolean inheritLookAndFeel=ParamUtil.getBoolean(actionRequest,device + "InheritLookAndFeel");
    if (inheritLookAndFeel) {
      themeId=ThemeImpl.getDefaultRegularThemeId(companyId);
      colorSchemeId=StringPool.BLANK;
      deleteThemeSettingsProperties(typeSettingsProperties,device);
    }
 else     if (Validator.isNotNull(themeId)) {
      colorSchemeId=getColorSchemeId(companyId,themeId,colorSchemeId,wapTheme);
      updateThemeSettingsProperties(actionRequest,companyId,typeSettingsProperties,device,oldThemeId,themeId,wapTheme);
    }
    long groupId=liveGroupId;
    if (stagingGroupId > 0) {
      groupId=stagingGroupId;
    }
    LayoutServiceUtil.updateLayout(groupId,privateLayout,layoutId,typeSettingsProperties.toString());
    LayoutServiceUtil.updateLookAndFeel(groupId,privateLayout,layoutId,themeId,colorSchemeId,css,wapTheme);
  }
}

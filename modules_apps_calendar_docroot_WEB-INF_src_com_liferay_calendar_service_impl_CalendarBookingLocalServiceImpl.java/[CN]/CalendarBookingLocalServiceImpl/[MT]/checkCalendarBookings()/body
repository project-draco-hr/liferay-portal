{
  Date now=new Date();
  List<CalendarBooking> calendarBookings=calendarBookingFinder.findByFutureReminders(now.getTime());
  long endTime=now.getTime() + Time.MONTH;
  calendarBookings=RecurrenceUtil.expandCalendarBookings(calendarBookings,now.getTime(),endTime,1);
  for (  CalendarBooking calendarBooking : calendarBookings) {
    try {
      Company company=companyPersistence.findByPrimaryKey(calendarBooking.getCompanyId());
      if (company.isActive()) {
        NotificationUtil.notifyCalendarBookingReminders(calendarBooking,now.getTime());
      }
    }
 catch (    PortalException pe) {
      throw pe;
    }
catch (    SystemException se) {
      throw se;
    }
catch (    Exception e) {
      throw new SystemException(e);
    }
  }
}

{
  portletDataContext.addPermissions("com.liferay.portlet.mobiledevicerules",portletDataContext.getScopeGroupId());
  Element rootElement=addExportRootElement();
  final Element ruleGroupsElement=rootElement.addElement("rule-groups");
  final Element rulesElement=rootElement.addElement("rules");
  ActionableDynamicQuery rulesActionableDynamicQuery=new MDRRuleActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      MDRRule rule=(MDRRule)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,new Element[]{ruleGroupsElement,rulesElement},rule);
    }
  }
;
  rulesActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  rulesActionableDynamicQuery.performActions();
  final Element ruleGroupInstancesElement=rootElement.addElement("rule-group-instances");
  final Element actionsElement=rootElement.addElement("actions");
  ActionableDynamicQuery actionsActionableDynamicQuery=new MDRActionActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      MDRAction action=(MDRAction)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,new Element[]{ruleGroupInstancesElement,actionsElement},action);
    }
  }
;
  actionsActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  actionsActionableDynamicQuery.performActions();
  return rootElement.formattedString();
}

{
  ServiceContext serviceContext=createServiceContext();
  CalendarResource calendarResource=CalendarResourceUtil.getUserCalendarResource(_user.getUserId(),serviceContext);
  Calendar calendar=calendarResource.getDefaultCalendar();
  long startTime=System.currentTimeMillis();
  Recurrence recurrence=new Recurrence();
  recurrence.setCount(2);
  recurrence.setFrequency(Frequency.DAILY);
  recurrence.setPositionalWeekdays(new ArrayList<PositionalWeekday>());
  CalendarBooking calendarBooking=CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(),calendar.getCalendarId(),new long[0],CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomString(),startTime,startTime + (Time.HOUR * 10),false,RecurrenceSerializer.serialize(recurrence),0,null,0,null,serviceContext);
  long calendarBookingId=calendarBooking.getCalendarBookingId();
  CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance(calendarBooking,0,false);
  calendarBooking=CalendarBookingLocalServiceUtil.fetchCalendarBooking(calendarBookingId);
  Assert.assertNotNull(calendarBooking);
  CalendarBookingLocalServiceUtil.deleteCalendarBookingInstance(calendarBooking,0,false);
  calendarBooking=CalendarBookingLocalServiceUtil.fetchCalendarBooking(calendarBookingId);
  Assert.assertNull(calendarBooking);
}

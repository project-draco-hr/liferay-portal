{
  ServiceContext serviceContext=createServiceContext();
  CalendarResource calendarResource=CalendarResourceUtil.getUserCalendarResource(_user.getUserId(),serviceContext);
  Calendar calendar=calendarResource.getDefaultCalendar();
  Calendar invitedCalendar=CalendarLocalServiceUtil.addCalendar(_user.getUserId(),_user.getGroupId(),calendarResource.getCalendarResourceId(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),calendarResource.getTimeZoneId(),RandomTestUtil.randomInt(),false,false,false,serviceContext);
  long startTime=System.currentTimeMillis();
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  CalendarBooking calendarBooking=CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(),calendar.getCalendarId(),new long[]{invitedCalendar.getCalendarId()},CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomString(),startTime,startTime + 36000000,false,null,0,null,0,null,serviceContext);
  CalendarBooking childCalendarBooking=getChildCalendarBooking(calendarBooking);
  Assert.assertEquals(CalendarBookingWorkflowConstants.STATUS_MASTER_PENDING,childCalendarBooking.getStatus());
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  calendarBooking=CalendarBookingLocalServiceUtil.updateCalendarBooking(_user.getUserId(),calendarBooking.getCalendarBookingId(),calendar.getCalendarId(),new long[]{invitedCalendar.getCalendarId()},RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomString(),startTime,startTime + 36000000,false,null,0,null,0,null,serviceContext);
  childCalendarBooking=getChildCalendarBooking(calendarBooking);
  Assert.assertEquals(CalendarBookingWorkflowConstants.STATUS_PENDING,childCalendarBooking.getStatus());
}

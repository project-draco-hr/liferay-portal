{
  if (!PermissionThreadLocal.isAddResource()) {
    return;
  }
  validate(name,portletActions);
  if (primKey == null) {
    return;
  }
  Resource resource=getResource(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  boolean flushResourceBlockEnabled=PermissionThreadLocal.isFlushResourceBlockEnabled(companyId,groupId,name);
  boolean flushResourcePermissionEnabled=PermissionThreadLocal.isFlushResourcePermissionEnabled(name,primKey);
  PermissionThreadLocal.setFlushResourceBlockEnabled(companyId,groupId,name,false);
  PermissionThreadLocal.setFlushResourcePermissionEnabled(name,primKey,false);
  List<ResourcePermission> resourcePermissions=resourcePermissionPersistence.findByC_N_S_P(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  ResourcePermissionsThreadLocal.setResourcePermissions(resourcePermissions);
  try {
    addResources(companyId,groupId,userId,resource,portletActions,permissionedModel);
    if ((groupId > 0) && addGroupPermissions) {
      addGroupPermissions(companyId,groupId,userId,name,resource,portletActions,permissionedModel);
    }
    if (addGuestPermissions) {
      addGuestPermissions(companyId,groupId,userId,name,resource,portletActions,permissionedModel);
    }
  }
  finally {
    ResourcePermissionsThreadLocal.setResourcePermissions(null);
    PermissionThreadLocal.setFlushResourceBlockEnabled(companyId,groupId,name,flushResourceBlockEnabled);
    PermissionThreadLocal.setFlushResourcePermissionEnabled(name,primKey,flushResourcePermissionEnabled);
    PermissionCacheUtil.clearResourceBlockCache(companyId,groupId,name);
    PermissionCacheUtil.clearResourcePermissionCache(ResourceConstants.SCOPE_INDIVIDUAL,name,primKey);
    IndexWriterHelperUtil.updatePermissionFields(name,primKey);
  }
}

{
  if (!PermissionThreadLocal.isAddResource()) {
    return;
  }
  validate(name,portletActions);
  addResource(companyId,name,ResourceConstants.SCOPE_COMPANY,String.valueOf(companyId));
  if (groupId > 0) {
    addResource(companyId,name,ResourceConstants.SCOPE_GROUP,String.valueOf(groupId));
  }
  if (primKey == null) {
    return;
  }
  Resource resource=addResource(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  boolean flushEnabled=PermissionThreadLocal.isFlushEnabled();
  PermissionThreadLocal.setIndexEnabled(false);
  List<ResourcePermission> resourcePermissions=resourcePermissionPersistence.findByC_N_S_P(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  ResourcePermissionsThreadLocal.setResourcePermissions(resourcePermissions);
  try {
    if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
      addResources_6(companyId,groupId,userId,resource,portletActions,permissionedModel);
    }
 else {
      addResources_1to5(companyId,groupId,userId,resource,portletActions);
    }
    if ((groupId > 0) && addGroupPermissions) {
      addGroupPermissions(companyId,groupId,userId,name,resource,portletActions,permissionedModel);
    }
    if (addGuestPermissions) {
      addGuestPermissions(companyId,groupId,userId,name,resource,portletActions,permissionedModel);
    }
  }
  finally {
    ResourcePermissionsThreadLocal.setResourcePermissions(null);
    PermissionThreadLocal.setIndexEnabled(flushEnabled);
    PermissionCacheUtil.clearCache();
    SearchEngineUtil.updatePermissionFields(name,primKey);
  }
}

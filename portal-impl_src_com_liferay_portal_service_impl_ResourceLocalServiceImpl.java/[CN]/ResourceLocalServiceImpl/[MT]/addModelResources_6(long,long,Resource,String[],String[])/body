{
  Role ownerRole=roleLocalService.getRole(companyId,RoleConstants.OWNER);
  List<String> actionIds=ResourceActionsUtil.getModelResourceActions(resource.getName());
  List<String> defaultOwnerActions=ResourceActionsUtil.getModelResourceOwnerDefaultActions(resource.getName());
  if (!defaultOwnerActions.isEmpty()) {
    Iterator<String> itr=actionIds.iterator();
    while (itr.hasNext()) {
      String action=itr.next();
      if (!defaultOwnerActions.contains(action)) {
        itr.remove();
      }
    }
  }
  resourcePermissionLocalService.setResourcePermissions(resource.getCompanyId(),resource.getName(),resource.getScope(),resource.getPrimKey(),ownerRole.getRoleId(),actionIds.toArray(new String[actionIds.size()]));
  if (groupId > 0) {
    Role role=getRole(groupId);
    if (communityPermissions == null) {
      communityPermissions=new String[0];
    }
    resourcePermissionLocalService.setResourcePermissions(resource.getCompanyId(),resource.getName(),resource.getScope(),resource.getPrimKey(),role.getRoleId(),communityPermissions);
  }
  Role guestRole=roleLocalService.getRole(companyId,RoleConstants.GUEST);
  if (guestPermissions == null) {
    guestPermissions=new String[0];
  }
  resourcePermissionLocalService.setResourcePermissions(resource.getCompanyId(),resource.getName(),resource.getScope(),resource.getPrimKey(),guestRole.getRoleId(),guestPermissions);
}

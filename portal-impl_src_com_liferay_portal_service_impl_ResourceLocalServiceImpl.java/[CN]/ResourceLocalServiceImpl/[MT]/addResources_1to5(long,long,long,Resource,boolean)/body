{
  List<Permission> permissionsList=permissionLocalService.addPermissions(companyId,resource.getName(),resource.getResourceId(),portletActions);
  PermissionsListFilter permissionsListFilter=PermissionsListFilterFactory.getInstance();
  List<Permission> userPermissionsList=permissionsListFilter.filterUserPermissions(companyId,groupId,userId,resource.getName(),resource.getPrimKey(),portletActions,permissionsList);
  List<String> defaultOwnerActions=ResourceActionsUtil.getModelResourceOwnerDefaultActions(resource.getName());
  if (!defaultOwnerActions.isEmpty()) {
    Iterator<Permission> itr=userPermissionsList.iterator();
    while (itr.hasNext()) {
      Permission permission=itr.next();
      String action=permission.getActionId();
      if (!defaultOwnerActions.contains(action)) {
        itr.remove();
      }
    }
  }
  if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
    Role ownerRole=roleLocalService.getRole(companyId,RoleConstants.OWNER);
    rolePersistence.addPermissions(ownerRole.getRoleId(),userPermissionsList);
  }
 else {
    long defaultUserId=userLocalService.getDefaultUserId(companyId);
    if ((userId > 0) && (userId != defaultUserId)) {
      userPersistence.addPermissions(userId,userPermissionsList);
    }
  }
}

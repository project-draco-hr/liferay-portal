{
  validate(name,portletActions);
  addResource(companyId,name,ResourceConstants.SCOPE_COMPANY,String.valueOf(companyId));
  if (groupId > 0) {
    addResource(companyId,name,ResourceConstants.SCOPE_GROUP,String.valueOf(groupId));
  }
  if (primKey == null) {
    return;
  }
  Resource resource=addResource(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  List<Permission> permissionsList=permissionLocalService.addPermissions(companyId,name,resource.getResourceId(),portletActions);
  PermissionsListFilter permissionsListFilter=PermissionsListFilterFactory.getInstance();
  List<Permission> userPermissionsList=permissionsListFilter.filterUserPermissions(companyId,groupId,userId,name,primKey,portletActions,permissionsList);
  if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
    Role ownerRole=roleLocalService.getRole(companyId,RoleConstants.OWNER);
    rolePersistence.addPermissions(ownerRole.getRoleId(),userPermissionsList);
  }
 else {
    long defaultUserId=userLocalService.getDefaultUserId(companyId);
    if ((userId > 0) && (userId != defaultUserId)) {
      userPersistence.addPermissions(userId,userPermissionsList);
    }
  }
  if ((groupId > 0) && addCommunityPermissions) {
    addCommunityPermissions(companyId,groupId,userId,name,resource,portletActions);
  }
  if (addGuestPermissions) {
    addGuestPermissions(companyId,groupId,userId,name,resource,portletActions);
  }
}

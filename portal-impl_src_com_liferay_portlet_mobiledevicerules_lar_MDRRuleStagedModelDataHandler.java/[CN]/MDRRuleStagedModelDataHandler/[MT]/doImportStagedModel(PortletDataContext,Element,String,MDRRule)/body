{
  long userId=portletDataContext.getUserId(rule.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(ruleElement,rule,NAMESPACE);
  serviceContext.setUserId(userId);
  MDRRule importedRule=null;
  if (portletDataContext.isDataStrategyMirror()) {
    MDRRule existingRule=MDRRuleUtil.fetchByUUID_G(rule.getUuid(),portletDataContext.getScopeGroupId());
    if (existingRule == null) {
      serviceContext.setUuid(rule.getUuid());
      importedRule=MDRRuleLocalServiceUtil.addRule(ruleGroup.getRuleGroupId(),rule.getNameMap(),rule.getDescriptionMap(),rule.getType(),rule.getTypeSettingsProperties(),serviceContext);
    }
 else {
      importedRule=MDRRuleLocalServiceUtil.updateRule(existingRule.getRuleId(),rule.getNameMap(),rule.getDescriptionMap(),rule.getType(),rule.getTypeSettingsProperties(),serviceContext);
    }
  }
 else {
    importedRule=MDRRuleLocalServiceUtil.addRule(ruleGroup.getRuleGroupId(),rule.getNameMap(),rule.getDescriptionMap(),rule.getType(),rule.getTypeSettingsProperties(),serviceContext);
  }
  portletDataContext.importClassedModel(rule,importedRule,NAMESPACE);
}

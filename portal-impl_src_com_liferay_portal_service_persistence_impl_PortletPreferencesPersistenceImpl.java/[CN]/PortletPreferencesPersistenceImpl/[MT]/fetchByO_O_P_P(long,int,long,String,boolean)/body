{
  Object[] finderArgs=new Object[]{ownerId,ownerType,plid,portletId};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_O_O_P_P,finderArgs,this);
  }
  if (result instanceof PortletPreferences) {
    PortletPreferences portletPreferences=(PortletPreferences)result;
    if ((ownerId != portletPreferences.getOwnerId()) || (ownerType != portletPreferences.getOwnerType()) || (plid != portletPreferences.getPlid())|| !Validator.equals(portletId,portletPreferences.getPortletId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_SELECT_PORTLETPREFERENCES_WHERE);
    query.append(_FINDER_COLUMN_O_O_P_P_OWNERID_2);
    query.append(_FINDER_COLUMN_O_O_P_P_OWNERTYPE_2);
    query.append(_FINDER_COLUMN_O_O_P_P_PLID_2);
    boolean bindPortletId=false;
    if (portletId == null) {
      query.append(_FINDER_COLUMN_O_O_P_P_PORTLETID_1);
    }
 else     if (portletId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_O_O_P_P_PORTLETID_3);
    }
 else {
      bindPortletId=true;
      query.append(_FINDER_COLUMN_O_O_P_P_PORTLETID_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(ownerId);
      qPos.add(ownerType);
      qPos.add(plid);
      if (bindPortletId) {
        qPos.add(portletId);
      }
      List<PortletPreferences> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_O_O_P_P,finderArgs,list);
      }
 else {
        PortletPreferences portletPreferences=list.get(0);
        result=portletPreferences;
        cacheResult(portletPreferences);
        if ((portletPreferences.getOwnerId() != ownerId) || (portletPreferences.getOwnerType() != ownerType) || (portletPreferences.getPlid() != plid)|| (portletPreferences.getPortletId() == null)|| !portletPreferences.getPortletId().equals(portletId)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_O_O_P_P,finderArgs,portletPreferences);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_O_O_P_P,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (PortletPreferences)result;
  }
}

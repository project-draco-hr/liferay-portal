{
  Field field=ReflectionUtil.getDeclaredField(PropsValues.class,"AUTH_TOKEN_IGNORE_PORTLETS");
  Object value=field.get(null);
  try {
    field.set(null,new String[]{_TEST_PORTLET_ID});
    AuthTokenWhitelistUtil.resetPortletCSRFWhitelist();
    setUpPortlet(_testPortlet,_properties,_TEST_PORTLET_ID);
    HttpServletRequest httpServletRequest=getHttpServletRequest();
    PortletURL portletURL=new PortletURLImpl(httpServletRequest,_TEST_PORTLET_ID,layout.getPlid(),PortletRequest.ACTION_PHASE);
    Map<String,List<String>> responseMap=request(portletURL.toString());
    Assert.assertEquals("200",getString(responseMap,"code"));
    Assert.assertTrue(_map.containsKey("processAction"));
  }
  finally {
    field.set(null,value);
    AuthTokenWhitelistUtil.resetPortletCSRFWhitelist();
  }
}

{
  long categoryId=ParamUtil.getLong(request,"categoryId");
  long vocabularyId=ParamUtil.getLong(request,"vocabularyId");
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  List<AssetCategory> categories=null;
  if (Validator.isNotNull(categoryId)) {
    categories=AssetCategoryLocalServiceUtil.getChildCategories(categoryId);
  }
 else   if (Validator.isNotNull(vocabularyId)) {
    long parentCategoryId=ParamUtil.getLong(request,"parentCategoryId",AssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID);
    categories=AssetCategoryLocalServiceUtil.getVocabularyCategories(parentCategoryId,vocabularyId);
  }
  if (categories == null) {
    return jsonArray.toString();
  }
  int start=ParamUtil.getInteger(request,"start");
  int limit=ParamUtil.getInteger(request,"limit");
  if (limit > 0) {
    categories=ListUtil.subList(categories,start,start + limit);
  }
  for (  AssetCategory category : categories) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    boolean hasChildren=false;
    List<AssetCategory> children=AssetCategoryLocalServiceUtil.getChildCategories(category.getCategoryId());
    if (children.size() > 0) {
      hasChildren=true;
    }
    jsonObject.put("categoryId",category.getCategoryId());
    jsonObject.put("hasChildren",hasChildren);
    jsonObject.put("name",category.getName());
    jsonObject.put("parentCategoryId",category.getParentCategoryId());
    jsonObject.put("title",category.getTitle());
    jsonArray.put(jsonObject);
  }
  return jsonArray.toString();
}

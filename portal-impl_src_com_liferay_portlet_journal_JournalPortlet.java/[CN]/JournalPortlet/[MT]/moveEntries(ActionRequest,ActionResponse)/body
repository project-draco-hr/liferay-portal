{
  long newFolderId=ParamUtil.getLong(actionRequest,"newFolderId");
  long[] folderIds=StringUtil.split(ParamUtil.getString(actionRequest,"folderIds"),0L);
  ServiceContext serviceContext=ServiceContextFactory.getInstance(JournalArticle.class.getName(),actionRequest);
  for (  long folderId : folderIds) {
    JournalFolderServiceUtil.moveFolder(folderId,newFolderId,serviceContext);
  }
  List<String> invalidArticleIds=new ArrayList<>();
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String[] articleIds=StringUtil.split(ParamUtil.getString(actionRequest,"articleIds"));
  for (  String articleId : articleIds) {
    try {
      JournalArticleServiceUtil.moveArticle(themeDisplay.getScopeGroupId(),HtmlUtil.unescape(articleId),newFolderId,serviceContext);
    }
 catch (    InvalidDDMStructureException idse) {
      if (_log.isWarnEnabled()) {
        _log.warn(idse.getMessage());
      }
      invalidArticleIds.add(articleId);
    }
  }
  if (!invalidArticleIds.isEmpty()) {
    StringBundler sb=new StringBundler(4);
    sb.append("Folder ");
    sb.append(newFolderId);
    sb.append(" does not allow the structures for articles: ");
    sb.append(StringUtil.merge(invalidArticleIds));
    throw new InvalidDDMStructureException(sb.toString());
  }
  sendEditEntryRedirect(actionRequest,actionResponse);
}

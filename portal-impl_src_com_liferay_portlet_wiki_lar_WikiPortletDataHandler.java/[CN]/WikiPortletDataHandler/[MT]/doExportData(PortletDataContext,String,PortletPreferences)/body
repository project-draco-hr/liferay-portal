{
  portletDataContext.addPermissions(RESOURCE_NAME,portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery nodeActionableDynamicQuery=new WikiNodeActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      WikiNode node=(WikiNode)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,node);
    }
  }
;
  nodeActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  nodeActionableDynamicQuery.performActions();
  ActionableDynamicQuery pageActionableDynamicQuery=new WikiPageActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
      Property statusProperty=PropertyFactoryUtil.forName("status");
      dynamicQuery.add(statusProperty.eq(WorkflowConstants.STATUS_APPROVED));
    }
    @Override protected void performAction(    Object object) throws PortalException {
      WikiPage page=(WikiPage)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,page);
    }
  }
;
  pageActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  pageActionableDynamicQuery.performActions();
  return getExportDataRootElementString(rootElement);
}

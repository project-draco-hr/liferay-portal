{
  Object[] finderArgs=new Object[]{groupId,name,portletId,classNameId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_N_P_C,finderArgs,this);
  }
  if (result instanceof PortletItem) {
    PortletItem portletItem=(PortletItem)result;
    if ((groupId != portletItem.getGroupId()) || !Validator.equals(name,portletItem.getName()) || !Validator.equals(portletId,portletItem.getPortletId())|| (classNameId != portletItem.getClassNameId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_SELECT_PORTLETITEM_WHERE);
    query.append(_FINDER_COLUMN_G_N_P_C_GROUPID_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_2);
    }
    boolean bindPortletId=false;
    if (portletId == null) {
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_1);
    }
 else     if (portletId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_3);
    }
 else {
      bindPortletId=true;
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_2);
    }
    query.append(_FINDER_COLUMN_G_N_P_C_CLASSNAMEID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindName) {
        qPos.add(StringUtil.toLowerCase(name));
      }
      if (bindPortletId) {
        qPos.add(portletId);
      }
      qPos.add(classNameId);
      List<PortletItem> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_N_P_C,finderArgs,list);
      }
 else {
        if ((list.size() > 1) && _log.isWarnEnabled()) {
          _log.warn("PortletItemPersistenceImpl.fetchByG_N_P_C(long, String, String, long, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
        }
        PortletItem portletItem=list.get(0);
        result=portletItem;
        cacheResult(portletItem);
        if ((portletItem.getGroupId() != groupId) || (portletItem.getName() == null) || !portletItem.getName().equals(name)|| (portletItem.getPortletId() == null)|| !portletItem.getPortletId().equals(portletId)|| (portletItem.getClassNameId() != classNameId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_N_P_C,finderArgs,portletItem);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_N_P_C,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (PortletItem)result;
  }
}

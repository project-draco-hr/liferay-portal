{
  try {
    HttpServletRequest req=webDavReq.getHttpServletRequest();
    if (req.getContentLength() > 0) {
      return new Status(HttpServletResponse.SC_UNSUPPORTED_MEDIA_TYPE);
    }
    String[] pathArray=webDavReq.getPathArray();
    long parentFolderId=getParentFolderId(pathArray);
    String name=WebDAVUtil.getResourceName(pathArray);
    try {
      DLFileEntryLocalServiceUtil.getFileEntryByTitle(parentFolderId,name);
      return new Status(HttpServletResponse.SC_CONFLICT);
    }
 catch (    Exception e) {
    }
    long plid=getPlid(webDavReq.getGroupId());
    String description=StringPool.BLANK;
    boolean addCommunityPermissions=true;
    boolean addGuestPermissions=true;
    DLFolderServiceUtil.addFolder(plid,parentFolderId,name,description,addCommunityPermissions,addGuestPermissions);
    String location=StringUtil.merge(pathArray,StringPool.SLASH);
    return new Status(location,HttpServletResponse.SC_CREATED);
  }
 catch (  DuplicateFolderNameException dfne) {
    return new Status(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
  }
catch (  NoSuchFolderException nsfe) {
    return new Status(HttpServletResponse.SC_CONFLICT);
  }
catch (  PrincipalException pe) {
    return new Status(HttpServletResponse.SC_FORBIDDEN);
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
}

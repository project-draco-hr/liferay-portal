{
  File file=null;
  try {
    HttpServletRequest request=webDavRequest.getHttpServletRequest();
    String[] pathArray=webDavRequest.getPathArray();
    long companyId=webDavRequest.getCompanyId();
    long groupId=webDavRequest.getGroupId();
    long parentFolderId=getParentFolderId(companyId,pathArray);
    String name=WebDAVUtil.getResourceName(pathArray);
    String title=name;
    String description=StringPool.BLANK;
    String changeLog=StringPool.BLANK;
    String extraSettings=StringPool.BLANK;
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddCommunityPermissions(isAddCommunityPermissions(groupId));
    serviceContext.setAddGuestPermissions(true);
    if (PropsValues.DL_WEBDAV_SAVE_TO_SINGLE_VERSION) {
      serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
    }
    HttpServletRequest httpServletRequest=webDavRequest.getHttpServletRequest();
    long contentLength=GetterUtil.getLong(httpServletRequest.getHeader(HttpHeaders.CONTENT_LENGTH));
    try {
      DLFileEntry fileEntry=DLFileEntryServiceUtil.getFileEntryByTitle(groupId,parentFolderId,name);
      if (isLocked(fileEntry,webDavRequest.getLockUuid())) {
        return WebDAVUtil.SC_LOCKED;
      }
      name=fileEntry.getName();
      description=fileEntry.getDescription();
      extraSettings=fileEntry.getExtraSettings();
      String[] assetTagNames=AssetTagLocalServiceUtil.getTagNames(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
      serviceContext.setAssetTagNames(assetTagNames);
      if (contentLength > 0) {
        DLFileEntryServiceUtil.updateFileEntry(groupId,parentFolderId,name,title,title,description,changeLog,false,extraSettings,request.getInputStream(),contentLength,serviceContext);
      }
 else {
        file=FileUtil.createTempFile(FileUtil.getExtension(name));
        FileUtil.write(file,request.getInputStream());
        DLFileEntryServiceUtil.updateFileEntry(groupId,parentFolderId,name,title,title,description,changeLog,false,extraSettings,file,serviceContext);
      }
    }
 catch (    NoSuchFileEntryException nsfee) {
      if (contentLength > 0) {
        DLFileEntryServiceUtil.addFileEntry(groupId,parentFolderId,name,title,description,changeLog,extraSettings,request.getInputStream(),contentLength,serviceContext);
      }
 else {
        file=FileUtil.createTempFile(FileUtil.getExtension(name));
        FileUtil.write(file,request.getInputStream());
        DLFileEntryServiceUtil.addFileEntry(groupId,parentFolderId,name,title,description,changeLog,extraSettings,file,serviceContext);
      }
    }
    if (_log.isInfoEnabled()) {
      _log.info("Added " + StringUtil.merge(pathArray,StringPool.SLASH));
    }
    return HttpServletResponse.SC_CREATED;
  }
 catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  NoSuchFolderException nsfe) {
    return HttpServletResponse.SC_CONFLICT;
  }
catch (  PortalException pe) {
    if (_log.isWarnEnabled()) {
      _log.warn(pe,pe);
    }
    return HttpServletResponse.SC_CONFLICT;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
 finally {
    if (file != null) {
      file.delete();
    }
  }
}

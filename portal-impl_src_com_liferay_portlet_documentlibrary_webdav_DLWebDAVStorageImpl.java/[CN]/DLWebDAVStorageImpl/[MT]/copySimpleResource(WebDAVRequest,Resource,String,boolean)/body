{
  File file=null;
  try {
    String[] destinationArray=WebDAVUtil.getPathArray(destination,true);
    long companyId=webDavRequest.getCompanyId();
    long parentFolderId=DLFolderConstants.DEFAULT_PARENT_FOLDER_ID;
    try {
      parentFolderId=getParentFolderId(companyId,destinationArray);
    }
 catch (    NoSuchFolderException nsfe) {
      return HttpServletResponse.SC_CONFLICT;
    }
    DLFileEntry fileEntry=(DLFileEntry)resource.getModel();
    long groupId=WebDAVUtil.getGroupId(companyId,destination);
    String name=WebDAVUtil.getResourceName(destinationArray);
    String title=WebDAVUtil.getResourceName(destinationArray);
    String description=fileEntry.getDescription();
    String changeLog=StringPool.BLANK;
    String extraSettings=fileEntry.getExtraSettings();
    file=FileUtil.createTempFile(FileUtil.getExtension(fileEntry.getName()));
    InputStream is=DLAppServiceUtil.getFileAsStream(fileEntry.getGroupId(),fileEntry.getFolderId(),fileEntry.getName());
    FileUtil.write(file,is);
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddCommunityPermissions(isAddCommunityPermissions(groupId));
    serviceContext.setAddGuestPermissions(true);
    int status=HttpServletResponse.SC_CREATED;
    if (overwrite) {
      if (deleteResource(groupId,parentFolderId,title,webDavRequest.getLockUuid())) {
        status=HttpServletResponse.SC_NO_CONTENT;
      }
    }
    DLAppServiceUtil.addFileEntry(groupId,parentFolderId,name,title,description,changeLog,extraSettings,file,serviceContext);
    return status;
  }
 catch (  DuplicateFileException dfe) {
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  DuplicateFolderNameException dfne) {
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  LockException le) {
    return WebDAVUtil.SC_LOCKED;
  }
catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
 finally {
    if (file != null) {
      file.delete();
    }
  }
}

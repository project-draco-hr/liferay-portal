{
  File file=null;
  try {
    String[] destinationArray=WebDAVUtil.getPathArray(destination,true);
    long parentFolderId;
    try {
      parentFolderId=getParentFolderId(destinationArray);
    }
 catch (    NoSuchFolderException nsfe) {
      return HttpServletResponse.SC_CONFLICT;
    }
    DLFileEntry fileEntry=(DLFileEntry)resource.getModel();
    DLFileEntryPermission.check(webDavReq.getPermissionChecker(),fileEntry,ActionKeys.VIEW);
    long userId=webDavReq.getUserId();
    String name=StringPool.BLANK;
    String sourceName=fileEntry.getName();
    String title=WebDAVUtil.getEntryName(destinationArray);
    String description=fileEntry.getDescription();
    String[] tagsEntries=new String[0];
    String extraSettings=fileEntry.getExtraSettings();
    boolean addCommunityPermissions=true;
    boolean addGuestPermissions=true;
    String fileName=SystemProperties.get(SystemProperties.TMP_DIR) + StringPool.SLASH + Time.getTimestamp()+ PwdGenerator.getPassword(PwdGenerator.KEY2,8);
    file=new File(fileName);
    InputStream is=DLFileEntryLocalServiceUtil.getFileAsStream(fileEntry.getCompanyId(),userId,fileEntry.getFolderId(),fileEntry.getName());
    FileUtil.write(file,is);
    if (_log.isDebugEnabled()) {
      _log.debug("Writing request to file " + fileName);
    }
    DLFolderPermission.check(webDavReq.getPermissionChecker(),parentFolderId,ActionKeys.ADD_DOCUMENT);
    int status=HttpServletResponse.SC_CREATED;
    if (overwrite) {
      try {
        long groupId=webDavReq.getGroupId();
        DLFolderServiceUtil.deleteFolder(groupId,parentFolderId,title);
        DLFileEntryLocalServiceUtil.addFileEntry(userId,parentFolderId,name,title,description,tagsEntries,extraSettings,file,addCommunityPermissions,addGuestPermissions);
        status=HttpServletResponse.SC_NO_CONTENT;
      }
 catch (      NoSuchFolderException nsfe) {
        DLFileEntry destFile=DLFileEntryLocalServiceUtil.addOrOverwriteFileEntry(userId,parentFolderId,name,sourceName,title,description,tagsEntries,extraSettings,file,addCommunityPermissions,addGuestPermissions);
        if (destFile.getVersion() > 1.0) {
          status=HttpServletResponse.SC_NO_CONTENT;
        }
 else {
          status=HttpServletResponse.SC_CREATED;
        }
      }
    }
 else {
      DLFileEntryLocalServiceUtil.addFileEntry(userId,parentFolderId,name,title,description,tagsEntries,extraSettings,file,addCommunityPermissions,addGuestPermissions);
      status=HttpServletResponse.SC_CREATED;
    }
    return status;
  }
 catch (  DuplicateFolderNameException dfne) {
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  DuplicateFileException dfe) {
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
 finally {
    if (file != null) {
      file.delete();
    }
  }
}

{
  File file=null;
  try {
    Resource resource=getResource(webDavReq);
    if (resource == null) {
      return HttpServletResponse.SC_NOT_FOUND;
    }
    Object model=resource.getModel();
    String[] destinationArray=WebDAVUtil.getPathArray(destination);
    if (model instanceof DLFolder) {
      DLFolder folder=(DLFolder)model;
      long plid=getPlid(webDavReq.getGroupId());
      String parentFolderId=destinationArray[destinationArray.length - 2];
      String name="Copy of " + folder.getName();
      String description=folder.getDescription();
      boolean addCommunityPermissions=true;
      boolean addGuestPermissions=true;
      DLFolderServiceUtil.addFolder(plid,parentFolderId,name,description,addCommunityPermissions,addGuestPermissions);
    }
 else {
      DLFileEntry fileEntry=(DLFileEntry)model;
      String[] pathArray=webDavReq.getPathArray();
      long userId=webDavReq.getUserId();
      String folderId=destinationArray[destinationArray.length - 2];
      String name=pathArray[pathArray.length - 1];
      String title="Copy of " + fileEntry.getTitle();
      String description=fileEntry.getDescription();
      String[] tagsEntries=new String[0];
      String extraSettings=fileEntry.getExtraSettings();
      String fileName=SystemProperties.get(SystemProperties.TMP_DIR) + StringPool.SLASH + Time.getTimestamp()+ PwdGenerator.getPassword(PwdGenerator.KEY2,8);
      file=new File(fileName);
      InputStream is=DLFileEntryLocalServiceUtil.getFileAsStream(fileEntry.getCompanyId(),userId,fileEntry.getFolderId(),fileEntry.getName());
      FileUtil.write(file,is);
      if (_log.isDebugEnabled()) {
        _log.debug("Writing request to file " + fileName);
      }
      boolean addCommunityPermissions=true;
      boolean addGuestPermissions=true;
      DLFolderPermission.check(webDavReq.getPermissionChecker(),folderId,ActionKeys.ADD_DOCUMENT);
      DLFileEntryLocalServiceUtil.addFileEntry(userId,folderId,name,title,description,tagsEntries,extraSettings,file,addCommunityPermissions,addGuestPermissions);
    }
    return HttpServletResponse.SC_CREATED;
  }
 catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
 finally {
    if (file != null) {
      file.delete();
    }
  }
}

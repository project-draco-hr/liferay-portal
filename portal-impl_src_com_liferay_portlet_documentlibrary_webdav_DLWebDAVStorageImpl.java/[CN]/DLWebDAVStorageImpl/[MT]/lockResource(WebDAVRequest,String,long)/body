{
  Resource resource=getResource(webDavRequest);
  Lock lock=null;
  int status=HttpServletResponse.SC_OK;
  try {
    if (resource == null) {
      status=HttpServletResponse.SC_CREATED;
      String[] pathArray=webDavRequest.getPathArray();
      long companyId=webDavRequest.getCompanyId();
      long groupId=webDavRequest.getGroupId();
      long parentFolderId=getParentFolderId(companyId,pathArray);
      String title=WebDAVUtil.getResourceName(pathArray);
      String description=StringPool.BLANK;
      String changeLog=StringPool.BLANK;
      File file=FileUtil.createTempFile(FileUtil.getExtension(title));
      file.createNewFile();
      ServiceContext serviceContext=new ServiceContext();
      serviceContext.setAddGroupPermissions(isAddGroupPermissions(groupId));
      serviceContext.setAddGuestPermissions(true);
      FileEntry fileEntry=DLAppServiceUtil.addFileEntry(groupId,parentFolderId,title,description,changeLog,file,serviceContext);
      resource=toResource(webDavRequest,fileEntry,false);
    }
    if (resource instanceof DLFileEntryResourceImpl) {
      FileEntry fileEntry=(FileEntry)resource.getModel();
      lock=DLAppServiceUtil.lockFileEntry(fileEntry.getFileEntryId(),owner,timeout);
    }
 else {
      boolean inheritable=false;
      long depth=WebDAVUtil.getDepth(webDavRequest.getHttpServletRequest());
      if (depth != 0) {
        inheritable=true;
      }
      Folder folder=(Folder)resource.getModel();
      lock=DLAppServiceUtil.lockFolder(folder.getRepositoryId(),folder.getFolderId(),owner,inheritable,timeout);
    }
  }
 catch (  Exception e) {
    if (!(e instanceof DuplicateLockException)) {
      throw new WebDAVException(e);
    }
    status=WebDAVUtil.SC_LOCKED;
  }
  return new Status(lock,status);
}

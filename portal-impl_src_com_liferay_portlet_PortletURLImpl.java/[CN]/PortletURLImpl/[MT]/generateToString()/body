{
  StringBundler sb=new StringBundler(64);
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  if (themeDisplay == null) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to generate string because theme display is null");
    }
    return StringPool.BLANK;
  }
  try {
    if (_layoutFriendlyURL == null) {
      Layout layout=getLayout();
      if (layout != null) {
        _layoutFriendlyURL=GetterUtil.getString(PortalUtil.getLayoutFriendlyURL(layout,themeDisplay));
        if (_secure) {
          _layoutFriendlyURL=HttpUtil.protocolize(_layoutFriendlyURL,PropsValues.WEB_SERVER_HTTPS_PORT,true);
        }
      }
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  Key key=null;
  try {
    if (_encrypt) {
      Company company=PortalUtil.getCompany(_request);
      key=company.getKeyObj();
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  if (Validator.isNull(_layoutFriendlyURL)) {
    sb.append(PortalUtil.getPortalURL(_request,_secure));
    sb.append(themeDisplay.getPathMain());
    sb.append("/portal/layout?");
    addPortalAuthToken(sb,key);
    sb.append("p_l_id");
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,_plid));
    sb.append(StringPool.AMPERSAND);
  }
 else {
    if (themeDisplay.isFacebook()) {
      sb.append(FacebookUtil.FACEBOOK_APPS_URL);
      sb.append(themeDisplay.getFacebookCanvasPageURL());
    }
 else {
      if (!_layoutFriendlyURL.startsWith(Http.HTTP_WITH_SLASH) && !_layoutFriendlyURL.startsWith(Http.HTTPS_WITH_SLASH)) {
        sb.append(PortalUtil.getPortalURL(_request,_secure));
      }
      sb.append(_layoutFriendlyURL);
    }
    String friendlyURLPath=getPortletFriendlyURLPath();
    if (Validator.isNotNull(friendlyURLPath)) {
      if (themeDisplay.isFacebook()) {
        int pos=friendlyURLPath.indexOf(CharPool.SLASH,1);
        if (pos != -1) {
          sb.append(friendlyURLPath.substring(pos));
        }
 else {
          sb.append(friendlyURLPath);
        }
      }
 else {
        sb.append("/-");
        sb.append(friendlyURLPath);
      }
    }
    sb.append(StringPool.QUESTION);
    addPortalAuthToken(sb,key);
  }
  addPortletAuthToken(sb,key);
  for (  Map.Entry<String,String> entry : getReservedParameterMap().entrySet()) {
    String name=entry.getKey();
    if (!isParameterIncludedInPath(name)) {
      sb.append(HttpUtil.encodeURL(name));
      sb.append(StringPool.EQUAL);
      sb.append(processValue(key,entry.getValue()));
      sb.append(StringPool.AMPERSAND);
    }
  }
  if (_doAsUserId > 0) {
    try {
      Company company=PortalUtil.getCompany(_request);
      sb.append("doAsUserId");
      sb.append(StringPool.EQUAL);
      sb.append(processValue(company.getKeyObj(),_doAsUserId));
      sb.append(StringPool.AMPERSAND);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
 else {
    String doAsUserId=themeDisplay.getDoAsUserId();
    if (Validator.isNotNull(doAsUserId)) {
      sb.append("doAsUserId");
      sb.append(StringPool.EQUAL);
      sb.append(processValue(key,doAsUserId));
      sb.append(StringPool.AMPERSAND);
    }
  }
  String doAsUserLanguageId=_doAsUserLanguageId;
  if (Validator.isNull(doAsUserLanguageId)) {
    doAsUserLanguageId=themeDisplay.getDoAsUserLanguageId();
  }
  if (Validator.isNotNull(doAsUserLanguageId)) {
    sb.append("doAsUserLanguageId");
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,doAsUserLanguageId));
    sb.append(StringPool.AMPERSAND);
  }
  long doAsGroupId=_doAsGroupId;
  if (doAsGroupId <= 0) {
    doAsGroupId=themeDisplay.getDoAsGroupId();
  }
  if (doAsGroupId > 0) {
    sb.append("doAsGroupId");
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,doAsGroupId));
    sb.append(StringPool.AMPERSAND);
  }
  long refererGroupId=_refererGroupId;
  if (refererGroupId <= 0) {
    refererGroupId=themeDisplay.getRefererGroupId();
  }
  if (refererGroupId > 0) {
    sb.append("refererGroupId");
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,refererGroupId));
    sb.append(StringPool.AMPERSAND);
  }
  long refererPlid=_refererPlid;
  if (refererPlid <= 0) {
    refererPlid=themeDisplay.getRefererPlid();
  }
  if (refererPlid > 0) {
    sb.append("refererPlid");
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,refererPlid));
    sb.append(StringPool.AMPERSAND);
  }
  for (  Map.Entry<String,String[]> entry : _removePublicRenderParameters.entrySet()) {
    String lastString=sb.stringAt(sb.index() - 1);
    if (lastString.charAt(lastString.length() - 1) != CharPool.AMPERSAND) {
      sb.append(StringPool.AMPERSAND);
    }
    sb.append(HttpUtil.encodeURL(entry.getKey()));
    sb.append(StringPool.EQUAL);
    sb.append(processValue(key,entry.getValue()[0]));
    sb.append(StringPool.AMPERSAND);
  }
  Map<String,String[]> renderParams=_params;
  if (_copyCurrentRenderParameters) {
    renderParams=_mergeWithRenderParameters(renderParams);
  }
  int previousSbIndex=sb.index();
  for (  Map.Entry<String,String[]> entry : renderParams.entrySet()) {
    String name=entry.getKey();
    String[] values=entry.getValue();
    if (isParameterIncludedInPath(name)) {
      continue;
    }
    String publicRenderParameterName=getPublicRenderParameterName(name);
    if (Validator.isNotNull(publicRenderParameterName)) {
      name=publicRenderParameterName;
    }
    name=HttpUtil.encodeURL(prependNamespace(name));
    for (    String value : values) {
      sb.append(name);
      sb.append(StringPool.EQUAL);
      sb.append(processValue(key,value));
      sb.append(StringPool.AMPERSAND);
    }
  }
  if (sb.index() > previousSbIndex) {
    sb.setIndex(sb.index() - 1);
  }
  if (_encrypt) {
    sb.append(StringPool.AMPERSAND);
    sb.append(WebKeys.ENCRYPT);
    sb.append("=1");
  }
  if (PropsValues.PORTLET_URL_ANCHOR_ENABLE) {
    if (_anchor && (_windowStateString != null) && !_windowStateString.equals(WindowState.MAXIMIZED.toString())&& !_windowStateString.equals(LiferayWindowState.EXCLUSIVE.toString())&& !_windowStateString.equals(LiferayWindowState.POP_UP.toString())) {
      String lastString=sb.stringAt(sb.index() - 1);
      char lastChar=lastString.charAt(lastString.length() - 1);
      if ((lastChar != CharPool.AMPERSAND) && (lastChar != CharPool.QUESTION)) {
        sb.append(StringPool.AMPERSAND);
      }
      sb.append("#p_");
      sb.append(HttpUtil.encodeURL(_portletId));
    }
  }
  String result=sb.toString();
  if (result.endsWith(StringPool.AMPERSAND) || result.endsWith(StringPool.QUESTION)) {
    result=result.substring(0,result.length() - 1);
  }
  if (themeDisplay.isFacebook()) {
    int pos=result.indexOf(CharPool.QUESTION);
    if (pos == -1) {
      if (!result.endsWith(StringPool.SLASH)) {
        result+=StringPool.SLASH;
      }
    }
 else {
      String path=result.substring(0,pos);
      if (!result.endsWith(StringPool.SLASH)) {
        result=path + StringPool.SLASH + result.substring(pos);
      }
    }
  }
 else   if (!CookieKeys.hasSessionId(_request)) {
    result=PortalUtil.getURLWithSessionId(result,_request.getSession().getId());
  }
  if (_escapeXml) {
    result=HtmlUtil.escape(result);
  }
  if (result.length() > Http.URL_MAXIMUM_LENGTH) {
    result=HttpUtil.shortenURL(result,2);
  }
  return result;
}

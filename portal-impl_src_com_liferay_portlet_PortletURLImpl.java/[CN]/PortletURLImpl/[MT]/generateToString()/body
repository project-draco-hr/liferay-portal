{
  StringMaker sm=new StringMaker();
  ThemeDisplay themeDisplay=(ThemeDisplay)_req.getAttribute(WebKeys.THEME_DISPLAY);
  PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
  Portlet portlet=getPortlet();
  String portalURL=null;
  if (themeDisplay.isFacebook()) {
    portalURL=FacebookUtil.FACEBOOK_APPS_URL + themeDisplay.getFacebookAppName();
  }
 else {
    portalURL=PortalUtil.getPortalURL(_req,_secure);
  }
  try {
    if (_layoutFriendlyURL == null) {
      Layout layout=getLayout();
      if (layout != null) {
        _layoutFriendlyURL=GetterUtil.getString(PortalUtil.getLayoutFriendlyURL(layout,themeDisplay));
      }
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  Key key=null;
  try {
    if (_encrypt) {
      Company company=PortalUtil.getCompany(_req);
      key=company.getKeyObj();
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  if (Validator.isNull(_layoutFriendlyURL)) {
    sm.append(portalURL);
    sm.append(themeDisplay.getPathMain());
    sm.append("/portal/layout?");
    sm.append("p_l_id");
    sm.append(StringPool.EQUAL);
    sm.append(processValue(key,_plid));
    sm.append(StringPool.AMPERSAND);
  }
 else {
    if (!_layoutFriendlyURL.startsWith(Http.HTTP_WITH_SLASH) && !_layoutFriendlyURL.startsWith(Http.HTTPS_WITH_SLASH)) {
      sm.append(portalURL);
    }
    if (!themeDisplay.isFacebook()) {
      sm.append(_layoutFriendlyURL);
    }
    String friendlyURLPath=getPortletFriendlyURLPath();
    if (Validator.isNotNull(friendlyURLPath)) {
      if (themeDisplay.isFacebook()) {
        int pos=friendlyURLPath.indexOf(StringPool.SLASH,1);
        if (pos != -1) {
          sm.append(friendlyURLPath.substring(pos));
        }
 else {
          sm.append(friendlyURLPath);
        }
      }
 else {
        sm.append("/-");
        sm.append(friendlyURLPath);
      }
      if (_lifecycle.equals(PortletRequest.RENDER_PHASE)) {
        addParameterIncludedInPath("p_p_lifecycle");
      }
      addParameterIncludedInPath("p_p_state");
      addParameterIncludedInPath("p_p_mode");
      addParameterIncludedInPath("p_p_col_id");
      addParameterIncludedInPath("p_p_col_pos");
      addParameterIncludedInPath("p_p_col_count");
    }
    sm.append(StringPool.QUESTION);
  }
  if (!isParameterIncludedInPath("p_p_id")) {
    sm.append("p_p_id");
    sm.append(StringPool.EQUAL);
    sm.append(processValue(key,_portletId));
    sm.append(StringPool.AMPERSAND);
  }
  if (!isParameterIncludedInPath("p_p_lifecycle")) {
    sm.append("p_p_lifecycle");
    sm.append(StringPool.EQUAL);
    if (_lifecycle.equals(PortletRequest.ACTION_PHASE)) {
      sm.append(processValue(key,"1"));
    }
 else     if (_lifecycle.equals(PortletRequest.RENDER_PHASE)) {
      sm.append(processValue(key,"0"));
    }
 else     if (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
      sm.append(processValue(key,"2"));
    }
    sm.append(StringPool.AMPERSAND);
  }
  if (!isParameterIncludedInPath("p_p_state")) {
    if (_windowState != null) {
      sm.append("p_p_state");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,_windowState.toString()));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_mode")) {
    if (_portletMode != null) {
      sm.append("p_p_mode");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,_portletMode.toString()));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_resource_id")) {
    if (_resourceID != null) {
      sm.append("p_p_resource_id");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,_resourceID));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_cacheability")) {
    if (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
      sm.append("p_p_cacheability");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,_cacheability));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_col_id")) {
    if (Validator.isNotNull(portletDisplay.getColumnId())) {
      sm.append("p_p_col_id");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,portletDisplay.getColumnId()));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_col_pos")) {
    if (portletDisplay.getColumnPos() > 0) {
      sm.append("p_p_col_pos");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,portletDisplay.getColumnPos()));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (!isParameterIncludedInPath("p_p_col_count")) {
    if (portletDisplay.getColumnCount() > 0) {
      sm.append("p_p_col_count");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,portletDisplay.getColumnCount()));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (_doAsUserId > 0) {
    try {
      Company company=PortalUtil.getCompany(_req);
      sm.append("doAsUserId");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(company.getKeyObj(),_doAsUserId));
      sm.append(StringPool.AMPERSAND);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
 else {
    String doAsUserId=themeDisplay.getDoAsUserId();
    if (Validator.isNotNull(doAsUserId)) {
      sm.append("doAsUserId");
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,doAsUserId));
      sm.append(StringPool.AMPERSAND);
    }
  }
  if (_copyCurrentRenderParameters) {
    Enumeration<String> enu=_req.getParameterNames();
    while (enu.hasMoreElements()) {
      String name=enu.nextElement();
      String[] oldValues=_req.getParameterValues(name);
      String[] newValues=_params.get(name);
      if (newValues == null) {
        _params.put(name,oldValues);
      }
 else       if (isBlankValue(newValues)) {
      }
 else {
        newValues=ArrayUtil.append(newValues,oldValues);
        _params.put(name,newValues);
      }
    }
  }
  Iterator<Map.Entry<String,String[]>> itr=_params.entrySet().iterator();
  while (itr.hasNext()) {
    Map.Entry<String,String[]> entry=itr.next();
    String name=entry.getKey();
    String[] values=entry.getValue();
    if (portlet != null) {
      PublicRenderParameter publicRenderParameter=portlet.getPublicRenderParameter(name);
      if (publicRenderParameter != null) {
        QName qName=publicRenderParameter.getQName();
        if (!_copyCurrentRenderParameters) {
          String[] oldValues=_req.getParameterValues(name);
          if (oldValues != null) {
            if (values == null) {
              values=oldValues;
            }
 else {
              values=ArrayUtil.append(values,oldValues);
            }
          }
        }
        name=QNameUtil.getPublicRenderParameterName(qName);
      }
    }
    if (isBlankValue(values)) {
      continue;
    }
    for (int i=0; i < values.length; i++) {
      if (isParameterIncludedInPath(name)) {
        continue;
      }
      if (!PortalUtil.isReservedParameter(name) && !name.startsWith(QNameUtil.PUBLIC_RENDER_PARAMETER_NAMESPACE)) {
        sm.append(getNamespace());
      }
      sm.append(name);
      sm.append(StringPool.EQUAL);
      sm.append(processValue(key,values[i]));
      if ((i + 1 < values.length) || itr.hasNext()) {
        sm.append(StringPool.AMPERSAND);
      }
    }
  }
  if (_encrypt) {
    sm.append(StringPool.AMPERSAND + WebKeys.ENCRYPT + "=1");
  }
  if (PropsValues.PORTLET_URL_ANCHOR_ENABLE) {
    if (_anchor && (_windowState != null) && (!_windowState.equals(WindowState.MAXIMIZED))&& (!_windowState.equals(LiferayWindowState.EXCLUSIVE))&& (!_windowState.equals(LiferayWindowState.POP_UP))) {
      if (sm.lastIndexOf(StringPool.AMPERSAND) != (sm.length() - 1)) {
        sm.append(StringPool.AMPERSAND);
      }
      sm.append("#p_").append(_portletId);
    }
  }
  String result=sm.toString();
  if (result.endsWith(StringPool.AMPERSAND) || result.endsWith(StringPool.QUESTION)) {
    result=result.substring(0,result.length() - 1);
  }
  if (themeDisplay.isFacebook()) {
    int pos=result.indexOf(StringPool.QUESTION);
    if (pos == -1) {
      if (!result.endsWith(StringPool.SLASH)) {
        result+=StringPool.SLASH;
      }
    }
 else {
      String path=result.substring(0,pos);
      if (!result.endsWith(StringPool.SLASH)) {
        result=path + StringPool.SLASH + result.substring(pos);
      }
    }
  }
  if (!CookieKeys.hasSessionId(_req)) {
    result=PortalUtil.getURLWithSessionId(result,_req.getSession().getId());
  }
  if (_escapeXml) {
    result=URLHelper.escapeURL(result);
  }
  return result;
}

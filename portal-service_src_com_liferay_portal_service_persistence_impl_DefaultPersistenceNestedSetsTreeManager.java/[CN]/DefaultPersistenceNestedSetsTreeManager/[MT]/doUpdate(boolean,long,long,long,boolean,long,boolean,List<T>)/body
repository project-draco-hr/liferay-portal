{
  StringBundler sb=null;
  if (inList == null) {
    sb=new StringBundler(14);
  }
 else {
    sb=new StringBundler(17 + inList.size() * 2);
  }
  sb.append("UPDATE ");
  sb.append(_tableName);
  sb.append(" SET ");
  if (leftOrRight) {
    sb.append(_nestedSetsLeftName);
    sb.append(" = (");
    sb.append(_nestedSetsLeftName);
    sb.append(" + ?)");
  }
 else {
    sb.append(_nestedSetsRightName);
    sb.append(" = (");
    sb.append(_nestedSetsRightName);
    sb.append(" + ?)");
  }
  sb.append(" WHERE ");
  sb.append(_scopeIdName);
  sb.append(" = ? AND ");
  if (leftOrRight) {
    sb.append(_nestedSetsLeftName);
  }
 else {
    sb.append(_nestedSetsRightName);
  }
  if (startIncluside) {
    sb.append(" >= ? AND ");
  }
 else {
    sb.append(" > ? AND ");
  }
  if (leftOrRight) {
    sb.append(_nestedSetsLeftName);
  }
 else {
    sb.append(_nestedSetsRightName);
  }
  if (endInclusive) {
    sb.append(" <= ? ");
  }
 else {
    sb.append(" < ? ");
  }
  if (inList != null) {
    sb.append(" AND ");
    sb.append(_pkName);
    sb.append(" IN(");
    for (    T t : inList) {
      sb.append(t.getPrimaryKey());
      sb.append(", ");
    }
    sb.setIndex(sb.index() - 1);
    sb.append(")");
  }
  Session session=null;
  try {
    session=_basePersistenceImpl.openSession();
    SQLQuery sqlQuery=session.createSQLQuery(sb.toString());
    QueryPos qPos=QueryPos.getInstance(sqlQuery);
    qPos.add(delta);
    qPos.add(scopeId);
    qPos.add(start);
    qPos.add(end);
    sqlQuery.executeUpdate();
  }
 catch (  Exception e) {
    throw _basePersistenceImpl.processException(e);
  }
 finally {
    _basePersistenceImpl.closeSession(session);
  }
}

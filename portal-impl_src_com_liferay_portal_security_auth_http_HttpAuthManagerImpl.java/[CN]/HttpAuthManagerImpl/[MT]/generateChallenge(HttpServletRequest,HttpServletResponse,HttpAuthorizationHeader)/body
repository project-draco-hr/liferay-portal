{
  if (request == null) {
    throw new IllegalArgumentException("HttpServletRequest is mandatory");
  }
  if (response == null) {
    throw new IllegalArgumentException("HttpServletResponse is mandatory");
  }
  if ((authorizationHeader == null) || Validator.isBlank(authorizationHeader.getScheme())) {
    throw new IllegalArgumentException("AuthorizationHeader scheme is mandatory");
  }
  String realm=authorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTH_PARAMETER_REALM);
  if (Validator.isBlank(realm)) {
    authorizationHeader.setAuthParameter(HttpAuthorizationHeader.AUTH_PARAMETER_REALM,Portal.PORTAL_REALM);
  }
  String authorizationScheme=authorizationHeader.getScheme();
  if (StringUtil.equalsIgnoreCase(authorizationScheme,HttpAuthorizationHeader.SCHEME_BASIC)) {
    generateBasicChallenge(request,response,authorizationHeader);
  }
 else   if (StringUtil.equalsIgnoreCase(authorizationScheme,HttpAuthorizationHeader.SCHEME_DIGEST)) {
    generateDigestChallenge(request,response,authorizationHeader);
  }
 else {
    throw new UnsupportedOperationException("Authorization scheme " + authorizationScheme + " is not supported");
  }
}

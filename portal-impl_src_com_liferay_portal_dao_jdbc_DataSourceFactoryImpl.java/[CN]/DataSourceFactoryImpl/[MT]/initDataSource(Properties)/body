{
  Class.forName(DataSourceWrapper.class.getName());
  Properties defaultProperties=PropsUtil.getProperties("jdbc.default.",true);
  PropertiesUtil.merge(defaultProperties,properties);
  properties=defaultProperties;
  String jndiName=properties.getProperty("jndi.name");
  if (Validator.isNotNull(jndiName)) {
    try {
      Properties jndiEnvironmentProperties=PropsUtil.getProperties(PropsKeys.JNDI_ENVIRONMENT,true);
      Context context=new InitialContext(jndiEnvironmentProperties);
      return (DataSource)JNDIUtil.lookup(context,jndiName);
    }
 catch (    Exception e) {
      _log.error("Unable to lookup " + jndiName,e);
    }
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Data source properties:\n");
    SortedProperties sortedProperties=new SortedProperties(properties);
    _log.debug(PropertiesUtil.toString(sortedProperties));
  }
  testDatabaseClass(properties);
  DataSource dataSource=null;
  String liferayPoolProvider=PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER;
  if (StringUtil.equalsIgnoreCase(liferayPoolProvider,"c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider,"c3po")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing C3P0 data source");
    }
    dataSource=initDataSourceC3PO(properties);
  }
 else   if (StringUtil.equalsIgnoreCase(liferayPoolProvider,"dbcp")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing DBCP data source");
    }
    dataSource=initDataSourceDBCP(properties);
  }
 else   if (StringUtil.equalsIgnoreCase(liferayPoolProvider,"hikaricp")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing HikariCP data source");
    }
    dataSource=initDataSourceHikariCP(properties);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing Tomcat data source");
    }
    dataSource=initDataSourceTomcat(properties);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Created data source " + dataSource.getClass());
  }
  return _pacl.getDataSource(dataSource);
}

{
  Properties defaultProperties=PropsUtil.getProperties("jdbc.default.",true);
  PropertiesUtil.merge(defaultProperties,properties);
  properties=defaultProperties;
  String jndiName=properties.getProperty("jndi.name");
  if (Validator.isNotNull(jndiName)) {
    try {
      Properties jndiEnvironmentProperties=PropsUtil.getProperties(PropsKeys.JNDI_ENVIRONMENT,true);
      Context context=new InitialContext(jndiEnvironmentProperties);
      return (DataSource)JNDIUtil.lookup(context,jndiName);
    }
 catch (    Exception e) {
      _log.error("Unable to lookup " + jndiName,e);
    }
  }
  DataSource dataSource=null;
  String liferayPoolProvider=PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER;
  if (liferayPoolProvider.equalsIgnoreCase("c3p0") || liferayPoolProvider.equalsIgnoreCase("c3po")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing C3P0 data source");
    }
    dataSource=initDataSourceC3PO(properties);
  }
 else   if (liferayPoolProvider.equalsIgnoreCase("dbcp")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing DBCP data source");
    }
    dataSource=initDataSourceDBCP(properties);
  }
 else   if (liferayPoolProvider.equalsIgnoreCase("primrose")) {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing Primrose data source");
    }
    dataSource=initDataSourcePrimrose(properties);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Initializing Tomcat data source");
    }
    dataSource=initDataSourceTomcat(properties);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Created data source " + dataSource.getClass().getName());
    SortedProperties sortedProperties=new SortedProperties(properties);
    sortedProperties.list(System.out);
  }
  return dataSource;
}

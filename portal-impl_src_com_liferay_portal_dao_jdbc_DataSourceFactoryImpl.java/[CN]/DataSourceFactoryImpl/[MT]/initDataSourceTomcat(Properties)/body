{
  PoolProperties poolProperties=new PoolProperties();
  for (  Map.Entry<Object,Object> entry : properties.entrySet()) {
    String key=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (isPropertyLiferay(key)) {
      continue;
    }
    if (isPropertyC3PO(key)) {
      continue;
    }
    if (isPropertyHikariCP(key)) {
      continue;
    }
    try {
      BeanUtil.setProperty(poolProperties,key,value);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Property " + key + " is an invalid Tomcat JDBC "+ "property");
      }
    }
  }
  String poolName=StringUtil.randomString();
  poolProperties.setName(poolName);
  org.apache.tomcat.jdbc.pool.DataSource dataSource=new org.apache.tomcat.jdbc.pool.DataSource(poolProperties);
  if (poolProperties.isJmxEnabled()) {
    Registry registry=RegistryUtil.getRegistry();
    _serviceTracker=registry.trackServices(MBeanServer.class,new MBeanServerServiceTrackerCustomizer(dataSource,poolName));
    _serviceTracker.open();
  }
  registerConnectionPoolMetrics(new TomcatConnectionPoolMetrics(dataSource));
  return dataSource;
}

{
  PoolProperties poolProperties=new PoolProperties();
  for (  Map.Entry<Object,Object> entry : properties.entrySet()) {
    String key=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (key.equalsIgnoreCase("jndi.name") || key.equalsIgnoreCase("liferay.pool.provider")) {
      continue;
    }
    if (key.equalsIgnoreCase("acquireIncrement") || key.equalsIgnoreCase("connectionCustomizerClassName") || key.equalsIgnoreCase("idleConnectionTestPeriod")|| key.equalsIgnoreCase("maxIdleTime")|| key.equalsIgnoreCase("maxPoolSize")|| key.equalsIgnoreCase("minPoolSize")|| key.equalsIgnoreCase("numHelperThreads")|| key.equalsIgnoreCase("preferredTestQuery")) {
      continue;
    }
    if (key.equalsIgnoreCase("base") || key.equalsIgnoreCase("connectionTransactionIsolation") || key.equalsIgnoreCase("idleTime")|| key.equalsIgnoreCase("numberOfConnectionsToInitializeWith")) {
      continue;
    }
    try {
      BeanUtil.setProperty(poolProperties,key,value);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Property " + key + " is not a valid Tomcat jdbc-pool property");
      }
    }
  }
  String poolName=PwdGenerator.getPassword(PwdGenerator.KEY2,8);
  poolProperties.setName(poolName);
  org.apache.tomcat.jdbc.pool.DataSource dataSource=new org.apache.tomcat.jdbc.pool.DataSource(poolProperties);
  if (poolProperties.isJmxEnabled()) {
    ConnectionPool connectionPool=dataSource.createPool().getJmxPool();
    MBeanServer mBeanServer=ManagementFactory.getPlatformMBeanServer();
    ObjectName objectName=new ObjectName(_tomcatJDBCPoolObjectNamePrefix + poolName);
    mBeanServer.registerMBean(connectionPool,objectName);
  }
  return dataSource;
}

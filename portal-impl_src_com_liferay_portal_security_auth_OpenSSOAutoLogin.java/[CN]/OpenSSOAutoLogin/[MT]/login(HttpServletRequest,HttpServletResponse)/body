{
  String[] credentials=null;
  try {
    long companyId=PortalUtil.getCompanyId(request);
    if (!PrefsPropsUtil.getBoolean(companyId,PropsKeys.OPEN_SSO_AUTH_ENABLED,PropsValues.OPEN_SSO_AUTH_ENABLED)) {
      return credentials;
    }
    String serviceUrl=PrefsPropsUtil.getString(companyId,PropsKeys.OPEN_SSO_SERVICE_URL);
    if (!OpenSSOUtil.isAuthenticated(request,serviceUrl)) {
      return credentials;
    }
    boolean ldapImportEnabled=PrefsPropsUtil.getBoolean(companyId,PropsKeys.OPEN_SSO_LDAP_IMPORT_ENABLED,PropsValues.OPEN_SSO_LDAP_IMPORT_ENABLED);
    String screenNameAttr=PrefsPropsUtil.getString(companyId,PropsKeys.OPEN_SSO_SCREEN_NAME_ATTR,PropsValues.OPEN_SSO_SCREEN_NAME_ATTR);
    String emailAddressAttr=PrefsPropsUtil.getString(companyId,PropsKeys.OPEN_SSO_EMAIL_ADDRESS_ATTR,PropsValues.OPEN_SSO_EMAIL_ADDRESS_ATTR);
    String firstNameAttr=PrefsPropsUtil.getString(companyId,PropsKeys.OPEN_SSO_FIRST_NAME_ATTR,PropsValues.OPEN_SSO_FIRST_NAME_ATTR);
    String lastNameAttr=PrefsPropsUtil.getString(companyId,PropsKeys.OPEN_SSO_LAST_NAME_ATTR,PropsValues.OPEN_SSO_LAST_NAME_ATTR);
    Map<String,String> nameValues=OpenSSOUtil.getAttributes(request,serviceUrl);
    String screenName=nameValues.get(screenNameAttr);
    String emailAddress=nameValues.get(emailAddressAttr);
    String firstName=nameValues.get(firstNameAttr);
    String lastName=nameValues.get(lastNameAttr);
    if (_log.isDebugEnabled()) {
      _log.debug("Validating user information for " + firstName + " "+ lastName+ " with screen name "+ screenName+ " and email address "+ emailAddress);
    }
    User user=null;
    if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) {
      try {
        user=UserLocalServiceUtil.getUserByEmailAddress(companyId,emailAddress);
        ScreenNameGenerator screenNameGenerator=ScreenNameGeneratorFactory.getInstance();
        screenName=screenNameGenerator.generate(companyId,user.getUserId(),emailAddress);
      }
 catch (      NoSuchUserException nsue) {
      }
    }
    if (ldapImportEnabled) {
      try {
        String authType=PrefsPropsUtil.getString(companyId,PropsKeys.COMPANY_SECURITY_AUTH_TYPE,PropsValues.COMPANY_SECURITY_AUTH_TYPE);
        if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
          user=importLDAPUser(companyId,StringPool.BLANK,screenName);
        }
 else {
          user=importLDAPUser(companyId,emailAddress,StringPool.BLANK);
        }
      }
 catch (      SystemException se) {
      }
    }
 else {
      if (Validator.isNull(emailAddress)) {
        throw new AutoLoginException("Email address is null");
      }
    }
    if (user == null) {
      try {
        user=UserLocalServiceUtil.getUserByScreenName(companyId,screenName);
      }
 catch (      NoSuchUserException nsue) {
      }
    }
    if (user == null) {
      ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
      Locale locale=LocaleUtil.getDefault();
      if (themeDisplay != null) {
        locale=themeDisplay.getLocale();
      }
      if (_log.isDebugEnabled()) {
        _log.debug("Adding user " + screenName);
      }
      user=addUser(companyId,firstName,lastName,emailAddress,screenName,locale);
    }
    String redirect=ParamUtil.getString(request,"redirect");
    if (Validator.isNotNull(redirect)) {
      request.setAttribute(AutoLogin.AUTO_LOGIN_REDIRECT,redirect);
    }
    credentials=new String[3];
    credentials[0]=String.valueOf(user.getUserId());
    credentials[1]=user.getPassword();
    credentials[2]=Boolean.TRUE.toString();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return credentials;
}

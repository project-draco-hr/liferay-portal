{
  Session session=null;
  try {
    session=_jcrFactoryWrapper.createSession();
    Workspace workspace=session.getWorkspace();
    VersionManager versionManager=workspace.getVersionManager();
    Node rootNode=getRootNode(session,companyId);
    Node repositoryNode=getFolderNode(rootNode,repositoryId);
    Node fileNode=repositoryNode.getNode(fileName);
    Node contentNode=fileNode.getNode(JCRConstants.JCR_CONTENT);
    versionManager.checkout(contentNode.getPath());
    contentNode.setProperty(JCRConstants.JCR_MIME_TYPE,ContentTypes.TEXT_PLAIN);
    contentNode.setProperty(JCRConstants.JCR_DATA,StringPool.BLANK);
    contentNode.setProperty(JCRConstants.JCR_LAST_MODIFIED,Calendar.getInstance());
    session.save();
    Version version=versionManager.checkin(contentNode.getPath());
    VersionHistory versionHistory=versionManager.getVersionHistory(contentNode.getPath());
    versionHistory.addVersionLabel(version.getName(),"0.0",false);
  }
 catch (  PathNotFoundException pnfe) {
    logFailedDeletion(companyId,repositoryId,fileName,pnfe);
    return;
  }
catch (  RepositoryException re) {
    throw new SystemException(re);
  }
 finally {
    _jcrFactoryWrapper.closeSession(session);
  }
  try {
    session=_jcrFactoryWrapper.createSession();
    Workspace workspace=session.getWorkspace();
    VersionManager versionManager=workspace.getVersionManager();
    Node rootNode=getRootNode(session,companyId);
    Node repositoryNode=getFolderNode(rootNode,repositoryId);
    Node fileNode=repositoryNode.getNode(fileName);
    Node contentNode=fileNode.getNode(JCRConstants.JCR_CONTENT);
    VersionHistory versionHistory=versionManager.getVersionHistory(contentNode.getPath());
    VersionIterator itr=versionHistory.getAllVersions();
    while (itr.hasNext()) {
      Version version=itr.nextVersion();
      if (itr.getPosition() == itr.getSize()) {
        break;
      }
 else {
        if (!StringUtils.equals(JCRConstants.JCR_ROOT_VERSION,version.getName())) {
          versionHistory.removeVersion(version.getName());
        }
      }
    }
    session.save();
  }
 catch (  PathNotFoundException pnfe) {
    logFailedDeletion(companyId,repositoryId,fileName,pnfe);
    return;
  }
catch (  RepositoryException re) {
    throw new SystemException(re);
  }
 finally {
    _jcrFactoryWrapper.closeSession(session);
  }
  try {
    session=_jcrFactoryWrapper.createSession();
    Node rootNode=getRootNode(session,companyId);
    Node repositoryNode=getFolderNode(rootNode,repositoryId);
    Node fileNode=repositoryNode.getNode(fileName);
    fileNode.remove();
    session.save();
  }
 catch (  PathNotFoundException pnfe) {
    logFailedDeletion(companyId,repositoryId,fileName,pnfe);
  }
catch (  RepositoryException re) {
    throw new SystemException(re);
  }
 finally {
    _jcrFactoryWrapper.closeSession(session);
  }
}

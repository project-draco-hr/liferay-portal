{
  List<SchedulerResponse> schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER,schedulerResponses.size());
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(QuartzSchedulerEngine.class.getName(),Level.WARNING)){
    IntervalTrigger intervalTrigger=new IntervalTrigger(_TEST_JOB_NAME_0,_MEMORY_TEST_GROUP_NAME,0);
    _quartzSchedulerEngine.schedule(intervalTrigger,StringPool.BLANK,_TEST_DESTINATION_NAME,null,StorageType.MEMORY);
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Not scheduling " + _TEST_JOB_NAME_0 + " because interval "+ "is less than or equal to 0",logRecord.getMessage());
  }
   schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER,schedulerResponses.size());
}

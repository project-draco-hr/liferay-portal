{
  SchedulerEngineHelperUtil schedulerEngineHelperUtil=new SchedulerEngineHelperUtil();
  schedulerEngineHelperUtil.setSchedulerEngineHelper(new SchedulerEngineHelperImpl());
  List<SchedulerResponse> schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER,schedulerResponses.size());
  MockScheduler mockScheduler=ReflectionTestUtil.getFieldValue(_quartzSchedulerEngine,"_persistedScheduler");
  mockScheduler.addJob(_TEST_JOB_NAME_PREFIX + "persisted",_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED,null);
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER + 1,schedulerResponses.size());
  _quartzSchedulerEngine.initJobState();
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER,schedulerResponses.size());
}

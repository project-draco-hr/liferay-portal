{
  User user1=UserTestUtil.addUser(null,0);
  long initialUser1SearchGroupEntriesCount=0;
  assertGroupEntriesCount(initialUser1SearchGroupEntriesCount,user1);
  User user2=UserTestUtil.addUser(null,0);
  long initialUser2SearchGroupEntriesCount=0;
  assertGroupEntriesCount(initialUser2SearchGroupEntriesCount,user2);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel1=getParentBaseModel(group,serviceContext);
  BaseModel<?> parentBaseModel2=getParentBaseModel(group,serviceContext);
  String name=PrincipalThreadLocal.getName();
  long userId=serviceContext.getUserId();
  try {
    PrincipalThreadLocal.setName(user1.getUserId());
    serviceContext.setUserId(user1.getUserId());
    baseModel=addBaseModel(parentBaseModel1,true,RandomTestUtil.randomString(),serviceContext);
    baseModel=addBaseModel(parentBaseModel1,true,RandomTestUtil.randomString(),serviceContext);
    baseModel=addBaseModel(parentBaseModel2,true,RandomTestUtil.randomString(),serviceContext);
    PrincipalThreadLocal.setName(user2.getUserId());
    serviceContext.setUserId(user2.getUserId());
    baseModel=addBaseModel(parentBaseModel1,true,RandomTestUtil.randomString(),serviceContext);
    baseModel=addBaseModel(parentBaseModel2,true,RandomTestUtil.randomString(),serviceContext);
  }
  finally {
    PrincipalThreadLocal.setName(name);
    serviceContext.setUserId(userId);
  }
  assertGroupEntriesCount(initialUser1SearchGroupEntriesCount + 3,user1);
  assertGroupEntriesCount(initialUser2SearchGroupEntriesCount + 2,user2);
  moveParentBaseModelToTrash((Long)parentBaseModel2.getPrimaryKeyObj());
  assertGroupEntriesCount(initialUser1SearchGroupEntriesCount + 2,user1);
  assertGroupEntriesCount(initialUser2SearchGroupEntriesCount + 1,user2);
  TrashHandler parentTrashHandler=TrashHandlerRegistryUtil.getTrashHandler(getParentBaseModelClassName());
  parentTrashHandler.restoreTrashEntry(user1.getUserId(),(Long)parentBaseModel2.getPrimaryKeyObj());
  assertGroupEntriesCount(initialUser1SearchGroupEntriesCount + 3,user1);
  assertGroupEntriesCount(initialUser2SearchGroupEntriesCount + 2,user2);
}

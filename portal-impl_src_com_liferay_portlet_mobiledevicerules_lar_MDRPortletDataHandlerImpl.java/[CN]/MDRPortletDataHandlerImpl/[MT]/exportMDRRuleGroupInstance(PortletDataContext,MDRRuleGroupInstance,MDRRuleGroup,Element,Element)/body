{
  if (!portletDataContext.isWithinDateRange(mdrRuleGroupInstance.getModifiedDate())) {
    return;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Exporting rule group instance: " + mdrRuleGroupInstance);
  }
  String mdrRuleGroupInstancePath=getMDRRuleGroupInstancePath(portletDataContext,mdrRuleGroupInstance);
  if (portletDataContext.isPathNotProcessed(mdrRuleGroupInstancePath)) {
    Element mdrRuleGroupInstanceElement=mdrRuleGroupInstancesElement.addElement(_MDR_RULE_GROUP_INSTANCE_ELEMENT);
    String className=mdrRuleGroupInstance.getClassName();
    try {
      if (className.equals(Layout.class.getName())) {
        Layout layout=LayoutLocalServiceUtil.getLayout(mdrRuleGroupInstance.getClassPK());
        mdrRuleGroupInstanceElement.addAttribute("layout-uuid",layout.getUuid());
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to export desired layout or layoutSet for: " + className + ", primaryKey: "+ mdrRuleGroupInstance.getClassPK()+ ", skipping export of rule group instance.",e);
      }
      return;
    }
    portletDataContext.addClassedModel(mdrRuleGroupInstanceElement,mdrRuleGroupInstancePath,mdrRuleGroupInstance,_NAMESPACE);
    List<MDRAction> mdrActions=mdrRuleGroupInstance.getMDRActions();
    if (!mdrActions.isEmpty()) {
      if (_log.isDebugEnabled()) {
        _log.debug("Exporting " + mdrActions.size() + " actions for rule group instance: "+ mdrRuleGroupInstance.getRuleGroupInstanceId());
      }
      Element mdrActionsElement=mdrRuleGroupInstanceElement.addElement(_MDR_ACTIONS_ELEMENT);
      exportMDRActions(portletDataContext,mdrActionsElement,mdrActions);
    }
  }
  if (mdrRuleGroupsElement != null) {
    exportMDRRuleGroup(portletDataContext,mdrRuleGroup,mdrRuleGroupsElement,true);
  }
 else   if (_log.isDebugEnabled()) {
    _log.debug("Bypassing exporting of referenced rule group " + "since all rule groups will be exported.");
  }
}

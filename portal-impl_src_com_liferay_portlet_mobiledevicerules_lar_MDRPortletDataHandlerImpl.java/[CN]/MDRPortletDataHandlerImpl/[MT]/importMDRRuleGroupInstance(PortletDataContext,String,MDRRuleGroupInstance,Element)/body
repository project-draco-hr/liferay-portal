{
  if (_log.isDebugEnabled()) {
    _log.debug("Importing rule group instance: " + mdrRuleGroupInstance);
  }
  long userId=portletDataContext.getUserId(mdrRuleGroupInstance.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(mdrRuleGroupInstancePath,mdrRuleGroupInstance,_NAMESPACE);
  serviceContext.setUserId(userId);
  Map<Long,Long> newMDRRuleGroupIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(MDRRuleGroup.class);
  long newRuleGroupId=newMDRRuleGroupIds.get(mdrRuleGroupInstance.getRuleGroupId());
  String layoutUuid=mdrRuleGroupInstanceElement.attributeValue("layout-uuid");
  long classPK=0;
  try {
    if (Validator.isNotNull(layoutUuid)) {
      Layout layout=LayoutLocalServiceUtil.getLayoutByUuidAndGroupId(layoutUuid,portletDataContext.getScopeGroupId());
      classPK=layout.getPrimaryKey();
    }
 else {
      LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(portletDataContext.getScopeGroupId(),portletDataContext.isPrivateLayout());
      classPK=layoutSet.getLayoutSetId();
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to find desired layout for uuid: " + layoutUuid + " in group: "+ portletDataContext.getScopeGroupId()+ ", skipping import of rule instance.",e);
    }
    return;
  }
  MDRRuleGroupInstance importedMDRRuleGroupInstance=null;
  if (portletDataContext.isDataStrategyMirror()) {
    MDRRuleGroupInstance existingMDRRuleGroupInstance=MDRRuleGroupInstanceUtil.fetchByUUID_G(mdrRuleGroupInstance.getUuid(),portletDataContext.getScopeGroupId());
    if (existingMDRRuleGroupInstance == null) {
      serviceContext.setUuid(mdrRuleGroupInstance.getUuid());
      importedMDRRuleGroupInstance=MDRRuleGroupInstanceLocalServiceUtil.addRuleGroupInstance(portletDataContext.getScopeGroupId(),mdrRuleGroupInstance.getClassName(),classPK,newRuleGroupId,mdrRuleGroupInstance.getPriority(),serviceContext);
    }
 else {
      importedMDRRuleGroupInstance=MDRRuleGroupInstanceLocalServiceUtil.updateRuleGroupInstance(existingMDRRuleGroupInstance.getRuleGroupInstanceId(),mdrRuleGroupInstance.getPriority());
    }
  }
 else {
    importedMDRRuleGroupInstance=MDRRuleGroupInstanceLocalServiceUtil.addRuleGroupInstance(portletDataContext.getScopeGroupId(),mdrRuleGroupInstance.getClassName(),classPK,newRuleGroupId,mdrRuleGroupInstance.getPriority(),serviceContext);
  }
  portletDataContext.importClassedModel(mdrRuleGroupInstance,importedMDRRuleGroupInstance,_NAMESPACE);
  Element mdrActionsElement=mdrRuleGroupInstanceElement.element(_MDR_ACTIONS_ELEMENT);
  if (mdrActionsElement != null) {
    List<Element> mdrActionElements=mdrActionsElement.elements(_MDR_ACTION_ELEMENT);
    for (    Element mdrActionElement : mdrActionElements) {
      String mdrActionPath=mdrActionElement.attributeValue("path");
      if (!portletDataContext.isPathNotProcessed(mdrActionPath)) {
        continue;
      }
      MDRAction mdrAction=(MDRAction)portletDataContext.getZipEntryAsObject(mdrActionPath);
      importMDRAction(portletDataContext,importedMDRRuleGroupInstance,mdrActionPath,mdrAction);
    }
  }
}

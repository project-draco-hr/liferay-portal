{
  DLDocumentType documentType=dlDocumentTypeLocalService.getDocumentType(documentTypeId);
  List<DDMStructure> ddmStructures=documentType.getDDMStructures();
  for (  DDMStructure ddmStructure : ddmStructures) {
    Fields fields=fieldsMap.get(ddmStructure.getStructureId());
    if (fields == null) {
      continue;
    }
    try {
      DLDocumentMetadataSet metadataSet=dlDocumentMetadataSetPersistence.findByD_F(ddmStructure.getStructureId(),fileVersionId);
      StorageEngineUtil.update(metadataSet.getClassPK(),fields,serviceContext);
    }
 catch (    NoSuchDocumentMetadataSetException nsdmse) {
      long documentMetadataSetId=counterLocalService.increment();
      DLDocumentMetadataSet documentMetadataSet=dlDocumentMetadataSetPersistence.create(documentMetadataSetId);
      documentMetadataSet.setClassNameId(ddmStructure.getClassNameId());
      long classPK=StorageEngineUtil.create(documentType.getCompanyId(),ddmStructure.getStructureId(),fields,serviceContext);
      documentMetadataSet.setClassPK(classPK);
      documentMetadataSet.setDDMStructureId(ddmStructure.getStructureId());
      documentMetadataSet.setDocumentTypeId(documentTypeId);
      documentMetadataSet.setFileVersionId(fileVersionId);
      dlDocumentMetadataSetPersistence.update(documentMetadataSet,false);
      long classNameId=PortalUtil.getClassNameId(DLDocumentMetadataSet.class);
      ddmStructureLinkLocalService.addStructureLink(classNameId,documentMetadataSet.getDocumentMetadataSetId(),ddmStructure.getStructureId(),serviceContext);
    }
  }
}

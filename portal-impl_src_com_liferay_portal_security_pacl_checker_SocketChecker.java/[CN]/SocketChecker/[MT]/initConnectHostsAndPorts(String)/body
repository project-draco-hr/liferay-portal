{
  int pos=connectPart.indexOf(StringPool.COLON);
  if (pos == -1) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to determine socket connect host and port from " + connectPart + " because it is missing a colon delimeter");
    }
    return;
  }
  String host=connectPart.substring(0,pos);
  if (!Validator.isDomain(host)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Socket connect host " + host + " is not a valid domain");
    }
    return;
  }
  String portString=connectPart.substring(pos + 1);
  int port=GetterUtil.getInteger(portString);
  if (port <= 0) {
    if (_log.isWarnEnabled()) {
      _log.warn("Socket connect port " + portString + " is less than or equal to 0");
    }
    return;
  }
  InetAddress[] inetAddresses=null;
  try {
    inetAddresses=InetAddress.getAllByName(host);
  }
 catch (  UnknownHostException uhe) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to resolve host " + host);
    }
    return;
  }
  for (  InetAddress inetAddress : inetAddresses) {
    Set<Integer> ports=_connectHostsAndPorts.get(inetAddress.getHostAddress());
    if (ports == null) {
      ports=new HashSet<Integer>();
      if (_log.isDebugEnabled()) {
        _log.debug("Allowing socket connect host " + host + " with IP "+ inetAddress.getHostAddress()+ " on port "+ port);
      }
      _connectHostsAndPorts.put(inetAddress.getHostAddress(),ports);
    }
    ports.add(port);
  }
}

{
  long pk=ServiceTestUtil.nextLong();
  PollsChoice newPollsChoice=_persistence.create(pk);
  newPollsChoice.setUuid(ServiceTestUtil.randomString());
  newPollsChoice.setQuestionId(ServiceTestUtil.nextLong());
  newPollsChoice.setName(ServiceTestUtil.randomString());
  newPollsChoice.setDescription(ServiceTestUtil.randomString());
  _persistence.update(newPollsChoice,false);
  PollsChoice existingPollsChoice=_persistence.findByPrimaryKey(newPollsChoice.getPrimaryKey());
  Assert.assertEquals(existingPollsChoice.getUuid(),newPollsChoice.getUuid());
  Assert.assertEquals(existingPollsChoice.getChoiceId(),newPollsChoice.getChoiceId());
  Assert.assertEquals(existingPollsChoice.getQuestionId(),newPollsChoice.getQuestionId());
  Assert.assertEquals(existingPollsChoice.getName(),newPollsChoice.getName());
  Assert.assertEquals(existingPollsChoice.getDescription(),newPollsChoice.getDescription());
}

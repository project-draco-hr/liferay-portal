{
  WebDAVStorage storage=webDavReq.getWebDAVStorage();
  long companyId=webDavReq.getCompanyId();
  long groupId=webDavReq.getGroupId();
  DateFormat createDateFormat=getCreateDateFormat();
  DateFormat modifiedDateFormat=getModifiedDateFormat();
  List props=getProps(webDavReq);
  DocumentFactory docFactory=DocumentFactory.getInstance();
  Document doc=docFactory.createDocument();
  Element multistatus=docFactory.createElement(new QName("multistatus",new Namespace("D","DAV:")));
  doc.setRootElement(multistatus);
  if (companyId <= 0) {
    return getResponseXML(doc);
  }
  if (groupId == 0) {
    addResponse(new BaseResourceImpl(storage.getRootPath() + StringPool.SLASH + companyId,String.valueOf(companyId),true),props,multistatus,createDateFormat,modifiedDateFormat);
    if (props.size() > 0) {
      Iterator itr=storage.getCommunities(webDavReq).iterator();
      while (itr.hasNext()) {
        Resource resource=(Resource)itr.next();
        addResponse(resource,props,multistatus,createDateFormat,modifiedDateFormat);
      }
    }
    return getResponseXML(doc);
  }
  Resource resource=storage.getResource(webDavReq);
  if ((resource == null) && !webDavReq.isGroupPath()) {
    String href=storage.getRootPath() + webDavReq.getPath();
    if (_log.isWarnEnabled()) {
      _log.warn("No resource found for " + webDavReq.getPath());
    }
    addResponse(href,multistatus);
    return getResponseXML(doc);
  }
  if (resource != null) {
    addResponse(resource,props,multistatus,createDateFormat,modifiedDateFormat);
  }
 else   if (webDavReq.isGroupPath()) {
    try {
      Group group=GroupLocalServiceUtil.getGroup(groupId);
      addResponse(new BaseResourceImpl(storage.getRootPath() + StringPool.SLASH + companyId+ StringPool.SLASH+ groupId,group.getName(),true),props,multistatus,createDateFormat,modifiedDateFormat);
    }
 catch (    NoSuchGroupException nsge) {
      String href=storage.getRootPath() + webDavReq.getPath();
      if (_log.isWarnEnabled()) {
        _log.warn("No group found for " + href);
      }
      addResponse(href,multistatus);
    }
  }
  Iterator itr=storage.getResources(webDavReq).iterator();
  while (itr.hasNext()) {
    resource=(Resource)itr.next();
    addResponse(resource,props,multistatus,createDateFormat,modifiedDateFormat);
  }
  return getResponseXML(doc);
}

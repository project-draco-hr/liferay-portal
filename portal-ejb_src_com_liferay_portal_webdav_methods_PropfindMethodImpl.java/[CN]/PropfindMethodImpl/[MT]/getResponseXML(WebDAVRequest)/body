{
  WebDAVStorage storage=webDavReq.getWebDAVStorage();
  String companyId=webDavReq.getCompanyId();
  long groupId=webDavReq.getGroupId();
  DateFormat createDateFormat=getCreateDateFormat();
  DateFormat modifiedDateFormat=getModifiedDateFormat();
  List props=getProps(webDavReq);
  DocumentFactory docFactory=DocumentFactory.getInstance();
  Document doc=docFactory.createDocument();
  Element multistatus=docFactory.createElement(new QName("multistatus",new Namespace("D","DAV:")));
  doc.setRootElement(multistatus);
  if (Validator.isNotNull(companyId)) {
    if (groupId == 0) {
      addResponse(new BaseResourceImpl(storage.getRootPath() + StringPool.SLASH + companyId,true),props,multistatus,createDateFormat,modifiedDateFormat);
      if (props.size() > 0) {
        Iterator itr=storage.getCommunities(webDavReq).iterator();
        while (itr.hasNext()) {
          Resource resource=(Resource)itr.next();
          addResponse(resource,props,multistatus,createDateFormat,modifiedDateFormat);
        }
      }
    }
 else {
      Iterator itr=storage.getResources(webDavReq).iterator();
      while (itr.hasNext()) {
        Resource resource=(Resource)itr.next();
        addResponse(resource,props,multistatus,createDateFormat,modifiedDateFormat);
      }
    }
  }
  String xml=XMLFormatter.toString(doc,"    ");
  if (_log.isDebugEnabled()) {
    _log.debug("Response XML\n" + xml);
  }
  return xml;
}

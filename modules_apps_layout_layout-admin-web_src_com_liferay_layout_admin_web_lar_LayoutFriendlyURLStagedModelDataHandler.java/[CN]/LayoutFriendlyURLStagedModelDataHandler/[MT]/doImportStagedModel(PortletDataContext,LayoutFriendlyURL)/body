{
  long userId=portletDataContext.getUserId(layoutFriendlyURL.getUserUuid());
  Map<Long,Long> plids=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Layout.class);
  long plid=MapUtil.getLong(plids,layoutFriendlyURL.getPlid(),layoutFriendlyURL.getPlid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(layoutFriendlyURL);
  LayoutFriendlyURL importedLayoutFriendlyURL=null;
  LayoutFriendlyURL existingLayoutFriendlyURL=fetchExistingLayoutFriendlyURL(portletDataContext,layoutFriendlyURL,plid);
  layoutFriendlyURL=getUniqueLayoutFriendlyURL(portletDataContext,layoutFriendlyURL,existingLayoutFriendlyURL);
  if (existingLayoutFriendlyURL == null) {
    serviceContext.setUuid(layoutFriendlyURL.getUuid());
    String friendlyURL=layoutFriendlyURL.getFriendlyURL();
    if (Validator.isNumber(friendlyURL.substring(1))) {
      Layout layout=_layoutLocalService.fetchLayout(plid);
      friendlyURL=StringPool.SLASH + layout.getLayoutId();
    }
    importedLayoutFriendlyURL=_layoutFriendlyURLLocalService.addLayoutFriendlyURL(userId,portletDataContext.getCompanyId(),portletDataContext.getScopeGroupId(),plid,portletDataContext.isPrivateLayout(),friendlyURL,layoutFriendlyURL.getLanguageId(),serviceContext);
  }
 else {
    importedLayoutFriendlyURL=_layoutFriendlyURLLocalService.updateLayoutFriendlyURL(userId,portletDataContext.getCompanyId(),portletDataContext.getScopeGroupId(),plid,portletDataContext.isPrivateLayout(),layoutFriendlyURL.getFriendlyURL(),layoutFriendlyURL.getLanguageId(),serviceContext);
  }
  portletDataContext.importClassedModel(layoutFriendlyURL,importedLayoutFriendlyURL);
}

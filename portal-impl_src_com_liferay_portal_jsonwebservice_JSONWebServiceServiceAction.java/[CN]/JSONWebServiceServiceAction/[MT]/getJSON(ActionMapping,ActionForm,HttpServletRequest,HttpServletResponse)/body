{
  UploadException uploadException=(UploadException)request.getAttribute(WebKeys.UPLOAD_EXCEPTION);
  if (uploadException != null) {
    return JSONFactoryUtil.serializeThrowable(uploadException);
  }
  try {
    JSONWebServiceAction jsonWebServiceAction=getJSONWebServiceAction(request);
    Object returnObj=jsonWebServiceAction.invoke();
    if (returnObj != null) {
      return getReturnValue(returnObj);
    }
 else {
      return JSONFactoryUtil.getNullJSON();
    }
  }
 catch (  Exception e) {
    int status=0;
    if (e instanceof InvocationTargetException) {
      Throwable throwable=e.getCause();
      if (throwable instanceof PrincipalException || throwable instanceof SecurityException) {
        status=HttpServletResponse.SC_FORBIDDEN;
      }
 else {
        status=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
      }
      _log.error(_getThrowableMessage(throwable));
      response.setStatus(status);
      return JSONFactoryUtil.serializeThrowable(throwable);
    }
    if (e instanceof NoSuchJSONWebServiceException) {
      status=HttpServletResponse.SC_NOT_FOUND;
    }
 else     if (e instanceof PrincipalException || e instanceof SecurityException) {
      status=HttpServletResponse.SC_FORBIDDEN;
    }
 else {
      status=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
    }
    _log.error(_getThrowableMessage(e));
    response.setStatus(status);
    return JSONFactoryUtil.serializeThrowable(e);
  }
}

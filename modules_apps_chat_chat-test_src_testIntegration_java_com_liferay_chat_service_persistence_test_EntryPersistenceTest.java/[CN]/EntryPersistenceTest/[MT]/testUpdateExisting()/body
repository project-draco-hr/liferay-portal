{
  long pk=RandomTestUtil.nextLong();
  Entry newEntry=_persistence.create(pk);
  newEntry.setCreateDate(RandomTestUtil.nextLong());
  newEntry.setFromUserId(RandomTestUtil.nextLong());
  newEntry.setToUserId(RandomTestUtil.nextLong());
  newEntry.setContent(RandomTestUtil.randomString());
  newEntry.setFlag(RandomTestUtil.nextInt());
  _entries.add(_persistence.update(newEntry));
  Entry existingEntry=_persistence.findByPrimaryKey(newEntry.getPrimaryKey());
  Assert.assertEquals(existingEntry.getEntryId(),newEntry.getEntryId());
  Assert.assertEquals(existingEntry.getCreateDate(),newEntry.getCreateDate());
  Assert.assertEquals(existingEntry.getFromUserId(),newEntry.getFromUserId());
  Assert.assertEquals(existingEntry.getToUserId(),newEntry.getToUserId());
  Assert.assertEquals(existingEntry.getContent(),newEntry.getContent());
  Assert.assertEquals(existingEntry.getFlag(),newEntry.getFlag());
}

{
  List<Address> addresses=AddressLocalServiceUtil.getAddresses(user.getCompanyId(),Contact.class.getName(),user.getContactId());
  StringBundler sb=new StringBundler(addresses.size() * 19);
  for (  Address address : addresses) {
    sb.append("ADR;TYPE=");
    ListType listType=address.getType();
    sb.append(StringUtil.toUpperCase(_getVCardListTypeName(listType)));
    sb.append(StringPool.COLON);
    sb.append(StringPool.SEMICOLON);
    sb.append(StringPool.SEMICOLON);
    if (Validator.isNotNull(address.getStreet1())) {
      sb.append(address.getStreet1());
    }
    if (Validator.isNotNull(address.getStreet2())) {
      sb.append("\\n");
      sb.append(address.getStreet2());
    }
    if (Validator.isNotNull(address.getStreet3())) {
      sb.append("\\n");
      sb.append(address.getStreet3());
    }
    sb.append(StringPool.SEMICOLON);
    if (Validator.isNotNull(address.getCity())) {
      sb.append(address.getCity());
    }
    sb.append(StringPool.SEMICOLON);
    long regionId=address.getRegionId();
    if (regionId > 0) {
      Region region=RegionServiceUtil.getRegion(regionId);
      sb.append(region.getName());
    }
    sb.append(StringPool.SEMICOLON);
    if (Validator.isNotNull(address.getZip())) {
      sb.append(address.getZip());
    }
    sb.append(StringPool.SEMICOLON);
    long countryId=address.getCountryId();
    if (countryId > 0) {
      Country country=CountryServiceUtil.getCountry(countryId);
      sb.append(country.getName());
    }
    sb.append(StringPool.NEW_LINE);
  }
  return sb.toString();
}

{
  long pk=RandomTestUtil.nextLong();
  DDMStructureLayout newDDMStructureLayout=_persistence.create(pk);
  newDDMStructureLayout.setUuid(RandomTestUtil.randomString());
  newDDMStructureLayout.setGroupId(RandomTestUtil.nextLong());
  newDDMStructureLayout.setCompanyId(RandomTestUtil.nextLong());
  newDDMStructureLayout.setUserId(RandomTestUtil.nextLong());
  newDDMStructureLayout.setUserName(RandomTestUtil.randomString());
  newDDMStructureLayout.setCreateDate(RandomTestUtil.nextDate());
  newDDMStructureLayout.setModifiedDate(RandomTestUtil.nextDate());
  newDDMStructureLayout.setStructureVersionId(RandomTestUtil.nextLong());
  newDDMStructureLayout.setDefinition(RandomTestUtil.randomString());
  _ddmStructureLayouts.add(_persistence.update(newDDMStructureLayout));
  DDMStructureLayout existingDDMStructureLayout=_persistence.findByPrimaryKey(newDDMStructureLayout.getPrimaryKey());
  Assert.assertEquals(existingDDMStructureLayout.getUuid(),newDDMStructureLayout.getUuid());
  Assert.assertEquals(existingDDMStructureLayout.getStructureLayoutId(),newDDMStructureLayout.getStructureLayoutId());
  Assert.assertEquals(existingDDMStructureLayout.getGroupId(),newDDMStructureLayout.getGroupId());
  Assert.assertEquals(existingDDMStructureLayout.getCompanyId(),newDDMStructureLayout.getCompanyId());
  Assert.assertEquals(existingDDMStructureLayout.getUserId(),newDDMStructureLayout.getUserId());
  Assert.assertEquals(existingDDMStructureLayout.getUserName(),newDDMStructureLayout.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMStructureLayout.getCreateDate()),Time.getShortTimestamp(newDDMStructureLayout.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingDDMStructureLayout.getModifiedDate()),Time.getShortTimestamp(newDDMStructureLayout.getModifiedDate()));
  Assert.assertEquals(existingDDMStructureLayout.getStructureVersionId(),newDDMStructureLayout.getStructureVersionId());
  Assert.assertEquals(existingDDMStructureLayout.getDefinition(),newDDMStructureLayout.getDefinition());
}

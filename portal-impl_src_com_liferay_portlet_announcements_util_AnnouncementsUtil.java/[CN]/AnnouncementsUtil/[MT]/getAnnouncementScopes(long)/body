{
  LinkedHashMap<Long,long[]> scopes=new LinkedHashMap<Long,long[]>();
  scopes.put(new Long(0),new long[]{0});
  scopes.put(_USER_CLASS_NAME_ID,new long[]{userId});
  List<Group> groupsList=new ArrayList<Group>();
  List<Group> groups=GroupLocalServiceUtil.getUserGroups(userId);
  if (groups.size() > 0) {
    scopes.put(_GROUP_CLASS_NAME_ID,_getGroupIds(groups));
    groupsList.addAll(groups);
  }
  List<Organization> organizations=OrganizationLocalServiceUtil.getUserOrganizations(userId);
  if (organizations.size() > 0) {
    scopes.put(_ORGANIZATION_CLASS_NAME_ID,_getOrganizationIds(organizations));
    for (    Organization organization : organizations) {
      groupsList.add(organization.getGroup());
    }
  }
  if (groupsList.size() > 0) {
    List<Role> roles=ListUtil.copy(RoleLocalServiceUtil.getUserRelatedRoles(userId,groupsList));
    for (    Group group : groupsList) {
      roles.addAll(RoleLocalServiceUtil.getUserGroupRoles(userId,group.getGroupId()));
    }
    if (roles.size() > 0) {
      scopes.put(_ROLE_CLASS_NAME_ID,_getRoleIds(roles));
    }
  }
  List<UserGroup> userGroups=UserGroupLocalServiceUtil.getUserUserGroups(userId);
  if (userGroups.size() > 0) {
    scopes.put(_USER_GROUP_CLASS_NAME_ID,_getUserGroupIds(userGroups));
  }
  return scopes;
}

{
  Projection entryIdProjection=ProjectionFactoryUtil.property("entryId");
  DynamicQuery assetEntry1DynamicQuery=_assetEntryLocalService.dynamicQuery();
  assetEntry1DynamicQuery.setProjection(entryIdProjection);
  Property classUuidProperty=PropertyFactoryUtil.forName("classUuid");
  assetEntry1DynamicQuery.add(classUuidProperty.eq(assetEntry1Uuid));
  DynamicQuery assetEntry2DynamicQuery=_assetEntryLocalService.dynamicQuery();
  assetEntry2DynamicQuery.setProjection(entryIdProjection);
  assetEntry2DynamicQuery.add(classUuidProperty.eq(assetEntry2Uuid));
  DynamicQuery dynamicQuery=_assetLinkLocalService.dynamicQuery();
  Property entryId1IdProperty=PropertyFactoryUtil.forName("entryId1");
  dynamicQuery.add(entryId1IdProperty.eq(assetEntry1DynamicQuery));
  Property entryId2IdProperty=PropertyFactoryUtil.forName("entryId2");
  dynamicQuery.add(entryId2IdProperty.eq(assetEntry2DynamicQuery));
  if (companyId > 0) {
    Property companyIdProperty=PropertyFactoryUtil.forName("companyId");
    Criterion companyIdCriterion=companyIdProperty.eq(companyId);
    assetEntry1DynamicQuery.add(companyIdCriterion);
    assetEntry2DynamicQuery.add(companyIdCriterion);
    dynamicQuery.add(companyIdCriterion);
  }
  if (groupId > 0) {
    Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
    Criterion groupIdCriterion=groupIdProperty.eq(groupId);
    assetEntry1DynamicQuery.add(groupIdCriterion);
    assetEntry2DynamicQuery.add(groupIdCriterion);
  }
  return dynamicQuery;
}

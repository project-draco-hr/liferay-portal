{
  Portal portal=mock(Portal.class);
  when(portal.getOriginalServletRequest((HttpServletRequest)Matchers.any())).thenReturn(_mockOriginalServletRequest);
  when(portal.getHttpServletRequest((PortletRequest)Matchers.any())).thenReturn(_mockHttpServletRequest);
  when(portal.getHttpServletResponse((PortletResponse)Matchers.any())).thenReturn(_mockHttpServletResponse);
  PortalUtil portalUtil=new PortalUtil();
  portalUtil.setPortal(portal);
  PropsUtil.setProps(mock(Props.class));
  PortletPreferencesFactory portletPreferencesFactory=mock(PortletPreferencesFactory.class);
  when(portletPreferencesFactory.getExistingPortletSetup(Mockito.any(PortletRequest.class))).thenReturn(_portletPreferences);
  PortletPreferencesFactoryUtil portletPreferencesFactoryUtil=new PortletPreferencesFactoryUtil();
  portletPreferencesFactoryUtil.setPortletPreferencesFactory(portletPreferencesFactory);
  HttpUtil httpUtil=new HttpUtil();
  httpUtil.setHttp(_http);
}

{
  StringMaker sm=new StringMaker();
  sm.append("<?xml version=\"1.0\"?>\n");
  sm.append("<!DOCTYPE jrun-ejb-jar PUBLIC \"-//Macromedia, Inc.//DTD jrun-ejb-jar 4.0//EN\" \"http://jrun.macromedia.com/dtds/jrun-ejb-jar.dtd\">\n");
  sm.append("\n<jrun-ejb-jar>\n");
  sm.append("\t<enterprise-beans>\n");
  SAXReader reader=SAXReaderFactory.getInstance();
  Document doc=reader.read(new File("classes/META-INF/ejb-jar.xml"));
  Iterator itr=doc.getRootElement().element("enterprise-beans").elements("session").iterator();
  while (itr.hasNext()) {
    Element entity=(Element)itr.next();
    sm.append("\t\t<session>\n");
    sm.append("\t\t\t<ejb-name>").append(entity.elementText("ejb-name")).append("</ejb-name>\n");
    String displayName=entity.elementText("display-name");
    if (displayName.endsWith("LocalServiceEJB")) {
      sm.append("\t\t\t<local-jndi-name>ejb/liferay/").append(displayName.substring(0,displayName.length() - 3)).append("Home</local-jndi-name>\n");
    }
 else {
      sm.append("\t\t\t<jndi-name>").append(entity.elementText("ejb-name")).append("</jndi-name>\n");
    }
    sm.append("\t\t\t<cluster-home>false</cluster-home>\n");
    sm.append("\t\t\t<cluster-object>false</cluster-object>\n");
    sm.append("\t\t\t<timeout>3000</timeout>\n");
    sm.append("\t\t</session>\n");
  }
  sm.append("\t</enterprise-beans>\n");
  sm.append("</jrun-ejb-jar>");
  File outputFile=new File("classes/META-INF/jrun-ejb-jar.xml");
  if (!outputFile.exists() || !FileUtil.read(outputFile).equals(sm.toString())) {
    FileUtil.write(outputFile,sm.toString());
    System.out.println(outputFile.toString());
  }
}

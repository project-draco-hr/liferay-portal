{
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    long questionId=ParamUtil.getLong(request,"questionId");
    String chartType=ParamUtil.getString(request,"chartType","pie");
    String chartName=themeDisplay.translate("vote-results");
    String xName=themeDisplay.translate("choice");
    String yName=themeDisplay.translate("votes");
    CategoryDataset categoryDataset=PollsUtil.getVotesDataset(questionId);
    JFreeChart jFreeChat=null;
    if (chartType.equals("area")) {
      jFreeChat=ChartFactory.createAreaChart(chartName,xName,yName,categoryDataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else     if (chartType.equals("horizontal_bar")) {
      jFreeChat=ChartFactory.createBarChart(chartName,xName,yName,categoryDataset,PlotOrientation.HORIZONTAL,true,false,false);
    }
 else     if (chartType.equals("line")) {
      jFreeChat=ChartFactory.createLineChart(chartName,xName,yName,categoryDataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else     if (chartType.equals("vertical_bar")) {
      jFreeChat=ChartFactory.createBarChart(chartName,xName,yName,categoryDataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else {
      PieDataset pieDataset=DatasetUtilities.createPieDatasetForRow(categoryDataset,0);
      jFreeChat=ChartFactory.createPieChart(chartName,pieDataset,true,false,false);
    }
    response.setContentType(ContentTypes.IMAGE_JPEG);
    OutputStream outputStream=response.getPortletOutputStream();
    ChartUtilities.writeChartAsJPEG(outputStream,jFreeChat,400,400);
  }
 catch (  Exception e) {
    PortletSession portletSession=request.getPortletSession();
    PortletContext portletContext=portletSession.getPortletContext();
    PortletRequestDispatcher requestDispatcher=portletContext.getRequestDispatcher("/html/portlet/polls/error.jsp");
    requestDispatcher.forward(request,response);
  }
}

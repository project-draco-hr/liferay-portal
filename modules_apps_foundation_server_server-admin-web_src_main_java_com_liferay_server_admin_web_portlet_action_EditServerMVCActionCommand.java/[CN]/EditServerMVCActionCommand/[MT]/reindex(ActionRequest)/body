{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Map<String,Serializable> taskContextMap=new HashMap<>();
  String className=ParamUtil.getString(actionRequest,"className");
  if (!ParamUtil.getBoolean(actionRequest,"blocking")) {
    _indexWriterHelper.reindex(themeDisplay.getUserId(),"reindex",PortalInstances.getCompanyIds(),className,taskContextMap);
    return;
  }
  final String jobName="reindex-".concat(_portalUUID.generate());
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  MessageListener messageListener=new MessageListener(){
    @Override public void receive(    Message message) throws MessageListenerException {
      int status=message.getInteger("status");
      if ((status != BackgroundTaskConstants.STATUS_CANCELLED) && (status != BackgroundTaskConstants.STATUS_FAILED) && (status != BackgroundTaskConstants.STATUS_SUCCESSFUL)) {
        return;
      }
      if (!jobName.equals(message.getString("name"))) {
        return;
      }
      PortletSession portletSession=actionRequest.getPortletSession();
      long lastAccessedTime=portletSession.getLastAccessedTime();
      int maxInactiveInterval=portletSession.getMaxInactiveInterval();
      int extendedMaxInactiveIntervalTime=(int)(System.currentTimeMillis() - lastAccessedTime + maxInactiveInterval);
      portletSession.setMaxInactiveInterval(extendedMaxInactiveIntervalTime);
      countDownLatch.countDown();
    }
  }
;
  _messageBus.registerMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,messageListener);
  try {
    _indexWriterHelper.reindex(themeDisplay.getUserId(),jobName,PortalInstances.getCompanyIds(),className,taskContextMap);
    countDownLatch.await(ParamUtil.getLong(actionRequest,"timeout",Time.HOUR),TimeUnit.MILLISECONDS);
  }
  finally {
    _messageBus.unregisterMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,messageListener);
  }
}

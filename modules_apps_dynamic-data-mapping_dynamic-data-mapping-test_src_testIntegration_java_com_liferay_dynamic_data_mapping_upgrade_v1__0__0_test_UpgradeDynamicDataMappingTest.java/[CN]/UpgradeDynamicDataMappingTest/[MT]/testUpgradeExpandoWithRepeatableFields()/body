{
  addStructure(_structureId,DDMStructureConstants.DEFAULT_PARENT_STRUCTURE_ID,DDMStructureConstants.VERSION_DEFAULT,read("ddm-structure-text-repeatable-field.xsd"),"expando");
  long classPK=RandomTestUtil.randomLong();
  ExpandoTable expandoTable=ExpandoTableLocalServiceUtil.addTable(_group.getCompanyId(),_classNameIdExpandoStorageAdapter,String.valueOf(_structureId));
  ExpandoRow expandoRow=ExpandoRowLocalServiceUtil.addRow(expandoTable.getTableId(),classPK);
  addStorageLink(_storageLinkId,expandoRow.getRowId(),_structureId);
  ExpandoColumn columnTextRepeatable=ExpandoColumnLocalServiceUtil.addColumn(expandoTable.getTableId(),"TextRepeatable",ExpandoColumnConstants.STRING_ARRAY_LOCALIZED);
  ExpandoValueLocalServiceUtil.addValue(expandoTable.getClassNameId(),expandoTable.getTableId(),columnTextRepeatable.getColumnId(),classPK,read("expando-value-text-repeatable-field.xsd"));
  ExpandoColumn columnFieldsDisplay=ExpandoColumnLocalServiceUtil.addColumn(expandoTable.getTableId(),"_fieldsDisplay",ExpandoColumnConstants.STRING_LOCALIZED);
  ExpandoValueLocalServiceUtil.addValue(expandoTable.getClassNameId(),expandoTable.getTableId(),columnFieldsDisplay.getColumnId(),classPK,read("expando-value-text-repeatable-field-display.xsd"));
  _upgradeDynamicDataMapping.upgrade();
  String expectedData=read("ddm-content-text-repeatable-field.json");
  String actualData=getContentData(expandoRow.getRowId());
  JSONAssert.assertEquals(expectedData,actualData,false);
}

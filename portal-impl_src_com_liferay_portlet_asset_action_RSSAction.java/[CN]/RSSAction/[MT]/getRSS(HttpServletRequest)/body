{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  long companyId=ParamUtil.getLong(request,"companyId");
  long groupId=ParamUtil.getLong(request,"groupId");
  int max=ParamUtil.getInteger(request,"max",SearchContainer.DEFAULT_DELTA);
  String type=ParamUtil.getString(request,"type",RSSUtil.DEFAULT_TYPE);
  double version=ParamUtil.getDouble(request,"version",RSSUtil.DEFAULT_VERSION);
  String displayStyle=ParamUtil.getString(request,"displayStyle",RSSUtil.DISPLAY_STYLE_FULL_CONTENT);
  String feedURL=StringPool.BLANK;
  String entryURL=themeDisplay.getURLPortal() + themeDisplay.getPathMain() + "/asset/find_asset?";
  String rss=StringPool.BLANK;
  if (companyId > 0) {
    rss=AssetEntryServiceUtil.getCompanyEntriesRSS(companyId,max,type,version,displayStyle,feedURL,entryURL);
  }
 else   if (groupId > 0) {
    Group group=GroupLocalServiceUtil.getGroup(groupId);
    companyId=group.getCompanyId();
    long[] classNameIds=new long[0];
    String[] allTagNames=StringUtil.split(ParamUtil.getString(request,"tags"));
    long[] tagIds=AssetTagLocalServiceUtil.getTagIds(companyId,allTagNames);
    String[] notTagNames=StringUtil.split(ParamUtil.getString(request,"noTags"));
    long[] notTagIds=AssetTagLocalServiceUtil.getTagIds(companyId,notTagNames);
    boolean andOperator=false;
    String orderByCol1=null;
    String orderByCol2=null;
    String orderByType1=null;
    String orderByType2=null;
    boolean excludeZeroViewCount=false;
    Date publishDate=null;
    Date expirationDate=null;
    rss=AssetEntryServiceUtil.getEntriesRSS(groupId,classNameIds,tagIds,notTagIds,andOperator,orderByCol1,orderByCol2,orderByType1,orderByType2,excludeZeroViewCount,publishDate,expirationDate,max,type,version,displayStyle,feedURL,entryURL);
  }
  return rss.getBytes(StringPool.UTF8);
}

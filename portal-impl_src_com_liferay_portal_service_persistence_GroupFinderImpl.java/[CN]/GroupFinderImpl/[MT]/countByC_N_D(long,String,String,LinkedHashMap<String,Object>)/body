{
  name=StringUtil.lowerCase(name);
  description=StringUtil.lowerCase(description);
  if (params == null) {
    params=new LinkedHashMap<String,Object>();
  }
  String finderSQL=Group.class.getName();
  boolean[] finderClassNamesCacheEnabled=new boolean[]{GroupModelImpl.CACHE_ENABLED,LayoutSetModelImpl.CACHE_ENABLED,PermissionModelImpl.CACHE_ENABLED,ResourceModelImpl.CACHE_ENABLED,ResourceCodeModelImpl.CACHE_ENABLED,UserGroupRoleModelImpl.CACHE_ENABLED,GroupModelImpl.CACHE_ENABLED_GROUPS_ORGS,GroupModelImpl.CACHE_ENABLED_GROUPS_ROLES,GroupModelImpl.CACHE_ENABLED_GROUPS_USERGROUPS,RoleModelImpl.CACHE_ENABLED_ROLES_PERMISSIONS,UserModelImpl.CACHE_ENABLED_USERS_GROUPS,UserModelImpl.CACHE_ENABLED_USERS_ORGS,UserModelImpl.CACHE_ENABLED_USERS_USERGROUPS};
  String[] finderClassNames=new String[]{Group.class.getName(),LayoutSet.class.getName(),Permission.class.getName(),Resource.class.getName(),ResourceCode.class.getName(),UserGroupRole.class.getName(),"Groups_Orgs","Groups_Roles","Groups_UserGroups","Roles_Permissions","Users_Groups","Users_Orgs","Users_UserGroups"};
  String finderMethodName="customCountByC_N_D";
  String finderParams[]=new String[]{Long.class.getName(),String.class.getName(),String.class.getName(),LinkedHashMap.class.getName(),String.class.getName(),String.class.getName()};
  Object finderArgs[]=new Object[]{companyId,name,description,params.toString()};
  Object result=null;
  if (!ArrayUtil.contains(finderClassNamesCacheEnabled,false)) {
    result=FinderCacheUtil.getResult(finderSQL,finderClassNames,finderMethodName,finderParams,finderArgs,this);
  }
  if (result == null) {
    Long userId=(Long)params.get("usersGroups");
    LinkedHashMap<String,Object> params1=params;
    LinkedHashMap<String,Object> params2=new LinkedHashMap<String,Object>();
    params2.putAll(params1);
    if (userId != null) {
      params2.remove("usersGroups");
      params2.put("groupsOrgs",userId);
    }
    LinkedHashMap<String,Object> params3=new LinkedHashMap<String,Object>();
    params3.putAll(params1);
    if (userId != null) {
      params3.remove("usersGroups");
      params3.put("groupsUserGroups",userId);
    }
    Session session=null;
    try {
      session=openSession();
      int count=countByC_N_D(session,companyId,name,description,params1);
      if (Validator.isNotNull(userId)) {
        count+=countByC_N_D(session,companyId,name,description,params2);
        count+=countByC_N_D(session,companyId,name,description,params3);
      }
      FinderCacheUtil.putResult(finderSQL,finderClassNamesCacheEnabled,finderClassNames,finderMethodName,finderParams,finderArgs,new Long(count));
      return count;
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return ((Long)result).intValue();
  }
}

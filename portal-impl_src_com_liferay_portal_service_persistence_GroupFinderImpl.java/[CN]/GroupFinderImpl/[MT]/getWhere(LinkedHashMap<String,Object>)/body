{
  if ((params == null) || params.isEmpty()) {
    return StringPool.BLANK;
  }
  StringBundler sb=new StringBundler(params.size());
  for (  Map.Entry<String,Object> entry : params.entrySet()) {
    String key=entry.getKey();
    if (key.equals("types")) {
      List<Integer> types=(List<Integer>)entry.getValue();
      if (!types.isEmpty()) {
        sb.append("(");
        for (int i=0; i < types.size(); i++) {
          sb.append("(Group_.type_ = ?) ");
          if ((i + 1) < types.size()) {
            sb.append("OR ");
          }
        }
        sb.append(") AND ");
      }
    }
 else {
      if (key.equals("rolePermissions") && (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6)) {
        List<Object> values=(List<Object>)entry.getValue();
        String name=(String)values.get(0);
        if (ResourceBlockLocalServiceUtil.isSupported(name)) {
          key="rolePermissions_6_block";
        }
 else {
          key="rolePermissions_6";
        }
      }
      Map<String,String> whereMap=_getWhereMap();
      sb.append(whereMap.get(key));
    }
  }
  return sb.toString();
}

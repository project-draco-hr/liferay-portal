{
  String join=StringPool.BLANK;
  if (key.equals("active")) {
    join=CustomSQLUtil.get(JOIN_BY_ACTIVE);
  }
 else   if (key.equals("creatorUserId")) {
    join=CustomSQLUtil.get(JOIN_BY_CREATOR_USER_ID);
  }
 else   if (key.equals("groupOrg")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUP_ORG);
  }
 else   if (key.equals("groupsOrgs")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_ORGS);
  }
 else   if (key.equals("groupsRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_ROLES);
  }
 else   if (key.equals("groupsUserGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_USER_GROUPS);
  }
 else   if (key.equals("layoutSet")) {
    join=CustomSQLUtil.get(JOIN_BY_LAYOUT_SET);
  }
 else   if (key.equals("pageCount")) {
    join=CustomSQLUtil.get(JOIN_BY_PAGE_COUNT);
  }
 else   if (key.equals("rolePermissions")) {
    List<Object> values=(List<Object>)value;
    String name=(String)values.get(0);
    if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
      if (ResourceBlockLocalServiceUtil.isSupported(name)) {
        join=CustomSQLUtil.get(JOIN_BY_ROLE_RESOURCE_TYPE_PERMISSIONS);
      }
 else {
        join=CustomSQLUtil.get(JOIN_BY_ROLE_RESOURCE_PERMISSIONS);
      }
    }
 else {
      join=CustomSQLUtil.get(JOIN_BY_ROLE_PERMISSIONS);
    }
  }
 else   if (key.equals("site")) {
    join=CustomSQLUtil.get(JOIN_BY_SITE);
  }
 else   if (key.equals("type")) {
    join=CustomSQLUtil.get(JOIN_BY_TYPE);
  }
 else   if (key.equals("types")) {
    List<Integer> types=(List<Integer>)value;
    if (!types.isEmpty()) {
      StringBundler sb=new StringBundler(types.size() * 2 + 1);
      sb.append("WHERE (");
      for (int i=0; i < types.size(); i++) {
        sb.append("(Group_.type_ = ?) ");
        if ((i + 1) < types.size()) {
          sb.append("OR ");
        }
      }
      sb.append(")");
      join=sb.toString();
    }
  }
 else   if (key.equals("userGroupRole")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUP_ROLE);
  }
 else   if (key.equals("usersGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_GROUPS);
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      join=join.substring(pos + 5,join.length()).concat(" AND ");
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

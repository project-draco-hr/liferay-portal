{
  String join=StringPool.BLANK;
  if (key.equals("active")) {
    join=CustomSQLUtil.get(JOIN_BY_ACTIVE);
  }
 else   if (key.equals("creatorUserId")) {
    join=CustomSQLUtil.get(JOIN_BY_CREATOR_USER_ID);
  }
 else   if (key.equals("groupsOrgs")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_ORGS);
  }
 else   if (key.equals("groupsRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_ROLES);
  }
 else   if (key.equals("groupsUserGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_USER_GROUPS);
  }
 else   if (key.equals("layoutSet")) {
    join=CustomSQLUtil.get(JOIN_BY_LAYOUT_SET);
  }
 else   if (key.equals("pageCount")) {
    join=CustomSQLUtil.get(JOIN_BY_PAGE_COUNT);
  }
 else   if (key.equals("rolePermissions")) {
    join=CustomSQLUtil.get(JOIN_BY_ROLE_PERMISSIONS);
  }
 else   if (key.equals("type")) {
    join=CustomSQLUtil.get(JOIN_BY_TYPE);
  }
 else   if (key.equals("types")) {
    List<Integer> types=(List<Integer>)value;
    StringMaker sm=new StringMaker();
    sm.append("WHERE (");
    for (int i=0; i < types.size(); i++) {
      sm.append("(Group_.type_ = ?) ");
      if ((i + 1) < types.size()) {
        sm.append("OR ");
      }
    }
    sm.append(")");
    join=sm.toString();
  }
 else   if (key.equals("userGroupRole")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUP_ROLE);
  }
 else   if (key.equals("usersGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_GROUPS);
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      StringMaker sm=new StringMaker();
      sm.append(join.substring(pos + 5,join.length()));
      sm.append(" AND ");
      join=sm.toString();
    }
  }
  return join;
}

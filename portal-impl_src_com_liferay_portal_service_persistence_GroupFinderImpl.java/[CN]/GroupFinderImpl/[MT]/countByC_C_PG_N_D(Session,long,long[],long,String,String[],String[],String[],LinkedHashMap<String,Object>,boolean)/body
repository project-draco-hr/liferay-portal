{
  String sql=CustomSQLUtil.get(COUNT_BY_C_C_PG_N_D);
  if (classNameIds == null) {
    sql=StringUtil.replace(sql,"AND (Group_.classNameId = ?)",StringPool.BLANK);
  }
 else {
    sql=StringUtil.replace(sql,"Group_.classNameId = ?","Group_.classNameId = ".concat(StringUtil.merge(classNameIds," OR Group_.classNameId = ")));
  }
  sql=StringUtil.replace(sql,"[$PARENT_GROUP_ID_COMPARATOR$]",parentGroupIdComparator.equals(StringPool.EQUAL) ? StringPool.EQUAL : StringPool.NOT_EQUAL);
  sql=CustomSQLUtil.replaceKeywords(sql,"lower(Group_.name) LIKE ? OR lower(Group_.name)",StringPool.LIKE,false,names);
  sql=CustomSQLUtil.replaceKeywords(sql,"lower(Group_.description)",StringPool.LIKE,true,descriptions);
  sql=replaceJoinAndWhere(sql,params);
  sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
  SQLQuery q=session.createSQLQuery(sql);
  q.addScalar("groupId",Type.LONG);
  QueryPos qPos=QueryPos.getInstance(q);
  setJoin(qPos,params);
  qPos.add(companyId);
  qPos.add(parentGroupId);
  qPos.add(names);
  qPos.add(realNames);
  qPos.add(names);
  qPos.add(descriptions,2);
  return q.list(true);
}

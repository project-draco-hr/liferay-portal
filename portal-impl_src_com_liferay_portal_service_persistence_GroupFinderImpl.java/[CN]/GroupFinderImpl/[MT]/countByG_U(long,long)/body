{
  String finderSQL=Group.class.getName();
  boolean[] finderClassNamesCacheEnabled=new boolean[]{GroupModelImpl.CACHE_ENABLED,GroupModelImpl.CACHE_ENABLED_GROUPS_ORGS,GroupModelImpl.CACHE_ENABLED_GROUPS_USERGROUPS,UserModelImpl.CACHE_ENABLED_USERS_GROUPS,UserModelImpl.CACHE_ENABLED_USERS_ORGS,UserModelImpl.CACHE_ENABLED_USERS_USERGROUPS};
  String[] finderClassNames=new String[]{Group.class.getName(),"Groups_Orgs","Groups_UserGroups","Users_Groups","Users_Orgs","Users_UserGroups"};
  String finderMethodName="customCountByG_U";
  String finderParams[]=new String[]{Long.class.getName(),Long.class.getName()};
  Object finderArgs[]=new Object[]{new Long(groupId),new Long(userId)};
  Object result=null;
  if (!ArrayUtil.contains(finderClassNamesCacheEnabled,false)) {
    result=FinderCache.getResult(finderSQL,finderClassNames,finderMethodName,finderParams,finderArgs);
  }
  if (result == null) {
    Long userIdObj=new Long(userId);
    LinkedHashMap params1=new LinkedHashMap();
    params1.put("usersGroups",userIdObj);
    LinkedHashMap params2=new LinkedHashMap();
    params2.put("groupsOrgs",userIdObj);
    LinkedHashMap params3=new LinkedHashMap();
    params3.put("groupsUserGroups",userIdObj);
    Session session=null;
    try {
      session=HibernateUtil.openSession();
      int count=countByGroupId(session,groupId,params1);
      count+=countByGroupId(session,groupId,params2);
      count+=countByGroupId(session,groupId,params3);
      FinderCache.putResult(finderSQL,finderClassNamesCacheEnabled,finderClassNames,finderMethodName,finderParams,finderArgs,new Long(count));
      return count;
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
 finally {
      HibernateUtil.closeSession(session);
    }
  }
 else {
    return ((Long)result).intValue();
  }
}

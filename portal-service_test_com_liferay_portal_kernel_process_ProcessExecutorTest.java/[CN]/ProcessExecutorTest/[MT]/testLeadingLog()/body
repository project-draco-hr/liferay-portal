{
  String leadingLog="Test leading log.\n";
  String bodyLog="Test body log.\n";
  Logger logger=_getLogger();
  Level level=logger.getLevel();
  logger.setLevel(Level.WARNING);
  CaptureHandler captureHandler=new CaptureHandler();
  logger.addHandler(captureHandler);
  try {
    LeadingLogProcessCallable leadingLogProcessCallable=new LeadingLogProcessCallable(leadingLog,bodyLog);
    List<String> arguments=_createArguments();
    Future<String> future=ProcessExecutor.execute(_classPath,arguments,leadingLogProcessCallable);
    future.get();
    assertFalse(future.isCancelled());
    assertTrue(future.isDone());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    assertEquals("Found corrupt leading log " + leadingLog,logRecord.getMessage());
  }
  finally {
    logger.removeHandler(captureHandler);
    logger.setLevel(level);
  }
  logger.setLevel(Level.FINE);
  captureHandler=new CaptureHandler();
  logger.addHandler(captureHandler);
  try {
    LeadingLogProcessCallable leadingLogProcessCallable=new LeadingLogProcessCallable(leadingLog,bodyLog);
    List<String> arguments=_createArguments();
    Future<String> future=ProcessExecutor.execute(_classPath,arguments,leadingLogProcessCallable);
    future.get();
    assertFalse(future.isCancelled());
    assertTrue(future.isDone());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    assertEquals(2,logRecords.size());
    LogRecord logRecord1=logRecords.get(0);
    assertEquals("Found corrupt leading log " + leadingLog,logRecord1.getMessage());
    LogRecord logRecord2=logRecords.get(1);
    String message=logRecord2.getMessage();
    assertTrue(message.contains("Invoked generic process callable "));
  }
  finally {
    logger.removeHandler(captureHandler);
    logger.setLevel(level);
  }
  logger.setLevel(Level.SEVERE);
  captureHandler=new CaptureHandler();
  logger.addHandler(captureHandler);
  try {
    LeadingLogProcessCallable leadingLogProcessCallable=new LeadingLogProcessCallable(leadingLog,bodyLog);
    List<String> arguments=_createArguments();
    Future<String> future=ProcessExecutor.execute(_classPath,arguments,leadingLogProcessCallable);
    future.get();
    assertFalse(future.isCancelled());
    assertTrue(future.isDone());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    assertEquals(0,logRecords.size());
  }
  finally {
    logger.removeHandler(captureHandler);
    logger.setLevel(level);
  }
}

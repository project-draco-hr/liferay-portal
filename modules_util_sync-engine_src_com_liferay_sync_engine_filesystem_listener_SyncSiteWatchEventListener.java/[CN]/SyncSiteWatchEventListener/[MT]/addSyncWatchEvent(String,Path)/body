{
  try {
    String filePathName=filePath.toString();
    Path parentFilePath=filePath.getParent();
    String parentFilePathName=parentFilePath.toString();
    SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
    if (isDuplicateEvent(eventType,filePath.toString(),getSyncAccountId())) {
      return;
    }
    if (filePathName.equals(syncAccount.getFilePathName()) || parentFilePathName.equals(syncAccount.getFilePathName())) {
      return;
    }
    long repositoryId=getRepositoryId(filePath);
    if (repositoryId <= 0) {
      return;
    }
    SyncSite syncSite=SyncSiteService.fetchSyncSite(repositoryId,getSyncAccountId());
    Set<Long> activeSyncSiteIds=SyncSiteService.getActiveSyncSiteIds(getSyncAccountId());
    if (!activeSyncSiteIds.contains(syncSite.getSyncSiteId())) {
      return;
    }
    if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) {
      _previousFilePath=filePath;
      return;
    }
    String previousFilePathName=null;
    if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) {
      if (_previousFilePath == null) {
        Watcher watcher=WatcherRegistry.getWatcher(getSyncAccountId());
        watcher.walkFileTree(Paths.get(filePathName));
        eventType=SyncWatchEvent.EVENT_TYPE_CREATE;
      }
 else {
        if (parentFilePath.equals(_previousFilePath.getParent())) {
          eventType=SyncWatchEvent.EVENT_TYPE_RENAME;
        }
 else {
          eventType=SyncWatchEvent.EVENT_TYPE_MOVE;
        }
        previousFilePathName=_previousFilePath.toString();
      }
    }
 else     if (_previousFilePath != null) {
      eventType=SyncWatchEvent.EVENT_TYPE_DELETE;
      filePathName=_previousFilePath.toString();
    }
    SyncWatchEventService.addSyncWatchEvent(eventType,filePathName,getFileType(eventType,filePath),previousFilePathName,getSyncAccountId());
    _previousFilePath=null;
  }
 catch (  Exception e) {
    _logger.error(e.getMessage(),e);
  }
}

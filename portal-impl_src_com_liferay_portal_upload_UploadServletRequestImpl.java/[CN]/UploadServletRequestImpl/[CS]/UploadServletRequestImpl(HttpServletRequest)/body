{
  super(request);
  _fileParameters=new LinkedHashMap<String,FileItem[]>();
  _regularParameters=new LinkedHashMap<String,List<String>>();
  try {
    ServletFileUpload servletFileUpload=new LiferayFileUpload(new LiferayFileItemFactory(getTempDir()),request);
    servletFileUpload.setSizeMax(PrefsPropsUtil.getLong(PropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE));
    _liferayServletRequest=new LiferayServletRequest(request);
    List<LiferayFileItem> liferayFileItemsList=servletFileUpload.parseRequest(_liferayServletRequest);
    for (    LiferayFileItem liferayFileItem : liferayFileItemsList) {
      if (liferayFileItem.isFormField()) {
        liferayFileItem.setString(request.getCharacterEncoding());
        String fieldName=liferayFileItem.getFieldName();
        if (!_regularParameters.containsKey(fieldName)) {
          _regularParameters.put(fieldName,new ArrayList<String>());
        }
        List<String> values=_regularParameters.get(fieldName);
        values.add(liferayFileItem.getString());
        continue;
      }
      FileItem[] liferayFileItems=_fileParameters.get(liferayFileItem.getFieldName());
      if (liferayFileItems == null) {
        liferayFileItems=new LiferayFileItem[]{liferayFileItem};
      }
 else {
        LiferayFileItem[] newLiferayFileItems=new LiferayFileItem[liferayFileItems.length + 1];
        System.arraycopy(liferayFileItems,0,newLiferayFileItems,0,liferayFileItems.length);
        newLiferayFileItems[newLiferayFileItems.length - 1]=liferayFileItem;
        liferayFileItems=newLiferayFileItems;
      }
      _fileParameters.put(liferayFileItem.getFieldName(),liferayFileItems);
    }
  }
 catch (  Exception e) {
    UploadException uploadException=new UploadException(e);
    if (e instanceof FileUploadBase.FileSizeLimitExceededException || e instanceof FileUploadBase.SizeLimitExceededException) {
      uploadException.setExceededSizeLimit(true);
    }
    request.setAttribute(WebKeys.UPLOAD_EXCEPTION,uploadException);
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
  }
}

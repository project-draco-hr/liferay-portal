{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    Path logsFolderPath=Paths.get(PropsValues.SYNC_CONFIGURATION_DIRECTORY,"logs");
    Path archiveFilePath=logsFolderPath.resolve("archive");
    Files.createDirectories(archiveFilePath);
    Calendar calendar=Calendar.getInstance();
    calendar.add(Calendar.DAY_OF_MONTH,-7);
    SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
    Path archiveZipFilePath=archiveFilePath.resolve("sync-" + dateFormat.format(calendar.getTime()) + ".log.zip");
    FileOutputStream fileOutputStream=new FileOutputStream(archiveZipFilePath.toFile());
    ZipOutputStream zipOutputStream=new ZipOutputStream(fileOutputStream);
    try (DirectoryStream<Path> filePaths=Files.newDirectoryStream(logsFolderPath)){
      for (      Path filePath : filePaths) {
        if (filePath.equals(archiveFilePath)) {
          continue;
        }
        ZipEntry zipEntry=new ZipEntry(String.valueOf(filePath.getFileName()));
        zipOutputStream.putNextEntry(zipEntry);
        InputStream inputStream=Files.newInputStream(filePath);
        byte[] bytes=new byte[4096];
        int length=0;
        while ((length=inputStream.read(bytes)) > 0) {
          zipOutputStream.write(bytes,0,length);
        }
        zipOutputStream.closeEntry();
        StreamUtil.cleanUp(inputStream);
        Files.delete(filePath);
      }
      zipOutputStream.close();
    }
 catch (    Exception e) {
    }
 finally {
      StreamUtil.cleanUp(zipOutputStream);
    }
    UpgradeUtil.copyLoggerConfiguration();
  }
 }

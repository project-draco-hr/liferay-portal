{
  Object value=null;
  int t=type.intValue();
  UserType userType=null;
  if (t == Types.BIGINT) {
    userType=new LongType();
  }
 else   if (t == Types.BOOLEAN) {
    userType=new BooleanType();
  }
 else   if (t == Types.CLOB) {
    Clob clob=rs.getClob(name);
    if (clob == null) {
      value=StringPool.BLANK;
    }
 else {
      BufferedReader br=new BufferedReader(clob.getCharacterStream());
      StringBuffer sb=new StringBuffer();
      String line=null;
      while ((line=br.readLine()) != null) {
        sb.append(line + StringPool.NEW_LINE);
      }
      if (sb.length() > 0) {
        sb.deleteCharAt(sb.length() - 1);
      }
      value=sb.toString();
    }
  }
 else   if (t == Types.TIMESTAMP) {
    try {
      value=rs.getObject(name);
    }
 catch (    Exception e) {
    }
    if (value == null) {
      value=new Date();
    }
  }
 else   if (t == Types.FLOAT) {
    userType=new FloatType();
  }
 else   if (t == Types.INTEGER) {
    userType=new IntegerType();
  }
 else   if (t == Types.SMALLINT) {
    userType=new ShortType();
  }
 else   if (t == Types.VARCHAR) {
    value=GetterUtil.getString(rs.getString(name));
  }
 else {
    throw new UpgradeException("Upgrade code using unsupported class type " + type);
  }
  if (userType != null) {
    value=userType.nullSafeGet(rs,new String[]{name},null);
  }
  return value;
}

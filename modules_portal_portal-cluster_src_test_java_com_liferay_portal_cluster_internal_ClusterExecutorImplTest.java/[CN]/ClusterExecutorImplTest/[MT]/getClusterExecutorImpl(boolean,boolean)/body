{
  ClusterExecutorImpl clusterExecutorImpl=new ClusterExecutorImpl();
  clusterExecutorImpl.setProps(new Props(){
    @Override public boolean contains(    String key){
      return false;
    }
    @Override public String get(    String key){
      if (PropsKeys.CLUSTER_LINK_ENABLED.equals(key)) {
        return String.valueOf(enabled);
      }
      return StringPool.BLANK;
    }
    @Override public String get(    String key,    Filter filter){
      return null;
    }
    @Override public String[] getArray(    String key){
      return null;
    }
    @Override public String[] getArray(    String key,    Filter filter){
      return null;
    }
    @Override public Properties getProperties(){
      return null;
    }
    @Override public Properties getProperties(    String prefix,    boolean removePrefix){
      return null;
    }
  }
);
  clusterExecutorImpl.setClusterChannelFactory(new TestClusterChannelFactory());
  clusterExecutorImpl.setPortalExecutorManager(new MockPortalExecutorManager());
  Dictionary<String,Object> properties=new HashMapDictionary<>();
  properties.put(ClusterPropsKeys.CHANNEL_NAME_CONTROL,"test-channel-name-control");
  properties.put(ClusterPropsKeys.CHANNEL_PROPERTIES_CONTROL,"test-channel-properties-control");
  clusterExecutorImpl.activate(new MockComponentContext(properties));
  return clusterExecutorImpl;
}

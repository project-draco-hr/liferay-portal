{
  PortletURL portletURL=PortalUtil.getControlPanelPortletURL(portletRequest,DLPortletKeys.DOCUMENT_LIBRARY_ADMIN,PortletRequest.ACTION_PHASE);
  portletURL.setParameter(ActionRequest.ACTION_NAME,"/document_library/edit_file_entry");
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long repositoryId=ParamUtil.getLong(portletRequest,"repositoryId");
  if (isTrashEnabled(themeDisplay.getScopeGroupId(),repositoryId)) {
    portletURL.setParameter(Constants.CMD,Constants.MOVE_TO_TRASH);
  }
 else {
    portletURL.setParameter(Constants.CMD,Constants.DELETE);
  }
  PortletURL redirectURL=PortalUtil.getControlPanelPortletURL(portletRequest,DLPortletKeys.DOCUMENT_LIBRARY_ADMIN,PortletRequest.RENDER_PHASE);
  FileEntry fileEntry=null;
  try {
    fileEntry=ActionUtil.getFileEntry(portletRequest);
  }
 catch (  Exception e) {
    return null;
  }
  long folderId=fileEntry.getFolderId();
  if (folderId == DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    redirectURL.setParameter("mvcRenderCommandName","/document_library/view");
  }
 else {
    redirectURL.setParameter("mvcRenderCommandName","/document_library/view_folder");
  }
  redirectURL.setParameter("folderId",String.valueOf(folderId));
  portletURL.setParameter("redirect",redirectURL.toString());
  portletURL.setParameter("fileEntryId",String.valueOf(fileEntry.getFileEntryId()));
  return portletURL.toString();
}

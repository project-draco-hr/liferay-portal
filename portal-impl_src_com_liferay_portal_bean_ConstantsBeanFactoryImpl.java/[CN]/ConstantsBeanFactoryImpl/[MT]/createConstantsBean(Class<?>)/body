{
  ClassLoader classLoader=constantsClass.getClassLoader();
  String constantsBeanClassName=constantsClass.getName() + "Bean";
  Class<?> constantsBeanClass=null;
synchronized (classLoader) {
    try {
      constantsBeanClass=classLoader.loadClass(constantsBeanClassName);
    }
 catch (    ClassNotFoundException cnfe) {
    }
    try {
      if (constantsBeanClass == null) {
        Method defineClassMethod=ReflectionUtil.getDeclaredMethod(ClassLoader.class,"defineClass",String.class,byte[].class,int.class,int.class);
        byte[] classData=generateConstantsBeanClassData(constantsClass);
        constantsBeanClass=(Class<?>)defineClassMethod.invoke(classLoader,constantsBeanClassName,classData,0,classData.length);
      }
      return constantsBeanClass.newInstance();
    }
 catch (    Throwable t) {
      throw new RuntimeException(t);
    }
  }
}

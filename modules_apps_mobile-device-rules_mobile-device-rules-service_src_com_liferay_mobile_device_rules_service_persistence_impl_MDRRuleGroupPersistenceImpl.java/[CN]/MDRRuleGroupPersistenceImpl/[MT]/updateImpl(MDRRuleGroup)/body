{
  mdrRuleGroup=toUnwrappedModel(mdrRuleGroup);
  boolean isNew=mdrRuleGroup.isNew();
  MDRRuleGroupModelImpl mdrRuleGroupModelImpl=(MDRRuleGroupModelImpl)mdrRuleGroup;
  if (Validator.isNull(mdrRuleGroup.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    mdrRuleGroup.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (mdrRuleGroup.getCreateDate() == null)) {
    if (serviceContext == null) {
      mdrRuleGroup.setCreateDate(now);
    }
 else {
      mdrRuleGroup.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!mdrRuleGroupModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      mdrRuleGroup.setModifiedDate(now);
    }
 else {
      mdrRuleGroup.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (mdrRuleGroup.isNew()) {
      session.save(mdrRuleGroup);
      mdrRuleGroup.setNew(false);
    }
 else {
      mdrRuleGroup=(MDRRuleGroup)session.merge(mdrRuleGroup);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !MDRRuleGroupModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((mdrRuleGroupModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{mdrRuleGroupModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((mdrRuleGroupModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupModelImpl.getOriginalUuid(),mdrRuleGroupModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{mdrRuleGroupModelImpl.getUuid(),mdrRuleGroupModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((mdrRuleGroupModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{mdrRuleGroupModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
  }
  entityCache.putResult(MDRRuleGroupModelImpl.ENTITY_CACHE_ENABLED,MDRRuleGroupImpl.class,mdrRuleGroup.getPrimaryKey(),mdrRuleGroup,false);
  clearUniqueFindersCache(mdrRuleGroupModelImpl);
  cacheUniqueFindersCache(mdrRuleGroupModelImpl,isNew);
  mdrRuleGroup.resetOriginalValues();
  return mdrRuleGroup;
}

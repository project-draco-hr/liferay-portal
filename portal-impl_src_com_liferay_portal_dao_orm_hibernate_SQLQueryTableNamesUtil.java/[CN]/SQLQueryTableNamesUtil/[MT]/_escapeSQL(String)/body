{
  sql=sql.trim();
  if ((sql.length() > 1) && (sql.charAt(0) == CharPool.OPEN_PARENTHESIS)) {
    int closeIndex=sql.lastIndexOf(CharPool.CLOSE_PARENTHESIS);
    int openCount=1;
    for (int i=1; i < closeIndex; i++) {
      if (sql.charAt(i) == CharPool.OPEN_PARENTHESIS) {
        openCount++;
      }
      if (sql.charAt(i) == CharPool.CLOSE_PARENTHESIS) {
        openCount--;
        if (openCount == 0) {
          break;
        }
      }
    }
    if (openCount == 1) {
      String body=sql.substring(1,closeIndex);
      if (closeIndex < sql.length() - 1) {
        String tail=sql.substring(closeIndex + 1);
        sql=body.concat(tail);
      }
 else {
        sql=body;
      }
    }
  }
  Matcher matcher=_tableNamePattern.matcher(sql);
  sql=matcher.replaceAll("$1");
  matcher=_modPattern.matcher(sql);
  sql=matcher.replaceAll("1");
  matcher=_valuePattern.matcher(sql);
  return matcher.replaceAll("value_");
}

{
  UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
  try (ObjectOutputStream objectOutputStream=new ObjectOutputStream(unsyncByteArrayOutputStream)){
    objectOutputStream.writeObject(_mockRemoteSPI);
  }
   byte[] data=unsyncByteArrayOutputStream.toByteArray();
  System.clearProperty(PropsKeys.INTRABAND_IMPL);
  System.clearProperty(PropsKeys.INTRABAND_TIMEOUT_DEFAULT);
  System.clearProperty(PropsKeys.INTRABAND_WELDER_IMPL);
  System.clearProperty(PropsKeys.LIFERAY_HOME);
  ObjectInputStream objectInputStream=new ObjectInputStream(new UnsyncByteArrayInputStream(data));
  Assert.assertTrue(DependencyManagementThreadLocal.isEnabled());
  Object object=objectInputStream.readObject();
  Assert.assertFalse(DependencyManagementThreadLocal.isEnabled());
  Assert.assertSame(MockRemoteSPI.class,object.getClass());
  Assert.assertEquals(ExecutorIntraband.class.getName(),System.getProperty(PropsKeys.INTRABAND_IMPL));
  Assert.assertEquals("10000",System.getProperty(PropsKeys.INTRABAND_TIMEOUT_DEFAULT));
  Assert.assertEquals(MockWelder.class.getName(),System.getProperty(PropsKeys.INTRABAND_WELDER_IMPL));
  Assert.assertEquals(_currentDir.getAbsolutePath(),System.getProperty("portal:" + PropsKeys.LIFERAY_HOME));
  Assert.assertEquals("-".concat(_spiConfiguration.getSPIId()),System.getProperty("spi.id"));
  Assert.assertEquals("false",System.getProperty("portal:" + PropsKeys.AUTO_DEPLOY_ENABLED));
  Assert.assertEquals("false",System.getProperty("portal:" + PropsKeys.CLUSTER_LINK_ENABLED));
  objectInputStream=new ObjectInputStream(new UnsyncByteArrayInputStream(data));
  final SecurityException securityException=new SecurityException();
  try (SwappableSecurityManager swappableSecurityManager=new SwappableSecurityManager(){
    @Override public void checkPermission(    Permission permission){
      if (permission instanceof ReflectPermission) {
        throw securityException;
      }
    }
  }
){
    swappableSecurityManager.install();
    objectInputStream.readObject();
    Assert.fail();
  }
 catch (  IOException ioe) {
    Assert.assertEquals("Unable to disable dependency management",ioe.getMessage());
    Assert.assertSame(securityException,ioe.getCause());
  }
}

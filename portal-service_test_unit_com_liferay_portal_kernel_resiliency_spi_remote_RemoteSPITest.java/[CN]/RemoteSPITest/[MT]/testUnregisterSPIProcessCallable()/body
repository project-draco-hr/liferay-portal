{
  String spiProviderName="spiProviderName";
  String spiId="spiId";
  ProcessCallable<Boolean> processCallable=new UnregisterSPIProcessCallable(spiProviderName,spiId);
  Assert.assertFalse(processCallable.call());
  MPIHelperUtil.registerSPIProvider(new MockSPIProvider(spiProviderName));
  MockSPI mockSPI=new MockSPI();
  mockSPI.spiProviderName=spiProviderName;
  MPIHelperUtilTestUtil.directResigterSPI(spiId,mockSPI);
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(MPIHelperUtil.class.getName(),Level.WARNING)){
    Assert.assertFalse(processCallable.call());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Not unregistering SPI " + mockSPI + " with foreign MPI null "+ "versus "+ MPIHelperUtil.getMPI(),logRecord.getMessage());
  }
   mockSPI.mpi=MPIHelperUtil.getMPI();
  mockSPI.spiConfiguration=new SPIConfiguration(spiId,null,0,null,null,new String[0],null);
  Assert.assertTrue(processCallable.call());
}

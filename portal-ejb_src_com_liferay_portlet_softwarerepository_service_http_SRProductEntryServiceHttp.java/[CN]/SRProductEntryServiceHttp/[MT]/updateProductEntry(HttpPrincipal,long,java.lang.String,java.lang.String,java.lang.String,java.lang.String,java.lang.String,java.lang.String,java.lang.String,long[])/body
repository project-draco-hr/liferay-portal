{
  try {
    Object paramObj0=new LongWrapper(productEntryId);
    Object paramObj1=name;
    if (name == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=type;
    if (type == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=shortDescription;
    if (shortDescription == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=longDescription;
    if (longDescription == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=pageURL;
    if (pageURL == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=repoGroupId;
    if (repoGroupId == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=repoArtifactId;
    if (repoArtifactId == null) {
      paramObj7=new NullWrapper("java.lang.String");
    }
    Object paramObj8=licenseIds;
    if (licenseIds == null) {
      paramObj8=new NullWrapper("[J");
    }
    MethodWrapper methodWrapper=new MethodWrapper(SRProductEntryServiceUtil.class.getName(),"updateProductEntry",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      throw new com.liferay.portal.SystemException(e);
    }
    return (com.liferay.portlet.softwarerepository.model.SRProductEntry)returnObj;
  }
 catch (  com.liferay.portal.SystemException se) {
    String stackTrace=StackTraceUtil.getStackTrace(se);
    _log.error(stackTrace);
    throw se;
  }
}

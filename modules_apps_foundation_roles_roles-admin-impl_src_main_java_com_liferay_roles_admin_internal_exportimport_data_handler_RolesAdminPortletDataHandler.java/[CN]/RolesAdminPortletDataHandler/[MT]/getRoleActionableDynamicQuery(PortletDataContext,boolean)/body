{
  ActionableDynamicQuery actionableDynamicQuery=_roleLocalService.getExportActionableDynamicQuery(portletDataContext);
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
      long classNameId=PortalUtil.getClassNameId(Team.class);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      dynamicQuery.add(classNameIdProperty.ne(classNameId));
      if (!portletDataContext.getBooleanParameter(NAMESPACE,"system-roles")) {
        Conjunction conjunction=RestrictionsFactoryUtil.conjunction();
        Property nameProperty=PropertyFactoryUtil.forName("name");
        for (        String roleName : _allSystemRoleNames) {
          conjunction.add(nameProperty.ne(roleName));
        }
        dynamicQuery.add(conjunction);
      }
    }
  }
);
  @SuppressWarnings("unchecked") final ActionableDynamicQuery.PerformActionMethod<Role> performActionMethod=(ActionableDynamicQuery.PerformActionMethod<Role>)actionableDynamicQuery.getPerformActionMethod();
  ActionableDynamicQuery.PerformActionMethod<Role> performActionMethodWrapper=new RoleExportActionableDynamicQueryPerformActionMethod(performActionMethod,portletDataContext,export);
  actionableDynamicQuery.setPerformActionMethod(performActionMethodWrapper);
  return actionableDynamicQuery;
}

{
  if (!portletDataContext.isWithinDateRange(entry.getModifiedDate())) {
    return;
  }
  if (!entry.isApproved() && !entry.isInTrash()) {
    return;
  }
  String path=getEntryPath(portletDataContext,entry);
  if (!portletDataContext.isPathNotProcessed(path)) {
    return;
  }
  entry=(BlogsEntry)entry.clone();
  Element entryElement=(Element)entriesElement.selectSingleNode("//page[@path='".concat(path).concat("']"));
  if (entryElement == null) {
    entryElement=entriesElement.addElement("entry");
  }
  String content=DDMPortletDataHandler.exportReferencedContent(portletDataContext,dlFileEntryTypesElement,dlFoldersElement,dlFileEntriesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,entryElement,entry.getContent());
  entry.setContent(content);
  String imagePath=getEntryImagePath(portletDataContext,entry);
  entryElement.addAttribute("image-path",imagePath);
  if (entry.isSmallImage()) {
    Image smallImage=ImageUtil.fetchByPrimaryKey(entry.getSmallImageId());
    if (Validator.isNotNull(entry.getSmallImageURL())) {
      String smallImageURL=DDMPortletDataHandler.exportReferencedContent(portletDataContext,dlFileEntryTypesElement,dlFoldersElement,dlFileEntriesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,entryElement,entry.getSmallImageURL().concat(StringPool.SPACE));
      entry.setSmallImageURL(smallImageURL);
    }
 else     if (smallImage != null) {
      String smallImagePath=getEntrySmallImagePath(portletDataContext,entry);
      entryElement.addAttribute("small-image-path",smallImagePath);
      entry.setSmallImageType(smallImage.getType());
      portletDataContext.addZipEntry(smallImagePath,smallImage.getTextObj());
    }
  }
  portletDataContext.addClassedModel(entryElement,path,entry,NAMESPACE);
}

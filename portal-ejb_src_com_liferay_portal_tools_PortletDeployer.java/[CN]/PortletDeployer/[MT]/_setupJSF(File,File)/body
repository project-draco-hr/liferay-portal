{
  _myFacesPortlet=false;
  _sunFacesPortlet=false;
  if (!facesXML.exists()) {
    return;
  }
  SAXReader reader=new SAXReader();
  reader.setEntityResolver(new EntityResolver());
  Document doc=reader.read(portletXML);
  Element root=doc.getRootElement();
  List elements=root.elements("portlet");
  Iterator itr=elements.iterator();
  while (itr.hasNext()) {
    Element portlet=(Element)itr.next();
    String portletClass=portlet.elementText("portlet-class");
    if (portletClass.equals(Constants.JSF_MYFACES)) {
      _myFacesPortlet=true;
      break;
    }
 else     if (portletClass.equals(Constants.JSF_SUN)) {
      _sunFacesPortlet=true;
      break;
    }
  }
  reader=new SAXReader();
  reader.setEntityResolver(new EntityResolver());
  doc=reader.read(facesXML);
  root=doc.getRootElement();
  Element factoryEl=root.element("factory");
  Element renderKitFactoryEl=null;
  Element facesContextFactoryEl=null;
  if (factoryEl == null) {
    factoryEl=root.addElement("factory");
  }
  renderKitFactoryEl=factoryEl.element("render-kit-factory");
  facesContextFactoryEl=factoryEl.element("faces-context-factory");
  if ((appServerType.equals("orion") && (_sunFacesPortlet) && (renderKitFactoryEl == null))) {
    renderKitFactoryEl=factoryEl.addElement("render-kit-factory");
    renderKitFactoryEl.addText(Constants.LIFERAY_RENDER_KIT_FACTORY);
  }
 else   if (_myFacesPortlet && (facesContextFactoryEl == null)) {
    facesContextFactoryEl=factoryEl.addElement("faces-context-factory");
    facesContextFactoryEl.addText(Constants.MYFACES_CONTEXT_FACTORY);
  }
  if (!appServerType.equals("orion") && (_sunFacesPortlet)) {
    factoryEl.detach();
  }
  XMLMerger merger=new XMLMerger(new FacesXMLDescriptor());
  merger.organizeXML(doc);
  FileUtil.write(facesXML,XMLFormatter.toString(doc),true);
}

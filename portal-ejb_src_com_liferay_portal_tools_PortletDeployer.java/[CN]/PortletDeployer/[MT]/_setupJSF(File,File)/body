{
  _sunFacesPortlet=false;
  if (!facesXML.exists()) {
    return;
  }
  SAXReader reader=SAXReaderFactory.getInstance();
  Document doc=reader.read(portletXML);
  Element root=doc.getRootElement();
  List elements=root.elements("portlet");
  Iterator itr=elements.iterator();
  while (itr.hasNext()) {
    Element portlet=(Element)itr.next();
    String portletClass=portlet.elementText("portlet-class");
    if (portletClass.equals(Constants.JSF_SUN)) {
      _sunFacesPortlet=true;
      break;
    }
  }
  if (!appServerType.equals("orion") || !_sunFacesPortlet) {
    return;
  }
  reader=SAXReaderFactory.getInstance();
  doc=reader.read(facesXML);
  root=doc.getRootElement();
  Element factoryEl=root.element("factory");
  if (factoryEl == null) {
    factoryEl=root.addElement("factory");
  }
  Element renderKitFactoryEl=factoryEl.element("render-kit-factory");
  if (renderKitFactoryEl == null) {
    renderKitFactoryEl=factoryEl.addElement("render-kit-factory");
    renderKitFactoryEl.addText(Constants.LIFERAY_RENDER_KIT_FACTORY);
  }
  XMLMerger merger=new XMLMerger(new FacesXMLDescriptor());
  merger.organizeXML(doc);
  FileUtil.write(facesXML,XMLFormatter.toString(doc),true);
}

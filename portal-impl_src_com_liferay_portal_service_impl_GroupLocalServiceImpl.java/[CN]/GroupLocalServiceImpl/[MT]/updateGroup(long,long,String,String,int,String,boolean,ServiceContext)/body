{
  Group group=groupPersistence.findByPrimaryKey(groupId);
  String className=group.getClassName();
  long classNameId=group.getClassNameId();
  long classPK=group.getClassPK();
  friendlyURL=getFriendlyURL(group.getCompanyId(),groupId,classNameId,classPK,StringPool.BLANK,friendlyURL);
  if ((classNameId <= 0) || className.equals(Group.class.getName())) {
    validateName(group.getGroupId(),group.getCompanyId(),name,group.isSite());
  }
 else   if (className.equals(Organization.class.getName())) {
    name=getOrgGroupName(classPK,name);
  }
 else   if (!GroupConstants.USER_PERSONAL_SITE.equals(name)) {
    name=String.valueOf(classPK);
  }
  if (PortalUtil.isSystemGroup(group.getName()) && !group.getName().equals(name)) {
    throw new RequiredGroupException();
  }
  validateFriendlyURL(group.getCompanyId(),group.getGroupId(),group.getClassNameId(),group.getClassPK(),friendlyURL);
  group.setName(name);
  group.setDescription(description);
  group.setType(type);
  group.setFriendlyURL(friendlyURL);
  group.setActive(active);
  group.setParentGroupId(parentGroupId);
  groupPersistence.update(group,false);
  if ((serviceContext != null) && group.isSite()) {
    User user=null;
    try {
      user=userPersistence.findByPrimaryKey(group.getCreatorUserId());
    }
 catch (    NoSuchUserException nsue1) {
      try {
        user=userPersistence.findByPrimaryKey(serviceContext.getUserId());
      }
 catch (      NoSuchUserException nsue2) {
        user=userLocalService.getDefaultUser(group.getCompanyId());
      }
    }
    updateAsset(user.getUserId(),group,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  }
  return group;
}

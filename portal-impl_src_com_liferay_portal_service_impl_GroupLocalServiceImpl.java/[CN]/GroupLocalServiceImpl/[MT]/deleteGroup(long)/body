{
  Group group=GroupUtil.findByPrimaryKey(groupId);
  if (PortalUtil.isSystemGroup(group.getName())) {
    throw new RequiredGroupException();
  }
  try {
    LayoutSetLocalServiceUtil.deleteLayoutSet(groupId,true);
  }
 catch (  NoSuchLayoutSetException nslse) {
  }
  try {
    LayoutSetLocalServiceUtil.deleteLayoutSet(groupId,false);
  }
 catch (  NoSuchLayoutSetException nslse) {
  }
  try {
    Role role=RoleLocalServiceUtil.getGroupRole(group.getCompanyId(),groupId);
    RoleLocalServiceUtil.deleteRole(role.getRoleId());
  }
 catch (  NoSuchRoleException nsre) {
  }
  UserGroupRoleLocalServiceUtil.deleteUserGroupRolesByGroupId(groupId);
  BlogsEntryLocalServiceUtil.deleteEntries(groupId);
  BookmarksFolderLocalServiceUtil.deleteFolders(groupId);
  CalEventLocalServiceUtil.deleteEvents(groupId);
  DLFolderLocalServiceUtil.deleteFolders(groupId);
  IGFolderLocalServiceUtil.deleteFolders(groupId);
  JournalArticleLocalServiceUtil.deleteArticles(groupId);
  MBBanLocalServiceUtil.deleteBansByGroupId(groupId);
  MBCategoryLocalServiceUtil.deleteCategories(groupId);
  MBStatsUserLocalServiceUtil.deleteStatsUserByGroupId(groupId);
  PollsQuestionLocalServiceUtil.deleteQuestions(groupId);
  ShoppingCartLocalServiceUtil.deleteGroupCarts(groupId);
  WikiNodeLocalServiceUtil.deleteNodes(groupId);
  Iterator itr=ResourceFinder.findByC_P(group.getCompanyId(),String.valueOf(groupId)).iterator();
  while (itr.hasNext()) {
    Resource resource=(Resource)itr.next();
    ResourceLocalServiceUtil.deleteResource(resource);
  }
  String className=PortalUtil.getClassName(group.getClassNameId());
  if (((group.getClassNameId() <= 0) && (group.getClassPK() <= 0)) || (className.equals(Organization.class.getName()))) {
    ResourceLocalServiceUtil.deleteResource(group.getCompanyId(),Group.class.getName(),ResourceImpl.SCOPE_INDIVIDUAL,group.getGroupId());
  }
  GroupUtil.remove(groupId);
  PermissionCacheUtil.clearCache();
}

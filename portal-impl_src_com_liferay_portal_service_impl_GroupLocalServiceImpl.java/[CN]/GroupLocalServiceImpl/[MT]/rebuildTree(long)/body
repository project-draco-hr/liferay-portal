{
  final long[] hierarchicalClassNameIds=getClassNameIdsOfHierarchicalEntities();
  TreePathUtil.rebuildTree(companyId,GroupConstants.DEFAULT_PARENT_GROUP_ID,StringPool.SLASH,new TreeModelTasksAdapter<Group>(){
    @Override public List<Group> findTreeModels(    long previousId,    long companyId,    long parentPrimaryKey,    int size){
      return groupPersistence.findByC_G_C_P(hierarchicalClassNameIds,previousId,companyId,parentPrimaryKey,QueryUtil.ALL_POS,size,new GroupIdComparator(true));
    }
  }
);
}

{
  Group group=groupPersistence.findByPrimaryKey(groupId);
  UnicodeProperties props=group.getTypeSettingsProperties();
  props.setProperty("workflowEnabled",String.valueOf(workflowEnabled));
  if (workflowEnabled) {
    if (workflowStages < PropsValues.TASKS_DEFAULT_STAGES) {
      workflowStages=PropsValues.TASKS_DEFAULT_STAGES;
    }
    if (Validator.isNull(workflowRoleNames)) {
      workflowRoleNames=PropsValues.TASKS_DEFAULT_ROLE_NAMES;
    }
    props.setProperty("workflowStages",String.valueOf(workflowStages));
    props.setProperty("workflowRoleNames",workflowRoleNames);
  }
  group.setTypeSettings(group.getTypeSettings());
  groupPersistence.update(group,false);
  if (!workflowEnabled) {
    tasksProposalLocalService.deleteProposals(groupId);
  }
  return group;
}

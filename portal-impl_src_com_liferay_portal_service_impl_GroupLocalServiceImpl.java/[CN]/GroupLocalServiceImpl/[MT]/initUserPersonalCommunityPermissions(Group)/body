{
  Role role=roleLocalService.getRole(group.getCompanyId(),RoleConstants.USER);
  Map<String,String[]> rolePermissions=new HashMap<String,String[]>();
  List<Portlet> portlets=portletLocalService.getPortlets(group.getCompanyId());
  for (  Portlet portlet : portlets) {
    if (!portlet.isSystem()) {
      rolePermissions.put(portlet.getPortletId(),new String[]{ActionKeys.VIEW});
    }
  }
  rolePermissions.put(Layout.class.getName(),new String[]{ActionKeys.VIEW});
  rolePermissions.put("com.liferay.portlet.blogs",new String[]{ActionKeys.ADD_ENTRY,ActionKeys.PERMISSIONS,ActionKeys.SUBSCRIBE});
  rolePermissions.put("com.liferay.portlet.calendar",new String[]{ActionKeys.ADD_EVENT,ActionKeys.EXPORT_ALL_EVENTS,ActionKeys.PERMISSIONS});
  for (  Map.Entry<String,String[]> entry : rolePermissions.entrySet()) {
    String name=entry.getKey();
    String[] actionIds=entry.getValue();
    setRolePermissions(group,role,name,actionIds);
  }
  role=roleLocalService.getRole(group.getCompanyId(),RoleConstants.POWER_USER);
  rolePermissions.clear();
  for (  Portlet portlet : portlets) {
    List<String> actions=ResourceActionsUtil.getPortletResourceActions(portlet.getPortletId());
    if (!portlet.isSystem() && actions.contains(ActionKeys.ACCESS_IN_CONTROL_PANEL)) {
      rolePermissions.put(portlet.getPortletId(),new String[]{ActionKeys.ACCESS_IN_CONTROL_PANEL});
    }
  }
  rolePermissions.put(Group.class.getName(),new String[]{ActionKeys.MANAGE_LAYOUTS});
  List<String> actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.asset");
  rolePermissions.put("com.liferay.portlet.asset",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.blogs");
  rolePermissions.put("com.liferay.portlet.blogs",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.bookmarks");
  rolePermissions.put("com.liferay.portlet.bookmarks",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.calendar");
  rolePermissions.put("com.liferay.portlet.calendar",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.documentlibrary");
  rolePermissions.put("com.liferay.portlet.documentlibrary",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.imagegallery");
  rolePermissions.put("com.liferay.portlet.imagegallery",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.messageboards");
  rolePermissions.put("com.liferay.portlet.messageboards",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.polls");
  rolePermissions.put("com.liferay.portlet.polls",actions.toArray(new String[actions.size()]));
  actions=ResourceActionsUtil.getModelResourceActions("com.liferay.portlet.wiki");
  rolePermissions.put("com.liferay.portlet.wiki",actions.toArray(new String[actions.size()]));
  for (  Map.Entry<String,String[]> entry : rolePermissions.entrySet()) {
    String name=entry.getKey();
    String[] actionIds=entry.getValue();
    setRolePermissions(group,role,name,actionIds);
  }
}

{
  if (Validator.isNull(friendlyURL)) {
    return;
  }
  int exceptionType=LayoutImpl.validateFriendlyURL(friendlyURL);
  if (exceptionType != -1) {
    throw new GroupFriendlyURLException(exceptionType);
  }
  try {
    Group group=groupPersistence.findByC_F(companyId,friendlyURL);
    if (group.getGroupId() != groupId) {
      throw new GroupFriendlyURLException(GroupFriendlyURLException.DUPLICATE);
    }
  }
 catch (  NoSuchGroupException nsge) {
  }
  String groupIdFriendlyURL=friendlyURL.substring(1);
  if (Validator.isNumber(groupIdFriendlyURL)) {
    if (((classPK > 0) && (!groupIdFriendlyURL.equals(String.valueOf(classPK)))) || ((classPK == 0) && (!groupIdFriendlyURL.equals(String.valueOf(groupId))))) {
      GroupFriendlyURLException gfurle=new GroupFriendlyURLException(GroupFriendlyURLException.POSSIBLE_DUPLICATE);
      gfurle.setKeywordConflict(groupIdFriendlyURL);
      throw gfurle;
    }
  }
  String screenName=friendlyURL.substring(1);
  User user=userPersistence.fetchByC_SN(companyId,screenName);
  if (user != null) {
    long userClassNameId=PortalUtil.getClassNameId(User.class.getName());
    if ((classNameId == userClassNameId) && (classPK == user.getUserId())) {
    }
 else {
      throw new GroupFriendlyURLException(GroupFriendlyURLException.DUPLICATE);
    }
  }
}

{
  if (PortalUtil.isSystemGroup(group.getName())) {
    throw new RequiredGroupException(String.valueOf(group.getGroupId()));
  }
  layoutSetBranchLocalService.deleteLayoutSetBranches(group.getGroupId(),true);
  layoutSetBranchLocalService.deleteLayoutSetBranches(group.getGroupId(),false);
  try {
    layoutSetLocalService.deleteLayoutSet(group.getGroupId(),true);
  }
 catch (  NoSuchLayoutSetException nslse) {
  }
  try {
    layoutSetLocalService.deleteLayoutSet(group.getGroupId(),false);
  }
 catch (  NoSuchLayoutSetException nslse) {
  }
  userGroupRoleLocalService.deleteUserGroupRolesByGroupId(group.getGroupId());
  userGroupGroupRoleLocalService.deleteUserGroupGroupRolesByGroupId(group.getGroupId());
  membershipRequestLocalService.deleteMembershipRequests(group.getGroupId());
  subscriptionLocalService.deleteSubscriptions(group.getCompanyId(),BlogsEntry.class.getName(),group.getGroupId());
  subscriptionLocalService.deleteSubscriptions(group.getCompanyId(),JournalArticle.class.getName(),group.getGroupId());
  teamLocalService.deleteTeams(group.getGroupId());
  unscheduleStaging(group);
  if (group.hasStagingGroup()) {
    deleteGroup(group.getStagingGroup().getGroupId());
  }
  if (group.isCommunity()) {
    assetEntryLocalService.deleteEntry(Group.class.getName(),group.getGroupId());
  }
  blogsEntryLocalService.deleteEntries(group.getGroupId());
  blogsStatsUserLocalService.deleteStatsUserByGroupId(group.getGroupId());
  bookmarksFolderLocalService.deleteFolders(group.getGroupId());
  calEventLocalService.deleteEvents(group.getGroupId());
  dlAppLocalService.deleteAll(group.getGroupId());
  igFolderLocalService.deleteFolders(group.getGroupId());
  journalArticleLocalService.deleteArticles(group.getGroupId());
  journalTemplateLocalService.deleteTemplates(group.getGroupId());
  journalStructureLocalService.deleteStructures(group.getGroupId());
  mbBanLocalService.deleteBansByGroupId(group.getGroupId());
  mbCategoryLocalService.deleteCategories(group.getGroupId());
  mbStatsUserLocalService.deleteStatsUsersByGroupId(group.getGroupId());
  pollsQuestionLocalService.deleteQuestions(group.getGroupId());
  shoppingCartLocalService.deleteGroupCarts(group.getGroupId());
  shoppingCategoryLocalService.deleteCategories(group.getGroupId());
  shoppingCouponLocalService.deleteCoupons(group.getGroupId());
  shoppingOrderLocalService.deleteOrders(group.getGroupId());
  scFrameworkVersionLocalService.deleteFrameworkVersions(group.getGroupId());
  scProductEntryLocalService.deleteProductEntries(group.getGroupId());
  tasksProposalLocalService.deleteProposals(group.getGroupId());
  wikiNodeLocalService.deleteNodes(group.getGroupId());
  Iterator<Resource> itr=resourceFinder.findByC_P(group.getCompanyId(),String.valueOf(group.getGroupId())).iterator();
  while (itr.hasNext()) {
    Resource resource=itr.next();
    resourceLocalService.deleteResource(resource);
  }
  if (!group.isStagingGroup() && (group.isCommunity() || group.isOrganization())) {
    resourceLocalService.deleteResource(group.getCompanyId(),Group.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,group.getGroupId());
  }
  groupPersistence.remove(group);
  PermissionCacheUtil.clearCache();
}

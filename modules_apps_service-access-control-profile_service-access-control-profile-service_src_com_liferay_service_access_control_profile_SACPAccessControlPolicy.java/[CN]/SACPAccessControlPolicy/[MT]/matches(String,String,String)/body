{
  String allowedClass=null;
  String allowedMethod=null;
  int idx=allowedService.indexOf(CharPool.POUND);
  if (idx > -1) {
    allowedClass=allowedService.substring(0,idx);
    allowedMethod=allowedService.substring(idx + 1);
  }
 else {
    allowedClass=allowedService;
  }
  boolean wildcardMatchClass=false;
  if (Validator.isNotNull(allowedClass) && allowedClass.endsWith(StringPool.STAR)) {
    wildcardMatchClass=true;
    allowedClass=allowedClass.substring(0,allowedClass.length() - 1);
  }
  boolean wildcardMatchMethod=false;
  if (Validator.isNotNull(allowedMethod) && allowedMethod.endsWith(StringPool.STAR)) {
    wildcardMatchMethod=true;
    allowedMethod=allowedMethod.substring(0,allowedMethod.length() - 1);
  }
  if (Validator.isNotNull(allowedClass) && Validator.isNotNull(allowedMethod)) {
    if (wildcardMatchClass && !className.startsWith(allowedClass)) {
      return false;
    }
 else     if (!wildcardMatchClass && !className.equals(allowedClass)) {
      return false;
    }
    if (wildcardMatchMethod && !methodName.startsWith(allowedMethod)) {
      return false;
    }
 else     if (!wildcardMatchMethod && !methodName.equals(allowedMethod)) {
      return false;
    }
    return true;
  }
 else   if (Validator.isNotNull(allowedClass)) {
    if (wildcardMatchClass && !className.startsWith(allowedClass)) {
      return false;
    }
 else     if (!wildcardMatchClass && !className.equals(allowedClass)) {
      return false;
    }
    return true;
  }
 else   if (Validator.isNotNull(allowedMethod)) {
    if (wildcardMatchMethod && !methodName.startsWith(allowedMethod)) {
      return false;
    }
 else     if (!wildcardMatchMethod && !methodName.equals(allowedMethod)) {
      return false;
    }
    return true;
  }
 else   if (wildcardMatchClass && Validator.isNull(allowedClass)) {
    return true;
  }
  return false;
}

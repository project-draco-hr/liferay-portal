{
  List<String> serviceAccessControlProfileNames=ServiceAccessControlProfileThreadLocal.getActiveServiceAccessControlProfileNames();
  if (serviceAccessControlProfileNames == null) {
    return;
  }
  long companyId=CompanyThreadLocal.getCompanyId();
  Set<String> allowedServices=new HashSet<>();
  for (  String name : serviceAccessControlProfileNames) {
    try {
      SACPEntry sacpEntry=_sacpEntryLocalService.getSACPEntry(companyId,name);
      allowedServices.addAll(sacpEntry.getAllowedServiceSignaturesList());
    }
 catch (    PortalException pe) {
      throw new SecurityException(pe);
    }
  }
  Class<?> clazz=method.getDeclaringClass();
  String className=clazz.getName();
  if (allowedServices.contains(className)) {
    return;
  }
  String methodName=method.getName();
  String classNameAndMethodName=className.concat(StringPool.POUND).concat(methodName);
  if (allowedServices.contains(classNameAndMethodName)) {
    return;
  }
  for (  String allowedService : allowedServices) {
    if (matches(className,methodName,allowedService)) {
      return;
    }
  }
  throw new SecurityException("Access denied to " + classNameAndMethodName);
}

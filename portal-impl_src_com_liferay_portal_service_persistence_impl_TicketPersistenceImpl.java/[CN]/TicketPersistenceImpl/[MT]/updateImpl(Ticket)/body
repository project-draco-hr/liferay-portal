{
  ticket=toUnwrappedModel(ticket);
  boolean isNew=ticket.isNew();
  TicketModelImpl ticketModelImpl=(TicketModelImpl)ticket;
  Session session=null;
  try {
    session=openSession();
    if (ticket.isNew()) {
      session.save(ticket);
      ticket.setNew(false);
    }
 else {
      ticket=(Ticket)session.merge(ticket);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !TicketModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((ticketModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ticketModelImpl.getOriginalClassNameId(),ticketModelImpl.getOriginalClassPK(),ticketModelImpl.getOriginalType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_T,args);
      args=new Object[]{ticketModelImpl.getClassNameId(),ticketModelImpl.getClassPK(),ticketModelImpl.getType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_T,args);
    }
  }
  entityCache.putResult(TicketModelImpl.ENTITY_CACHE_ENABLED,TicketImpl.class,ticket.getPrimaryKey(),ticket,false);
  clearUniqueFindersCache(ticketModelImpl);
  cacheUniqueFindersCache(ticketModelImpl,isNew);
  ticket.resetOriginalValues();
  return ticket;
}

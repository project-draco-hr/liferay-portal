{
  Recurrence recurrence=new Recurrence(getCalendar(2009,MARCH,23,HOUR_DURING,MINUTE_DURING),getDefaultDuration(),Recurrence.DAILY);
  DayAndPosition[] dayPos={new DayAndPosition(MONDAY,0),new DayAndPosition(TUESDAY,0),new DayAndPosition(WEDNESDAY,0),new DayAndPosition(THURSDAY,0),new DayAndPosition(FRIDAY,0)};
  int[] weekNos={13,15,18,20};
  int[] monthDays={6,12,15,22,27,28};
  recurrence.setByDay(dayPos);
  recurrence.setByWeekNo(weekNos);
  recurrence.setByMonthDay(monthDays);
  assertIsInRecurrence(false,recurrence,2009,MARCH,22);
  assertIsInRecurrence(true,recurrence,2009,MARCH,27);
  assertIsInRecurrence(false,recurrence,2009,MARCH,28);
  assertIsInRecurrence(true,recurrence,2009,APRIL,6);
  assertIsInRecurrence(false,recurrence,2009,APRIL,12);
  assertIsInRecurrence(false,recurrence,2009,APRIL,15);
  assertIsInRecurrence(false,recurrence,2009,APRIL,21);
  assertIsInRecurrence(false,recurrence,2009,APRIL,22);
  assertIsInRecurrence(true,recurrence,2009,APRIL,27);
  assertIsInRecurrence(true,recurrence,2009,APRIL,28);
  assertIsInRecurrence(false,recurrence,2009,MAY,6);
  assertIsInRecurrence(true,recurrence,2009,MAY,12);
  assertIsInRecurrence(true,recurrence,2009,MAY,15);
  assertIsInRecurrence(false,recurrence,2009,MAY,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,27);
  assertIsInRecurrence(false,recurrence,2009,MAY,28);
  recurrence.setInterval(2);
  assertIsInRecurrence(false,recurrence,2009,MARCH,22);
  assertIsInRecurrence(true,recurrence,2009,MARCH,27);
  assertIsInRecurrence(false,recurrence,2009,MARCH,28);
  assertIsInRecurrence(true,recurrence,2009,APRIL,6);
  assertIsInRecurrence(false,recurrence,2009,APRIL,12);
  assertIsInRecurrence(false,recurrence,2009,APRIL,15);
  assertIsInRecurrence(false,recurrence,2009,APRIL,21);
  assertIsInRecurrence(false,recurrence,2009,APRIL,22);
  assertIsInRecurrence(false,recurrence,2009,APRIL,27);
  assertIsInRecurrence(true,recurrence,2009,APRIL,28);
  assertIsInRecurrence(false,recurrence,2009,MAY,6);
  assertIsInRecurrence(true,recurrence,2009,MAY,12);
  assertIsInRecurrence(false,recurrence,2009,MAY,15);
  assertIsInRecurrence(false,recurrence,2009,MAY,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,27);
  assertIsInRecurrence(false,recurrence,2009,MAY,28);
  recurrence.setUntil(getCalendar(2009,MAY,12,0,0));
  assertIsInRecurrence(true,recurrence,2009,APRIL,28);
  assertIsInRecurrence(false,recurrence,2009,MAY,12);
  recurrence.setOccurrence(2);
  assertIsInRecurrence(false,recurrence,2009,APRIL,6);
}

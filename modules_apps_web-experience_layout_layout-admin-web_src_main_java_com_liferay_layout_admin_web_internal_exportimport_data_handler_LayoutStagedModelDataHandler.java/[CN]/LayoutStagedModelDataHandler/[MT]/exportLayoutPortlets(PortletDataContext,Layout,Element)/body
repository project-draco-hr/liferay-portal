{
  Map<String,String[]> parameterMap=portletDataContext.getParameterMap();
  boolean permissions=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PERMISSIONS);
  Element portletsElement=layoutElement.addElement("portlets");
  long previousScopeGroupId=portletDataContext.getScopeGroupId();
  Map<String,Object[]> portletIds=getPortletids(portletDataContext,layout);
  for (  Map.Entry<String,Object[]> portletIdsEntry : portletIds.entrySet()) {
    String portletId=(String)portletIdsEntry.getValue()[0];
    long scopeGroupId=(Long)portletIdsEntry.getValue()[1];
    String scopeType=(String)portletIdsEntry.getValue()[2];
    String scopeLayoutUuid=(String)portletIdsEntry.getValue()[3];
    portletDataContext.setPlid(layout.getPlid());
    portletDataContext.setOldPlid(layout.getPlid());
    portletDataContext.setPortletId(portletId);
    portletDataContext.setScopeGroupId(scopeGroupId);
    portletDataContext.setScopeType(scopeType);
    portletDataContext.setScopeLayoutUuid(scopeLayoutUuid);
    Map<String,Boolean> exportPortletControlsMap=ExportImportHelperUtil.getExportPortletControlsMap(layout.getCompanyId(),portletId,parameterMap,portletDataContext.getType());
    try {
      _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_STARTED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext));
      _portletExportController.exportPortlet(portletDataContext,layout.getPlid(),portletsElement,permissions,exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_ARCHIVED_SETUPS),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_DATA),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_SETUP),exportPortletControlsMap.get(PortletDataHandlerKeys.PORTLET_USER_PREFERENCES));
      _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_SUCCEEDED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext));
    }
 catch (    Throwable t) {
      _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PORTLET_EXPORT_FAILED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),t);
      throw t;
    }
  }
  portletDataContext.setScopeGroupId(previousScopeGroupId);
}

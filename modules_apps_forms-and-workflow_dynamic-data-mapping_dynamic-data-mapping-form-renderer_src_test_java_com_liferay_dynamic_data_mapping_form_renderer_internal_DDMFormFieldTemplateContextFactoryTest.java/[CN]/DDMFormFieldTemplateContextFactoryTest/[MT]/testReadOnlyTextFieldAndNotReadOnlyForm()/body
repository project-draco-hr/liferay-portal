{
  DDMForm ddmForm=DDMFormTestUtil.createDDMForm();
  DDMFormField ddmFormField=DDMFormTestUtil.createTextDDMFormField("Field1",false,false,true);
  ddmFormField.setReadOnly(true);
  ddmForm.addDDMFormField(ddmFormField);
  String instanceId=StringUtil.randomString();
  DDMFormFieldEvaluationResult ddmFormFieldEvaluationResult=new DDMFormFieldEvaluationResult(instanceId,"Field1");
  ddmFormFieldEvaluationResult.setVisible(true);
  List<DDMFormFieldValue> ddmFormFieldValues=new ArrayList<>();
  DDMFormFieldValue ddmFormFieldValue=DDMFormValuesTestUtil.createUnlocalizedDDMFormFieldValue("Field1","Value 1");
  ddmFormFieldValue.setInstanceId(instanceId);
  ddmFormFieldValues.add(ddmFormFieldValue);
  DDMFormFieldTemplateContextFactory ddmFormFieldTemplateContextFactory=createDDMFormFieldTemplateContextFactory(ddmForm,ddmFormFieldEvaluationResult,ddmFormFieldValues,false,getTextDDMFormFieldRenderer(),getTextDDMFormFieldTemplateContextContributor());
  List<Object> fields=ddmFormFieldTemplateContextFactory.create();
  Assert.assertEquals(1,fields.size());
  Map<String,Object> fieldTemplateContext=(Map<String,Object>)fields.get(0);
  Assert.assertEquals(true,MapUtil.getBoolean(fieldTemplateContext,"readOnly"));
}

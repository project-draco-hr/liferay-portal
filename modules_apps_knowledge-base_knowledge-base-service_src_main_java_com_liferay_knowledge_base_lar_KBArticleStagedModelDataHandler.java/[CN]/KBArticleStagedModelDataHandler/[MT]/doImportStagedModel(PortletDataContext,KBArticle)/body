{
  long userId=portletDataContext.getUserId(kbArticle.getUserUuid());
  Map<Long,Long> kbArticleResourcePrimKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(KBArticle.class);
  long resourcePrimaryKey=MapUtil.getLong(kbArticleResourcePrimKeys,kbArticle.getResourcePrimKey(),kbArticle.getResourcePrimKey());
  long parentResourcePrimKey=MapUtil.getLong(kbArticleResourcePrimKeys,kbArticle.getParentResourcePrimKey(),kbArticle.getParentResourcePrimKey());
  long kbFolderClassNameId=_portal.getClassNameId(KBFolderConstants.getClassName());
  if ((kbArticle.getParentResourceClassNameId() != kbArticle.getClassNameId()) && (kbArticle.getParentResourceClassNameId() != kbFolderClassNameId)) {
    KBArticle parentKBArticle=_kbArticleLocalService.fetchLatestKBArticle(parentResourcePrimKey,WorkflowConstants.STATUS_APPROVED);
    if (parentKBArticle != null) {
      kbArticle.setParentResourceClassNameId(kbArticle.getClassNameId());
    }
 else {
      kbArticle.setParentResourceClassNameId(kbFolderClassNameId);
    }
  }
  if (kbArticle.getParentResourcePrimKey() != KBFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    if (kbArticle.getClassNameId() == kbArticle.getParentResourceClassNameId()) {
      StagedModelDataHandlerUtil.importReferenceStagedModels(portletDataContext,kbArticle,KBArticle.class);
    }
 else {
      StagedModelDataHandlerUtil.importReferenceStagedModels(portletDataContext,kbArticle,KBFolder.class);
      Map<Long,Long> kbFolderResourcePrimKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(KBFolder.class);
      parentResourcePrimKey=MapUtil.getLong(kbFolderResourcePrimKeys,parentResourcePrimKey,parentResourcePrimKey);
    }
  }
  if (parentResourcePrimKey == KBFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    Map<Long,Long> kbFolderResourcePrimKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(KBFolder.class);
    parentResourcePrimKey=MapUtil.getLong(kbFolderResourcePrimKeys,kbArticle.getParentResourcePrimKey(),KBFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  }
  String urlTitle=kbArticle.getUrlTitle();
  if (Validator.isNotNull(urlTitle) && !urlTitle.startsWith(StringPool.SLASH)) {
    kbArticle.setUrlTitle(StringPool.SLASH + urlTitle);
  }
  String[] sections=AdminUtil.unescapeSections(kbArticle.getSections());
  ServiceContext serviceContext=portletDataContext.createServiceContext(kbArticle);
  KBArticle importedKBArticle=null;
  if (portletDataContext.isDataStrategyMirror()) {
    KBArticle existingKBArticle=_kbArticlePersistence.fetchByR_G_V(resourcePrimaryKey,portletDataContext.getScopeGroupId(),kbArticle.getVersion());
    if (existingKBArticle == null) {
      existingKBArticle=fetchStagedModelByUuidAndGroupId(kbArticle.getUuid(),portletDataContext.getScopeGroupId());
    }
    if (existingKBArticle == null) {
      serviceContext.setUuid(kbArticle.getUuid());
      existingKBArticle=_kbArticlePersistence.fetchByR_G_L_First(resourcePrimaryKey,portletDataContext.getScopeGroupId(),true,null);
      if (existingKBArticle == null) {
        importedKBArticle=_kbArticleLocalService.addKBArticle(userId,kbArticle.getParentResourceClassNameId(),parentResourcePrimKey,kbArticle.getTitle(),kbArticle.getUrlTitle(),kbArticle.getContent(),kbArticle.getDescription(),kbArticle.getSourceURL(),sections,null,serviceContext);
        _kbArticleLocalService.updatePriority(importedKBArticle.getResourcePrimKey(),kbArticle.getPriority());
      }
 else {
        _kbArticleLocalService.updateKBArticle(userId,existingKBArticle.getResourcePrimKey(),kbArticle.getTitle(),kbArticle.getContent(),kbArticle.getDescription(),kbArticle.getSourceURL(),sections,null,null,serviceContext);
        _kbArticleLocalService.moveKBArticle(userId,existingKBArticle.getResourcePrimKey(),existingKBArticle.getParentResourceClassNameId(),parentResourcePrimKey,kbArticle.getPriority());
        importedKBArticle=_kbArticleLocalService.getLatestKBArticle(existingKBArticle.getResourcePrimKey(),WorkflowConstants.STATUS_APPROVED);
      }
    }
 else {
      importedKBArticle=existingKBArticle;
    }
  }
 else {
    if (resourcePrimaryKey != kbArticle.getResourcePrimKey()) {
      _kbArticleLocalService.updateKBArticle(userId,resourcePrimaryKey,kbArticle.getTitle(),kbArticle.getContent(),kbArticle.getDescription(),kbArticle.getSourceURL(),sections,null,null,serviceContext);
      _kbArticleLocalService.moveKBArticle(userId,resourcePrimaryKey,kbArticle.getParentResourceClassNameId(),parentResourcePrimKey,kbArticle.getPriority());
      importedKBArticle=_kbArticleLocalService.getLatestKBArticle(resourcePrimaryKey,WorkflowConstants.STATUS_APPROVED);
    }
 else {
      importedKBArticle=_kbArticleLocalService.addKBArticle(userId,kbArticle.getParentResourceClassNameId(),parentResourcePrimKey,kbArticle.getTitle(),kbArticle.getUrlTitle(),kbArticle.getContent(),kbArticle.getDescription(),kbArticle.getSourceURL(),sections,null,serviceContext);
      _kbArticleLocalService.updatePriority(importedKBArticle.getResourcePrimKey(),kbArticle.getPriority());
    }
  }
  importKBArticleAttachments(portletDataContext,kbArticle,importedKBArticle);
  portletDataContext.importClassedModel(kbArticle,importedKBArticle);
  if (!kbArticle.isMain()) {
    kbArticleResourcePrimKeys.put(kbArticle.getResourcePrimKey(),importedKBArticle.getResourcePrimKey());
  }
}

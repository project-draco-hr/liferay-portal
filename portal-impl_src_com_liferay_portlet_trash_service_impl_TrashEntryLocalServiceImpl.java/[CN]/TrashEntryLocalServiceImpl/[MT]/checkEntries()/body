{
  ActionableDynamicQuery actionableDynamicQuery=new GroupActionableDynamicQuery(){
    @Override protected TransactionAttribute getTransactionAttribute(){
      return REQUIRES_NEW_TRANSACTION_ATTRIBUTE;
    }
    @Override protected void performAction(    Object object) throws PortalException, SystemException {
      Group group=(Group)object;
      if (!TrashUtil.isTrashEnabled(group.getGroupId())) {
        return;
      }
      Date date=getMaxAge(group);
      List<TrashEntry> entries=trashEntryPersistence.findByG_LtCD(group.getGroupId(),date);
      for (      TrashEntry entry : entries) {
        TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(entry.getClassName());
        trashHandler.deleteTrashEntry(entry.getClassPK());
      }
    }
  }
;
  actionableDynamicQuery.performActions();
}

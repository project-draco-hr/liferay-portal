{
  long pk=nextLong();
  JournalArticleImage newJournalArticleImage=_persistence.create(pk);
  newJournalArticleImage.setGroupId(nextLong());
  newJournalArticleImage.setArticleId(randomString());
  newJournalArticleImage.setVersion(nextDouble());
  newJournalArticleImage.setElName(randomString());
  newJournalArticleImage.setLanguageId(randomString());
  newJournalArticleImage.setTempImage(randomBoolean());
  _persistence.update(newJournalArticleImage);
  JournalArticleImage existingJournalArticleImage=_persistence.findByPrimaryKey(newJournalArticleImage.getPrimaryKey());
  assertEquals(existingJournalArticleImage.getArticleImageId(),newJournalArticleImage.getArticleImageId());
  assertEquals(existingJournalArticleImage.getGroupId(),newJournalArticleImage.getGroupId());
  assertEquals(existingJournalArticleImage.getArticleId(),newJournalArticleImage.getArticleId());
  assertEquals(existingJournalArticleImage.getVersion(),newJournalArticleImage.getVersion());
  assertEquals(existingJournalArticleImage.getElName(),newJournalArticleImage.getElName());
  assertEquals(existingJournalArticleImage.getLanguageId(),newJournalArticleImage.getLanguageId());
  assertEquals(existingJournalArticleImage.getTempImage(),newJournalArticleImage.getTempImage());
}

{
  super(noticeableFuture);
  _defaultNoticeableFuture=new DefaultNoticeableFuture<T>();
  noticeableFuture.addFutureListener(new FutureListener<V>(){
    @Override public void complete(    Future<V> future){
      if (future.isCancelled()) {
        _defaultNoticeableFuture.cancel(true);
        return;
      }
      try {
        _defaultNoticeableFuture.set(convert(future.get()));
      }
 catch (      Throwable t) {
        if (t instanceof ExecutionException) {
          t=t.getCause();
        }
        _defaultNoticeableFuture.setException(t);
      }
    }
  }
);
}

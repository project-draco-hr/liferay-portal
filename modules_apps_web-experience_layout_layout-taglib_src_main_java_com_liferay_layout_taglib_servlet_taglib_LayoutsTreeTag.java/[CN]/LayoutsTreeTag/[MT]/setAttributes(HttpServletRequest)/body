{
  request.setAttribute("liferay-layout:layouts-tree:checkContentDisplayPage",String.valueOf(_checkContentDisplayPage));
  request.setAttribute("liferay-layout:layouts-tree:checkedNodes",getCheckedNodes());
  request.setAttribute("liferay-layout:layouts-tree:defaultStateChecked",String.valueOf(_defaultStateChecked));
  request.setAttribute("liferay-layout:layouts-tree:draggableTree",String.valueOf(_draggableTree));
  request.setAttribute("liferay-layout:layouts-tree:expandFirstNode",String.valueOf(_expandFirstNode));
  request.setAttribute("liferay-layout:layouts-tree:groupId",String.valueOf(_groupId));
  request.setAttribute("liferay-layout:layouts-tree:incomplete",String.valueOf(_incomplete));
  request.setAttribute("liferay-layout:layouts-tree:linkTemplate",String.valueOf(_linkTemplate));
  request.setAttribute("liferay-layout:layouts-tree:modules",getModules());
  Map<String,PortletURL> portletURLs=_portletURLs;
  if (_portletURL != null) {
    if (portletURLs == null) {
      portletURLs=new HashMap<>();
    }
    portletURLs.put("layoutURL",_portletURL);
  }
  request.setAttribute("liferay-layout:layouts-tree:portletURLs",portletURLs);
  request.setAttribute("liferay-layout:layouts-tree:portletURLsJSONArray",getPortletURLsJSONArray(portletURLs));
  request.setAttribute("liferay-layout:layouts-tree:privateLayout",String.valueOf(_privateLayout));
  request.setAttribute("liferay-layout:layouts-tree:rootLinkTemplate",_rootLinkTemplate);
  request.setAttribute("liferay-layout:layouts-tree:rootNodeName",_rootNodeName);
  request.setAttribute("liferay-layout:layouts-tree:saveState",String.valueOf(_saveState));
  request.setAttribute("liferay-layout:layouts-tree:selectableTree",String.valueOf(_selectableTree));
  request.setAttribute("liferay-layout:layouts-tree:selectedLayoutIds",_selectedLayoutIds);
  request.setAttribute("liferay-layout:layouts-tree:selPlid",_selPlid);
  request.setAttribute("liferay-layout:layouts-tree:treeId",_treeId);
}

{
  long userId=portletDataContext.getUserId(userGroup.getUserUuid());
  long companyId=portletDataContext.getCompanyId();
  ServiceContext serviceContext=portletDataContext.createServiceContext(userGroup,NAMESPACE);
  UserGroup importedUserGroup=null;
  if (portletDataContext.isDataStrategyMirror()) {
    UserGroup existingUserGroup=UserGroupLocalServiceUtil.fetchUserGroupByUuidAndCompanyId(userGroup.getUuid(),companyId);
    if (existingUserGroup == null) {
      serviceContext.setUuid(userGroup.getUuid());
      importedUserGroup=UserGroupLocalServiceUtil.addUserGroup(userId,companyId,userGroup.getName(),userGroup.getDescription(),serviceContext);
    }
 else {
      importedUserGroup=UserGroupLocalServiceUtil.updateUserGroup(companyId,existingUserGroup.getUserGroupId(),userGroup.getName(),userGroup.getDescription(),serviceContext);
    }
  }
 else {
    importedUserGroup=UserGroupLocalServiceUtil.addUserGroup(userId,companyId,userGroup.getName(),userGroup.getDescription(),serviceContext);
  }
  portletDataContext.importClassedModel(userGroup,importedUserGroup,NAMESPACE);
}

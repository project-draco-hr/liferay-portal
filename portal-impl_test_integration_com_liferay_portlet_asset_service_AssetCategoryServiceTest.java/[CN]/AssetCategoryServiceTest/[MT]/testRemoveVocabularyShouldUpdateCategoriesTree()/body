{
  long groupId=GroupTestUtil.addGroup().getGroupId();
  AssetVocabulary v1=AssetTestUtil.addVocabulary(groupId);
  AssetVocabulary v2=AssetTestUtil.addVocabulary(groupId);
  AssetCategory c1a=AssetTestUtil.addCategory(groupId,v1.getVocabularyId());
  assertLeftRightCategory(2,c1a);
  AssetCategory c1b=AssetTestUtil.addCategory(groupId,v1.getVocabularyId());
  assertLeftRightCategory(4,c1b);
  AssetCategory c1c=AssetTestUtil.addCategory(groupId,v1.getVocabularyId());
  assertLeftRightCategory(6,c1c);
  AssetCategory c2a=AssetTestUtil.addCategory(groupId,v2.getVocabularyId());
  assertLeftRightCategory(8,c2a);
  AssetCategory c2b=AssetTestUtil.addCategory(groupId,v2.getVocabularyId());
  assertLeftRightCategory(10,c2b);
  AssetCategory c2c=AssetTestUtil.addCategory(groupId,v2.getVocabularyId());
  assertLeftRightCategory(12,c2c);
  AssetVocabularyServiceUtil.deleteVocabulary(v1.getVocabularyId());
  int count=AssetCategoryServiceUtil.getVocabularyCategoriesCount(groupId,v1.getVocabularyId());
  Assert.assertEquals(0,count);
  count=AssetCategoryServiceUtil.getVocabularyCategoriesCount(groupId,v2.getVocabularyId());
  Assert.assertEquals(3,count);
  c2a=AssetCategoryServiceUtil.getCategory(c2a.getCategoryId());
  assertLeftRightCategory(2,c2a);
  c2b=AssetCategoryServiceUtil.getCategory(c2b.getCategoryId());
  assertLeftRightCategory(4,c2b);
  c2c=AssetCategoryServiceUtil.getCategory(c2c.getCategoryId());
  assertLeftRightCategory(6,c2c);
}

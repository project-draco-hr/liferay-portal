{
  MemcachedClientIF memcachedClient=null;
  try {
    memcachedClient=_memcachedClientFactory.getMemcachedClient();
  }
 catch (  Exception e) {
    return null;
  }
  String processedKey=_name.concat(key);
  try {
    Future<Object> future=null;
    try {
      future=memcachedClient.asyncGet(processedKey);
    }
 catch (    IllegalArgumentException iae) {
      if (_log.isWarnEnabled()) {
        _log.warn("Error retrieving with key " + key,iae);
      }
    }
    Object value=null;
    try {
      value=future.get(_timeout,_timeoutTimeUnit);
    }
 catch (    Exception e) {
      future.cancel(true);
    }
    return (V)value;
  }
  finally {
    cleanupClient(memcachedClient);
  }
}

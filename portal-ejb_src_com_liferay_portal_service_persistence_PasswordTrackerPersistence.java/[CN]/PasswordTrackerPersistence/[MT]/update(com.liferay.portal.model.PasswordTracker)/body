{
  Session session=null;
  try {
    if (passwordTracker.isNew() || passwordTracker.isModified()) {
      session=openSession();
      if (passwordTracker.isNew()) {
        PasswordTrackerHBM passwordTrackerHBM=new PasswordTrackerHBM();
        passwordTrackerHBM.setPasswordTrackerId(passwordTracker.getPasswordTrackerId());
        passwordTrackerHBM.setUserId(passwordTracker.getUserId());
        passwordTrackerHBM.setCreateDate(passwordTracker.getCreateDate());
        passwordTrackerHBM.setPassword(passwordTracker.getPassword());
        session.save(passwordTrackerHBM);
        session.flush();
      }
 else {
        PasswordTrackerHBM passwordTrackerHBM=(PasswordTrackerHBM)session.get(PasswordTrackerHBM.class,passwordTracker.getPrimaryKey());
        if (passwordTrackerHBM != null) {
          passwordTrackerHBM.setUserId(passwordTracker.getUserId());
          passwordTrackerHBM.setCreateDate(passwordTracker.getCreateDate());
          passwordTrackerHBM.setPassword(passwordTracker.getPassword());
          session.flush();
        }
 else {
          passwordTrackerHBM=new PasswordTrackerHBM();
          passwordTrackerHBM.setPasswordTrackerId(passwordTracker.getPasswordTrackerId());
          passwordTrackerHBM.setUserId(passwordTracker.getUserId());
          passwordTrackerHBM.setCreateDate(passwordTracker.getCreateDate());
          passwordTrackerHBM.setPassword(passwordTracker.getPassword());
          session.save(passwordTrackerHBM);
          session.flush();
        }
      }
      passwordTracker.setNew(false);
      passwordTracker.setModified(false);
    }
    return passwordTracker;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

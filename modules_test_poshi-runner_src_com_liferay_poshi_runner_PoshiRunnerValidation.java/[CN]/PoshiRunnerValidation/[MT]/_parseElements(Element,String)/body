{
  List<Element> childElements=element.elements();
  List<String> possibleElementNames=Arrays.asList("description","echo","execute","fail","for","if","property","take-screenshot","task","var","while");
  for (  Element childElement : childElements) {
    String elementName=childElement.getName();
    if (!possibleElementNames.contains(elementName)) {
      _exceptions.add(new Exception("Invalid " + elementName + " element\n"+ filePath+ ":"+ childElement.attributeValue("line-number")));
    }
    if (elementName.equals("description") || elementName.equals("echo") || elementName.equals("fail")) {
      _validateMessageElement(childElement,filePath);
    }
 else     if (elementName.equals("execute")) {
      _validateExecuteElement(childElement,filePath);
    }
 else     if (elementName.equals("for")) {
      _validateForElement(childElement,filePath);
    }
 else     if (elementName.equals("if")) {
      _validateIfElement(childElement,filePath);
    }
 else     if (elementName.equals("property")) {
      _validatePropertyElement(childElement,filePath);
    }
 else     if (elementName.equals("take-screenshot")) {
      _validateTakeScreenshotElement(childElement,filePath);
    }
 else     if (elementName.equals("task")) {
      _validateTaskElement(childElement,filePath);
    }
 else     if (elementName.equals("var")) {
      _validateVarElement(childElement,filePath);
    }
 else     if (elementName.equals("while")) {
      _validateWhileElement(childElement,filePath);
    }
  }
}

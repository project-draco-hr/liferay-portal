{
  List<String> primaryAttributeNames=Arrays.asList("function","macro","macro-desktop","macro-mobile","selenium","test-case");
  String primaryAttributeName=_getPrimaryAttributeName(element,primaryAttributeNames,filePath);
  if (primaryAttributeName.equals("function")) {
    List<String> possibleAttributeNames=Arrays.asList("function","line-number","locator1","locator2","value1","value2");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    _validateFunctionContext(element,filePath);
  }
 else   if (primaryAttributeName.equals("macro")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    _validateMacroContext(element,"macro",filePath);
  }
 else   if (primaryAttributeName.equals("macro-desktop")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro-desktop","macro-mobile");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    _validateMacroContext(element,"macro-desktop",filePath);
  }
 else   if (primaryAttributeName.equals("macro-mobile")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro-desktop","macro-mobile");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    _validateMacroContext(element,"macro-mobile",filePath);
  }
 else   if (primaryAttributeName.equals("selenium")) {
    List<String> possibleAttributeNames=Arrays.asList("argument1","argument2","line-number","selenium");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
  }
 else   if (primaryAttributeName.equals("test-case")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","test-case");
    _validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
  }
  List<Element> childElements=element.elements();
  if (!childElements.isEmpty()) {
    primaryAttributeNames=Arrays.asList("function","macro","macro-desktop","macro-mobile");
    _validateHasPrimaryAttributeName(element,primaryAttributeNames,filePath);
    for (    Element childElement : childElements) {
      if (StringUtils.equals(childElement.getName(),"var")) {
        _validateVarElement(childElement,filePath);
        continue;
      }
 else {
        _logExceptions.add(new Exception("Invalid child element\n" + filePath + ":"+ element.attributeValue("line-number")));
      }
    }
  }
}

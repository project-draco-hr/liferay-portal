{
  List<String> multiplePrimaryAttributeNames=Arrays.asList("macro-desktop","macro-mobile");
  List<String> primaryAttributeNames=Arrays.asList("function","macro","macro-desktop","macro-mobile","selenium","test-case");
  if (filePath.endsWith(".function")) {
    multiplePrimaryAttributeNames=null;
    primaryAttributeNames=Arrays.asList("function","selenium");
  }
  String primaryAttributeName=getPrimaryAttributeName(element,multiplePrimaryAttributeNames,primaryAttributeNames,filePath);
  if (primaryAttributeName == null) {
    return;
  }
  if (primaryAttributeName.equals("function")) {
    List<String> possibleAttributeNames=Arrays.asList("function","line-number","locator1","locator2","value1","value2");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    validateFunctionContext(element,filePath);
  }
 else   if (primaryAttributeName.equals("macro")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    validateMacroContext(element,"macro",filePath);
  }
 else   if (primaryAttributeName.equals("macro-desktop")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro-desktop","macro-mobile");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    validateMacroContext(element,"macro-desktop",filePath);
  }
 else   if (primaryAttributeName.equals("macro-mobile")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","macro-desktop","macro-mobile");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    validateMacroContext(element,"macro-mobile",filePath);
  }
 else   if (primaryAttributeName.equals("selenium")) {
    List<String> possibleAttributeNames=Arrays.asList("argument1","argument2","line-number","selenium");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
  }
 else   if (primaryAttributeName.equals("test-case")) {
    List<String> possibleAttributeNames=Arrays.asList("line-number","test-case");
    validatePossibleAttributeNames(element,possibleAttributeNames,filePath);
    validateTestCaseContext(element,filePath);
  }
  List<Element> childElements=element.elements();
  if (!childElements.isEmpty()) {
    primaryAttributeNames=Arrays.asList("function","macro","macro-desktop","macro-mobile","test-case");
    validateHasPrimaryAttributeName(element,multiplePrimaryAttributeNames,primaryAttributeNames,filePath);
    for (    Element childElement : childElements) {
      if (Validator.equals(childElement.getName(),"var")) {
        validateVarElement(childElement,filePath);
        continue;
      }
 else {
        _exceptions.add(new Exception("Invalid child element\n" + filePath + ":"+ element.attributeValue("line-number")));
      }
    }
  }
}

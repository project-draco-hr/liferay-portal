{
  String rootElementName=element.getName();
  if (!StringUtils.equals(rootElementName,"html")) {
    _exceptions.add(new Exception("Invalid " + rootElementName + " element\n"+ filePath+ ":"+ element.attributeValue("line-number")));
  }
  _validateHasChildElements(element,filePath);
  List<Element> childElements=element.elements();
  String className=PoshiRunnerGetterUtil.getClassNameFromFilePath(filePath);
  for (  Element childElement : childElements) {
    if (StringUtils.equals(childElement.getName(),"body")) {
      _validateHasChildElements(childElement,filePath);
      Element tableElement=childElement.element("table");
      if (Validator.isNull(tableElement)) {
        throw new Exception("Missing table element" + filePath + ":"+ childElement.attributeValue("line-number"));
      }
      List<String> requiredTableAttributes=Arrays.asList("border","cellpadding","cellspacing","line-number");
      _validateHasChildElements(tableElement,filePath);
      _validateRequiredAttributeNames(tableElement,requiredTableAttributes,filePath);
      Element tBodyElement=tableElement.element("tbody");
      if (!className.equals("BaseLiferay")) {
        _validateHasChildElements(tBodyElement,filePath);
      }
      List<Element> trElements=tBodyElement.elements("tr");
      for (      Element trElement : trElements) {
        List<Element> tdElements=trElement.elements();
        if (tdElements.size() != 3) {
          throw new Exception("tr elements must have 3 child td elements\n" + filePath + ":"+ trElement.attributeValue("line-number"));
        }
        Element locatorElement=tdElements.get(1);
        Element locatorKeyElement=tdElements.get(0);
        String locator=locatorElement.getText();
        String locatorKey=locatorKeyElement.getText();
        if (Validator.isNull(locator) && Validator.isNull(locatorKey)) {
          continue;
        }
 else         if (Validator.isNotNull(locator) && Validator.isNotNull(locatorKey)) {
          continue;
        }
        throw new Exception("Missing locator\n" + filePath + ":"+ trElement.attributeValue("line-number"));
      }
      Element theadElement=tableElement.element("thead");
      _validateHasChildElements(theadElement,filePath);
      List<Element> theadChildElements=theadElement.elements();
      if (theadChildElements.size() > 1) {
        throw new Exception("Too many child elements\n" + filePath + ":"+ theadElement.attributeValue("line-number"));
      }
      Element trElement=theadChildElements.get(0);
      _validateHasChildElements(trElement,filePath);
      List<Element> tdElements=trElement.elements();
      if (tdElements.size() > 1) {
        throw new Exception("Too many td child elements\n" + filePath + ":"+ trElement.attributeValue("line-number"));
      }
      Element tdElement=tdElements.get(0);
      List<String> requiredTdAttributes=Arrays.asList("colspan","rowspan");
      _validateRequiredAttributeNames(tdElement,requiredTdAttributes,filePath);
      String theadClassName=tdElement.getText();
      if (Validator.isNull(theadClassName)) {
        throw new Exception("Missing thead class name\n" + filePath + ":"+ trElement.attributeValue("line-number"));
      }
 else       if (!theadClassName.equals(className)) {
        throw new Exception("Thead class name does not match file name\n" + filePath + ":"+ trElement.attributeValue("line-number"));
      }
    }
 else     if (StringUtils.equals(childElement.getName(),"head")) {
      List<Element> headChildElements=childElement.elements();
      if (headChildElements.size() > 1) {
        throw new Exception("Too many child elements\n" + filePath + ":"+ childElement.attributeValue("line-number"));
      }
      Element titleElement=headChildElements.get(0);
      String name=titleElement.getName();
      if (!StringUtils.equals(name,"title")) {
        throw new Exception("Invalid " + name + " element\n"+ filePath+ ":"+ childElement.attributeValue("line-number"));
      }
 else       if (!StringUtils.equals(titleElement.getText(),className)) {
        throw new Exception("File name and title are different\n" + filePath + ":"+ titleElement.attributeValue("line-number"));
      }
    }
  }
}

{
  _validateHasChildElements(element,filePath);
  _validateHasNoAttributes(element,filePath);
  String fileName=filePath.substring(filePath.lastIndexOf(".") + 1);
  List<Element> childElements=element.elements();
  if (fileName.equals("function")) {
    Element firstChildElement=childElements.get(0);
    String firstChildElementName=firstChildElement.getName();
    if (!StringUtils.equals(firstChildElementName,"condition") && !StringUtils.equals(firstChildElementName,"contains")) {
      throw new Exception("Missing (condition|contains) child element\n" + filePath + ":"+ firstChildElement.attributeValue("line-number"));
    }
  }
  _validateElseElement(element,filePath);
  _validateThenElement(element,filePath);
  List<String> conditionTags=Arrays.asList("and","condition","contains","equals","isset","not","or");
  for (int i=0; i < childElements.size(); i++) {
    Element childElement=childElements.get(i);
    String childElementName=childElement.getName();
    if (conditionTags.contains(childElementName) && (i == 0)) {
      _validateConditionElement(childElement,filePath);
    }
 else     if (childElementName.equals("else")) {
      _validateHasChildElements(childElement,filePath);
      _validateHasNoAttributes(childElement,filePath);
      _parseElements(childElement,filePath);
    }
 else     if (childElementName.equals("elseif")) {
      _validateHasChildElements(childElement,filePath);
      _validateHasNoAttributes(childElement,filePath);
      _validateIfElement(childElement,filePath);
    }
 else     if (childElementName.equals("then")) {
      _validateHasChildElements(childElement,filePath);
      _validateHasNoAttributes(childElement,filePath);
      _parseElements(childElement,filePath);
    }
 else {
      throw new Exception("Invalid " + childElementName + " element\n"+ filePath+ ":"+ childElement.attributeValue("line-number"));
    }
  }
}

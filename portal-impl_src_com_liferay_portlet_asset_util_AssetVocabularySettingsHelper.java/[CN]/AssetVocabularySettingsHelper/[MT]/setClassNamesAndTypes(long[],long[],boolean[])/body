{
  Set<String> requiredClassNameIds=new LinkedHashSet<String>();
  Set<String> selectedClassNameIds=new LinkedHashSet<String>();
  for (int i=0; i < classNameIds.length; ++i) {
    long classNameId=classNameIds[i];
    long classTypePK=classTypePKs[i];
    boolean required=requireds[i];
    String classNameAndType=getClassNameAndType(classNameId,classTypePK);
    if (classNameAndType.equals(AssetCategoryConstants.ALL_CLASS_NAMES_AND_TYPES)) {
      if (required) {
        requiredClassNameIds.clear();
        requiredClassNameIds.add(classNameAndType);
      }
      selectedClassNameIds.clear();
      selectedClassNameIds.add(classNameAndType);
      break;
    }
 else {
      if (required) {
        requiredClassNameIds.add(classNameAndType);
      }
      selectedClassNameIds.add(classNameAndType);
    }
  }
  _properties.setProperty(_KEY_REQUIRED_CLASS_NAME_AND_TYPE_IDS,StringUtil.merge(requiredClassNameIds));
  _properties.setProperty(_KEY_SELECTED_CLASS_NAME_AND_TYPE_IDS,StringUtil.merge(selectedClassNameIds));
}

{
  Set<String> requiredClassNameIds=new LinkedHashSet<String>();
  Set<String> selectedClassNameIds=new LinkedHashSet<String>();
  for (int i=0; i < classNameIds.length; ++i) {
    long classNameId=classNameIds[i];
    long classTypeId=classTypeIds[i];
    boolean required=requireds[i];
    String classNameAndTypeId=getClassNameAndTypeId(classNameId,classTypeId);
    if (classNameAndTypeId.equals(AssetCategoryConstants.ALL_CLASS_NAMES_AND_TYPES_ID)) {
      if (required) {
        requiredClassNameIds.clear();
        requiredClassNameIds.add(classNameAndTypeId);
      }
      selectedClassNameIds.clear();
      selectedClassNameIds.add(classNameAndTypeId);
      break;
    }
 else {
      if (required) {
        requiredClassNameIds.add(classNameAndTypeId);
      }
      selectedClassNameIds.add(classNameAndTypeId);
    }
  }
  _properties.setProperty(_KEY_REQUIRED_CLASS_NAME_AND_TYPE_IDS,StringUtil.merge(requiredClassNameIds));
  _properties.setProperty(_KEY_SELECTED_CLASS_NAME_AND_TYPE_IDS,StringUtil.merge(selectedClassNameIds));
}

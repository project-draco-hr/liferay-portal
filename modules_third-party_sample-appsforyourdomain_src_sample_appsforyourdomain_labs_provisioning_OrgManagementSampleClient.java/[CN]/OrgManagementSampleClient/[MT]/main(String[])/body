{
  try {
    if (args.length != 4) {
      System.out.println("Usage: java OrgManagementSampleClient <admin@example.com> <adminpassword> " + "<domain> <testUserEmail>");
      System.exit(1);
    }
    String adminEmail=args[0];
    String adminPassword=args[1];
    String domain=args[2];
    String user=args[3];
    String customerId=null;
    OrgManagementSampleClient client=new OrgManagementSampleClient(adminEmail,adminPassword,domain,"org-api-sample-" + domain);
    GenericEntry entry=null;
    GenericFeed feed=null;
    entry=client.retrieveCustomerId(customerId);
    customerId=entry.getProperty("customerId");
    LOGGER.log(Level.INFO,"Retrieved Customer ID - " + customerId);
    entry=client.createOrganizationUnit(customerId,"system","/","System Organization",false);
    LOGGER.log(Level.INFO,"Created new OrgUnit - " + entry.getAllProperties());
    entry=client.retrieveOrganizationUnit(customerId,"system");
    LOGGER.log(Level.INFO,"Retrieved OrgUnit - " + entry.getAllProperties());
    List<GenericEntry> allUnits=client.retrieveAllOrganizationUnits(customerId);
    LOGGER.log(Level.INFO,"Retrieved all OrgUnits - " + allUnits.size());
    allUnits=client.retrieveChildOrganizationUnits(customerId,"/");
    LOGGER.log(Level.INFO,"Retrieved all child units  - " + allUnits.size());
    LOGGER.log(Level.INFO,"Updating OrgUnit 'system'");
    Map<OrgUnitProperty,String> attributes=new HashMap<OrgUnitProperty,String>();
    attributes.put(OrgUnitProperty.DESCRIPTION,"testchanged");
    entry=client.updateOrganizationUnit(customerId,"system",attributes);
    LOGGER.log(Level.INFO,"Updated OrgUnit description - " + entry.getAllProperties());
    client.retrieveOrganizaionUser(customerId,user);
    LOGGER.log(Level.INFO,"Retrieved OrgUser - " + entry.getAllProperties());
    entry=client.updateOrganizationUser(customerId,user,"/","system");
    LOGGER.log(Level.INFO,"Updated OrgUser - " + entry.getAllProperties());
    List<GenericEntry> allUsers=client.retrieveAllOrganizationUsers(customerId);
    LOGGER.log(Level.INFO,"Retrieved User count: " + allUsers.size());
    allUsers=client.retrieveAllOrganizationUsersByOrgUnit(customerId,"system");
    LOGGER.log(Level.INFO,"Retrieved User count: " + allUsers.size());
    LOGGER.log(Level.INFO,"OrgPath construction - " + client.createOrgPathFromOrgUnits(Arrays.asList("parent","firstChild","childOfFirstChild")));
    client.updateOrganizationUser(customerId,user,"system","/");
    client.deleteOrganizationUnit(customerId,"system");
  }
 catch (  AppsForYourDomainException e) {
    e.printStackTrace();
  }
catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
catch (  ServiceException e) {
    e.printStackTrace();
  }
}

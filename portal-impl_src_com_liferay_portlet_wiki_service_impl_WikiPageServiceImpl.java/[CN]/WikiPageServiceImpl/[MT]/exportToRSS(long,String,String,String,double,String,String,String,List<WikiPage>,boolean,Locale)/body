{
  SyndFeed syndFeed=new SyndFeedImpl();
  syndFeed.setFeedType(type + "_" + version);
  syndFeed.setTitle(name);
  syndFeed.setLink(feedURL);
  syndFeed.setDescription(description);
  List<SyndEntry> entries=new ArrayList<SyndEntry>();
  syndFeed.setEntries(entries);
  WikiPage latestPage=null;
  for (  WikiPage page : pages) {
    String author=PortalUtil.getUserName(page.getUserId(),page.getUserName());
    String link=entryURL;
    SyndEntry syndEntry=new SyndEntryImpl();
    syndEntry.setAuthor(author);
    syndEntry.setTitle(page.getTitle() + StringPool.SPACE + page.getVersion());
    syndEntry.setPublishedDate(page.getCreateDate());
    SyndContent syndContent=new SyndContentImpl();
    syndContent.setType("html");
    if (diff) {
      if (latestPage != null) {
        link+="?" + PortalUtil.getPortletNamespace(PortletKeys.WIKI) + "version="+ page.getVersion();
        String value=getPageDiff(companyId,latestPage,page,locale);
        syndContent.setValue(value);
        syndEntry.setDescription(syndContent);
        entries.add(syndEntry);
      }
    }
 else {
      String value=null;
      if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {
        value=StringUtil.shorten(HtmlUtil.stripHtml(page.getContent()),_RSS_ABSTRACT_LENGTH,StringPool.BLANK);
      }
 else       if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {
        value=StringPool.BLANK;
      }
 else {
        value=page.getContent();
      }
      syndContent.setValue(value);
      syndEntry.setDescription(syndContent);
      entries.add(syndEntry);
    }
    syndEntry.setLink(link);
    latestPage=page;
  }
  try {
    return RSSUtil.export(syndFeed);
  }
 catch (  FeedException fe) {
    throw new SystemException(fe);
  }
catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
}

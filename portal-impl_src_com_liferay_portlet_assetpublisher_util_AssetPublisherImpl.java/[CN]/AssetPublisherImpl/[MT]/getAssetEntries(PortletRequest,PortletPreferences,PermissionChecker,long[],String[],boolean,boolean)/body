{
  List<String> deletedAssetEntrieUuids=new ArrayList<String>();
  List<AssetEntry> viewableAssetEntries=new ArrayList<AssetEntry>();
  for (  String assetEntryXml : assetEntryXmls) {
    Document document=SAXReaderUtil.read(assetEntryXml);
    Element rootElement=document.getRootElement();
    String assetEntryUuid=rootElement.elementText("asset-entry-uuid");
    AssetEntry assetEntry=null;
    for (    long groupId : groupIds) {
      assetEntry=AssetEntryLocalServiceUtil.fetchEntry(groupId,assetEntryUuid);
      if (assetEntry != null) {
        break;
      }
    }
    if (!assetEntry.isVisible()) {
      continue;
    }
    if (assetEntry == null) {
      if (deleteNotDisplayableAssetEntries) {
        deletedAssetEntrieUuids.add(assetEntryUuid);
      }
 else {
        continue;
      }
    }
    AssetRendererFactory assetRendererFactory=AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(assetEntry.getClassName());
    AssetRenderer assetRenderer=assetRendererFactory.getAssetRenderer(assetEntry.getClassPK());
    if (!assetRendererFactory.isActive(permissionChecker.getCompanyId())) {
      if (deleteNotDisplayableAssetEntries) {
        deletedAssetEntrieUuids.add(assetEntryUuid);
      }
      continue;
    }
    if (checkPermission && (!assetRenderer.isDisplayable() || !assetRenderer.hasViewPermission(permissionChecker))) {
      continue;
    }
    viewableAssetEntries.add(assetEntry);
  }
  if (deleteNotDisplayableAssetEntries) {
    AssetPublisherUtil.removeAndStoreSelection(deletedAssetEntrieUuids,portletPreferences);
    if (!deletedAssetEntrieUuids.isEmpty()) {
      SessionMessages.add(portletRequest,"removedSelectedAssets",deletedAssetEntrieUuids);
    }
  }
  return viewableAssetEntries;
}

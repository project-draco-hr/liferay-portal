{
  Object[] finderArgs=new Object[]{fileId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_FILEID,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_DLSYNC_WHERE);
    if (fileId == null) {
      query.append(_FINDER_COLUMN_FILEID_FILEID_1);
    }
 else {
      if (fileId.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_FILEID_FILEID_3);
      }
 else {
        query.append(_FINDER_COLUMN_FILEID_FILEID_2);
      }
    }
    query.append(DLSyncModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (fileId != null) {
        qPos.add(fileId);
      }
      List<DLSync> list=q.list();
      result=list;
      DLSync dlSync=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_FILEID,finderArgs,list);
      }
 else {
        dlSync=list.get(0);
        cacheResult(dlSync);
        if ((dlSync.getFileId() == null) || !dlSync.getFileId().equals(fileId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_FILEID,finderArgs,dlSync);
        }
      }
      return dlSync;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_FILEID,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (DLSync)result;
    }
  }
}

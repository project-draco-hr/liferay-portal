{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  WikiNode node=(WikiNode)getParentBaseModel(group,serviceContext);
  WikiPage[] pages=WikiTestUtil.addTrashedParentPageWithTrashedRedirectPage(group.getGroupId(),node.getNodeId(),true,true);
  WikiPage parentPage=pages[0];
  WikiPage childPage=pages[1];
  WikiPage redirectPage=pages[2];
  WikiPageLocalServiceUtil.restorePageFromTrash(TestPropsValues.getUserId(),parentPage);
  parentPage=WikiPageLocalServiceUtil.getPageByPageId(parentPage.getPageId());
  childPage=WikiPageLocalServiceUtil.getPageByPageId(childPage.getPageId());
  redirectPage=WikiPageLocalServiceUtil.getPageByPageId(redirectPage.getPageId());
  Assert.assertFalse(parentPage.isInTrash());
  Assert.assertTrue(childPage.isInTrashExplicitly());
  Assert.assertEquals(childPage.getParentTitle(),parentPage.getTitle());
  Assert.assertTrue(redirectPage.isInTrashExplicitly());
  Assert.assertEquals(redirectPage.getRedirectTitle(),parentPage.getTitle());
  WikiPageLocalServiceUtil.restorePageFromTrash(TestPropsValues.getUserId(),childPage);
  childPage=WikiPageLocalServiceUtil.getPageByPageId(childPage.getPageId());
  Assert.assertFalse(childPage.isInTrash());
  Assert.assertEquals(childPage.getParentTitle(),parentPage.getTitle());
  WikiPageLocalServiceUtil.restorePageFromTrash(TestPropsValues.getUserId(),redirectPage);
  redirectPage=WikiPageLocalServiceUtil.getPageByPageId(redirectPage.getPageId());
  Assert.assertFalse(redirectPage.isInTrash());
  Assert.assertEquals(redirectPage.getRedirectTitle(),parentPage.getTitle());
}

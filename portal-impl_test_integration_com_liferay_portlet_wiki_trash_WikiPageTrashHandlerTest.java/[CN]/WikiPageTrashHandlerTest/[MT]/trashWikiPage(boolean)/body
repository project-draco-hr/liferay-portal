{
  Group group=ServiceTestUtil.addGroup();
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setScopeGroupId(group.getGroupId());
  String titleWikiNode=ServiceTestUtil.randomString();
  WikiNode wikiNode=addWikiNode(titleWikiNode,serviceContext);
  String titleWikiPage=ServiceTestUtil.randomString();
  int initialWikiPagesCount=getWikiPagesNotInTrashCount(wikiNode.getNodeId());
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  int initialWikiPagesSearchCount=searchWikiPagesCount(group.getGroupId());
  int initialTrashEntriesSearchCount=searchTrashEntriesCount(titleWikiPage,serviceContext);
  WikiPage wikiPage=addWikiPage(wikiNode.getNodeId(),titleWikiPage,serviceContext);
  int oldStatus=wikiPage.getStatus();
  Assert.assertEquals(initialWikiPagesCount + 1,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount(group.getGroupId()));
  Assert.assertTrue(isAssetEntryVisible(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
  Assert.assertEquals(initialTrashEntriesSearchCount,searchTrashEntriesCount(titleWikiPage,serviceContext));
  WikiPageServiceUtil.movePageToTrash(wikiPage.getNodeId(),wikiPage.getTitle());
  TrashEntry trashEntry=TrashEntryLocalServiceUtil.getEntry(WikiPage.class.getName(),wikiPage.getResourcePrimKey());
  Assert.assertEquals(wikiPage.getResourcePrimKey(),trashEntry.getClassPK());
  Assert.assertEquals(WorkflowConstants.STATUS_IN_TRASH,wikiPage.getStatus());
  Assert.assertEquals(initialWikiPagesCount,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount(group.getGroupId()));
  Assert.assertFalse(isAssetEntryVisible(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
  Assert.assertEquals(initialWikiPagesSearchCount,searchWikiPagesCount(group.getGroupId()));
  Assert.assertEquals(initialTrashEntriesSearchCount + 1,searchTrashEntriesCount(titleWikiPage,serviceContext));
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(wikiPage.getModelClassName());
  if (delete) {
    trashHandler.deleteTrashEntry(wikiPage.getResourcePrimKey());
    Assert.assertEquals(initialWikiPagesCount,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
    Assert.assertNull(fetchAssetEntry(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
    Assert.assertEquals(initialWikiPagesSearchCount,searchWikiPagesCount(group.getGroupId()));
    Assert.assertEquals(initialTrashEntriesSearchCount,searchTrashEntriesCount(titleWikiPage,serviceContext));
  }
 else {
    trashHandler.restoreTrashEntry(wikiPage.getResourcePrimKey());
    wikiPage=WikiPageServiceUtil.getPage(wikiPage.getNodeId(),wikiPage.getTitle());
    Assert.assertEquals(oldStatus,wikiPage.getStatus());
    Assert.assertEquals(initialWikiPagesCount + 1,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
    Assert.assertTrue(isAssetEntryVisible(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
    Assert.assertEquals(initialWikiPagesSearchCount + 1,searchWikiPagesCount(group.getGroupId()));
    Assert.assertEquals(initialTrashEntriesSearchCount,searchTrashEntriesCount(titleWikiPage,serviceContext));
    trashHandler.deleteTrashEntry(wikiPage.getResourcePrimKey());
  }
}

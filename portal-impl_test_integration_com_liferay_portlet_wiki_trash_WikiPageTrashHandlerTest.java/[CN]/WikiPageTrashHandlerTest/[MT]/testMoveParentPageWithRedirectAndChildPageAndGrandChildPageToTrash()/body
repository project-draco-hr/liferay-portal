{
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(_node);
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  WikiPage[] pages=WikiTestUtil.addMovedParentPageWithChildAndGrandChild(group.getGroupId(),_node.getNodeId());
  WikiPage parentPage=pages[0];
  WikiPage redirectPage=pages[1];
  WikiPage childPage=pages[2];
  WikiPage grandChildPage=pages[3];
  moveBaseModelToTrash(redirectPage.getPrimaryKey());
  parentPage=WikiPageLocalServiceUtil.getPageByPageId(parentPage.getPageId());
  redirectPage=WikiPageLocalServiceUtil.getPageByPageId(redirectPage.getPageId());
  childPage=WikiPageLocalServiceUtil.getPageByPageId(childPage.getPageId());
  grandChildPage=WikiPageLocalServiceUtil.getPageByPageId(grandChildPage.getPageId());
  Assert.assertFalse(parentPage.isInTrash());
  Assert.assertTrue(redirectPage.isInTrashExplicitly());
  Assert.assertEquals(parentPage.getTitle(),redirectPage.getRedirectTitle());
  Assert.assertFalse(childPage.isInTrash());
  Assert.assertEquals(parentPage.getTitle(),childPage.getParentTitle());
  Assert.assertFalse(grandChildPage.isInTrash());
  Assert.assertEquals(childPage.getTitle(),grandChildPage.getParentTitle());
  Assert.assertEquals(initialBaseModelsCount + 3,getNotInTrashBaseModelsCount(_node));
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount(group.getGroupId()));
}

{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  WikiNode node=(WikiNode)getParentBaseModel(group,serviceContext);
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(node);
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  WikiPage wikiPage=(WikiPage)addBaseModel(node,true,serviceContext);
  WikiPage childPage=addChildBaseModel(node.getNodeId(),wikiPage.getTitle(),true,serviceContext);
  addChildBaseModel(node.getNodeId(),wikiPage.getTitle(),true,serviceContext);
  addChildBaseModel(node.getNodeId(),childPage.getTitle(),true,serviceContext);
  Assert.assertEquals(initialBaseModelsCount + 4,getNotInTrashBaseModelsCount(node));
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount(group.getGroupId()));
  String newTitle=ServiceTestUtil.randomString();
  String oldTitle=wikiPage.getTitle();
  WikiPageLocalServiceUtil.movePage(TestPropsValues.getUserId(),node.getNodeId(),wikiPage.getTitle(),newTitle,serviceContext);
  Assert.assertEquals(initialBaseModelsCount + 5,getNotInTrashBaseModelsCount(node));
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount(group.getGroupId()));
  WikiPage oldWikiPage=WikiPageLocalServiceUtil.getPage(node.getNodeId(),oldTitle);
  moveBaseModelToTrash(wikiPage.getPrimaryKey());
  Assert.assertEquals(initialBaseModelsCount,getNotInTrashBaseModelsCount(node));
  Assert.assertEquals(initialTrashEntriesCount + 5,getTrashEntriesCount(group.getGroupId()));
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  trashHandler.restoreTrashEntry(TestPropsValues.getUserId(),getTrashEntryClassPK(oldWikiPage));
  Assert.assertEquals(initialBaseModelsCount + 1,getNotInTrashBaseModelsCount(node));
  Assert.assertEquals(initialTrashEntriesCount + 4,getTrashEntriesCount(group.getGroupId()));
  oldWikiPage=(WikiPage)getBaseModel(oldWikiPage.getPrimaryKey());
  Assert.assertEquals(oldWikiPage.getRedirectTitle(),StringPool.BLANK);
}

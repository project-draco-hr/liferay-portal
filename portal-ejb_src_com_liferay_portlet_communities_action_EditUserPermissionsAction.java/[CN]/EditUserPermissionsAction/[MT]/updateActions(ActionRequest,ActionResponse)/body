{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  String groupId=ParamUtil.getString(req,"groupId");
  String portletResource=ParamUtil.getString(req,"portletResource");
  String modelResource=ParamUtil.getString(req,"modelResource");
  Resource resource=null;
  String selResource=modelResource;
  if (Validator.isNull(modelResource)) {
    selResource=portletResource;
  }
  resource=ResourceLocalServiceUtil.addResource(themeDisplay.getCompanyId(),selResource,Resource.TYPE_CLASS,Resource.SCOPE_GROUP,groupId);
  List actionIds=new ArrayList();
  List actions=ResourceActionsUtil.getResourceActions(themeDisplay.getCompanyId(),portletResource,modelResource);
  Collections.sort(actions,new ActionComparator(themeDisplay.getCompanyId(),themeDisplay.getLocale()));
  for (int i=0; i < actions.size(); i++) {
    String actionId=(String)actions.get(i);
    String action=ParamUtil.getString(req,"action" + actionId);
    if (!action.equals("")) {
      actionIds.add(actionId);
    }
  }
  String redirect=ParamUtil.getString(req,"redirect");
  String assignmentType=ParamUtil.getString(req,"assignmentType");
  if (actionIds.size() == 0) {
    redirect+="&actionPos=-1";
  }
 else {
    redirect+="&actionPos=0&actionIds=" + StringUtil.merge(actionIds);
  }
  redirect+="&assignmentType=" + assignmentType + "&resourceId="+ resource.getResourceId();
  res.sendRedirect(redirect);
}

{
  Map<Long,FabricWorker<?>> fabricWorkers=NettyChannelAttributes.getFabricWorkers(channel);
  if (fabricWorkers == null) {
    return;
  }
  for (  Map.Entry<Long,FabricWorker<?>> entry : fabricWorkers.entrySet()) {
    FabricWorker<?> fabricWorker=entry.getValue();
    fabricWorker.write(_runtimeExitProcessCallable);
    NoticeableFuture<?> noticeableFuture=fabricWorker.getProcessNoticeableFuture();
    try {
      try {
        noticeableFuture.get(_nettyFabricClientConfig.getExecutionTimeout(),TimeUnit.MILLISECONDS);
      }
 catch (      TimeoutException te) {
        fabricWorker.write(_runtimeHaltProcessCallable);
        noticeableFuture.get(_nettyFabricClientConfig.getExecutionTimeout(),TimeUnit.MILLISECONDS);
      }
    }
 catch (    Throwable t) {
      if (t instanceof ExecutionException) {
        Throwable cause=t.getCause();
        if (cause instanceof TerminationProcessException) {
          TerminationProcessException tpe=(TerminationProcessException)cause;
          if (_log.isWarnEnabled()) {
            _log.warn("Forcibly terminate fabric worker: " + entry.getKey() + ", with exit code :"+ tpe.getExitCode());
          }
          continue;
        }
      }
      _log.error("Unable to terminate fabric worker: " + entry.getKey(),t);
    }
  }
}

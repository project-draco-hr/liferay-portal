{
  Path repositoryPath=_nettyFabricClientConfig.getRepositoryPath();
  Files.createDirectories(repositoryPath);
  Repository<Channel> repository=new NettyRepository(repositoryPath,_nettyFabricClientConfig.getRepositoryGetFileTimeout());
  Attribute<Repository<Channel>> attribute=socketChannel.attr(_repositoryAttributeKey);
  attribute.set(repository);
  ChannelPipeline channelPipeline=socketChannel.pipeline();
  channelPipeline.addLast(AnnotatedObjectEncoder.NAME,AnnotatedObjectEncoder.INSTANCE);
  channelPipeline.addLast(AnnotatedObjectDecoder.NAME,new AnnotatedObjectDecoder());
  channelPipeline.addLast(getEventExecutorGroup(socketChannel,_fileServerEventExecutorGroupAttributeKey),FileRequestChannelHandler.NAME,new FileRequestChannelHandler(_nettyFabricClientConfig.getFileServerFolderCompressionLevel()));
  channelPipeline.addLast(new FileResponseChannelHandler(repository.getAsyncBroker(),getEventExecutorGroup(_channel,_fileServerEventExecutorGroupAttributeKey)));
  channelPipeline.addLast(getEventExecutorGroup(socketChannel,_rpcEventExecutorGroupAttributeKey),NettyRPCChannelHandler.NAME,NettyRPCChannelHandler.INSTANCE);
  channelPipeline.addLast(getEventExecutorGroup(_channel,_executionEventExecutorGroupAttributeKey),new NettyFabricWorkerExecutionChannelHandler(repository,new LocalFabricAgent(_processExecutor),_nettyFabricClientConfig.getExecutionTimeout()));
}

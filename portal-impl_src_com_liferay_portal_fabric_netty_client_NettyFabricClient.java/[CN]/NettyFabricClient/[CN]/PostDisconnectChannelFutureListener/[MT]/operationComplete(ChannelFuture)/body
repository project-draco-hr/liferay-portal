{
  terminateFabricWorkers(_channel);
  repository.dispose(true);
  EventLoopGroup eventLoopGroup=_bootstrap.group();
  if (_reconnectCounter.getAndDecrement() > 0) {
    eventLoopGroup.schedule(new Runnable(){
      @Override public void run(){
        doConnect();
      }
    }
,_nettyFabricClientConfig.getReconnectInterval(),TimeUnit.MILLISECONDS);
    if (_log.isInfoEnabled()) {
      _log.info("Try to reconnect " + _nettyFabricClientConfig.getReconnectInterval() + "ms later");
    }
  }
 else {
    if (_log.isInfoEnabled()) {
      _log.info("Shutting down Netty fabric client on " + _channel);
    }
    Future<?> future=eventLoopGroup.shutdownGracefully(_nettyFabricClientConfig.getShutdownQuietPeriod(),_nettyFabricClientConfig.getShutdownTimeout(),TimeUnit.MILLISECONDS);
    future.addListener(new PostShutdownChannelFutureListener());
  }
}

{
  terminateFabricWorkers(_channel);
  disposeRepository(_channel);
  EventLoopGroup eventLoopGroup=_bootstrap.group();
  if (_reconnectCounter.getAndDecrement() > 0) {
    eventLoopGroup.schedule(new Runnable(){
      @Override public void run(){
        doConnect();
      }
    }
,_nettyFabricClientConfig.getReconnectInterval(),TimeUnit.MILLISECONDS);
    if (_log.isInfoEnabled()) {
      _log.info("Try to reconnect " + _nettyFabricClientConfig.getReconnectInterval() + "ms later");
    }
  }
 else {
    if (_log.isInfoEnabled()) {
      _log.info("Shutting down Netty fabric client on " + _channel);
    }
    try {
      eventLoopGroup.shutdownGracefully();
      shutdownEventExecutorGroup(_channel,_executionEventExecutorGroupAttributeKey);
      shutdownEventExecutorGroup(_channel,_fileServerEventExecutorGroupAttributeKey);
      shutdownEventExecutorGroup(_channel,_rpcEventExecutorGroupAttributeKey);
      _channel=null;
      _bootstrap=null;
    }
  finally {
      _nettyFabricClientShutdownCallback.shutdown();
      Runtime runtime=Runtime.getRuntime();
      runtime.removeShutdownHook(_shutdownThread);
    }
  }
}

{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return AccountLocalServiceUtil.addAccount((com.liferay.mail.model.Account)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return AccountLocalServiceUtil.createAccount(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return AccountLocalServiceUtil.deleteAccount(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return AccountLocalServiceUtil.deleteAccount((com.liferay.mail.model.Account)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return AccountLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return AccountLocalServiceUtil.fetchAccount(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return AccountLocalServiceUtil.getAccount(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return AccountLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return AccountLocalServiceUtil.getIndexableActionableDynamicQuery();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return AccountLocalServiceUtil.deletePersistedModel((com.liferay.portal.kernel.model.PersistedModel)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return AccountLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return AccountLocalServiceUtil.getAccounts(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return AccountLocalServiceUtil.getAccountsCount();
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return AccountLocalServiceUtil.updateAccount((com.liferay.mail.model.Account)arguments[0]);
  }
  if (_methodName50.equals(name) && Arrays.deepEquals(_methodParameterTypes50,parameterTypes)) {
    return AccountLocalServiceUtil.getOSGiServiceIdentifier();
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    return AccountLocalServiceUtil.addAccount(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],((Integer)arguments[5]).intValue(),((Boolean)arguments[6]).booleanValue(),(java.lang.String)arguments[7],((Integer)arguments[8]).intValue(),((Boolean)arguments[9]).booleanValue(),(java.lang.String)arguments[10],(java.lang.String)arguments[11],((Boolean)arguments[12]).booleanValue(),(java.lang.String)arguments[13],((Boolean)arguments[14]).booleanValue(),(java.lang.String)arguments[15],((Long)arguments[16]).longValue(),((Long)arguments[17]).longValue(),((Long)arguments[18]).longValue(),((Long)arguments[19]).longValue(),((Boolean)arguments[20]).booleanValue());
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    return AccountLocalServiceUtil.deleteAccount((com.liferay.mail.model.Account)arguments[0]);
  }
  if (_methodName57.equals(name) && Arrays.deepEquals(_methodParameterTypes57,parameterTypes)) {
    return AccountLocalServiceUtil.deleteAccount(((Long)arguments[0]).longValue());
  }
  if (_methodName58.equals(name) && Arrays.deepEquals(_methodParameterTypes58,parameterTypes)) {
    AccountLocalServiceUtil.deleteAccounts(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return AccountLocalServiceUtil.getAccount(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1]);
  }
  if (_methodName60.equals(name) && Arrays.deepEquals(_methodParameterTypes60,parameterTypes)) {
    return AccountLocalServiceUtil.getAccounts(((Long)arguments[0]).longValue());
  }
  if (_methodName61.equals(name) && Arrays.deepEquals(_methodParameterTypes61,parameterTypes)) {
    return AccountLocalServiceUtil.updateAccount(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],(java.lang.String)arguments[2],((Boolean)arguments[3]).booleanValue(),(java.lang.String)arguments[4],((Boolean)arguments[5]).booleanValue(),(java.lang.String)arguments[6],((Boolean)arguments[7]).booleanValue());
  }
  if (_methodName62.equals(name) && Arrays.deepEquals(_methodParameterTypes62,parameterTypes)) {
    return AccountLocalServiceUtil.updateFolders(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Long)arguments[3]).longValue(),((Long)arguments[4]).longValue());
  }
  throw new UnsupportedOperationException();
}

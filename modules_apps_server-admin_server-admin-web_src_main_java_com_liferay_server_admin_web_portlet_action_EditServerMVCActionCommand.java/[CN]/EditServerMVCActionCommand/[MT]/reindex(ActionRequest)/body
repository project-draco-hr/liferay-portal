{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Map<String,Serializable> taskContextMap=new HashMap<>();
  String className=ParamUtil.getString(actionRequest,"className");
  taskContextMap.put("className",className);
  taskContextMap.put("companyIds",PortalInstances.getCompanyIds());
  String taskExecutorClassName=_CLASS_NAME_REINDEX_PORTAL_BACKGROUND_TASK_EXECUTOR;
  if (Validator.isNotNull(className)) {
    taskExecutorClassName=_CLASS_NAME_REINDEX_SINGLE_INDEXER_BACKGROUND_TASK_EXECUTOR;
  }
  if (!ParamUtil.getBoolean(actionRequest,"blocking")) {
    BackgroundTaskManagerUtil.addBackgroundTask(themeDisplay.getUserId(),CompanyConstants.SYSTEM,"reindex",taskExecutorClassName,taskContextMap,new ServiceContext());
    return;
  }
  final String uuid=PortalUUIDUtil.generate();
  taskContextMap.put("uuid",uuid);
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  MessageListener messageListener=new MessageListener(){
    @Override public void receive(    Message message) throws MessageListenerException {
      try {
        BackgroundTask backgroundTask=BackgroundTaskManagerUtil.getBackgroundTask(message.getLong("backgroundTaskId"));
        Map<String,Serializable> taskContextMap=backgroundTask.getTaskContextMap();
        if (!uuid.equals(taskContextMap.get("uuid"))) {
          return;
        }
      }
 catch (      PortalException pe) {
        throw new MessageListenerException(pe);
      }
      int status=message.getInteger("status");
      if ((status == BackgroundTaskConstants.STATUS_CANCELLED) || (status == BackgroundTaskConstants.STATUS_FAILED) || (status == BackgroundTaskConstants.STATUS_SUCCESSFUL)) {
        PortletSession portletSession=actionRequest.getPortletSession();
        long lastAccessedTime=portletSession.getLastAccessedTime();
        int maxInactiveInterval=portletSession.getMaxInactiveInterval();
        int extendedMaxInactiveIntervalTime=(int)(System.currentTimeMillis() - lastAccessedTime + maxInactiveInterval);
        portletSession.setMaxInactiveInterval(extendedMaxInactiveIntervalTime);
        countDownLatch.countDown();
      }
    }
  }
;
  MessageBusUtil.registerMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,messageListener);
  try {
    BackgroundTaskManagerUtil.addBackgroundTask(themeDisplay.getUserId(),CompanyConstants.SYSTEM,"reindex",taskExecutorClassName,taskContextMap,new ServiceContext());
    countDownLatch.await(ParamUtil.getLong(actionRequest,"timeout",Time.HOUR),TimeUnit.MILLISECONDS);
  }
  finally {
    MessageBusUtil.unregisterMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,messageListener);
  }
}

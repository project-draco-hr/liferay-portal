{
  int initialBaseModelsCount=WikiPageTrashHandlerTestUtil.getNotInTrashBaseModelsCount(_node);
  int initialTrashEntriesCount=TrashEntryLocalServiceUtil.getEntriesCount(_group.getGroupId());
  WikiPage[] pages=WikiTestUtil.addRenamedParentPageWithChildPageAndGrandchildPage(_group.getGroupId(),_node.getNodeId());
  WikiPage parentPage=pages[0];
  WikiPage redirectPage=pages[1];
  WikiPage childPage=pages[2];
  WikiPage grandchildPage=pages[3];
  WikiPageTrashHandlerTestUtil.moveBaseModelToTrash(redirectPage.getPrimaryKey());
  parentPage=WikiPageLocalServiceUtil.getPageByPageId(parentPage.getPageId());
  redirectPage=WikiPageLocalServiceUtil.getPageByPageId(redirectPage.getPageId());
  childPage=WikiPageLocalServiceUtil.getPageByPageId(childPage.getPageId());
  grandchildPage=WikiPageLocalServiceUtil.getPageByPageId(grandchildPage.getPageId());
  Assert.assertFalse(parentPage.isInTrash());
  Assert.assertTrue(redirectPage.isInTrashExplicitly());
  Assert.assertEquals(parentPage.getTitle(),redirectPage.getRedirectTitle());
  Assert.assertFalse(childPage.isInTrash());
  Assert.assertEquals(parentPage.getTitle(),childPage.getParentTitle());
  Assert.assertFalse(grandchildPage.isInTrash());
  Assert.assertEquals(childPage.getTitle(),grandchildPage.getParentTitle());
  Assert.assertEquals(initialBaseModelsCount + 3,WikiPageTrashHandlerTestUtil.getNotInTrashBaseModelsCount(_node));
  Assert.assertEquals(initialTrashEntriesCount + 1,TrashEntryLocalServiceUtil.getEntriesCount(_group.getGroupId()));
}

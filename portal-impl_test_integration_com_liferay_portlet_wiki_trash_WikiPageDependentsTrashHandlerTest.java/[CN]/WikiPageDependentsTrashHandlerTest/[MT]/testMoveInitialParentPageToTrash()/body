{
  int initialBaseModelsCount=WikiPageTrashHandlerTestUtil.getNotInTrashBaseModelsCount(_node);
  int initialTrashEntriesCount=TrashEntryLocalServiceUtil.getEntriesCount(_group.getGroupId());
  RelatedPages relatedPages=buildRelatedPages();
  WikiPage initialParentPage=relatedPages.getParentPage();
  WikiPage page=relatedPages.getPage();
  WikiPage newParentPage=WikiTestUtil.addPage(TestPropsValues.getUserId(),_group.getGroupId(),_node.getNodeId(),RandomTestUtil.randomString(),true);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId());
  WikiPageLocalServiceUtil.changeParent(TestPropsValues.getUserId(),_node.getNodeId(),page.getTitle(),newParentPage.getTitle(),serviceContext);
  movePageToTrash(initialParentPage);
  newParentPage=WikiPageLocalServiceUtil.getPage(newParentPage.getResourcePrimKey());
  page=WikiPageLocalServiceUtil.getPage(relatedPages.getPageResourcePrimKey());
  Assert.assertFalse(page.isInTrash());
  Assert.assertFalse(newParentPage.isInTrash());
  Assert.assertTrue(initialParentPage.isInTrashExplicitly());
  Assert.assertEquals(page.getParentTitle(),newParentPage.getTitle());
  Assert.assertEquals(newParentPage.getTitle(),page.getParentTitle());
  Assert.assertEquals(initialBaseModelsCount + 2,WikiPageTrashHandlerTestUtil.getNotInTrashBaseModelsCount(_node));
  Assert.assertEquals(initialTrashEntriesCount + 1,TrashEntryLocalServiceUtil.getEntriesCount(_group.getGroupId()));
}

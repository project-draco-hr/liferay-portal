{
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(_node);
  int initialTrashEntriesCount=getTrashEntriesCount(_group.getGroupId());
  WikiPage[] pages=WikiTestUtil.addRenamedParentPageWithChildPageAndGrandchildPage(_group.getGroupId(),_node.getNodeId());
  WikiPage parentPage=pages[0];
  WikiPage redirectPage=pages[1];
  WikiPage childPage=pages[2];
  WikiPage grandchildPage=pages[3];
  moveBaseModelToTrash(redirectPage.getPrimaryKey());
  restoreTrashEntry(redirectPage);
  parentPage=WikiPageLocalServiceUtil.getPageByPageId(parentPage.getPageId());
  redirectPage=WikiPageLocalServiceUtil.getPageByPageId(redirectPage.getPageId());
  childPage=WikiPageLocalServiceUtil.getPageByPageId(childPage.getPageId());
  grandchildPage=WikiPageLocalServiceUtil.getPageByPageId(grandchildPage.getPageId());
  Assert.assertFalse(parentPage.isInTrash());
  Assert.assertFalse(redirectPage.isInTrashExplicitly());
  Assert.assertEquals(parentPage.getTitle(),redirectPage.getRedirectTitle());
  Assert.assertFalse(childPage.isInTrash());
  Assert.assertEquals(parentPage.getTitle(),childPage.getParentTitle());
  Assert.assertFalse(grandchildPage.isInTrash());
  Assert.assertEquals(childPage.getTitle(),grandchildPage.getParentTitle());
  Assert.assertEquals(initialBaseModelsCount + 4,getNotInTrashBaseModelsCount(_node));
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount(_group.getGroupId()));
}

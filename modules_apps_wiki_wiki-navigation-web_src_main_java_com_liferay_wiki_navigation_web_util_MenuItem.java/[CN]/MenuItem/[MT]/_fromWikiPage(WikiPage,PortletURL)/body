{
  List<MenuItem> menuItems=new LinkedList<>();
  Matcher matcher=_pattern.matcher(wikiPage.getContent());
  MenuItem menuItem=null;
  while (matcher.find()) {
    String title=matcher.group(3);
    if (title != null) {
      menuItem=new MenuItem();
      menuItem.setLabel(title);
      menuItems.add(menuItem);
    }
    if (menuItem == null) {
      menuItem=new MenuItem();
      menuItem.setLabel(StringPool.BLANK);
      menuItems.add(menuItem);
    }
    String s=matcher.group(6);
    if (s != null) {
      MenuItem childMenuItem=new MenuItem();
      int index=s.indexOf(StringPool.PIPE);
      String label=null;
      String url=null;
      if (index != -1) {
        label=s.substring(index + 1);
        url=s.substring(0,index);
        if (!url.startsWith(Http.HTTP)) {
          long nodeId=wikiPage.getNodeId();
          portletURL.setParameter("title",url);
          portletURL.setParameter("nodeId",String.valueOf(nodeId));
          url=portletURL.toString();
        }
 else {
          childMenuItem.setExternalURL(true);
        }
      }
 else {
        label=s;
        url=s;
        if (!url.startsWith(Http.HTTP)) {
          long nodeId=wikiPage.getNodeId();
          portletURL.setParameter("title",url);
          portletURL.setParameter("nodeId",String.valueOf(nodeId));
          url=portletURL.toString();
        }
      }
      childMenuItem.setLabel(label);
      childMenuItem.setURL(url);
      menuItem.addChild(childMenuItem);
    }
  }
  return menuItems;
}

{
  long pk=RandomTestUtil.nextLong();
  AssetLink newAssetLink=_persistence.create(pk);
  newAssetLink.setCompanyId(RandomTestUtil.nextLong());
  newAssetLink.setUserId(RandomTestUtil.nextLong());
  newAssetLink.setUserName(RandomTestUtil.randomString());
  newAssetLink.setCreateDate(RandomTestUtil.nextDate());
  newAssetLink.setEntryId1(RandomTestUtil.nextLong());
  newAssetLink.setEntryId2(RandomTestUtil.nextLong());
  newAssetLink.setType(RandomTestUtil.nextInt());
  newAssetLink.setWeight(RandomTestUtil.nextInt());
  _assetLinks.add(_persistence.update(newAssetLink));
  AssetLink existingAssetLink=_persistence.findByPrimaryKey(newAssetLink.getPrimaryKey());
  Assert.assertEquals(existingAssetLink.getLinkId(),newAssetLink.getLinkId());
  Assert.assertEquals(existingAssetLink.getCompanyId(),newAssetLink.getCompanyId());
  Assert.assertEquals(existingAssetLink.getUserId(),newAssetLink.getUserId());
  Assert.assertEquals(existingAssetLink.getUserName(),newAssetLink.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingAssetLink.getCreateDate()),Time.getShortTimestamp(newAssetLink.getCreateDate()));
  Assert.assertEquals(existingAssetLink.getEntryId1(),newAssetLink.getEntryId1());
  Assert.assertEquals(existingAssetLink.getEntryId2(),newAssetLink.getEntryId2());
  Assert.assertEquals(existingAssetLink.getType(),newAssetLink.getType());
  Assert.assertEquals(existingAssetLink.getWeight(),newAssetLink.getWeight());
}

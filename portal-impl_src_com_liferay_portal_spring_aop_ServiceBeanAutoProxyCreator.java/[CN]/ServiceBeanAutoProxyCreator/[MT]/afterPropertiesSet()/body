{
  ServiceBeanAopCacheManagerUtil.registerServiceBeanAopCacheManager(_serviceBeanAopCacheManager);
  if (_beanMatcher == null) {
    _beanMatcher=new ServiceBeanMatcher();
  }
  ListableBeanFactory listableBeanFactory=(ListableBeanFactory)getBeanFactory();
  Map<String,ChainableMethodAdviceInjector> chainableMethodAdviceInjectors=listableBeanFactory.getBeansOfType(ChainableMethodAdviceInjector.class);
  for (  ChainableMethodAdviceInjector chainableMethodAdviceInjector : chainableMethodAdviceInjectors.values()) {
    chainableMethodAdviceInjector.inject();
  }
  if (!listableBeanFactory.containsBean(ChainableMethodAdviceInjectorCollector.BEAN_NAME)) {
    return;
  }
  ChainableMethodAdviceInjectorCollector chainableMethodAdviceInjectorCollector=(ChainableMethodAdviceInjectorCollector)listableBeanFactory.getBean(ChainableMethodAdviceInjectorCollector.BEAN_NAME);
  List<String> beanNames=chainableMethodAdviceInjectorCollector.getBeanNames();
  for (  String beanName : beanNames) {
    Object bean=listableBeanFactory.getBean(beanName);
    if (bean instanceof ChainableMethodAdviceInjector) {
      ChainableMethodAdviceInjector chainableMethodAdviceInjector=(ChainableMethodAdviceInjector)bean;
      chainableMethodAdviceInjector.inject();
    }
  }
}

{
  WebDAVStorage storage=webDAVRequest.getWebDAVStorage();
  if (!storage.isSupportsClassTwo()) {
    return HttpServletResponse.SC_METHOD_NOT_ALLOWED;
  }
  HttpServletRequest request=webDAVRequest.getHttpServletRequest();
  HttpServletResponse response=webDAVRequest.getHttpServletResponse();
  Lock lock=null;
  Status status=null;
  String lockUuid=webDAVRequest.getLockUuid();
  long timeout=WebDAVUtil.getTimeout(request);
  if (Validator.isNull(lockUuid)) {
    String owner=null;
    String xml=new String(FileUtil.getBytes(request.getInputStream()));
    if (Validator.isNotNull(xml)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Request XML\n" + XMLFormatter.toString(xml));
      }
      Document document=SAXReaderUtil.read(xml);
      Element rootElement=document.getRootElement();
      boolean exclusive=false;
      Element lockscopeElement=rootElement.element("lockscope");
      for (      Element element : lockscopeElement.elements()) {
        String name=GetterUtil.getString(element.getName());
        if (name.equals("exclusive")) {
          exclusive=true;
        }
      }
      if (!exclusive) {
        return HttpServletResponse.SC_BAD_REQUEST;
      }
      Element ownerElement=rootElement.element("owner");
      owner=ownerElement.getTextTrim();
      if (Validator.isNull(owner)) {
        List<Element> hrefElements=ownerElement.elements("href");
        for (        Element hrefElement : hrefElements) {
          owner="<D:href>" + hrefElement.getTextTrim() + "</D:href>";
        }
      }
    }
 else {
      _log.error("Empty request XML");
      return HttpServletResponse.SC_PRECONDITION_FAILED;
    }
    status=storage.lockResource(webDAVRequest,owner,timeout);
    lock=(Lock)status.getObject();
  }
 else {
    try {
      lock=storage.refreshResourceLock(webDAVRequest,lockUuid,timeout);
      status=new Status(HttpServletResponse.SC_OK);
    }
 catch (    WebDAVException wde) {
      if (wde.getCause() instanceof NoSuchLockException) {
        return HttpServletResponse.SC_PRECONDITION_FAILED;
      }
 else {
        throw wde;
      }
    }
  }
  if (lock == null) {
    return status.getCode();
  }
  long depth=WebDAVUtil.getDepth(request);
  String xml=getResponseXML(lock,depth);
  if (_log.isDebugEnabled()) {
    _log.debug("Response XML\n" + xml);
  }
  String lockToken="<" + WebDAVUtil.TOKEN_PREFIX + lock.getUuid()+ ">";
  response.setContentType(ContentTypes.TEXT_XML_UTF8);
  response.setHeader("Lock-Token",lockToken);
  response.setStatus(status.getCode());
  if (_log.isDebugEnabled()) {
    _log.debug("Returning lock token " + lockToken);
  }
  try {
    ServletResponseUtil.write(response,xml);
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e);
    }
  }
  return status.getCode();
}

{
  int initialArticlesCount=JournalArticleLocalServiceUtil.getArticlesCount(group.getGroupId());
  int initialSearchArticlesCount=getSearchArticlesCount(group.getCompanyId(),group.getGroupId());
  JournalArticle article=JournalTestUtil.addArticle(group.getGroupId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  Assert.assertEquals(1.0,article.getVersion(),0);
  article=JournalTestUtil.updateArticle(article,ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  Assert.assertEquals(1.1,article.getVersion(),0);
  Assert.assertEquals(initialArticlesCount + 2,JournalArticleLocalServiceUtil.getArticlesCount(group.getGroupId()));
  Assert.assertEquals(initialSearchArticlesCount + 1,getSearchArticlesCount(group.getCompanyId(),group.getGroupId()));
  doExportImportPortlet(PortletKeys.JOURNAL);
  Assert.assertEquals(initialArticlesCount + 2,JournalArticleLocalServiceUtil.getArticlesCount(importedGroup.getGroupId()));
  Assert.assertEquals(initialSearchArticlesCount + 1,getSearchArticlesCount(importedGroup.getCompanyId(),importedGroup.getGroupId()));
  JournalArticleServiceUtil.expireArticle(group.getGroupId(),article.getArticleId(),null,ServiceTestUtil.getServiceContext(group.getGroupId()));
  Assert.assertEquals(initialSearchArticlesCount,getSearchArticlesCount(group.getCompanyId(),group.getGroupId()));
  doExportImportPortlet(PortletKeys.JOURNAL);
  Assert.assertEquals(initialSearchArticlesCount,getSearchArticlesCount(importedGroup.getCompanyId(),importedGroup.getGroupId()));
}

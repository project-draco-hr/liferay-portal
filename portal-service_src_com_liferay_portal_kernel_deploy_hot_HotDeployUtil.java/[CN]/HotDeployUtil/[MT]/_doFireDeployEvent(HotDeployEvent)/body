{
  if (_deployedServletContextNames.contains(event.getServletContextName())) {
    return;
  }
  List<String> missingServletContextNames=new ArrayList<String>();
  Set<String> dependentServletContextNames=event.getDependentServletContextNames();
  for (  String dependentServletContextName : dependentServletContextNames) {
    if (!_deployedServletContextNames.contains(dependentServletContextName)) {
      missingServletContextNames.add(dependentServletContextName);
    }
  }
  if (missingServletContextNames.isEmpty()) {
    if (_dependentEvents.contains(event)) {
      if (_log.isInfoEnabled()) {
        _log.info("Deploy " + event.getServletContextName() + " from queue");
      }
    }
    for (    HotDeployListener listener : _listeners) {
      try {
        listener.invokeDeploy(event);
      }
 catch (      HotDeployException hde) {
        _log.error(hde,hde);
      }
    }
    _deployedServletContextNames.add(event.getServletContextName());
    _dependentEvents.remove(event);
    List<HotDeployEvent> dependentEvents=new ArrayList<HotDeployEvent>(_dependentEvents);
    for (    HotDeployEvent dependentEvent : dependentEvents) {
      _doFireDeployEvent(dependentEvent);
    }
  }
 else {
    if (!_dependentEvents.contains(event)) {
      if (_log.isInfoEnabled()) {
        Collections.sort(missingServletContextNames);
        StringBuilder sb=new StringBuilder();
        sb.append("Queue ");
        sb.append(event.getServletContextName());
        sb.append(" for deploy because it is missing ");
        sb.append(StringUtil.merge(missingServletContextNames,", "));
        _log.info(sb.toString());
      }
      _dependentEvents.add(event);
    }
  }
}

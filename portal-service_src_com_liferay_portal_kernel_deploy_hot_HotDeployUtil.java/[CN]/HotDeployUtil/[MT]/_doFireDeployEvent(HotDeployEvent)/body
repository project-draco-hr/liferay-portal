{
  if (!_checkMissingDependencies(event)) {
    if (_dependentEvents.contains(event)) {
      if (_log.isInfoEnabled()) {
        _log.info("Deploying " + event.getServletContextName() + " from queue");
      }
    }
    String servletContextName=event.getServletContextName();
synchronized (_dependentServletContexts) {
      _initDependentServletContextListeners(servletContextName);
      _dependentServletContexts.remove(servletContextName);
    }
    for (    HotDeployListener listener : _listeners) {
      try {
        listener.invokeDeploy(event);
      }
 catch (      HotDeployException hde) {
        Throwable cause=hde.getCause();
        if (cause instanceof LiferayPackageHotDeployException) {
          _log.error(hde.getMessage() + ". " + cause.getMessage());
        }
 else {
          _log.error(hde,hde);
        }
      }
    }
    _deployedServletContextNames.add(servletContextName);
    _dependentEvents.remove(event);
    List<HotDeployEvent> dependentEvents=new ArrayList<HotDeployEvent>(_dependentEvents);
    for (    HotDeployEvent dependentEvent : dependentEvents) {
      _doFireDeployEvent(dependentEvent);
    }
  }
 else {
    if (!_dependentEvents.contains(event)) {
      if (_log.isInfoEnabled()) {
        StringBuilder sb=new StringBuilder();
        sb.append("Queueing ");
        sb.append(event.getServletContextName());
        sb.append(" for deploy because it is missing ");
        sb.append(_getRequiredServletContextNames(event));
        _log.info(sb.toString());
      }
      _dependentEvents.add(event);
    }
 else {
      if (_log.isInfoEnabled()) {
        for (        HotDeployEvent dependentEvent : _dependentEvents) {
          StringBuilder sb=new StringBuilder();
          sb.append(dependentEvent.getServletContextName());
          sb.append(" is still in queue because it is missing ");
          sb.append(_getRequiredServletContextNames(dependentEvent));
          _log.info(sb.toString());
        }
      }
    }
  }
}

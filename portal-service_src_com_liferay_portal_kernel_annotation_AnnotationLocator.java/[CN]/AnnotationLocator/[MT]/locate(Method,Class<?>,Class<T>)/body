{
  Queue<Class<?>> queue=new LinkedList<>();
  if (targetClass == null) {
    queue.offer(method.getDeclaringClass());
  }
 else {
    queue.offer(targetClass);
  }
  Class<?> clazz=null;
  while ((clazz=queue.poll()) != null) {
    T annotation=null;
    try {
      Method specificMethod=clazz.getDeclaredMethod(method.getName(),method.getParameterTypes());
      annotation=specificMethod.getAnnotation(annotationClass);
      if (annotation != null) {
        return annotation;
      }
    }
 catch (    Exception e) {
    }
    try {
      clazz.getMethod(method.getName(),method.getParameterTypes());
      annotation=clazz.getAnnotation(annotationClass);
    }
 catch (    Exception e) {
    }
    if (annotation == null) {
      _queueSuperTypes(queue,clazz);
    }
 else {
      return annotation;
    }
  }
  return null;
}

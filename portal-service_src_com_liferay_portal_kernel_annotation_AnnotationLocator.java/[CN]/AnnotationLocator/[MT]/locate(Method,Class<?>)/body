{
  Queue<Class<?>> queue=new LinkedList<Class<?>>();
  if (targetClass == null) {
    queue.offer(method.getDeclaringClass());
  }
 else {
    queue.offer(targetClass);
  }
  ArrayList<Annotation> annotationList=new ArrayList<Annotation>();
  Class<?> clazz=null;
  while ((clazz=queue.poll()) != null) {
    try {
      Method specificMethod=clazz.getDeclaredMethod(method.getName(),method.getParameterTypes());
      Annotation[] annotations=specificMethod.getAnnotations();
      _mergeAnnotations(annotations,annotationList);
    }
 catch (    Exception e) {
    }
    try {
      clazz.getMethod(method.getName(),method.getParameterTypes());
      Annotation[] annotations=clazz.getAnnotations();
      _mergeAnnotations(annotations,annotationList);
    }
 catch (    Exception e) {
    }
    _queueSuperTypes(queue,clazz);
  }
  annotationList.trimToSize();
  return annotationList;
}

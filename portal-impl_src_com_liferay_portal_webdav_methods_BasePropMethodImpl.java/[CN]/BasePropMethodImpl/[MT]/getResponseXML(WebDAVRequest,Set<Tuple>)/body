{
  WebDAVStorage storage=webDavReq.getWebDAVStorage();
  long companyId=webDavReq.getCompanyId();
  long groupId=webDavReq.getGroupId();
  long depth=WebDAVUtil.getDepth(webDavReq.getHttpServletRequest());
  DocumentFactory docFactory=DocumentFactory.getInstance();
  Document doc=docFactory.createDocument();
  Element multistatus=docFactory.createElement(new QName("multistatus",WebDAVUtil.DAV_URI));
  doc.setRootElement(multistatus);
  if (companyId <= 0) {
    return getResponseXML(doc);
  }
  if (groupId == 0) {
    addResponse(webDavReq,new BaseResourceImpl(storage.getRootPath(),companyId,companyId),props,multistatus);
    if (props.size() > 0) {
      Iterator<Resource> itr=storage.getCommunities(webDavReq).iterator();
      while (itr.hasNext()) {
        Resource resource=itr.next();
        addResponse(webDavReq,resource,props,multistatus);
      }
    }
    return getResponseXML(doc);
  }
  Resource resource=storage.getResource(webDavReq);
  if ((resource == null) && !webDavReq.isGroupPath()) {
    String href=storage.getRootPath() + webDavReq.getPath();
    if (_log.isWarnEnabled()) {
      _log.warn("No resource found for " + webDavReq.getPath());
    }
    addResponse(href,multistatus);
    return getResponseXML(doc);
  }
  try {
    if (resource != null) {
      addResponse(storage,webDavReq,resource,props,multistatus,depth);
    }
 else     if (webDavReq.isGroupPath()) {
      Group group=GroupLocalServiceUtil.getGroup(groupId);
      resource=new BaseResourceImpl(storage.getRootPath() + StringPool.SLASH + companyId,groupId,group.getName());
      addResponse(storage,webDavReq,resource,props,multistatus,depth);
    }
  }
 catch (  NoSuchGroupException nsge) {
    String href=storage.getRootPath() + webDavReq.getPath();
    if (_log.isWarnEnabled()) {
      _log.warn("No group found for " + href);
    }
    addResponse(href,multistatus);
  }
  return getResponseXML(doc);
}

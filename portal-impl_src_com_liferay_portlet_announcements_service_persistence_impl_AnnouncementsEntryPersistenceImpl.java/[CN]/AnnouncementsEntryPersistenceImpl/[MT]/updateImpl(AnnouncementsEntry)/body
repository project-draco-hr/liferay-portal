{
  announcementsEntry=toUnwrappedModel(announcementsEntry);
  boolean isNew=announcementsEntry.isNew();
  AnnouncementsEntryModelImpl announcementsEntryModelImpl=(AnnouncementsEntryModelImpl)announcementsEntry;
  if (Validator.isNull(announcementsEntry.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    announcementsEntry.setUuid(uuid);
  }
  if (!ExportImportThreadLocal.isImportInProcess()) {
    ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
    Date now=new Date();
    if (isNew && (announcementsEntry.getCreateDate() == null)) {
      if (serviceContext == null) {
        announcementsEntry.setCreateDate(now);
      }
 else {
        announcementsEntry.setCreateDate(serviceContext.getCreateDate(now));
      }
    }
    if (!announcementsEntryModelImpl.hasSetModifiedDate()) {
      if (serviceContext == null) {
        announcementsEntry.setModifiedDate(now);
      }
 else {
        announcementsEntry.setModifiedDate(serviceContext.getModifiedDate(now));
      }
    }
  }
  long userId=GetterUtil.getLong(PrincipalThreadLocal.getName());
  if (userId > 0) {
    long companyId=announcementsEntry.getCompanyId();
    long groupId=0;
    long entryId=0;
    if (!isNew) {
      entryId=announcementsEntry.getPrimaryKey();
    }
    try {
      announcementsEntry.setContent(SanitizerUtil.sanitize(companyId,groupId,userId,AnnouncementsEntry.class.getName(),entryId,ContentTypes.TEXT_HTML,Sanitizer.MODE_ALL,announcementsEntry.getContent(),null));
    }
 catch (    SanitizerException se) {
      throw new SystemException(se);
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (announcementsEntry.isNew()) {
      session.save(announcementsEntry);
      announcementsEntry.setNew(false);
    }
 else {
      session.merge(announcementsEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AnnouncementsEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((announcementsEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{announcementsEntryModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{announcementsEntryModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((announcementsEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{announcementsEntryModelImpl.getOriginalUuid(),announcementsEntryModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{announcementsEntryModelImpl.getUuid(),announcementsEntryModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((announcementsEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{announcementsEntryModelImpl.getOriginalUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
      args=new Object[]{announcementsEntryModelImpl.getUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_USERID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_USERID,args);
    }
    if ((announcementsEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{announcementsEntryModelImpl.getOriginalClassNameId(),announcementsEntryModelImpl.getOriginalClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{announcementsEntryModelImpl.getClassNameId(),announcementsEntryModelImpl.getClassPK()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
    if ((announcementsEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{announcementsEntryModelImpl.getOriginalClassNameId(),announcementsEntryModelImpl.getOriginalClassPK(),announcementsEntryModelImpl.getOriginalAlert()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_A,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_A,args);
      args=new Object[]{announcementsEntryModelImpl.getClassNameId(),announcementsEntryModelImpl.getClassPK(),announcementsEntryModelImpl.getAlert()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_C_A,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C_A,args);
    }
  }
  EntityCacheUtil.putResult(AnnouncementsEntryModelImpl.ENTITY_CACHE_ENABLED,AnnouncementsEntryImpl.class,announcementsEntry.getPrimaryKey(),announcementsEntry,false);
  announcementsEntry.resetOriginalValues();
  return announcementsEntry;
}

{
  ProcessCallableExecutor processCallableExecutor=LocalFabricStatus.processCallableExecutor;
  final Serializable serializable=new Serializable(){
  }
;
  Future<Serializable> future=processCallableExecutor.execute(new ProcessCallable<Serializable>(){
    @Override public Serializable call(){
      return serializable;
    }
  }
);
  Assert.assertSame(serializable,future.get());
  final ProcessException processException=new ProcessException(StringPool.BLANK);
  future=processCallableExecutor.execute(new ProcessCallable<Serializable>(){
    @Override public Serializable call() throws ProcessException {
      throw processException;
    }
  }
);
  try {
    future.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(processException,ee.getCause());
  }
}

{
  PortletContextBag portletContextBag=PortletContextBagPool.get(servletContextName);
  PortletApp portletApp=portlet.getPortletApp();
  servletContext.setAttribute(PortletServlet.PORTLET_APP,portletApp);
  Map<String,String> customUserAttributes=portletApp.getCustomUserAttributes();
  for (  Map.Entry<String,String> entry : customUserAttributes.entrySet()) {
    String attrCustomClass=entry.getValue();
    Class<?> clazz=classLoader.loadClass(attrCustomClass);
    CustomUserAttributes customUserAttributesInstance=(CustomUserAttributes)clazz.newInstance();
    portletContextBag.getCustomUserAttributes().put(attrCustomClass,customUserAttributesInstance);
  }
  Set<PortletFilter> portletFilters=portletApp.getPortletFilters();
  for (  PortletFilter portletFilter : portletFilters) {
    javax.portlet.filter.PortletFilter portletFilterInstance=(javax.portlet.filter.PortletFilter)newInstance(classLoader,new Class<?>[]{javax.portlet.filter.ActionFilter.class,javax.portlet.filter.EventFilter.class,javax.portlet.filter.PortletFilter.class,javax.portlet.filter.RenderFilter.class,javax.portlet.filter.ResourceFilter.class},portletFilter.getFilterClass());
    portletContextBag.getPortletFilters().put(portletFilter.getFilterName(),portletFilterInstance);
  }
  InvokerPortlet invokerPortlet=PortletInstanceFactoryUtil.create(portlet,servletContext);
  invokerPortlet.setPortletFilters();
  Set<PortletURLListener> portletURLListeners=portletApp.getPortletURLListeners();
  for (  PortletURLListener portletURLListener : portletURLListeners) {
    PortletURLGenerationListener portletURLListenerInstance=(PortletURLGenerationListener)newInstance(classLoader,PortletURLGenerationListener.class,portletURLListener.getListenerClass());
    portletContextBag.getPortletURLListeners().put(portletURLListener.getListenerClass(),portletURLListenerInstance);
    PortletURLListenerFactory.create(portletURLListener);
  }
}

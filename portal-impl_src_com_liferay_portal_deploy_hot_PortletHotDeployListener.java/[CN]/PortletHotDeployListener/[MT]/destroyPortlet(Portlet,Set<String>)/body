{
  PortletApp portletApp=portlet.getPortletApp();
  Set<PortletFilter> portletFilters=portletApp.getPortletFilters();
  for (  PortletFilter portletFilter : portletFilters) {
    PortletFilterFactory.destroy(portletFilter);
  }
  Set<PortletURLListener> portletURLListeners=portletApp.getPortletURLListeners();
  for (  PortletURLListener portletURLListener : portletURLListeners) {
    PortletURLListenerFactory.destroy(portletURLListener);
  }
  List<Indexer> indexers=portlet.getIndexerInstances();
  for (  Indexer indexer : indexers) {
    IndexerRegistryUtil.unregister(indexer);
  }
  if (PropsValues.SCHEDULER_ENABLED) {
    List<SchedulerEntry> schedulerEntries=portlet.getSchedulerEntries();
    if ((schedulerEntries != null) && !schedulerEntries.isEmpty()) {
      for (      SchedulerEntry schedulerEntry : schedulerEntries) {
        SchedulerEngineUtil.unschedule(schedulerEntry,StorageType.MEMORY_CLUSTERED);
      }
    }
  }
  PollerProcessorUtil.deletePollerProcessor(portlet.getPortletId());
  POPServerUtil.deleteListener(portlet.getPopMessageListenerInstance());
  SocialActivityInterpreterLocalServiceUtil.deleteActivityInterpreter(portlet.getSocialActivityInterpreterInstance());
  SocialRequestInterpreterLocalServiceUtil.deleteRequestInterpreter(portlet.getSocialRequestInterpreterInstance());
  WebDAVUtil.deleteStorage(portlet.getWebDAVStorageInstance());
  XmlRpcServlet.unregisterMethod(portlet.getXmlRpcMethodInstance());
  List<AssetRendererFactory> assetRendererFactories=portlet.getAssetRendererFactoryInstances();
  if (assetRendererFactories != null) {
    AssetRendererFactoryRegistryUtil.unregister(assetRendererFactories);
  }
  List<WorkflowHandler> workflowHandlers=portlet.getWorkflowHandlerInstances();
  if (workflowHandlers != null) {
    WorkflowHandlerRegistryUtil.unregister(workflowHandlers);
  }
  PortletInstanceFactoryUtil.destroy(portlet);
  portletIds.add(portlet.getPortletId());
}

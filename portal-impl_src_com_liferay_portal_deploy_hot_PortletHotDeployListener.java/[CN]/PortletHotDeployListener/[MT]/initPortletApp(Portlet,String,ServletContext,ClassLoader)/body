{
  PortletConfig portletConfig=PortletConfigFactory.create(portlet,servletContext);
  PortletContext portletContext=portletConfig.getPortletContext();
  PortletContextBag portletContextBag=new PortletContextBag(servletContextName);
  PortletContextBagPool.put(servletContextName,portletContextBag);
  PortletApp portletApp=portlet.getPortletApp();
  Map<String,String> customUserAttributes=portletApp.getCustomUserAttributes();
  for (  Map.Entry<String,String> entry : customUserAttributes.entrySet()) {
    String attrCustomClass=entry.getValue();
    CustomUserAttributes customUserAttributesInstance=(CustomUserAttributes)portletClassLoader.loadClass(attrCustomClass).newInstance();
    portletContextBag.getCustomUserAttributes().put(attrCustomClass,customUserAttributesInstance);
  }
  Set<PortletFilter> portletFilters=portletApp.getPortletFilters();
  for (  PortletFilter portletFilter : portletFilters) {
    javax.portlet.filter.PortletFilter portletFilterInstance=(javax.portlet.filter.PortletFilter)newInstance(portletClassLoader,new Class<?>[]{javax.portlet.filter.ActionFilter.class,javax.portlet.filter.EventFilter.class,javax.portlet.filter.PortletFilter.class,javax.portlet.filter.RenderFilter.class,javax.portlet.filter.ResourceFilter.class},portletFilter.getFilterClass());
    portletContextBag.getPortletFilters().put(portletFilter.getFilterName(),portletFilterInstance);
    PortletFilterFactory.create(portletFilter,portletContext);
  }
  Set<PortletURLListener> portletURLListeners=portletApp.getPortletURLListeners();
  for (  PortletURLListener portletURLListener : portletURLListeners) {
    PortletURLGenerationListener portletURLListenerInstance=(PortletURLGenerationListener)newInstance(portletClassLoader,PortletURLGenerationListener.class,portletURLListener.getListenerClass());
    portletContextBag.getPortletURLListeners().put(portletURLListener.getListenerClass(),portletURLListenerInstance);
    PortletURLListenerFactory.create(portletURLListener);
  }
}

{
  ServletContext servletContext=event.getServletContext();
  String servletContextName=servletContext.getServletContextName();
  if (_log.isDebugEnabled()) {
    _log.debug("Invoking deploy for " + servletContextName);
  }
  long[] companyIds=PortalInstances.getCompanyIds();
  String[] xmls=new String[]{HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD)),HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_CUSTOM)),HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-portlet.xml")),HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/web.xml"))};
  if (xmls[0] == null) {
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Registering portlets for " + servletContextName);
  }
  List<Portlet> portlets=PortletLocalServiceUtil.initWAR(servletContextName,xmls,event.getPluginPackage());
  if (_log.isInfoEnabled()) {
    _log.info(portlets.size() + " portlets for " + servletContextName+ " are ready for registration");
  }
  ClassLoader portletClassLoader=event.getContextClassLoader();
  servletContext.setAttribute(PortletServlet.PORTLET_CLASS_LOADER,portletClassLoader);
  strutsBridges=false;
  Iterator<Portlet> portletsItr=portlets.iterator();
  while (portletsItr.hasNext()) {
    Portlet portlet=portletsItr.next();
    initPortlet(portlet,servletContext,portletClassLoader,portletsItr);
  }
  if (!strutsBridges) {
    strutsBridges=GetterUtil.getBoolean(servletContext.getInitParameter("struts-bridges-context-provider"));
  }
  if (strutsBridges) {
    servletContext.setAttribute(ServletContextProvider.STRUTS_BRIDGES_CONTEXT_PROVIDER,new LiferayServletContextProvider());
  }
  String xml=HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-display.xml"));
  PortletCategory newPortletCategory=PortletLocalServiceUtil.getWARDisplay(servletContextName,xml);
  for (int i=0; i < companyIds.length; i++) {
    long companyId=companyIds[i];
    PortletCategory portletCategory=(PortletCategory)WebAppPool.get(String.valueOf(companyId),WebKeys.PORTLET_CATEGORY);
    if (portletCategory != null) {
      portletCategory.merge(newPortletCategory);
    }
 else {
      _log.error("Unable to register portlet for company " + companyId + " because it does not exist");
    }
  }
  processPortletProperties(servletContextName,portletClassLoader);
  processServiceBuilderProperties(servletContext,portletClassLoader);
  _vars.put(servletContextName,new ObjectValuePair<long[],List<Portlet>>(companyIds,portlets));
  if (_log.isInfoEnabled()) {
    _log.info(portlets.size() + " portlets for " + servletContextName+ " registered successfully");
  }
}

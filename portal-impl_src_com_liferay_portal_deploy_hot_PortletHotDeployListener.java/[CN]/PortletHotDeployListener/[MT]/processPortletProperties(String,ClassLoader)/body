{
  Configuration portletPropertiesConfiguration=null;
  try {
    portletPropertiesConfiguration=ConfigurationFactoryUtil.getConfiguration(portletClassLoader,"portlet");
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to read portlet.properties");
    }
  }
  if (portletPropertiesConfiguration == null) {
    return;
  }
  Properties portletProperties=portletPropertiesConfiguration.getProperties();
  if (portletProperties.size() == 0) {
    return;
  }
  String languageBundleName=portletProperties.getProperty("language.bundle");
  if (Validator.isNotNull(languageBundleName)) {
    Locale[] locales=LanguageUtil.getAvailableLocales();
    for (int i=0; i < locales.length; i++) {
      ResourceBundle bundle=ResourceBundle.getBundle(languageBundleName,locales[i],portletClassLoader);
      PortletResourceBundles.put(servletContextName,LocaleUtil.toLanguageId(locales[i]),bundle);
    }
  }
  String[] resourceActionConfigs=StringUtil.split(portletProperties.getProperty("resource.actions.configs"));
  for (int i=0; i < resourceActionConfigs.length; i++) {
    ResourceActionsUtil.read(servletContextName,portletClassLoader,resourceActionConfigs[i]);
  }
}

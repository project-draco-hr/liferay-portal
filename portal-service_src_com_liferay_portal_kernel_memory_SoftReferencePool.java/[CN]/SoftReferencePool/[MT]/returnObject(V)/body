{
  if (_softReferences.size() < _maxIdleSize) {
    SoftReference<V> softReference=new SoftReference<V>(value,_referenceQueue);
    _poolAction.onReturn(value);
    _softReferences.offer(softReference);
  }
 else {
    while (_softReferences.size() > _maxIdleSize) {
      _softReferences.poll();
    }
  }
  SoftReference<? extends V> softReference=null;
  while (true) {
    softReference=(SoftReference<? extends V>)_referenceQueue.poll();
    if (softReference == null) {
      break;
    }
    _softReferences.remove(softReference);
  }
}

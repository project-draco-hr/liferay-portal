{
  if (_pool.size() < _maxIdleSize) {
    SoftReference<V> valueReference=new SoftReference<V>(value,_referenceQueue);
    _poolAction.onReturn(value);
    _pool.offer(valueReference);
  }
 else {
    while (_pool.size() > _maxIdleSize) {
      _pool.poll();
    }
  }
  SoftReference<? extends V> reference=null;
  while ((reference=(SoftReference<? extends V>)_referenceQueue.poll()) != null) {
    _pool.remove(reference);
  }
}

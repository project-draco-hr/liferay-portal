{
  long pk=RandomTestUtil.nextLong();
  PushNotificationsDevice newPushNotificationsDevice=_persistence.create(pk);
  newPushNotificationsDevice.setUserId(RandomTestUtil.nextLong());
  newPushNotificationsDevice.setCreateDate(RandomTestUtil.nextDate());
  newPushNotificationsDevice.setPlatform(RandomTestUtil.randomString());
  newPushNotificationsDevice.setToken(RandomTestUtil.randomString());
  _pushNotificationsDevices.add(_persistence.update(newPushNotificationsDevice));
  PushNotificationsDevice existingPushNotificationsDevice=_persistence.findByPrimaryKey(newPushNotificationsDevice.getPrimaryKey());
  Assert.assertEquals(existingPushNotificationsDevice.getPushNotificationsDeviceId(),newPushNotificationsDevice.getPushNotificationsDeviceId());
  Assert.assertEquals(existingPushNotificationsDevice.getUserId(),newPushNotificationsDevice.getUserId());
  Assert.assertEquals(Time.getShortTimestamp(existingPushNotificationsDevice.getCreateDate()),Time.getShortTimestamp(newPushNotificationsDevice.getCreateDate()));
  Assert.assertEquals(existingPushNotificationsDevice.getPlatform(),newPushNotificationsDevice.getPlatform());
  Assert.assertEquals(existingPushNotificationsDevice.getToken(),newPushNotificationsDevice.getToken());
}

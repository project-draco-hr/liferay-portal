{
  long pk=ServiceTestUtil.nextLong();
  UserGroup newUserGroup=_persistence.create(pk);
  newUserGroup.setCompanyId(ServiceTestUtil.nextLong());
  newUserGroup.setParentUserGroupId(ServiceTestUtil.nextLong());
  newUserGroup.setName(ServiceTestUtil.randomString());
  newUserGroup.setDescription(ServiceTestUtil.randomString());
  newUserGroup.setAddedByLDAPImport(ServiceTestUtil.randomBoolean());
  _persistence.update(newUserGroup,false);
  UserGroup existingUserGroup=_persistence.findByPrimaryKey(newUserGroup.getPrimaryKey());
  Assert.assertEquals(existingUserGroup.getUserGroupId(),newUserGroup.getUserGroupId());
  Assert.assertEquals(existingUserGroup.getCompanyId(),newUserGroup.getCompanyId());
  Assert.assertEquals(existingUserGroup.getParentUserGroupId(),newUserGroup.getParentUserGroupId());
  Assert.assertEquals(existingUserGroup.getName(),newUserGroup.getName());
  Assert.assertEquals(existingUserGroup.getDescription(),newUserGroup.getDescription());
  Assert.assertEquals(existingUserGroup.getAddedByLDAPImport(),newUserGroup.getAddedByLDAPImport());
}

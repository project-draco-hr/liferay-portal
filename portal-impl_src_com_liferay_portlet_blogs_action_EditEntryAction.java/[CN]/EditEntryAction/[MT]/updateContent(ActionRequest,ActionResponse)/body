{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long entryId=ParamUtil.getLong(actionRequest,"entryId");
  BlogsEntry entry=BlogsEntryLocalServiceUtil.getEntry(entryId);
  String content=ParamUtil.getString(actionRequest,"content");
  Calendar displayDateCal=CalendarFactoryUtil.getCalendar(themeDisplay.getTimeZone());
  displayDateCal.setTime(entry.getDisplayDate());
  int displayDateMonth=displayDateCal.get(Calendar.MONTH);
  int displayDateDay=displayDateCal.get(Calendar.DATE);
  int displayDateYear=displayDateCal.get(Calendar.YEAR);
  int displayDateHour=displayDateCal.get(Calendar.HOUR);
  int displayDateMinute=displayDateCal.get(Calendar.MINUTE);
  if (displayDateCal.get(Calendar.AM_PM) == Calendar.PM) {
    displayDateHour+=12;
  }
  ServiceContext serviceContext=ServiceContextFactory.getInstance(actionRequest);
  serviceContext.setCommand(Constants.UPDATE);
  try {
    BlogsEntryServiceUtil.updateEntry(entryId,entry.getTitle(),entry.getDescription(),content,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,entry.getAllowPingbacks(),entry.getAllowTrackbacks(),null,entry.getSmallImage(),entry.getSmallImageURL(),null,null,serviceContext);
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("success",Boolean.TRUE);
    writeJSON(actionRequest,actionResponse,jsonObject);
  }
 catch (  Exception e) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("success",Boolean.FALSE);
    jsonObject.putException(e);
    writeJSON(actionRequest,actionResponse,jsonObject);
  }
}

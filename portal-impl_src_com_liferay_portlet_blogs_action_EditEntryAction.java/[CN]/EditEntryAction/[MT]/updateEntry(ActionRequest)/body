{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  long entryId=ParamUtil.getLong(req,"entryId");
  long categoryId=ParamUtil.getLong(req,"categoryId");
  String title=ParamUtil.getString(req,"title");
  String content=ParamUtil.getString(req,"content");
  int displayDateMonth=ParamUtil.getInteger(req,"displayDateMonth");
  int displayDateDay=ParamUtil.getInteger(req,"displayDateDay");
  int displayDateYear=ParamUtil.getInteger(req,"displayDateYear");
  int displayDateHour=ParamUtil.getInteger(req,"displayDateHour");
  int displayDateMinute=ParamUtil.getInteger(req,"displayDateMinute");
  int displayDateAmPm=ParamUtil.getInteger(req,"displayDateAmPm");
  if (displayDateAmPm == Calendar.PM) {
    displayDateHour+=12;
  }
  String[] tagsEntries=StringUtil.split(ParamUtil.getString(req,"tagsEntries"));
  String[] communityPermissions=req.getParameterValues("communityPermissions");
  String[] guestPermissions=req.getParameterValues("guestPermissions");
  BlogsEntry entry=null;
  String oldUrlTitle=StringPool.BLANK;
  if (entryId <= 0) {
    entry=BlogsEntryServiceUtil.addEntry(layout.getPlid(),categoryId,title,content,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,tagsEntries,communityPermissions,guestPermissions,themeDisplay);
    AssetPublisherUtil.addAndStoreSelection(req,BlogsEntry.class.getName(),entry.getEntryId(),-1);
  }
 else {
    entry=BlogsEntryLocalServiceUtil.getEntry(entryId);
    String tempOldUrlTitle=entry.getUrlTitle();
    entry=BlogsEntryServiceUtil.updateEntry(entryId,categoryId,title,content,displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,tagsEntries,themeDisplay);
    if (!tempOldUrlTitle.equals(entry.getUrlTitle())) {
      oldUrlTitle=tempOldUrlTitle;
    }
  }
  return new Object[]{entry,oldUrlTitle};
}

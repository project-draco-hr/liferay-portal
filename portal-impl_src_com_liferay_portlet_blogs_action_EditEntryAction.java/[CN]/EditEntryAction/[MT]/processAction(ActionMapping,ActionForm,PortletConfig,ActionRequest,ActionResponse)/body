{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    BlogsEntry entry=null;
    String oldUrlTitle=StringPool.BLANK;
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      Object[] returnValue=updateEntry(actionRequest);
      entry=(BlogsEntry)returnValue[0];
      oldUrlTitle=((String)returnValue[1]);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteEntry(actionRequest);
    }
 else     if (cmd.equals(Constants.SUBSCRIBE)) {
      subscribe(actionRequest);
    }
 else     if (cmd.equals(Constants.UNSUBSCRIBE)) {
      unsubscribe(actionRequest);
    }
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    boolean updateRedirect=false;
    if (redirect.indexOf("/blogs/" + oldUrlTitle + "/maximized") != -1) {
      oldUrlTitle+="/maximized";
    }
    if ((entry != null) && (Validator.isNotNull(oldUrlTitle)) && (redirect.endsWith("/blogs/" + oldUrlTitle) || redirect.indexOf("/blogs/" + oldUrlTitle + "?") != -1)) {
      int pos=redirect.indexOf("?");
      if (pos == -1) {
        pos=redirect.length();
      }
      String newRedirect=redirect.substring(0,pos - oldUrlTitle.length());
      newRedirect+=entry.getUrlTitle();
      if (oldUrlTitle.indexOf("/maximized") != -1) {
        newRedirect+="/maximized";
      }
      if (pos < redirect.length()) {
        newRedirect+="?" + redirect.substring(pos + 1,redirect.length());
      }
      redirect=newRedirect;
      updateRedirect=true;
    }
    boolean json=ParamUtil.getBoolean(actionRequest,"json",false);
    if ((entry != null) && json) {
      JSONObject jsonObj=JSONFactoryUtil.createJSONObject();
      jsonObj.put("entryId",entry.getEntryId());
      jsonObj.put("redirect",redirect);
      jsonObj.put("updateRedirect",updateRedirect);
      HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
      HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
      InputStream is=new UnsyncByteArrayInputStream(jsonObj.toString().getBytes());
      String contentType=ContentTypes.TEXT_JAVASCRIPT;
      ServletResponseUtil.sendFile(request,response,null,is,contentType);
      setForward(actionRequest,ActionConstants.COMMON_NULL);
    }
 else {
      ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
      LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
      if (layoutTypePortlet.hasPortletId(portletConfig.getPortletName())) {
        sendRedirect(actionRequest,actionResponse,redirect);
      }
 else {
        actionResponse.sendRedirect(redirect);
      }
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchEntryException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      setForward(actionRequest,"portlet.blogs.error");
    }
 else     if (e instanceof EntryContentException || e instanceof EntryDisplayDateException || e instanceof EntryTitleException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
    }
 else     if (e instanceof AssetTagException) {
      SessionErrors.add(actionRequest,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

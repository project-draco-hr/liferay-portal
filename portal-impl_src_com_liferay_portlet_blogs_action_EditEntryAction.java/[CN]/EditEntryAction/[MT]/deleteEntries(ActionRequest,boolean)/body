{
  long[] deleteEntryIds=null;
  long entryId=ParamUtil.getLong(actionRequest,"entryId");
  if (entryId > 0) {
    deleteEntryIds=new long[]{entryId};
  }
 else {
    deleteEntryIds=StringUtil.split(ParamUtil.getString(actionRequest,"deleteEntryIds"),0L);
  }
  for (  long deleteEntryId : deleteEntryIds) {
    if (moveToTrash) {
      BlogsEntryServiceUtil.moveEntryToTrash(deleteEntryId);
    }
 else {
      BlogsEntryServiceUtil.deleteEntry(deleteEntryId);
    }
  }
  if (moveToTrash && (deleteEntryIds.length > 0)) {
    HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
    String portletId=(String)request.getAttribute(WebKeys.PORTLET_ID);
    Map<String,String> data=new HashMap<String,String>();
    data.put("trashedEntryIds",StringUtil.merge(deleteEntryIds));
    SessionMessages.add(actionRequest,WebKeys.TRASHED_ENTRIES,data);
    SessionMessages.add(actionRequest,WebKeys.UNDO_TYPE,PortletKeys.BLOGS);
    SessionMessages.add(actionRequest,portletId + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS,Boolean.TRUE);
  }
}

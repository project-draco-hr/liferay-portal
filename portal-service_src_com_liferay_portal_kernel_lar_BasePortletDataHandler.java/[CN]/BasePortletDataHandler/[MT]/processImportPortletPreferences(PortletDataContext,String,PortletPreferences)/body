{
  ClassLoader classLoader=portletDataContext.getClassLoader();
  try {
    portletDataContext.setClassLoader(this.getClass().getClassLoader());
    String displayStyle=getDisplayTemplate(portletDataContext,portletId,portletPreferences);
    if (Validator.isNotNull(displayStyle) && displayStyle.startsWith(PortletDisplayTemplate.DISPLAY_STYLE_PREFIX)) {
      DDMTemplate ddmTemplate=null;
      long displayStyleGroupId=getDisplayTemplateGroupId(portletDataContext,portletId,portletPreferences);
      if (displayStyleGroupId == portletDataContext.getSourceCompanyGroupId()) {
        Element importDataRootElement=portletDataContext.getImportDataRootElement();
        Element referencesElement=importDataRootElement.element("references");
        List<Element> referenceElements=referencesElement.elements();
        String ddmTemplateUuid=PortletDisplayTemplateUtil.getDDMTemplateUuid(displayStyle);
        boolean preloaded=false;
        long referenceClassNameId=0;
        String templateKey=null;
        for (        Element referenceElement : referenceElements) {
          String className=referenceElement.attributeValue("class-name");
          String uuid=referenceElement.attributeValue("uuid");
          if (!className.equals(DDMTemplate.class.getName()) || !uuid.equals(ddmTemplateUuid)) {
            continue;
          }
          preloaded=GetterUtil.getBoolean(referenceElement.attributeValue("preloaded"));
          referenceClassNameId=PortalUtil.getClassNameId(referenceElement.attributeValue("referenced-class-name"));
          templateKey=referenceElement.attributeValue("template-key");
          break;
        }
        if (!preloaded) {
          ddmTemplate=PortletDisplayTemplateUtil.fetchDDMTemplate(portletDataContext.getCompanyGroupId(),displayStyle);
        }
 else {
          ddmTemplate=DDMTemplateLocalServiceUtil.fetchTemplate(portletDataContext.getCompanyGroupId(),referenceClassNameId,templateKey);
        }
      }
 else       if (displayStyleGroupId == portletDataContext.getSourceGroupId()) {
        ddmTemplate=PortletDisplayTemplateUtil.fetchDDMTemplate(portletDataContext.getScopeGroupId(),displayStyle);
      }
 else {
        ddmTemplate=PortletDisplayTemplateUtil.fetchDDMTemplate(displayStyleGroupId,displayStyle);
      }
      long importedDisplayStyleGroupId=portletDataContext.getScopeGroupId();
      if (ddmTemplate == null) {
        String ddmTemplateUuid=PortletDisplayTemplateUtil.getDDMTemplateUuid(displayStyle);
        Element ddmTemplateElement=portletDataContext.getImportDataElement(DDMTemplate.class.getSimpleName(),"uuid",ddmTemplateUuid);
        String ddmTemplatePath=ddmTemplateElement.attributeValue("path");
        ddmTemplate=(DDMTemplate)portletDataContext.getZipEntryAsObject(ddmTemplatePath);
        if (ddmTemplate != null) {
          StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmTemplate);
        }
      }
 else {
        importedDisplayStyleGroupId=ddmTemplate.getGroupId();
      }
      portletPreferences.setValue("displayStyleGroupId",String.valueOf(importedDisplayStyleGroupId));
    }
 else {
      portletPreferences.setValue("displayStyleGroupId",StringPool.BLANK);
    }
    return doProcessImportPortletPreferences(portletDataContext,portletId,portletPreferences);
  }
 catch (  PortletDataException pde) {
    throw pde;
  }
catch (  Exception e) {
    throw new PortletDataException(e);
  }
 finally {
    portletDataContext.setClassLoader(classLoader);
  }
}

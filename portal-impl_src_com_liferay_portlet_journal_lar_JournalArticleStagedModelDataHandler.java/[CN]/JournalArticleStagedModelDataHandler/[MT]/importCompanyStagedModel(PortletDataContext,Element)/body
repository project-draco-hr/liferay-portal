{
  String articleResourceUuid=element.attributeValue("article-resource-uuid");
  JournalArticleResource existingArticleResource=null;
  try {
    existingArticleResource=JournalArticleResourceLocalServiceUtil.fetchJournalArticleResourceByUuidAndGroupId(articleResourceUuid,portletDataContext.getCompanyGroupId());
  }
 catch (  SystemException se) {
    throw new PortletDataException(se);
  }
  if (existingArticleResource == null) {
    return;
  }
  JournalArticle existingArticle=null;
  try {
    existingArticle=JournalArticleLocalServiceUtil.getLatestArticle(existingArticleResource.getResourcePrimKey(),WorkflowConstants.STATUS_ANY,false);
  }
 catch (  Exception e) {
    if (e instanceof SystemException) {
      throw new PortletDataException(e);
    }
    return;
  }
  Map<Long,Long> articleIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class);
  long articleId=GetterUtil.getLong(element.attributeValue("class-pk"));
  articleIds.put(articleId,existingArticle.getId());
  Map<String,String> articleArticleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class + ".articleId");
  String articleArticleId=element.attributeValue("article-id");
  articleArticleIds.put(articleArticleId,existingArticle.getArticleId());
}

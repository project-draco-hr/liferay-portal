{
  JournalArticleResource existingArticleResource=null;
  if (!preloaded) {
    existingArticleResource=JournalArticleResourceLocalServiceUtil.fetchJournalArticleResourceByUuidAndGroupId(articleResourceUuid,groupId);
  }
 else {
    existingArticleResource=JournalArticleResourceLocalServiceUtil.fetchArticleResource(groupId,articleId);
  }
  JournalArticle existingArticle=null;
  if (existingArticleResource != null) {
    existingArticle=JournalArticleLocalServiceUtil.fetchLatestArticle(existingArticleResource.getResourcePrimKey(),WorkflowConstants.STATUS_ANY,false);
  }
  if ((existingArticle == null) && Validator.isNotNull(newArticleId) && (version > 0.0)) {
    existingArticle=JournalArticleLocalServiceUtil.fetchArticle(groupId,newArticleId,version);
  }
  if ((existingArticle == null) && Validator.isNull(newArticleId)) {
    existingArticle=JournalArticleLocalServiceUtil.fetchArticle(groupId,articleId,version);
    if (existingArticle != null) {
      StringBundler sb=new StringBundler(10);
      sb.append("The article in the LAR file with article resource ");
      sb.append("UUID ");
      sb.append(articleResourceUuid);
      sb.append(", article ID ");
      sb.append(articleId);
      sb.append(", and version ");
      sb.append(version);
      sb.append("conflicts with an article in the database with ");
      sb.append("article resource UUID ");
      sb.append(existingArticle.getArticleResourceUuid());
      throw new PortletDataException(sb.toString());
    }
  }
  return existingArticle;
}

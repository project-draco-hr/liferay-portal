{
  if (checkDateRange && !portletDataContext.isWithinDateRange(article.getModifiedDate())) {
    return;
  }
  if ((article.getStatus() != WorkflowConstants.STATUS_APPROVED) && (article.getStatus() != WorkflowConstants.STATUS_EXPIRED)) {
    return;
  }
  String path=getArticlePath(portletDataContext,article);
  if (!portletDataContext.isPathNotProcessed(path)) {
    return;
  }
  article=(JournalArticle)article.clone();
  Element articleElement=(Element)articlesElement.selectSingleNode("//article[@path='".concat(path).concat("']"));
  if (articleElement == null) {
    articleElement=articlesElement.addElement("article");
  }
  articleElement.addAttribute("article-resource-uuid",article.getArticleResourceUuid());
  if (Validator.isNotNull(article.getStructureId())) {
    DDMStructure ddmStructure=DDMStructureLocalServiceUtil.getStructure(article.getGroupId(),PortalUtil.getClassNameId(JournalArticle.class),article.getStructureId(),true);
    articleElement.addAttribute("ddm-structure-uuid",ddmStructure.getUuid());
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmStructure);
  }
  if (Validator.isNotNull(article.getTemplateId())) {
    DDMTemplate ddmTemplate=DDMTemplateLocalServiceUtil.getTemplate(article.getGroupId(),PortalUtil.getClassNameId(DDMStructure.class),article.getTemplateId(),true);
    articleElement.addAttribute("ddm-template-uuid",ddmTemplate.getUuid());
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmTemplate);
  }
  if (article.isSmallImage()) {
    Image smallImage=ImageUtil.fetchByPrimaryKey(article.getSmallImageId());
    if (Validator.isNotNull(article.getSmallImageURL())) {
      String smallImageURL=DDMPortletDataHandler.exportReferencedContent(portletDataContext,dlFileEntryTypesElement,dlFoldersElement,dlFileEntriesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,articleElement,article.getSmallImageURL().concat(StringPool.SPACE));
      article.setSmallImageURL(smallImageURL);
    }
 else     if (smallImage != null) {
      String smallImagePath=getArticleSmallImagePath(portletDataContext,article);
      articleElement.addAttribute("small-image-path",smallImagePath);
      article.setSmallImageType(smallImage.getType());
      portletDataContext.addZipEntry(smallImagePath,smallImage.getTextObj());
    }
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"images")) {
    String imagePath=getArticleImagePath(portletDataContext,article);
    articleElement.addAttribute("image-path",imagePath);
    List<JournalArticleImage> articleImages=JournalArticleImageUtil.findByG_A_V(article.getGroupId(),article.getArticleId(),article.getVersion());
    for (    JournalArticleImage articleImage : articleImages) {
      Image image=null;
      try {
        image=ImageUtil.findByPrimaryKey(articleImage.getArticleImageId());
      }
 catch (      NoSuchImageException nsie) {
        continue;
      }
      if (image.getTextObj() == null) {
        continue;
      }
      String articleImagePath=getArticleImagePath(portletDataContext,article,articleImage,image);
      if (!portletDataContext.isPathNotProcessed(articleImagePath)) {
        continue;
      }
      portletDataContext.addZipEntry(articleImagePath,image.getTextObj());
    }
  }
  article.setStatusByUserUuid(article.getStatusByUserUuid());
  if (portletDataContext.getBooleanParameter(NAMESPACE,"embedded-assets")) {
    String content=DDMPortletDataHandler.exportReferencedContent(portletDataContext,dlFileEntryTypesElement,dlFoldersElement,dlFileEntriesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,articleElement,article.getContent());
    article.setContent(content);
  }
  portletDataContext.addClassedModel(articleElement,path,article,NAMESPACE);
}

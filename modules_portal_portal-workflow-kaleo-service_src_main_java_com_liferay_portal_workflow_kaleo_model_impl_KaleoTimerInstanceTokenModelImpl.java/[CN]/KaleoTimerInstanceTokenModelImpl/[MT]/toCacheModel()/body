{
  KaleoTimerInstanceTokenCacheModel kaleoTimerInstanceTokenCacheModel=new KaleoTimerInstanceTokenCacheModel();
  kaleoTimerInstanceTokenCacheModel.kaleoTimerInstanceTokenId=getKaleoTimerInstanceTokenId();
  kaleoTimerInstanceTokenCacheModel.groupId=getGroupId();
  kaleoTimerInstanceTokenCacheModel.companyId=getCompanyId();
  kaleoTimerInstanceTokenCacheModel.userId=getUserId();
  kaleoTimerInstanceTokenCacheModel.userName=getUserName();
  String userName=kaleoTimerInstanceTokenCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    kaleoTimerInstanceTokenCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    kaleoTimerInstanceTokenCacheModel.createDate=createDate.getTime();
  }
 else {
    kaleoTimerInstanceTokenCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    kaleoTimerInstanceTokenCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    kaleoTimerInstanceTokenCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  kaleoTimerInstanceTokenCacheModel.kaleoClassName=getKaleoClassName();
  String kaleoClassName=kaleoTimerInstanceTokenCacheModel.kaleoClassName;
  if ((kaleoClassName != null) && (kaleoClassName.length() == 0)) {
    kaleoTimerInstanceTokenCacheModel.kaleoClassName=null;
  }
  kaleoTimerInstanceTokenCacheModel.kaleoClassPK=getKaleoClassPK();
  kaleoTimerInstanceTokenCacheModel.kaleoDefinitionId=getKaleoDefinitionId();
  kaleoTimerInstanceTokenCacheModel.kaleoInstanceId=getKaleoInstanceId();
  kaleoTimerInstanceTokenCacheModel.kaleoInstanceTokenId=getKaleoInstanceTokenId();
  kaleoTimerInstanceTokenCacheModel.kaleoTaskInstanceTokenId=getKaleoTaskInstanceTokenId();
  kaleoTimerInstanceTokenCacheModel.kaleoTimerId=getKaleoTimerId();
  kaleoTimerInstanceTokenCacheModel.kaleoTimerName=getKaleoTimerName();
  String kaleoTimerName=kaleoTimerInstanceTokenCacheModel.kaleoTimerName;
  if ((kaleoTimerName != null) && (kaleoTimerName.length() == 0)) {
    kaleoTimerInstanceTokenCacheModel.kaleoTimerName=null;
  }
  kaleoTimerInstanceTokenCacheModel.blocking=getBlocking();
  kaleoTimerInstanceTokenCacheModel.completionUserId=getCompletionUserId();
  kaleoTimerInstanceTokenCacheModel.completed=getCompleted();
  Date completionDate=getCompletionDate();
  if (completionDate != null) {
    kaleoTimerInstanceTokenCacheModel.completionDate=completionDate.getTime();
  }
 else {
    kaleoTimerInstanceTokenCacheModel.completionDate=Long.MIN_VALUE;
  }
  kaleoTimerInstanceTokenCacheModel.workflowContext=getWorkflowContext();
  String workflowContext=kaleoTimerInstanceTokenCacheModel.workflowContext;
  if ((workflowContext != null) && (workflowContext.length() == 0)) {
    kaleoTimerInstanceTokenCacheModel.workflowContext=null;
  }
  return kaleoTimerInstanceTokenCacheModel;
}

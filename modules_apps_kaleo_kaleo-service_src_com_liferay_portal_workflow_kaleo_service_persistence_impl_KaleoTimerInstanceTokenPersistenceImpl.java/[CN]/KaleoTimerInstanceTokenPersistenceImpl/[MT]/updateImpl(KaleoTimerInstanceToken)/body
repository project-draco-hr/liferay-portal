{
  kaleoTimerInstanceToken=toUnwrappedModel(kaleoTimerInstanceToken);
  boolean isNew=kaleoTimerInstanceToken.isNew();
  KaleoTimerInstanceTokenModelImpl kaleoTimerInstanceTokenModelImpl=(KaleoTimerInstanceTokenModelImpl)kaleoTimerInstanceToken;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoTimerInstanceToken.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoTimerInstanceToken.setCreateDate(now);
    }
 else {
      kaleoTimerInstanceToken.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoTimerInstanceTokenModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoTimerInstanceToken.setModifiedDate(now);
    }
 else {
      kaleoTimerInstanceToken.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoTimerInstanceToken.isNew()) {
      session.save(kaleoTimerInstanceToken);
      kaleoTimerInstanceToken.setNew(false);
    }
 else {
      session.merge(kaleoTimerInstanceToken);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoTimerInstanceTokenModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoTimerInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTimerInstanceTokenModelImpl.getOriginalKaleoInstanceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
      args=new Object[]{kaleoTimerInstanceTokenModelImpl.getKaleoInstanceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
    }
    if ((kaleoTimerInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTimerInstanceTokenModelImpl.getOriginalKaleoInstanceTokenId(),kaleoTimerInstanceTokenModelImpl.getOriginalCompleted()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C,args);
      args=new Object[]{kaleoTimerInstanceTokenModelImpl.getKaleoInstanceTokenId(),kaleoTimerInstanceTokenModelImpl.getCompleted()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C,args);
    }
    if ((kaleoTimerInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C_B.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTimerInstanceTokenModelImpl.getOriginalKaleoInstanceTokenId(),kaleoTimerInstanceTokenModelImpl.getOriginalCompleted(),kaleoTimerInstanceTokenModelImpl.getOriginalBlocking()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_C_B,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C_B,args);
      args=new Object[]{kaleoTimerInstanceTokenModelImpl.getKaleoInstanceTokenId(),kaleoTimerInstanceTokenModelImpl.getCompleted(),kaleoTimerInstanceTokenModelImpl.getBlocking()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_KITI_C_B,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KITI_C_B,args);
    }
  }
  EntityCacheUtil.putResult(KaleoTimerInstanceTokenModelImpl.ENTITY_CACHE_ENABLED,KaleoTimerInstanceTokenImpl.class,kaleoTimerInstanceToken.getPrimaryKey(),kaleoTimerInstanceToken,false);
  clearUniqueFindersCache(kaleoTimerInstanceToken);
  cacheUniqueFindersCache(kaleoTimerInstanceToken);
  kaleoTimerInstanceToken.resetOriginalValues();
  return kaleoTimerInstanceToken;
}

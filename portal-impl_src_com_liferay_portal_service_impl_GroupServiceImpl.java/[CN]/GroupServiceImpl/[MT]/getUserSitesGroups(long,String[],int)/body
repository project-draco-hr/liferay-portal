{
  User user=userPersistence.fetchByPrimaryKey(userId);
  if (user.isDefaultUser()) {
    return Collections.emptyList();
  }
  List<Group> userSiteGroups=new ArrayList<>();
  int start=QueryUtil.ALL_POS;
  int end=QueryUtil.ALL_POS;
  if (max != QueryUtil.ALL_POS) {
    start=0;
    end=max;
  }
  if ((classNames == null) || ArrayUtil.contains(classNames,User.class.getName())) {
    if (PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED || PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED) {
      Group userGroup=user.getGroup();
      userSiteGroups.add(userGroup);
      if ((max != QueryUtil.ALL_POS) && (userSiteGroups.size() >= max)) {
        return Collections.unmodifiableList(ListUtil.subList(ListUtil.unique(userSiteGroups),start,end));
      }
    }
  }
  if ((classNames == null) || ArrayUtil.contains(classNames,Company.class.getName())) {
    userSiteGroups.addAll(groupLocalService.search(user.getCompanyId(),new long[]{classNameLocalService.getClassNameId(Company.class)},null,new LinkedHashMap<String,Object>(),start,end));
    if ((max != QueryUtil.ALL_POS) && (userSiteGroups.size() >= max)) {
      return Collections.unmodifiableList(ListUtil.subList(ListUtil.unique(userSiteGroups),start,end));
    }
  }
  if ((classNames == null) || ArrayUtil.contains(classNames,Group.class.getName())) {
    LinkedHashMap<String,Object> groupParams=new LinkedHashMap<>();
    groupParams.put("active",true);
    groupParams.put("usersGroups",userId);
    List<Group> groups=groupLocalService.search(user.getCompanyId(),null,null,groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    for (    Group group : groups) {
      if (group.hasPrivateLayouts() || group.hasPublicLayouts()) {
        userSiteGroups.add(group);
      }
    }
    if ((max != QueryUtil.ALL_POS) && (userSiteGroups.size() >= max)) {
      return Collections.unmodifiableList(ListUtil.subList(ListUtil.unique(userSiteGroups),start,end));
    }
  }
  if ((classNames == null) || ArrayUtil.contains(classNames,Organization.class.getName())) {
    List<Organization> userOrgs=organizationLocalService.getOrganizations(userId,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
    for (    Organization organization : userOrgs) {
      Group group=organization.getGroup();
      if (group.isActive() && (group.hasPrivateLayouts() || group.hasPublicLayouts())) {
        userSiteGroups.add(group);
      }
      if (!PropsValues.ORGANIZATIONS_MEMBERSHIP_STRICT) {
        for (        Organization ancestorOrganization : organization.getAncestors()) {
          Group ancestorGroup=ancestorOrganization.getGroup();
          if (ancestorGroup.isActive() && (ancestorGroup.hasPrivateLayouts() || ancestorGroup.hasPublicLayouts())) {
            userSiteGroups.add(ancestorOrganization.getGroup());
          }
        }
      }
      if ((max != QueryUtil.ALL_POS) && (userSiteGroups.size() >= max)) {
        return Collections.unmodifiableList(ListUtil.subList(ListUtil.unique(userSiteGroups),start,end));
      }
    }
  }
  return Collections.unmodifiableList(ListUtil.subList(ListUtil.unique(userSiteGroups),start,end));
}

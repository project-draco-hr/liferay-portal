{
  final Method getCompanyIdMethod=ReflectionTestUtil.getMethod(PortletDataContext.class,"getCompanyId");
  final Method getGroupIdMethod=ReflectionTestUtil.getMethod(PortletDataContext.class,"getGroupId");
  PortletDataContext portletDataContext=(PortletDataContext)ProxyUtil.newProxyInstance(PortletDataContext.class.getClassLoader(),new Class<?>[]{PortletDataContext.class},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws PortalException {
      if (method.equals(getCompanyIdMethod)) {
        return TestPropsValues.getCompanyId();
      }
      if (method.equals(getGroupIdMethod)) {
        return exportGroup.getGroupId();
      }
      throw new UnsupportedOperationException();
    }
  }
);
  Element portletElement=SAXReaderUtil.createElement("portlet");
  PermissionExporter permissionExporter=PermissionExporter.getInstance();
  ReflectionTestUtil.invoke(permissionExporter,"exportPortletPermissions",new Class<?>[]{PortletDataContext.class,String.class,Layout.class,Element.class},portletDataContext,_PORTLET_ID,exportLayout,portletElement);
  return portletElement;
}

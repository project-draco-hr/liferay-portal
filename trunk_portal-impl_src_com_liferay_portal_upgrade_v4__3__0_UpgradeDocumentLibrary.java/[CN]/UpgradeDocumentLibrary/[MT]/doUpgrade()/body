{
  UpgradeColumn upgradeCompanyIdColumn=new SwapUpgradeColumnImpl("companyId",new Integer(Types.VARCHAR),AvailableMappersUtil.getCompanyIdMapper());
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",AvailableMappersUtil.getGroupIdMapper());
  UpgradeColumn upgradeUserIdColumn=new SwapUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  PKUpgradeColumnImpl upgradePKColumn=new PKUpgradeColumnImpl("folderId",true);
  UpgradeTable upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFolderTable.TABLE_NAME,DLFolderTable.TABLE_COLUMNS,upgradePKColumn,upgradeGroupIdColumn,upgradeUserIdColumn);
  upgradeTable.setCreateSQL(DLFolderTable.TABLE_SQL_CREATE);
  upgradeTable.setIndexesSQL(DLFolderTable.TABLE_SQL_ADD_INDEXES);
  upgradeTable.updateTable();
  ValueMapper folderIdMapper=new DefaultPKMapper(upgradePKColumn.getValueMapper());
  AvailableMappersUtil.setDLFolderIdMapper(folderIdMapper);
  UpgradeColumn upgradeParentFolderIdColumn=new SwapUpgradeColumnImpl("parentFolderId",folderIdMapper);
  upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFolderTable.TABLE_NAME,DLFolderTable.TABLE_COLUMNS,upgradeParentFolderIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeFolderIdColumn=new SwapUpgradeColumnImpl("folderId",folderIdMapper);
  UpgradeColumn upgradeToFolderIdColumn=new SwapUpgradeColumnImpl("toFolderId",folderIdMapper);
  UpgradeColumn upgradeNameColumn=new TempUpgradeColumnImpl("name");
  PKUpgradeColumnImpl fileEntryIdColumn=new DLFileEntryIdUpgradeColumnImpl(upgradeCompanyIdColumn,upgradeFolderIdColumn,upgradeNameColumn);
  UpgradeColumn upgradeVersionUserIdColumn=new SwapUpgradeColumnImpl("versionUserId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFileEntryTable.TABLE_NAME,DLFileEntryTable.TABLE_COLUMNS,upgradeCompanyIdColumn,upgradeFolderIdColumn,upgradeNameColumn,fileEntryIdColumn,upgradeUserIdColumn,upgradeVersionUserIdColumn);
  upgradeTable.setCreateSQL(DLFileEntryTable.TABLE_SQL_CREATE);
  upgradeTable.setIndexesSQL(DLFileEntryTable.TABLE_SQL_ADD_INDEXES);
  upgradeTable.updateTable();
  ValueMapper fileEntryIdMapper=fileEntryIdColumn.getValueMapper();
  AvailableMappersUtil.setDLFileEntryIdMapper(fileEntryIdMapper);
  upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFileRankTable.TABLE_NAME,DLFileRankTable.TABLE_COLUMNS,new PKUpgradeColumnImpl("fileRankId",false),upgradeUserIdColumn,upgradeFolderIdColumn);
  upgradeTable.setCreateSQL(DLFileRankTable.TABLE_SQL_CREATE);
  upgradeTable.setIndexesSQL(DLFileRankTable.TABLE_SQL_ADD_INDEXES);
  upgradeTable.updateTable();
  upgradePKColumn=new PKUpgradeColumnImpl("fileShortcutId",true);
  upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFileShortcutTable.TABLE_NAME,DLFileShortcutTable.TABLE_COLUMNS,upgradePKColumn,upgradeUserIdColumn,upgradeFolderIdColumn,upgradeToFolderIdColumn);
  upgradeTable.setCreateSQL(DLFileShortcutTable.TABLE_SQL_CREATE);
  upgradeTable.setIndexesSQL(DLFileShortcutTable.TABLE_SQL_ADD_INDEXES);
  upgradeTable.updateTable();
  ValueMapper fileShortcutIdMapper=upgradePKColumn.getValueMapper();
  AvailableMappersUtil.setDLFileShortcutIdMapper(fileShortcutIdMapper);
  upgradeTable=UpgradeTableFactoryUtil.getUpgradeTable(DLFileVersionTable.TABLE_NAME,DLFileVersionTable.TABLE_COLUMNS,new PKUpgradeColumnImpl("fileVersionId",false),upgradeUserIdColumn,upgradeFolderIdColumn);
  upgradeTable.setCreateSQL(DLFileVersionTable.TABLE_SQL_CREATE);
  upgradeTable.setIndexesSQL(DLFileVersionTable.TABLE_SQL_ADD_INDEXES);
  upgradeTable.updateTable();
}

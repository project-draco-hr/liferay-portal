{
  if (text == null) {
    return null;
  }
  StringBuffer sb=new StringBuffer();
  try {
    BufferedReader br=new BufferedReader(new StringReader(text));
    String s=StringPool.BLANK;
    while ((s=br.readLine()) != null) {
      if (s.length() == 0) {
        sb.append(lineSeparator);
      }
 else {
        String[] tokens=s.split(StringPool.SPACE);
        boolean firstWord=true;
        int curLineLength=0;
        for (int i=0; i < tokens.length; i++) {
          if (!firstWord) {
            sb.append(StringPool.SPACE);
            curLineLength++;
          }
          if (firstWord) {
            sb.append(lineSeparator);
          }
          sb.append(tokens[i]);
          curLineLength+=tokens[i].length();
          if (curLineLength >= width) {
            firstWord=true;
            curLineLength=0;
          }
 else {
            firstWord=false;
          }
        }
      }
    }
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
  return sb.toString();
}

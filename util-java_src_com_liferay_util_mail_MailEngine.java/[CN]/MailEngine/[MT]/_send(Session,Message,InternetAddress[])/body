{
  try {
    if (_log.isDebugEnabled()) {
      _log.debug("Trying to send a email using the following properties:");
      StringWriter sw=new StringWriter();
      PrintWriter pw=new PrintWriter(sw);
      session.getProperties().list(pw);
      pw.flush();
      _log.debug(sw.toString());
    }
    boolean smtpAuth=GetterUtil.getBoolean(_getSMTPProperty(session,"auth"),false);
    String smtpHost=_getSMTPProperty(session,"host");
    String smtpPort=_getSMTPProperty(session,"port");
    String user=_getSMTPProperty(session,"user");
    String password=_getSMTPProperty(session,"password");
    if (smtpAuth && Validator.isNotNull(user) && password != null) {
      String protocol=session.getProperty("mail.transport.protocol");
      if (Validator.isNull(protocol)) {
        protocol="smtp";
      }
      Transport transport=session.getTransport(protocol);
      if (Validator.isNotNull(smtpPort) && Validator.isNumber(smtpPort)) {
        transport.connect(smtpHost,Integer.parseInt(smtpPort),user,password);
      }
 else {
        transport.connect(smtpHost,user,password);
      }
      if (bulkAddresses != null && bulkAddresses.length > 0) {
        transport.sendMessage(msg,bulkAddresses);
      }
 else {
        transport.sendMessage(msg,msg.getAllRecipients());
      }
      transport.close();
    }
 else {
      if ((bulkAddresses != null) && (bulkAddresses.length > 0)) {
        Transport.send(msg,bulkAddresses);
      }
 else {
        Transport.send(msg);
      }
    }
  }
 catch (  MessagingException me) {
    if (me.getNextException() instanceof SocketException) {
      if (_log.isWarnEnabled()) {
        _log.warn("Failed to connect to a valid mail server. Please " + "make sure one is properly configured. " + me.getMessage());
      }
    }
  }
}

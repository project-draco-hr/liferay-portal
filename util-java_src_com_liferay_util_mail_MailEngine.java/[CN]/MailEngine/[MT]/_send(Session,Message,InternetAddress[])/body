{
  try {
    boolean smtpAuth=GetterUtil.getBoolean(_getSMTPProperty(session,"auth"),false);
    String smtpHost=_getSMTPProperty(session,"host");
    int smtpPort=GetterUtil.getInteger(_getSMTPProperty(session,"port"),Account.PORT_SMTP);
    String user=_getSMTPProperty(session,"user");
    String password=_getSMTPProperty(session,"password");
    if (smtpAuth && Validator.isNotNull(user) && Validator.isNotNull(password)) {
      String protocol=GetterUtil.getString(session.getProperty("mail.transport.protocol"),Account.PROTOCOL_SMTP);
      Transport transport=session.getTransport(protocol);
      transport.connect(smtpHost,smtpPort,user,password);
      if ((bulkAddresses != null) && (bulkAddresses.length > 0)) {
        transport.sendMessage(msg,bulkAddresses);
      }
 else {
        transport.sendMessage(msg,msg.getAllRecipients());
      }
      transport.close();
    }
 else {
      if ((bulkAddresses != null) && (bulkAddresses.length > 0)) {
        Transport.send(msg,bulkAddresses);
      }
 else {
        Transport.send(msg);
      }
    }
  }
 catch (  MessagingException me) {
    if (me.getNextException() instanceof SocketException) {
      if (_log.isWarnEnabled()) {
        _log.warn("Failed to connect to a valid mail server. Please " + "make sure one is properly configured. " + me.getMessage());
      }
    }
 else {
      _log.error(me.getMessage());
      LogUtil.log(_log,me);
    }
  }
}

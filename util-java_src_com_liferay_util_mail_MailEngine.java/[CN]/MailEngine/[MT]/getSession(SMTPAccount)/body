{
  Properties properties=new Properties();
  Session session=null;
  String protocol="smtp";
  String port=DEFAULT_SMTP_PORT;
  ;
  if (smtpAccount != null && smtpAccount.isRequiresAuthentication()) {
    if (smtpAccount.isUseSSL()) {
      protocol="smtps";
      if (Validator.isNotNull(smtpAccount.getServerPort())) {
        port=String.valueOf(smtpAccount.getServerPort());
      }
 else {
        port=DEFAULT_SMTPS_PORT;
      }
      properties.put("mail." + protocol + ".socketFactory.port",port);
      properties.put("mail." + protocol + ".socketFactory.class","javax.net.ssl.SSLSocketFactory");
      properties.put("mail." + protocol + ".socketFactory.fallback","false");
    }
    properties.put("mail.transport.protocol",protocol);
    properties.put("mail." + protocol + ".auth","true");
    properties.put("mail." + protocol + ".host",smtpAccount.getServerName());
    if (Validator.isNotNull(smtpAccount.getServerPort())) {
      port=String.valueOf(smtpAccount.getServerPort());
    }
    properties.put("mail." + protocol + ".port",port);
    properties.put("mail." + protocol + ".user",smtpAccount.getUserName());
    properties.put("mail." + protocol + ".password",smtpAccount.getPassword());
    session=Session.getInstance(properties);
  }
 else {
    session=getSession();
  }
  if (_log.isDebugEnabled()) {
    session.setDebug(true);
  }
  return session;
}

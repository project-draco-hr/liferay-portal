{
  StopWatch stopWatch=null;
  if (_log.isDebugEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
    _log.debug("From: " + from);
    _log.debug("To: " + Arrays.toString(to));
    _log.debug("CC: " + Arrays.toString(cc));
    _log.debug("BCC: " + Arrays.toString(bcc));
    _log.debug("List Addresses: " + Arrays.toString(bulkAddresses));
    _log.debug("Subject: " + subject);
    _log.debug("Body: " + body);
    _log.debug("HTML Format: " + htmlFormat);
    _log.debug("Reply to: " + Arrays.toString(replyTo));
    _log.debug("Message ID: " + messageId);
    _log.debug("In Reply To: " + inReplyTo);
    if (attachments != null) {
      for (int i=0; i < attachments.size(); i++) {
        LiferayAttachment liferayAttachment=attachments.get(i);
        if (liferayAttachment.getAttachment() != null) {
          String path=liferayAttachment.getAttachment().getAbsolutePath();
          _log.debug("Attachment # path" + (i + 1) + ": "+ path);
          if (liferayAttachment.getAttachmentFileName() != null) {
            _log.debug("Attachment # fileName" + (i + 1) + ": "+ liferayAttachment.getAttachmentFileName());
          }
        }
      }
    }
  }
  try {
    Session session=null;
    if (smtpAccount == null) {
      session=getSession();
    }
 else {
      session=getSession(smtpAccount);
    }
    Message message=new LiferayMimeMessage(session);
    message.setFrom(from);
    message.setRecipients(Message.RecipientType.TO,to);
    if (cc != null) {
      message.setRecipients(Message.RecipientType.CC,cc);
    }
    if (bcc != null) {
      message.setRecipients(Message.RecipientType.BCC,bcc);
    }
    subject=GetterUtil.getString(subject);
    message.setSubject(subject);
    if ((attachments != null) && (attachments.size() > 0)) {
      MimeMultipart rootMultipart=new MimeMultipart(_MULTIPART_TYPE_MIXED);
      MimeMultipart messageMultipart=new MimeMultipart(_MULTIPART_TYPE_ALTERNATIVE);
      MimeBodyPart messageBodyPart=new MimeBodyPart();
      messageBodyPart.setContent(messageMultipart);
      rootMultipart.addBodyPart(messageBodyPart);
      if (htmlFormat) {
        MimeBodyPart bodyPart=new MimeBodyPart();
        bodyPart.setContent(body,_TEXT_HTML);
        messageMultipart.addBodyPart(bodyPart);
      }
 else {
        MimeBodyPart bodyPart=new MimeBodyPart();
        bodyPart.setText(body);
        messageMultipart.addBodyPart(bodyPart);
      }
      for (int i=0; i < attachments.size(); i++) {
        LiferayAttachment liferayAttachment=attachments.get(i);
        if (liferayAttachment.getAttachment() != null) {
          MimeBodyPart bodyPart=new MimeBodyPart();
          DataSource source=new FileDataSource(liferayAttachment.getAttachment());
          bodyPart.setDisposition(Part.ATTACHMENT);
          bodyPart.setDataHandler(new DataHandler(source));
          if (liferayAttachment.getAttachmentFileName() != null) {
            bodyPart.setFileName(liferayAttachment.getAttachmentFileName());
          }
 else {
            bodyPart.setFileName(liferayAttachment.getAttachment().getName());
          }
          rootMultipart.addBodyPart(bodyPart);
        }
      }
      message.setContent(rootMultipart);
      message.saveChanges();
    }
 else {
      if (htmlFormat) {
        message.setContent(body,_TEXT_HTML);
      }
 else {
        message.setContent(body,_TEXT_PLAIN);
      }
    }
    message.setSentDate(new Date());
    if (replyTo != null) {
      message.setReplyTo(replyTo);
    }
    if (messageId != null) {
      message.setHeader("Message-ID",messageId);
    }
    if (inReplyTo != null) {
      message.setHeader("In-Reply-To",inReplyTo);
      message.setHeader("References",inReplyTo);
    }
    _send(session,message,bulkAddresses);
  }
 catch (  SendFailedException sfe) {
    _log.error(sfe);
  }
catch (  Exception e) {
    throw new MailEngineException(e);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Sending mail takes " + stopWatch.getTime() + " ms");
  }
}

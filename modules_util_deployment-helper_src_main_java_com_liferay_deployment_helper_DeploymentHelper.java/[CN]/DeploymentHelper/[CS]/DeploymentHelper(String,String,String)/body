{
  List<ZipEntrySource> zipEntrySources=new ArrayList<>();
  StringBuilder sb=new StringBuilder();
  DirectoryScanner scanner=new DirectoryScanner();
  scanner.setIncludes(new String[]{"**/*.jar"});
  scanner.setCaseSensitive(false);
  for (  String deploymentFileName : deploymentFileNames.split(",")) {
    File deploymentFile=new File(deploymentFileName.trim());
    if (deploymentFile.isDirectory()) {
      String deploymentFilePath=deploymentFile.getCanonicalPath();
      scanner.setBasedir(deploymentFilePath);
      scanner.scan();
      String[] fileNames=scanner.getIncludedFiles();
      System.out.println("Adding jars in " + deploymentFilePath);
      for (      String fileName : fileNames) {
        File file=new File(deploymentFilePath,fileName);
        String webInfDeploymentFileName="WEB-INF/" + file.getName();
        zipEntrySources.add(new FileSource(webInfDeploymentFileName,file));
        sb.append('/');
        sb.append(webInfDeploymentFileName);
        sb.append(',');
      }
    }
 else {
      String webInfDeploymentFileName="WEB-INF/" + deploymentFile.getName();
      zipEntrySources.add(new FileSource(webInfDeploymentFileName,deploymentFile));
      sb.append('/');
      sb.append(webInfDeploymentFileName);
      sb.append(',');
    }
  }
  sb.setLength(sb.length() - 1);
  zipEntrySources.add(getWebXmlZipEntrySource(sb.toString(),deploymentPath));
  zipEntrySources.add(getClassZipEntrySource("com/liferay/deployment/helper/servlet/" + "DeploymentHelperContextListener.class"));
  ZipUtil.pack(zipEntrySources.toArray(new ZipEntrySource[zipEntrySources.size()]),new File(outputFileName));
}

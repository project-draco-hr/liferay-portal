{
  long startTime=System.currentTimeMillis();
  while (true) {
    update();
    StringBuilder sb=new StringBuilder();
    sb.append(getDownstreamJobCount("completed"));
    sb.append(" Completed / ");
    sb.append(getDownstreamJobCount("running"));
    sb.append(" Running / ");
    sb.append(getDownstreamJobCount("queued"));
    sb.append(" Queued / ");
    sb.append(getDownstreamJobCount("starting"));
    sb.append(" Starting / ");
    sb.append(getDownstreamJobCount());
    sb.append(" Total");
    System.out.println(sb.toString());
    List<DownstreamJob> missingDownstreamJobs=getDownstreamJobs("missing");
    for (    DownstreamJob missingJob : missingDownstreamJobs) {
      long time=System.currentTimeMillis();
      if ((time - missingJob.getStatusModifiedTime()) > maxStartTime) {
        throw new TimeoutException("Downstream job disappeared");
      }
    }
    long elapsedTime=System.currentTimeMillis() - startTime;
    if ((elapsedTime > maxStartTime) && (getDownstreamJobCount("starting") > 0)) {
      throw new TimeoutException("Unable to find downstream job");
    }
 else     if ((elapsedTime > maxWaitTime) && (getDownstreamJobCount("completed") < getDownstreamJobCount())) {
      throw new TimeoutException("Downstream job timeout");
    }
 else     if (getDownstreamJobCount("completed") == getDownstreamJobCount()) {
      break;
    }
 else {
      Thread.sleep(sleepTime);
    }
  }
}

{
  InputStream inputStream=null;
  try {
    URL url=classLoader.getResource(name + Conventions.PROPERTIES_EXTENSION);
    if (url == null) {
      return;
    }
    String protocol=url.getProtocol();
    if (!protocol.equals("file")) {
      return;
    }
    Properties properties=new Properties();
    inputStream=url.openStream();
    properties.load(inputStream);
    if (properties.containsKey("base.path")) {
      return;
    }
    String fileName=StringUtil.replace(url.getFile(),"%20",StringPool.SPACE);
    File file=new File(fileName);
    if (!file.exists() || !file.canWrite()) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to write " + file);
      }
      return;
    }
    Writer writer=new FileWriter(file,true);
    StringBundler sb=new StringBundler(4);
    sb.append(StringPool.OS_EOL);
    sb.append(StringPool.OS_EOL);
    sb.append("base.path=");
    String basePath=url.getPath();
    int pos=basePath.lastIndexOf(StringPool.SLASH + name + Conventions.PROPERTIES_EXTENSION);
    if (pos != -1) {
      basePath=basePath.substring(0,pos);
    }
    sb.append(basePath);
    writer.write(sb.toString());
    writer.close();
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    StreamUtil.cleanUp(inputStream);
  }
}

{
  FinderPath finderPath=FINDER_PATH_COUNT_BY_G_N_P_C;
  Object[] finderArgs=new Object[]{groupId,name,portletId,classNameId};
  Long count=(Long)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_COUNT_PORTLETITEM_WHERE);
    query.append(_FINDER_COLUMN_G_N_P_C_GROUPID_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_G_N_P_C_NAME_2);
    }
    boolean bindPortletId=false;
    if (portletId == null) {
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_1);
    }
 else     if (portletId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_3);
    }
 else {
      bindPortletId=true;
      query.append(_FINDER_COLUMN_G_N_P_C_PORTLETID_2);
    }
    query.append(_FINDER_COLUMN_G_N_P_C_CLASSNAMEID_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindName) {
        qPos.add(name);
      }
      if (bindPortletId) {
        qPos.add(portletId);
      }
      qPos.add(classNameId);
      count=(Long)q.uniqueResult();
      FinderCacheUtil.putResult(finderPath,finderArgs,count);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return count.intValue();
}

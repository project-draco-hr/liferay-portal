{
  _velocityEngine=new org.apache.velocity.app.VelocityEngine();
  LiferayResourceLoader.setListeners(PropsUtil.getArray(PropsKeys.VELOCITY_ENGINE_RESOURCE_LISTENERS));
  ExtendedProperties props=new ExtendedProperties();
  props.setProperty(org.apache.velocity.app.VelocityEngine.RESOURCE_LOADER,"string,servlet");
  props.setProperty("string." + org.apache.velocity.app.VelocityEngine.RESOURCE_LOADER + ".class",StringResourceLoader.class.getName());
  props.setProperty("servlet." + org.apache.velocity.app.VelocityEngine.RESOURCE_LOADER + ".class",LiferayResourceLoader.class.getName());
  props.setProperty(org.apache.velocity.app.VelocityEngine.RESOURCE_MANAGER_CLASS,PropsUtil.get(PropsKeys.VELOCITY_ENGINE_RESOURCE_MANAGER));
  props.setProperty(org.apache.velocity.app.VelocityEngine.RESOURCE_MANAGER_CACHE_CLASS,PropsUtil.get(PropsKeys.VELOCITY_ENGINE_RESOURCE_MANAGER_CACHE));
  props.setProperty(org.apache.velocity.app.VelocityEngine.VM_LIBRARY,PropsUtil.get(PropsKeys.VELOCITY_ENGINE_VELOCIMACRO_LIBRARY));
  props.setProperty(org.apache.velocity.app.VelocityEngine.RUNTIME_LOG_LOGSYSTEM_CLASS,PropsUtil.get(PropsKeys.VELOCITY_ENGINE_LOGGER));
  props.setProperty(org.apache.velocity.app.VelocityEngine.RUNTIME_LOG_LOGSYSTEM + ".log4j.category",PropsUtil.get(PropsKeys.VELOCITY_ENGINE_LOGGER_CATEGORY));
  _velocityEngine.setExtendedProperties(props);
  try {
    _velocityEngine.init();
    _restrictedToolsContext=new VelocityContextImpl();
    _standardToolsContext=new VelocityContextImpl();
    VelocityVariables.insertHelperUtilities(_restrictedToolsContext,_TEMPLATE_VELOCITY_RESTRICTED_VARIABLES);
    VelocityVariables.insertHelperUtilities(_standardToolsContext,null);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

{
  long pk=RandomTestUtil.nextLong();
  Portlet newPortlet=_persistence.create(pk);
  newPortlet.setMvccVersion(RandomTestUtil.nextLong());
  newPortlet.setCompanyId(RandomTestUtil.nextLong());
  newPortlet.setPortletId(RandomTestUtil.randomString());
  newPortlet.setRoles(RandomTestUtil.randomString());
  newPortlet.setActive(RandomTestUtil.randomBoolean());
  _models.add(_persistence.update(newPortlet));
  Portlet existingPortlet=_persistence.findByPrimaryKey(newPortlet.getPrimaryKey());
  Assert.assertEquals(existingPortlet.getMvccVersion(),newPortlet.getMvccVersion());
  Assert.assertEquals(existingPortlet.getId(),newPortlet.getId());
  Assert.assertEquals(existingPortlet.getCompanyId(),newPortlet.getCompanyId());
  Assert.assertEquals(existingPortlet.getPortletId(),newPortlet.getPortletId());
  Assert.assertEquals(existingPortlet.getRoles(),newPortlet.getRoles());
  Assert.assertEquals(existingPortlet.getActive(),newPortlet.getActive());
}

{
  Map<String,String> distributionScopes=new LinkedHashMap<>();
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  if (PortalPermissionUtil.contains(permissionChecker,ActionKeys.ADD_GENERAL_ANNOUNCEMENTS)) {
    distributionScopes.put("general","0,0");
  }
  List<Group> groups=AnnouncementsUtil.getGroups(themeDisplay);
  for (  Group group : groups) {
    distributionScopes.put(group.getDescriptiveName(themeDisplay.getLocale()) + " (" + LanguageUtil.get(_request,"site")+ ")",PortalUtil.getClassNameId(Group.class) + StringPool.COMMA + group.getGroupId());
  }
  List<Organization> organizations=AnnouncementsUtil.getOrganizations(themeDisplay);
  for (  Organization organization : organizations) {
    distributionScopes.put(organization.getName() + " (" + LanguageUtil.get(_request,"organization")+ ")",PortalUtil.getClassNameId(Organization.class) + StringPool.COMMA + organization.getOrganizationId());
  }
  List<Role> roles=AnnouncementsUtil.getRoles(themeDisplay);
  for (  Role role : roles) {
    distributionScopes.put(role.getDescriptiveName() + " (" + LanguageUtil.get(_request,"role")+ ")",PortalUtil.getClassNameId(Role.class) + StringPool.COMMA + role.getRoleId());
  }
  List<UserGroup> userGroups=AnnouncementsUtil.getUserGroups(themeDisplay);
  for (  UserGroup userGroup : userGroups) {
    distributionScopes.put(userGroup.getName() + " (" + LanguageUtil.get(_request,"user-group")+ ")",PortalUtil.getClassNameId(UserGroup.class) + StringPool.COMMA + userGroup.getUserGroupId());
  }
  return distributionScopes;
}

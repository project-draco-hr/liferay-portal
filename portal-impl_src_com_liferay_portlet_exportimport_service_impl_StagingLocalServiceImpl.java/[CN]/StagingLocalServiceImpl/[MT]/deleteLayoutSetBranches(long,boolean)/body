{
  Map<Long,LayoutRevision> layoutRevisions=new HashMap<>();
  List<LayoutSetBranch> layoutSetBranches=layoutSetBranchLocalService.getLayoutSetBranches(groupId,privateLayout);
  boolean publishedToLive=false;
  for (  LayoutSetBranch layoutSetBranch : layoutSetBranches) {
    String lastPublishDateString=layoutSetBranch.getSettingsProperty("last-publish-date");
    if (Validator.isNotNull(lastPublishDateString)) {
      publishedToLive=true;
      break;
    }
  }
  for (  LayoutSetBranch layoutSetBranch : layoutSetBranches) {
    String lastPublishDateString=layoutSetBranch.getSettingsProperty("last-publish-date");
    if (Validator.isNull(lastPublishDateString) && publishedToLive) {
      continue;
    }
    Date lastPublishDate=null;
    if (Validator.isNotNull(lastPublishDateString)) {
      lastPublishDate=new Date(GetterUtil.getLong(lastPublishDateString));
    }
    List<LayoutRevision> headLayoutRevisions=layoutRevisionLocalService.getLayoutRevisions(layoutSetBranch.getLayoutSetBranchId(),true);
    for (    LayoutRevision headLayoutRevision : headLayoutRevisions) {
      LayoutRevision layoutRevision=layoutRevisions.get(headLayoutRevision.getPlid());
      if (layoutRevision == null) {
        layoutRevisions.put(headLayoutRevision.getPlid(),headLayoutRevision);
        continue;
      }
      Date statusDate=headLayoutRevision.getStatusDate();
      if (statusDate.after(layoutRevision.getStatusDate()) && ((lastPublishDate == null) || lastPublishDate.after(statusDate))) {
        layoutRevisions.put(headLayoutRevision.getPlid(),headLayoutRevision);
      }
    }
  }
  for (  LayoutRevision layoutRevision : layoutRevisions.values()) {
    updateLayoutWithLayoutRevision(layoutRevision);
  }
  layoutSetBranchLocalService.deleteLayoutSetBranches(groupId,privateLayout,true);
}

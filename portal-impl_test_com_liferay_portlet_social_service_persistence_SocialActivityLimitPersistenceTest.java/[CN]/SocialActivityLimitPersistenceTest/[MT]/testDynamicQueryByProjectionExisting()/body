{
  SocialActivityLimit newSocialActivityLimit=addSocialActivityLimit();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialActivityLimit.class,SocialActivityLimit.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("activityLimitId"));
  Object newActivityLimitId=newSocialActivityLimit.getActivityLimitId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("activityLimitId",new Object[]{newActivityLimitId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingActivityLimitId=result.get(0);
  assertEquals(existingActivityLimitId,newActivityLimitId);
}

{
  Object[] finderArgs=new Object[]{new Long(classNameId),new Long(classPK),new Integer(type),new Long(receiverUserId),new Integer(status)};
  List<SocialRequest> list=(List<SocialRequest>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C_T_R_S,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_SOCIALREQUEST_WHERE);
      query.append(_FINDER_COLUMN_C_C_T_R_S_CLASSNAMEID_2);
      query.append(_FINDER_COLUMN_C_C_T_R_S_CLASSPK_2);
      query.append(_FINDER_COLUMN_C_C_T_R_S_TYPE_2);
      query.append(_FINDER_COLUMN_C_C_T_R_S_RECEIVERUSERID_2);
      query.append(_FINDER_COLUMN_C_C_T_R_S_STATUS_2);
      query.append(" ORDER BY ");
      query.append("socialRequest.requestId DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(classNameId);
      qPos.add(classPK);
      qPos.add(type);
      qPos.add(receiverUserId);
      qPos.add(status);
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<SocialRequest>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C_T_R_S,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

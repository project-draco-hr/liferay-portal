{
  Object[] finderArgs=new Object[]{new Long(userId),new Long(classNameId),new Long(classPK),new Integer(type),new Integer(status)};
  List<SocialRequest> list=(List<SocialRequest>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C_T_S,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT socialRequest FROM SocialRequest socialRequest WHERE ");
      query.append("socialRequest.userId = ?");
      query.append(" AND ");
      query.append("socialRequest.classNameId = ?");
      query.append(" AND ");
      query.append("socialRequest.classPK = ?");
      query.append(" AND ");
      query.append("socialRequest.type = ?");
      query.append(" AND ");
      query.append("socialRequest.status = ?");
      query.append(" ");
      query.append("ORDER BY ");
      query.append("socialRequest.requestId DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(classNameId);
      qPos.add(classPK);
      qPos.add(type);
      qPos.add(status);
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<SocialRequest>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C_T_S,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

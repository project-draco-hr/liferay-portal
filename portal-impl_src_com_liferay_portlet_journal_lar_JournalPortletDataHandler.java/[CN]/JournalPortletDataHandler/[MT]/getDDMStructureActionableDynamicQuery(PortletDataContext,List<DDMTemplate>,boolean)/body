{
  return new DDMStructureExportActionableDynamicQuery(portletDataContext){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      super.addCriteria(dynamicQuery);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      long classNameId=PortalUtil.getClassNameId(JournalArticle.class);
      dynamicQuery.add(classNameIdProperty.eq(classNameId));
    }
    @Override protected String getManifestSummaryKey(){
      return ManifestSummary.getManifestSummaryKey(DDMStructure.class.getName(),JournalArticle.class.getName());
    }
    @Override protected void performAction(    Object object) throws PortalException {
      DDMStructure ddmStructure=(DDMStructure)object;
      if (export) {
        StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmStructure);
      }
      try {
        ddmTemplates.addAll(ddmStructure.getTemplates());
      }
 catch (      SystemException se) {
      }
    }
  }
;
}

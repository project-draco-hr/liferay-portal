{
  ActionableDynamicQuery actionableDynamicQuery=JournalArticleLocalServiceUtil.getExportActionableDynamicQuery(portletDataContext);
  final ActionableDynamicQuery.AddCriteriaMethod addCriteriaMethod=actionableDynamicQuery.getAddCriteriaMethod();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      addCriteriaMethod.addCriteria(dynamicQuery);
      if (portletDataContext.getBooleanParameter(NAMESPACE,"version-history")) {
        return;
      }
      DynamicQuery articleVersionDynamicQuery=DynamicQueryFactoryUtil.forClass(JournalArticle.class,"articleVersion",PortalClassLoaderUtil.getClassLoader());
      articleVersionDynamicQuery.setProjection(ProjectionFactoryUtil.alias(ProjectionFactoryUtil.max("articleVersion.version"),"articleVersion.version"));
      articleVersionDynamicQuery.add(RestrictionsFactoryUtil.eqProperty("this.resourcePrimKey","articleVersion.resourcePrimKey"));
      Property versionProperty=PropertyFactoryUtil.forName("version");
      dynamicQuery.add(versionProperty.eq(articleVersionDynamicQuery));
    }
  }
);
  return actionableDynamicQuery;
}

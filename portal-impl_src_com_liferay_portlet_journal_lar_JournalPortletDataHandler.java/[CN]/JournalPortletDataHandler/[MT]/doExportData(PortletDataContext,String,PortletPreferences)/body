{
  portletDataContext.addPermissions("com.liferay.portlet.journal",portletDataContext.getScopeGroupId());
  Element rootElement=addExportRootElement();
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  Element ddmStructuresElement=rootElement.addElement("ddm-structures");
  List<DDMStructure> ddmStructures=DDMStructureUtil.findByG_C(portletDataContext.getScopeGroupId(),PortalUtil.getClassNameId(JournalArticle.class),QueryUtil.ALL_POS,QueryUtil.ALL_POS,new StructureIdComparator(true));
  List<DDMTemplate> ddmTemplates=new ArrayList<DDMTemplate>();
  for (  DDMStructure ddmStructure : ddmStructures) {
    if (portletDataContext.isWithinDateRange(ddmStructure.getModifiedDate())) {
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmStructuresElement,ddmStructure);
    }
    ddmTemplates.addAll(ddmStructure.getTemplates());
  }
  Element ddmTemplatesElement=rootElement.addElement("ddm-templates");
  Element dlFileEntryTypesElement=rootElement.addElement("dl-file-entry-types");
  Element dlFoldersElement=rootElement.addElement("dl-folders");
  Element dlFilesElement=rootElement.addElement("dl-file-entries");
  Element dlFileRanksElement=rootElement.addElement("dl-file-ranks");
  Element dlRepositoriesElement=rootElement.addElement("dl-repositories");
  Element dlRepositoryEntriesElement=rootElement.addElement("dl-repository-entries");
  for (  DDMTemplate ddmTemplate : ddmTemplates) {
    if (portletDataContext.isWithinDateRange(ddmTemplate.getModifiedDate())) {
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmTemplatesElement,ddmTemplate);
    }
  }
  Element feedsElement=rootElement.addElement("feeds");
  List<JournalFeed> feeds=JournalFeedUtil.findByGroupId(portletDataContext.getScopeGroupId());
  for (  JournalFeed feed : feeds) {
    if (portletDataContext.isWithinDateRange(feed.getModifiedDate())) {
      exportFeed(portletDataContext,feedsElement,feed);
    }
  }
  Element foldersElement=rootElement.addElement("folders");
  Element articlesElement=rootElement.addElement("articles");
  if (portletDataContext.getBooleanParameter(NAMESPACE,"web-content")) {
    List<JournalFolder> folders=JournalFolderUtil.findByGroupId(portletDataContext.getScopeGroupId());
    for (    JournalFolder folder : folders) {
      exportFolder(portletDataContext,foldersElement,articlesElement,ddmStructuresElement,ddmTemplatesElement,dlFileEntryTypesElement,dlFoldersElement,dlFilesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,folder,true);
    }
    List<JournalArticle> articles=JournalArticleUtil.findByG_F(portletDataContext.getScopeGroupId(),JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new ArticleIDComparator(true));
    for (    JournalArticle article : articles) {
      if (portletDataContext.getBooleanParameter(NAMESPACE,"version-history") || JournalArticleLocalServiceUtil.isLatestVersion(article.getGroupId(),article.getArticleId(),article.getVersion(),WorkflowConstants.STATUS_APPROVED)) {
        exportArticle(portletDataContext,articlesElement,ddmStructuresElement,ddmTemplatesElement,dlFileEntryTypesElement,dlFoldersElement,dlFilesElement,dlFileRanksElement,dlRepositoriesElement,dlRepositoryEntriesElement,article,true);
      }
    }
  }
  return rootElement.formattedString();
}

{
  ExportActionableDynamicQuery exportActionableDynamicQuery=DDMTemplateLocalServiceUtil.getExportActionableDynamicQuery(portletDataContext);
  final ActionableDynamicQuery.AddCriteriaMethod addCriteriaMethod=exportActionableDynamicQuery.getAddCriteriaMethod();
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      addCriteriaMethod.addCriteria(dynamicQuery);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      long classNameId=PortalUtil.getClassNameId(DDMStructure.class);
      dynamicQuery.add(classNameIdProperty.eq(classNameId));
    }
  }
);
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
    @Override public void performAction(    Object object) throws PortalException {
      DDMTemplate ddmTemplate=(DDMTemplate)object;
      if (export) {
        StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,ddmTemplate);
      }
      ddmTemplates.remove(ddmTemplate);
    }
  }
);
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(DDMTemplate.class.getName(),DDMStructure.class.getName()));
  return exportActionableDynamicQuery;
}

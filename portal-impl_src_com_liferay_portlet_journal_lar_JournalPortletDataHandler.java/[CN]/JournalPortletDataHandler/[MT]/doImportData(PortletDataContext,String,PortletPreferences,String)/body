{
  portletDataContext.importPermissions("com.liferay.portlet.journal",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Element rootElement=portletDataContext.getImportDataRootElement();
  importReferencedData(portletDataContext,rootElement);
  Element ddmStructuresElement=portletDataContext.getImportDataGroupElement(DDMStructure.class);
  List<Element> ddmStructureElements=ddmStructuresElement.elements();
  for (  Element ddmStructureElement : ddmStructureElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmStructureElement);
  }
  Element ddmTemplatesElement=portletDataContext.getImportDataGroupElement(DDMTemplate.class);
  List<Element> ddmTemplateElements=ddmTemplatesElement.elements();
  for (  Element ddmTemplateElement : ddmTemplateElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmTemplateElement);
  }
  Element feedsElement=rootElement.element("feeds");
  List<Element> feedElements=feedsElement.elements("feed");
  for (  Element feedElement : feedElements) {
    importFeed(portletDataContext,feedElement);
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"web-content")) {
    Element foldersElement=rootElement.element("folders");
    List<Element> folderElements=foldersElement.elements("folder");
    for (    Element folderElement : folderElements) {
      importFolder(portletDataContext,folderElement);
    }
    Element articlesElement=rootElement.element("articles");
    List<Element> articleElements=articlesElement.elements("article");
    for (    Element articleElement : articleElements) {
      try {
        importArticle(portletDataContext,articleElement);
      }
 catch (      ArticleContentException ace) {
        if (_log.isWarnEnabled()) {
          String path=articleElement.attributeValue("path");
          _log.warn("Skipping article with path " + path + " because of invalid content");
        }
      }
    }
  }
  return portletPreferences;
}

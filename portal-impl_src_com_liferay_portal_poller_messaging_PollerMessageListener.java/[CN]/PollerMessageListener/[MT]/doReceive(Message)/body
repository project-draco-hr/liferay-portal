{
  PollerRequestResponsePair pollerRequestResponsePair=(PollerRequestResponsePair)message.getPayload();
  PollerRequest pollerRequest=pollerRequestResponsePair.getPollerRequest();
  PollerResponse pollerResponse=pollerRequestResponsePair.getPollerResponse();
  String portletId=pollerRequest.getPortletId();
  PollerProcessor pollerProcessor=PollerProcessorUtil.getPollerProcessor(portletId);
  if (pollerRequest.isReceiveRequest()) {
    String responseDestinationName=message.getResponseDestinationName();
    if (Validator.isNotNull(responseDestinationName) && Validator.isNotNull(pollerResponse)) {
      Message responseMessage=MessageBusUtil.createResponseMessage(message);
      responseMessage.setPayload(pollerResponse);
      pollerResponse.setResponseMessage(responseMessage);
    }
    try {
      pollerProcessor.receive(pollerRequest,pollerResponse);
    }
 catch (    PollerException pe) {
      _log.error("Unable to receive poller request " + pollerRequest,pe);
      pollerResponse.setParameter("pollerException",pe.getMessage());
    }
 finally {
      if (!pollerProcessor.isAsynchronousProcessing()) {
        pollerResponse.close();
      }
    }
  }
 else {
    try {
      pollerProcessor.send(pollerRequest);
    }
 catch (    PollerException pe) {
      _log.error("Unable to send poller request " + pollerRequest,pe);
    }
  }
}

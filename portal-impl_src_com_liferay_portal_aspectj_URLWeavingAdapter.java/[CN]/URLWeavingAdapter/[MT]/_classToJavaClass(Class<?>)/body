{
  ClassLoader aspectClassLoader=aspectClass.getClassLoader();
  if (aspectClassLoader == null) {
    aspectClassLoader=ClassLoader.getSystemClassLoader();
  }
  String resourcePath=aspectClass.getName();
  resourcePath=resourcePath.replace('.','/') + ".class";
  ByteArrayInputStream byteArrayInputStream=null;
  InputStream inputStream=aspectClassLoader.getResourceAsStream(resourcePath);
  if (inputStream instanceof ByteArrayInputStream) {
    byteArrayInputStream=(ByteArrayInputStream)inputStream;
  }
 else {
    try {
      UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
      StreamUtil.transfer(inputStream,unsyncByteArrayOutputStream,true);
      byte[] classData=unsyncByteArrayOutputStream.unsafeGetByteArray();
      byteArrayInputStream=new ByteArrayInputStream(classData,0,unsyncByteArrayOutputStream.size());
    }
 catch (    IOException ioe) {
      throw new RuntimeException("Unable to reload class data",ioe);
    }
  }
  ClassParser classParser=new ClassParser(byteArrayInputStream,aspectClass.getSimpleName() + ".class");
  try {
    return classParser.parse();
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to parse class data",e);
  }
}

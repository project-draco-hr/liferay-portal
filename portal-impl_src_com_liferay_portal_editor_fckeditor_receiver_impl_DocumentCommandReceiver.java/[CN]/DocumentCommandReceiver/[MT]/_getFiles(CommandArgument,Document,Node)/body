{
  Element filesElement=document.createElement("Files");
  rootNode.appendChild(filesElement);
  if (Validator.isNull(commandArgument.getCurrentGroupName())) {
    return;
  }
  Group group=commandArgument.getCurrentGroup();
  Folder folder=_getFolder(group.getGroupId(),commandArgument.getCurrentFolder());
  List<FileEntry> fileEntries=DLAppServiceUtil.getFileEntries(folder.getRepositoryId(),folder.getFolderId());
  for (  FileEntry fileEntry : fileEntries) {
    Element fileElement=document.createElement("File");
    filesElement.appendChild(fileElement);
    fileElement.setAttribute("name",fileEntry.getTitle());
    fileElement.setAttribute("desc",fileEntry.getTitle());
    fileElement.setAttribute("size",getSize(fileEntry.getSize()));
    StringBundler sb=new StringBundler(8);
    sb.append("/documents/");
    sb.append(group.getGroupId());
    sb.append(StringPool.SLASH);
    sb.append(fileEntry.getFolderId());
    sb.append(StringPool.SLASH);
    sb.append(HttpUtil.encodeURL(fileEntry.getTitle()));
    Set<String> imageMimeTypes=ImageProcessor.getImageMimeTypes();
    if (imageMimeTypes.contains(fileEntry.getMimeType())) {
      sb.append("&t=");
      FileVersion fileVersion=fileEntry.getFileVersion();
      sb.append(WebServerServletTokenUtil.getToken(fileVersion.getFileVersionId()));
    }
    fileElement.setAttribute("url",sb.toString());
  }
}

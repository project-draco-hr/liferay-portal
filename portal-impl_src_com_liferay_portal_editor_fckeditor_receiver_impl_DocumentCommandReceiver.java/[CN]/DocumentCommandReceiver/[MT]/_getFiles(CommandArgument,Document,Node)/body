{
  Element filesElement=document.createElement("Files");
  rootNode.appendChild(filesElement);
  if (Validator.isNull(commandArgument.getCurrentGroupName())) {
    return;
  }
  Group group=commandArgument.getCurrentGroup();
  Folder folder=_getFolder(group.getGroupId(),commandArgument.getCurrentFolder());
  List<FileEntry> fileEntries=DLAppServiceUtil.getFileEntries(group.getGroupId(),folder.getFolderId());
  for (  FileEntry fileEntry : fileEntries) {
    Element fileElement=document.createElement("File");
    filesElement.appendChild(fileElement);
    fileElement.setAttribute("name",fileEntry.getTitle());
    fileElement.setAttribute("desc",fileEntry.getTitle());
    fileElement.setAttribute("size",getSize(fileEntry.getSize()));
    boolean hasImages=ImageProcessor.hasImages(fileEntry.getFileVersion());
    StringBundler url=null;
    if (hasImages) {
      url=new StringBundler(7);
      ThemeDisplay themeDisplay=commandArgument.getThemeDisplay();
      long largeImageId=fileEntry.getLargeImageId();
      url.append(themeDisplay.getPathImage());
      url.append("/image_gallery?uuid=");
      url.append(fileEntry.getUuid());
      url.append("&groupId=");
      url.append(folder.getGroupId());
      url.append("&t=");
      url.append(ImageServletTokenUtil.getToken(largeImageId));
    }
 else {
      url=new StringBundler(6);
      url.append("/documents/");
      url.append(group.getGroupId());
      url.append(StringPool.SLASH);
      url.append(fileEntry.getFolderId());
      url.append(StringPool.SLASH);
      url.append(HttpUtil.encodeURL(fileEntry.getTitle()));
    }
    fileElement.setAttribute("url",url.toString());
  }
}

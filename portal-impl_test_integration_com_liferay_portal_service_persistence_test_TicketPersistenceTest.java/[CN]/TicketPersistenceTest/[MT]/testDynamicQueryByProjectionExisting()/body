{
  Ticket newTicket=addTicket();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(Ticket.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("ticketId"));
  Object newTicketId=newTicket.getTicketId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("ticketId",new Object[]{newTicketId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingTicketId=result.get(0);
  Assert.assertEquals(existingTicketId,newTicketId);
}

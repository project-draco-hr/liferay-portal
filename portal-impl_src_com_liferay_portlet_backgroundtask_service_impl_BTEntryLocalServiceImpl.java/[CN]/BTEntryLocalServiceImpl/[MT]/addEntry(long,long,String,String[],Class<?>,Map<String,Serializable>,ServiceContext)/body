{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  final long entryId=counterLocalService.increment();
  BTEntry entry=btEntryPersistence.create(entryId);
  entry.setCompanyId(user.getCompanyId());
  entry.setCreateDate(serviceContext.getCreateDate(now));
  entry.setGroupId(groupId);
  entry.setModifiedDate(serviceContext.getModifiedDate(now));
  entry.setUserId(userId);
  entry.setUserName(user.getFullName());
  entry.setName(name);
  entry.setServletContextNames(StringUtil.merge(servletContextNames));
  entry.setTaskExecutorClassName(taskExecutorClass.getName());
  if (taskContextMap != null) {
    String taskContext=JSONFactoryUtil.serialize(taskContextMap);
    entry.setTaskContext(taskContext);
  }
  entry.setStatus(BTEntryConstants.STATUS_NEW);
  btEntryPersistence.update(entry);
  TransactionCommitCallbackRegistryUtil.registerCallback(new Callable<Void>(){
    public Void call() throws Exception {
      Message message=new Message();
      message.put("entryId",entryId);
      MessageBusUtil.sendMessage(DestinationNames.BACKGROUND_TASK,message);
      return null;
    }
  }
);
  return entry;
}

{
  String customizableKey=CustomizedPages.namespaceColumnId(columnId);
  boolean customizable=false;
  if (_customizationEnabled) {
    customizable=GetterUtil.getBoolean(_layoutTypeSettings.getProperty(customizableKey,String.valueOf(false)));
  }
  _writer.append("<div class=\"");
  _writer.append(classNames);
  _writer.append("\">");
  _writer.append("<h1>");
  _writer.append(columnId);
  _writer.append("</h1>");
  Object inputTag=_inputTagClass.newInstance();
  BeanPropertiesUtil.setProperty(inputTag,"disabled",!_customizationEnabled);
  BeanPropertiesUtil.setProperty(inputTag,"label","customizable");
  BeanPropertiesUtil.setProperty(inputTag,"name","TypeSettingsProperties--".concat(customizableKey).concat("--"));
  BeanPropertiesUtil.setProperty(inputTag,"pageContext",_pageContext);
  BeanPropertiesUtil.setProperty(inputTag,"type","checkbox");
  BeanPropertiesUtil.setProperty(inputTag,"value",customizable);
  Method method=_inputTagClass.getMethod(_doStartTagMethodKey.getMethodName(),_doStartTagMethodKey.getParameterTypes());
  int result=(Integer)method.invoke(inputTag,new Object[]{});
  if (result == Tag.EVAL_BODY_INCLUDE) {
    method=_inputTagClass.getMethod(_doEndTagMethodKey.getMethodName(),_doEndTagMethodKey.getParameterTypes());
    result=(Integer)method.invoke(inputTag,new Object[]{});
  }
  _writer.append("</div>");
  return StringPool.BLANK;
}

{
  contact=toUnwrappedModel(contact);
  boolean isNew=contact.isNew();
  ContactModelImpl contactModelImpl=(ContactModelImpl)contact;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (contact.getCreateDate() == null)) {
    if (serviceContext == null) {
      contact.setCreateDate(now);
    }
 else {
      contact.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!contactModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      contact.setModifiedDate(now);
    }
 else {
      contact.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (contact.isNew()) {
      session.save(contact);
      contact.setNew(false);
    }
 else {
      contact=(Contact)session.merge(contact);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !ContactModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((contactModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{contactModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{contactModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((contactModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ACCOUNTID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{contactModelImpl.getOriginalAccountId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_ACCOUNTID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ACCOUNTID,args);
      args=new Object[]{contactModelImpl.getAccountId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_ACCOUNTID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_ACCOUNTID,args);
    }
    if ((contactModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{contactModelImpl.getOriginalClassNameId(),contactModelImpl.getOriginalClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{contactModelImpl.getClassNameId(),contactModelImpl.getClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
  }
  entityCache.putResult(ContactModelImpl.ENTITY_CACHE_ENABLED,ContactImpl.class,contact.getPrimaryKey(),contact,false);
  contact.resetOriginalValues();
  return contact;
}

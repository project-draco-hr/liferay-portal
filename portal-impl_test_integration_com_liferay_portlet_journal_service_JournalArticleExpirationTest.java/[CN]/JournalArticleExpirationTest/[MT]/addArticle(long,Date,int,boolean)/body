{
  Map<Locale,String> titleMap=new HashMap<>();
  titleMap.put(LocaleUtil.getDefault(),RandomTestUtil.randomString());
  Map<Locale,String> descriptionMap=new HashMap<>();
  descriptionMap.put(LocaleUtil.getDefault(),RandomTestUtil.randomString());
  String content=DDMStructureTestUtil.getSampleStructuredContent();
  DDMStructure ddmStructure=DDMStructureTestUtil.addStructure(groupId,JournalArticle.class.getName());
  DDMTemplate ddmTemplate=DDMTemplateTestUtil.addTemplate(groupId,ddmStructure.getStructureId());
  Calendar displayDateCalendar=getCalendar(new Date(),when);
  Calendar expirationDateCalendar=getCalendar(expirationDate,when);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(groupId);
  if (approved) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  }
 else {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  }
  return JournalArticleLocalServiceUtil.addArticle(TestPropsValues.getUserId(),groupId,JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,JournalArticleConstants.CLASSNAME_ID_DEFAULT,0,StringPool.BLANK,true,JournalArticleConstants.VERSION_DEFAULT,titleMap,descriptionMap,content,ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey(),null,displayDateCalendar.get(Calendar.MONTH),displayDateCalendar.get(Calendar.DAY_OF_MONTH),displayDateCalendar.get(Calendar.YEAR),displayDateCalendar.get(Calendar.HOUR_OF_DAY),displayDateCalendar.get(Calendar.MINUTE),expirationDateCalendar.get(Calendar.MONTH),expirationDateCalendar.get(Calendar.DAY_OF_MONTH),expirationDateCalendar.get(Calendar.YEAR),expirationDateCalendar.get(Calendar.HOUR_OF_DAY),expirationDateCalendar.get(Calendar.MINUTE),true,0,0,0,0,0,true,true,false,null,null,null,null,serviceContext);
}

{
  String servletContextName=null;
  try {
    ServletContext ctx=event.getServletContext();
    servletContextName=ctx.getServletContextName();
    if (_log.isDebugEnabled()) {
      _log.debug("Invoking undeploy for " + servletContextName);
    }
    ObjectValuePair ovp=(ObjectValuePair)_vars.remove(servletContextName);
    if (ovp == null) {
      return;
    }
    long[] companyIds=(long[])ovp.getKey();
    List portlets=(List)ovp.getValue();
    Set portletIds=new HashSet();
    if (portlets != null) {
      if (_log.isInfoEnabled()) {
        _log.info("Unregistering portlets for " + servletContextName);
      }
      Iterator itr=portlets.iterator();
      while (itr.hasNext()) {
        Portlet portlet=(Portlet)itr.next();
        SMTPServerUtil.deleteListener(portlet.getSmtpMessageListener());
        PortletInstanceFactory.destroy(portlet);
        portletIds.add(portlet.getPortletId());
      }
    }
    if (portletIds.size() > 0) {
      for (int i=0; i < companyIds.length; i++) {
        long companyId=companyIds[i];
        PortletCategory portletCategory=(PortletCategory)WebAppPool.get(String.valueOf(companyId),WebKeys.PORTLET_CATEGORY);
        portletCategory.separate(portletIds);
      }
    }
    PortletResourceBundles.remove(servletContextName);
    if (_log.isInfoEnabled()) {
      _log.info("Portlets for " + servletContextName + " unregistered successfully");
    }
  }
 catch (  Exception e) {
    throw new HotDeployException("Error unregistering portlets for " + servletContextName,e);
  }
}

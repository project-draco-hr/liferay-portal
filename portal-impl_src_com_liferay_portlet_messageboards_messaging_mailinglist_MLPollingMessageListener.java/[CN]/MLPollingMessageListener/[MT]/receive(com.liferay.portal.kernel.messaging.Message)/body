{
  MailingListRequest mailingListRequest=(MailingListRequest)JSONFactoryUtil.deserialize((String)message.getPayload());
  Folder folder=null;
  Message[] messages=null;
  try {
    folder=getFolder(mailingListRequest);
    messages=folder.getMessages();
    for (    Message mailMessage : messages) {
      if (_messageProcessor.accept(mailMessage)) {
        _messageProcessor.deliver(mailingListRequest,mailMessage);
      }
    }
  }
 catch (  Exception e) {
    _log.error("Error retrieving messages from " + mailingListRequest,e);
  }
 finally {
    if ((folder != null) && folder.isOpen()) {
      try {
        folder.setFlags(messages,new Flags(Flags.Flag.DELETED),true);
      }
 catch (      Exception e) {
        if (_log.isErrorEnabled()) {
          _log.error("Unable to flag messages deleted",e);
        }
      }
      try {
        folder.close(true);
      }
 catch (      Exception e) {
        if (_log.isErrorEnabled()) {
          _log.error("Unable to close inbox",e);
        }
      }
    }
  }
}

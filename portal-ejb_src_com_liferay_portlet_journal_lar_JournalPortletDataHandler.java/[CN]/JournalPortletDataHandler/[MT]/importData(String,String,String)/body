{
  try {
    SAXReader reader=SAXReaderFactory.getInstance();
    XStream xStream=new XStream();
    Document doc=reader.read(new StringReader(data));
    Element root=doc.getRootElement();
    Element el=root.element("articles").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List articles=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    Iterator itr=articles.iterator();
    while (itr.hasNext()) {
      JournalArticle article=(JournalArticle)itr.next();
      article.setGroupId(groupId);
      JournalArticleUtil.update(article,true);
    }
    el=root.element("structures").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List structures=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=structures.iterator();
    while (itr.hasNext()) {
      JournalStructure structure=(JournalStructure)itr.next();
      structure.setGroupId(groupId);
      JournalStructureUtil.update(structure,true);
    }
    el=root.element("templates").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List templates=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=templates.iterator();
    while (itr.hasNext()) {
      JournalTemplate template=(JournalTemplate)itr.next();
      template.setGroupId(groupId);
      JournalTemplateUtil.update(template,true);
    }
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

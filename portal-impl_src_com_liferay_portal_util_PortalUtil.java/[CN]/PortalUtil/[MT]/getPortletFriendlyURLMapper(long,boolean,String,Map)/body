{
  String friendlyURL=url;
  String queryString=StringPool.BLANK;
  Map friendlyURLMappers=PortletLocalServiceUtil.getFriendlyURLMappers();
  Iterator itr=friendlyURLMappers.entrySet().iterator();
  while (itr.hasNext()) {
    Map.Entry entry=(Map.Entry)itr.next();
    String className=(String)entry.getValue();
    FriendlyURLMapper friendlyURLMapper=(FriendlyURLMapper)InstancePool.get(className);
    if (url.endsWith(StringPool.SLASH + friendlyURLMapper.getMapping())) {
      url+=StringPool.SLASH;
    }
    int pos=url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH);
    if (pos != -1) {
      friendlyURL=url.substring(0,pos);
      Map actualParams=null;
      if (params != null) {
        actualParams=new HashMap(params);
      }
 else {
        actualParams=new HashMap();
      }
      friendlyURLMapper.populateParams(url.substring(pos),actualParams);
      queryString=StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams,false);
      break;
    }
  }
  friendlyURL=StringUtil.replace(friendlyURL,StringPool.DOUBLE_SLASH,StringPool.SLASH);
  if (friendlyURL.endsWith(StringPool.SLASH)) {
    friendlyURL=friendlyURL.substring(0,friendlyURL.length() - 1);
  }
  Layout layout=null;
  try {
    layout=LayoutLocalServiceUtil.getFriendlyURLLayout(groupId,privateLayout,friendlyURL);
  }
 catch (  NoSuchLayoutException nsle) {
    long layoutId=GetterUtil.getLong(friendlyURL.substring(1));
    layout=LayoutLocalServiceUtil.getLayout(groupId,privateLayout,layoutId);
  }
  return new Object[]{layout,queryString};
}

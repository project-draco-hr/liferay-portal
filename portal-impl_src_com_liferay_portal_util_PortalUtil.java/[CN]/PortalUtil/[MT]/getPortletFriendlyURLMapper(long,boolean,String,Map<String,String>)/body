{
  String friendlyURL=url;
  String queryString=StringPool.BLANK;
  List<FriendlyURLMapper> friendlyURLMappers=PortletLocalServiceUtil.getFriendlyURLMappers();
  Iterator<FriendlyURLMapper> itr=friendlyURLMappers.iterator();
  while (itr.hasNext()) {
    FriendlyURLMapper friendlyURLMapper=itr.next();
    if (url.endsWith(StringPool.SLASH + friendlyURLMapper.getMapping())) {
      url+=StringPool.SLASH;
    }
    int pos=url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH);
    if (pos != -1) {
      friendlyURL=url.substring(0,pos);
      Map<String,String> actualParams=null;
      if (params != null) {
        actualParams=new HashMap<String,String>(params);
      }
 else {
        actualParams=new HashMap<String,String>();
      }
      friendlyURLMapper.populateParams(url.substring(pos),actualParams);
      queryString=StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams,false);
      break;
    }
  }
  friendlyURL=StringUtil.replace(friendlyURL,StringPool.DOUBLE_SLASH,StringPool.SLASH);
  if (friendlyURL.endsWith(StringPool.SLASH)) {
    friendlyURL=friendlyURL.substring(0,friendlyURL.length() - 1);
  }
  Layout layout=LayoutLocalServiceUtil.getFriendlyURLLayout(groupId,privateLayout,friendlyURL);
  return new Object[]{layout,queryString};
}

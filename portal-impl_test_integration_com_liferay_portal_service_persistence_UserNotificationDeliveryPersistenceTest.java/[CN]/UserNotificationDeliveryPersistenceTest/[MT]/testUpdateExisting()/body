{
  long pk=ServiceTestUtil.nextLong();
  UserNotificationDelivery newUserNotificationDelivery=_persistence.create(pk);
  newUserNotificationDelivery.setCompanyId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setUserId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setClassNameId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setType(ServiceTestUtil.nextInt());
  newUserNotificationDelivery.setEmail(ServiceTestUtil.randomBoolean());
  newUserNotificationDelivery.setSms(ServiceTestUtil.randomBoolean());
  newUserNotificationDelivery.setWebsite(ServiceTestUtil.randomBoolean());
  _persistence.update(newUserNotificationDelivery);
  UserNotificationDelivery existingUserNotificationDelivery=_persistence.findByPrimaryKey(newUserNotificationDelivery.getPrimaryKey());
  Assert.assertEquals(existingUserNotificationDelivery.getUserNotificationDeliveryId(),newUserNotificationDelivery.getUserNotificationDeliveryId());
  Assert.assertEquals(existingUserNotificationDelivery.getCompanyId(),newUserNotificationDelivery.getCompanyId());
  Assert.assertEquals(existingUserNotificationDelivery.getUserId(),newUserNotificationDelivery.getUserId());
  Assert.assertEquals(existingUserNotificationDelivery.getClassNameId(),newUserNotificationDelivery.getClassNameId());
  Assert.assertEquals(existingUserNotificationDelivery.getType(),newUserNotificationDelivery.getType());
  Assert.assertEquals(existingUserNotificationDelivery.getEmail(),newUserNotificationDelivery.getEmail());
  Assert.assertEquals(existingUserNotificationDelivery.getSms(),newUserNotificationDelivery.getSms());
  Assert.assertEquals(existingUserNotificationDelivery.getWebsite(),newUserNotificationDelivery.getWebsite());
}

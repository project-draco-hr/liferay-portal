{
  long pk=ServiceTestUtil.nextLong();
  UserNotificationDelivery newUserNotificationDelivery=_persistence.create(pk);
  newUserNotificationDelivery.setCompanyId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setUserId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setPortletId(ServiceTestUtil.randomString());
  newUserNotificationDelivery.setClassNameId(ServiceTestUtil.nextLong());
  newUserNotificationDelivery.setNotificationType(ServiceTestUtil.nextInt());
  newUserNotificationDelivery.setDeliveryType(ServiceTestUtil.nextInt());
  newUserNotificationDelivery.setDeliver(ServiceTestUtil.randomBoolean());
  newUserNotificationDelivery.setMvccVersion(ServiceTestUtil.nextLong());
  _persistence.update(newUserNotificationDelivery);
  UserNotificationDelivery existingUserNotificationDelivery=_persistence.findByPrimaryKey(newUserNotificationDelivery.getPrimaryKey());
  Assert.assertEquals(existingUserNotificationDelivery.getUserNotificationDeliveryId(),newUserNotificationDelivery.getUserNotificationDeliveryId());
  Assert.assertEquals(existingUserNotificationDelivery.getCompanyId(),newUserNotificationDelivery.getCompanyId());
  Assert.assertEquals(existingUserNotificationDelivery.getUserId(),newUserNotificationDelivery.getUserId());
  Assert.assertEquals(existingUserNotificationDelivery.getPortletId(),newUserNotificationDelivery.getPortletId());
  Assert.assertEquals(existingUserNotificationDelivery.getClassNameId(),newUserNotificationDelivery.getClassNameId());
  Assert.assertEquals(existingUserNotificationDelivery.getNotificationType(),newUserNotificationDelivery.getNotificationType());
  Assert.assertEquals(existingUserNotificationDelivery.getDeliveryType(),newUserNotificationDelivery.getDeliveryType());
  Assert.assertEquals(existingUserNotificationDelivery.getDeliver(),newUserNotificationDelivery.getDeliver());
  Assert.assertEquals(existingUserNotificationDelivery.getMvccVersion(),newUserNotificationDelivery.getMvccVersion());
}

{
  List<SearchResult> searchResults=new ArrayList<>();
  for (  Document document : hits.getDocs()) {
    String entryClassName=GetterUtil.getString(document.get(Field.ENTRY_CLASS_NAME));
    long entryClassPK=GetterUtil.getLong(document.get(Field.ENTRY_CLASS_PK));
    try {
      SearchResult searchResult=SearchResultManagerUtil.createSearchResult(document);
      int index=searchResults.indexOf(searchResult);
      if (index < 0) {
        searchResults.add(searchResult);
      }
 else {
        searchResult=searchResults.get(index);
      }
      FileEntry fileEntry=null;
      MBMessage mbMessage=null;
      if (entryClassName.equals(DLFileEntry.class.getName()) || entryClassName.equals(MBMessage.class.getName())) {
        long classNameId=GetterUtil.getLong(document.get(Field.CLASS_NAME_ID));
        long classPK=GetterUtil.getLong(document.get(Field.CLASS_PK));
        if ((classPK > 0) && (classNameId > 0)) {
          if (entryClassName.equals(DLFileEntry.class.getName())) {
            fileEntry=DLAppLocalServiceUtil.getFileEntry(entryClassPK);
          }
 else           if (entryClassName.equals(MBMessage.class.getName())) {
            mbMessage=MBMessageLocalServiceUtil.getMessage(entryClassPK);
          }
        }
      }
      if (fileEntry != null) {
        Summary summary=getSummary(document,DLFileEntry.class.getName(),fileEntry.getFileEntryId(),locale,portletRequest,portletResponse);
        searchResult.addFileEntry(fileEntry,summary);
      }
      if (mbMessage != null) {
        searchResult.addMBMessage(mbMessage);
      }
      if ((mbMessage == null) && (fileEntry == null)) {
        Summary summary=getSummary(document,searchResult.getClassName(),searchResult.getClassPK(),locale,portletRequest,portletResponse);
        searchResult.setSummary(summary);
      }
 else {
        if (searchResult.getSummary() == null) {
          Summary summary=getSummary(searchResult.getClassName(),searchResult.getClassPK(),locale);
          searchResult.setSummary(summary);
        }
      }
      String version=document.get(Field.VERSION);
      if (Validator.isNotNull(version)) {
        searchResult.addVersion(version);
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Search index is stale and contains entry {" + entryClassPK + "}");
      }
    }
  }
  return searchResults;
}

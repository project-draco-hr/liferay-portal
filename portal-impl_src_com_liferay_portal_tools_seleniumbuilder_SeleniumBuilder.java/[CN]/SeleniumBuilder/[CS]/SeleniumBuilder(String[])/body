{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  String baseDirName=arguments.get("selenium.base.dir");
  _seleniumBuilderContext=new SeleniumBuilderContext(baseDirName);
  _seleniumBuilderFileUtil=new SeleniumBuilderFileUtil(baseDirName);
  Set<String> types=SetUtil.fromArray(StringUtil.split(arguments.get("selenium.types")));
  if (types.contains("action")) {
    ActionConverter actionConverter=new ActionConverter(_seleniumBuilderContext);
    Set<String> actionNames=_seleniumBuilderContext.getActionNames();
    for (    String actionName : actionNames) {
      _seleniumBuilderContext.validateActionElements(actionName);
      actionConverter.convert(actionName);
    }
  }
  if (types.contains("function")) {
    FunctionConverter functionConverter=new FunctionConverter(_seleniumBuilderContext);
    Set<String> functionNames=_seleniumBuilderContext.getFunctionNames();
    for (    String functionName : functionNames) {
      _seleniumBuilderContext.validateFunctionElements(functionName);
      functionConverter.convert(functionName);
    }
  }
  if (types.contains("macro")) {
    MacroConverter macroConverter=new MacroConverter(_seleniumBuilderContext);
    Set<String> macroNames=_seleniumBuilderContext.getMacroNames();
    for (    String macroName : macroNames) {
      _seleniumBuilderContext.validateMacroElements(macroName);
      macroConverter.convert(macroName);
    }
  }
  if (types.contains("path")) {
    PathConverter pathConverter=new PathConverter(_seleniumBuilderContext);
    Set<String> pathNames=_seleniumBuilderContext.getPathNames();
    for (    String pathName : pathNames) {
      pathConverter.convert(pathName);
    }
  }
  if (types.contains("testcase")) {
    TestCaseConverter testCaseConverter=new TestCaseConverter(_seleniumBuilderContext);
    Set<String> testCaseNames=_seleniumBuilderContext.getTestCaseNames();
    for (    String testCaseName : testCaseNames) {
      _seleniumBuilderContext.validateTestCaseElements(testCaseName);
      testCaseConverter.convert(testCaseName);
    }
  }
  _writeTestCaseMethodNamesFile();
  _writeTestCasePropertiesFile();
  System.out.println("\nThere are " + _getTestCaseMethodCount() + " test cases.");
}

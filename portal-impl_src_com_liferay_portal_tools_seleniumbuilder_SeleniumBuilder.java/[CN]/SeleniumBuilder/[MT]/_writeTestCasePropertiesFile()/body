{
  Set<String> testCaseProperties=new TreeSet<>();
  Set<String> testCaseNames=_seleniumBuilderContext.getTestCaseNames();
  for (  String testCaseName : testCaseNames) {
    Element rootElement=_seleniumBuilderContext.getTestCaseRootElement(testCaseName);
    List<Element> rootPropertyElements=rootElement.elements("property");
    StringBundler sb=new StringBundler();
    sb.append(testCaseName);
    sb.append("TestCase.all.testray.testcase.product.edition=CE");
    testCaseProperties.add(sb.toString());
    for (    Element rootPropertyElement : rootPropertyElements) {
      sb=new StringBundler();
      sb.append(testCaseName);
      sb.append("TestCase.all.");
      String rootPropertyName=rootPropertyElement.attributeValue("name");
      sb.append(rootPropertyName);
      sb.append("=");
      sb.append(rootPropertyElement.attributeValue("value"));
      testCaseProperties.add(sb.toString());
      String rootPropertyDelimiter=rootPropertyElement.attributeValue("delimiter");
      if ((rootPropertyDelimiter != null) && rootPropertyName.equals("ignore.errors")) {
        sb=new StringBundler();
        sb.append(testCaseName);
        sb.append("TestCase.all.");
        sb.append(rootPropertyName);
        sb.append(".delimiter=");
        sb.append(rootPropertyDelimiter);
        testCaseProperties.add(sb.toString());
      }
    }
    List<Element> commandElements=_seleniumBuilderFileUtil.getAllChildElements(rootElement,"command");
    String extendsTestCaseName=rootElement.attributeValue("extends");
    if (extendsTestCaseName != null) {
      Element extendsRootElement=_seleniumBuilderContext.getTestCaseRootElement(extendsTestCaseName);
      commandElements.addAll(_seleniumBuilderFileUtil.getAllChildElements(extendsRootElement,"command"));
    }
    for (    Element commandElement : commandElements) {
      List<Element> commandPropertyElements=_seleniumBuilderFileUtil.getAllChildElements(commandElement,"property");
      for (      Element commandPropertyElement : commandPropertyElements) {
        sb=new StringBundler();
        sb.append(testCaseName);
        sb.append("TestCase.test");
        sb.append(commandElement.attributeValue("name"));
        sb.append(".");
        sb.append(commandPropertyElement.attributeValue("name"));
        sb.append("=");
        sb.append(commandPropertyElement.attributeValue("value"));
        testCaseProperties.add(sb.toString());
      }
      List<Attribute> commandAttributes=commandElement.attributes();
      for (      Attribute commandAttribute : commandAttributes) {
        String commandAttributeName=StringUtil.replace(commandAttribute.getName(),"-",".");
        if (commandAttributeName.equals("line.number") || commandAttributeName.equals("name")) {
          continue;
        }
        sb=new StringBundler();
        sb.append(testCaseName);
        sb.append("TestCase.test");
        sb.append(commandElement.attributeValue("name"));
        sb.append(".");
        sb.append(commandAttributeName);
        sb.append("=");
        sb.append(commandAttribute.getValue());
        testCaseProperties.add(sb.toString());
      }
    }
  }
  String testCasePropertiesString=StringUtil.merge(testCaseProperties.toArray(new String[testCaseProperties.size()]),StringPool.NEW_LINE);
  _seleniumBuilderFileUtil.writeFile("../../../test.generated.properties",testCasePropertiesString,false);
}

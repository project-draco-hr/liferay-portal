{
  com.liferay.portlet.journal.model.JournalArticle journalArticle=findByPrimaryKey(journalArticlePK);
  int count=countByC_T(companyId,templateId);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM JournalArticle IN CLASS com.liferay.portlet.journal.service.persistence.JournalArticleHBM WHERE ");
    if (companyId == null) {
      query.append("companyId is null");
    }
 else {
      query.append("companyId = ?");
    }
    query.append(" AND ");
    if (templateId == null) {
      query.append("templateId is null");
    }
 else {
      query.append("templateId = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("articleId ASC").append(", ");
      query.append("version DESC");
    }
    Query q=session.createQuery(query.toString());
    int queryPos=0;
    if (companyId != null) {
      q.setString(queryPos++,companyId);
    }
    if (templateId != null) {
      q.setString(queryPos++,templateId);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,journalArticle,JournalArticleHBMUtil.getInstance());
    com.liferay.portlet.journal.model.JournalArticle[] array=new com.liferay.portlet.journal.model.JournalArticle[3];
    array[0]=(com.liferay.portlet.journal.model.JournalArticle)objArray[0];
    array[1]=(com.liferay.portlet.journal.model.JournalArticle)objArray[1];
    array[2]=(com.liferay.portlet.journal.model.JournalArticle)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

{
  Gradle gradle=settings.getGradle();
  final WorkspaceExtension workspaceExtension=addWorkspaceExtension(settings);
  for (  ProjectConfigurator projectConfigurator : workspaceExtension.getProjectConfigurators()) {
    for (    File rootDir : projectConfigurator.getDefaultRootDirs()) {
      for (      File projectDir : projectConfigurator.getProjectDirs(rootDir)) {
        String projectPath=GradleUtil.getProjectPath(projectDir,settings.getRootDir());
        settings.include(new String[]{projectPath});
        _projectConfiguratorsMap.put(projectPath,projectConfigurator);
      }
    }
  }
  gradle.beforeProject(new Closure<Void>(settings){
    @SuppressWarnings("unused") public void doCall(    Project project){
      Plugin<Project> plugin=null;
      if (project.getParent() == null) {
        plugin=workspaceExtension.getRootProjectConfigurator();
      }
 else {
        plugin=_projectConfiguratorsMap.get(project.getPath());
      }
      if (plugin != null) {
        plugin.apply(project);
      }
    }
  }
);
}

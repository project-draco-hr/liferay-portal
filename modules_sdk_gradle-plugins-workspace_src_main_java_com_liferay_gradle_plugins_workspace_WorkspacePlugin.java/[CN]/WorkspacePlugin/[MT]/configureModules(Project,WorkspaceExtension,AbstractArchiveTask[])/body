{
  Project modulesProject=GradleUtil.getProject(project,workspaceExtension.getModulesDir());
  if (modulesProject == null) {
    return;
  }
  Action<Project> action=new Action<Project>(){
    @Override public void execute(    Project project){
      Set<Project> subprojects=project.getSubprojects();
      if (!subprojects.isEmpty()) {
        return;
      }
      GradleUtil.applyPlugin(project,LiferayPlugin.class);
      LiferayExtension liferayExtension=GradleUtil.getExtension(project,LiferayExtension.class);
      liferayExtension.setAppServerParentDir(workspaceExtension.getHomeDir());
      for (      AbstractArchiveTask abstractArchiveTask : distBundleTasks) {
        abstractArchiveTask.into("deploy",new Closure<Void>(null){
          @SuppressWarnings("unused") public void doCall(          CopySourceSpec copySourceSpec){
            copySourceSpec.from(JavaPlugin.JAR_TASK_NAME);
          }
        }
);
      }
      if (workspaceExtension.isModulesDefaultRepositoryEnabled()) {
        addRepositoryModules(project);
      }
    }
  }
;
  modulesProject.subprojects(action);
}

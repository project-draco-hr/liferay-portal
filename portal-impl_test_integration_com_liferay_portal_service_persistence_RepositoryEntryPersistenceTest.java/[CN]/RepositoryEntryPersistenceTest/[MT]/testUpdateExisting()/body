{
  long pk=RandomTestUtil.nextLong();
  RepositoryEntry newRepositoryEntry=_persistence.create(pk);
  newRepositoryEntry.setMvccVersion(RandomTestUtil.nextLong());
  newRepositoryEntry.setUuid(RandomTestUtil.randomString());
  newRepositoryEntry.setGroupId(RandomTestUtil.nextLong());
  newRepositoryEntry.setCompanyId(RandomTestUtil.nextLong());
  newRepositoryEntry.setUserId(RandomTestUtil.nextLong());
  newRepositoryEntry.setUserName(RandomTestUtil.randomString());
  newRepositoryEntry.setCreateDate(RandomTestUtil.nextDate());
  newRepositoryEntry.setModifiedDate(RandomTestUtil.nextDate());
  newRepositoryEntry.setRepositoryId(RandomTestUtil.nextLong());
  newRepositoryEntry.setMappedId(RandomTestUtil.randomString());
  newRepositoryEntry.setManualCheckInRequired(RandomTestUtil.randomBoolean());
  _repositoryEntries.add(_persistence.update(newRepositoryEntry));
  RepositoryEntry existingRepositoryEntry=_persistence.findByPrimaryKey(newRepositoryEntry.getPrimaryKey());
  Assert.assertEquals(existingRepositoryEntry.getMvccVersion(),newRepositoryEntry.getMvccVersion());
  Assert.assertEquals(existingRepositoryEntry.getUuid(),newRepositoryEntry.getUuid());
  Assert.assertEquals(existingRepositoryEntry.getRepositoryEntryId(),newRepositoryEntry.getRepositoryEntryId());
  Assert.assertEquals(existingRepositoryEntry.getGroupId(),newRepositoryEntry.getGroupId());
  Assert.assertEquals(existingRepositoryEntry.getCompanyId(),newRepositoryEntry.getCompanyId());
  Assert.assertEquals(existingRepositoryEntry.getUserId(),newRepositoryEntry.getUserId());
  Assert.assertEquals(existingRepositoryEntry.getUserName(),newRepositoryEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingRepositoryEntry.getCreateDate()),Time.getShortTimestamp(newRepositoryEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingRepositoryEntry.getModifiedDate()),Time.getShortTimestamp(newRepositoryEntry.getModifiedDate()));
  Assert.assertEquals(existingRepositoryEntry.getRepositoryId(),newRepositoryEntry.getRepositoryId());
  Assert.assertEquals(existingRepositoryEntry.getMappedId(),newRepositoryEntry.getMappedId());
  Assert.assertEquals(existingRepositoryEntry.getManualCheckInRequired(),newRepositoryEntry.getManualCheckInRequired());
}

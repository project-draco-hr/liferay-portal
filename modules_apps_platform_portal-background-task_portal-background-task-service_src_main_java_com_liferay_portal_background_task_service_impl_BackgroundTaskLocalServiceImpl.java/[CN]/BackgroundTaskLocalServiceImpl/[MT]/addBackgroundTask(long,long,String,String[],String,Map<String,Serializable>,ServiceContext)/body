{
  User user=null;
  if (userId != UserConstants.USER_ID_DEFAULT) {
    user=userPersistence.findByPrimaryKey(userId);
  }
  final long backgroundTaskId=counterLocalService.increment();
  BackgroundTask backgroundTask=backgroundTaskPersistence.create(backgroundTaskId);
  if (user != null) {
    backgroundTask.setCompanyId(user.getCompanyId());
    backgroundTask.setUserName(user.getFullName());
  }
 else {
    backgroundTask.setCompanyId(CompanyConstants.SYSTEM);
    backgroundTask.setUserName(StringPool.BLANK);
  }
  backgroundTask.setGroupId(groupId);
  backgroundTask.setUserId(userId);
  backgroundTask.setName(name);
  if (ArrayUtil.isNotEmpty(servletContextNames)) {
    backgroundTask.setServletContextNames(StringUtil.merge(servletContextNames));
  }
  backgroundTask.setTaskExecutorClassName(taskExecutorClassName);
  if (taskContextMap == null) {
    taskContextMap=new HashMap<>();
  }
  _backgroundTaskThreadLocalManager.serializeThreadLocals(taskContextMap);
  backgroundTask.setTaskContextMap(taskContextMap);
  backgroundTask.setStatus(BackgroundTaskConstants.STATUS_NEW);
  backgroundTaskPersistence.update(backgroundTask);
  TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
    @Override public Void call() throws Exception {
      backgroundTaskLocalService.triggerBackgroundTask(backgroundTaskId);
      return null;
    }
  }
);
  return backgroundTask;
}

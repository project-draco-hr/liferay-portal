{
  TagsProperty tagsProperty=findByPrimaryKey(propertyId);
  int count=countByC_K(companyId,key);
  Session session=null;
  try {
    session=openSession();
    StringMaker query=new StringMaker();
    query.append("FROM com.liferay.portlet.tags.model.TagsProperty WHERE ");
    query.append("companyId = ?");
    query.append(" AND ");
    if (key == null) {
      query.append("key_ IS NULL");
    }
 else {
      query.append("key_ = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY ");
      query.append(obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("key_ ASC");
    }
    Query q=session.createQuery(query.toString());
    q.setCacheable(true);
    int queryPos=0;
    q.setLong(queryPos++,companyId);
    if (key != null) {
      q.setString(queryPos++,key);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,tagsProperty);
    TagsProperty[] array=new TagsPropertyImpl[3];
    array[0]=(TagsProperty)objArray[0];
    array[1]=(TagsProperty)objArray[1];
    array[2]=(TagsProperty)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw HibernateUtil.processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  MockHttpServletRequest mockHttpServletRequest=new MockHttpServletRequest();
  mockHttpServletRequest.addHeader("X-Forwarded-Custom-Proto","https");
  mockHttpServletRequest.setSecure(false);
  boolean originalSecurityAuth=PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS;
  boolean originalEnablePhising=PropsValues.SESSION_ENABLE_PHISHING_PROTECTION;
  boolean originalForwardedProto=PropsValues.WEB_SERVER_FORWARDED_PROTO_ENABLED;
  String originalForwardedProtoHeader=PropsValues.WEB_SERVER_FORWARDED_PROTO_HEADER;
  try {
    setPropsValuesValue("COMPANY_SECURITY_AUTH_REQUIRES_HTTPS",true);
    setPropsValuesValue("SESSION_ENABLE_PHISHING_PROTECTION",false);
    setPropsValuesValue("WEB_SERVER_FORWARDED_PROTO_ENABLED",true);
    setPropsValuesValue("WEB_SERVER_FORWARDED_PROTO_HEADER","X-Forwarded-Custom-Proto");
    boolean secure=_portalImpl.isSecure(mockHttpServletRequest);
    Assert.assertTrue(secure);
  }
  finally {
    setPropsValuesValue("COMPANY_SECURITY_AUTH_REQUIRES_HTTPS",originalSecurityAuth);
    setPropsValuesValue("SESSION_ENABLE_PHISHING_PROTECTION",originalEnablePhising);
    setPropsValuesValue("WEB_SERVER_FORWARDED_PROTO_ENABLED",originalForwardedProto);
    setPropsValuesValue("WEB_SERVER_FORWARDED_PROTO_HEADER",originalForwardedProtoHeader);
  }
}

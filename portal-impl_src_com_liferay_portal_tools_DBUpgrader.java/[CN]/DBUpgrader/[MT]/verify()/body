{
  Release release=ReleaseLocalServiceUtil.fetchRelease(ReleaseConstants.DEFAULT_SERVLET_CONTEXT_NAME);
  if (release == null) {
    release=ReleaseLocalServiceUtil.addRelease(ReleaseConstants.DEFAULT_SERVLET_CONTEXT_NAME,ReleaseInfo.getBuildNumber());
  }
  _checkReleaseState(release.getState());
  if (PropsValues.DATABASE_INDEXES_UPDATE_ON_STARTUP) {
    StartupHelperUtil.setDropIndexes(true);
    StartupHelperUtil.updateIndexes();
  }
 else   if (StartupHelperUtil.isUpgraded()) {
    StartupHelperUtil.updateIndexes();
  }
  if (PropsValues.VERIFY_DATABASE_TRANSACTIONS_DISABLED) {
    _disableTransactions();
  }
  boolean newBuildNumber=false;
  if (ReleaseInfo.getBuildNumber() > release.getBuildNumber()) {
    newBuildNumber=true;
  }
  try {
    StartupHelperUtil.verifyProcess(newBuildNumber,release.isVerified());
  }
 catch (  Exception e) {
    _updateReleaseState(ReleaseConstants.STATE_VERIFY_FAILURE);
    throw e;
  }
 finally {
    if (PropsValues.VERIFY_DATABASE_TRANSACTIONS_DISABLED) {
      _enableTransactions();
    }
  }
  if (PropsValues.DATABASE_INDEXES_UPDATE_ON_STARTUP || StartupHelperUtil.isUpgraded()) {
    StartupHelperUtil.updateIndexes(false);
  }
  boolean verified=StartupHelperUtil.isVerified();
  if (release.isVerified()) {
    verified=true;
  }
  ReleaseLocalServiceUtil.updateRelease(release.getReleaseId(),ReleaseInfo.getBuildNumber(),ReleaseInfo.getBuildDate(),verified);
  CacheRegistryUtil.setActive(true);
}

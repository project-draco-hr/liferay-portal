{
  Release release=ReleaseLocalServiceUtil.fetchRelease(ReleaseConstants.DEFAULT_SERVLET_CONTEXT_NAME);
  if (release == null) {
    release=ReleaseLocalServiceUtil.addRelease(ReleaseConstants.DEFAULT_SERVLET_CONTEXT_NAME,ReleaseInfo.getParentBuildNumber());
  }
  _checkReleaseState(release.getState());
  if (PropsValues.DATABASE_INDEXES_UPDATE_ON_STARTUP) {
    StartupHelperUtil.setDropIndexes(true);
    StartupHelperUtil.updateIndexes();
  }
 else   if (StartupHelperUtil.isUpgraded()) {
    StartupHelperUtil.updateIndexes();
  }
  if (PropsValues.VERIFY_DATABASE_TRANSACTIONS_DISABLED) {
    _disableTransactions();
  }
  boolean newBuildNumber=false;
  if (ReleaseInfo.getBuildNumber() > release.getBuildNumber()) {
    newBuildNumber=true;
  }
  try {
    StartupHelperUtil.verifyProcess(newBuildNumber,release.isVerified());
  }
 catch (  Exception e) {
    _updateReleaseState(ReleaseConstants.STATE_VERIFY_FAILURE);
    _log.error("Unable to execute verify process: " + e.getMessage(),e);
    throw e;
  }
 finally {
    if (PropsValues.VERIFY_DATABASE_TRANSACTIONS_DISABLED) {
      _enableTransactions();
    }
  }
  if (PropsValues.DATABASE_INDEXES_UPDATE_ON_STARTUP || StartupHelperUtil.isUpgraded()) {
    StartupHelperUtil.updateIndexes(false);
  }
  boolean verified=StartupHelperUtil.isVerified();
  if (release.isVerified()) {
    verified=true;
  }
  release=ReleaseLocalServiceUtil.updateRelease(release.getReleaseId(),ReleaseInfo.getParentBuildNumber(),ReleaseInfo.getBuildDate(),verified);
  CacheRegistryUtil.setActive(true);
  Registry registry=RegistryUtil.getRegistry();
  ServiceRegistrar<Release> serviceRegistrar=registry.getServiceRegistrar(Release.class);
  Map<String,Object> properties=new HashMap<>();
  properties.put("build.date",release.getBuildDate());
  properties.put("build.number",release.getBuildNumber());
  properties.put("servlet.context.name",release.getServletContextName());
  serviceRegistrar.registerService(Release.class,release,properties);
}

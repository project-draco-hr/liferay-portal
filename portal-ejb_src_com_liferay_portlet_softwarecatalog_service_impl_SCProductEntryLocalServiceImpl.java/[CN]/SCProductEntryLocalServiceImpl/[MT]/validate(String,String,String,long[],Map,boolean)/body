{
  if (Validator.isNull(name)) {
    throw new ProductEntryNameException();
  }
 else   if (Validator.isNull(type)) {
    throw new ProductEntryTypeException();
  }
 else   if (Validator.isNull(shortDescription)) {
    throw new ProductEntryShortDescriptionException();
  }
 else   if (licenseIds.length == 0) {
    throw new ProductEntryLicenseException();
  }
 else   if (checkMainImage && (images.get(SCProductEntryImpl.MAIN_IMAGE_NAME) == null)) {
    throw new ProductEntryImagesException();
  }
  long imageMaxSize=GetterUtil.getLong(PropsUtil.get(PropsUtil.SC_IMAGE_MAX_SIZE));
  Iterator iterator=images.keySet().iterator();
  while (iterator.hasNext()) {
    String imageName=(String)iterator.next();
    Object imageObj=images.get(imageName);
    if (imageObj instanceof Object[]) {
      String contentType=(String)((Object[])imageObj)[0];
      byte[] bytes=(byte[])((Object[])imageObj)[1];
      if ((imageMaxSize > 0) && (bytes.length > imageMaxSize)) {
        throw new ImageSizeException();
      }
    }
  }
}

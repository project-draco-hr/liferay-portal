{
  long facebookId=jsonObject.getLong("id");
  String emailAddress=jsonObject.getString("email");
  String firstName=jsonObject.getString("first_name");
  String lastName=jsonObject.getString("last_name");
  boolean male=Validator.equals(jsonObject.getString("gender"),"male");
  if ((user.getFacebookId() == facebookId) && user.getEmailAddress().equals(emailAddress) && user.getFirstName().equals(firstName)&& user.getLastName().equals(lastName)&& (user.isMale() == male)) {
    return;
  }
  Calendar birthdayCal=CalendarFactoryUtil.getCalendar();
  birthdayCal.setTime(user.getContact().getBirthday());
  int birthdayMonth=birthdayCal.get(Calendar.MONTH);
  int birthdayDay=birthdayCal.get(Calendar.DAY_OF_MONTH);
  int birthdayYear=birthdayCal.get(Calendar.YEAR);
  Contact contact=user.getContact();
  long[] groupIds=null;
  long[] organizationIds=null;
  long[] roleIds=null;
  long[] userGroupIds=null;
  ServiceContext serviceContext=new ServiceContext();
  List<UserGroupRole> userGroupRoles=null;
  if (!user.getEmailAddress().equalsIgnoreCase(emailAddress)) {
    UserLocalServiceUtil.updateEmailAddress(user.getUserId(),StringPool.BLANK,emailAddress,emailAddress);
  }
  UserLocalServiceUtil.updateEmailAddressVerified(user.getUserId(),true);
  UserLocalServiceUtil.updateUser(user.getUserId(),StringPool.BLANK,StringPool.BLANK,StringPool.BLANK,false,user.getReminderQueryQuestion(),user.getReminderQueryAnswer(),user.getScreenName(),emailAddress,facebookId,user.getOpenId(),user.getLanguageId(),user.getTimeZoneId(),user.getGreeting(),user.getComments(),firstName,user.getMiddleName(),lastName,contact.getPrefixId(),contact.getSuffixId(),male,birthdayMonth,birthdayDay,birthdayYear,contact.getSmsSn(),contact.getAimSn(),contact.getFacebookSn(),contact.getIcqSn(),contact.getJabberSn(),contact.getMsnSn(),contact.getMySpaceSn(),contact.getSkypeSn(),contact.getTwitterSn(),contact.getYmSn(),contact.getJobTitle(),groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,serviceContext);
}

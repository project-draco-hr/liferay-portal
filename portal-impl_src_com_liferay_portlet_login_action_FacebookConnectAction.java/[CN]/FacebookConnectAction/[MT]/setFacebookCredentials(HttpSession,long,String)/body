{
  JSONObject jsonObject=FacebookConnectUtil.getGraphResources(companyId,"/me",token,"id,email,first_name,last_name,gender");
  if ((jsonObject == null) || (jsonObject.getJSONObject("error") != null)) {
    return null;
  }
  if (FacebookConnectUtil.isVerifiedAccountRequired(companyId) && !jsonObject.getBoolean("verified")) {
    return null;
  }
  User user=null;
  long facebookId=jsonObject.getLong("id");
  if (facebookId > 0) {
    try {
      user=UserLocalServiceUtil.getUserByFacebookId(companyId,facebookId);
      if (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {
        session.setAttribute(WebKeys.FACEBOOK_USER_ID,String.valueOf(facebookId));
      }
    }
 catch (    NoSuchUserException nsue) {
    }
  }
  String emailAddress=jsonObject.getString("email");
  if ((user == null) && Validator.isNotNull(emailAddress)) {
    try {
      user=UserLocalServiceUtil.getUserByEmailAddress(companyId,emailAddress);
      if (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {
        session.setAttribute(WebKeys.FACEBOOK_USER_EMAIL_ADDRESS,emailAddress);
      }
    }
 catch (    NoSuchUserException nsue) {
    }
  }
  if (user != null) {
    if (user.getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
      session.setAttribute(WebKeys.FACEBOOK_INCOMPLETE_USER_ID,facebookId);
      user.setEmailAddress(jsonObject.getString("email"));
      user.setFirstName(jsonObject.getString("first_name"));
      user.setLastName(jsonObject.getString("last_name"));
      return user;
    }
    updateUser(user,jsonObject);
  }
 else {
    addUser(session,companyId,jsonObject);
  }
  return user;
}

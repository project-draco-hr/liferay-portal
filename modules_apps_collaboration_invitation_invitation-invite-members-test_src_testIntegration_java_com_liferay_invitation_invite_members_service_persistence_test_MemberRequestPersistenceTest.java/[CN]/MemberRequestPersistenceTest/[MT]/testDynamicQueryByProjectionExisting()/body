{
  MemberRequest newMemberRequest=addMemberRequest();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(MemberRequest.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("memberRequestId"));
  Object newMemberRequestId=newMemberRequest.getMemberRequestId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("memberRequestId",new Object[]{newMemberRequestId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingMemberRequestId=result.get(0);
  Assert.assertEquals(existingMemberRequestId,newMemberRequestId);
}

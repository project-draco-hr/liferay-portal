{
  portletDataContext.importPortletPermissions(RESOURCE_NAME);
  if (portletDataContext.getBooleanParameter(NAMESPACE,"calendars")) {
    Element calendarsElement=portletDataContext.getImportDataGroupElement(Calendar.class);
    List<Element> calendarElements=calendarsElement.elements();
    for (    Element calendarElement : calendarElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,calendarElement);
    }
    Element calendarResourcesElement=portletDataContext.getImportDataGroupElement(CalendarResource.class);
    List<Element> calendarResourceElements=calendarResourcesElement.elements();
    for (    Element calendarResourceElement : calendarResourceElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,calendarResourceElement);
    }
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"calendar-bookings")) {
    Element calendarBookingsElement=portletDataContext.getImportDataGroupElement(CalendarBooking.class);
    List<Element> calendarBookingElements=calendarBookingsElement.elements();
    for (    Element calendarBookingElement : calendarBookingElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,calendarBookingElement);
    }
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"calendar-notification-templates")) {
    Element calendarNotificationTemplatesElement=portletDataContext.getImportDataGroupElement(CalendarNotificationTemplate.class);
    List<Element> calendarNotificationTemplateElements=calendarNotificationTemplatesElement.elements();
    for (    Element calendarNotificationTemplateElement : calendarNotificationTemplateElements) {
      StagedModelDataHandlerUtil.importStagedModel(portletDataContext,calendarNotificationTemplateElement);
    }
  }
  return portletPreferences;
}

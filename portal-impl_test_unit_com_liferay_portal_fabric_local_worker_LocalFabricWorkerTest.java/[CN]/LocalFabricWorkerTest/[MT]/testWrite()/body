{
  NoticeableFuture<String> noticeableFuture=new DefaultNoticeableFuture<>();
  LocalFabricWorker<String> localFabricWorker=new LocalFabricWorker<>(new EmbeddedProcessChannel<String>(noticeableFuture));
  final String result="Test result";
  NoticeableFuture<String> resultNoticeableFuture=localFabricWorker.write(new ProcessCallable<String>(){
    @Override public String call(){
      return result;
    }
  }
);
  Assert.assertEquals(result,resultNoticeableFuture.get());
  final ProcessException processException=new ProcessException("Test exception");
  NoticeableFuture<String> exceptionNoticeableFuture=localFabricWorker.write(new ProcessCallable<String>(){
    @Override public String call() throws ProcessException {
      throw processException;
    }
  }
);
  try {
    exceptionNoticeableFuture.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(processException,ee.getCause());
  }
}

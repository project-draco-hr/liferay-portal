{
  SocialEquityHistory newSocialEquityHistory=addSocialEquityHistory();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialEquityHistory.class,SocialEquityHistory.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("equityHistoryId"));
  Object newEquityHistoryId=newSocialEquityHistory.getEquityHistoryId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("equityHistoryId",new Object[]{newEquityHistoryId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingEquityHistoryId=result.get(0);
  assertEquals(existingEquityHistoryId,newEquityHistoryId);
}

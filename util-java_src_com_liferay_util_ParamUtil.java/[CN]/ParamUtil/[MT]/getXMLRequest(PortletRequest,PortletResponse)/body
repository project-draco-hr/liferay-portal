{
  String xml=null;
  Document doc=DocumentHelper.createDocument();
  Element request=doc.addElement("request");
  request.addElement("container-type").setText("portlet");
  request.addElement("container-namespace").setText(req.getContextPath());
  request.addElement("content-type").setText(req.getResponseContentType());
  request.addElement("server-name").setText(String.valueOf(req.getServerName()));
  request.addElement("server-port").setText(String.valueOf(req.getServerPort()));
  request.addElement("is-secure").setText(String.valueOf(req.isSecure()));
  request.addElement("auth-type").setText(String.valueOf(req.getAuthType()));
  request.addElement("remote-user").setText(String.valueOf(req.getRemoteUser()));
  request.addElement("context-path").setText(String.valueOf(req.getContextPath()));
  request.addElement("locale").setText(req.getLocale().toString());
  request.addElement("portlet-mode").setText(req.getPortletMode().toString());
  request.addElement("portlet-session-id").setText(req.getRequestedSessionId());
  request.addElement("scheme").setText(req.getScheme());
  request.addElement("window-state").setText(req.getWindowState().toString());
  if (req instanceof RenderRequest) {
    request.addElement("action").setText(Boolean.FALSE.toString());
  }
 else   if (req instanceof ActionRequest) {
    request.addElement("action").setText(Boolean.TRUE.toString());
  }
  if (res instanceof RenderResponse) {
    _generateXML((RenderResponse)res,request);
  }
  Element parameters=request.addElement("parameters");
  Enumeration e=req.getParameterNames();
  while (e.hasMoreElements()) {
    String param=(String)e.nextElement();
    Element parameter=parameters.addElement("parameter");
    parameter.addElement("name").addText(param);
    String[] values=req.getParameterValues(param);
    for (int i=0; i < values.length; i++) {
      parameter.addElement("value").addText(values[i]);
    }
  }
  try {
    xml=XMLFormatter.toString(doc);
  }
 catch (  IOException ioe) {
  }
  return xml;
}

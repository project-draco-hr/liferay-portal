{
  long pk=nextLong();
  Release newRelease=_persistence.create(pk);
  newRelease.setCreateDate(nextDate());
  newRelease.setModifiedDate(nextDate());
  newRelease.setServletContextName(randomString());
  newRelease.setBuildNumber(nextInt());
  newRelease.setBuildDate(nextDate());
  newRelease.setVerified(randomBoolean());
  newRelease.setTestString(randomString());
  _persistence.update(newRelease,false);
  Release existingRelease=_persistence.findByPrimaryKey(newRelease.getPrimaryKey());
  assertEquals(existingRelease.getReleaseId(),newRelease.getReleaseId());
  assertEquals(Time.getShortTimestamp(existingRelease.getCreateDate()),Time.getShortTimestamp(newRelease.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingRelease.getModifiedDate()),Time.getShortTimestamp(newRelease.getModifiedDate()));
  assertEquals(existingRelease.getServletContextName(),newRelease.getServletContextName());
  assertEquals(existingRelease.getBuildNumber(),newRelease.getBuildNumber());
  assertEquals(Time.getShortTimestamp(existingRelease.getBuildDate()),Time.getShortTimestamp(newRelease.getBuildDate()));
  assertEquals(existingRelease.getVerified(),newRelease.getVerified());
  assertEquals(existingRelease.getTestString(),newRelease.getTestString());
}

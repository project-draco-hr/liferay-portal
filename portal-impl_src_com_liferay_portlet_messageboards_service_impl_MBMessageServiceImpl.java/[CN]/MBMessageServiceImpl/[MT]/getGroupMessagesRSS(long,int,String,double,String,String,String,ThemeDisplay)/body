{
  String name=StringPool.BLANK;
  String description=StringPool.BLANK;
  List<MBMessage> messages=new ArrayList<MBMessage>();
  int lastIntervalStart=0;
  boolean listNotExhausted=true;
  MessageCreateDateComparator comparator=new MessageCreateDateComparator(false,true);
  while ((messages.size() < max) && listNotExhausted) {
    List<MBMessage> messageList=mbMessageLocalService.getGroupMessages(groupId,lastIntervalStart,lastIntervalStart + max,comparator);
    Iterator<MBMessage> itr=messageList.iterator();
    lastIntervalStart+=max;
    listNotExhausted=(messageList.size() == max);
    while (itr.hasNext() && (messages.size() < max)) {
      MBMessage message=itr.next();
      MBThread thread=mbThreadLocalService.getThread(message.getThreadId());
      if (MBMessagePermission.contains(getPermissionChecker(),message,ActionKeys.VIEW) && MBMessagePermission.contains(getPermissionChecker(),thread.getRootMessageId(),ActionKeys.VIEW)) {
        messages.add(message);
      }
    }
  }
  if (messages.size() > 0) {
    MBMessage message=messages.get(messages.size() - 1);
    name=message.getSubject();
    description=message.getSubject();
  }
  return exportToRSS(name,description,type,version,displayStyle,feedURL,entryURL,messages,themeDisplay);
}

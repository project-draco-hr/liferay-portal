{
  SyndFeed syndFeed=new SyndFeedImpl();
  syndFeed.setFeedType(type + "_" + version);
  syndFeed.setTitle(name);
  syndFeed.setLink(feedURL);
  syndFeed.setDescription(description);
  List entries=new ArrayList();
  syndFeed.setEntries(entries);
  Iterator itr=messages.iterator();
  while (itr.hasNext()) {
    MBMessage message=(MBMessage)itr.next();
    String author=PortalUtil.getUserName(message.getUserId(),message.getUserName());
    String value=null;
    if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {
      value=StringUtil.shorten(Html.stripHtml(message.getBody()),_RSS_ABSTRACT_LENGTH,StringPool.BLANK);
    }
 else {
      value=message.getBody();
    }
    SyndEntry syndEntry=new SyndEntryImpl();
    if (!message.isAnonymous()) {
      syndEntry.setAuthor(author);
    }
    syndEntry.setTitle(message.getSubject());
    syndEntry.setLink(entryURL + "&messageId=" + message.getMessageId());
    syndEntry.setPublishedDate(message.getCreateDate());
    SyndContent syndContent=new SyndContentImpl();
    syndContent.setType("html");
    syndContent.setValue(value);
    syndEntry.setDescription(syndContent);
    entries.add(syndEntry);
  }
  try {
    return RSSUtil.export(syndFeed);
  }
 catch (  FeedException fe) {
    throw new SystemException(fe);
  }
catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
}

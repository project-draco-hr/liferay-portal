{
  checkReplyToPermission(groupId,categoryId,parentMessageId);
  if (lockLocalService.isLocked(MBThread.class.getName(),threadId)) {
    throw new LockedThreadException();
  }
  if (!MBCategoryPermission.contains(getPermissionChecker(),groupId,categoryId,ActionKeys.ADD_FILE)) {
    files.clear();
  }
  boolean preview=GetterUtil.getBoolean(serviceContext.getAttribute("previewBoolean"));
  int workFlowAction=serviceContext.getWorkflowAction();
  if ((workFlowAction == WorkflowConstants.STATUS_DRAFT) && !preview) {
    MBMessagePermission.check(getPermissionChecker(),parentMessageId,ActionKeys.UPDATE);
  }
  if (!MBCategoryPermission.contains(getPermissionChecker(),groupId,categoryId,ActionKeys.UPDATE_THREAD_PRIORITY)) {
    priority=MBThreadConstants.PRIORITY_NOT_GIVEN;
  }
  return mbMessageLocalService.addMessage(getGuestOrUserId(),null,groupId,categoryId,threadId,parentMessageId,subject,body,format,files,anonymous,priority,allowPingbacks,serviceContext);
}

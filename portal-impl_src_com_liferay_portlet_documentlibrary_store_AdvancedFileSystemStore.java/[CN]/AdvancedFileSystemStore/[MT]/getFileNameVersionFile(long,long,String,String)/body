{
  String ext=StringPool.PERIOD + FileUtil.getExtension(fileName);
  if (ext.equals(StringPool.PERIOD)) {
    ext+=_HOOK_EXTENSION;
  }
  int pos=fileName.lastIndexOf(CharPool.SLASH);
  if (pos == -1) {
    StringBundler sb=new StringBundler();
    String fileNameFragment=FileUtil.stripExtension(fileName);
    if (fileNameFragment.startsWith("DLFE-")) {
      fileNameFragment=fileNameFragment.substring(5);
      sb.append("DLFE/");
    }
    buildPath(sb,fileNameFragment);
    File repositoryDir=getRepositoryDir(companyId,repositoryId);
    StringBundler pathSB=new StringBundler(11);
    pathSB.append(repositoryDir);
    pathSB.append(StringPool.SLASH);
    pathSB.append(sb.toString());
    pathSB.append(StringPool.SLASH);
    pathSB.append(fileNameFragment);
    pathSB.append(ext);
    pathSB.append(StringPool.SLASH);
    pathSB.append(fileNameFragment);
    pathSB.append(StringPool.UNDERLINE);
    pathSB.append(version);
    pathSB.append(ext);
    return new File(pathSB.toString());
  }
 else {
    File fileNameDir=getDirNameDir(companyId,repositoryId,fileName);
    String fileNameFragment=FileUtil.stripExtension(fileName.substring(pos + 1));
    StringBundler pathSB=new StringBundler(6);
    pathSB.append(fileNameDir);
    pathSB.append(StringPool.SLASH);
    pathSB.append(fileNameFragment);
    pathSB.append(StringPool.UNDERLINE);
    pathSB.append(version);
    pathSB.append(ext);
    return new File(pathSB.toString());
  }
}

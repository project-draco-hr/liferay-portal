{
  if (this.pendingUtc_ != null && dateUtc.compareTo(this.pendingUtc_) <= 0) {
    return;
  }
  DateValue dateLocal=TimeUtils.fromUtc(dateUtc,tzid_);
  if (dateLocal.compareTo(this.builder_.toDate()) <= 0) {
    return;
  }
  this.pendingUtc_=null;
  try {
    if (this.canShortcutAdvance_) {
      if (this.builder_.year < dateLocal.year()) {
        do {
          if (!this.yearGenerator_.generate(this.builder_)) {
            this.done_=true;
            return;
          }
        }
 while (this.builder_.year < dateLocal.year());
        while (!this.monthGenerator_.generate(this.builder_)) {
          if (!this.yearGenerator_.generate(this.builder_)) {
            this.done_=true;
            return;
          }
        }
      }
      while (this.builder_.year == dateLocal.year() && this.builder_.month < dateLocal.month()) {
        while (!this.monthGenerator_.generate(this.builder_)) {
          if (!this.yearGenerator_.generate(this.builder_)) {
            this.done_=true;
            return;
          }
        }
      }
    }
    while (!this.done_) {
      DateValue dUtc=this.generateInstance();
      if (null == dUtc) {
        this.done_=true;
      }
 else {
        if (!this.condition_.apply(dUtc)) {
          this.done_=true;
        }
 else         if (dUtc.compareTo(dateUtc) >= 0) {
          this.pendingUtc_=dUtc;
          break;
        }
      }
    }
  }
 catch (  Generator.IteratorShortCircuitingException ex) {
    this.done_=true;
  }
}

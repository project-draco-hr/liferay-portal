{
  T service=_serviceTracker.getService();
  if (service != null) {
    try {
      return method.invoke(service,arguments);
    }
 catch (    InvocationTargetException ite) {
      throw ite.getTargetException();
    }
  }
  if (_log.isWarnEnabled()) {
    _log.warn(_interfaceClassName + " has not been registered. Not " + "invoking "+ method.getName());
  }
  Class<?> returnType=method.getReturnType();
  if (returnType.equals(boolean.class)) {
    return GetterUtil.DEFAULT_BOOLEAN;
  }
 else   if (returnType.equals(byte.class)) {
    return GetterUtil.DEFAULT_BYTE;
  }
 else   if (returnType.equals(double.class)) {
    return GetterUtil.DEFAULT_DOUBLE;
  }
 else   if (returnType.equals(float.class)) {
    return GetterUtil.DEFAULT_FLOAT;
  }
 else   if (returnType.equals(int.class)) {
    return GetterUtil.DEFAULT_INTEGER;
  }
 else   if (returnType.equals(long.class)) {
    return GetterUtil.DEFAULT_LONG;
  }
 else   if (returnType.equals(short.class)) {
    return GetterUtil.DEFAULT_SHORT;
  }
  return method.getDefaultValue();
}

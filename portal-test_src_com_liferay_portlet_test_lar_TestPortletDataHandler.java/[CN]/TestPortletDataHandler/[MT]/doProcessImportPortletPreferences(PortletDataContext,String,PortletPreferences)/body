{
  long previousScopeGroupId=portletDataContext.getScopeGroupId();
  Map<Long,Long> groupIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Group.class);
  long importGroupId=GetterUtil.getLong(portletPreferences.getValue("groupId",null));
  long groupId=MapUtil.getLong(groupIds,importGroupId,importGroupId);
  portletDataContext.setScopeGroupId(groupId);
  StagedModelDataHandlerUtil.importReferenceStagedModels(portletDataContext,JournalArticle.class);
  String articleId=portletPreferences.getValue("articleId",null);
  if (Validator.isNotNull(articleId)) {
    Map<String,String> articleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class + ".articleId");
    articleId=MapUtil.getString(articleIds,articleId,articleId);
    portletPreferences.setValue("articleId",articleId);
    portletPreferences.setValue("groupId",String.valueOf(groupId));
    Layout layout=LayoutLocalServiceUtil.getLayout(portletDataContext.getPlid());
    JournalContentSearchLocalServiceUtil.updateContentSearch(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletId,articleId,true);
  }
 else {
    portletPreferences.setValue("groupId",StringPool.BLANK);
    portletPreferences.setValue("articleId",StringPool.BLANK);
  }
  portletDataContext.setScopeGroupId(previousScopeGroupId);
  return portletPreferences;
}

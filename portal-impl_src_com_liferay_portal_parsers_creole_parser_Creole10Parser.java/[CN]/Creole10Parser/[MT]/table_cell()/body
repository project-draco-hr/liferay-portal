{
  TableCellNode cell=null;
  TableHeaderNode th=null;
  TableDataNode tc=null;
  try {
    int alt70=2;
    int LA70_0=input.LA(1);
    if ((LA70_0 == PIPE)) {
      int LA70_1=input.LA(2);
      if ((LA70_1 == EQUAL)) {
        int LA70_2=input.LA(3);
        if ((input.LA(2) == EQUAL)) {
          alt70=1;
        }
 else         if ((true)) {
          alt70=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return cell;
          }
          NoViableAltException nvae=new NoViableAltException("363:1: table_cell returns [TableCellNode cell = null] : ({...}?th= table_headercell | tc= table_normalcell );",70,2,input);
          throw nvae;
        }
      }
 else       if ((LA70_1 == EOF || (LA70_1 >= FORCED_END_OF_LINE && LA70_1 <= STAR) || (LA70_1 >= PIPE && LA70_1 <= 75))) {
        alt70=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return cell;
        }
        NoViableAltException nvae=new NoViableAltException("363:1: table_cell returns [TableCellNode cell = null] : ({...}?th= table_headercell | tc= table_normalcell );",70,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return cell;
      }
      NoViableAltException nvae=new NoViableAltException("363:1: table_cell returns [TableCellNode cell = null] : ({...}?th= table_headercell | tc= table_normalcell );",70,0,input);
      throw nvae;
    }
switch (alt70) {
case 1:
{
        if (!(input.LA(2) == EQUAL)) {
          if (backtracking > 0) {
            failed=true;
            return cell;
          }
          throw new FailedPredicateException(input,"table_cell"," input.LA(2) == EQUAL ");
        }
        pushFollow(FOLLOW_table_headercell_in_table_cell1970);
        th=table_headercell();
        _fsp--;
        if (failed) {
          return cell;
        }
        if (backtracking == 0) {
          cell=th;
        }
      }
    break;
case 2:
{
    pushFollow(FOLLOW_table_normalcell_in_table_cell1981);
    tc=table_normalcell();
    _fsp--;
    if (failed) {
      return cell;
    }
    if (backtracking == 0) {
      cell=tc;
    }
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return cell;
}

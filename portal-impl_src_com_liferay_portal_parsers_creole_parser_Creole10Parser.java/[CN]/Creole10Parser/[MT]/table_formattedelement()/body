{
  ASTNode content=null;
  CollectionNode tic=null;
  CollectionNode tbc=null;
  try {
    int alt77=2;
    int LA77_0=input.LA(1);
    if ((LA77_0 == ITAL)) {
      alt77=1;
    }
 else     if ((LA77_0 == STAR)) {
      alt77=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return content;
      }
      NoViableAltException nvae=new NoViableAltException("380:1: table_formattedelement returns [ASTNode content = null] : ( ital_markup (tic= table_italcontent )? ( ital_markup )? | bold_markup (tbc= table_boldcontent )? ( bold_markup )? );",77,0,input);
      throw nvae;
    }
switch (alt77) {
case 1:
{
        pushFollow(FOLLOW_ital_markup_in_table_formattedelement2105);
        ital_markup();
        _fsp--;
        if (failed) {
          return content;
        }
        int alt73=2;
switch (input.LA(1)) {
case STAR:
{
            alt73=1;
          }
        break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
        alt73=1;
      }
    break;
case FORCED_LINEBREAK:
{
    alt73=1;
  }
break;
case ESCAPE:
{
alt73=1;
}
break;
case LINK_OPEN:
{
alt73=1;
}
break;
case IMAGE_OPEN:
{
alt73=1;
}
break;
case EXTENSION:
{
alt73=1;
}
break;
case NOWIKI_OPEN:
{
alt73=1;
}
break;
case EOF:
{
alt73=1;
}
break;
}
switch (alt73) {
case 1:
{
pushFollow(FOLLOW_table_italcontent_in_table_formattedelement2115);
tic=table_italcontent();
_fsp--;
if (failed) {
return content;
}
if (backtracking == 0) {
content=new ItalicTextNode(tic);
}
}
break;
}
int alt74=2;
int LA74_0=input.LA(1);
if ((LA74_0 == ITAL)) {
alt74=1;
}
switch (alt74) {
case 1:
{
pushFollow(FOLLOW_ital_markup_in_table_formattedelement2124);
ital_markup();
_fsp--;
if (failed) {
return content;
}
}
break;
}
}
break;
case 2:
{
pushFollow(FOLLOW_bold_markup_in_table_formattedelement2132);
bold_markup();
_fsp--;
if (failed) {
return content;
}
int alt75=2;
switch (input.LA(1)) {
case STAR:
{
int LA75_1=input.LA(2);
if ((input.LA(2) != STAR)) {
alt75=1;
}
}
break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
alt75=1;
}
break;
case FORCED_LINEBREAK:
{
alt75=1;
}
break;
case ESCAPE:
{
alt75=1;
}
break;
case LINK_OPEN:
{
alt75=1;
}
break;
case IMAGE_OPEN:
{
alt75=1;
}
break;
case EXTENSION:
{
alt75=1;
}
break;
case NOWIKI_OPEN:
{
alt75=1;
}
break;
case ITAL:
{
alt75=1;
}
break;
case EOF:
{
alt75=1;
}
break;
}
switch (alt75) {
case 1:
{
pushFollow(FOLLOW_table_boldcontent_in_table_formattedelement2139);
tbc=table_boldcontent();
_fsp--;
if (failed) {
return content;
}
if (backtracking == 0) {
content=new BoldTextNode(tbc);
}
}
break;
}
int alt76=2;
int LA76_0=input.LA(1);
if ((LA76_0 == STAR)) {
int LA76_1=input.LA(2);
if ((LA76_1 == STAR)) {
alt76=1;
}
}
switch (alt76) {
case 1:
{
pushFollow(FOLLOW_bold_markup_in_table_formattedelement2149);
bold_markup();
_fsp--;
if (failed) {
return content;
}
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return content;
}

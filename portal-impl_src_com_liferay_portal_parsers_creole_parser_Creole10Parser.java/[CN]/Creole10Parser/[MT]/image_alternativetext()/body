{
  CollectionNode items=new CollectionNode();
  StringBundler contents=null;
  try {
    int alt144=2;
    int LA144_0=input.LA(1);
    if (((LA144_0 >= FORCED_END_OF_LINE && LA144_0 <= WIKI) || LA144_0 == POUND || (LA144_0 >= EQUAL && LA144_0 <= PIPE) || (LA144_0 >= ESCAPE && LA144_0 <= LINK_CLOSE) || (LA144_0 >= BLANKS && LA144_0 <= 79))) {
      alt144=1;
    }
 else     if ((LA144_0 == FORCED_LINEBREAK)) {
      alt144=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return items;
      }
      NoViableAltException nvae=new NoViableAltException("954:1: image_alternativetext returns [CollectionNode items = new CollectionNode()] : (contents= image_alternative_simple_text | ( forced_linebreak )+ );",144,0,input);
      throw nvae;
    }
switch (alt144) {
case 1:
{
        pushFollow(FOLLOW_image_alternative_simple_text_in_image_alternativetext4475);
        contents=image_alternative_simple_text();
        _fsp--;
        if (failed)         return items;
        if (backtracking == 0) {
          items.add(new UnformattedTextNode(contents.toString()));
        }
      }
    break;
case 2:
{
    int cnt143=0;
    loop143:     do {
      int alt143=2;
      int LA143_0=input.LA(1);
      if ((LA143_0 == FORCED_LINEBREAK)) {
        alt143=1;
      }
switch (alt143) {
case 1:
{
          pushFollow(FOLLOW_forced_linebreak_in_image_alternativetext4483);
          forced_linebreak();
          _fsp--;
          if (failed)           return items;
          if (backtracking == 0) {
            items.add(new ForcedEndOfLineNode());
          }
        }
      break;
default :
    if (cnt143 >= 1)     break loop143;
  if (backtracking > 0) {
    failed=true;
    return items;
  }
EarlyExitException eee=new EarlyExitException(143,input);
throw eee;
}
cnt143++;
}
 while (true);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return items;
}

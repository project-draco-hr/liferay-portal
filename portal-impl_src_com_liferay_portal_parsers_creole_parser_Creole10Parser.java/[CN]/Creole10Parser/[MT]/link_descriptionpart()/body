{
  link_descriptionpart_stack.push(new link_descriptionpart_scope());
  ASTNode text=null;
  ASTNode lb=null;
  ASTNode li=null;
  CollectionNode t=null;
  ((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element=new CollectionNode();
  try {
    int alt124=3;
switch (input.LA(1)) {
case STAR:
{
        int LA124_1=input.LA(2);
        if ((LA124_1 == STAR)) {
          alt124=1;
        }
 else         if (((LA124_1 >= FORCED_END_OF_LINE && LA124_1 <= WIKI) || LA124_1 == POUND || (LA124_1 >= EQUAL && LA124_1 <= PIPE) || (LA124_1 >= FORCED_LINEBREAK && LA124_1 <= NOWIKI_CLOSE) || (LA124_1 >= IMAGE_CLOSE && LA124_1 <= 79))) {
          alt124=3;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return text;
          }
          NoViableAltException nvae=new NoViableAltException("619:1: link_descriptionpart returns [ASTNode text = null] : ( bold_markup onestar (lb= link_bold_descriptionpart onestar )+ bold_markup | ital_markup onestar (li= link_ital_descriptionpart onestar )+ ital_markup | onestar (t= link_descriptiontext onestar )+ );",124,1,input);
          throw nvae;
        }
      }
    break;
case ITAL:
{
    alt124=2;
  }
break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case FORCED_LINEBREAK:
case ESCAPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case TABLE_OF_CONTENTS_TEXT:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case BRACE_CLOSE:
case COLON_SLASH:
case SLASH:
case TABLE_OF_CONTENTS_OPEN_MARKUP:
case TABLE_OF_CONTENTS_CLOSE_MARKUP:
case INSIGNIFICANT_CHAR:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
case 77:
case 78:
case 79:
{
alt124=3;
}
break;
default :
if (backtracking > 0) {
failed=true;
return text;
}
NoViableAltException nvae=new NoViableAltException("619:1: link_descriptionpart returns [ASTNode text = null] : ( bold_markup onestar (lb= link_bold_descriptionpart onestar )+ bold_markup | ital_markup onestar (li= link_ital_descriptionpart onestar )+ ital_markup | onestar (t= link_descriptiontext onestar )+ );",124,0,input);
throw nvae;
}
switch (alt124) {
case 1:
{
pushFollow(FOLLOW_bold_markup_in_link_descriptionpart3808);
bold_markup();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3811);
onestar();
_fsp--;
if (failed) return text;
int cnt121=0;
loop121: do {
int alt121=2;
int LA121_0=input.LA(1);
if (((LA121_0 >= FORCED_END_OF_LINE && LA121_0 <= WIKI) || LA121_0 == POUND || (LA121_0 >= EQUAL && LA121_0 <= ITAL) || (LA121_0 >= FORCED_LINEBREAK && LA121_0 <= NOWIKI_CLOSE) || (LA121_0 >= IMAGE_CLOSE && LA121_0 <= 79))) {
alt121=1;
}
switch (alt121) {
case 1:
{
pushFollow(FOLLOW_link_bold_descriptionpart_in_link_descriptionpart3819);
lb=link_bold_descriptionpart();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(lb);
}
pushFollow(FOLLOW_onestar_in_link_descriptionpart3824);
onestar();
_fsp--;
if (failed) return text;
}
break;
default :
if (cnt121 >= 1) break loop121;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(121,input);
throw eee;
}
cnt121++;
}
 while (true);
if (backtracking == 0) {
text=new BoldTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
pushFollow(FOLLOW_bold_markup_in_link_descriptionpart3834);
bold_markup();
_fsp--;
if (failed) return text;
}
break;
case 2:
{
pushFollow(FOLLOW_ital_markup_in_link_descriptionpart3839);
ital_markup();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3842);
onestar();
_fsp--;
if (failed) return text;
int cnt122=0;
loop122: do {
int alt122=2;
int LA122_0=input.LA(1);
if (((LA122_0 >= FORCED_END_OF_LINE && LA122_0 <= WIKI) || (LA122_0 >= POUND && LA122_0 <= PIPE) || (LA122_0 >= FORCED_LINEBREAK && LA122_0 <= NOWIKI_CLOSE)|| (LA122_0 >= IMAGE_CLOSE && LA122_0 <= 79))) {
alt122=1;
}
switch (alt122) {
case 1:
{
pushFollow(FOLLOW_link_ital_descriptionpart_in_link_descriptionpart3851);
li=link_ital_descriptionpart();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(li);
}
pushFollow(FOLLOW_onestar_in_link_descriptionpart3856);
onestar();
_fsp--;
if (failed) return text;
}
break;
default :
if (cnt122 >= 1) break loop122;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(122,input);
throw eee;
}
cnt122++;
}
 while (true);
if (backtracking == 0) {
text=new ItalicTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
pushFollow(FOLLOW_ital_markup_in_link_descriptionpart3865);
ital_markup();
_fsp--;
if (failed) return text;
}
break;
case 3:
{
pushFollow(FOLLOW_onestar_in_link_descriptionpart3870);
onestar();
_fsp--;
if (failed) return text;
int cnt123=0;
loop123: do {
int alt123=2;
switch (input.LA(1)) {
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case TABLE_OF_CONTENTS_TEXT:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case BRACE_CLOSE:
case COLON_SLASH:
case SLASH:
case TABLE_OF_CONTENTS_OPEN_MARKUP:
case TABLE_OF_CONTENTS_CLOSE_MARKUP:
case INSIGNIFICANT_CHAR:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
case 77:
case 78:
case 79:
{
alt123=1;
}
break;
case FORCED_LINEBREAK:
{
alt123=1;
}
break;
case ESCAPE:
{
alt123=1;
}
break;
}
switch (alt123) {
case 1:
{
pushFollow(FOLLOW_link_descriptiontext_in_link_descriptionpart3879);
t=link_descriptiontext();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3882);
onestar();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(t);
}
}
break;
default :
if (cnt123 >= 1) break loop123;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(123,input);
throw eee;
}
cnt123++;
}
 while (true);
if (backtracking == 0) {
text=new UnformattedTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
link_descriptionpart_stack.pop();
}
return text;
}

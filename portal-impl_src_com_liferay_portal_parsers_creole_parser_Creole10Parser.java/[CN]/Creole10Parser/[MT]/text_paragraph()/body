{
  ParagraphNode paragraph=new ParagraphNode();
  LineNode tl=null;
  NoWikiSectionNode nw=null;
  ASTNode te=null;
  try {
{
      int cnt8=0;
      loop8:       do {
        int alt8=3;
switch (input.LA(1)) {
case NOWIKI_OPEN:
{
            int LA8_2=input.LA(2);
            if ((synpred1())) {
              alt8=2;
            }
          }
        break;
case BLANKS:
{
        alt8=1;
      }
    break;
case DASH:
{
    alt8=1;
  }
break;
case STAR:
{
int LA8_5=input.LA(2);
if ((input.LA(1) != STAR || (input.LA(1) == STAR && input.LA(2) == STAR))) {
  alt8=1;
}
}
break;
case ITAL:
{
int LA8_6=input.LA(2);
if ((input.LA(1) != STAR || (input.LA(1) == STAR && input.LA(2) == STAR))) {
alt8=1;
}
}
break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
alt8=1;
}
break;
case FORCED_LINEBREAK:
{
alt8=1;
}
break;
case ESCAPE:
{
alt8=1;
}
break;
case LINK_OPEN:
{
alt8=1;
}
break;
case IMAGE_OPEN:
{
alt8=1;
}
break;
case EXTENSION:
{
alt8=1;
}
break;
}
switch (alt8) {
case 1:
{
pushFollow(FOLLOW_text_line_in_text_paragraph308);
tl=text_line();
_fsp--;
if (failed) {
return paragraph;
}
if (backtracking == 0) {
paragraph.addChildASTNode(tl);
}
}
break;
case 2:
{
pushFollow(FOLLOW_nowiki_inline_in_text_paragraph340);
nw=nowiki_inline();
_fsp--;
if (failed) {
return paragraph;
}
if (backtracking == 0) {
paragraph.addChildASTNode(nw);
}
loop7: do {
int alt7=2;
int LA7_0=input.LA(1);
if (((LA7_0 >= FORCED_END_OF_LINE && LA7_0 <= WIKI) || (LA7_0 >= POUND && LA7_0 <= 75))) {
alt7=1;
}
switch (alt7) {
case 1:
{
pushFollow(FOLLOW_text_element_in_text_paragraph351);
te=text_element();
_fsp--;
if (failed) {
return paragraph;
}
if (backtracking == 0) {
paragraph.addChildASTNode(te);
}
}
break;
default :
break loop7;
}
}
 while (true);
pushFollow(FOLLOW_text_lineseparator_in_text_paragraph360);
text_lineseparator();
_fsp--;
if (failed) {
return paragraph;
}
}
break;
default :
if (cnt8 >= 1) {
break loop8;
}
if (backtracking > 0) {
failed=true;
return paragraph;
}
EarlyExitException eee=new EarlyExitException(8,input);
throw eee;
}
cnt8++;
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return paragraph;
}

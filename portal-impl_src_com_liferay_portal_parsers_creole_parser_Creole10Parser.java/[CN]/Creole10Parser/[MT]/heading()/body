{
  heading_stack.push(new heading_scope());
  ASTNode header=null;
  ((heading_scope)heading_stack.peek()).items=new CollectionNode();
  ((heading_scope)heading_stack.peek()).text=new String();
  try {
{
      pushFollow(FOLLOW_heading_markup_in_heading1309);
      heading_markup();
      _fsp--;
      if (failed)       return header;
      if (backtracking == 0) {
        ((heading_scope)heading_stack.peek()).nestedLevel++;
      }
      pushFollow(FOLLOW_heading_content_in_heading1314);
      heading_content();
      _fsp--;
      if (failed)       return header;
      if (backtracking == 0) {
        header=new HeadingNode(((heading_scope)heading_stack.peek()).items,((heading_scope)heading_stack.peek()).nestedLevel);
      }
      int alt42=2;
      int LA42_0=input.LA(1);
      if ((LA42_0 == EQUAL)) {
        alt42=1;
      }
switch (alt42) {
case 1:
{
          pushFollow(FOLLOW_heading_markup_in_heading1321);
          heading_markup();
          _fsp--;
          if (failed)           return header;
        }
      break;
  }
  int alt43=2;
  int LA43_0=input.LA(1);
  if ((LA43_0 == BLANKS)) {
    alt43=1;
  }
switch (alt43) {
case 1:
{
      pushFollow(FOLLOW_blanks_in_heading1329);
      blanks();
      _fsp--;
      if (failed)       return header;
    }
  break;
}
pushFollow(FOLLOW_paragraph_separator_in_heading1336);
paragraph_separator();
_fsp--;
if (failed) return header;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
heading_stack.pop();
}
return header;
}

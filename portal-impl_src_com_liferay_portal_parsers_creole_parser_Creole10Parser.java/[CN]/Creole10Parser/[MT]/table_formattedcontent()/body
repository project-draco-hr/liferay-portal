{
  CollectionNode elements=new CollectionNode();
  ASTNode tu=null;
  try {
{
      int cnt106=0;
      loop106:       do {
        int alt106=2;
switch (input.LA(1)) {
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case TABLE_OF_CONTENTS_TEXT:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case BRACE_CLOSE:
case COLON_SLASH:
case SLASH:
case TABLE_OF_CONTENTS_OPEN_MARKUP:
case TABLE_OF_CONTENTS_CLOSE_MARKUP:
case INSIGNIFICANT_CHAR:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
case 77:
case 78:
case 79:
{
            alt106=1;
          }
        break;
case FORCED_LINEBREAK:
{
        alt106=1;
      }
    break;
case ESCAPE:
{
    alt106=1;
  }
break;
case LINK_OPEN:
{
alt106=1;
}
break;
case IMAGE_OPEN:
{
alt106=1;
}
break;
case EXTENSION:
{
alt106=1;
}
break;
case NOWIKI_OPEN:
{
alt106=1;
}
break;
}
switch (alt106) {
case 1:
{
pushFollow(FOLLOW_table_unformattedelement_in_table_formattedcontent2775);
tu=table_unformattedelement();
_fsp--;
if (failed) return elements;
if (backtracking == 0) {
elements.add(tu);
}
}
break;
default :
if (cnt106 >= 1) break loop106;
if (backtracking > 0) {
failed=true;
return elements;
}
EarlyExitException eee=new EarlyExitException(106,input);
throw eee;
}
cnt106++;
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return elements;
}

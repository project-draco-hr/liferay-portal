{
  ASTNode text=null;
  ASTNode t=null;
  try {
{
      int cnt64=0;
      loop64:       do {
        int alt64=2;
switch (input.LA(1)) {
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
            alt64=1;
          }
        break;
case FORCED_LINEBREAK:
{
        alt64=1;
      }
    break;
case ESCAPE:
{
    alt64=1;
  }
break;
case LINK_OPEN:
{
alt64=1;
}
break;
case IMAGE_OPEN:
{
alt64=1;
}
break;
case EXTENSION:
{
alt64=1;
}
break;
case NOWIKI_OPEN:
{
alt64=1;
}
break;
}
switch (alt64) {
case 1:
{
pushFollow(FOLLOW_text_unformattedelement_in_list_bolditalcontent1827);
t=text_unformattedelement();
_fsp--;
if (failed) {
return text;
}
if (backtracking == 0) {
text=t;
}
}
break;
default :
if (cnt64 >= 1) {
break loop64;
}
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(64,input);
throw eee;
}
cnt64++;
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return text;
}

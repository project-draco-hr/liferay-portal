{
  CountLevel_stack.push(new CountLevel_scope());
  ASTNode item=null;
  list_ordelem_markup_return om=null;
  CollectionNode elem=null;
  ((CountLevel_scope)CountLevel_stack.peek()).level=0;
  ((CountLevel_scope)CountLevel_stack.peek()).groups=new String();
  try {
{
      pushFollow(FOLLOW_list_ordelem_markup_in_list_ordelem1922);
      om=list_ordelem_markup();
      _fsp--;
      if (failed)       return item;
      if (backtracking == 0) {
        ++((CountLevel_scope)CountLevel_stack.peek()).level;
        ((CountLevel_scope)CountLevel_stack.peek()).currentMarkup=input.toString(om.start,om.stop);
        ((CountLevel_scope)CountLevel_stack.peek()).groups+=input.toString(om.start,om.stop);
      }
      pushFollow(FOLLOW_list_elem_in_list_ordelem1930);
      elem=list_elem();
      _fsp--;
      if (failed)       return item;
      if (backtracking == 0) {
        item=new OrderedListItemNode(((CountLevel_scope)CountLevel_stack.peek()).level,elem);
      }
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
    CountLevel_stack.pop();
  }
  return item;
}

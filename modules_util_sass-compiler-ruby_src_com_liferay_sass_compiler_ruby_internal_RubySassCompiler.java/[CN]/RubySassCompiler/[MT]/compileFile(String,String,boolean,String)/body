{
  try {
    String includeDirNames=includeDirName + File.pathSeparator + new File(inputFileName).getParent();
    String outputFileName=getOutputFileName(inputFileName);
    if ((sourceMapFileName == null) || sourceMapFileName.equals("")) {
      sourceMapFileName=getOutputFileName(inputFileName) + ".map";
    }
    String[] results=_scriptingContainer.callMethod(_scriptObject,"process",new Object[]{inputFileName,includeDirNames,_tmpDir,false,outputFileName,generateSourceMap,sourceMapFileName},String[].class);
    if (generateSourceMap) {
      try {
        File sourceMapFile=new File(sourceMapFileName);
        String sourcemapOutput=results[1];
        write(sourceMapFile,sourcemapOutput);
      }
 catch (      Exception e) {
        System.out.println("Unable to create source map");
      }
    }
    return results[0];
  }
 catch (  Exception e) {
    throw new RubySassCompilerException("Unable to parse " + inputFileName);
  }
}

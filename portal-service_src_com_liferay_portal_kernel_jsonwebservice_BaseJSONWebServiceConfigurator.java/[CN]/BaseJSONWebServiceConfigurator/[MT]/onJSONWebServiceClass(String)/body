{
  Class<?> actionClass=_classLoader.loadClass(className);
  if (!isJSONWebServiceClass(actionClass)) {
    return;
  }
  if (actionClass.isInterface() && hasAnnotatedServiceImpl(className)) {
    return;
  }
  JSONWebService classJSONWebService=actionClass.getAnnotation(JSONWebService.class);
  JSONWebServiceMode classJSONWebServiceMode=JSONWebServiceMode.MANUAL;
  if (classJSONWebService != null) {
    classJSONWebServiceMode=classJSONWebService.mode();
  }
  Method[] methods=actionClass.getMethods();
  for (  Method method : methods) {
    Class<?> methodDeclaringClass=method.getDeclaringClass();
    if (!methodDeclaringClass.equals(actionClass)) {
      continue;
    }
    boolean registerMethod=false;
    JSONWebService methodJSONWebService=method.getAnnotation(JSONWebService.class);
    if (classJSONWebServiceMode.equals(JSONWebServiceMode.AUTO)) {
      registerMethod=true;
      if (methodJSONWebService != null) {
        JSONWebServiceMode methodJSONWebServiceMode=methodJSONWebService.mode();
        if (methodJSONWebServiceMode.equals(JSONWebServiceMode.IGNORE)) {
          registerMethod=false;
        }
      }
    }
 else {
      if (methodJSONWebService != null) {
        JSONWebServiceMode methodJSONWebServiceMode=methodJSONWebService.mode();
        if (!methodJSONWebServiceMode.equals(JSONWebServiceMode.IGNORE)) {
          registerMethod=true;
        }
      }
    }
    if (registerMethod) {
      registerJSONWebServiceAction(actionClass,method);
    }
  }
}

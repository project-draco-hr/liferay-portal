{
  assertCode(HttpServletResponse.SC_CREATED,service(Method.MKCOL,"mvsrc",null,null));
  for (int i=0; i < 10; i++) {
    assertCode(HttpServletResponse.SC_CREATED,servicePut("mvsrc/foo." + i,_TEST_CONTENT.getBytes()));
  }
  assertCode(HttpServletResponse.SC_CREATED,servicePut("mvnoncoll",_TEST_CONTENT.getBytes()));
  assertCode(HttpServletResponse.SC_CREATED,service(Method.MKCOL,"mvsrc/subcoll",null,null));
  assertCode(HttpServletResponse.SC_CREATED,serviceCopyOrMove(Method.COPY,"mvsrc",null,"mvdest2",-1,false));
  assertCode(HttpServletResponse.SC_CREATED,serviceCopyOrMove(Method.MOVE,"mvsrc",null,"mvdest",-1,false));
  assertCode(HttpServletResponse.SC_PRECONDITION_FAILED,serviceCopyOrMove(Method.MOVE,"mvdest",null,"mvdest2",-1,false));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceCopyOrMove(Method.MOVE,"mvdest2",null,"mvdest",-1,true));
  assertCode(HttpServletResponse.SC_CREATED,serviceCopyOrMove(Method.COPY,"mvdest",null,"mvdest2",-1,false));
  for (int i=0; i < 10; i++) {
    assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("mvdest/foo." + i));
  }
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("mvdest/subcoll"));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceCopyOrMove(Method.MOVE,"mvdest2",null,"mvnoncoll",-1,true));
}

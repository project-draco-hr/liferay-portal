{
  StubHttpServletResponse stubHttpServletResponse=new StubHttpServletResponse(){
    @Override public ServletOutputStream getOutputStream(){
      return new ServletOutputStreamAdapter(new UnsyncByteArrayOutputStream());
    }
    @Override public boolean isCommitted(){
      return false;
    }
  }
;
  RestrictedByteBufferCacheServletResponse restrictedByteBufferCacheServletResponse=new RestrictedByteBufferCacheServletResponse(stubHttpServletResponse,1024);
  OutputStream outputStream=restrictedByteBufferCacheServletResponse.getOutputStream();
  Assert.assertTrue(restrictedByteBufferCacheServletResponse.calledGetOutputStream);
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetWriter);
  Assert.assertSame(outputStream,restrictedByteBufferCacheServletResponse.getOutputStream());
  restrictedByteBufferCacheServletResponse.resetBuffer(true);
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetOutputStream);
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetWriter);
  Assert.assertNotSame(outputStream,restrictedByteBufferCacheServletResponse.getOutputStream());
  restrictedByteBufferCacheServletResponse=new RestrictedByteBufferCacheServletResponse(stubHttpServletResponse,1024);
  PrintWriter printWriter=restrictedByteBufferCacheServletResponse.getWriter();
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetOutputStream);
  Assert.assertTrue(restrictedByteBufferCacheServletResponse.calledGetWriter);
  Assert.assertSame(printWriter,restrictedByteBufferCacheServletResponse.getWriter());
  restrictedByteBufferCacheServletResponse.resetBuffer(true);
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetOutputStream);
  Assert.assertFalse(restrictedByteBufferCacheServletResponse.calledGetWriter);
  Assert.assertNotSame(printWriter,restrictedByteBufferCacheServletResponse.getWriter());
  restrictedByteBufferCacheServletResponse=new RestrictedByteBufferCacheServletResponse(stubHttpServletResponse,1024);
  restrictedByteBufferCacheServletResponse.flushCache();
  restrictedByteBufferCacheServletResponse.resetBuffer(false);
  outputStream=restrictedByteBufferCacheServletResponse.getOutputStream();
  byte[] data={0,1,2,3,4,5,6,7,8,9};
  outputStream.write(data);
  ByteBuffer byteBuffer=restrictedByteBufferCacheServletResponse.getByteBuffer();
  Assert.assertEquals(ByteBuffer.wrap(data),byteBuffer);
  restrictedByteBufferCacheServletResponse.resetBuffer(false);
  byteBuffer=restrictedByteBufferCacheServletResponse.getByteBuffer();
  Assert.assertEquals(0,byteBuffer.remaining());
  restrictedByteBufferCacheServletResponse.flushCache();
  try {
    restrictedByteBufferCacheServletResponse.resetBuffer(false);
    Assert.fail();
  }
 catch (  IllegalStateException ise) {
  }
}

{
  try {
    Indexer.deleteMessages(topic.getCompanyId(),topic.getTopicId());
  }
 catch (  IOException ioe) {
    _log.error(ioe.getMessage());
  }
catch (  ParseException pe) {
    _log.error(pe.getMessage());
  }
  String companyId=topic.getCompanyId();
  String portletId=Company.SYSTEM;
  String repositoryId=Company.SYSTEM;
  String dirName=topic.getAttachmentsDir();
  try {
    DLServiceUtil.deleteDirectory(companyId,portletId,repositoryId,dirName);
  }
 catch (  NoSuchDirectoryException nsde) {
  }
  MBThreadUtil.removeByTopicId(topic.getTopicId());
  MBMessageFlagUtil.removeByTopicId(topic.getTopicId());
  Iterator itr=MBMessageUtil.findByTopicId(topic.getTopicId()).iterator();
  while (itr.hasNext()) {
    MBMessage message=(MBMessage)itr.next();
    ResourceLocalServiceUtil.deleteResource(message.getCompanyId(),MBMessage.class.getName(),Resource.TYPE_CLASS,Resource.SCOPE_INDIVIDUAL,message.getPrimaryKey().toString());
  }
  MBMessageUtil.removeByTopicId(topic.getTopicId());
  CounterServiceUtil.reset(MBMessage.class.getName() + "." + topic.getTopicId());
  ResourceLocalServiceUtil.deleteResource(topic.getCompanyId(),MBTopic.class.getName(),Resource.TYPE_CLASS,Resource.SCOPE_INDIVIDUAL,topic.getPrimaryKey().toString());
  MBTopicUtil.remove(topic.getTopicId());
}

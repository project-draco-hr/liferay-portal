{
  ChannelPipeline channelPipeline=_embeddedChannel.pipeline();
  channelPipeline.addLast(new ChannelOutboundHandlerAdapter(){
    @Override public void write(    ChannelHandlerContext channelHandlerContext,    Object object,    ChannelPromise channelPromise){
      channelPromise.cancel(true);
    }
  }
);
  RPCRequest<String> rpcRequest=new RPCRequest<String>(_id,new TestRPCCallable(null,false,null,_result));
  RPCResponse<String> rpcResponse=new RPCResponse<String>(_id,true,null,null);
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(RPCRequest.class.getName(),Level.SEVERE);
  try {
    rpcRequest.sendRPCResponse(_embeddedChannel,rpcResponse);
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Cancelled on sending RPC response: " + rpcResponse,logRecord.getMessage());
  }
  finally {
    captureHandler.close();
  }
}

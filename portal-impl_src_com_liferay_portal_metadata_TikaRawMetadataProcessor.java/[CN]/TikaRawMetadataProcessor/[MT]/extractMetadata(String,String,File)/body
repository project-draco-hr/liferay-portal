{
  Metadata metadata=super.extractMetadata(extension,mimeType,file);
  boolean forkProcess=false;
  if (PropsValues.TEXT_EXTRACTION_FORK_PROCESS_ENABLED) {
    if (ArrayUtil.contains(PropsValues.TEXT_EXTRACTION_FORK_PROCESS_MIME_TYPES,mimeType)) {
      forkProcess=true;
    }
  }
  if (forkProcess) {
    ExtractMetadataProcessCallable extractMetadataProcessCallable=new ExtractMetadataProcessCallable(file,metadata,_parser);
    try {
      ProcessChannel<Metadata> processChannel=ProcessExecutorUtil.execute(ClassPathUtil.getPortalProcessConfig(),extractMetadataProcessCallable);
      Future<Metadata> future=processChannel.getProcessNoticeableFuture();
      return future.get();
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
  }
  try {
    return extractMetadata(file,metadata,_parser);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
}

{
  WikiPage page=(WikiPage)_request.getAttribute(WikiWebKeys.WIKI_PAGE);
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  String navigation=ParamUtil.getString(_request,"navigation","all-pages");
  int total=0;
  List<WikiPage> results=new ArrayList<>();
  if (navigation.equals("all-pages")) {
    total=WikiPageServiceUtil.getPagesCount(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId(),true,themeDisplay.getUserId(),true,WorkflowConstants.STATUS_APPROVED);
    searchContainer.setTotal(total);
    OrderByComparator<WikiPage> obc=WikiPortletUtil.getPageOrderByComparator(searchContainer.getOrderByCol(),searchContainer.getOrderByType());
    results=WikiPageServiceUtil.getPages(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId(),true,themeDisplay.getUserId(),true,WorkflowConstants.STATUS_APPROVED,searchContainer.getStart(),searchContainer.getEnd(),obc);
  }
 else   if (navigation.equals("categorized-pages") || navigation.equals("tagged-pages")) {
    AssetEntryQuery assetEntryQuery=new AssetEntryQuery(WikiPage.class.getName(),searchContainer);
    assetEntryQuery.setEnablePermissions(true);
    total=AssetEntryServiceUtil.getEntriesCount(assetEntryQuery);
    searchContainer.setTotal(total);
    assetEntryQuery.setEnd(searchContainer.getEnd());
    assetEntryQuery.setStart(searchContainer.getStart());
    List<AssetEntry> assetEntries=AssetEntryServiceUtil.getEntries(assetEntryQuery);
    for (    AssetEntry assetEntry : assetEntries) {
      WikiPageResource pageResource=WikiPageResourceLocalServiceUtil.getPageResource(assetEntry.getClassPK());
      WikiPage assetPage=WikiPageLocalServiceUtil.getPage(pageResource.getNodeId(),pageResource.getTitle());
      results.add(assetPage);
    }
  }
 else   if (navigation.equals("draft-pages") || navigation.equals("pending-pages")) {
    long draftUserId=themeDisplay.getUserId();
    PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
    if (permissionChecker.isContentReviewer(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId())) {
      draftUserId=0;
    }
    int status=WorkflowConstants.STATUS_DRAFT;
    if (navigation.equals("pending-pages")) {
      status=WorkflowConstants.STATUS_PENDING;
    }
    total=WikiPageServiceUtil.getPagesCount(themeDisplay.getScopeGroupId(),draftUserId,_wikiNode.getNodeId(),status);
    searchContainer.setTotal(total);
    results=WikiPageServiceUtil.getPages(themeDisplay.getScopeGroupId(),draftUserId,_wikiNode.getNodeId(),status,searchContainer.getStart(),searchContainer.getEnd());
  }
 else   if (navigation.equals("frontpage")) {
    WikiWebComponentProvider wikiWebComponentProvider=WikiWebComponentProvider.getWikiWebComponentProvider();
    WikiGroupServiceConfiguration wikiGroupServiceConfiguration=wikiWebComponentProvider.getWikiGroupServiceConfiguration();
    WikiPage wikiPage=WikiPageServiceUtil.getPage(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId(),wikiGroupServiceConfiguration.frontPageName());
    searchContainer.setTotal(1);
    results.add(wikiPage);
  }
 else   if (navigation.equals("history")) {
    total=WikiPageLocalServiceUtil.getPagesCount(page.getNodeId(),page.getTitle());
    searchContainer.setTotal(total);
    results=WikiPageLocalServiceUtil.getPages(page.getNodeId(),page.getTitle(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,new PageVersionComparator());
  }
 else   if (navigation.equals("incoming-links")) {
    List<WikiPage> links=WikiPageLocalServiceUtil.getIncomingLinks(page.getNodeId(),page.getTitle());
    total=links.size();
    searchContainer.setTotal(total);
    results=ListUtil.subList(links,searchContainer.getStart(),searchContainer.getEnd());
  }
 else   if (navigation.equals("orphan-pages")) {
    List<WikiPage> orphans=WikiPageServiceUtil.getOrphans(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId());
    total=orphans.size();
    searchContainer.setTotal(total);
    results=ListUtil.subList(orphans,searchContainer.getStart(),searchContainer.getEnd());
  }
 else   if (navigation.equals("outgoing-links")) {
    List<WikiPage> links=WikiPageLocalServiceUtil.getOutgoingLinks(page.getNodeId(),page.getTitle());
    total=links.size();
    searchContainer.setTotal(total);
    results=ListUtil.subList(links,searchContainer.getStart(),searchContainer.getEnd());
  }
 else   if (navigation.equals("recent-changes")) {
    total=WikiPageServiceUtil.getRecentChangesCount(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId());
    searchContainer.setTotal(total);
    results=WikiPageServiceUtil.getRecentChanges(themeDisplay.getScopeGroupId(),_wikiNode.getNodeId(),searchContainer.getStart(),searchContainer.getEnd());
  }
  searchContainer.setResults(results);
}

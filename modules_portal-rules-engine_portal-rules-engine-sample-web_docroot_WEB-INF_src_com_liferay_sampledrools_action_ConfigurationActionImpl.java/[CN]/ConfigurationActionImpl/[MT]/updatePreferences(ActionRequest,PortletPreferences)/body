{
  String domainName=ParamUtil.getString(actionRequest,"domainName");
  String rules=ParamUtil.getString(actionRequest,"rules");
  String userCustomAttributeNames=ParamUtil.getString(actionRequest,"userCustomAttributeNames");
  long[] classNameIds=StringUtil.split(ParamUtil.getString(actionRequest,"classNameIds"),0L);
  if (Validator.isNull(domainName)) {
    SessionErrors.add(actionRequest,"domainName");
  }
 else   if (Validator.isNull(rules)) {
    SessionErrors.add(actionRequest,"rules");
  }
 else   if (classNameIds.length == 0) {
    SessionErrors.add(actionRequest,"classNameIds");
  }
 else {
    RulesResourceRetriever rulesResourceRetriever=new RulesResourceRetriever(new StringResourceRetriever(rules),String.valueOf(RulesLanguage.DROOLS_RULE_LANGUAGE));
    try {
      RulesEngineUtil.update(domainName,rulesResourceRetriever,PortalClassLoaderUtil.getClassLoader());
    }
 catch (    RulesEngineException ree) {
      _log.error(ree,ree);
      SessionErrors.add(actionRequest,"rulesEngineException");
    }
  }
  if (SessionErrors.isEmpty(actionRequest)) {
    preferences.setValue("rules",rules);
    preferences.setValue("domain-name",domainName);
    preferences.setValue("user-custom-attribute-names",userCustomAttributeNames);
    preferences.setValues("class-name-ids",ArrayUtil.toStringArray(classNameIds));
  }
}

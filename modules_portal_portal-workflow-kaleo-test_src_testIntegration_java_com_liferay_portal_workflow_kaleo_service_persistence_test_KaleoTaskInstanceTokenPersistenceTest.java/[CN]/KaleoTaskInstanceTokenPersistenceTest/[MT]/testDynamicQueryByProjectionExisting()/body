{
  KaleoTaskInstanceToken newKaleoTaskInstanceToken=addKaleoTaskInstanceToken();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoTaskInstanceToken.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoTaskInstanceTokenId"));
  Object newKaleoTaskInstanceTokenId=newKaleoTaskInstanceToken.getKaleoTaskInstanceTokenId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoTaskInstanceTokenId",new Object[]{newKaleoTaskInstanceTokenId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoTaskInstanceTokenId=result.get(0);
  Assert.assertEquals(existingKaleoTaskInstanceTokenId,newKaleoTaskInstanceTokenId);
}

{
  _log.info("Upgrading Resource_.primKey for Resource_.name: " + name);
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  Set oldPks=new HashSet();
  try {
    con=HibernateUtil.getConnection();
    ps=con.prepareStatement(_SELECT_PRIMKEY);
    ps.setString(1,name);
    ps.setString(2,ResourceImpl.SCOPE_INDIVIDUAL);
    rs=ps.executeQuery();
    while (rs.next()) {
      Long oldPk=new Long(rs.getString("primKey"));
      oldPks.add(oldPk);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
  Set badPks=new HashSet();
  boolean useBatch=false;
  try {
    con=HibernateUtil.getConnection();
    useBatch=con.getMetaData().supportsBatchUpdates();
    if (!useBatch) {
      if (_log.isInfoEnabled()) {
        _log.info("Database does not support batch updates");
      }
    }
    int count=0;
    Iterator itr=oldPks.iterator();
    while (itr.hasNext()) {
      if (count == 0) {
        ps=con.prepareStatement(_UPDATE_PRIMKEY);
      }
      Long oldPk=(Long)itr.next();
      Long newPk=null;
      try {
        newPk=(Long)longPKMapper.getNewValue(oldPk);
      }
 catch (      StagnantRowException sre) {
        _log.warn("Resource_.primKey has stagnant data where " + "Resource_.name = '" + name + "': "+ sre.getMessage());
        badPks.add(oldPk);
        continue;
      }
      ps.setString(1,newPk.toString());
      ps.setString(2,name);
      ps.setString(3,ResourceImpl.SCOPE_INDIVIDUAL);
      ps.setString(4,oldPk.toString());
      if (useBatch) {
        ps.addBatch();
        if (count == _BATCH_SIZE) {
          ps.executeBatch();
          ps.close();
          count=0;
        }
 else {
          count++;
        }
      }
 else {
        ps.executeUpdate();
        ps.close();
      }
    }
    if (useBatch) {
      if (count != 0) {
        ps.executeBatch();
        ps.close();
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps);
  }
  try {
    con=HibernateUtil.getConnection();
    int count=0;
    Iterator itr=badPks.iterator();
    while (itr.hasNext()) {
      if (count == 0) {
        ps=con.prepareStatement(_CLEAN_PRIMKEY);
      }
      Long badPk=(Long)itr.next();
      ps.setString(1,name);
      ps.setString(2,ResourceImpl.SCOPE_INDIVIDUAL);
      ps.setString(3,badPk.toString());
      if (useBatch) {
        ps.addBatch();
        if (count == _BATCH_SIZE) {
          ps.executeBatch();
          ps.close();
          count=0;
        }
 else {
          count++;
        }
      }
 else {
        ps.executeUpdate();
        ps.close();
      }
    }
    if (useBatch) {
      if (count != 0) {
        ps.executeBatch();
        ps.close();
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps);
  }
}

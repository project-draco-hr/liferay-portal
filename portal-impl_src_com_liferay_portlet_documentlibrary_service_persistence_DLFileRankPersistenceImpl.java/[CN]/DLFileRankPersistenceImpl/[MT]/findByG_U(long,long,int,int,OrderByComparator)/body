{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(userId),String.valueOf(start),String.valueOf(end),String.valueOf(obc)};
  List<DLFileRank> list=(List<DLFileRank>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_OBC_G_U,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT dlFileRank FROM DLFileRank dlFileRank WHERE ");
      query.append("dlFileRank.groupId = ?");
      query.append(" AND ");
      query.append("dlFileRank.userId = ?");
      query.append(" ");
      if (obc != null) {
        query.append("ORDER BY ");
        String[] orderByFields=obc.getOrderByFields();
        for (int i=0; i < orderByFields.length; i++) {
          query.append("dlFileRank.");
          query.append(orderByFields[i]);
          if (obc.isAscending()) {
            query.append(" ASC");
          }
 else {
            query.append(" DESC");
          }
          if ((i + 1) < orderByFields.length) {
            query.append(", ");
          }
        }
      }
 else {
        query.append("ORDER BY ");
        query.append("dlFileRank.createDate DESC");
      }
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(userId);
      list=(List<DLFileRank>)QueryUtil.list(q,getDialect(),start,end);
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<DLFileRank>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_OBC_G_U,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

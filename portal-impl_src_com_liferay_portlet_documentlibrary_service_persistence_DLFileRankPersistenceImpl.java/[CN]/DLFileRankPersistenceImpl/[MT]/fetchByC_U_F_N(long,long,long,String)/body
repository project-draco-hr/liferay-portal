{
  String finderClassName=DLFileRank.class.getName();
  String finderMethodName="fetchByC_U_F_N";
  Object[] finderArgs=new Object[]{new Long(companyId),new Long(userId),new Long(folderId),name};
  Object result=FinderCache.getResult(finderClassName,finderMethodName,finderArgs);
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringMaker query=new StringMaker();
      query.append("FROM com.liferay.portlet.documentlibrary.model.DLFileRank WHERE ");
      query.append("companyId = ?");
      query.append(" AND ");
      query.append("userId = ?");
      query.append(" AND ");
      query.append("folderId = ?");
      query.append(" AND ");
      if (name == null) {
        query.append("name IS NULL");
      }
 else {
        query.append("name = ?");
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("createDate DESC");
      Query q=session.createQuery(query.toString());
      int queryPos=0;
      q.setLong(queryPos++,companyId);
      q.setLong(queryPos++,userId);
      q.setLong(queryPos++,folderId);
      if (name != null) {
        q.setString(queryPos++,name);
      }
      List list=q.list();
      if (list.size() == 0) {
        return null;
      }
      DLFileRank dlFileRank=(DLFileRank)list.get(0);
      FinderCache.putResult(finderClassName,finderMethodName,finderArgs,dlFileRank);
      return dlFileRank;
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (DLFileRank)result;
  }
}

{
  Calendar myCurrent=(Calendar)current.clone();
  myCurrent.clear(Calendar.ZONE_OFFSET);
  myCurrent.clear(Calendar.DST_OFFSET);
  myCurrent.setTimeZone(TimeZoneUtil.getTimeZone(StringPool.UTC));
  myCurrent.setMinimalDaysInFirstWeek(4);
  myCurrent.setFirstDayOfWeek(dtStart.getFirstDayOfWeek());
  if (myCurrent.getTime().getTime() < dtStart.getTime().getTime()) {
    if (debug) {
      System.err.println("current < start");
    }
    return false;
  }
  Calendar candidate=getCandidateStartTime(myCurrent);
  while ((candidate.getTime().getTime() + duration.getInterval()) > myCurrent.getTime().getTime()) {
    if (candidateIsInRecurrence(candidate,debug)) {
      return true;
    }
    candidate.add(Calendar.SECOND,-1);
    if (candidate.getTime().getTime() < dtStart.getTime().getTime()) {
      if (debug) {
        System.err.println("No candidates after dtStart");
      }
      return false;
    }
    candidate=getCandidateStartTime(candidate);
  }
  if (debug) {
    System.err.println("No matching candidates");
  }
  return false;
}

{
  hideDefaultSuccessMessage(actionRequest);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    String fileName=ParamUtil.getString(actionRequest,"exportFileName");
    long groupId=ParamUtil.getLong(actionRequest,"groupId");
    boolean privateLayout=ParamUtil.getBoolean(actionRequest,"privateLayout");
    long[] layoutIds=getLayoutIds(actionRequest);
    DateRange dateRange=ExportImportDateUtil.getDateRange(actionRequest,groupId,privateLayout,0,null,ExportImportDateUtil.RANGE_ALL);
    if (Validator.isNotNull(cmd)) {
      LayoutServiceUtil.exportLayoutsAsFileInBackground(fileName,groupId,privateLayout,layoutIds,actionRequest.getParameterMap(),dateRange.getStartDate(),dateRange.getEndDate(),fileName);
      String redirect=ParamUtil.getString(actionRequest,"redirect");
      sendRedirect(actionRequest,actionResponse,redirect);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    SessionErrors.add(actionRequest,e.getClass());
    String pagesRedirect=ParamUtil.getString(actionRequest,"pagesRedirect");
    sendRedirect(actionRequest,actionResponse,pagesRedirect);
  }
}

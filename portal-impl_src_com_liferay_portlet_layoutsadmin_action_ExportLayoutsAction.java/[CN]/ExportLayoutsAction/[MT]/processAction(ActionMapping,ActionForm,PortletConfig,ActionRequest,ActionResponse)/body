{
  hideDefaultSuccessMessage(actionRequest);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  if (Validator.isNull(cmd)) {
    return;
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  try {
    long groupId=ParamUtil.getLong(actionRequest,"liveGroupId");
    boolean privateLayout=ParamUtil.getBoolean(actionRequest,"privateLayout");
    long[] layoutIds=getLayoutIds(actionRequest);
    String taskName=StringPool.BLANK;
    if (privateLayout) {
      taskName=LanguageUtil.get(actionRequest.getLocale(),"private-pages");
    }
 else {
      taskName=LanguageUtil.get(actionRequest.getLocale(),"public-pages");
    }
    Map<String,Serializable> settingsMap=ExportImportConfigurationSettingsMapFactory.buildSettingsMap(themeDisplay.getUserId(),groupId,privateLayout,layoutIds,actionRequest.getParameterMap(),themeDisplay.getLocale(),themeDisplay.getTimeZone());
    ServiceContext serviceContext=new ServiceContext();
    ExportImportConfiguration exportImportConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(),groupId,taskName,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT,settingsMap,WorkflowConstants.STATUS_DRAFT,serviceContext);
    ExportImportServiceUtil.exportLayoutsAsFileInBackground(exportImportConfiguration);
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  Exception e) {
    SessionErrors.add(actionRequest,e.getClass());
    if (!(e instanceof LARFileNameException)) {
      _log.error(e,e);
      sendRedirect(actionRequest,actionResponse);
    }
  }
}

{
  _clusterSchedulerEngine=_getClusterSchedulerEngine(false,4,0);
  SchedulerResponse schedulerResponse=_getMemoryClusteredJob(_clusterSchedulerEngine,_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  _assertTriggerState(schedulerResponse,TriggerState.NORMAL);
  _clusterSchedulerEngine.unschedule(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  schedulerResponse=_getMemoryClusteredJob(_clusterSchedulerEngine,_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  Assert.assertNull(schedulerResponse);
  List<SchedulerResponse> schedulerResponses=_getMemoryClusteredJobs(_clusterSchedulerEngine,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  for (  SchedulerResponse curSchedulerResponse : schedulerResponses) {
    _assertTriggerState(curSchedulerResponse,TriggerState.NORMAL);
  }
  _clusterSchedulerEngine.unschedule(_MEMORY_CLUSTER_TEST_GROUP_NAME);
  schedulerResponses=_getMemoryClusteredJobs(_clusterSchedulerEngine,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  for (  SchedulerResponse curSchedulerResponse : schedulerResponses) {
    _assertTriggerState(curSchedulerResponse,TriggerState.UNSCHEDULED);
  }
}

{
  _clusterSchedulerEngine=_getClusterSchedulerEngine(true,1,0);
  List<SchedulerResponse> schedulerResponses=_clusterSchedulerEngine.getScheduledJobs();
  Assert.assertEquals(1,schedulerResponses.size());
  Trigger trigger=TriggerFactoryUtil.buildTrigger(TriggerType.SIMPLE,_TEST_JOB_PREFIX + "new",_MEMORY_CLUSTER_TEST_GROUP,null,null,_DEFAULT_INTERVAL);
  _clusterSchedulerEngine.schedule(trigger,StringPool.BLANK,StringPool.BLANK,new Message());
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs();
  Assert.assertEquals(2,schedulerResponses.size());
  trigger=TriggerFactoryUtil.buildTrigger(TriggerType.SIMPLE,_WRONG_JOB_NAME,_PERSISTENT_TEST_GROUP,null,null,_DEFAULT_INTERVAL);
  try {
    _clusterSchedulerEngine.schedule(trigger,StringPool.BLANK,StringPool.BLANK,new Message());
    Assert.fail();
  }
 catch (  SchedulerException se) {
  }
}

{
  _clusterSchedulerEngine=_getClusterSchedulerEngine(true,2,2);
  SchedulerResponse schedulerResponse=_clusterSchedulerEngine.getScheduledJob(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME);
  Assert.assertNotNull(schedulerResponse);
  List<SchedulerResponse> schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(_MEMORY_CLUSTER_TEST_GROUP_NAME);
  Assert.assertEquals(2,schedulerResponses.size());
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs();
  Assert.assertEquals(4,schedulerResponses.size());
  try {
    _clusterSchedulerEngine.getScheduledJob(_INVALID_JOB_NAME,_INVALID_PERSISTENT_GROUP_NAME);
    Assert.fail();
  }
 catch (  SchedulerException se) {
  }
  try {
    _clusterSchedulerEngine.getScheduledJobs(_INVALID_PERSISTENT_GROUP_NAME);
    Assert.fail();
  }
 catch (  SchedulerException se) {
  }
  _clusterSchedulerEngine.delete(_MEMORY_CLUSTER_TEST_GROUP_NAME);
  _clusterSchedulerEngine.delete(_PERSISTENT_TEST_GROUP_NAME);
  try {
    _clusterSchedulerEngine.getScheduledJobs();
    Assert.fail();
  }
 catch (  SchedulerException se) {
  }
}

{
  _clusterSchedulerEngine=_getClusterSchedulerEngine(false,2,0);
  SchedulerResponse schedulerResponse=_getMemoryClusteredJob(_clusterSchedulerEngine,_TEST_JOB_0,_MEMORY_CLUSTER_TEST_GROUP);
  _assertTriggerContent(schedulerResponse,_DEFAULT_INTERVAL);
  Trigger trigger=TriggerFactoryUtil.buildTrigger(TriggerType.SIMPLE,_TEST_JOB_0,_MEMORY_CLUSTER_TEST_GROUP,null,null,_DEFAULT_INTERVAL * 2);
  _clusterSchedulerEngine.update(trigger);
  schedulerResponse=_getMemoryClusteredJob(_clusterSchedulerEngine,_TEST_JOB_0,_MEMORY_CLUSTER_TEST_GROUP);
  _assertTriggerContent(schedulerResponse,_DEFAULT_INTERVAL * 2);
  trigger=TriggerFactoryUtil.buildTrigger(TriggerType.SIMPLE,_TEST_JOB_0,_WRONG_MEMORY_CLUSTER_GROUP_NAME,null,null,_DEFAULT_INTERVAL);
  try {
    _clusterSchedulerEngine.update(trigger);
    Assert.fail();
  }
 catch (  SchedulerException se) {
  }
}

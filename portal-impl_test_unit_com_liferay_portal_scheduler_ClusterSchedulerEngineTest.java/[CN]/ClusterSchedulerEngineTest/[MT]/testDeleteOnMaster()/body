{
  _mockClusterMasterExecutor.reset(true,0,0);
  _mockSchedulerEngine.resetJobs(4,4);
  _clusterSchedulerEngine.start();
  List<SchedulerResponse> schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertEquals(4,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  _clusterSchedulerEngine.delete(_TEST_JOB_NAME_0,_MEMORY_CLUSTER_TEST_GROUP_NAME,StorageType.MEMORY_CLUSTERED);
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertEquals(3,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  Assert.assertTrue(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
  _clusterSchedulerEngine.delete(_MEMORY_CLUSTER_TEST_GROUP_NAME,StorageType.MEMORY_CLUSTERED);
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  Assert.assertTrue(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.PERSISTED);
  Assert.assertEquals(4,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  _clusterSchedulerEngine.delete(_TEST_JOB_NAME_0,_PERSISTENT_TEST_GROUP_NAME,StorageType.PERSISTED);
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.PERSISTED);
  Assert.assertEquals(3,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  Assert.assertFalse(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
  _clusterSchedulerEngine.delete(_PERSISTENT_TEST_GROUP_NAME,StorageType.PERSISTED);
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.PERSISTED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  Assert.assertFalse(_clusterInvokeAcceptor.accept(ClusterableContextThreadLocalAdvice.getAndClearThreadLocals()));
}

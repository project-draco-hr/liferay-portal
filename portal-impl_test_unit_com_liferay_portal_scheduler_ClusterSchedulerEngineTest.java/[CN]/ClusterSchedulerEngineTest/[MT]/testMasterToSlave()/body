{
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(ClusterSchedulerEngine.class.getName(),Level.OFF);
  _mockClusterMasterExecutor.reset(true,0,0);
  _mockSchedulerEngine.resetJobs(4,2);
  _clusterSchedulerEngine.start();
  Assert.assertTrue(ClusterMasterExecutorUtil.isMaster());
  List<SchedulerResponse> schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertEquals(4,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  List<LogRecord> logRecords=captureHandler.resetLogLevel(Level.OFF);
  _mockClusterMasterExecutor.reset(false,4,2);
  ClusterMasterTokenTransitionListener clusterMasterTokenTransitionListener=_mockClusterMasterExecutor.getClusterMasterTokenTransitionListener();
  clusterMasterTokenTransitionListener.masterTokenReleased();
  Assert.assertTrue(logRecords.isEmpty());
  Assert.assertFalse(ClusterMasterExecutorUtil.isMaster());
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertEquals(4,_memoryClusteredJobs.size());
  _mockClusterMasterExecutor.reset(true,0,0);
  _mockSchedulerEngine.resetJobs(4,2);
  _clusterSchedulerEngine.start();
  _memoryClusteredJobs.clear();
  Assert.assertTrue(ClusterMasterExecutorUtil.isMaster());
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertEquals(4,schedulerResponses.size());
  Assert.assertTrue(_memoryClusteredJobs.isEmpty());
  logRecords=captureHandler.resetLogLevel(Level.ALL);
  _mockClusterMasterExecutor.reset(false,4,2);
  clusterMasterTokenTransitionListener=_mockClusterMasterExecutor.getClusterMasterTokenTransitionListener();
  clusterMasterTokenTransitionListener.masterTokenReleased();
  Assert.assertEquals(1,logRecords.size());
  Assert.assertEquals("MEMORY_CLUSTERED jobs stop running on this node",logRecords.get(0).getMessage());
  Assert.assertFalse(ClusterMasterExecutorUtil.isMaster());
  schedulerResponses=_clusterSchedulerEngine.getScheduledJobs(StorageType.MEMORY_CLUSTERED);
  Assert.assertTrue(schedulerResponses.isEmpty());
  Assert.assertEquals(4,_memoryClusteredJobs.size());
}

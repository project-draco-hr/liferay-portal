{
  portletDataContext.addPermissions("com.liferay.portlet.bookmarks",portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery folderActionableDynamicQuery=new BookmarksFolderActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      BookmarksFolder folder=(BookmarksFolder)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,folder);
    }
  }
;
  folderActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  folderActionableDynamicQuery.performActions();
  ActionableDynamicQuery entryActionableDynamicQuery=new BookmarksEntryActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      BookmarksEntry entry=(BookmarksEntry)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,entry);
    }
  }
;
  entryActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  entryActionableDynamicQuery.performActions();
  return getExportDataRootElementString(rootElement);
}

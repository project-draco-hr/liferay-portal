{
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  AssetEntryQuery assetEntryQuery=getAssetEntryQuery();
  List<AssetEntryResult> assetEntryResults=new ArrayList<>();
  int end=searchContainer.getEnd();
  int start=searchContainer.getStart();
  int total=0;
  for (  long classNameId : classNameIds) {
    assetEntryQuery.setClassNameIds(new long[]{classNameId});
    BaseModelSearchResult<AssetEntry> baseModelSearchResult=getAssetEntries(assetEntryQuery,portletName,start,end);
    int groupTotal=baseModelSearchResult.getLength();
    total+=groupTotal;
    List<AssetEntry> assetEntries=baseModelSearchResult.getBaseModels();
    if (!assetEntries.isEmpty() && (start < groupTotal)) {
      AssetRendererFactory<?> groupAssetRendererFactory=AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassNameId(classNameId);
      String title=ResourceActionsUtil.getModelResource(locale,groupAssetRendererFactory.getClassName());
      assetEntryResults.add(new AssetEntryResult(title,assetEntries));
    }
    if (!portletName.equals(AssetPublisherPortletKeys.RECENT_CONTENT)) {
      if (groupTotal > 0) {
        if ((end > 0) && (end > groupTotal)) {
          end-=groupTotal;
        }
 else {
          end=0;
        }
        if ((start > 0) && (start > groupTotal)) {
          start-=groupTotal;
        }
 else {
          start=0;
        }
      }
      assetEntryQuery.setEnd(QueryUtil.ALL_POS);
      assetEntryQuery.setStart(QueryUtil.ALL_POS);
    }
  }
  searchContainer.setTotal(total);
  return assetEntryResults;
}

{
  List<AssetEntryResult> assetEntryResults=new ArrayList<>();
  List<AssetCategory> assetCategories=_assetCategoryLocalService.getVocabularyRootCategories(assetVocabularyId,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  assetEntryQuery.setClassNameIds(classNameIds);
  int end=searchContainer.getEnd();
  int start=searchContainer.getStart();
  int total=0;
  for (  AssetCategory assetCategory : assetCategories) {
    long[] oldAllCategoryIds=assetEntryQuery.getAllCategoryIds();
    long[] newAllAssetCategoryIds=ArrayUtil.append(oldAllCategoryIds,assetCategory.getCategoryId());
    assetEntryQuery.setAllCategoryIds(newAllAssetCategoryIds);
    BaseModelSearchResult<AssetEntry> baseModelSearchResult=getAssetEntries(assetEntryQuery,layout,portletPreferences,portletName,locale,timeZone,companyId,scopeGroupId,userId,attributes,start,end);
    int groupTotal=baseModelSearchResult.getLength();
    total+=groupTotal;
    List<AssetEntry> assetEntries=baseModelSearchResult.getBaseModels();
    if (!assetEntries.isEmpty() && (start < groupTotal)) {
      String title=assetCategory.getTitle(locale);
      assetEntryResults.add(new AssetEntryResult(title,assetEntries));
    }
    if (groupTotal > 0) {
      if ((end > 0) && (end > groupTotal)) {
        end-=groupTotal;
      }
 else {
        end=0;
      }
      if ((start > 0) && (start > groupTotal)) {
        start-=groupTotal;
      }
 else {
        start=0;
      }
    }
    assetEntryQuery.setAllCategoryIds(oldAllCategoryIds);
    assetEntryQuery.setEnd(QueryUtil.ALL_POS);
    assetEntryQuery.setStart(QueryUtil.ALL_POS);
  }
  searchContainer.setTotal(total);
  return assetEntryResults;
}

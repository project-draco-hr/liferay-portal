{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  long maxFileSize=ParamUtil.getLong(actionRequest,"maxFileSize");
  try {
    UploadException uploadException=(UploadException)actionRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
    if (uploadException != null) {
      Throwable cause=uploadException.getCause();
      if (uploadException.isExceededFileSizeLimit()) {
        throw new FileSizeException(cause);
      }
      if (uploadException.isExceededUploadRequestSizeLimit()) {
        throw new UploadRequestSizeException(cause);
      }
      throw new PortalException(cause);
    }
 else     if (cmd.equals(Constants.ADD_TEMP)) {
      FileEntry tempImageFileEntry=addTempImageFileEntry(actionRequest);
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.put("tempImageFileName",tempImageFileEntry.getTitle());
      JSONPortletResponseUtil.writeJSON(actionRequest,actionResponse,jsonObject);
    }
 else {
      FileEntry fileEntry=null;
      boolean imageUploaded=ParamUtil.getBoolean(actionRequest,"imageUploaded");
      if (imageUploaded) {
        fileEntry=saveTempImageFileEntry(actionRequest);
        if (fileEntry.getSize() > maxFileSize) {
          throw new FileSizeException();
        }
      }
      SessionMessages.add(actionRequest,"imageUploaded",fileEntry);
      sendRedirect(actionRequest,actionResponse);
    }
  }
 catch (  Exception e) {
    handleUploadException(actionRequest,actionResponse,cmd,maxFileSize,e);
  }
}

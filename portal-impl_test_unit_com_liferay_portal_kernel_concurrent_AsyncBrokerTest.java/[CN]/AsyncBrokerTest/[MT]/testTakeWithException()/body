{
  AsyncBroker<String,String> asyncBroker=new AsyncBroker<String,String>();
  Map<String,DefaultNoticeableFuture<String>> defaultNoticeableFutures=ReflectionTestUtil.getFieldValue(asyncBroker,"_defaultNoticeableFutures");
  Assert.assertTrue(defaultNoticeableFutures.isEmpty());
  Exception exception=new Exception();
  Assert.assertFalse(asyncBroker.takeWithException(_KEY,exception));
  NoticeableFuture<String> noticeableFuture=asyncBroker.post(_KEY);
  Assert.assertEquals(1,defaultNoticeableFutures.size());
  Assert.assertSame(noticeableFuture,defaultNoticeableFutures.get(_KEY));
  Assert.assertTrue(asyncBroker.takeWithException(_KEY,exception));
  try {
    noticeableFuture.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(exception,ee.getCause());
  }
  Assert.assertTrue(defaultNoticeableFutures.isEmpty());
  Assert.assertFalse(asyncBroker.takeWithException(_KEY,exception));
}

{
  Throwable throwable=new Throwable();
  ReflectionUtilAdvice.setDeclaredFieldThrowable(throwable);
  Level level=Level.OFF;
  if (withLog) {
    level=Level.WARNING;
  }
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(AsyncBroker.class.getName(),level)){
    Class.forName(AsyncBroker.class.getName(),true,AsyncBroker.class.getClassLoader());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    if (withLog) {
      Assert.assertEquals(1,logRecords.size());
      LogRecord logRecord=logRecords.get(0);
      Assert.assertEquals("Cancellation of orphaned noticeable futures is disabled " + "because the JVM does not support phantom reference " + "resurrection",logRecord.getMessage());
      Assert.assertSame(throwable,logRecord.getThrown());
    }
 else {
      Assert.assertTrue(logRecords.isEmpty());
    }
    ReflectionUtilAdvice.setDeclaredFieldThrowable(null);
    Assert.assertNull(ReflectionTestUtil.getFieldValue(AsyncBroker.class,"_REFERENT_FIELD"));
  }
 }

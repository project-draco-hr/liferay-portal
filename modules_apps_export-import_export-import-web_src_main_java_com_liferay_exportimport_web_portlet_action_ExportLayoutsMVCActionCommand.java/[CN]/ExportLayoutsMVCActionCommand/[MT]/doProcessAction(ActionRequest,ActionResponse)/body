{
  hideDefaultSuccessMessage(actionRequest);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  if (Validator.isNull(cmd)) {
    SessionMessages.add(actionRequest,PortalUtil.getPortletId(actionRequest) + SessionMessages.KEY_SUFFIX_FORCE_SEND_REDIRECT);
    hideDefaultSuccessMessage(actionRequest);
    return;
  }
  setLayoutIds(actionRequest);
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    long groupId=ParamUtil.getLong(actionRequest,"liveGroupId");
    boolean privateLayout=ParamUtil.getBoolean(actionRequest,"privateLayout");
    long[] layoutIds=getLayoutIds(actionRequest);
    Map<String,Serializable> exportLayoutSettingsMap=ExportImportConfigurationSettingsMapFactory.buildExportLayoutSettingsMap(themeDisplay.getUserId(),groupId,privateLayout,layoutIds,actionRequest.getParameterMap(),themeDisplay.getLocale(),themeDisplay.getTimeZone());
    String taskName=ParamUtil.getString(actionRequest,"name");
    if (Validator.isNull(taskName)) {
      if (privateLayout) {
        taskName=LanguageUtil.get(actionRequest.getLocale(),"private-pages");
      }
 else {
        taskName=LanguageUtil.get(actionRequest.getLocale(),"public-pages");
      }
    }
    ExportImportConfiguration exportImportConfiguration=_exportImportConfigurationLocalService.addDraftExportImportConfiguration(themeDisplay.getUserId(),taskName,ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT,exportLayoutSettingsMap);
    _exportImportService.exportLayoutsAsFileInBackground(exportImportConfiguration);
    sendRedirect(actionRequest,actionResponse);
  }
 catch (  Exception e) {
    SessionErrors.add(actionRequest,e.getClass());
    if (!(e instanceof LARFileNameException)) {
      _log.error(e,e);
    }
  }
}

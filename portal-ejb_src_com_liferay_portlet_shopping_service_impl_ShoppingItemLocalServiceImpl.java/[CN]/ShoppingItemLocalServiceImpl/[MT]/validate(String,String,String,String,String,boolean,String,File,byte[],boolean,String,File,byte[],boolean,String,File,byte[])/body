{
  if (Validator.isNull(sku)) {
    throw new ItemSKUException();
  }
  try {
    ShoppingItem item=ShoppingItemUtil.findByC_S(companyId,sku);
    if (itemId != null) {
      if (!item.getItemId().equals(itemId)) {
        throw new DuplicateItemSKUException();
      }
    }
 else {
      throw new DuplicateItemSKUException();
    }
  }
 catch (  NoSuchItemException nsie) {
  }
  ShoppingCategory category=ShoppingCategoryUtil.findByPrimaryKey(categoryId);
  if (!category.getCompanyId().equals(companyId)) {
    throw new NoSuchCategoryException();
  }
  if (Validator.isNull(name)) {
    throw new ItemNameException();
  }
  String[] imageExtensions=PropsUtil.getArray(PropsUtil.SHOPPING_IMAGE_EXTENSIONS);
  if (smallImage && Validator.isNull(smallImageURL) && smallFile != null && smallBytes != null) {
    String smallImageName=smallFile.getName();
    if (smallImageName != null) {
      boolean validSmallImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(smallImageName,imageExtensions[i])) {
          validSmallImageExtension=true;
          break;
        }
      }
      if (!validSmallImageExtension) {
        throw new ItemSmallImageNameException(smallImageName);
      }
    }
    long smallImageMaxSize=GetterUtil.getLong(PropsUtil.get(PropsUtil.SHOPPING_IMAGE_SMALL_MAX_SIZE));
    if ((smallImageMaxSize > 0) && ((smallBytes == null) || (smallBytes.length > smallImageMaxSize))) {
      throw new ItemSmallImageSizeException();
    }
  }
  if (mediumImage && Validator.isNull(mediumImageURL) && mediumFile != null && mediumBytes != null) {
    String mediumImageName=mediumFile.getName();
    if (mediumImageName != null) {
      boolean validMediumImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(mediumImageName,imageExtensions[i])) {
          validMediumImageExtension=true;
          break;
        }
      }
      if (!validMediumImageExtension) {
        throw new ItemMediumImageNameException(mediumImageName);
      }
    }
    long mediumImageMaxSize=GetterUtil.getLong(PropsUtil.get(PropsUtil.SHOPPING_IMAGE_MEDIUM_MAX_SIZE));
    if ((mediumImageMaxSize > 0) && ((mediumBytes == null) || (mediumBytes.length > mediumImageMaxSize))) {
      throw new ItemMediumImageSizeException();
    }
  }
  if (largeImage && Validator.isNull(largeImageURL) && largeFile != null && largeBytes != null) {
    String largeImageName=largeFile.getName();
    if (largeImageName != null) {
      boolean validLargeImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(largeImageName,imageExtensions[i])) {
          validLargeImageExtension=true;
          break;
        }
      }
      if (!validLargeImageExtension) {
        throw new ItemLargeImageNameException(largeImageName);
      }
    }
    long largeImageMaxSize=GetterUtil.getLong(PropsUtil.get(PropsUtil.SHOPPING_IMAGE_LARGE_MAX_SIZE));
    if ((largeImageMaxSize > 0) && ((largeBytes == null) || (largeBytes.length > largeImageMaxSize))) {
      throw new ItemLargeImageSizeException();
    }
  }
}

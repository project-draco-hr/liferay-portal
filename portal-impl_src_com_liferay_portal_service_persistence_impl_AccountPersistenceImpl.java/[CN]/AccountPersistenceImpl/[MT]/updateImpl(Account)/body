{
  account=toUnwrappedModel(account);
  boolean isNew=account.isNew();
  AccountModelImpl accountModelImpl=(AccountModelImpl)account;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (account.getCreateDate() == null)) {
    if (serviceContext == null) {
      account.setCreateDate(now);
    }
 else {
      account.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!accountModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      account.setModifiedDate(now);
    }
 else {
      account.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (account.isNew()) {
      session.save(account);
      account.setNew(false);
    }
 else {
      account=(Account)session.merge(account);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
  entityCache.putResult(AccountModelImpl.ENTITY_CACHE_ENABLED,AccountImpl.class,account.getPrimaryKey(),account,false);
  account.resetOriginalValues();
  return account;
}

{
  VelocityEngineConfiguration velocityEngineConfiguration=ConfigurableUtil.createConfigurable(VelocityEngineConfiguration.class,Collections.emptyMap());
  _templateContextHelper=new MockTemplateContextHelper();
  _velocityEngine=new VelocityEngine();
  boolean cacheEnabled=false;
  ExtendedProperties extendedProperties=new FastExtendedProperties();
  extendedProperties.setProperty(VelocityEngine.DIRECTIVE_IF_TOSTRING_NULLCHECK,String.valueOf(velocityEngineConfiguration.directiveIfToStringNullCheck()));
  extendedProperties.setProperty(VelocityEngine.EVENTHANDLER_METHODEXCEPTION,LiferayMethodExceptionEventHandler.class.getName());
  extendedProperties.setProperty(RuntimeConstants.INTROSPECTOR_RESTRICT_CLASSES,StringUtil.merge(velocityEngineConfiguration.restrictedClasses()));
  extendedProperties.setProperty(RuntimeConstants.INTROSPECTOR_RESTRICT_PACKAGES,StringUtil.merge(velocityEngineConfiguration.restrictedPackages()));
  extendedProperties.setProperty(VelocityEngine.RESOURCE_LOADER,"liferay");
  extendedProperties.setProperty("liferay." + VelocityEngine.RESOURCE_LOADER + ".cache",String.valueOf(cacheEnabled));
  extendedProperties.setProperty("liferay." + VelocityEngine.RESOURCE_LOADER + ".resourceModificationCheckInterval",velocityEngineConfiguration.resourceModificationCheckInterval() + "");
  extendedProperties.setProperty("liferay." + VelocityEngine.RESOURCE_LOADER + ".class",LiferayResourceLoader.class.getName());
  extendedProperties.setProperty(VelocityEngine.RESOURCE_MANAGER_CLASS,LiferayResourceManager.class.getName());
  extendedProperties.setProperty("liferay." + VelocityEngine.RESOURCE_MANAGER_CLASS + ".resourceModificationCheckInterval",velocityEngineConfiguration.resourceModificationCheckInterval() + "");
  extendedProperties.setProperty(VelocityTemplateResourceLoader.class.getName(),_templateResourceLoader);
  extendedProperties.setProperty(VelocityEngine.RUNTIME_LOG_LOGSYSTEM_CLASS,velocityEngineConfiguration.logger());
  extendedProperties.setProperty(VelocityEngine.RUNTIME_LOG_LOGSYSTEM + ".log4j.category",velocityEngineConfiguration.loggerCategory());
  extendedProperties.setProperty(RuntimeConstants.UBERSPECT_CLASSNAME,SecureUberspector.class.getName());
  extendedProperties.setProperty(VelocityEngine.VM_LIBRARY,StringUtil.merge(velocityEngineConfiguration.velocimacroLibrary()));
  extendedProperties.setProperty(VelocityEngine.VM_LIBRARY_AUTORELOAD,String.valueOf(!cacheEnabled));
  extendedProperties.setProperty(VelocityEngine.VM_PERM_ALLOW_INLINE_REPLACE_GLOBAL,String.valueOf(!cacheEnabled));
  _velocityEngine.setExtendedProperties(extendedProperties);
  _velocityEngine.init();
}

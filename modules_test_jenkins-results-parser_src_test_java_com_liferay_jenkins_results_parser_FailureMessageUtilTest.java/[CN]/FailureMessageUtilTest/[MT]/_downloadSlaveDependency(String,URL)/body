{
  System.out.println("downloading slave results: " + slaveDependencyIdentifier);
  String slaveDependencyRootPath=_testDependenciesDir.getPath() + "/" + slaveDependencyIdentifier;
  String slaveLogTextPath=slaveDependencyRootPath + "/logText";
  String slaveApiPath=slaveDependencyRootPath + "/api";
  File slaveLogTextDir=new File(slaveLogTextPath);
  File slaveApiDir=new File(slaveApiPath);
  if (slaveLogTextDir.exists()) {
    return;
  }
  slaveLogTextDir.mkdirs();
  slaveApiDir.mkdirs();
  try {
    String jsonURL=slaveDependencyURL.toString() + "/api/json";
    System.out.println(" downloading json from:" + jsonURL);
    String jsonString=JenkinsResultsParserUtil.toString(jsonURL);
    File jsonFile=new File(slaveApiDir.getPath() + "/json");
    _write(jsonFile,jsonString);
    System.out.println(" wrote file: " + jsonFile.getPath() + " size; "+ jsonFile.length());
    String consoleURL=slaveDependencyURL.toString() + "/logText/progressiveText";
    System.out.println(" downloading console from:" + consoleURL);
    String console=JenkinsResultsParserUtil.toString(consoleURL);
    File consoleFile=new File(slaveLogTextDir.getPath() + "/progressiveText");
    _write(consoleFile,console);
    System.out.println(" wrote file: " + consoleFile.getPath() + " size; "+ consoleFile.length());
    FailureMessageUtilTest failureMessageUtilTest=new FailureMessageUtilTest();
    failureMessageUtilTest.writeExpectedResults(failureMessageUtilTest._project,new File(slaveDependencyRootPath));
  }
 catch (  IOException ioe) {
    _deleteFile(slaveLogTextDir);
    _deleteFile(slaveApiDir);
    throw ioe;
  }
}

{
  Layout layout=(Layout)actionRequest.getAttribute(WebKeys.LAYOUT);
  long categoryId=ParamUtil.getLong(actionRequest,"categoryId");
  long parentCategoryId=ParamUtil.getLong(actionRequest,"parentCategoryId");
  String name=ParamUtil.getString(actionRequest,"name");
  String description=ParamUtil.getString(actionRequest,"description");
  String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
  String inProtocol=ParamUtil.getString(actionRequest,"inProtocol");
  String inServerName=ParamUtil.getString(actionRequest,"inServerName");
  int inServerPort=ParamUtil.getInteger(actionRequest,"inServerPort");
  boolean inUseSSL=ParamUtil.getBoolean(actionRequest,"inUseSSL");
  String inUserName=ParamUtil.getString(actionRequest,"inUserName");
  String inPassword=ParamUtil.getString(actionRequest,"inPassword");
  int inReadInterval=ParamUtil.getInteger(actionRequest,"inReadInterval");
  String outEmailAddress=ParamUtil.getString(actionRequest,"outEmailAddress");
  boolean outCustom=ParamUtil.getBoolean(actionRequest,"outCustom");
  String outServerName=ParamUtil.getString(actionRequest,"outServerName");
  int outServerPort=ParamUtil.getInteger(actionRequest,"outServerPort");
  boolean outUseSSL=ParamUtil.getBoolean(actionRequest,"outUseSSL");
  String outUserName=ParamUtil.getString(actionRequest,"outUserName");
  String outPassword=ParamUtil.getString(actionRequest,"outPassword");
  boolean mailingListActive=ParamUtil.getBoolean(actionRequest,"mailingListActive");
  boolean mergeWithParentCategory=ParamUtil.getBoolean(actionRequest,"mergeWithParentCategory");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(MBCategory.class.getName(),actionRequest);
  if (categoryId <= 0) {
    if (PropsValues.CAPTCHA_CHECK_PORTLET_MESSAGE_BOARDS_EDIT_CATEGORY) {
      CaptchaUtil.check(actionRequest);
    }
    MBCategoryServiceUtil.addCategory(parentCategoryId,name,description,emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,serviceContext);
  }
 else {
    MBCategoryServiceUtil.updateCategory(categoryId,parentCategoryId,name,description,emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,mergeWithParentCategory);
  }
}

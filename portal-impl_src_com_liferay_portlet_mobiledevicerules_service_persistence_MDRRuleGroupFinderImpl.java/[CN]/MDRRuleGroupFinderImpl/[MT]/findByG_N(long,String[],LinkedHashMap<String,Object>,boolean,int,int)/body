{
  names=CustomSQLUtil.keywords(names);
  if (params == null) {
    params=_emptyLinkedHashMap;
  }
  Session session=null;
  try {
    session=openSession();
    String cacheKey=_buildCacheKey(FIND_BY_G_N,params);
    String findByG_N=CustomSQLUtil.get(FIND_BY_G_N);
    StringBundler sb=new StringBundler();
    sb.append(StringPool.OPEN_PARENTHESIS);
    sb.append(replaceGroupIds(findByG_N,cacheKey,params));
    sb.append(StringPool.CLOSE_PARENTHESIS);
    String sql=sb.toString();
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(name)",StringPool.LIKE,true,names);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("MDRRuleGroup",MDRRuleGroupImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    setParams(qPos,params);
    qPos.add(names,2);
    return (List<MDRRuleGroup>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

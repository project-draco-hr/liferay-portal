{
  _lock.lock();
  try {
    String spiProviderName=spiProvider.getName();
    if (_spiProviders.remove(spiProviderName,spiProvider)) {
      for (      Map.Entry<SPIKey,SPI> entry : _spis.entrySet()) {
        SPIKey spiKey=entry.getKey();
        if (!spiProviderName.equals(spiKey._spiProviderName)) {
          continue;
        }
        SPI spi=entry.getValue();
        try {
          spi.destroy();
          if (_log.isInfoEnabled()) {
            _log.info("Unregistered SPI " + spi + " while unregistering SPI provider "+ spiProvider);
          }
        }
 catch (        RemoteException re) {
          _log.error("Unable to unregister SPI " + spi + " while unregistering SPI provider "+ spiProvider,re);
        }
      }
      if (_log.isInfoEnabled()) {
        _log.info("Unregistered SPI provider " + spiProvider);
      }
      return true;
    }
 else {
      if (_log.isWarnEnabled()) {
        _log.warn("Not unregistering unregistered SPI provider " + spiProvider);
      }
      return false;
    }
  }
  finally {
    _lock.unlock();
  }
}

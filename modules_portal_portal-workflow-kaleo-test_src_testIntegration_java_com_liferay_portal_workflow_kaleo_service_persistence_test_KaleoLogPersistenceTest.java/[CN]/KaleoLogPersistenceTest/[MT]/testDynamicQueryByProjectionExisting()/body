{
  KaleoLog newKaleoLog=addKaleoLog();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoLog.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoLogId"));
  Object newKaleoLogId=newKaleoLog.getKaleoLogId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoLogId",new Object[]{newKaleoLogId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoLogId=result.get(0);
  Assert.assertEquals(existingKaleoLogId,newKaleoLogId);
}

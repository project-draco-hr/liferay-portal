{
  Long kaleoLogId=(Long)attributes.get("kaleoLogId");
  if (kaleoLogId != null) {
    setKaleoLogId(kaleoLogId);
  }
  Long groupId=(Long)attributes.get("groupId");
  if (groupId != null) {
    setGroupId(groupId);
  }
  Long companyId=(Long)attributes.get("companyId");
  if (companyId != null) {
    setCompanyId(companyId);
  }
  Long userId=(Long)attributes.get("userId");
  if (userId != null) {
    setUserId(userId);
  }
  String userName=(String)attributes.get("userName");
  if (userName != null) {
    setUserName(userName);
  }
  Date createDate=(Date)attributes.get("createDate");
  if (createDate != null) {
    setCreateDate(createDate);
  }
  Date modifiedDate=(Date)attributes.get("modifiedDate");
  if (modifiedDate != null) {
    setModifiedDate(modifiedDate);
  }
  String kaleoClassName=(String)attributes.get("kaleoClassName");
  if (kaleoClassName != null) {
    setKaleoClassName(kaleoClassName);
  }
  Long kaleoClassPK=(Long)attributes.get("kaleoClassPK");
  if (kaleoClassPK != null) {
    setKaleoClassPK(kaleoClassPK);
  }
  Long kaleoDefinitionId=(Long)attributes.get("kaleoDefinitionId");
  if (kaleoDefinitionId != null) {
    setKaleoDefinitionId(kaleoDefinitionId);
  }
  Long kaleoInstanceId=(Long)attributes.get("kaleoInstanceId");
  if (kaleoInstanceId != null) {
    setKaleoInstanceId(kaleoInstanceId);
  }
  Long kaleoInstanceTokenId=(Long)attributes.get("kaleoInstanceTokenId");
  if (kaleoInstanceTokenId != null) {
    setKaleoInstanceTokenId(kaleoInstanceTokenId);
  }
  Long kaleoTaskInstanceTokenId=(Long)attributes.get("kaleoTaskInstanceTokenId");
  if (kaleoTaskInstanceTokenId != null) {
    setKaleoTaskInstanceTokenId(kaleoTaskInstanceTokenId);
  }
  String kaleoNodeName=(String)attributes.get("kaleoNodeName");
  if (kaleoNodeName != null) {
    setKaleoNodeName(kaleoNodeName);
  }
  Boolean terminalKaleoNode=(Boolean)attributes.get("terminalKaleoNode");
  if (terminalKaleoNode != null) {
    setTerminalKaleoNode(terminalKaleoNode);
  }
  Long kaleoActionId=(Long)attributes.get("kaleoActionId");
  if (kaleoActionId != null) {
    setKaleoActionId(kaleoActionId);
  }
  String kaleoActionName=(String)attributes.get("kaleoActionName");
  if (kaleoActionName != null) {
    setKaleoActionName(kaleoActionName);
  }
  String kaleoActionDescription=(String)attributes.get("kaleoActionDescription");
  if (kaleoActionDescription != null) {
    setKaleoActionDescription(kaleoActionDescription);
  }
  Long previousKaleoNodeId=(Long)attributes.get("previousKaleoNodeId");
  if (previousKaleoNodeId != null) {
    setPreviousKaleoNodeId(previousKaleoNodeId);
  }
  String previousKaleoNodeName=(String)attributes.get("previousKaleoNodeName");
  if (previousKaleoNodeName != null) {
    setPreviousKaleoNodeName(previousKaleoNodeName);
  }
  String previousAssigneeClassName=(String)attributes.get("previousAssigneeClassName");
  if (previousAssigneeClassName != null) {
    setPreviousAssigneeClassName(previousAssigneeClassName);
  }
  Long previousAssigneeClassPK=(Long)attributes.get("previousAssigneeClassPK");
  if (previousAssigneeClassPK != null) {
    setPreviousAssigneeClassPK(previousAssigneeClassPK);
  }
  String currentAssigneeClassName=(String)attributes.get("currentAssigneeClassName");
  if (currentAssigneeClassName != null) {
    setCurrentAssigneeClassName(currentAssigneeClassName);
  }
  Long currentAssigneeClassPK=(Long)attributes.get("currentAssigneeClassPK");
  if (currentAssigneeClassPK != null) {
    setCurrentAssigneeClassPK(currentAssigneeClassPK);
  }
  String type=(String)attributes.get("type");
  if (type != null) {
    setType(type);
  }
  String comment=(String)attributes.get("comment");
  if (comment != null) {
    setComment(comment);
  }
  Date startDate=(Date)attributes.get("startDate");
  if (startDate != null) {
    setStartDate(startDate);
  }
  Date endDate=(Date)attributes.get("endDate");
  if (endDate != null) {
    setEndDate(endDate);
  }
  Long duration=(Long)attributes.get("duration");
  if (duration != null) {
    setDuration(duration);
  }
  String workflowContext=(String)attributes.get("workflowContext");
  if (workflowContext != null) {
    setWorkflowContext(workflowContext);
  }
  _entityCacheEnabled=GetterUtil.getBoolean("entityCacheEnabled");
  _finderCacheEnabled=GetterUtil.getBoolean("finderCacheEnabled");
}

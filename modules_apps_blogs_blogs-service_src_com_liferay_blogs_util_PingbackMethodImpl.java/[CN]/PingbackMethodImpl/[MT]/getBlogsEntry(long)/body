{
  BlogsEntry entry=null;
  URL url=new URL(_targetURI);
  String friendlyURL=url.getPath();
  int end=friendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR);
  if (end != -1) {
    friendlyURL=friendlyURL.substring(0,end);
  }
  long plid=PortalUtil.getPlidFromFriendlyURL(companyId,friendlyURL);
  long groupId=PortalUtil.getScopeGroupId(plid);
  Map<String,String[]> params=new HashMap<>();
  FriendlyURLMapperThreadLocal.setPRPIdentifiers(new HashMap<String,String>());
  String portletId=PortletProviderUtil.getPortletId(BlogsEntry.class.getName(),PortletProvider.Action.VIEW);
  Portlet portlet=PortletLocalServiceUtil.getPortletById(portletId);
  FriendlyURLMapper friendlyURLMapper=portlet.getFriendlyURLMapperInstance();
  friendlyURL=url.getPath();
  end=friendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR);
  if (end != -1) {
    friendlyURL=friendlyURL.substring(end + Portal.FRIENDLY_URL_SEPARATOR.length() - 1);
  }
  Map<String,Object> requestContext=new HashMap<>();
  friendlyURLMapper.populateParams(friendlyURL,params,requestContext);
  String param=getParam(params,"entryId");
  if (Validator.isNotNull(param)) {
    long entryId=GetterUtil.getLong(param);
    entry=BlogsEntryLocalServiceUtil.getEntry(entryId);
  }
 else {
    String urlTitle=getParam(params,"urlTitle");
    entry=BlogsEntryLocalServiceUtil.getEntry(groupId,urlTitle);
  }
  return entry;
}

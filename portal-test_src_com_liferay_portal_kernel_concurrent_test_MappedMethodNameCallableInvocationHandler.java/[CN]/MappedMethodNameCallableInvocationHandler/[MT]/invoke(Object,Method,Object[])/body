{
  Callable<?> beforeCallable=null;
  if (_removeOnCall) {
    beforeCallable=_beforeCallables.remove(method);
  }
 else {
    beforeCallable=_beforeCallables.get(method);
  }
  if (beforeCallable != null) {
    beforeCallable.call();
  }
  try {
    return method.invoke(_instance,args);
  }
 catch (  InvocationTargetException ite) {
    throw ite.getTargetException();
  }
 finally {
    Callable<?> afterCallable=null;
    if (_removeOnCall) {
      afterCallable=_afterCallables.remove(method);
    }
 else {
      afterCallable=_afterCallables.get(method);
    }
    if (afterCallable != null) {
      afterCallable.call();
    }
  }
}

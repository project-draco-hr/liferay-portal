{
  long pk=RandomTestUtil.nextLong();
  KaleoNode newKaleoNode=_persistence.create(pk);
  newKaleoNode.setGroupId(RandomTestUtil.nextLong());
  newKaleoNode.setCompanyId(RandomTestUtil.nextLong());
  newKaleoNode.setUserId(RandomTestUtil.nextLong());
  newKaleoNode.setUserName(RandomTestUtil.randomString());
  newKaleoNode.setCreateDate(RandomTestUtil.nextDate());
  newKaleoNode.setModifiedDate(RandomTestUtil.nextDate());
  newKaleoNode.setKaleoDefinitionId(RandomTestUtil.nextLong());
  newKaleoNode.setName(RandomTestUtil.randomString());
  newKaleoNode.setMetadata(RandomTestUtil.randomString());
  newKaleoNode.setDescription(RandomTestUtil.randomString());
  newKaleoNode.setType(RandomTestUtil.randomString());
  newKaleoNode.setInitial(RandomTestUtil.randomBoolean());
  newKaleoNode.setTerminal(RandomTestUtil.randomBoolean());
  _kaleoNodes.add(_persistence.update(newKaleoNode));
  KaleoNode existingKaleoNode=_persistence.findByPrimaryKey(newKaleoNode.getPrimaryKey());
  Assert.assertEquals(existingKaleoNode.getKaleoNodeId(),newKaleoNode.getKaleoNodeId());
  Assert.assertEquals(existingKaleoNode.getGroupId(),newKaleoNode.getGroupId());
  Assert.assertEquals(existingKaleoNode.getCompanyId(),newKaleoNode.getCompanyId());
  Assert.assertEquals(existingKaleoNode.getUserId(),newKaleoNode.getUserId());
  Assert.assertEquals(existingKaleoNode.getUserName(),newKaleoNode.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoNode.getCreateDate()),Time.getShortTimestamp(newKaleoNode.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoNode.getModifiedDate()),Time.getShortTimestamp(newKaleoNode.getModifiedDate()));
  Assert.assertEquals(existingKaleoNode.getKaleoDefinitionId(),newKaleoNode.getKaleoDefinitionId());
  Assert.assertEquals(existingKaleoNode.getName(),newKaleoNode.getName());
  Assert.assertEquals(existingKaleoNode.getMetadata(),newKaleoNode.getMetadata());
  Assert.assertEquals(existingKaleoNode.getDescription(),newKaleoNode.getDescription());
  Assert.assertEquals(existingKaleoNode.getType(),newKaleoNode.getType());
  Assert.assertEquals(existingKaleoNode.getInitial(),newKaleoNode.getInitial());
  Assert.assertEquals(existingKaleoNode.getTerminal(),newKaleoNode.getTerminal());
}

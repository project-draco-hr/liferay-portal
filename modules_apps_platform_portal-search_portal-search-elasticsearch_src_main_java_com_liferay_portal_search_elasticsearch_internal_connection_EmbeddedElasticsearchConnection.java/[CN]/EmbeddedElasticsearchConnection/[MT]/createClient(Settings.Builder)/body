{
  StopWatch stopWatch=new StopWatch();
  stopWatch.start();
  if (_log.isWarnEnabled()) {
    StringBundler sb=new StringBundler(6);
    sb.append("Liferay is configured to use embedded Elasticsearch ");
    sb.append("as its search engine. Do NOT use embedded ");
    sb.append("Elasticsearch in production. Embedded Elasticsearch ");
    sb.append("is useful for development and demonstration purposes. ");
    sb.append("Remote Elasticsearch connections can be configured in ");
    sb.append("the Control Panel.");
    _log.warn(sb);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Starting embedded Elasticsearch cluster " + elasticsearchConfiguration.clusterName());
  }
  NodeBuilder nodeBuilder=NodeBuilder.nodeBuilder();
  nodeBuilder.settings(builder);
  _node=nodeBuilder.node();
  _node.start();
  Client client=_node.client();
  if (_log.isDebugEnabled()) {
    stopWatch.stop();
    _log.debug("Finished starting " + elasticsearchConfiguration.clusterName() + " in "+ stopWatch.getTime()+ " ms");
  }
  return client;
}

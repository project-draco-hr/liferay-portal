{
  Object[] finderArgs=new Object[]{entryId1,entryId2,type};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_E_E_T,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_ASSETLINK_WHERE);
    query.append(_FINDER_COLUMN_E_E_T_ENTRYID1_2);
    query.append(_FINDER_COLUMN_E_E_T_ENTRYID2_2);
    query.append(_FINDER_COLUMN_E_E_T_TYPE_2);
    query.append(AssetLinkModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(entryId1);
      qPos.add(entryId2);
      qPos.add(type);
      List<AssetLink> list=q.list();
      result=list;
      AssetLink assetLink=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_E_E_T,finderArgs,list);
      }
 else {
        assetLink=list.get(0);
        cacheResult(assetLink);
        if ((assetLink.getEntryId1() != entryId1) || (assetLink.getEntryId2() != entryId2) || (assetLink.getType() != type)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_E_E_T,finderArgs,assetLink);
        }
      }
      return assetLink;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_E_E_T,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (AssetLink)result;
    }
  }
}

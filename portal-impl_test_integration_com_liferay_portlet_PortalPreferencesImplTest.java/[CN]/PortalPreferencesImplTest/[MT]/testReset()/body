{
  Callable<Void> callable=new Callable<Void>(){
    @Override public Void call(){
      PortalPreferences portalPreferences=PortletPreferencesFactoryUtil.getPortalPreferences(PortletKeys.PREFS_OWNER_ID_DEFAULT,true);
      portalPreferences.resetValues(_NAMESPACE);
      return null;
    }
  }
;
  try (CaptureAppender captureAppender=Log4JLoggerTestUtil.configureLog4JLogger(DefaultTransactionExecutor.class.getName(),Level.ERROR)){
    updateSynchronously(new FutureTask<>(callable),new FutureTask<>(callable),captureAppender);
    Assert.fail();
  }
 catch (  Exception e) {
    Throwable cause=e.getCause();
    Assert.assertSame(ConcurrentModificationException.class,cause.getClass());
  }
}

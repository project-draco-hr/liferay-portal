{
  String minifierType=ParamUtil.getString(request,"minifierType");
  String minifierBundleId=ParamUtil.getString(request,"minifierBundleId");
  if (Validator.isNull(minifierType) || Validator.isNull(minifierBundleId) || !ArrayUtil.contains(PropsValues.JAVASCRIPT_BUNDLE_IDS,minifierBundleId)) {
    return null;
  }
  String minifierBundleDir=PropsUtil.get(PropsKeys.JAVASCRIPT_BUNDLE_DIR,new Filter(minifierBundleId));
  String bundleDirRealPath=ServletContextUtil.getRealPath(_servletContext,minifierBundleDir);
  if (bundleDirRealPath == null) {
    return null;
  }
  StringBundler sb=new StringBundler(4);
  sb.append(_tempDir);
  sb.append(request.getRequestURI());
  String queryString=request.getQueryString();
  if (queryString != null) {
    sb.append(_QUESTION_SEPARATOR);
    sb.append(sterilizeQueryString(queryString));
  }
  String cacheFileName=sb.toString();
  String[] fileNames=JavaScriptBundleUtil.getFileNames(minifierBundleId);
  File cacheFile=new File(cacheFileName);
  if (cacheFile.exists()) {
    boolean staleCache=false;
    for (    String fileName : fileNames) {
      File file=new File(bundleDirRealPath + StringPool.SLASH + fileName);
      if (file.lastModified() > cacheFile.lastModified()) {
        staleCache=true;
        break;
      }
    }
    if (!staleCache) {
      response.setContentType(ContentTypes.TEXT_JAVASCRIPT);
      return cacheFile;
    }
  }
  if (_log.isInfoEnabled()) {
    _log.info("Minifying JavaScript bundle " + minifierBundleId);
  }
  String minifiedContent=null;
  if (fileNames.length == 0) {
    minifiedContent=StringPool.BLANK;
  }
 else {
    sb=new StringBundler(fileNames.length * 2);
    for (    String fileName : fileNames) {
      String content=FileUtil.read(bundleDirRealPath + StringPool.SLASH + fileName);
      sb.append(content);
      sb.append(StringPool.NEW_LINE);
    }
    minifiedContent=minifyJavaScript(sb.toString());
  }
  response.setContentType(ContentTypes.TEXT_JAVASCRIPT);
  FileUtil.write(cacheFile,minifiedContent);
  return minifiedContent;
}

{
  Document document=newDocument();
  String className=baseModel.getModelClassName();
  long classPK=0;
  long resourcePrimKey=0;
  if (baseModel instanceof ResourcedModel) {
    ResourcedModel resourcedModel=(ResourcedModel)baseModel;
    classPK=resourcedModel.getResourcePrimKey();
    resourcePrimKey=resourcedModel.getResourcePrimKey();
  }
 else {
    classPK=(Long)baseModel.getPrimaryKeyObj();
  }
  document.addUID(portletId,classPK);
  List<AssetCategory> assetCategories=AssetCategoryLocalServiceUtil.getCategories(className,classPK);
  long[] assetCategoryIds=StringUtil.split(ListUtil.toString(assetCategories,AssetCategory.CATEGORY_ID_ACCESSOR),0L);
  document.addKeyword(Field.ASSET_CATEGORY_IDS,assetCategoryIds);
  addSearchAssetCategoryTitles(document,Field.ASSET_CATEGORY_TITLES,assetCategories);
  String[] assetTagNames=AssetTagLocalServiceUtil.getTagNames(className,classPK);
  document.addText(Field.ASSET_TAG_NAMES,assetTagNames);
  List<AssetTag> assetTags=AssetTagLocalServiceUtil.getTags(className,classPK);
  long[] assetTagsIds=StringUtil.split(ListUtil.toString(assetTags,AssetTag.TAG_ID_ACCESSOR),0L);
  document.addKeyword(Field.ASSET_TAG_IDS,assetTagsIds);
  document.addKeyword(Field.ENTRY_CLASS_NAME,className);
  document.addKeyword(Field.ENTRY_CLASS_PK,classPK);
  document.addKeyword(Field.PORTLET_ID,portletId);
  if (resourcePrimKey > 0) {
    document.addKeyword(Field.ROOT_ENTRY_CLASS_PK,resourcePrimKey);
  }
  if (baseModel instanceof AttachedModel) {
    AttachedModel attachedModel=(AttachedModel)baseModel;
    document.addKeyword(Field.CLASS_NAME_ID,attachedModel.getClassNameId());
    document.addKeyword(Field.CLASS_PK,attachedModel.getClassPK());
  }
  if (baseModel instanceof AuditedModel) {
    AuditedModel auditedModel=(AuditedModel)baseModel;
    document.addKeyword(Field.COMPANY_ID,auditedModel.getCompanyId());
    document.addDate(Field.CREATE_DATE,auditedModel.getCreateDate());
    document.addDate(Field.MODIFIED_DATE,auditedModel.getModifiedDate());
    document.addKeyword(Field.USER_ID,auditedModel.getUserId());
    String userName=PortalUtil.getUserName(auditedModel.getUserId(),auditedModel.getUserName());
    document.addKeyword(Field.USER_NAME,userName,true);
  }
  GroupedModel groupedModel=null;
  if (baseModel instanceof GroupedModel) {
    groupedModel=(GroupedModel)baseModel;
    document.addKeyword(Field.GROUP_ID,getSiteGroupId(groupedModel.getGroupId()));
    document.addKeyword(Field.SCOPE_GROUP_ID,groupedModel.getGroupId());
  }
  if (workflowedBaseModel instanceof WorkflowedModel) {
    WorkflowedModel workflowedModel=(WorkflowedModel)workflowedBaseModel;
    document.addKeyword(Field.STATUS,workflowedModel.getStatus());
  }
  if ((groupedModel != null) && (baseModel instanceof TrashedModel)) {
    TrashedModel trashedModel=(TrashedModel)baseModel;
    if (trashedModel.isInTrash()) {
      addTrashFields(document,trashedModel);
    }
  }
  addAssetFields(document,className,classPK);
  ExpandoBridgeIndexerUtil.addAttributes(document,baseModel.getExpandoBridge());
  return document;
}

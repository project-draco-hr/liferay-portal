{
  List<Document> docs=new ArrayList<Document>();
  List<Float> scores=new ArrayList<Float>();
  Document[] documents=hits.getDocs();
  for (int i=0; i < documents.length; i++) {
    Document doc=documents[i];
    long entryClassPK=GetterUtil.getLong(doc.get(Field.ENTRY_CLASS_PK));
    try {
      if (hasPermission(permissionChecker,entryClassPK,ActionKeys.VIEW)) {
        docs.add(doc);
        scores.add(hits.score(i));
      }
    }
 catch (    Exception e) {
    }
  }
  int length=docs.size();
  hits.setLength(length);
  int start=searchContext.getStart();
  int end=searchContext.getEnd();
  if ((start != QueryUtil.ALL_POS) && (end != QueryUtil.ALL_POS)) {
    if (end > length) {
      end=length;
    }
    docs=docs.subList(start,end);
  }
  hits.setDocs(docs.toArray(new Document[docs.size()]));
  hits.setScores(scores.toArray(new Float[docs.size()]));
  hits.setSearchTime((float)(System.currentTimeMillis() - hits.getStart()) / Time.SECOND);
  return hits;
}

{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  UserIdMapper newUserIdMapper=addUserIdMapper();
  _persistence.clearCache();
  UserIdMapper existingUserIdMapper=_persistence.findByPrimaryKey(newUserIdMapper.getPrimaryKey());
  Assert.assertEquals(existingUserIdMapper.getUserId(),ReflectionTestUtil.invoke(existingUserIdMapper,"getOriginalUserId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingUserIdMapper.getType(),ReflectionTestUtil.invoke(existingUserIdMapper,"getOriginalType",new Class<?>[0])));
  Assert.assertTrue(Validator.equals(existingUserIdMapper.getType(),ReflectionTestUtil.invoke(existingUserIdMapper,"getOriginalType",new Class<?>[0])));
  Assert.assertTrue(Validator.equals(existingUserIdMapper.getExternalUserId(),ReflectionTestUtil.invoke(existingUserIdMapper,"getOriginalExternalUserId",new Class<?>[0])));
}

{
  if (params == null) {
    return;
  }
  for (  Map.Entry<String,Object> entry : params.entrySet()) {
    String key=entry.getKey();
    if (key.equals("active") || key.equals("layoutSet") || key.equals("manualMembership")|| key.equals("site")) {
      Boolean value=(Boolean)entry.getValue();
      qPos.add(value);
    }
 else     if (key.equals("classNameIds")) {
      if (entry.getValue() instanceof Long) {
        qPos.add((long)entry.getValue());
      }
 else {
        for (        long classNameId : (long[])entry.getValue()) {
          qPos.add(classNameId);
        }
      }
    }
 else     if (key.equals("excludedGroupIds")) {
      List<Long> excludedGroupIds=(List<Long>)entry.getValue();
      if (!excludedGroupIds.isEmpty()) {
        for (        long excludedGroupId : excludedGroupIds) {
          qPos.add(excludedGroupId);
        }
      }
    }
 else     if (key.equals("groupsTree")) {
      List<Group> groupsTree=(List<Group>)entry.getValue();
      if (!groupsTree.isEmpty()) {
        for (        Group group : groupsTree) {
          StringBundler sb=new StringBundler(5);
          sb.append(StringPool.PERCENT);
          sb.append(StringPool.SLASH);
          sb.append(group.getGroupId());
          sb.append(StringPool.SLASH);
          sb.append(StringPool.PERCENT);
          qPos.add(sb.toString());
        }
      }
    }
 else     if (key.equals("pageCount")) {
    }
 else     if (key.equals("rolePermissions")) {
      RolePermissions rolePermissions=(RolePermissions)entry.getValue();
      ResourceAction resourceAction=ResourceActionLocalServiceUtil.getResourceAction(rolePermissions.getName(),rolePermissions.getActionId());
      if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) {
        qPos.add(rolePermissions.getName());
        qPos.add(rolePermissions.getRoleId());
        qPos.add(resourceAction.getBitwiseValue());
      }
 else {
        qPos.add(rolePermissions.getName());
        qPos.add(rolePermissions.getScope());
        qPos.add(rolePermissions.getRoleId());
        qPos.add(resourceAction.getBitwiseValue());
      }
    }
 else     if (key.equals("types")) {
      List<Integer> values=(List<Integer>)entry.getValue();
      for (int i=0; i < values.size(); i++) {
        Integer value=values.get(i);
        qPos.add(value);
      }
    }
 else     if (key.equals("userGroupRole")) {
      List<Long> values=(List<Long>)entry.getValue();
      Long userId=values.get(0);
      Long roleId=values.get(1);
      qPos.add(userId);
      qPos.add(roleId);
    }
 else {
      Object value=entry.getValue();
      if (value instanceof Integer) {
        Integer valueInteger=(Integer)value;
        if (Validator.isNotNull(valueInteger)) {
          qPos.add(valueInteger);
        }
      }
 else       if (value instanceof Long) {
        Long valueLong=(Long)value;
        if (Validator.isNotNull(valueLong)) {
          qPos.add(valueLong);
        }
      }
 else       if (value instanceof String) {
        String valueString=(String)value;
        if (Validator.isNotNull(valueString)) {
          qPos.add(valueString);
        }
      }
    }
  }
}

{
  ConcurrentLFUCache<String,String> concurrentLFUCache=new ConcurrentLFUCache<String,String>(2,0.5F);
  try {
    concurrentLFUCache.put(null,"value");
    fail();
  }
 catch (  NullPointerException npe) {
  }
  concurrentLFUCache.put("key1","value1");
  assertEquals(0,concurrentLFUCache.evictCount());
  assertEquals(0,concurrentLFUCache.hitCount());
  assertEquals(0,concurrentLFUCache.missCount());
  assertEquals(1,concurrentLFUCache.putCount());
  assertEquals(1,concurrentLFUCache.size());
  assertEquals("value1",concurrentLFUCache.get("key1"));
  assertEquals(0,concurrentLFUCache.evictCount());
  assertEquals(1,concurrentLFUCache.hitCount());
  assertEquals(0,concurrentLFUCache.missCount());
  assertEquals(1,concurrentLFUCache.putCount());
  assertEquals(1,concurrentLFUCache.size());
  concurrentLFUCache.put("key2","value2");
  assertEquals(0,concurrentLFUCache.evictCount());
  assertEquals(1,concurrentLFUCache.hitCount());
  assertEquals(0,concurrentLFUCache.missCount());
  assertEquals(2,concurrentLFUCache.putCount());
  assertEquals(2,concurrentLFUCache.size());
  concurrentLFUCache.put("key2","value2-2");
  assertEquals(0,concurrentLFUCache.evictCount());
  assertEquals(1,concurrentLFUCache.hitCount());
  assertEquals(0,concurrentLFUCache.missCount());
  assertEquals(3,concurrentLFUCache.putCount());
  assertEquals(2,concurrentLFUCache.size());
  concurrentLFUCache.put("key3","value3");
  assertEquals(1,concurrentLFUCache.evictCount());
  assertEquals(1,concurrentLFUCache.hitCount());
  assertEquals(0,concurrentLFUCache.missCount());
  assertEquals(4,concurrentLFUCache.putCount());
  assertEquals(2,concurrentLFUCache.size());
  assertEquals("value1",concurrentLFUCache.get("key1"));
  assertNull(concurrentLFUCache.get("key2"));
  assertEquals("value3",concurrentLFUCache.get("key3"));
  assertEquals(1,concurrentLFUCache.evictCount());
  assertEquals(3,concurrentLFUCache.hitCount());
  assertEquals(1,concurrentLFUCache.missCount());
  assertEquals(4,concurrentLFUCache.putCount());
  assertEquals(2,concurrentLFUCache.size());
}

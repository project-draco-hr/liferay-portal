{
  Properties p=new Properties();
  ClassLoader classLoader=getClass().getClassLoader();
  try {
    URL url=classLoader.getResource("system.properties");
    if (url != null) {
      InputStream is=url.openStream();
      p.load(is);
      is.close();
      System.out.println("Loading " + url);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    URL url=classLoader.getResource("system-ext.properties");
    if (url != null) {
      InputStream is=url.openStream();
      p.load(is);
      is.close();
      System.out.println("Loading " + url);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  SystemEnv.setProperties(p);
  boolean systemPropertiesLoad=GetterUtil.getBoolean(System.getProperty(SYSTEM_PROPERTIES_LOAD),true);
  boolean systemPropertiesFinal=GetterUtil.getBoolean(System.getProperty(SYSTEM_PROPERTIES_FINAL),true);
  if (systemPropertiesLoad) {
    Enumeration<String> enu=(Enumeration<String>)p.propertyNames();
    while (enu.hasMoreElements()) {
      String key=enu.nextElement();
      if (systemPropertiesFinal || Validator.isNull(System.getProperty(key))) {
        System.setProperty(key,p.getProperty(key));
      }
    }
  }
  _props=new ConcurrentHashMap<String,String>();
  PropertiesUtil.fromProperties(p,_props);
}

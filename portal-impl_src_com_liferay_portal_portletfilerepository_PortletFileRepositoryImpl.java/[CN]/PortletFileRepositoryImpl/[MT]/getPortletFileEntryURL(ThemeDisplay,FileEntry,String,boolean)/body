{
  StringBundler sb=new StringBundler(10);
  if (themeDisplay != null) {
    if (absoluteURL) {
      sb.append(themeDisplay.getPortalURL());
    }
  }
  sb.append(PortalUtil.getPathContext());
  sb.append("/documents/");
  sb.append(WebServerServlet.PATH_PORTLET_FILE_ENTRY);
  sb.append(StringPool.SLASH);
  sb.append(fileEntry.getGroupId());
  sb.append(StringPool.SLASH);
  String title=fileEntry.getTitle();
  if (fileEntry.isInTrash()) {
    title=TrashUtil.getOriginalTitle(fileEntry.getTitle());
  }
  sb.append(HttpUtil.encodeURL(HtmlUtil.unescape(title)));
  sb.append(StringPool.SLASH);
  sb.append(fileEntry.getUuid());
  if (themeDisplay != null) {
    PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
    if (portletDisplay != null) {
      String portletId=portletDisplay.getId();
      if (portletId.equals(PortletKeys.TRASH) && !queryString.contains("status=")) {
        if (Validator.isNotNull(queryString)) {
          queryString+=StringPool.AMPERSAND;
        }
        queryString+="status=" + WorkflowConstants.STATUS_IN_TRASH;
      }
    }
  }
  if (Validator.isNotNull(queryString)) {
    sb.append(StringPool.QUESTION);
    sb.append(queryString);
  }
  String portletFileEntryURL=sb.toString();
  if ((themeDisplay != null) && themeDisplay.isAddSessionIdToURL()) {
    return PortalUtil.getURLWithSessionId(portletFileEntryURL,themeDisplay.getSessionId());
  }
  return portletFileEntryURL;
}

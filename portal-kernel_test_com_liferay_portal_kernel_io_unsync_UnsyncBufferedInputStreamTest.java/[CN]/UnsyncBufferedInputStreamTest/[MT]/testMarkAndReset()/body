{
  UnsyncBufferedInputStream unsyncBis=new UnsyncBufferedInputStream(new ByteArrayInputStream(testData));
  int markLimit=10;
  assertEquals(-1,unsyncBis.markIndex);
  unsyncBis.mark(markLimit);
  assertEquals(0,unsyncBis.markIndex);
  assertEquals(testDataSize,unsyncBis.available());
  assertEquals(0,unsyncBis.read());
  assertEquals(1,unsyncBis.read());
  assertEquals(2,unsyncBis.read());
  assertEquals(3,unsyncBis.index);
  unsyncBis.reset();
  assertEquals(testDataSize,unsyncBis.available());
  assertEquals(0,unsyncBis.read());
  assertEquals(1,unsyncBis.read());
  assertEquals(2,unsyncBis.read());
  assertEquals(3,unsyncBis.index);
  int bufferSize=20;
  unsyncBis=new UnsyncBufferedInputStream(new ByteArrayInputStream(testData),bufferSize);
  assertEquals(-1,unsyncBis.markIndex);
  unsyncBis.mark(markLimit);
  assertEquals(0,unsyncBis.markIndex);
  for (int i=0; i < bufferSize * 2; i++) {
    assertEquals(i,unsyncBis.read());
  }
  assertEquals(bufferSize,unsyncBis.index);
  assertEquals(testDataSize - bufferSize * 2,unsyncBis.available());
  assertEquals(-1,unsyncBis.markIndex);
  unsyncBis=new UnsyncBufferedInputStream(new ByteArrayInputStream(testData));
  for (int i=0; i < 4097; i++) {
    assertEquals(i & 0xff,unsyncBis.read());
  }
  unsyncBis.mark(markLimit);
  assertEquals(testDataSize - 4097,unsyncBis.available());
  assertEquals(4097 & 0xff,unsyncBis.read());
  assertEquals(4098 & 0xff,unsyncBis.read());
  assertEquals(testDataSize - 4099,unsyncBis.available());
  unsyncBis.reset();
  assertEquals(testDataSize - 4097,unsyncBis.available());
  assertEquals(4097 & 0xff,unsyncBis.read());
  assertEquals(4098 & 0xff,unsyncBis.read());
  assertEquals(testDataSize - 4099,unsyncBis.available());
  unsyncBis=new UnsyncBufferedInputStream(new ByteArrayInputStream(testData),5);
  assertEquals(0,unsyncBis.read());
  assertEquals(1,unsyncBis.read());
  unsyncBis.mark(markLimit);
  assertEquals(2,unsyncBis.read());
  assertEquals(3,unsyncBis.read());
  assertEquals(4,unsyncBis.read());
  assertEquals(5,unsyncBis.read());
  unsyncBis.reset();
  assertEquals(2,unsyncBis.read());
  assertEquals(3,unsyncBis.read());
  assertEquals(4,unsyncBis.read());
  assertEquals(5,unsyncBis.read());
}

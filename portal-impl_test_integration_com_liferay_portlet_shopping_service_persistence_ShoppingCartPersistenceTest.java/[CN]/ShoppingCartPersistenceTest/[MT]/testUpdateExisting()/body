{
  long pk=RandomTestUtil.nextLong();
  ShoppingCart newShoppingCart=_persistence.create(pk);
  newShoppingCart.setGroupId(RandomTestUtil.nextLong());
  newShoppingCart.setCompanyId(RandomTestUtil.nextLong());
  newShoppingCart.setUserId(RandomTestUtil.nextLong());
  newShoppingCart.setUserName(RandomTestUtil.randomString());
  newShoppingCart.setCreateDate(RandomTestUtil.nextDate());
  newShoppingCart.setModifiedDate(RandomTestUtil.nextDate());
  newShoppingCart.setItemIds(RandomTestUtil.randomString());
  newShoppingCart.setCouponCodes(RandomTestUtil.randomString());
  newShoppingCart.setAltShipping(RandomTestUtil.nextInt());
  newShoppingCart.setInsure(RandomTestUtil.randomBoolean());
  _persistence.update(newShoppingCart);
  ShoppingCart existingShoppingCart=_persistence.findByPrimaryKey(newShoppingCart.getPrimaryKey());
  Assert.assertEquals(existingShoppingCart.getCartId(),newShoppingCart.getCartId());
  Assert.assertEquals(existingShoppingCart.getGroupId(),newShoppingCart.getGroupId());
  Assert.assertEquals(existingShoppingCart.getCompanyId(),newShoppingCart.getCompanyId());
  Assert.assertEquals(existingShoppingCart.getUserId(),newShoppingCart.getUserId());
  Assert.assertEquals(existingShoppingCart.getUserName(),newShoppingCart.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCart.getCreateDate()),Time.getShortTimestamp(newShoppingCart.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingShoppingCart.getModifiedDate()),Time.getShortTimestamp(newShoppingCart.getModifiedDate()));
  Assert.assertEquals(existingShoppingCart.getItemIds(),newShoppingCart.getItemIds());
  Assert.assertEquals(existingShoppingCart.getCouponCodes(),newShoppingCart.getCouponCodes());
  Assert.assertEquals(existingShoppingCart.getAltShipping(),newShoppingCart.getAltShipping());
  Assert.assertEquals(existingShoppingCart.getInsure(),newShoppingCart.getInsure());
}

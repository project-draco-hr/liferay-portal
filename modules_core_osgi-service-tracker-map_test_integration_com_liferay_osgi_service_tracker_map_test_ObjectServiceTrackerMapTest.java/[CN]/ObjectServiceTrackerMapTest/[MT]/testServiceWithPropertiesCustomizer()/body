{
  ServiceTrackerMap<String,ServiceWithProperties<TrackedOne>> serviceTrackerMap=ServiceTrackerMapFactory.singleValueMap(_bundleContext,TrackedOne.class,"target",ServiceTrackerCustomizerFactory.<TrackedOne>serviceWithProperties(_bundleContext));
  serviceTrackerMap.open();
  try {
    Dictionary<String,Object> properties=new Hashtable<>();
    properties.put("property","aProperty");
    properties.put("target","aTarget");
    TrackedOne trackedOne=new TrackedOne();
    ServiceRegistration<TrackedOne> serviceRegistration=_bundleContext.registerService(TrackedOne.class,trackedOne,properties);
    ServiceWithProperties<TrackedOne> serviceWithProperties=serviceTrackerMap.getService("aTarget");
    Assert.assertEquals(trackedOne,serviceWithProperties.getService());
    Map<String,Object> propertiesMap=serviceWithProperties.getProperties();
    Assert.assertTrue(propertiesMap.containsKey("property"));
    Assert.assertTrue(propertiesMap.containsKey("target"));
    Assert.assertEquals("aProperty",propertiesMap.get("property"));
    Assert.assertEquals("aTarget",propertiesMap.get("target"));
    serviceRegistration.unregister();
  }
  finally {
    serviceTrackerMap.close();
  }
}

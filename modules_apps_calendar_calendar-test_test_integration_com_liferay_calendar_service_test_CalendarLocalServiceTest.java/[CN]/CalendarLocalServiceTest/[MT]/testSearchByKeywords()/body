{
  ServiceContext serviceContext=new ServiceContext();
  CalendarResource calendarResource=CalendarResourceUtil.getGroupCalendarResource(_group.getGroupId(),serviceContext);
  Locale locale=LocaleUtil.getDefault();
  Map<Locale,String> nameMap=RandomTestUtil.randomLocaleStringMap(locale);
  Calendar expectedCalendar=CalendarLocalServiceUtil.addCalendar(_user.getUserId(),_group.getGroupId(),calendarResource.getCalendarResourceId(),nameMap,RandomTestUtil.randomLocaleStringMap(),StringPool.UTC,RandomTestUtil.randomInt(0,255),false,false,false,serviceContext);
  CalendarLocalServiceUtil.addCalendar(_user.getUserId(),_group.getGroupId(),calendarResource.getCalendarResourceId(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),StringPool.UTC,RandomTestUtil.randomInt(0,255),false,false,false,serviceContext);
  List<Calendar> actualCalendars=CalendarLocalServiceUtil.search(_group.getCompanyId(),new long[]{_group.getGroupId()},new long[]{calendarResource.getCalendarResourceId()},nameMap.get(locale),true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new CalendarNameComparator());
  Assert.assertEquals(1,actualCalendars.size());
  Calendar actualCalendar=actualCalendars.get(0);
  Assert.assertEquals(expectedCalendar.getCalendarId(),actualCalendar.getCalendarId());
  Assert.assertEquals(expectedCalendar.getNameMap(),actualCalendar.getNameMap());
}

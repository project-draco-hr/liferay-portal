{
  UploadServletRequest uploadReq=null;
  try {
    String cmd=ParamUtil.getString(req,Constants.CMD);
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    long groupId=ParamUtil.getLong(req,"groupId");
    String articleId=ParamUtil.getString(req,"articleId");
    double version=ParamUtil.getDouble(req,"version",JournalArticleImpl.DEFAULT_VERSION);
    String languageId=LanguageUtil.getLanguageId(req);
    String output=null;
    if (cmd.equals(Constants.PREVIEW)) {
      uploadReq=new UploadServletRequest(req);
      String title=ParamUtil.getString(uploadReq,"title");
      String description=ParamUtil.getString(uploadReq,"description");
      Date now=new Date();
      Date createDate=now;
      Date modifiedDate=now;
      Date displayDate=now;
      User user=PortalUtil.getUser(uploadReq);
      String xml=ParamUtil.getString(uploadReq,"xml");
      SAXReader reader=new SAXReader();
      Document doc=reader.read(new StringReader(xml));
      Element root=doc.getRootElement();
      String previewArticleId="PREVIEW_" + PwdGenerator.getPassword(PwdGenerator.KEY3,10);
      format(groupId,articleId,version,previewArticleId,root,uploadReq);
      Map tokens=JournalUtil.getTokens(groupId,themeDisplay);
      tokens.put("article_resource_pk","-1");
      JournalArticle article=new JournalArticleImpl();
      article.setUserId(user.getUserId());
      article.setCreateDate(createDate);
      article.setModifiedDate(modifiedDate);
      article.setArticleId(articleId);
      article.setVersion(version);
      article.setTitle(title);
      article.setDescription(description);
      article.setDisplayDate(displayDate);
      JournalUtil.addAllReservedEls(root,tokens,article);
      xml=JournalUtil.formatXML(doc);
      String templateId=ParamUtil.getString(uploadReq,"templateId");
      JournalTemplate template=JournalTemplateLocalServiceUtil.getTemplate(groupId,templateId);
      String langType=template.getLangType();
      String script=template.getXsl();
      try {
        output=JournalUtil.transform(tokens,languageId,xml,script,langType);
      }
 catch (      Exception e1) {
        _log.error(e1,e1);
        PortalUtil.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,e1,req,res);
      }
    }
 else {
      output=JournalArticleServiceUtil.getArticleContent(groupId,articleId,version,languageId,themeDisplay);
    }
    req.setAttribute(WebKeys.JOURNAL_ARTICLE_CONTENT,output);
    if (output.startsWith("<?xml ")) {
      return mapping.findForward("portlet.journal.raw_article_content");
    }
 else {
      return mapping.findForward("portlet.journal.view_article_content");
    }
  }
 catch (  Exception e2) {
    req.setAttribute(PageContext.EXCEPTION,e2);
    return mapping.findForward(ActionConstants.COMMON_ERROR);
  }
 finally {
    if (uploadReq != null) {
      uploadReq.cleanUp();
    }
  }
}

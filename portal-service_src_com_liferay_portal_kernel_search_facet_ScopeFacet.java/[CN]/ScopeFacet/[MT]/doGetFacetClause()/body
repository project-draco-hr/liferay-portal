{
  SearchContext searchContext=getSearchContext();
  FacetConfiguration facetConfiguration=getFacetConfiguration();
  JSONObject dataJSONObject=facetConfiguration.getData();
  long[] groupIds=null;
  if (dataJSONObject.has("values")) {
    JSONArray valuesJSONArray=dataJSONObject.getJSONArray("values");
    groupIds=new long[valuesJSONArray.length()];
    for (int i=0; i < valuesJSONArray.length(); i++) {
      groupIds[i]=valuesJSONArray.getLong(i);
    }
  }
  if ((groupIds == null) || (groupIds.length == 0)) {
    groupIds=searchContext.getGroupIds();
  }
  String groupIdParam=GetterUtil.getString(searchContext.getAttribute("groupId"),"0");
  if (Validator.isNotNull(groupIdParam)) {
    groupIds=new long[]{GetterUtil.getLong(groupIdParam)};
  }
  if ((groupIds == null) || (groupIds.length == 0) || ((groupIds.length == 1) && (groupIds[0] == 0))) {
    return null;
  }
  BooleanQuery facetQuery=BooleanQueryFactoryUtil.create();
  long ownerUserId=searchContext.getOwnerUserId();
  if (ownerUserId > 0) {
    facetQuery.addRequiredTerm(Field.USER_ID,ownerUserId);
  }
  BooleanQuery groupIdsQuery=BooleanQueryFactoryUtil.create();
  BooleanQuery scopeGroupIdsQuery=BooleanQueryFactoryUtil.create();
  for (int i=0; i < groupIds.length; i++) {
    long groupId=groupIds[i];
    if (groupId <= 0) {
      continue;
    }
    try {
      Group group=GroupLocalServiceUtil.getGroup(groupId);
      if (!group.isActive()) {
        continue;
      }
      long parentGroupId=groupId;
      if (group.isLayout()) {
        parentGroupId=group.getParentGroupId();
      }
      groupIdsQuery.addTerm(Field.GROUP_ID,parentGroupId);
      groupIds[i]=parentGroupId;
      if (group.isLayout() || searchContext.isScopeStrict()) {
        scopeGroupIdsQuery.addTerm(Field.SCOPE_GROUP_ID,groupId);
      }
    }
 catch (    Exception e) {
      continue;
    }
  }
  searchContext.setGroupIds(groupIds);
  if (!groupIdsQuery.clauses().isEmpty()) {
    try {
      facetQuery.add(groupIdsQuery,BooleanClauseOccur.MUST);
    }
 catch (    ParseException pe) {
      _log.error(pe,pe);
    }
  }
  if (!scopeGroupIdsQuery.clauses().isEmpty()) {
    try {
      facetQuery.add(scopeGroupIdsQuery,BooleanClauseOccur.MUST);
    }
 catch (    ParseException pe) {
      _log.error(pe,pe);
    }
  }
  return BooleanClauseFactoryUtil.create(facetQuery,BooleanClauseOccur.MUST.getName());
}

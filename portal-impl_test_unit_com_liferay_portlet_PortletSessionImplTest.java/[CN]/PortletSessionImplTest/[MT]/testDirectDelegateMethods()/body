{
  Assert.assertEquals(_mockHttpSession.getCreationTime(),_portletSessionImpl.getCreationTime());
  Assert.assertSame(_mockHttpSession,_portletSessionImpl.getHttpSession());
  Assert.assertEquals(_mockHttpSession.getId(),_portletSessionImpl.getId());
  Assert.assertEquals(_mockHttpSession.getLastAccessedTime(),_portletSessionImpl.getLastAccessedTime());
  Assert.assertEquals(_mockHttpSession.getMaxInactiveInterval(),_portletSessionImpl.getMaxInactiveInterval());
  Assert.assertSame(_portletContext,_portletSessionImpl.getPortletContext());
  Assert.assertEquals(_mockHttpSession.isNew(),_portletSessionImpl.isNew());
  Assert.assertFalse(_mockHttpSession.isInvalid());
  _portletSessionImpl.invalidate();
  Assert.assertTrue(_mockHttpSession.isInvalid());
  _portletSessionImpl.setMaxInactiveInterval(Integer.MAX_VALUE);
  Assert.assertEquals(Integer.MAX_VALUE,_mockHttpSession.getMaxInactiveInterval());
  HttpSession session=new MockHttpSession();
  _portletSessionImpl.setHttpSession(session);
  Assert.assertSame(session,_portletSessionImpl.session);
}

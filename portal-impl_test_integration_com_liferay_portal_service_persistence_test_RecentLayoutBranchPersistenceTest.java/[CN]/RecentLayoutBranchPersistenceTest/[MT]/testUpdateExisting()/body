{
  long pk=RandomTestUtil.nextLong();
  RecentLayoutBranch newRecentLayoutBranch=_persistence.create(pk);
  newRecentLayoutBranch.setMvccVersion(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setGroupId(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setCompanyId(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setUserId(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setLayoutBranchId(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setLayoutSetBranchId(RandomTestUtil.nextLong());
  newRecentLayoutBranch.setPlid(RandomTestUtil.nextLong());
  _recentLayoutBranchs.add(_persistence.update(newRecentLayoutBranch));
  RecentLayoutBranch existingRecentLayoutBranch=_persistence.findByPrimaryKey(newRecentLayoutBranch.getPrimaryKey());
  Assert.assertEquals(existingRecentLayoutBranch.getMvccVersion(),newRecentLayoutBranch.getMvccVersion());
  Assert.assertEquals(existingRecentLayoutBranch.getRecentLayoutBranchId(),newRecentLayoutBranch.getRecentLayoutBranchId());
  Assert.assertEquals(existingRecentLayoutBranch.getGroupId(),newRecentLayoutBranch.getGroupId());
  Assert.assertEquals(existingRecentLayoutBranch.getCompanyId(),newRecentLayoutBranch.getCompanyId());
  Assert.assertEquals(existingRecentLayoutBranch.getUserId(),newRecentLayoutBranch.getUserId());
  Assert.assertEquals(existingRecentLayoutBranch.getLayoutBranchId(),newRecentLayoutBranch.getLayoutBranchId());
  Assert.assertEquals(existingRecentLayoutBranch.getLayoutSetBranchId(),newRecentLayoutBranch.getLayoutSetBranchId());
  Assert.assertEquals(existingRecentLayoutBranch.getPlid(),newRecentLayoutBranch.getPlid());
}

{
  String encryptedPassword=PasswordEncryptorUtil.encrypt(clearTextPassword,currentEncryptedPassword);
  if (currentEncryptedPassword.equals(encryptedPassword)) {
    return true;
  }
 else   if (GetterUtil.getBoolean(PropsUtil.get(PropsKeys.AUTH_MAC_ALLOW))) {
    try {
      MessageDigest digester=MessageDigest.getInstance(PropsUtil.get(PropsKeys.AUTH_MAC_ALGORITHM));
      digester.update(login.getBytes(StringPool.UTF8));
      String shardKey=PropsUtil.get(PropsKeys.AUTH_MAC_SHARED_KEY);
      if (Validator.isNull(shardKey)) {
        if (_log.isWarnEnabled()) {
          _log.warn("Please set the property " + PropsKeys.AUTH_MAC_SHARED_KEY);
        }
        return false;
      }
      encryptedPassword=Base64.encode(digester.digest(shardKey.getBytes(StringPool.UTF8)));
      if (clearTextPassword.equals(encryptedPassword)) {
        return true;
      }
 else {
        return false;
      }
    }
 catch (    NoSuchAlgorithmException nsae) {
      throw new SystemException(nsae);
    }
catch (    UnsupportedEncodingException uee) {
      throw new SystemException(uee);
    }
  }
  return false;
}

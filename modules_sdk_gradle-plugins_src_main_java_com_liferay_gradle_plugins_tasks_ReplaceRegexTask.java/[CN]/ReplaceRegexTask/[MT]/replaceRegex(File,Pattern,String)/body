{
  Path path=file.toPath();
  String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);
  String newContent=content;
  for (  Closure<String> closure : getPre()) {
    newContent=closure.call(newContent,file);
  }
  Matcher matcher=pattern.matcher(newContent);
  if (matcher.find()) {
    int groupCount=matcher.groupCount();
    newContent=newContent.substring(0,matcher.start(groupCount)) + replacement + newContent.substring(matcher.end(groupCount));
  }
 else   if (content.equals(newContent)) {
    String message="Unable to match " + pattern + " in "+ file;
    if (isIgnoreUnmatched()) {
      if (_logger.isInfoEnabled()) {
        _logger.info(message);
      }
      return;
    }
    throw new GradleException(message);
  }
  Files.write(path,newContent.getBytes(StandardCharsets.UTF_8));
  _matchedFiles.add(file);
}

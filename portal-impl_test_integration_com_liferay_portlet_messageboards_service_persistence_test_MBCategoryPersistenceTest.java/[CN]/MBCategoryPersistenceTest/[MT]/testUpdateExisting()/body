{
  long pk=RandomTestUtil.nextLong();
  MBCategory newMBCategory=_persistence.create(pk);
  newMBCategory.setUuid(RandomTestUtil.randomString());
  newMBCategory.setGroupId(RandomTestUtil.nextLong());
  newMBCategory.setCompanyId(RandomTestUtil.nextLong());
  newMBCategory.setUserId(RandomTestUtil.nextLong());
  newMBCategory.setUserName(RandomTestUtil.randomString());
  newMBCategory.setCreateDate(RandomTestUtil.nextDate());
  newMBCategory.setModifiedDate(RandomTestUtil.nextDate());
  newMBCategory.setParentCategoryId(RandomTestUtil.nextLong());
  newMBCategory.setName(RandomTestUtil.randomString());
  newMBCategory.setDescription(RandomTestUtil.randomString());
  newMBCategory.setDisplayStyle(RandomTestUtil.randomString());
  newMBCategory.setThreadCount(RandomTestUtil.nextInt());
  newMBCategory.setMessageCount(RandomTestUtil.nextInt());
  newMBCategory.setLastPostDate(RandomTestUtil.nextDate());
  newMBCategory.setLastPublishDate(RandomTestUtil.nextDate());
  newMBCategory.setStatus(RandomTestUtil.nextInt());
  newMBCategory.setStatusByUserId(RandomTestUtil.nextLong());
  newMBCategory.setStatusByUserName(RandomTestUtil.randomString());
  newMBCategory.setStatusDate(RandomTestUtil.nextDate());
  _mbCategories.add(_persistence.update(newMBCategory));
  MBCategory existingMBCategory=_persistence.findByPrimaryKey(newMBCategory.getPrimaryKey());
  Assert.assertEquals(existingMBCategory.getUuid(),newMBCategory.getUuid());
  Assert.assertEquals(existingMBCategory.getCategoryId(),newMBCategory.getCategoryId());
  Assert.assertEquals(existingMBCategory.getGroupId(),newMBCategory.getGroupId());
  Assert.assertEquals(existingMBCategory.getCompanyId(),newMBCategory.getCompanyId());
  Assert.assertEquals(existingMBCategory.getUserId(),newMBCategory.getUserId());
  Assert.assertEquals(existingMBCategory.getUserName(),newMBCategory.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getCreateDate()),Time.getShortTimestamp(newMBCategory.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getModifiedDate()),Time.getShortTimestamp(newMBCategory.getModifiedDate()));
  Assert.assertEquals(existingMBCategory.getParentCategoryId(),newMBCategory.getParentCategoryId());
  Assert.assertEquals(existingMBCategory.getName(),newMBCategory.getName());
  Assert.assertEquals(existingMBCategory.getDescription(),newMBCategory.getDescription());
  Assert.assertEquals(existingMBCategory.getDisplayStyle(),newMBCategory.getDisplayStyle());
  Assert.assertEquals(existingMBCategory.getThreadCount(),newMBCategory.getThreadCount());
  Assert.assertEquals(existingMBCategory.getMessageCount(),newMBCategory.getMessageCount());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getLastPostDate()),Time.getShortTimestamp(newMBCategory.getLastPostDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getLastPublishDate()),Time.getShortTimestamp(newMBCategory.getLastPublishDate()));
  Assert.assertEquals(existingMBCategory.getStatus(),newMBCategory.getStatus());
  Assert.assertEquals(existingMBCategory.getStatusByUserId(),newMBCategory.getStatusByUserId());
  Assert.assertEquals(existingMBCategory.getStatusByUserName(),newMBCategory.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBCategory.getStatusDate()),Time.getShortTimestamp(newMBCategory.getStatusDate()));
}

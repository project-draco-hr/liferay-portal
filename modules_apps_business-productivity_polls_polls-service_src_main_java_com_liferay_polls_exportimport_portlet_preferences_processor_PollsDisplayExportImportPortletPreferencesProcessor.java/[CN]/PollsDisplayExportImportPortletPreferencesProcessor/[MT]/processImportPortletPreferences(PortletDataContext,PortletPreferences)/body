{
  try {
    portletDataContext.importPortletPermissions(PollsResourcePermissionChecker.RESOURCE_NAME);
  }
 catch (  PortalException pe) {
    throw new PortletDataException("Unable to import portlet permissions",pe);
  }
  long questionId=GetterUtil.getLong(portletPreferences.getValue("questionId",StringPool.BLANK));
  if (questionId > 0) {
    Map<Long,Long> questionIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(PollsQuestion.class);
    questionId=MapUtil.getLong(questionIds,questionId,questionId);
    try {
      portletPreferences.setValue("questionId",String.valueOf(questionId));
    }
 catch (    ReadOnlyException roe) {
      throw new PortletDataException("Unable to update portlet preferences during import",roe);
    }
  }
  return portletPreferences;
}

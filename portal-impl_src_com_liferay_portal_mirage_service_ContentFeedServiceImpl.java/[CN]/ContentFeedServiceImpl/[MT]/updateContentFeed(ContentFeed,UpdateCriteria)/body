{
  try {
    MirageFeed mirageFeed=(MirageFeed)contentFeed;
    JournalFeed feed=mirageFeed.getFeed();
    long groupId=feed.getGroupId();
    String feedId=feed.getFeedId();
    String name=feed.getName();
    String description=feed.getDescription();
    String type=feed.getType();
    String structureId=feed.getStructureId();
    String templateId=feed.getTemplateId();
    String rendererTemplateId=feed.getRendererTemplateId();
    int delta=feed.getDelta();
    String orderByCol=feed.getOrderByCol();
    String orderByType=feed.getOrderByType();
    String targetLayoutFriendlyUrl=feed.getTargetLayoutFriendlyUrl();
    String targetPortletId=feed.getTargetPortletId();
    String contentField=feed.getContentField();
    String feedType=feed.getFeedType();
    double feedVersion=feed.getFeedVersion();
    feed=JournalFeedUtil.findByG_F(groupId,feedId);
    validate(feed.getCompanyId(),groupId,name,description,structureId,targetLayoutFriendlyUrl,contentField);
    feed.setModifiedDate(new Date());
    feed.setName(name);
    feed.setDescription(description);
    feed.setType(type);
    feed.setStructureId(structureId);
    feed.setTemplateId(templateId);
    feed.setRendererTemplateId(rendererTemplateId);
    feed.setDelta(delta);
    feed.setOrderByCol(orderByCol);
    feed.setOrderByType(orderByType);
    feed.setTargetLayoutFriendlyUrl(targetLayoutFriendlyUrl);
    feed.setTargetPortletId(targetPortletId);
    feed.setContentField(contentField);
    if (Validator.isNull(feedType)) {
      feed.setFeedType(RSSUtil.DEFAULT_TYPE);
      feed.setFeedVersion(RSSUtil.DEFAULT_VERSION);
    }
 else {
      feed.setFeedType(feedType);
      feed.setFeedVersion(feedVersion);
    }
    JournalFeedUtil.update(feed,false);
    mirageFeed.setFeed(feed);
  }
 catch (  PortalException pe) {
    throw new CMSException(pe.getMessage(),pe);
  }
catch (  SystemException se) {
    throw new CMSException(se.getMessage(),se);
  }
}

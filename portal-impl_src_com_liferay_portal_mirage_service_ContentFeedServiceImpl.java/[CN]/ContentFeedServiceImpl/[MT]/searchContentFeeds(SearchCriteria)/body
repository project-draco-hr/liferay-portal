{
  try {
    List<JournalFeed> feeds=null;
    SmartFields smartFields=new SmartFields(searchCriteria.getSearchFieldValues());
    String query=smartFields.getString(JournalFeedCriteria.QUERY);
    if (query.equals(JournalFeedCriteria.FIND_ALL)) {
      feeds=JournalFeedUtil.findAll();
    }
 else     if (query.equals(JournalFeedCriteria.FIND_BY_GROUP_ID)) {
      long groupId=smartFields.getLong(JournalFeedCriteria.GROUP_ID);
      int start=smartFields.getInteger(JournalFeedCriteria.START);
      int end=smartFields.getInteger(JournalFeedCriteria.END);
      feeds=JournalFeedUtil.findByGroupId(groupId,start,end);
    }
 else     if (query.equals(JournalFeedCriteria.FIND_BY_KEYWORDS)) {
      long companyId=smartFields.getLong(JournalFeedCriteria.COMPANY_ID);
      long groupId=smartFields.getLong(JournalFeedCriteria.GROUP_ID);
      String keywords=smartFields.getString(JournalFeedCriteria.KEYWORDS);
      int start=smartFields.getInteger(JournalFeedCriteria.START);
      int end=smartFields.getInteger(JournalFeedCriteria.END);
      OrderByComparator obc=(OrderByComparator)searchCriteria.getOrderByComparator();
      feeds=JournalFeedFinderUtil.findByKeywords(companyId,groupId,keywords,start,end,obc);
    }
 else     if (query.equals(JournalFeedCriteria.FIND_BY_C_G_F_N_D)) {
      long companyId=smartFields.getLong(JournalFeedCriteria.COMPANY_ID);
      long groupId=smartFields.getLong(JournalFeedCriteria.GROUP_ID);
      String feedId=smartFields.getString(JournalFeedCriteria.FEED_ID);
      String name=smartFields.getString(JournalFeedCriteria.NAME);
      String description=smartFields.getString(JournalFeedCriteria.DESCRIPTION);
      int start=smartFields.getInteger(JournalFeedCriteria.START);
      int end=smartFields.getInteger(JournalFeedCriteria.END);
      boolean andOperator=searchCriteria.isMatchAnyOneField();
      OrderByComparator obc=(OrderByComparator)searchCriteria.getOrderByComparator();
      feeds=JournalFeedFinderUtil.findByC_G_F_N_D(companyId,groupId,feedId,name,description,andOperator,start,end,obc);
    }
    if (feeds == null) {
      return new ArrayList<ContentFeed>();
    }
    List<ContentFeed> contentFeeds=new ArrayList<ContentFeed>(feeds.size());
    for (    JournalFeed feed : feeds) {
      contentFeeds.add(new MirageJournalFeed(feed));
    }
    return contentFeeds;
  }
 catch (  SystemException se) {
    throw new CMSException(se.getMessage(),se);
  }
}

{
  UnsyncBufferedInputStream unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER));
  Assert.assertEquals(-1,unsyncBufferedInputStream.markLimitIndex);
  unsyncBufferedInputStream.mark(0);
  Assert.assertEquals(-1,unsyncBufferedInputStream.markLimitIndex);
  unsyncBufferedInputStream.mark(-2);
  Assert.assertEquals(-1,unsyncBufferedInputStream.markLimitIndex);
  int markLimitIndex=10;
  unsyncBufferedInputStream.mark(markLimitIndex);
  Assert.assertEquals(markLimitIndex,unsyncBufferedInputStream.markLimitIndex);
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.available());
  Assert.assertEquals(0,unsyncBufferedInputStream.read());
  Assert.assertEquals(1,unsyncBufferedInputStream.read());
  Assert.assertEquals(2,unsyncBufferedInputStream.read());
  Assert.assertEquals(3,unsyncBufferedInputStream.index);
  unsyncBufferedInputStream.reset();
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.available());
  Assert.assertEquals(0,unsyncBufferedInputStream.read());
  Assert.assertEquals(1,unsyncBufferedInputStream.read());
  Assert.assertEquals(2,unsyncBufferedInputStream.read());
  Assert.assertEquals(3,unsyncBufferedInputStream.index);
  int bufferSize=20;
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER),bufferSize);
  Assert.assertEquals(-1,unsyncBufferedInputStream.markLimitIndex);
  unsyncBufferedInputStream.mark(markLimitIndex);
  Assert.assertEquals(markLimitIndex,unsyncBufferedInputStream.markLimitIndex);
  for (int i=0; i < bufferSize * 2; i++) {
    Assert.assertEquals(i,unsyncBufferedInputStream.read());
  }
  Assert.assertEquals(bufferSize,unsyncBufferedInputStream.index);
  Assert.assertEquals(_SIZE - bufferSize * 2,unsyncBufferedInputStream.available());
  Assert.assertEquals(-1,unsyncBufferedInputStream.markLimitIndex);
  try {
    unsyncBufferedInputStream.reset();
    Assert.fail();
  }
 catch (  IOException ioe) {
  }
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER));
  Assert.assertEquals(0,unsyncBufferedInputStream.read());
  Assert.assertEquals(1,unsyncBufferedInputStream.read());
  Assert.assertEquals(2,unsyncBufferedInputStream.read());
  Assert.assertEquals(3,unsyncBufferedInputStream.index);
  unsyncBufferedInputStream.mark(markLimitIndex);
  Assert.assertEquals(0,unsyncBufferedInputStream.index);
  Assert.assertEquals(3,unsyncBufferedInputStream.read());
  Assert.assertEquals(4,unsyncBufferedInputStream.read());
  Assert.assertEquals(5,unsyncBufferedInputStream.read());
  unsyncBufferedInputStream=new UnsyncBufferedInputStream(new ByteArrayInputStream(_BUFFER),_SIZE);
  byte[] tempBuffer=new byte[_SIZE / 2];
  Assert.assertEquals(_SIZE / 2,unsyncBufferedInputStream.read(tempBuffer));
  Assert.assertEquals(_SIZE / 2,unsyncBufferedInputStream.read(tempBuffer));
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.index);
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.firstInvalidIndex);
  unsyncBufferedInputStream.mark(markLimitIndex);
  Assert.assertEquals(0,unsyncBufferedInputStream.index);
  Assert.assertEquals(0,unsyncBufferedInputStream.firstInvalidIndex);
}

{
  try {
    Object paramObj0=articleId;
    if (articleId == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=new BooleanWrapper(autoArticleId);
    Object paramObj2=plid;
    if (plid == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=title;
    if (title == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=content;
    if (content == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=type;
    if (type == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=structureId;
    if (structureId == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=templateId;
    if (templateId == null) {
      paramObj7=new NullWrapper("java.lang.String");
    }
    Object paramObj8=new IntegerWrapper(displayDateMonth);
    Object paramObj9=new IntegerWrapper(displayDateDay);
    Object paramObj10=new IntegerWrapper(displayDateYear);
    Object paramObj11=new IntegerWrapper(displayDateHour);
    Object paramObj12=new IntegerWrapper(displayDateMinute);
    Object paramObj13=new IntegerWrapper(expirationDateMonth);
    Object paramObj14=new IntegerWrapper(expirationDateDay);
    Object paramObj15=new IntegerWrapper(expirationDateYear);
    Object paramObj16=new IntegerWrapper(expirationDateHour);
    Object paramObj17=new IntegerWrapper(expirationDateMinute);
    Object paramObj18=new BooleanWrapper(neverExpire);
    Object paramObj19=new IntegerWrapper(reviewDateMonth);
    Object paramObj20=new IntegerWrapper(reviewDateDay);
    Object paramObj21=new IntegerWrapper(reviewDateYear);
    Object paramObj22=new IntegerWrapper(reviewDateHour);
    Object paramObj23=new IntegerWrapper(reviewDateMinute);
    Object paramObj24=new BooleanWrapper(neverReview);
    Object paramObj25=images;
    if (images == null) {
      paramObj25=new NullWrapper("java.util.Map");
    }
    Object paramObj26=articleURL;
    if (articleURL == null) {
      paramObj26=new NullWrapper("java.lang.String");
    }
    Object paramObj27=prefs;
    if (prefs == null) {
      paramObj27=new NullWrapper("javax.portlet.PortletPreferences");
    }
    Object paramObj28=new BooleanWrapper(addCommunityPermissions);
    Object paramObj29=new BooleanWrapper(addGuestPermissions);
    MethodWrapper methodWrapper=new MethodWrapper(JournalArticleServiceUtil.class.getName(),"addArticle",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20,paramObj21,paramObj22,paramObj23,paramObj24,paramObj25,paramObj26,paramObj27,paramObj28,paramObj29});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      throw e;
    }
    return (com.liferay.portlet.journal.model.JournalArticle)returnObj;
  }
 catch (  com.liferay.portal.PortalException pe) {
    _log.error(StackTraceUtil.getStackTrace(pe));
    throw pe;
  }
catch (  com.liferay.portal.SystemException se) {
    _log.error(StackTraceUtil.getStackTrace(se));
    throw se;
  }
catch (  Exception e) {
    String stackTrace=StackTraceUtil.getStackTrace(e);
    _log.error(stackTrace);
    throw new com.liferay.portal.SystemException(stackTrace);
  }
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  Ticket ticket=getTicket(request);
  if (!themeDisplay.isSignedIn() && (ticket == null)) {
    return mapping.findForward(ActionConstants.COMMON_REFERER_JSP);
  }
  String cmd=ParamUtil.getString(request,Constants.CMD);
  if (Validator.isNull(cmd)) {
    if (ticket != null) {
      User user=UserLocalServiceUtil.getUser(ticket.getClassPK());
      try {
        UserLocalServiceUtil.checkLockout(user);
        UserLocalServiceUtil.updatePasswordReset(user.getUserId(),true);
      }
 catch (      UserLockoutException ule) {
        SessionErrors.add(request,ule.getClass());
      }
    }
    return mapping.findForward("portal.update_password");
  }
  try {
    updatePassword(request,response,themeDisplay,ticket);
    String redirectURL=ParamUtil.getString(request,WebKeys.REFERER);
    if (Validator.isNull(redirectURL)) {
      PortletURL portletURL=new PortletURLImpl(request,PortletKeys.LOGIN,themeDisplay.getPlid(),PortletRequest.RENDER_PHASE);
      redirectURL=portletURL.toString();
    }
    response.sendRedirect(redirectURL);
    return null;
  }
 catch (  Exception e) {
    if (e instanceof UserPasswordException) {
      SessionErrors.add(request,e.getClass(),e);
      return mapping.findForward("portal.update_password");
    }
 else     if (e instanceof NoSuchUserException || e instanceof PrincipalException) {
      SessionErrors.add(request,e.getClass());
      return mapping.findForward("portal.error");
    }
 else {
      PortalUtil.sendError(e,request,response);
      return null;
    }
  }
}

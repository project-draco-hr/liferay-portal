{
  Group group=GroupLocalServiceUtil.getGroup(layout.getGroupId());
  if (!group.isActive()) {
    return false;
  }
 else   if (group.isStagingGroup()) {
    Group liveGroup=group.getLiveGroup();
    if (!liveGroup.isActive()) {
      return false;
    }
  }
  if (group.isUser()) {
    long groupUserId=group.getClassPK();
    if (groupUserId == permissionChecker.getUserId()) {
      return true;
    }
    User groupUser=UserLocalServiceUtil.getUserById(groupUserId);
    if (!groupUser.isActive()) {
      return false;
    }
    if (layout.isPrivateLayout()) {
      if (UserPermissionUtil.contains(permissionChecker,groupUserId,groupUser.getOrganizationIds(),ActionKeys.MANAGE_LAYOUTS) || UserPermissionUtil.contains(permissionChecker,groupUserId,groupUser.getOrganizationIds(),ActionKeys.UPDATE)) {
        return true;
      }
      return false;
    }
  }
  if (group.isStagingGroup()) {
    if (GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.VIEW_STAGING)) {
      return true;
    }
    return false;
  }
  if (containsWithoutViewableGroup(permissionChecker,layout,controlPanelCategory,checkResourcePermission,ActionKeys.VIEW)) {
    return true;
  }
  if (group.isControlPanel()) {
    if (PortalPermissionUtil.contains(permissionChecker,ActionKeys.VIEW_CONTROL_PANEL)) {
      return true;
    }
    if (Validator.isNotNull(controlPanelCategory)) {
      return true;
    }
    return false;
  }
  if (group.isSite()) {
    if (GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.MANAGE_LAYOUTS) || GroupPermissionUtil.contains(permissionChecker,group.getGroupId(),ActionKeys.UPDATE)) {
      return true;
    }
  }
  if (group.isCompany()) {
    return false;
  }
 else   if (group.isLayoutPrototype()) {
    if (LayoutPrototypePermissionUtil.contains(permissionChecker,group.getClassPK(),ActionKeys.VIEW)) {
      return true;
    }
    return false;
  }
 else   if (group.isLayoutSetPrototype()) {
    if (LayoutSetPrototypePermissionUtil.contains(permissionChecker,group.getClassPK(),ActionKeys.VIEW)) {
      return true;
    }
    return false;
  }
 else   if (group.isOrganization()) {
    long organizationId=group.getOrganizationId();
    if (OrganizationLocalServiceUtil.hasUserOrganization(permissionChecker.getUserId(),organizationId,false,false)) {
      return true;
    }
 else     if (OrganizationPermissionUtil.contains(permissionChecker,organizationId,ActionKeys.UPDATE)) {
      return true;
    }
    if (!PropsValues.ORGANIZATIONS_MEMBERSHIP_STRICT) {
      List<Organization> userOrgs=OrganizationLocalServiceUtil.getUserOrganizations(permissionChecker.getUserId());
      for (      Organization organization : userOrgs) {
        for (        Organization ancestorOrganization : organization.getAncestors()) {
          if (organizationId == ancestorOrganization.getOrganizationId()) {
            return true;
          }
        }
      }
    }
  }
  return false;
}

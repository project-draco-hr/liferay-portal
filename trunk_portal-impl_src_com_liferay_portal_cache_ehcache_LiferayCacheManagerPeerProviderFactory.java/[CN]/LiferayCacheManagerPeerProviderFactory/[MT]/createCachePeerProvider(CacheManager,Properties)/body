{
  String portalPropertyKey=properties.getProperty("portalPropertyKey");
  if (Validator.isNull(portalPropertyKey)) {
    throw new RuntimeException("portalPropertyKey is null");
  }
  Properties propsUtilProperties=PropsUtil.getProperties();
  String portalPropertiesString=propsUtilProperties.getProperty(portalPropertyKey);
  if (_log.isInfoEnabled()) {
    _log.info("portalPropertyKey " + portalPropertyKey + " has value "+ portalPropertiesString);
  }
  portalPropertiesString=StringUtil.replace(portalPropertiesString,CharPool.COMMA,CharPool.NEW_LINE);
  Properties portalProperties=null;
  try {
    portalProperties=PropertiesUtil.load(portalPropertiesString);
  }
 catch (  IOException ioe) {
    _log.error(ioe,ioe);
    throw new RuntimeException(ioe.getMessage());
  }
  Object[] keys=portalProperties.keySet().toArray();
  for (  Object key : keys) {
    String value=(String)portalProperties.remove(key);
    value=_htmlUtil.unescape(value);
    portalProperties.put(key,value);
  }
  if (_log.isDebugEnabled()) {
    _log.debug(PropertiesUtil.list(portalProperties));
  }
  return _cacheManagerPeerProviderFactory.createCachePeerProvider(cacheManager,portalProperties);
}

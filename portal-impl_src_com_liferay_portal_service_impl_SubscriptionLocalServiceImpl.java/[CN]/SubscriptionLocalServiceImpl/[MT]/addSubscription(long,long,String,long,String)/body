{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=classNameLocalService.getClassNameId(className);
  Subscription subscription=subscriptionPersistence.fetchByC_U_C_C(user.getCompanyId(),userId,classNameId,classPK);
  if (subscription == null) {
    long subscriptionId=counterLocalService.increment();
    subscription=subscriptionPersistence.create(subscriptionId);
    subscription.setGroupId(groupId);
    subscription.setCompanyId(user.getCompanyId());
    subscription.setUserId(user.getUserId());
    subscription.setUserName(user.getFullName());
    subscription.setClassNameId(classNameId);
    subscription.setClassPK(classPK);
    subscription.setFrequency(frequency);
    subscriptionPersistence.update(subscription);
  }
  if (groupId > 0) {
    AssetEntry assetEntry=null;
    try {
      assetEntry=assetEntryLocalService.getEntry(className,classPK);
    }
 catch (    Exception e) {
      assetEntry=assetEntryLocalService.updateEntry(userId,groupId,subscription.getCreateDate(),subscription.getModifiedDate(),className,classPK,null,0,null,null,true,false,null,null,null,null,String.valueOf(groupId),null,null,null,null,0,0,null);
    }
    JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
    extraDataJSONObject.put("title",assetEntry.getTitle());
    SocialActivityManagerUtil.addActivity(userId,assetEntry,SocialActivityConstants.TYPE_SUBSCRIBE,extraDataJSONObject.toString(),0);
  }
  return subscription;
}

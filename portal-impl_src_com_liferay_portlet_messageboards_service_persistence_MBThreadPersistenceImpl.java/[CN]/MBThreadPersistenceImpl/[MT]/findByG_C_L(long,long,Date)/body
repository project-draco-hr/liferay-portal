{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(categoryId),lastPostDate};
  List<MBThread> list=(List<MBThread>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_G_C_L,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_SELECT_MBTHREAD_WHERE);
      query.append(_FINDER_COLUMN_G_C_L_GROUPID_2);
      query.append(_FINDER_COLUMN_G_C_L_CATEGORYID_2);
      if (lastPostDate == null) {
        query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_1);
      }
 else {
        query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_2);
      }
      query.append(MBThreadModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(categoryId);
      if (lastPostDate != null) {
        qPos.add(CalendarUtil.getTimestamp(lastPostDate));
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<MBThread>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_G_C_L,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

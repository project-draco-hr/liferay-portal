{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(categoryId),lastPostDate};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_G_C_L,finderArgs,this);
  if (count == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(9);
      query.append("SELECT COUNT(mbThread) ");
      query.append("FROM MBThread mbThread WHERE ");
      query.append("mbThread.groupId = ?");
      query.append(" AND ");
      query.append("mbThread.categoryId = ?");
      query.append(" AND ");
      if (lastPostDate == null) {
        query.append("mbThread.lastPostDate IS NULL");
      }
 else {
        query.append("mbThread.lastPostDate = ?");
      }
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(categoryId);
      if (lastPostDate != null) {
        qPos.add(CalendarUtil.getTimestamp(lastPostDate));
      }
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_G_C_L,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}

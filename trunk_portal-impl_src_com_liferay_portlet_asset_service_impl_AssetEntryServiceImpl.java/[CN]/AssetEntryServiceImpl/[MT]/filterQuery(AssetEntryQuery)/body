{
  int end=entryQuery.getEnd();
  int start=entryQuery.getStart();
  entryQuery.setEnd(end + PropsValues.ASSET_FILTER_SEARCH_LIMIT);
  entryQuery.setStart(0);
  List<AssetEntry> entries=assetEntryLocalService.getEntries(entryQuery);
  PermissionChecker permissionChecker=getPermissionChecker();
  List<AssetEntry> filteredEntries=new ArrayList<AssetEntry>();
  for (  AssetEntry entry : entries) {
    String className=entry.getClassName();
    long classPK=entry.getClassPK();
    AssetRendererFactory assetRendererFactory=AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className);
    try {
      if (assetRendererFactory.hasPermission(permissionChecker,classPK,ActionKeys.VIEW)) {
        filteredEntries.add(entry);
      }
    }
 catch (    Exception e) {
    }
  }
  int length=filteredEntries.size();
  if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) {
    if (end > length) {
      end=length;
    }
    if (start > length) {
      start=length;
    }
    filteredEntries=filteredEntries.subList(start,end);
  }
  entryQuery.setEnd(end);
  entryQuery.setStart(start);
  return new Object[]{filteredEntries,length};
}

{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  SocialActivity newSocialActivity=addSocialActivity();
  _persistence.clearCache();
  SocialActivity existingSocialActivity=_persistence.findByPrimaryKey(newSocialActivity.getPrimaryKey());
  Assert.assertEquals(existingSocialActivity.getMirrorActivityId(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalMirrorActivityId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getGroupId(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getUserId(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalUserId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getCreateDate(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalCreateDate",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getClassNameId(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getClassPK(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalClassPK",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getType(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalType",new Class<?>[0]));
  Assert.assertEquals(existingSocialActivity.getReceiverUserId(),ReflectionTestUtil.invoke(existingSocialActivity,"getOriginalReceiverUserId",new Class<?>[0]));
}

{
  super(portletRequest,new CalendarResourceDisplayTerms(portletRequest),new CalendarResourceDisplayTerms(portletRequest),curParam,DEFAULT_DELTA,iteratorURL,null,EMPTY_RESULTS_MESSAGE);
  CalendarResourceDisplayTerms displayTerms=(CalendarResourceDisplayTerms)getDisplayTerms();
  iteratorURL.setParameter(CalendarResourceDisplayTerms.ACTIVE,String.valueOf(displayTerms.isActive()));
  iteratorURL.setParameter(CalendarResourceDisplayTerms.CODE,displayTerms.getCode());
  iteratorURL.setParameter(CalendarResourceDisplayTerms.DESCRIPTION,displayTerms.getDescription());
  iteratorURL.setParameter(CalendarResourceDisplayTerms.NAME,displayTerms.getName());
  iteratorURL.setParameter(CalendarResourceDisplayTerms.SCOPE,String.valueOf(displayTerms.getScope()));
  try {
    PortalPreferences preferences=PortletPreferencesFactoryUtil.getPortalPreferences(portletRequest);
    String orderByCol=ParamUtil.getString(portletRequest,"orderByCol");
    String orderByType=ParamUtil.getString(portletRequest,"orderByType");
    if (Validator.isNotNull(orderByCol) && Validator.isNotNull(orderByType)) {
      preferences.setValue(PortletKeys.CALENDAR,"users-resources-order-by-col",orderByCol);
      preferences.setValue(PortletKeys.CALENDAR,"users-resources-order-by-type",orderByType);
    }
 else {
      orderByCol=preferences.getValue(PortletKeys.CALENDAR,"users-resources-order-by-col","last-name");
      orderByType=preferences.getValue(PortletKeys.CALENDAR,"users-resources-order-by-type","asc");
    }
    OrderByComparator<CalendarResource> orderByComparator=CalendarResourceUtil.getOrderByComparator(orderByCol,orderByType);
    setOrderableHeaders(orderableHeaders);
    setOrderByCol(orderByCol);
    setOrderByType(orderByType);
    setOrderByComparator(orderByComparator);
  }
 catch (  Exception e) {
    _log.error(e);
  }
}

{
  _log.info(event.getDeploymentStatus().getMessage());
  if (event.getDeploymentStatus().isCompleted()) {
    try {
      TargetModuleID[] ids=getDeploymentManager().getNonRunningModules(ModuleType.WAR,getDeploymentManager().getTargets());
      TargetModuleID[] myIDs=new TargetModuleID[1];
      for (      TargetModuleID id : ids) {
        if (_warContext.equals(id.getModuleID())) {
          myIDs[0]=id;
          ProgressObject startProgress=_driver.getDeploymentManager().start(myIDs);
          startProgress.addProgressListener(new ProgressListener(){
            public void handleProgressEvent(            ProgressEvent event){
              _log.info(event.getDeploymentStatus().getMessage());
              if (event.getDeploymentStatus().isCompleted()) {
                _driver.setError(false);
                _driver.setAppStarted(true);
              }
            }
          }
);
        }
      }
      _driver.setError(false);
      _driver.setAppStarted(true);
    }
 catch (    IllegalStateException ise) {
      _log.warn(ise);
      _driver.setError(true);
      _driver.setAppStarted(false);
    }
catch (    TargetException te) {
      _log.warn(te);
      _driver.setError(true);
      _driver.setAppStarted(false);
    }
  }
 else   if (event.getDeploymentStatus().isFailed()) {
    _driver.setError(true);
    _driver.setAppStarted(false);
  }
}

{
  super(portletRequest,new DisplayTerms(portletRequest),null,DEFAULT_CUR_PARAM,DEFAULT_DELTA,iteratorURL,headerNames,EMPTY_RESULTS_MESSAGE);
  try {
    PortalPreferences preferences=PortletPreferencesFactoryUtil.getPortalPreferences(portletRequest);
    String orderByCol=ParamUtil.getString(portletRequest,"orderByCol");
    String orderByType=ParamUtil.getString(portletRequest,"orderByType");
    if (Validator.isNotNull(orderByCol) && Validator.isNotNull(orderByType)) {
      preferences.setValue(DDLFormPortletKeys.DYNAMIC_DATA_LISTS_FORM_ADMIN,"view-entries-order-by-col",orderByCol);
      preferences.setValue(DDLFormPortletKeys.DYNAMIC_DATA_LISTS_FORM_ADMIN,"view-entries-order-by-type",orderByType);
    }
 else {
      orderByCol=preferences.getValue(DDLFormPortletKeys.DYNAMIC_DATA_LISTS_FORM_ADMIN,"view-entries-order-by-col","id");
      orderByType=preferences.getValue(DDLFormPortletKeys.DYNAMIC_DATA_LISTS_FORM_ADMIN,"view-entries-order-by-type","asc");
    }
    OrderByComparator<DDLRecord> orderByComparator=getRecordOrderByComparator(orderByCol,orderByType);
    setOrderableHeaders(orderableHeaders);
    setOrderByCol(orderByCol);
    setOrderByType(orderByType);
    setOrderByComparator(orderByComparator);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

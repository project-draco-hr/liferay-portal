{
  Object object=JSONFactoryUtil.looseDeserialize("{\"class\":\"java.lang.Thread\"}");
  Assert.assertEquals(HashMap.class,object.getClass());
  object=JSONFactoryUtil.looseDeserialize("{\"\u0063lass\":\"java.lang.Thread\"}");
  Assert.assertEquals(HashMap.class,object.getClass());
  Assert.assertTrue(((Map<?,?>)object).containsKey("class"));
  JSONFactoryUtil.looseDeserialize("{\"class\":\"" + JSONFactoryUtil.class.getName() + "\"}");
  Map<?,?> map=(Map<?,?>)JSONFactoryUtil.looseDeserialize("{\"class\":\"" + JSONFactoryUtil.class.getName() + "\",\"foo\": \"boo\"}");
  Assert.assertNotNull(map);
  Assert.assertEquals(2,map.size());
  Assert.assertEquals("com.liferay.portal.kernel.json.JSONFactoryUtil",map.get("class"));
  Assert.assertEquals("boo",map.get("foo"));
  map=(Map<?,?>)JSONFactoryUtil.looseDeserialize("{\"class\":\"" + JSONFactoryUtil.class.getName() + "\",\"foo\": \"boo\",\"jsonFactory\":{\"class\":\""+ JSONFactoryImpl.class.getName()+ "\"}}");
  Assert.assertNotNull(map);
  Assert.assertEquals(3,map.size());
  Assert.assertEquals(JSONFactoryUtil.class.getName(),map.get("class"));
  Assert.assertEquals("boo",map.get("foo"));
  map=(Map<?,?>)map.get("jsonFactory");
  Assert.assertNotNull(map);
  Assert.assertEquals(1,map.size());
  Assert.assertEquals(JSONFactoryImpl.class.getName(),map.get("class"));
}

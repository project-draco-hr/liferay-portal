{
  Object object=JSONFactoryUtil.looseDeserializeSafe("{\"class\":\"java.lang.Thread\"}}");
  Assert.assertEquals(HashMap.class,object.getClass());
  object=JSONFactoryUtil.looseDeserializeSafe("{\"\u0063lass\":\"java.lang.Thread\"}}");
  Assert.assertEquals(HashMap.class,object.getClass());
  Assert.assertTrue(((Map<?,?>)object).containsKey("class"));
  try {
    JSONFactoryUtil.looseDeserializeSafe("{\"class\":\"" + EntityCacheUtil.class.getName() + "\"}}");
  }
 catch (  Exception e) {
    Assert.fail(e.toString());
  }
  Map<?,?> map=(Map<?,?>)JSONFactoryUtil.looseDeserializeSafe("{\"class\":\"" + EntityCacheUtil.class.getName() + "\",\"foo\": \"boo\"}");
  Assert.assertNotNull(map);
  Assert.assertEquals(2,map.size());
  Assert.assertEquals("com.liferay.portal.kernel.dao.orm.EntityCacheUtil",map.get("class"));
  Assert.assertEquals("boo",map.get("foo"));
  map=(Map<?,?>)JSONFactoryUtil.looseDeserializeSafe("{\"class\":\"" + EntityCacheUtil.class.getName() + "\",\"foo\": \"boo\",\"entityCache\":{\"class\":\""+ EntityCacheImpl.class.getName()+ "\"}}");
  Assert.assertNotNull(map);
  Assert.assertEquals(3,map.size());
  Assert.assertEquals(EntityCacheUtil.class.getName(),map.get("class"));
  Assert.assertEquals("boo",map.get("foo"));
  map=(Map<?,?>)map.get("entityCache");
  Assert.assertNotNull(map);
  Assert.assertEquals(1,map.size());
  Assert.assertEquals(EntityCacheImpl.class.getName(),map.get("class"));
}

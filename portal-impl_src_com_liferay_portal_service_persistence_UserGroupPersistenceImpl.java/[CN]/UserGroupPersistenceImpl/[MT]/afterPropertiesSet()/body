{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portal.model.UserGroup")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<UserGroup>> listenersList=new ArrayList<ModelListener<UserGroup>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<UserGroup>)InstanceFactory.newInstance(getClassLoader(),listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  userGroupToGroupTableMapper=TableMapperFactory.getTableMapper("Groups_UserGroups","userGroupId","groupId",this,groupPersistence);
  userGroupToTeamTableMapper=TableMapperFactory.getTableMapper("UserGroups_Teams","userGroupId","teamId",this,teamPersistence);
  userGroupToUserTableMapper=TableMapperFactory.getTableMapper("Users_UserGroups","userGroupId","userId",this,userPersistence);
}

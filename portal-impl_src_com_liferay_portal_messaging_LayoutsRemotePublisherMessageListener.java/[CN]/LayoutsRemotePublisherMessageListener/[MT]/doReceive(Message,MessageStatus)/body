{
  LayoutsRemotePublisherRequest publisherRequest=(LayoutsRemotePublisherRequest)message.getPayload();
  messageStatus.setPayload(publisherRequest);
  long userId=publisherRequest.getUserId();
  long sourceGroupId=publisherRequest.getSourceGroupId();
  boolean privateLayout=publisherRequest.isPrivateLayout();
  Map<Long,Boolean> layoutIdMap=publisherRequest.getLayoutIdMap();
  Map<String,String[]> parameterMap=publisherRequest.getParameterMap();
  String remoteAddress=publisherRequest.getRemoteAddress();
  int remotePort=publisherRequest.getRemotePort();
  String remotePathContext=publisherRequest.getRemotePathContext();
  boolean secureConnection=publisherRequest.isSecureConnection();
  long remoteGroupId=publisherRequest.getRemoteGroupId();
  boolean remotePrivateLayout=publisherRequest.isRemotePrivateLayout();
  Date startDate=publisherRequest.getStartDate();
  Date endDate=publisherRequest.getEndDate();
  String range=MapUtil.getString(parameterMap,"range");
  if (range.equals("fromLastPublishDate")) {
    LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(sourceGroupId,privateLayout);
    long lastPublishDate=GetterUtil.getLong(layoutSet.getSettingsProperty("last-publish-date"));
    if (lastPublishDate > 0) {
      endDate=new Date();
      startDate=new Date(lastPublishDate);
    }
  }
 else   if (range.equals("last")) {
    int last=MapUtil.getInteger(parameterMap,"last");
    if (last > 0) {
      Date scheduledFireTime=publisherRequest.getScheduledFireTime();
      if (scheduledFireTime == null) {
        scheduledFireTime=new Date();
      }
      startDate=new Date(scheduledFireTime.getTime() - (last * Time.HOUR));
      endDate=scheduledFireTime;
    }
  }
  initThreadLocals(userId,parameterMap);
  try {
    StagingUtil.copyRemoteLayouts(sourceGroupId,privateLayout,layoutIdMap,parameterMap,remoteAddress,remotePort,remotePathContext,secureConnection,remoteGroupId,remotePrivateLayout,startDate,endDate);
  }
  finally {
    resetThreadLocals();
  }
}

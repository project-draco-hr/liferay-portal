{
  List<RatingsEntry> ratingsEntries=new ArrayList<RatingsEntry>();
  List<Long> missedClassPKs=new ArrayList<Long>();
  Object[] finderArgs=new Object[]{userId,classNameId,0};
  for (  Long classPk : classPKs) {
    finderArgs[2]=classPk;
    Object result=FinderCacheUtil.getResult(RatingsEntryPersistenceImpl.FINDER_PATH_FETCH_BY_U_C_C,finderArgs,this);
    if (result == null) {
      missedClassPKs.add(classPk);
    }
 else     if (result instanceof RatingsEntry) {
      ratingsEntries.add((RatingsEntry)result);
    }
  }
  if (missedClassPKs.isEmpty()) {
    return ratingsEntries;
  }
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_U_C_C);
    sql=StringUtil.replace(sql,"[$CLASS_PKS$]",StringUtil.merge(missedClassPKs));
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("RatingsEntry",RatingsEntryImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId);
    qPos.add(classNameId);
    List<RatingsEntry> list=q.list();
    if (list.isEmpty()) {
      return ratingsEntries;
    }
    for (    RatingsEntry ratingsEntry : list) {
      RatingsEntryUtil.cacheResult(ratingsEntry);
      missedClassPKs.remove(ratingsEntry.getClassPK());
    }
    for (    Long missedClassPk : missedClassPKs) {
      finderArgs[2]=missedClassPk;
      FinderCacheUtil.putResult(RatingsEntryPersistenceImpl.FINDER_PATH_FETCH_BY_U_C_C,finderArgs,Collections.EMPTY_LIST);
    }
    ratingsEntries.addAll(list);
    return ratingsEntries;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

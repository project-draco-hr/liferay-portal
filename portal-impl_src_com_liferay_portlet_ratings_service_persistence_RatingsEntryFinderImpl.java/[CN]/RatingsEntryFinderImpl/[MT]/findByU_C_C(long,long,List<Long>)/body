{
  Object[] finderArgs=new Object[]{userId,classNameId,StringUtil.merge(classPKs.toArray(new Long[classPKs.size()]))};
  List<RatingsEntry> list=(List<RatingsEntry>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C,finderArgs,this);
  if ((list != null) && !list.isEmpty()) {
    for (    RatingsEntry ratingsEntry : list) {
      if (userId != ratingsEntry.getUserId() || classNameId != ratingsEntry.getClassNameId() || !classPKs.contains(ratingsEntry.getClassPK())) {
        list=null;
        break;
      }
    }
  }
  if (list != null) {
    return list;
  }
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_U_C_C);
    sql=StringUtil.replace(sql,"[$CLASS_PKS$]",StringUtil.merge(classPKs));
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("RatingsEntry",RatingsEntryImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId);
    qPos.add(classNameId);
    list=q.list(true);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    if (list == null) {
      list=new ArrayList<RatingsEntry>();
    }
    FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C,finderArgs,list);
    closeSession(session);
  }
  return list;
}

{
  if (__hashCodeCalc) {
    return 0;
  }
  __hashCodeCalc=true;
  int _hashCode=1;
  _hashCode+=(isSecureClientCommunication() ? Boolean.TRUE : Boolean.FALSE).hashCode();
  if (getLocales() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getLocales()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getLocales(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getMimeTypes() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getMimeTypes()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getMimeTypes(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getMode() != null) {
    _hashCode+=getMode().hashCode();
  }
  if (getWindowState() != null) {
    _hashCode+=getWindowState().hashCode();
  }
  if (getClientData() != null) {
    _hashCode+=getClientData().hashCode();
  }
  if (getNavigationalState() != null) {
    _hashCode+=getNavigationalState().hashCode();
  }
  if (getMarkupCharacterSets() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getMarkupCharacterSets()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getMarkupCharacterSets(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getValidateTag() != null) {
    _hashCode+=getValidateTag().hashCode();
  }
  if (getValidNewModes() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getValidNewModes()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getValidNewModes(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getValidNewWindowStates() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getValidNewWindowStates()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getValidNewWindowStates(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  if (getExtensions() != null) {
    for (int i=0; i < java.lang.reflect.Array.getLength(getExtensions()); i++) {
      java.lang.Object obj=java.lang.reflect.Array.get(getExtensions(),i);
      if (obj != null && !obj.getClass().isArray()) {
        _hashCode+=obj.hashCode();
      }
    }
  }
  __hashCodeCalc=false;
  return _hashCode;
}

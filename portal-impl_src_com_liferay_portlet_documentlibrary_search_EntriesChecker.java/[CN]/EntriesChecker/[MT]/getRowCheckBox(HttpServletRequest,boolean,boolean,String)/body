{
  DLFileShortcut dlFileShortcut=null;
  FileEntry fileEntry=null;
  Folder folder=null;
  long entryId=GetterUtil.getLong(primaryKey);
  try {
    fileEntry=DLAppServiceUtil.getFileEntry(entryId);
  }
 catch (  Exception e1) {
    if (e1 instanceof NoSuchFileEntryException || e1 instanceof NoSuchRepositoryEntryException) {
      try {
        dlFileShortcut=DLAppServiceUtil.getFileShortcut(entryId);
      }
 catch (      Exception e2) {
        if (e2 instanceof NoSuchFileShortcutException) {
          try {
            folder=DLAppServiceUtil.getFolder(entryId);
          }
 catch (          Exception e3) {
            return StringPool.BLANK;
          }
        }
 else {
          return StringPool.BLANK;
        }
      }
    }
 else {
      return StringPool.BLANK;
    }
  }
  boolean showInput=false;
  String name=null;
  if (fileEntry != null) {
    name=FileEntry.class.getSimpleName();
    try {
      if (DLFileEntryPermission.contains(_permissionChecker,fileEntry,ActionKeys.DELETE) || DLFileEntryPermission.contains(_permissionChecker,fileEntry,ActionKeys.UPDATE)) {
        showInput=true;
      }
    }
 catch (    Exception e) {
    }
  }
 else   if (dlFileShortcut != null) {
    name=DLFileShortcut.class.getSimpleName();
    try {
      if (DLFileShortcutPermission.contains(_permissionChecker,dlFileShortcut,ActionKeys.DELETE) || DLFileShortcutPermission.contains(_permissionChecker,dlFileShortcut,ActionKeys.UPDATE)) {
        showInput=true;
      }
    }
 catch (    Exception e) {
    }
  }
 else   if (folder != null) {
    name=Folder.class.getSimpleName();
    try {
      if (DLFolderPermission.contains(_permissionChecker,folder,ActionKeys.DELETE) || DLFolderPermission.contains(_permissionChecker,folder,ActionKeys.UPDATE)) {
        showInput=true;
      }
    }
 catch (    Exception e) {
    }
  }
  if (!showInput) {
    return StringPool.BLANK;
  }
  String allRowsIdsCheckBox=null;
  String checkBoxRowIds=null;
  if (_hasAllCheckBox) {
    allRowsIdsCheckBox="'#".concat(getAllRowIds()).concat("Checkbox'");
    StringBundler sb=new StringBundler();
    sb.append("['");
    sb.append(_liferayPortletResponse.getNamespace());
    sb.append(RowChecker.ROW_IDS);
    sb.append(Folder.class.getSimpleName());
    sb.append("Checkbox', '");
    sb.append(_liferayPortletResponse.getNamespace());
    sb.append(RowChecker.ROW_IDS);
    sb.append(DLFileShortcut.class.getSimpleName());
    sb.append("Checkbox', '");
    sb.append(_liferayPortletResponse.getNamespace());
    sb.append(RowChecker.ROW_IDS);
    sb.append(FileEntry.class.getSimpleName());
    sb.append("Checkbox']");
    checkBoxRowIds=sb.toString();
  }
  String checkBoxPostOnClick=null;
  if (Validator.isNotNull(_checkBoxPostOnClickMethodName)) {
    StringBundler sb=new StringBundler();
    sb.append(_liferayPortletResponse.getNamespace());
    sb.append(_checkBoxPostOnClickMethodName);
    sb.append("();");
    checkBoxPostOnClick=sb.toString();
  }
  return getRowCheckBox(checked,disabled,_liferayPortletResponse.getNamespace() + RowChecker.ROW_IDS + name+ "Checkbox",primaryKey,checkBoxRowIds,allRowsIdsCheckBox,checkBoxPostOnClick);
}

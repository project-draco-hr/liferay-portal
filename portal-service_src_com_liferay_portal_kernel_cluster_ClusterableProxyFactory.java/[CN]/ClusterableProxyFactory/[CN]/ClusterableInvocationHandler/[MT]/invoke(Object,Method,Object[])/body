{
  if (!ClusterInvokeThreadLocal.isEnabled()) {
    return method.invoke(_targetObject,arguments);
  }
  Clusterable clusterable=_getClusterable(method,_targetObject.getClass());
  if (clusterable == null || (clusterable == NullClusterable.NULL_CLUSTERABLE)) {
    return method.invoke(_targetObject,arguments);
  }
  if (clusterable.onMaster()) {
    if (ClusterMasterExecutorUtil.isMaster()) {
      return method.invoke(_targetObject,arguments);
    }
    return ClusterableInvokerUtil.invokeOnMaster(clusterable.acceptor(),_targetObject,method,arguments);
  }
  Object result=method.invoke(_targetObject,arguments);
  ClusterableInvokerUtil.invokeOnCluster(clusterable.acceptor(),_targetObject,method,arguments);
  return result;
}

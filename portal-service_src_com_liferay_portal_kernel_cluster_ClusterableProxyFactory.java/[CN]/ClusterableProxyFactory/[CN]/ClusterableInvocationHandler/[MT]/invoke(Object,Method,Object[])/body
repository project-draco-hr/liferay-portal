{
  if (!ClusterInvokeThreadLocal.isEnabled()) {
    return method.invoke(_targetObject,args);
  }
  Clusterable clusterable=_getClusterable(method,_targetObject.getClass());
  if (clusterable == null) {
    return method.invoke(_targetObject,args);
  }
  if (clusterable.onMaster()) {
    if (ClusterMasterExecutorUtil.isMaster()) {
      return method.invoke(_targetObject,args);
    }
    return ClusterableInvokerUtil.invokeOnMaster(clusterable.acceptor(),_targetObject,method,args);
  }
  Object result=method.invoke(_targetObject,args);
  ClusterableInvokerUtil.invokeOnCluster(clusterable.acceptor(),_targetObject,method,args);
  return result;
}

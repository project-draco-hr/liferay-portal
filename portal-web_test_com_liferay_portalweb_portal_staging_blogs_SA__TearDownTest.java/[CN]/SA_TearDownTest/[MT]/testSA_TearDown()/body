{
  int label=1;
  while (label >= 1) {
switch (label) {
case 1:
      for (int second=0; ; second++) {
        if (second >= 60) {
          fail("timeout");
        }
        try {
          if (selenium.isElementPresent("//div[4]/ul/li[2]/a/span[1]")) {
            break;
          }
        }
 catch (        Exception e) {
        }
        Thread.sleep(1000);
      }
    selenium.clickAt("//div[4]/ul/li[2]/a/span[1]",RuntimeVariables.replace(""));
  selenium.waitForPageToLoad("30000");
selenium.clickAt("link=Control Panel",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isElementPresent("link=Communities")) {
  break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("link=Communities",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isElementPresent("//strong/span")) {
break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("//strong/span",RuntimeVariables.replace(""));
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isElementPresent("link=Manage Pages")) {
break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("link=Manage Pages",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isVisible("//form/ul[1]/li[3]/a")) {
break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("//form/ul[1]/li[3]/a",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isVisible("link=Staging")) {
break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("link=Staging",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
for (int second=0; ; second++) {
if (second >= 60) {
fail("timeout");
}
try {
if (selenium.isVisible("_134_stagingEnabled")) {
break;
}
}
 catch (Exception e) {
}
Thread.sleep(1000);
}
selenium.clickAt("_134_stagingEnabled",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
assertTrue(selenium.getConfirmation().matches("^Are you sure you want to delete the staging public and private pages[\\s\\S]$"));
selenium.clickAt("link=Back to My Community",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("link=Guest",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("link=Blogs Staging Test Page",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
Thread.sleep(5000);
boolean BlogsPresent=selenium.isElementPresent("link=Delete");
if (!BlogsPresent) {
label=2;
continue;
}
selenium.clickAt("link=Delete",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
assertTrue(selenium.getConfirmation().matches("^Are you sure you want to delete this[\\s\\S]$"));
case 2:
selenium.clickAt("//img[@alt='Remove']",RuntimeVariables.replace(""));
assertTrue(selenium.getConfirmation().matches("^Are you sure you want to remove this component[\\s\\S]$"));
selenium.clickAt("link=Welcome",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("link=Manage Pages",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("//li[@id='_88_tabs3pageTabsId']/a",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
selenium.clickAt("//input[@value='Delete']",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
assertTrue(selenium.getConfirmation().matches("^Are you sure you want to delete the selected page[\\s\\S]$"));
selenium.clickAt("link=Return to Full Page",RuntimeVariables.replace(""));
selenium.waitForPageToLoad("30000");
case 100:
label=-1;
}
}
}

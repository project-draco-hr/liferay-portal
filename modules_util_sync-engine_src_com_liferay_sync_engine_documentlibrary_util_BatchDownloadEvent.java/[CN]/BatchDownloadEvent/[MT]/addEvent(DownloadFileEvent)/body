{
  if (!PropsValues.SYNC_BATCH_EVENTS_ENABLED) {
    return false;
  }
  Map<String,Object> parameters=downloadFileEvent.getParameters();
  SyncFile syncFile=(SyncFile)parameters.get("syncFile");
  long size=0;
  if ((boolean)parameters.get("patch")) {
    size=syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO);
  }
 else {
    size=syncFile.getSize();
  }
  if (size >= PropsValues.SYNC_BATCH_EVENTS_MAX_FILE_SIZE) {
    return false;
  }
  _totalFileSize+=size;
  _eventCount++;
  String zipFileId=syncFile.getSyncFileId() + "_" + System.currentTimeMillis();
  parameters.put("groupId",syncFile.getRepositoryId());
  parameters.put("uuid",syncFile.getTypeUuid());
  if ((boolean)parameters.get("patch")) {
    parameters.put("version",syncFile.getVersion());
  }
  parameters.put("zipFileId",zipFileId);
  parameters=new HashMap<String,Object>(parameters);
  parameters.remove("syncFile");
  _batchParameters.add(parameters);
  _handlers.put(zipFileId,(DownloadFileHandler)downloadFileEvent.getHandler());
  if ((_eventCount >= PropsValues.SYNC_BATCH_EVENTS_MAX_COUNT) || (_totalFileSize >= PropsValues.SYNC_BATCH_EVENTS_MAX_TOTAL_FILE_SIZE)) {
    fireBatchEvent();
  }
  return true;
}

{
  double discount=0.0;
  if ((coupon == null) || !coupon.isActive() || !coupon.hasValidDateRange()) {
    return discount;
  }
  String[] categoryNames=StringUtil.split(coupon.getLimitCategories());
  Set<Long> categoryIds=new HashSet<Long>();
  for (  String categoryName : categoryNames) {
    ShoppingCategory category=ShoppingCategoryLocalServiceUtil.getCategory(coupon.getGroupId(),categoryName);
    List<Long> subcategoryIds=new ArrayList<Long>();
    ShoppingCategoryLocalServiceUtil.getSubcategoryIds(subcategoryIds,category.getGroupId(),category.getCategoryId());
    categoryIds.add(category.getCategoryId());
    categoryIds.addAll(subcategoryIds);
  }
  String[] skus=StringUtil.split(coupon.getLimitSkus());
  if ((categoryIds.size() > 0) || (skus.length > 0)) {
    Set<String> skusSet=new HashSet<String>();
    for (    String sku : skus) {
      skusSet.add(sku);
    }
    Map<ShoppingCartItem,Integer> newItems=new HashMap<ShoppingCartItem,Integer>();
    for (    Map.Entry<ShoppingCartItem,Integer> entry : items.entrySet()) {
      ShoppingCartItem cartItem=entry.getKey();
      Integer count=entry.getValue();
      ShoppingItem item=cartItem.getItem();
      if ((!categoryIds.isEmpty() && categoryIds.contains(item.getCategoryId())) || (!skusSet.isEmpty() && skusSet.contains(item.getSku()))) {
        newItems.put(cartItem,count);
      }
    }
    items=newItems;
  }
  double actualSubtotal=calculateActualSubtotal(items);
  if ((coupon.getMinOrder() > 0) && (coupon.getMinOrder() > actualSubtotal)) {
    return discount;
  }
  String type=coupon.getDiscountType();
  if (type.equals(ShoppingCouponConstants.DISCOUNT_TYPE_PERCENTAGE)) {
    discount=actualSubtotal * coupon.getDiscount();
  }
 else   if (type.equals(ShoppingCouponConstants.DISCOUNT_TYPE_ACTUAL)) {
    discount=coupon.getDiscount();
  }
 else   if (type.equals(ShoppingCouponConstants.DISCOUNT_TYPE_FREE_SHIPPING)) {
    discount=calculateShipping(items);
  }
 else   if (type.equals(ShoppingCouponConstants.DISCOUNT_TYPE_TAX_FREE)) {
    if (stateId != null) {
      discount=calculateTax(items,stateId);
    }
  }
  return discount;
}

{
  double tax=0.0;
  ShoppingPreferences prefs=null;
  Iterator<Map.Entry<ShoppingCartItem,Integer>> itr=items.entrySet().iterator();
  while (itr.hasNext()) {
    Map.Entry<ShoppingCartItem,Integer> entry=itr.next();
    ShoppingCartItem cartItem=entry.getKey();
    ShoppingItem item=cartItem.getItem();
    if (prefs == null) {
      ShoppingCategory category=item.getCategory();
      prefs=ShoppingPreferences.getInstance(category.getCompanyId(),category.getGroupId());
      break;
    }
  }
  if ((prefs != null) && (prefs.getTaxState().equals(stateId))) {
    double subtotal=0.0;
    itr=items.entrySet().iterator();
    while (itr.hasNext()) {
      Map.Entry<ShoppingCartItem,Integer> entry=itr.next();
      ShoppingCartItem cartItem=entry.getKey();
      Integer count=entry.getValue();
      ShoppingItem item=cartItem.getItem();
      if (item.isTaxable()) {
        subtotal+=calculatePrice(item,count.intValue());
      }
    }
    tax=prefs.getTaxRate() * subtotal;
  }
  return tax;
}

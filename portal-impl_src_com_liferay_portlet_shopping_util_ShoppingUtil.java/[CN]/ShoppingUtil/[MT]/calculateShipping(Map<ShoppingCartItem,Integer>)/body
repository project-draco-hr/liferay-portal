{
  double shipping=0.0;
  double subtotal=0.0;
  ShoppingSettings shoppingSettings=null;
  for (  Map.Entry<ShoppingCartItem,Integer> entry : items.entrySet()) {
    ShoppingCartItem cartItem=entry.getKey();
    Integer count=entry.getValue();
    ShoppingItem item=cartItem.getItem();
    if (shoppingSettings == null) {
      ShoppingCategory category=item.getCategory();
      shoppingSettings=ShoppingSettings.getShoppingSettings(category.getGroupId());
    }
    if (item.isRequiresShipping()) {
      ShoppingItemPrice itemPrice=_getItemPrice(item,count.intValue());
      if (itemPrice.isUseShippingFormula()) {
        subtotal+=calculateActualPrice(itemPrice) * count.intValue();
      }
 else {
        shipping+=itemPrice.getShipping() * count.intValue();
      }
    }
  }
  if ((shoppingSettings == null) || (subtotal == 0)) {
    return shipping;
  }
  double shippingRate=0.0;
  double[] range=ShoppingSettings.SHIPPING_RANGE;
  for (int i=0; i < range.length - 1; i++) {
    if ((subtotal > range[i]) && (subtotal <= range[i + 1])) {
      int rangeId=i / 2;
      if (MathUtil.isOdd(i)) {
        rangeId=(i + 1) / 2;
      }
      shippingRate=GetterUtil.getDouble(shoppingSettings.getShipping()[rangeId]);
    }
  }
  String formula=shoppingSettings.getShippingFormula();
  if (formula.equals("flat")) {
    shipping+=shippingRate;
  }
 else   if (formula.equals("percentage")) {
    shipping+=subtotal * shippingRate;
  }
  return shipping;
}

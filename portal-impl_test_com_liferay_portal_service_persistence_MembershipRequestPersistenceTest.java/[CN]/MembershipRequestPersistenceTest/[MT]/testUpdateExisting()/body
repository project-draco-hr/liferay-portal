{
  long pk=nextLong();
  MembershipRequest newMembershipRequest=_persistence.create(pk);
  newMembershipRequest.setCompanyId(nextLong());
  newMembershipRequest.setUserId(nextLong());
  newMembershipRequest.setCreateDate(nextDate());
  newMembershipRequest.setGroupId(nextLong());
  newMembershipRequest.setComments(randomString());
  newMembershipRequest.setReplyComments(randomString());
  newMembershipRequest.setReplyDate(nextDate());
  newMembershipRequest.setReplierUserId(nextLong());
  newMembershipRequest.setStatusId(nextInt());
  _persistence.update(newMembershipRequest,false);
  MembershipRequest existingMembershipRequest=_persistence.findByPrimaryKey(newMembershipRequest.getPrimaryKey());
  assertEquals(existingMembershipRequest.getMembershipRequestId(),newMembershipRequest.getMembershipRequestId());
  assertEquals(existingMembershipRequest.getCompanyId(),newMembershipRequest.getCompanyId());
  assertEquals(existingMembershipRequest.getUserId(),newMembershipRequest.getUserId());
  assertEquals(Time.getShortTimestamp(existingMembershipRequest.getCreateDate()),Time.getShortTimestamp(newMembershipRequest.getCreateDate()));
  assertEquals(existingMembershipRequest.getGroupId(),newMembershipRequest.getGroupId());
  assertEquals(existingMembershipRequest.getComments(),newMembershipRequest.getComments());
  assertEquals(existingMembershipRequest.getReplyComments(),newMembershipRequest.getReplyComments());
  assertEquals(Time.getShortTimestamp(existingMembershipRequest.getReplyDate()),Time.getShortTimestamp(newMembershipRequest.getReplyDate()));
  assertEquals(existingMembershipRequest.getReplierUserId(),newMembershipRequest.getReplierUserId());
  assertEquals(existingMembershipRequest.getStatusId(),newMembershipRequest.getStatusId());
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String token=ParamUtil.getString(actionRequest,"token");
  long remoteAppId=ParamUtil.getLong(actionRequest,"appId");
  String version=ParamUtil.getString(actionRequest,"version");
  String url=ParamUtil.getString(actionRequest,"url");
  String orderUuid=ParamUtil.getString(actionRequest,"orderUuid");
  String productEntryName=ParamUtil.getString(actionRequest,"productEntryName");
  if (!url.startsWith(PortletPropsValues.MARKETPLACE_URL)) {
    JSONObject jsonObject=getAppJSONObject(remoteAppId);
    jsonObject.put("cmd","downloadApp");
    jsonObject.put("message","fail");
    writeJSON(actionRequest,actionResponse,jsonObject);
    return;
  }
  url=getRemoteAppPackageURL(themeDisplay.getCompanyId(),themeDisplay.getUserId(),token,url);
  URL urlObj=new URL(url);
  File tempFile=null;
  try {
    InputStream inputStream=urlObj.openStream();
    tempFile=FileUtil.createTempFile();
    FileUtil.write(tempFile,inputStream);
    AppServiceUtil.updateApp(remoteAppId,version,tempFile);
    if (Validator.isNull(orderUuid) && Validator.isNotNull(productEntryName)) {
      orderUuid=MarketplaceLicenseUtil.getOrder(productEntryName);
    }
    if (Validator.isNotNull(orderUuid)) {
      MarketplaceLicenseUtil.registerOrder(orderUuid,productEntryName);
    }
    AppServiceUtil.installApp(remoteAppId);
    JSONObject jsonObject=getAppJSONObject(remoteAppId);
    jsonObject.put("cmd","updateApp");
    jsonObject.put("message","success");
    writeJSON(actionRequest,actionResponse,jsonObject);
  }
  finally {
    if (tempFile != null) {
      tempFile.delete();
    }
  }
}

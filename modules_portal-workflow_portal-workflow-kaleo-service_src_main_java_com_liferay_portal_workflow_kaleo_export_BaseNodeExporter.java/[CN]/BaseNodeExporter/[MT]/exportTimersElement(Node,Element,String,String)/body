{
  Set<Timer> timers=node.getTimers();
  if (timers.isEmpty()) {
    return;
  }
  Element timersElement=nodeElement.addElement(timersElementName);
  for (  Timer timer : timers) {
    Element timerElement=timersElement.addElement(timerElementName);
    addTextElement(timerElement,"name",timer.getName());
    if (Validator.isNotNull(timer.getDescription())) {
      addTextElement(timerElement,"description",timer.getDescription());
    }
    DelayDuration delayDuration=timer.getDelayDuration();
    addDelayDuration(timerElement,"delay",delayDuration);
    DelayDuration recurrenceDelayDuration=timer.getRecurrence();
    if (recurrenceDelayDuration != null) {
      addDelayDuration(timerElement,"recurrence",recurrenceDelayDuration);
    }
    if (timer.isBlocking()) {
      addTextElement(timerElement,"blocking",String.valueOf(timer.isBlocking()));
    }
    Set<Action> actions=timer.getActions();
    Set<Notification> notifications=timer.getNotifications();
    Set<Assignment> assignments=timer.getReassignments();
    if (!actions.isEmpty() || !notifications.isEmpty() || !assignments.isEmpty()) {
      Element timerActionsElement=timerElement.addElement("timer-actions");
      exportActionsElement(actions,notifications,timerActionsElement,"timer-action","timer-notification");
      exportAssignmentsElement(assignments,timerActionsElement,"reassignments");
    }
  }
}

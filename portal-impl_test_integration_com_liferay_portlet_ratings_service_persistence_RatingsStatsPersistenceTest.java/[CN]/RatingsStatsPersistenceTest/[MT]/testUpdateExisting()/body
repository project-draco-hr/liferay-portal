{
  long pk=ServiceTestUtil.nextLong();
  RatingsStats newRatingsStats=_persistence.create(pk);
  newRatingsStats.setClassNameId(ServiceTestUtil.nextLong());
  newRatingsStats.setClassPK(ServiceTestUtil.nextLong());
  newRatingsStats.setTotalEntries(ServiceTestUtil.nextInt());
  newRatingsStats.setTotalScore(ServiceTestUtil.nextDouble());
  newRatingsStats.setAverageScore(ServiceTestUtil.nextDouble());
  _persistence.update(newRatingsStats);
  RatingsStats existingRatingsStats=_persistence.findByPrimaryKey(newRatingsStats.getPrimaryKey());
  Assert.assertEquals(existingRatingsStats.getStatsId(),newRatingsStats.getStatsId());
  Assert.assertEquals(existingRatingsStats.getClassNameId(),newRatingsStats.getClassNameId());
  Assert.assertEquals(existingRatingsStats.getClassPK(),newRatingsStats.getClassPK());
  Assert.assertEquals(existingRatingsStats.getTotalEntries(),newRatingsStats.getTotalEntries());
  AssertUtils.assertEquals(existingRatingsStats.getTotalScore(),newRatingsStats.getTotalScore());
  AssertUtils.assertEquals(existingRatingsStats.getAverageScore(),newRatingsStats.getAverageScore());
}

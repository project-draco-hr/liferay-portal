{
  Set<Long> userIds=new LinkedHashSet<>();
  Group group=groupLocalService.getGroup(groupId);
  String modelResource=Group.class.getName();
  List<Role> roles=ListUtil.copy(ResourceActionsUtil.getRoles(group.getCompanyId(),group,modelResource,null));
  List<Role> teamRoles=roleLocalService.getTeamRoles(groupId);
  roles.addAll(teamRoles);
  Resource resource=resourceLocalService.getResource(group.getCompanyId(),modelResource,ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(groupId));
  List<String> actions=ResourceActionsUtil.getResourceActions(Group.class.getName());
  for (  Role role : roles) {
    String roleName=role.getName();
    if (roleName.equals(RoleConstants.OWNER)) {
      continue;
    }
    if ((roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER)) && !group.isOrganization()) {
      continue;
    }
    if (roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR)|| roleName.equals(RoleConstants.ORGANIZATION_OWNER)) {
      Role curRole=roleLocalService.getRole(group.getCompanyId(),roleName);
      List<UserGroupRole> userGroupRoles=userGroupRoleLocalService.getUserGroupRolesByGroupAndRole(groupId,curRole.getRoleId());
      for (      UserGroupRole userGroupRole : userGroupRoles) {
        userIds.add(userGroupRole.getUserId());
      }
    }
    List<String> currentIndividualActions=new ArrayList<>();
    List<String> currentGroupActions=new ArrayList<>();
    List<String> currentGroupTemplateActions=new ArrayList<>();
    List<String> currentCompanyActions=new ArrayList<>();
    ResourcePermissionUtil.populateResourcePermissionActionIds(groupId,role,resource,actions,currentIndividualActions,currentGroupActions,currentGroupTemplateActions,currentCompanyActions);
    if (currentIndividualActions.contains(ActionKeys.ASSIGN_MEMBERS) || currentGroupActions.contains(ActionKeys.ASSIGN_MEMBERS) || currentGroupTemplateActions.contains(ActionKeys.ASSIGN_MEMBERS)|| currentCompanyActions.contains(ActionKeys.ASSIGN_MEMBERS)) {
      List<UserGroupRole> currentUserGroupRoles=userGroupRoleLocalService.getUserGroupRolesByGroupAndRole(groupId,role.getRoleId());
      for (      UserGroupRole userGroupRole : currentUserGroupRoles) {
        userIds.add(userGroupRole.getUserId());
      }
    }
  }
  return new ArrayList<>(userIds);
}

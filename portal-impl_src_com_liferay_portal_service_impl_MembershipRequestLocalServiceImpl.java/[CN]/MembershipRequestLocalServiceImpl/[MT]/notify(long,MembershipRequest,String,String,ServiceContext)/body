{
  User user=userPersistence.findByPrimaryKey(userId);
  User requestUser=userPersistence.findByPrimaryKey(membershipRequest.getUserId());
  String fromName=PrefsPropsUtil.getStringFromNames(membershipRequest.getCompanyId(),PropsKeys.SITES_EMAIL_FROM_NAME,PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getStringFromNames(membershipRequest.getCompanyId(),PropsKeys.SITES_EMAIL_FROM_ADDRESS,PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String toName=user.getFullName();
  String toAddress=user.getEmailAddress();
  String subject=PrefsPropsUtil.getContent(membershipRequest.getCompanyId(),subjectProperty);
  String body=PrefsPropsUtil.getContent(membershipRequest.getCompanyId(),bodyProperty);
  String statusKey=null;
  if (membershipRequest.getStatusId() == MembershipRequestConstants.STATUS_APPROVED) {
    statusKey="approved";
  }
 else   if (membershipRequest.getStatusId() == MembershipRequestConstants.STATUS_DENIED) {
    statusKey="denied";
  }
 else {
    statusKey="pending";
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(membershipRequest.getCompanyId());
  subscriptionSender.setContextAttributes("[$COMMENTS$]",membershipRequest.getComments(),"[$REPLY_COMMENTS$]",membershipRequest.getReplyComments(),"[$REQUEST_USER_ADDRESS$]",requestUser.getEmailAddress(),"[$REQUEST_USER_NAME$]",requestUser.getFullName(),"[$STATUS$]",LanguageUtil.get(user.getLocale(),statusKey),"[$USER_ADDRESS$]",user.getEmailAddress(),"[$USER_NAME$]",user.getFullName());
  subscriptionSender.setCreatorUserId(userId);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("membership_request",membershipRequest.getMembershipRequestId());
  subscriptionSender.setScopeGroupId(membershipRequest.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setSubject(subject);
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

{
  Map<String,Serializable> settingsMap=configuration.getSettingsMap();
  Date endDate=(Date)settingsMap.get("endDate");
  Date startDate=(Date)settingsMap.get("startDate");
  if ((endDate != null) && (startDate != null)) {
    return new DateRange(startDate,endDate);
  }
  Map<String,String[]> parameterMap=(Map<String,String[]>)settingsMap.get("parameterMap");
  String range=MapUtil.getString(parameterMap,"range");
  int rangeLast=MapUtil.getInteger(parameterMap,"last");
  int startDateAmPm=MapUtil.getInteger(parameterMap,"startDateAmPm");
  int startDateYear=MapUtil.getInteger(parameterMap,"startDateYear");
  int startDateMonth=MapUtil.getInteger(parameterMap,"startDateMonth");
  int startDateDay=MapUtil.getInteger(parameterMap,"startDateDay");
  int startDateHour=MapUtil.getInteger(parameterMap,"startDateHour");
  int startDateMinute=MapUtil.getInteger(parameterMap,"startDateMinute");
  int endDateAmPm=MapUtil.getInteger(parameterMap,"endDateAmPm");
  int endDateYear=MapUtil.getInteger(parameterMap,"endDateYear");
  int endDateMonth=MapUtil.getInteger(parameterMap,"endDateMonth");
  int endDateDay=MapUtil.getInteger(parameterMap,"endDateDay");
  int endDateHour=MapUtil.getInteger(parameterMap,"endDateHour");
  int endDateMinute=MapUtil.getInteger(parameterMap,"endDateMinute");
  long groupId=MapUtil.getLong(settingsMap,"sourceGroupId");
  boolean privateLayout=MapUtil.getBoolean(settingsMap,"privateLayout");
  Locale locale=(Locale)settingsMap.get("locale");
  TimeZone timeZone=(TimeZone)settingsMap.get("timezone");
  return getDateRange(range,rangeLast,startDateAmPm,startDateYear,startDateMonth,startDateDay,startDateHour,startDateMinute,endDateAmPm,endDateYear,endDateMonth,endDateDay,endDateHour,endDateMinute,null,groupId,0,privateLayout,locale,timeZone);
}

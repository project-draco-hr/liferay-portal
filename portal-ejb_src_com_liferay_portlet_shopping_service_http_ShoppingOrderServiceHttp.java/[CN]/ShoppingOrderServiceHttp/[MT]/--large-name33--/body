{
  try {
    Object paramObj0=billingFirstName;
    if (billingFirstName == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=billingLastName;
    if (billingLastName == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=billingEmailAddress;
    if (billingEmailAddress == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=billingCompany;
    if (billingCompany == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=billingStreet;
    if (billingStreet == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=billingCity;
    if (billingCity == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=billingState;
    if (billingState == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=billingZip;
    if (billingZip == null) {
      paramObj7=new NullWrapper("java.lang.String");
    }
    Object paramObj8=billingCountry;
    if (billingCountry == null) {
      paramObj8=new NullWrapper("java.lang.String");
    }
    Object paramObj9=billingPhone;
    if (billingPhone == null) {
      paramObj9=new NullWrapper("java.lang.String");
    }
    Object paramObj10=new BooleanWrapper(shipToBilling);
    Object paramObj11=shippingFirstName;
    if (shippingFirstName == null) {
      paramObj11=new NullWrapper("java.lang.String");
    }
    Object paramObj12=shippingLastName;
    if (shippingLastName == null) {
      paramObj12=new NullWrapper("java.lang.String");
    }
    Object paramObj13=shippingEmailAddress;
    if (shippingEmailAddress == null) {
      paramObj13=new NullWrapper("java.lang.String");
    }
    Object paramObj14=shippingCompany;
    if (shippingCompany == null) {
      paramObj14=new NullWrapper("java.lang.String");
    }
    Object paramObj15=shippingStreet;
    if (shippingStreet == null) {
      paramObj15=new NullWrapper("java.lang.String");
    }
    Object paramObj16=shippingCity;
    if (shippingCity == null) {
      paramObj16=new NullWrapper("java.lang.String");
    }
    Object paramObj17=shippingState;
    if (shippingState == null) {
      paramObj17=new NullWrapper("java.lang.String");
    }
    Object paramObj18=shippingZip;
    if (shippingZip == null) {
      paramObj18=new NullWrapper("java.lang.String");
    }
    Object paramObj19=shippingCountry;
    if (shippingCountry == null) {
      paramObj19=new NullWrapper("java.lang.String");
    }
    Object paramObj20=shippingPhone;
    if (shippingPhone == null) {
      paramObj20=new NullWrapper("java.lang.String");
    }
    Object paramObj21=ccName;
    if (ccName == null) {
      paramObj21=new NullWrapper("java.lang.String");
    }
    Object paramObj22=ccType;
    if (ccType == null) {
      paramObj22=new NullWrapper("java.lang.String");
    }
    Object paramObj23=ccNumber;
    if (ccNumber == null) {
      paramObj23=new NullWrapper("java.lang.String");
    }
    Object paramObj24=new IntegerWrapper(ccExpMonth);
    Object paramObj25=new IntegerWrapper(ccExpYear);
    Object paramObj26=ccVerNumber;
    if (ccVerNumber == null) {
      paramObj26=new NullWrapper("java.lang.String");
    }
    Object paramObj27=comments;
    if (comments == null) {
      paramObj27=new NullWrapper("java.lang.String");
    }
    MethodWrapper methodWrapper=new MethodWrapper(ShoppingOrderServiceUtil.class.getName(),"updateLatestOrder",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20,paramObj21,paramObj22,paramObj23,paramObj24,paramObj25,paramObj26,paramObj27});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      throw e;
    }
    return (com.liferay.portlet.shopping.model.ShoppingOrder)returnObj;
  }
 catch (  com.liferay.portal.PortalException pe) {
    _log.error(StackTraceUtil.getStackTrace(pe));
    throw pe;
  }
catch (  com.liferay.portal.SystemException se) {
    _log.error(StackTraceUtil.getStackTrace(se));
    throw se;
  }
catch (  Exception e) {
    String stackTrace=StackTraceUtil.getStackTrace(e);
    _log.error(stackTrace);
    throw new com.liferay.portal.SystemException(stackTrace);
  }
}

{
  try {
    Object paramObj0=orderId;
    if (orderId == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=ppTxnId;
    if (ppTxnId == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=ppPaymentStatus;
    if (ppPaymentStatus == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=new DoubleWrapper(ppPaymentGross);
    Object paramObj4=ppReceiverEmail;
    if (ppReceiverEmail == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=ppPayerEmail;
    if (ppPayerEmail == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    MethodWrapper methodWrapper=new MethodWrapper(ShoppingOrderServiceUtil.class.getName(),"updateOrder",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      throw e;
    }
    return (com.liferay.portlet.shopping.model.ShoppingOrder)returnObj;
  }
 catch (  com.liferay.portal.PortalException pe) {
    _log.error(StackTraceUtil.getStackTrace(pe));
    throw pe;
  }
catch (  com.liferay.portal.SystemException se) {
    _log.error(StackTraceUtil.getStackTrace(se));
    throw se;
  }
catch (  Exception e) {
    String stackTrace=StackTraceUtil.getStackTrace(e);
    _log.error(stackTrace);
    throw new com.liferay.portal.SystemException(stackTrace);
  }
}

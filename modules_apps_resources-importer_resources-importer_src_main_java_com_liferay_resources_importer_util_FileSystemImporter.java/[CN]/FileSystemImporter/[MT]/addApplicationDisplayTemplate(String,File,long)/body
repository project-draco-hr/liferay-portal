{
  String fileName=FileUtil.stripExtension(file.getName());
  String name=getName(fileName);
  DDMTemplate ddmTemplate=DDMTemplateLocalServiceUtil.fetchTemplate(groupId,classNameId,getKey(fileName));
  if (ddmTemplate != null) {
    if (!developerModeEnabled) {
      if (_log.isInfoEnabled()) {
        _log.info("DDM template with name " + name + " and version "+ version+ " already exists");
      }
      return;
    }
    if (!updateModeEnabled) {
      DDMTemplateLocalServiceUtil.deleteTemplate(ddmTemplate);
    }
  }
  try {
    if (!updateModeEnabled || (ddmTemplate == null)) {
      DDMTemplateLocalServiceUtil.addTemplate(userId,groupId,classNameId,0,PortalUtil.getClassNameId(JournalArticle.class),getKey(fileName),getMap(name),null,DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY,StringPool.BLANK,getDDMTemplateLanguage(file.getName()),script,false,false,StringPool.BLANK,null,serviceContext);
    }
 else {
      DDMTemplateLocalServiceUtil.updateTemplate(userId,ddmTemplate.getTemplateId(),ddmTemplate.getClassPK(),getMap(name),null,DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY,StringPool.BLANK,getDDMTemplateLanguage(file.getName()),script,false,serviceContext);
    }
  }
 catch (  PortalException pe) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to import application display template " + file.getName(),pe);
    }
    throw pe;
  }
}

{
  if (mOut == null) {
    return;
  }
  if (mTextWriter != null) {
    mTextWriter.write(cbuf,offset,len);
  }
 else {
    len+=offset;
    do {
      int c=0;
      int highChar=mEncHighChar;
      int start=offset;
      String ent=null;
      for (; offset < len; ++offset) {
        c=cbuf[offset];
        if (c <= HIGHEST_ENCODABLE_TEXT_CHAR) {
          if (c == '<') {
            ent="&lt;";
            break;
          }
 else           if (c == '&') {
            ent="&amp;";
            break;
          }
 else           if (c == '>') {
            ent="&gt;";
            break;
          }
 else           if (c < 0x0020) {
            if (c == '\n' || c == '\t') {
              ;
            }
 else             if (c == '\r') {
              if (mEscapeCR) {
                break;
              }
            }
 else {
              if (!mXml11 || c == 0) {
                throwInvalidChar(c);
              }
              break;
            }
          }
        }
 else         if (c >= highChar) {
          break;
        }
      }
      int outLen=offset - start;
      if (outLen > 0) {
        writeRaw(cbuf,start,outLen);
      }
      if (ent != null) {
        writeRaw(ent);
        ent=null;
      }
 else       if (offset < len) {
        writeAsEntity(c);
      }
    }
 while (++offset < len);
  }
}

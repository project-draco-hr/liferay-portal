{
  List<Role> roles=layoutCache.getGroupRoles_5(groupId,resourceName);
  List<String> actionIds=null;
  if (portletActions) {
    actionIds=ResourceActionsUtil.getPortletResourceActions(resourceName);
  }
 else {
    actionIds=ResourceActionsUtil.getModelResourceActions(resourceName);
  }
  if (actionIds.isEmpty()) {
    return;
  }
  PrimitiveLongList roleIds=new PrimitiveLongList(roles.size());
  Map<Long,Role> roleIdsToRoles=new HashMap<Long,Role>();
  for (  Role role : roles) {
    String name=role.getName();
    if (name.equals(RoleConstants.ADMINISTRATOR)) {
      continue;
    }
    roleIds.add(role.getRoleId());
    roleIdsToRoles.put(role.getRoleId(),role);
  }
  Map<Long,Set<String>> roleIdsToActionIds=ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(companyId,resourceName,ResourceConstants.SCOPE_INDIVIDUAL,resourcePrimKey,roleIds.getArray(),actionIds);
  for (  Role role : roleIdsToRoles.values()) {
    Set<String> availableActionIds=roleIdsToActionIds.get(role.getRoleId());
    Element roleElement=permissionsElement.addElement("role");
    roleElement.addAttribute("name",role.getName());
    roleElement.addAttribute("title",role.getTitle());
    roleElement.addAttribute("description",role.getDescription());
    roleElement.addAttribute("type",String.valueOf(role.getType()));
    if ((availableActionIds == null) || availableActionIds.isEmpty()) {
      continue;
    }
    for (    String action : availableActionIds) {
      Element actionKeyElement=roleElement.addElement("action-key");
      actionKeyElement.addText(action);
    }
  }
}

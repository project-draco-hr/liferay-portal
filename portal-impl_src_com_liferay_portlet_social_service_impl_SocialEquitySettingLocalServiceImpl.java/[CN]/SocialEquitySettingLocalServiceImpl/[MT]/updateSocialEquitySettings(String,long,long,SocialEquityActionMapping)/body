{
  SocialEquityActionMapping defaultMapping=PortalUtil.getSocialEquityActionMapping(model,mapping.getActionKey());
  if (mapping.getInformationValue() > 0 && !mapping.equals(defaultMapping,SocialEquitySettingConstants.TYPE_INFORMATION)) {
    SocialEquitySetting setting=findOrCreateSocialEquitySetting(groupId,classNameId,mapping.getActionKey(),SocialEquitySettingConstants.TYPE_INFORMATION);
    if (mapping.getInformationValue() != setting.getValue() || mapping.getInformationLifespan() != setting.getValidity()) {
      setting.setValue(mapping.getInformationValue());
      setting.setValidity(mapping.getInformationLifespan());
      socialEquitySettingPersistence.update(setting,false);
    }
  }
  if (mapping.getParticipationValue() > 0 && !mapping.equals(defaultMapping,SocialEquitySettingConstants.TYPE_PARTICIPATION)) {
    SocialEquitySetting setting=findOrCreateSocialEquitySetting(groupId,classNameId,mapping.getActionKey(),SocialEquitySettingConstants.TYPE_PARTICIPATION);
    if (mapping.getParticipationValue() != setting.getValue() || mapping.getParticipationLifespan() != setting.getValidity()) {
      setting.setValue(mapping.getParticipationValue());
      setting.setValidity(mapping.getParticipationLifespan());
      socialEquitySettingPersistence.update(setting,false);
    }
  }
  _portalCache.remove(encodeKey(classNameId,mapping.getActionKey()));
}

{
  PoshiRunnerStackTraceUtil.setCurrentElement(executeElement);
  XMLLoggerHandler.updateStatus(executeElement,"pending");
  List<String> arguments=new ArrayList<>();
  List<Element> executeArgElements=executeElement.elements("arg");
  Binding binding=new Binding();
  if (!executeArgElements.isEmpty()) {
    for (    Element executeArgElement : executeArgElements) {
      arguments.add(executeArgElement.attributeValue("value"));
    }
    binding.setVariable("args",arguments.toArray(new String[arguments.size()]));
  }
  try {
    String fileName=PoshiRunnerVariablesUtil.replaceCommandVars(executeElement.attributeValue("groovy-script"));
    String fileSeparator=FileUtil.getSeparator();
    GroovyScriptEngine gse=new GroovyScriptEngine(LiferaySeleniumHelper.getSourceDirFilePath(fileSeparator + PropsValues.TEST_DEPENDENCIES_DIR_NAME + fileSeparator+ fileName));
    Object result=gse.run(fileName,binding);
    String returnVariable=executeElement.attributeValue("return");
    if (returnVariable != null) {
      PoshiRunnerVariablesUtil.putIntoCommandMap(returnVariable,result.toString());
    }
  }
 catch (  Exception e) {
    XMLLoggerHandler.updateStatus(executeElement,"fail");
    throw e;
  }
  XMLLoggerHandler.updateStatus(executeElement,"pass");
}

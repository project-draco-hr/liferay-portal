{
  PoshiRunnerStackTraceUtil.setCurrentElement(executeElement);
  XMLLoggerHandler.updateStatus(executeElement,"pending");
  String classCommandName=executeElement.attributeValue(macroType);
  String className=PoshiRunnerGetterUtil.getClassNameFromClassCommandName(classCommandName);
  PoshiRunnerStackTraceUtil.pushStackTrace(executeElement);
  Element rootElement=PoshiRunnerContext.getMacroRootElement(className);
  List<Element> rootVarElements=rootElement.elements("var");
  for (  Element rootVarElement : rootVarElements) {
    runVarElement(rootVarElement,false,true);
  }
  PoshiRunnerStackTraceUtil.popStackTrace();
  List<Element> executeVarElements=executeElement.elements("var");
  for (  Element executeVarElement : executeVarElements) {
    runVarElement(executeVarElement,false,false);
  }
  PoshiRunnerStackTraceUtil.pushStackTrace(executeElement);
  SummaryLoggerHandler.startSummary(executeElement);
  Element commandElement=PoshiRunnerContext.getMacroCommandElement(classCommandName);
  try {
    Map<String,String> returnValues=runMacroCommandElement(classCommandName,commandElement);
    List<Element> returnElements=executeElement.elements("return");
    for (    Element returnElement : returnElements) {
      String returnVariable=returnElement.attributeValue("from");
      String returnValue=returnValues.get(returnVariable);
      if (returnValue != null) {
        String returnVariableCommandName=returnElement.attributeValue("name");
        PoshiRunnerVariablesUtil.putIntoCommandMap(returnVariableCommandName,returnValue);
      }
    }
  }
 catch (  Exception e) {
    SummaryLoggerHandler.failSummary(executeElement,e.getMessage());
    throw e;
  }
  SummaryLoggerHandler.passSummary(executeElement);
  PoshiRunnerStackTraceUtil.popStackTrace();
  XMLLoggerHandler.updateStatus(executeElement,"pass");
}

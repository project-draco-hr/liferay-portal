{
  List<ItemSelectorReturnType> blogsContentEditorDesiredItemSelectorReturnTypes=new ArrayList<>();
  blogsContentEditorDesiredItemSelectorReturnTypes.add(new UploadableFileReturnType());
  blogsContentEditorDesiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  ItemSelectorCriterion blogsItemSelectorCriterion=new BlogsItemSelectorCriterion();
  blogsItemSelectorCriterion.setDesiredItemSelectorReturnTypes(blogsContentEditorDesiredItemSelectorReturnTypes);
  ItemSelectorCriterion imageItemSelectorCriterion=new ImageItemSelectorCriterion();
  imageItemSelectorCriterion.setDesiredItemSelectorReturnTypes(blogsContentEditorDesiredItemSelectorReturnTypes);
  PortletURL uploadURL=requestBackedPortletURLFactory.createActionURL(PortletKeys.BLOGS);
  uploadURL.setParameter(ActionRequest.ACTION_NAME,"/blogs/upload_image");
  ItemSelectorCriterion urlItemSelectorCriterion=new URLItemSelectorCriterion();
  List<ItemSelectorReturnType> urlDesiredItemSelectorReturnTypes=new ArrayList<>();
  urlDesiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  urlItemSelectorCriterion.setDesiredItemSelectorReturnTypes(urlDesiredItemSelectorReturnTypes);
  ItemSelectorCriterion uploadItemSelectorCriterion=new UploadItemSelectorCriterion(uploadURL.toString(),LanguageUtil.get(themeDisplay.getLocale(),"blogs"));
  List<ItemSelectorReturnType> uploadDesiredItemSelectorReturnTypes=new ArrayList<>();
  uploadDesiredItemSelectorReturnTypes.add(new UploadableFileReturnType());
  uploadItemSelectorCriterion.setDesiredItemSelectorReturnTypes(uploadDesiredItemSelectorReturnTypes);
  PortletURL itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,eventName,blogsItemSelectorCriterion,imageItemSelectorCriterion,urlItemSelectorCriterion,uploadItemSelectorCriterion);
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL.toString());
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL.toString());
}

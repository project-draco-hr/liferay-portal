{
synchronized (ClusterLinkBootstrapLoaderHelperUtil.class) {
    if (!_started) {
      List<String> portalCaches=_deferredPortalCaches.get(portalCacheManagerName);
      if (portalCaches == null) {
        portalCaches=new ArrayList<String>();
        _deferredPortalCaches.put(portalCacheManagerName,portalCaches);
      }
      portalCaches.addAll(Arrays.asList(portalCacheNames));
      return;
    }
  }
  List<Address> clusterNodeAddresses=ClusterExecutorUtil.getClusterNodeAddresses();
  if (_log.isInfoEnabled()) {
    _log.info("Cluster node addresses " + clusterNodeAddresses);
  }
  if (clusterNodeAddresses.size() <= 1) {
    if (_log.isDebugEnabled()) {
      _log.debug("Not loading cache from cluster because a cluster peer " + "was not found");
    }
    return;
  }
  PortalCacheManager<? extends Serializable,?> portalCacheManager=PortalCacheProvider.getPortalCacheManager(portalCacheManagerName);
  if (!portalCacheManager.isClusterAware()) {
    return;
  }
  ClusterRequest clusterRequest=ClusterRequest.createMulticastRequest(new MethodHandler(_createServerSocketFromClusterMethodKey,portalCacheManagerName,Arrays.asList(portalCacheNames)),true);
  FutureClusterResponses futureClusterResponses=ClusterExecutorUtil.execute(clusterRequest);
  BlockingQueue<ClusterNodeResponse> clusterNodeResponses=futureClusterResponses.getPartialResults();
  ClusterNodeResponse clusterNodeResponse=null;
  try {
    clusterNodeResponse=clusterNodeResponses.poll(PropsValues.CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT,TimeUnit.MILLISECONDS);
  }
 catch (  InterruptedException ie) {
    return;
  }
  if (clusterNodeResponse == null) {
    if (_log.isWarnEnabled()) {
      _log.warn("Unable to load cache from the cluster because there " + "was no peer response");
    }
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Load cache data from cluster node " + clusterNodeResponse.getClusterNode());
  }
  Socket socket=null;
  try {
    SocketAddress remoteSocketAddress=(SocketAddress)clusterNodeResponse.getResult();
    if (remoteSocketAddress == null) {
      _log.error("Cluster peer " + clusterNodeResponse.getClusterNode() + " responded with a null socket address");
      return;
    }
    socket=new Socket();
    socket.connect(remoteSocketAddress);
    socket.shutdownOutput();
    ObjectInputStream objectInputStream=new AnnotatedObjectInputStream(socket.getInputStream());
    PortalCache<Serializable,Serializable> portalCache=null;
    try {
      while (true) {
        Object object=objectInputStream.readObject();
        if (object instanceof CacheElement) {
          CacheElement cacheElement=(CacheElement)object;
          PortalCacheHelperUtil.putWithoutReplicator(portalCache,cacheElement.getKey(),cacheElement.getValue());
        }
 else         if (object instanceof String) {
          if (_COMMAND_SOCKET_CLOSE.equals(object)) {
            break;
          }
          _skipBootstrapLoaderThreadLocal.set(Boolean.TRUE);
          try {
            portalCache=(PortalCache<Serializable,Serializable>)portalCacheManager.getCache((String)object);
          }
  finally {
            _skipBootstrapLoaderThreadLocal.remove();
          }
        }
 else {
          throw new SystemException("Socket input stream returned invalid object " + object);
        }
      }
    }
  finally {
      if (objectInputStream != null) {
        objectInputStream.close();
      }
    }
  }
 catch (  Exception e) {
    throw new Exception("Unable to load cache data from cluster node " + clusterNodeResponse.getClusterNode(),e);
  }
 finally {
    if (socket != null) {
      socket.close();
    }
  }
}

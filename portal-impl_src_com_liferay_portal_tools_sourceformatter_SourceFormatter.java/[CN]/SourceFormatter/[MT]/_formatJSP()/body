{
  String basedir="./";
  String copyright=_getCopyright();
  String oldCopyright=_getOldCopyright();
  DirectoryScanner directoryScanner=new DirectoryScanner();
  directoryScanner.setBasedir(basedir);
  String[] excludes={"**\\portal\\aui\\**","**\\bin\\**","**\\null.jsp","**\\tmp\\**","**\\tools\\**"};
  excludes=ArrayUtil.append(excludes,_excludes);
  directoryScanner.setExcludes(excludes);
  directoryScanner.setIncludes(new String[]{"**\\*.jsp","**\\*.jspf","**\\*.vm"});
  List<String> fileNames=_sourceFormatterHelper.scanForFiles(directoryScanner);
  for (  String fileName : fileNames) {
    File file=new File(basedir + fileName);
    fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
    String content=_fileUtil.read(file);
    _jspContents.put(fileName,content);
  }
  boolean stripJSPImports=true;
  for (  String fileName : fileNames) {
    File file=new File(basedir + fileName);
    fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
    String content=_fileUtil.read(file);
    String oldContent=content;
    String newContent=StringPool.BLANK;
    for (; ; ) {
      newContent=_formatJSP(fileName,oldContent);
      if (oldContent.equals(newContent)) {
        break;
      }
      oldContent=newContent;
    }
    newContent=StringUtil.replace(newContent,new String[]{"<br/>","\"/>","\" >","@page import","\"%>",")%>","javascript: "},new String[]{"<br />","\" />","\">","@ page import","\" %>",") %>","javascript:"});
    if (stripJSPImports) {
      try {
        newContent=_stripJSPImports(fileName,newContent);
      }
 catch (      RuntimeException re) {
        stripJSPImports=false;
      }
    }
    newContent=_fixCopyright(newContent,copyright,oldCopyright,file,fileName);
    newContent=StringUtil.replace(newContent,new String[]{"alert('<%= LanguageUtil.","alert(\"<%= LanguageUtil.","confirm('<%= LanguageUtil.","confirm(\"<%= LanguageUtil."},new String[]{"alert('<%= UnicodeLanguageUtil.","alert(\"<%= UnicodeLanguageUtil.","confirm('<%= UnicodeLanguageUtil.","confirm(\"<%= UnicodeLanguageUtil."});
    if (newContent.contains("    ")) {
      if (!fileName.matches(".*template.*\\.vm$")) {
        _processErrorMessage(fileName,"tab: " + fileName);
      }
    }
    if (fileName.endsWith("init.jsp")) {
      int x=newContent.indexOf("<%@ page import=");
      int y=newContent.lastIndexOf("<%@ page import=");
      y=newContent.indexOf("%>",y);
      if ((x != -1) && (y != -1) && (y > x)) {
        boolean compressImports=true;
        if (compressImports) {
          String imports=newContent.substring(x,y);
          imports=StringUtil.replace(imports,new String[]{"%>\r\n<%@ ","%>\n<%@ "},new String[]{"%><%@\r\n","%><%@\n"});
          newContent=newContent.substring(0,x) + imports + newContent.substring(y);
        }
      }
    }
    newContent=_fixSessionKey(fileName,newContent,_sessionKeyPattern);
    newContent=_fixSessionKey(fileName,newContent,_taglibSessionKeyPattern);
    _checkLanguageKeys(fileName,newContent,_languageKeyPattern);
    _checkLanguageKeys(fileName,newContent,_taglibLanguageKeyPattern);
    _checkXSS(fileName,newContent);
    if ((newContent != null) && !content.equals(newContent)) {
      _fileUtil.write(file,newContent);
      _sourceFormatterHelper.printError(fileName,file);
    }
  }
}

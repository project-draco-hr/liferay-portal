{
  Session session=null;
  try {
    if (dlFileEntry.isNew() || dlFileEntry.isModified()) {
      session=openSession();
      if (dlFileEntry.isNew()) {
        DLFileEntryHBM dlFileEntryHBM=new DLFileEntryHBM();
        dlFileEntryHBM.setFolderId(dlFileEntry.getFolderId());
        dlFileEntryHBM.setName(dlFileEntry.getName());
        dlFileEntryHBM.setCompanyId(dlFileEntry.getCompanyId());
        dlFileEntryHBM.setUserId(dlFileEntry.getUserId());
        dlFileEntryHBM.setUserName(dlFileEntry.getUserName());
        dlFileEntryHBM.setVersionUserId(dlFileEntry.getVersionUserId());
        dlFileEntryHBM.setVersionUserName(dlFileEntry.getVersionUserName());
        dlFileEntryHBM.setCreateDate(dlFileEntry.getCreateDate());
        dlFileEntryHBM.setModifiedDate(dlFileEntry.getModifiedDate());
        dlFileEntryHBM.setTitle(dlFileEntry.getTitle());
        dlFileEntryHBM.setDescription(dlFileEntry.getDescription());
        dlFileEntryHBM.setVersion(dlFileEntry.getVersion());
        dlFileEntryHBM.setSize(dlFileEntry.getSize());
        dlFileEntryHBM.setReadCount(dlFileEntry.getReadCount());
        session.save(dlFileEntryHBM);
        session.flush();
      }
 else {
        DLFileEntryHBM dlFileEntryHBM=(DLFileEntryHBM)session.get(DLFileEntryHBM.class,dlFileEntry.getPrimaryKey());
        if (dlFileEntryHBM != null) {
          dlFileEntryHBM.setCompanyId(dlFileEntry.getCompanyId());
          dlFileEntryHBM.setUserId(dlFileEntry.getUserId());
          dlFileEntryHBM.setUserName(dlFileEntry.getUserName());
          dlFileEntryHBM.setVersionUserId(dlFileEntry.getVersionUserId());
          dlFileEntryHBM.setVersionUserName(dlFileEntry.getVersionUserName());
          dlFileEntryHBM.setCreateDate(dlFileEntry.getCreateDate());
          dlFileEntryHBM.setModifiedDate(dlFileEntry.getModifiedDate());
          dlFileEntryHBM.setTitle(dlFileEntry.getTitle());
          dlFileEntryHBM.setDescription(dlFileEntry.getDescription());
          dlFileEntryHBM.setVersion(dlFileEntry.getVersion());
          dlFileEntryHBM.setSize(dlFileEntry.getSize());
          dlFileEntryHBM.setReadCount(dlFileEntry.getReadCount());
          session.flush();
        }
 else {
          dlFileEntryHBM=new DLFileEntryHBM();
          dlFileEntryHBM.setFolderId(dlFileEntry.getFolderId());
          dlFileEntryHBM.setName(dlFileEntry.getName());
          dlFileEntryHBM.setCompanyId(dlFileEntry.getCompanyId());
          dlFileEntryHBM.setUserId(dlFileEntry.getUserId());
          dlFileEntryHBM.setUserName(dlFileEntry.getUserName());
          dlFileEntryHBM.setVersionUserId(dlFileEntry.getVersionUserId());
          dlFileEntryHBM.setVersionUserName(dlFileEntry.getVersionUserName());
          dlFileEntryHBM.setCreateDate(dlFileEntry.getCreateDate());
          dlFileEntryHBM.setModifiedDate(dlFileEntry.getModifiedDate());
          dlFileEntryHBM.setTitle(dlFileEntry.getTitle());
          dlFileEntryHBM.setDescription(dlFileEntry.getDescription());
          dlFileEntryHBM.setVersion(dlFileEntry.getVersion());
          dlFileEntryHBM.setSize(dlFileEntry.getSize());
          dlFileEntryHBM.setReadCount(dlFileEntry.getReadCount());
          session.save(dlFileEntryHBM);
          session.flush();
        }
      }
      dlFileEntry.setNew(false);
      dlFileEntry.setModified(false);
    }
    return dlFileEntry;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

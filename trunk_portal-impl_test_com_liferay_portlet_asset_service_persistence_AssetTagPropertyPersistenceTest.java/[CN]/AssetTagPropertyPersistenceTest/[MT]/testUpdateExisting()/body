{
  long pk=nextLong();
  AssetTagProperty newAssetTagProperty=_persistence.create(pk);
  newAssetTagProperty.setCompanyId(nextLong());
  newAssetTagProperty.setUserId(nextLong());
  newAssetTagProperty.setUserName(randomString());
  newAssetTagProperty.setCreateDate(nextDate());
  newAssetTagProperty.setModifiedDate(nextDate());
  newAssetTagProperty.setTagId(nextLong());
  newAssetTagProperty.setKey(randomString());
  newAssetTagProperty.setValue(randomString());
  _persistence.update(newAssetTagProperty,false);
  AssetTagProperty existingAssetTagProperty=_persistence.findByPrimaryKey(newAssetTagProperty.getPrimaryKey());
  assertEquals(existingAssetTagProperty.getTagPropertyId(),newAssetTagProperty.getTagPropertyId());
  assertEquals(existingAssetTagProperty.getCompanyId(),newAssetTagProperty.getCompanyId());
  assertEquals(existingAssetTagProperty.getUserId(),newAssetTagProperty.getUserId());
  assertEquals(existingAssetTagProperty.getUserName(),newAssetTagProperty.getUserName());
  assertEquals(Time.getShortTimestamp(existingAssetTagProperty.getCreateDate()),Time.getShortTimestamp(newAssetTagProperty.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingAssetTagProperty.getModifiedDate()),Time.getShortTimestamp(newAssetTagProperty.getModifiedDate()));
  assertEquals(existingAssetTagProperty.getTagId(),newAssetTagProperty.getTagId());
  assertEquals(existingAssetTagProperty.getKey(),newAssetTagProperty.getKey());
  assertEquals(existingAssetTagProperty.getValue(),newAssetTagProperty.getValue());
}

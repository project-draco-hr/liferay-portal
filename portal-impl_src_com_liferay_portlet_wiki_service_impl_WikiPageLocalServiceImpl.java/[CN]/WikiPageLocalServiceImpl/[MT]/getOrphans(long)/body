{
  List pageTitles=new ArrayList();
  List pages=WikiPageUtil.findByN_H(nodeId,true);
  for (int i=0; i < pages.size(); i++) {
    WikiPage page=(WikiPage)pages.get(i);
    if (page.getFormat().equals(WikiPageImpl.CLASSIC_WIKI_FORMAT)) {
      NodeFilter filter=WikiUtil.getFilter(nodeId);
      try {
        WikiUtil.convert(filter,page.getContent());
        pageTitles.add(filter.getTitles());
      }
 catch (      IOException ioe) {
        ioe.printStackTrace();
      }
    }
  }
  Set notOrphans=new HashSet();
  for (int i=0; i < pages.size(); i++) {
    WikiPage page=(WikiPage)pages.get(i);
    for (int j=0; j < pageTitles.size(); j++) {
      Map titles=(Map)pageTitles.get(j);
      if (titles.get(page.getTitle()) != null) {
        notOrphans.add(page);
        break;
      }
    }
  }
  List orphans=new ArrayList();
  for (int i=0; i < pages.size(); i++) {
    WikiPage page=(WikiPage)pages.get(i);
    if (!notOrphans.contains(page)) {
      orphans.add(page);
    }
  }
  Collections.sort(orphans);
  return orphans;
}

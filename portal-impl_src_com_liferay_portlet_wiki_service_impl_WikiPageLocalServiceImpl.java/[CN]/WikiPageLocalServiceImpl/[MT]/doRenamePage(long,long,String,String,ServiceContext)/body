{
  List<WikiPage> versionPages=wikiPagePersistence.findByN_T(nodeId,title);
  WikiPage page=fetchLatestPage(nodeId,newTitle,WorkflowConstants.STATUS_ANY,false);
  if (page == null) {
    page=getLatestPage(nodeId,title,WorkflowConstants.STATUS_ANY,false);
  }
  for (  WikiPage versionPage : versionPages) {
    versionPage.setTitle(newTitle);
    if (Validator.isNotNull(versionPage.getRedirectTitle())) {
      versionPage.setRedirectTitle(StringPool.BLANK);
      versionPage.setSummary(StringPool.BLANK);
    }
    wikiPagePersistence.update(versionPage);
  }
  long resourcePrimKey=page.getResourcePrimKey();
  WikiPageResource pageResource=wikiPageResourcePersistence.findByPrimaryKey(resourcePrimKey);
  pageResource.setTitle(newTitle);
  wikiPageResourcePersistence.update(pageResource);
  double version=WikiPageConstants.VERSION_DEFAULT;
  String summary=LanguageUtil.format(serviceContext.getLocale(),"moved-to-x",newTitle);
  String format=page.getFormat();
  boolean head=true;
  String parentTitle=page.getParentTitle();
  String redirectTitle=page.getTitle();
  String content=StringPool.DOUBLE_OPEN_BRACKET + redirectTitle + StringPool.DOUBLE_CLOSE_BRACKET;
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  populateServiceContext(serviceContext,page);
  boolean workflowEnabled=WorkflowThreadLocal.isEnabled();
  WorkflowThreadLocal.setEnabled(false);
  serviceContext.setCommand(Constants.ADD);
  addPage(userId,nodeId,title,version,content,summary,false,format,head,parentTitle,redirectTitle,serviceContext);
  WorkflowThreadLocal.setEnabled(workflowEnabled);
  List<WikiPage> childPages=wikiPagePersistence.findByN_P(nodeId,title);
  for (  WikiPage childPage : childPages) {
    childPage.setParentTitle(newTitle);
    wikiPagePersistence.update(childPage);
  }
  List<WikiPage> redirectPages=wikiPagePersistence.findByN_R(nodeId,title);
  for (  WikiPage redirectPage : redirectPages) {
    redirectPage.setRedirectTitle(newTitle);
    wikiPagePersistence.update(redirectPage);
  }
  updateAsset(userId,page,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds());
  return page;
}

{
  validateTitle(newTitle);
  if (StringUtil.equalsIgnoreCase(title,newTitle)) {
    throw new DuplicatePageException(newTitle);
  }
  if (isUsedTitle(nodeId,newTitle)) {
    WikiPage page=getPage(nodeId,newTitle);
    if (((page.getVersion() == WikiPageConstants.VERSION_DEFAULT) && (page.getContent().length() < 200)) || !strict) {
      deletePage(nodeId,newTitle);
    }
 else {
      throw new DuplicatePageException(newTitle);
    }
  }
  List<WikiPage> versionPages=wikiPagePersistence.findByN_T(nodeId,title);
  if (versionPages.size() == 0) {
    return;
  }
  for (  WikiPage page : versionPages) {
    page.setTitle(newTitle);
    if (Validator.isNotNull(page.getRedirectTitle())) {
      page.setRedirectTitle(StringPool.BLANK);
      page.setSummary(StringPool.BLANK);
    }
    wikiPagePersistence.update(page);
  }
  List<WikiPage> children=wikiPagePersistence.findByN_P(nodeId,title);
  for (  WikiPage page : children) {
    page.setParentTitle(newTitle);
    wikiPagePersistence.update(page);
  }
  WikiPage page=versionPages.get(versionPages.size() - 1);
  long resourcePrimKey=page.getResourcePrimKey();
  WikiPageResource pageResource=wikiPageResourcePersistence.findByPrimaryKey(resourcePrimKey);
  pageResource.setTitle(newTitle);
  wikiPageResourcePersistence.update(pageResource);
  double version=WikiPageConstants.VERSION_DEFAULT;
  String summary=WikiPageConstants.MOVED + " to " + newTitle;
  String format=page.getFormat();
  boolean head=true;
  String parentTitle=page.getParentTitle();
  String redirectTitle=page.getTitle();
  String content=StringPool.DOUBLE_OPEN_BRACKET + redirectTitle + StringPool.DOUBLE_CLOSE_BRACKET;
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  populateServiceContext(serviceContext,page);
  addPage(userId,nodeId,title,version,content,summary,false,format,head,parentTitle,redirectTitle,serviceContext);
  List<WikiPage> redirectedPages=wikiPagePersistence.findByN_R(nodeId,title);
  for (  WikiPage redirectedPage : redirectedPages) {
    redirectedPage.setRedirectTitle(newTitle);
    wikiPagePersistence.update(redirectedPage);
  }
  updateAsset(userId,page,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds());
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(WikiPage.class);
  indexer.delete(new Object[]{page.getCompanyId(),page.getNodeId(),title});
  indexer.reindex(page);
}

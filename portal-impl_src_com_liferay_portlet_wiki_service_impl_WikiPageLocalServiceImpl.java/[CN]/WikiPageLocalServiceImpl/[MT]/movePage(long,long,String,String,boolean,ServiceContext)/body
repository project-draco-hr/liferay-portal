{
  validateTitle(newTitle);
  if (title.equalsIgnoreCase(newTitle)) {
    throw new DuplicatePageException(newTitle);
  }
  if (isUsedTitle(nodeId,newTitle)) {
    WikiPage page=getPage(nodeId,newTitle);
    if (((page.getVersion() == WikiPageConstants.DEFAULT_VERSION) && (page.getContent().length() < 200)) || !strict) {
      deletePage(nodeId,newTitle);
    }
 else {
      throw new DuplicatePageException(newTitle);
    }
  }
  List<WikiPage> pageVersions=wikiPagePersistence.findByN_T(nodeId,title);
  if (pageVersions.size() == 0) {
    return;
  }
  for (  WikiPage page : pageVersions) {
    page.setTitle(newTitle);
    wikiPagePersistence.update(page,false);
  }
  List<WikiPage> children=wikiPagePersistence.findByN_P(nodeId,title);
  for (  WikiPage page : children) {
    page.setParentTitle(newTitle);
    wikiPagePersistence.update(page,false);
  }
  WikiPage page=pageVersions.get(pageVersions.size() - 1);
  long resourcePrimKey=page.getResourcePrimKey();
  WikiPageResource wikiPageResource=wikiPageResourcePersistence.findByPrimaryKey(resourcePrimKey);
  wikiPageResource.setTitle(newTitle);
  wikiPageResourcePersistence.update(wikiPageResource,false);
  double version=WikiPageConstants.DEFAULT_VERSION;
  String summary=WikiPageConstants.MOVED + " to " + title;
  String format=page.getFormat();
  boolean head=true;
  String parentTitle=page.getParentTitle();
  String redirectTitle=page.getTitle();
  String content=StringPool.DOUBLE_OPEN_BRACKET + redirectTitle + StringPool.DOUBLE_CLOSE_BRACKET;
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  AssetEntry assetEntry=assetEntryLocalService.getEntry(WikiPage.class.getName(),page.getResourcePrimKey());
  List<AssetLink> assetLinks=assetLinkLocalService.getDirectLinks(assetEntry.getEntryId(),AssetLinkConstants.TYPE_RELATED);
  long[] assetLinkEntryIds=StringUtil.split(ListUtil.toString(assetLinks,"entryId2"),0L);
  serviceContext.setAssetLinkEntryIds(assetLinkEntryIds);
  addPage(userId,nodeId,title,version,content,summary,false,format,head,parentTitle,redirectTitle,serviceContext);
  List<WikiPage> redirectedPages=wikiPagePersistence.findByN_R(nodeId,title);
  for (  WikiPage redirectedPage : redirectedPages) {
    redirectedPage.setRedirectTitle(newTitle);
    wikiPagePersistence.update(redirectedPage,false);
  }
  updateAsset(userId,page,null,null,null);
  Indexer indexer=IndexerRegistryUtil.getIndexer(WikiPage.class);
  indexer.delete(new Object[]{page.getCompanyId(),page.getNodeId(),title});
  indexer.reindex(page);
}

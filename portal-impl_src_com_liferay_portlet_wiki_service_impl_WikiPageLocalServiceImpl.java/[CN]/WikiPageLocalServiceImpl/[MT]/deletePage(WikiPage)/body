{
  List<WikiPage> children=wikiPagePersistence.findByN_P(page.getNodeId(),page.getTitle());
  for (  WikiPage curPage : children) {
    deletePage(curPage);
  }
  try {
    Indexer.deletePage(page.getCompanyId(),page.getNodeId(),page.getTitle());
  }
 catch (  IOException ioe) {
    _log.error("Deleting index " + page.getPrimaryKey(),ioe);
  }
  long companyId=page.getCompanyId();
  String portletId=CompanyImpl.SYSTEM_STRING;
  long repositoryId=CompanyImpl.SYSTEM;
  String dirName=page.getAttachmentsDir();
  try {
    dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
  }
 catch (  NoSuchDirectoryException nsde) {
  }
catch (  RemoteException re) {
    throw new SystemException(re);
  }
  tagsAssetLocalService.deleteAsset(WikiPage.class.getName(),page.getResourcePrimKey());
  subscriptionLocalService.deleteSubscriptions(page.getCompanyId(),WikiPage.class.getName(),page.getPageId());
  mbMessageLocalService.deleteDiscussionMessages(WikiPage.class.getName(),page.getResourcePrimKey());
  resourceLocalService.deleteResource(page.getCompanyId(),WikiPage.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,page.getResourcePrimKey());
  wikiPageResourceLocalService.deletePageResource(page.getNodeId(),page.getTitle());
  wikiPagePersistence.removeByN_T(page.getNodeId(),page.getTitle());
  wikiPagePersistence.removeByN_R(page.getNodeId(),page.getTitle());
  clearReferralsCache(page);
}

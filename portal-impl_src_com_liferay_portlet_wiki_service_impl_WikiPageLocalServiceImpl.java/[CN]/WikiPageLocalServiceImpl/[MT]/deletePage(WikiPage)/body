{
  List<WikiPage> children=wikiPagePersistence.findByN_H_P(page.getNodeId(),true,page.getTitle());
  for (  WikiPage curPage : children) {
    deletePage(curPage);
  }
  Indexer indexer=IndexerRegistryUtil.getIndexer(WikiPage.class);
  indexer.delete(page);
  long companyId=page.getCompanyId();
  String portletId=CompanyConstants.SYSTEM_STRING;
  long repositoryId=CompanyConstants.SYSTEM;
  String dirName=page.getAttachmentsDir();
  try {
    dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
  }
 catch (  NoSuchDirectoryException nsde) {
  }
  subscriptionLocalService.deleteSubscriptions(page.getCompanyId(),WikiPage.class.getName(),page.getResourcePrimKey());
  socialActivityLocalService.deleteActivities(WikiPage.class.getName(),page.getResourcePrimKey());
  AssetEntry assetEntry=assetEntryLocalService.getEntry(WikiPage.class.getName(),page.getResourcePrimKey());
  socialEquityLogLocalService.deactivateEquityLogs(assetEntry.getEntryId());
  mbMessageLocalService.deleteDiscussionMessages(WikiPage.class.getName(),page.getResourcePrimKey());
  expandoValueLocalService.deleteValues(WikiPage.class.getName(),page.getResourcePrimKey());
  assetEntryLocalService.deleteEntry(WikiPage.class.getName(),page.getResourcePrimKey());
  resourceLocalService.deleteResource(page.getCompanyId(),WikiPage.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,page.getResourcePrimKey());
  try {
    wikiPageResourceLocalService.deletePageResource(page.getNodeId(),page.getTitle());
  }
 catch (  NoSuchPageResourceException nspre) {
  }
  wikiPagePersistence.removeByN_T(page.getNodeId(),page.getTitle());
  wikiPagePersistence.removeByN_R(page.getNodeId(),page.getTitle());
  clearPageCache(page);
  clearReferralsCache(page);
}

{
  String trashTitle=page.getTitle();
  String originalTitle=TrashUtil.getOriginalTitle(trashTitle);
  List<WikiPage> pageVersions=wikiPagePersistence.findByR_N_H(page.getResourcePrimKey(),page.getNodeId(),false);
  for (  WikiPage pageVersion : pageVersions) {
    pageVersion.setTitle(originalTitle);
    wikiPagePersistence.update(pageVersion);
  }
  WikiPageResource pageResource=wikiPageResourcePersistence.fetchByPrimaryKey(page.getResourcePrimKey());
  pageResource.setTitle(originalTitle);
  wikiPageResourcePersistence.update(pageResource);
  page.setTitle(originalTitle);
  WikiPage parentPage=page.getParentPage();
  if ((parentPage != null) && parentPage.isInTrash()) {
    page.setParentTitle(StringPool.BLANK);
  }
  WikiPage redirectPage=page.getRedirectPage();
  if ((redirectPage != null) && redirectPage.isInTrash()) {
    page.setRedirectTitle(StringPool.BLANK);
  }
  wikiPagePersistence.update(page);
  TrashEntry trashEntry=trashEntryLocalService.getEntry(WikiPage.class.getName(),page.getResourcePrimKey());
  updateStatus(userId,page,trashEntry.getStatus(),new ServiceContext());
  restoreDependentChildPagesFromTrash(page,originalTitle,trashTitle,trashEntry.getEntryId());
  restoreDependentRedirectPagesFromTrash(page,originalTitle,trashTitle,trashEntry.getEntryId());
  List<TrashVersion> trashVersions=trashVersionLocalService.getVersions(trashEntry.getEntryId());
  for (  TrashVersion trashVersion : trashVersions) {
    WikiPage trashArticleVersion=wikiPagePersistence.findByPrimaryKey(trashVersion.getClassPK());
    trashArticleVersion.setStatus(trashVersion.getStatus());
    wikiPagePersistence.update(trashArticleVersion);
  }
  trashEntryLocalService.deleteEntry(WikiPage.class.getName(),page.getResourcePrimKey());
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",page.getTitle());
  extraDataJSONObject.put("version",page.getVersion());
  socialActivityLocalService.addActivity(userId,page.getGroupId(),WikiPage.class.getName(),page.getResourcePrimKey(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
  if (!pageVersions.isEmpty()) {
    Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(WikiPage.class);
    for (    WikiPage pageVersion : pageVersions) {
      indexer.reindex(pageVersion);
    }
  }
}

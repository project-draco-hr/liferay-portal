{
  User user=userPersistence.findByPrimaryKey(userId);
  WikiNode node=wikiNodePersistence.findByPrimaryKey(nodeId);
  Date now=new Date();
  validate(title,nodeId,content,format);
  long pageId=counterLocalService.increment();
  long resourcePrimKey=wikiPageResourceLocalService.getPageResourcePrimKey(nodeId,title);
  WikiPage page=wikiPagePersistence.create(pageId);
  page.setUuid(uuid);
  page.setResourcePrimKey(resourcePrimKey);
  page.setCompanyId(user.getCompanyId());
  page.setUserId(user.getUserId());
  page.setUserName(user.getFullName());
  page.setCreateDate(now);
  page.setNodeId(nodeId);
  page.setTitle(title);
  page.setVersion(version);
  page.setContent(content);
  page.setFormat(format);
  page.setHead(head);
  page.setParentTitle(parentTitle);
  page.setRedirectTitle(redirectTitle);
  wikiPagePersistence.update(page,false);
  addPageResources(page.getNode(),page,true,true);
  node.setLastPostDate(now);
  wikiNodePersistence.update(node,false);
  try {
    notifySubscribers(node,page,prefs,themeDisplay,false);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
  updateTagsAsset(userId,page,tagsEntries);
  try {
    Indexer.addPage(page.getCompanyId(),node.getGroupId(),nodeId,title,content,tagsEntries);
  }
 catch (  IOException ioe) {
    _log.error("Indexing " + pageId,ioe);
  }
  clearReferralsCache(page);
  clearPageCache(page);
  return page;
}

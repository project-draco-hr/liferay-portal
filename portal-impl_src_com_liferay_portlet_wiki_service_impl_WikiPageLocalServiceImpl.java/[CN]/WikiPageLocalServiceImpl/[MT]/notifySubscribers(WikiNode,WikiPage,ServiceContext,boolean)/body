{
  PortletPreferences preferences=null;
  String rootPortletId=serviceContext.getRootPortletId();
  if (Validator.isNull(rootPortletId) || rootPortletId.equals(PortletKeys.WIKI_DISPLAY)) {
    preferences=ServiceContextUtil.getPortletPreferences(serviceContext);
  }
  if (preferences == null) {
    preferences=portletPreferencesLocalService.getPreferences(node.getCompanyId(),node.getGroupId(),PortletKeys.PREFS_OWNER_TYPE_GROUP,PortletKeys.PREFS_PLID_SHARED,PortletKeys.WIKI_ADMIN,null);
  }
  if (!update && WikiUtil.getEmailPageAddedEnabled(preferences)) {
  }
 else   if (update && WikiUtil.getEmailPageUpdatedEnabled(preferences)) {
  }
 else {
    return;
  }
  String portalURL=serviceContext.getPortalURL();
  String layoutFullURL=serviceContext.getLayoutFullURL();
  WikiPage previousVersionPage=getPreviousVersionPage(page);
  String attachmentURLPrefix=portalURL + serviceContext.getPathMain() + "/wiki/get_page_attachment?p_l_id="+ serviceContext.getPlid()+ "&nodeId="+ page.getNodeId()+ "&title="+ HttpUtil.encodeURL(page.getTitle())+ "&fileName=";
  String pageDiffs=StringPool.BLANK;
  try {
    pageDiffs=WikiUtil.diffHtml(previousVersionPage,page,null,null,attachmentURLPrefix);
  }
 catch (  Exception e) {
  }
  String pageContent=null;
  if (Validator.equals(page.getFormat(),"creole")) {
    pageContent=WikiUtil.convert(page,null,null,attachmentURLPrefix);
  }
 else {
    pageContent=page.getContent();
    pageContent=WikiUtil.processContent(pageContent);
  }
  String pageURL=StringPool.BLANK;
  String diffsURL=StringPool.BLANK;
  if (Validator.isNotNull(layoutFullURL)) {
    pageURL=layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "wiki/"+ node.getNodeId()+ StringPool.SLASH+ HttpUtil.encodeURL(page.getTitle());
    if (previousVersionPage != null) {
      StringBundler sb=new StringBundler(16);
      sb.append(layoutFullURL);
      sb.append("?p_p_id=");
      sb.append(PortletKeys.WIKI);
      sb.append("&p_p_state=");
      sb.append(WindowState.MAXIMIZED);
      sb.append("&struts_action=");
      sb.append(HttpUtil.encodeURL("/wiki/compare_versions"));
      sb.append("&nodeId=");
      sb.append(node.getNodeId());
      sb.append("&title=");
      sb.append(HttpUtil.encodeURL(page.getTitle()));
      sb.append("&sourceVersion=");
      sb.append(previousVersionPage.getVersion());
      sb.append("&targetVersion=");
      sb.append(page.getVersion());
      sb.append("&type=html");
      diffsURL=sb.toString();
    }
  }
  String fromName=WikiUtil.getEmailFromName(preferences,page.getCompanyId());
  String fromAddress=WikiUtil.getEmailFromAddress(preferences,page.getCompanyId());
  String subjectPrefix=null;
  String body=null;
  String signature=null;
  if (update) {
    subjectPrefix=WikiUtil.getEmailPageUpdatedSubjectPrefix(preferences);
    body=WikiUtil.getEmailPageUpdatedBody(preferences);
    signature=WikiUtil.getEmailPageUpdatedSignature(preferences);
  }
 else {
    subjectPrefix=WikiUtil.getEmailPageAddedSubjectPrefix(preferences);
    body=WikiUtil.getEmailPageAddedBody(preferences);
    signature=WikiUtil.getEmailPageAddedSignature(preferences);
  }
  String subject=page.getTitle();
  if (!subject.contains(subjectPrefix)) {
    subject=subjectPrefix + StringPool.SPACE + subject;
  }
  if (Validator.isNotNull(signature)) {
    body+="\n" + signature;
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(page.getCompanyId());
  subscriptionSender.setContextAttributes("[$DIFFS_URL$]",diffsURL,"[$NODE_NAME$]",node.getName(),"[$PAGE_DATE_UPDATE$]",page.getModifiedDate(),"[$PAGE_ID$]",page.getPageId(),"[$PAGE_SUMMARY$]",page.getSummary(),"[$PAGE_TITLE$]",page.getTitle(),"[$PAGE_URL$]",pageURL);
  subscriptionSender.setContextAttribute("[$PAGE_CONTENT$]",pageContent,false);
  subscriptionSender.setContextAttribute("[$PAGE_DIFFS$]",replaceStyles(pageDiffs),false);
  subscriptionSender.setContextUserPrefix("PAGE");
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("wiki_page",page.getNodeId(),page.getPageId());
  subscriptionSender.setPortletId(PortletKeys.WIKI);
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setScopeGroupId(node.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUserId(page.getUserId());
  subscriptionSender.addPersistedSubscribers(WikiNode.class.getName(),node.getNodeId());
  subscriptionSender.addPersistedSubscribers(WikiPage.class.getName(),page.getResourcePrimKey());
  subscriptionSender.flushNotificationsAsync();
}

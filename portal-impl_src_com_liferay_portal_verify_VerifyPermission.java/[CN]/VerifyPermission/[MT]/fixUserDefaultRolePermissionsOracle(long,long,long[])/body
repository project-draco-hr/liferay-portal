{
  String insertSQL="insert into ResourcePermissionPlid(" + "select ResourcePermission.resourcePermissionId, " + "SUBSTR(ResourcePermission.primKey, 0, "+ "INSTR(ResourcePermission.primKey, '_LAYOUT_') -1) "+ "as plid from ResourcePermission where "+ "ResourcePermission.primKey like '%_LAYOUT_%')";
  try {
    runSQL("create table ResourcePermissionPlid (resourcePermissionId " + "LONG null, plid LONG null)");
  }
 catch (  SQLException sqle) {
    runSQL("delete from ResourcePermissionPlid");
  }
  runSQL(insertSQL);
  for (  long companyId : companyIds) {
    Role powerUserRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.POWER_USER);
    Role userRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.USER);
    StringBundler sb=new StringBundler(20);
    sb.append("update ResourcePermission set roleId = ");
    sb.append(userRole.getRoleId());
    sb.append(" where resourcePermissionId in (select ");
    sb.append("ResourcePermission.resourcePermissionId from ");
    sb.append("ResourcePermission inner join ResourcePermissionPlid ");
    sb.append("on ResourcePermission.resourcePermissionId = ");
    sb.append("ResourcePermissionPlid.resourcePermissionId inner ");
    sb.append("join Layout on ResourcePermissionPlid.plid = ");
    sb.append("Layout.plid inner join Group_ on Layout.groupId = ");
    sb.append("Group_.groupId where ResourcePermission.scope = ");
    sb.append(ResourceConstants.SCOPE_INDIVIDUAL);
    sb.append(" and ResourcePermission.roleId = ");
    sb.append(powerUserRole.getRoleId());
    sb.append(" and (Group_.classNameId = ");
    sb.append(userClassNameId);
    sb.append(" or Group_.classNameId = ");
    sb.append(userGroupClassNameId);
    sb.append(") and Layout.type_ = '");
    sb.append(LayoutConstants.TYPE_PORTLET);
    sb.append("')");
    runSQL(sb.toString());
  }
  runSQL("drop table ResourcePermissionPlid");
}

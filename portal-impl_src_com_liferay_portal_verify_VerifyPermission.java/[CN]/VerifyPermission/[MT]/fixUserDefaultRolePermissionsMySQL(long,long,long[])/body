{
  for (  long companyId : companyIds) {
    Role powerUserRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.POWER_USER);
    Role userRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.USER);
    StringBundler sb=new StringBundler(19);
    sb.append("update ignore ResourcePermission inner join Layout on ");
    sb.append("ResourcePermission.companyId = Layout.companyId and ");
    sb.append("ResourcePermission.primKey like ");
    sb.append("replace('[$PLID$]_LAYOUT_%', '[$PLID$]', ");
    sb.append("cast_text(Layout.plid)) inner join Group_ on ");
    sb.append("Layout.groupId = Group_.groupId set ");
    sb.append("ResourcePermission.roleId = ");
    sb.append(userRole.getRoleId());
    sb.append(" where ResourcePermission.scope = ");
    sb.append(ResourceConstants.SCOPE_INDIVIDUAL);
    sb.append(" and ResourcePermission.roleId = ");
    sb.append(powerUserRole.getRoleId());
    sb.append(" and (Group_.classNameId = ");
    sb.append(userClassNameId);
    sb.append(" or Group_.classNameId = ");
    sb.append(userGroupClassNameId);
    sb.append(") and Layout.type_ = '");
    sb.append(LayoutConstants.TYPE_PORTLET);
    sb.append(StringPool.APOSTROPHE);
    runSQL(sb.toString());
  }
}

{
  long userClassNameId=PortalUtil.getClassNameId(User.class);
  long userGroupClassNameId=PortalUtil.getClassNameId(UserGroup.class);
  DB db=DBFactoryUtil.getDB();
  String dbType=db.getType();
  long[] companyIds=PortalInstances.getCompanyIdsBySQL();
  for (  long companyId : companyIds) {
    Role powerUserRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.POWER_USER);
    Role userRole=RoleLocalServiceUtil.getRole(companyId,RoleConstants.USER);
    StringBundler joinSB=new StringBundler(22);
    joinSB.append("ResourcePermission resourcePermission1 left outer ");
    joinSB.append("join ResourcePermission resourcePermission2 on ");
    joinSB.append("resourcePermission1.companyId = ");
    joinSB.append("resourcePermission2.companyId and ");
    joinSB.append("resourcePermission1.name = ");
    joinSB.append("resourcePermission2.name and ");
    joinSB.append("resourcePermission1.primKey = ");
    joinSB.append("resourcePermission2.primKey and ");
    joinSB.append("resourcePermission1.scope = ");
    joinSB.append("resourcePermission2.scope and ");
    joinSB.append("resourcePermission2.roleId = ");
    joinSB.append(userRole.getRoleId());
    joinSB.append(" inner join Layout on ");
    joinSB.append("resourcePermission1.companyId = Layout.companyId ");
    joinSB.append("and resourcePermission1.primKey like ");
    joinSB.append("replace('[$PLID$]");
    joinSB.append(PortletConstants.LAYOUT_SEPARATOR);
    joinSB.append("%', '[$PLID$]', cast_text(Layout.plid)) inner ");
    joinSB.append("join Group_ on Layout.groupId = ");
    joinSB.append("Group_.groupId and Layout.type_ = '");
    joinSB.append(LayoutConstants.TYPE_PORTLET);
    joinSB.append(StringPool.APOSTROPHE);
    StringBundler whereSB=new StringBundler(12);
    whereSB.append("where resourcePermission1.scope = ");
    whereSB.append(ResourceConstants.SCOPE_INDIVIDUAL);
    whereSB.append(" and resourcePermission1.primKey like '%");
    whereSB.append(PortletConstants.LAYOUT_SEPARATOR);
    whereSB.append("%' and resourcePermission1.roleId = ");
    whereSB.append(powerUserRole.getRoleId());
    whereSB.append(" and resourcePermission2.roleId is null and ");
    whereSB.append("(Group_.classNameId = ");
    whereSB.append(userClassNameId);
    whereSB.append(" or Group_.classNameId = ");
    whereSB.append(userGroupClassNameId);
    whereSB.append(StringPool.CLOSE_PARENTHESIS);
    StringBundler sb=new StringBundler(8);
    if (dbType.equals(DB.TYPE_MYSQL)) {
      sb.append("update ");
      sb.append(joinSB.toString());
      sb.append(" set resourcePermission1.roleId = ");
      sb.append(userRole.getRoleId());
      sb.append(StringPool.SPACE);
      sb.append(whereSB.toString());
    }
 else {
      sb.append("update ResourcePermission set roleId = ");
      sb.append(userRole.getRoleId());
      sb.append(" where resourcePermissionId in (select ");
      sb.append("resourcePermission1.resourcePermissionId from ");
      sb.append(joinSB.toString());
      sb.append(StringPool.SPACE);
      sb.append(whereSB.toString());
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    runSQL(sb.toString());
  }
  EntityCacheUtil.clearCache();
  FinderCacheUtil.clearCache();
}

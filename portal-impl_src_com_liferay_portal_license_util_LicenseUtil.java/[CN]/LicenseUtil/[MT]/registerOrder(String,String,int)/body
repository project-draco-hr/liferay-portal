{
  Map<String,Object> attributes=new HashMap<>();
  if (Validator.isNull(orderUuid)) {
    return attributes;
  }
  try {
    JSONObject jsonObject=_createRequest(orderUuid,productEntryName,maxServers);
    String response=sendRequest(jsonObject.toString());
    JSONObject responseJSONObject=JSONFactoryUtil.createJSONObject(response);
    attributes.put("ORDER_PRODUCT_ID",responseJSONObject.getString("productId"));
    attributes.put("ORDER_PRODUCTS",_getOrderProducts(responseJSONObject));
    String errorMessage=responseJSONObject.getString("errorMessage");
    if (Validator.isNotNull(errorMessage)) {
      attributes.put("ERROR_MESSAGE",errorMessage);
      return attributes;
    }
    String licenseXML=responseJSONObject.getString("licenseXML");
    if (Validator.isNotNull(licenseXML)) {
      LicenseManagerUtil.registerLicense(responseJSONObject);
      attributes.clear();
      attributes.put("SUCCESS_MESSAGE","Your license has been successfully registered.");
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    attributes.put("ERROR_MESSAGE","There was an error contacting " + LICENSE_SERVER_URL);
  }
  return attributes;
}

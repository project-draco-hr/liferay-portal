{
  if (_macAddresses == null) {
    _macAddresses=new HashSet<String>();
    try {
      String osName=System.getProperty("os.name");
      if (osName == null) {
        return null;
      }
      String osNameLowerCase=osName.toLowerCase();
      Process process=null;
      Runtime runtime=Runtime.getRuntime();
      Pattern macAddressPattern=_macAddressPattern1;
      if (osNameLowerCase.startsWith("win")) {
        process=runtime.exec(new String[]{"ipconfig","/all"},null);
      }
 else {
        String executable=null;
        String arguments=null;
        if (osNameLowerCase.contains("aix")) {
          macAddressPattern=_macAddressPattern2;
          executable="netstat";
          arguments="-ina";
        }
 else {
          executable="ifconfig";
          arguments="-a";
        }
        File sbinExecutable=new File("/sbin",executable);
        if (sbinExecutable.exists()) {
          executable="/sbin/".concat(executable);
        }
        process=runtime.exec(new String[]{executable,arguments});
      }
      BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(process.getInputStream()),128);
      String line=null;
      while ((line=bufferedReader.readLine()) != null) {
        Matcher matcher=macAddressPattern.matcher(line);
        if (!matcher.find()) {
          continue;
        }
        String macAddress=matcher.group(1);
        if (Validator.isNull(macAddress)) {
          continue;
        }
        macAddress=macAddress.toLowerCase();
        if (macAddressPattern == _macAddressPattern1) {
          macAddress=macAddress.replace('-',':');
        }
 else         if (macAddressPattern == _macAddressPattern2) {
          macAddress=macAddress.replace('.',':');
          StringBuilder sb=new StringBuilder(17);
          sb.append(macAddress);
          for (int i=1; i < 5; ++i) {
            int pos=(i * 3) - 1;
            if (sb.charAt(pos) != ':') {
              sb.insert((i - 1) * 3,'0');
            }
          }
          if (sb.length() < 17) {
            sb.insert(15,'0');
          }
          macAddress=sb.toString();
        }
        _macAddresses.add(macAddress);
      }
      bufferedReader.close();
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  return new HashSet<String>(_macAddresses);
}

{
  String orderUuid=ParamUtil.getString(request,"orderUuid");
  String productEntryName=ParamUtil.getString(request,"productEntryName");
  int maxServers=ParamUtil.getInteger(request,"maxServers");
  List<ClusterNode> clusterNodes=ClusterExecutorUtil.getClusterNodes();
  if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) {
    Map<String,Object> attributes=registerOrder(orderUuid,productEntryName,maxServers);
    for (    Map.Entry<String,Object> entry : attributes.entrySet()) {
      request.setAttribute(entry.getKey(),entry.getValue());
    }
  }
 else {
    for (    ClusterNode clusterNode : clusterNodes) {
      boolean register=ParamUtil.getBoolean(request,clusterNode.getClusterNodeId() + "_register");
      if (!register) {
        continue;
      }
      try {
        _registerClusterOrder(request,clusterNode,orderUuid,productEntryName,maxServers);
      }
 catch (      Exception e) {
        _log.error(e,e);
        String message="Error contacting " + clusterNode.getInetAddress().getHostName();
        if (clusterNode.getPort() != -1) {
          message+=StringPool.COLON + clusterNode.getPort();
        }
        request.setAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE",message);
      }
    }
  }
}

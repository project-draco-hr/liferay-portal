{
  String fileName=_slaveName + ".sh";
  File shellFile=new File(fileName);
  try {
    try (FileWriter shellFileWriter=new FileWriter(shellFile)){
      shellFileWriter.write("echo " + _slaveName + "\n");
      shellFileWriter.write("ssh " + _slaveName + " 'ls /'\n");
    }
     shellFile.setExecutable(true);
    boolean shellFileRan=false;
    Integer exitValue=null;
    while (!shellFileRan) {
      Process process=null;
      long start=System.currentTimeMillis();
      try {
        process=Runtime.getRuntime().exec("./" + fileName);
      }
 catch (      IOException ioe) {
        if (ioe.getMessage().contains("Text file busy") && (System.currentTimeMillis() - start) < 2000) {
          Thread.sleep(100);
          continue;
        }
        throw ioe;
      }
      shellFileRan=true;
      String output=_getOutput(process);
      String errorOutput=_getErrorOutput(process);
      if (errorOutput.contains("No buffer space available") || errorOutput.contains("Temporary failure in name resolution")) {
synchronized (tasksCompleteCount) {
          if (tasksCompleteCount > 0) {
            System.out.println(tasksCompleteCount + " tasks have been completed.");
          }
        }
        shellFileRan=false;
        System.out.println("Out of buffer space OR Temporary DNS failure - Retry in 1 minutes.");
        Thread.sleep(1000 * 60);
        continue;
      }
      exitValue=process.waitFor();
      process.destroy();
synchronized (tasksCompleteCount) {
        tasksCompleteCount++;
      }
      if (exitValue != 0) {
        System.out.println("Exit Value: " + exitValue + "\n"+ output+ "\n\n"+ errorOutput);
      }
    }
    if (exitValue == null) {
      return false;
    }
    return exitValue == 0;
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
 finally {
    shellFile.deleteOnExit();
  }
}

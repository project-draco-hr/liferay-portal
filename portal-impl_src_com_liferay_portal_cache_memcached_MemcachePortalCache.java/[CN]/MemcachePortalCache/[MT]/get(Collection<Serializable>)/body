{
  List<String> processedKeys=new ArrayList<String>(keys.size());
  for (  Serializable key : keys) {
    String processedKey=_name.concat(String.valueOf(key));
    processedKeys.add(processedKey);
  }
  Future<Map<String,Object>> future=null;
  try {
    future=_memcachedClient.asyncGetBulk(processedKeys);
  }
 catch (  IllegalArgumentException iae) {
    if (_log.isWarnEnabled()) {
      _log.warn("Error retrieving with keys " + keys,iae);
    }
    return null;
  }
  Map<String,Object> values=null;
  try {
    values=future.get(_timeout,_timeoutTimeUnit);
  }
 catch (  Throwable t) {
    if (_log.isWarnEnabled()) {
      _log.warn("Memcache operation error",t);
    }
    future.cancel(true);
  }
  if (values != null) {
    return values.values();
  }
  return null;
}

{
  Object cachedObject=null;
  Future<Object> future=null;
  try {
    future=_memcachedClient.asyncGet(key);
  }
 catch (  IllegalArgumentException e) {
    if (_log.isWarnEnabled()) {
      _log.warn("Error retrieving with key: " + key,e);
    }
    return null;
  }
  try {
    cachedObject=future.get(_timeout,_timeoutTimeUnit);
  }
 catch (  Throwable t) {
    if (_log.isWarnEnabled()) {
      _log.warn("Memcache operation error",t);
    }
    future.cancel(true);
  }
  return cachedObject;
}

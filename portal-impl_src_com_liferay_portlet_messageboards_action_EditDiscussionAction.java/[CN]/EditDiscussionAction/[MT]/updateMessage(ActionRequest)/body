{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String className=ParamUtil.getString(actionRequest,"className");
  long classPK=ParamUtil.getLong(actionRequest,"classPK");
  String permissionClassName=ParamUtil.getString(actionRequest,"permissionClassName");
  long permissionClassPK=ParamUtil.getLong(actionRequest,"permissionClassPK");
  long permissionOwnerId=ParamUtil.getLong(actionRequest,"permissionOwnerId");
  long messageId=ParamUtil.getLong(actionRequest,"messageId");
  long threadId=ParamUtil.getLong(actionRequest,"threadId");
  long parentMessageId=ParamUtil.getLong(actionRequest,"parentMessageId");
  String subject=ParamUtil.getString(actionRequest,"subject");
  String body=ParamUtil.getString(actionRequest,"body");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(MBMessage.class.getName(),actionRequest);
  MBMessage message=null;
  if (messageId <= 0) {
    message=MBMessageServiceUtil.addDiscussionMessage(serviceContext.getScopeGroupId(),className,classPK,permissionClassName,permissionClassPK,permissionOwnerId,threadId,parentMessageId,subject,body,serviceContext);
  }
 else {
    message=MBMessageServiceUtil.updateDiscussionMessage(className,classPK,permissionClassName,permissionClassPK,permissionOwnerId,messageId,subject,body,serviceContext);
  }
  boolean subscribe=ParamUtil.getBoolean(actionRequest,"subscribe");
  if (subscribe) {
    SubscriptionLocalServiceUtil.addSubscription(themeDisplay.getUserId(),themeDisplay.getScopeGroupId(),className,classPK);
  }
  return message;
}

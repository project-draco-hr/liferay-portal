{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  String className=ParamUtil.getString(actionRequest,"className");
  long classPK=ParamUtil.getLong(actionRequest,"classPK");
  String permissionClassName=ParamUtil.getString(actionRequest,"permissionClassName");
  long permissionClassPK=ParamUtil.getLong(actionRequest,"permissionClassPK");
  long permissionOwnerId=ParamUtil.getLong(actionRequest,"permissionOwnerId");
  long messageId=ParamUtil.getLong(actionRequest,"messageId");
  long threadId=ParamUtil.getLong(actionRequest,"threadId");
  long parentMessageId=ParamUtil.getLong(actionRequest,"parentMessageId");
  String subject=ParamUtil.getString(actionRequest,"subject");
  String body=ParamUtil.getString(actionRequest,"body");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(MBMessage.class.getName(),actionRequest);
  if ((threadId == 0) && (parentMessageId != 0)) {
    MBMessage parentMessage=MBMessageServiceUtil.getMessage(parentMessageId);
    threadId=parentMessage.getThreadId();
  }
  MBMessage message=null;
  if (messageId <= 0) {
    User user=null;
    if (themeDisplay.isSignedIn()) {
      user=themeDisplay.getUser();
    }
 else {
      String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
      user=UserLocalServiceUtil.fetchUserByEmailAddress(themeDisplay.getCompanyId(),emailAddress);
      if ((user == null) || (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE)) {
        return null;
      }
    }
    String name=PrincipalThreadLocal.getName();
    PrincipalThreadLocal.setName(user.getUserId());
    try {
      message=MBMessageServiceUtil.addDiscussionMessage(serviceContext.getScopeGroupId(),className,classPK,permissionClassName,permissionClassPK,permissionOwnerId,threadId,parentMessageId,subject,body,serviceContext);
    }
  finally {
      PrincipalThreadLocal.setName(name);
    }
  }
 else {
    message=MBMessageServiceUtil.updateDiscussionMessage(className,classPK,permissionClassName,permissionClassPK,permissionOwnerId,messageId,subject,body,serviceContext);
  }
  boolean subscribe=ParamUtil.getBoolean(actionRequest,"subscribe");
  if (subscribe) {
    MBDiscussionLocalServiceUtil.subscribeDiscussion(themeDisplay.getUserId(),themeDisplay.getScopeGroupId(),className,classPK);
  }
  return message;
}

{
  SocialEquityGroupSetting newSocialEquityGroupSetting=addSocialEquityGroupSetting();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialEquityGroupSetting.class,SocialEquityGroupSetting.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("equityGroupSettingId"));
  Object newEquityGroupSettingId=newSocialEquityGroupSetting.getEquityGroupSettingId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("equityGroupSettingId",new Object[]{newEquityGroupSettingId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingEquityGroupSettingId=result.get(0);
  assertEquals(existingEquityGroupSettingId,newEquityGroupSettingId);
}

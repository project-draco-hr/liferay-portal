{
  Set<String> identities=new HashSet<>();
  for (  URI uri : indexURIs) {
    URL url=uri.toURL();
    try (InputStream inputStream=url.openStream()){
      String identity=_getRepositoryIdentity(uri.getPath(),inputStream);
      identities.add(identity);
    }
   }
  try (ResolverValidator resolverValidator=new ResolverValidator()){
    ResourceBuilder resourceBuilder=new ResourceBuilder();
    resourceBuilder.addEE(EE.JavaSE_1_7);
    resourceBuilder.addManifest(OSGI_CORE.R6_0_0.getManifest());
    _includeTargetPlatform(resourceBuilder,identities);
    resolverValidator.setSystem(resourceBuilder.build());
    for (    URI indexURI : indexURIs) {
      resolverValidator.addRepository(indexURI);
    }
    List<String> messages=new ArrayList<>();
    List<Resolution> resolutions=resolverValidator.validate();
    for (    Resolution resolution : resolutions) {
      if (resolution.succeeded) {
        continue;
      }
      String message=resolution.message;
      if (message == null) {
        continue;
      }
      if (message.startsWith(_MESSAGE_PREFIX)) {
        message=message.substring(_MESSAGE_PREFIX.length());
      }
      messages.add(message);
    }
    return messages;
  }
 }

{
  Task task=project.task(CREATE_LIFERAY_THEME_JSON_TASK_NAME);
  final File liferayThemeJsonFile=project.file("liferay-theme.json");
  task.doLast(new Action<Task>(){
    @Override public void execute(    Task task){
      Project project=task.getProject();
      Map<String,Object> map=new HashMap<>();
      File appServerDir=new File(workspaceExtension.getHomeDir(),"tomcat-7.0.62");
      map.put("appServerPath",appServerDir.getAbsolutePath());
      File appServerThemeDir=new File(appServerDir,"webapps/" + project.getName());
      map.put("appServerPathTheme",appServerThemeDir.getAbsolutePath());
      map.put("deployed",false);
      File deployDir=new File(workspaceExtension.getHomeDir(),"osgi/modules");
      map.put("deployPath",deployDir.getAbsolutePath());
      map.put("themeName",project.getName());
      String json=JsonOutput.toJson(Collections.singletonMap("LiferayTheme",map));
      try {
        Files.write(liferayThemeJsonFile.toPath(),json.getBytes(StandardCharsets.UTF_8));
      }
 catch (      IOException ioe) {
        throw new GradleException(ioe.getMessage(),ioe);
      }
    }
  }
);
  task.onlyIf(new Spec<Task>(){
    @Override public boolean isSatisfiedBy(    Task task){
      if (liferayThemeJsonFile.exists()) {
        return true;
      }
      return false;
    }
  }
);
  return task;
}

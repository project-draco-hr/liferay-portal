{
  String[] localesArray=PropsValues.LOCALES;
  if (companyId != CompanyConstants.SYSTEM) {
    try {
      localesArray=PrefsPropsUtil.getStringArray(companyId,PropsKeys.LOCALES,StringPool.COMMA,PropsValues.LOCALES);
    }
 catch (    SystemException se) {
      localesArray=PropsValues.LOCALES;
    }
  }
  _charEncodings=new HashMap<String,String>();
  _duplicateLanguageCodes=new HashSet<String>();
  _locales=new Locale[localesArray.length];
  _localesMap=new HashMap<String,Locale>(localesArray.length);
  _localesSet=new HashSet<Locale>(localesArray.length);
  for (int i=0; i < localesArray.length; i++) {
    String languageId=localesArray[i];
    int pos=languageId.indexOf(StringPool.UNDERLINE);
    String language=languageId.substring(0,pos);
    Locale locale=LocaleUtil.fromLanguageId(languageId);
    _charEncodings.put(locale.toString(),StringPool.UTF8);
    if (_localesMap.containsKey(language)) {
      _duplicateLanguageCodes.add(language);
    }
    _locales[i]=locale;
    if (!_localesMap.containsKey(language)) {
      _localesMap.put(language,locale);
    }
    _localesSet.add(locale);
  }
}

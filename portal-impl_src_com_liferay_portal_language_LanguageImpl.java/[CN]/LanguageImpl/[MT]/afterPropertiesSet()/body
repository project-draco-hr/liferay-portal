{
  ServiceDependencyManager serviceDependencyManager=new ServiceDependencyManager();
  serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener(){
    @Override public void dependenciesFulfilled(){
      Registry registry=RegistryUtil.getRegistry();
      MultiVMPool multiVMPool=registry.getService(MultiVMPool.class);
      _companyLocalesPortalCache=(PortalCache<Long,Serializable>)multiVMPool.getPortalCache(_COMPANY_LOCALES_PORTAL_CACHE_NAME);
      PortalCacheMapSynchronizeUtil.synchronize(_companyLocalesPortalCache,_companyLocalesBags,new Synchronizer<Long,Serializable>(){
        @Override public void onSynchronize(        Map<? extends Long,? extends Serializable> map,        Long key,        Serializable value,        int timeToLive){
          _companyLocalesBags.remove(key);
        }
      }
);
      _groupLocalesPortalCache=(PortalCache<Long,Serializable>)multiVMPool.getPortalCache(_GROUP_LOCALES_PORTAL_CACHE_NAME);
      PortalCacheMapSynchronizeUtil.synchronize(_groupLocalesPortalCache,_groupLanguageCodeLocalesMapMap,new Synchronizer<Long,Serializable>(){
        @Override public void onSynchronize(        Map<? extends Long,? extends Serializable> map,        Long key,        Serializable value,        int timeToLive){
          _groupLanguageCodeLocalesMapMap.remove(key);
        }
      }
);
      PortalCacheMapSynchronizeUtil.synchronize(_groupLocalesPortalCache,_groupLanguageIdLocalesMap,new Synchronizer<Long,Serializable>(){
        @Override public void onSynchronize(        Map<? extends Long,? extends Serializable> map,        Long key,        Serializable value,        int timeToLive){
          _groupLanguageIdLocalesMap.remove(key);
        }
      }
);
    }
    @Override public void destroy(){
    }
  }
);
  serviceDependencyManager.registerDependencies(MultiVMPool.class);
}

{
  String[] groupLocalesArray=null;
  try {
    Group group=GroupLocalServiceUtil.getGroup(groupId);
    UnicodeProperties typeSettingsProperties=group.getTypeSettingsProperties();
    groupLocalesArray=StringUtil.split(typeSettingsProperties.getProperty("locales"));
  }
 catch (  Exception e) {
    groupLocalesArray=PropsValues.LOCALES_ENABLED;
  }
  Locale[] groupLocales=new Locale[groupLocalesArray.length];
  Map<String,Locale> groupLocalesMap=new HashMap<String,Locale>(groupLocalesArray.length);
  Set<Locale> groupLocalesSet=new HashSet<Locale>(groupLocalesArray.length);
  for (int i=0; i < groupLocalesArray.length; i++) {
    String languageId=groupLocalesArray[i];
    Locale locale=LocaleUtil.fromLanguageId(languageId,false);
    String language=languageId;
    int pos=languageId.indexOf(CharPool.UNDERLINE);
    if (pos > 0) {
      language=languageId.substring(0,pos);
    }
    groupLocales[i]=locale;
    if (!groupLocalesMap.containsKey(language)) {
      groupLocalesMap.put(language,locale);
    }
    groupLocalesSet.add(locale);
  }
  _groupLocalesMap.put(groupId,groupLocales);
  _groupLocalesSetMap.put(groupId,groupLocalesSet);
}

{
  try {
    HttpSession ses=req.getSession();
    EventsProcessor.process(PropsUtil.getArray(PropsUtil.LOGOUT_EVENTS_PRE),req,res);
    Cookie cookie=new Cookie(CookieKeys.ID,StringPool.BLANK);
    cookie.setMaxAge(0);
    cookie.setPath("/");
    CookieKeys.addCookie(res,cookie);
    cookie=new Cookie(CookieKeys.PASSWORD,StringPool.BLANK);
    cookie.setMaxAge(0);
    cookie.setPath("/");
    CookieKeys.addCookie(res,cookie);
    if (ServerDetector.isWebLogic()) {
      Map sessions=PortletSessionPool.remove(ses.getId());
      if (sessions != null) {
        Iterator itr=sessions.entrySet().iterator();
        while (itr.hasNext()) {
          Map.Entry entry=(Map.Entry)itr.next();
          HttpSession portletSession=(HttpSession)entry.getValue();
          portletSession.invalidate();
        }
      }
    }
    try {
      ses.invalidate();
    }
 catch (    Exception e) {
    }
    EventsProcessor.process(PropsUtil.getArray(PropsUtil.LOGOUT_EVENTS_POST),req,res);
    return mapping.findForward(Constants.COMMON_REFERER);
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    return mapping.findForward(Constants.COMMON_ERROR);
  }
}

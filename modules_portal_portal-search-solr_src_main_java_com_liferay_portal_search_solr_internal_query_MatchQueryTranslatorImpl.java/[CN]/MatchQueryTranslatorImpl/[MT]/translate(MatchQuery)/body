{
  MatchQuery.Type matchQueryType=matchQuery.getType();
  if (matchQueryType == MatchQuery.Type.BOOLEAN) {
    QueryParser queryParser=new QueryParser(matchQuery.getField(),new KeywordAnalyzer());
    try {
      return queryParser.parse(matchQuery.getValue());
    }
 catch (    ParseException pe) {
      throw new IllegalArgumentException(pe);
    }
  }
  String value=matchQuery.getValue();
  if (value.startsWith(StringPool.QUOTE) && value.endsWith(StringPool.QUOTE)) {
    value=value.substring(1,value.length() - 1);
    if (value.endsWith(StringPool.STAR)) {
      value=value.substring(0,value.length() - 1);
      matchQueryType=MatchQuery.Type.PHRASE_PREFIX;
    }
 else {
      matchQueryType=MatchQuery.Type.PHRASE;
    }
  }
  Term term=new Term(matchQuery.getField(),value);
  org.apache.lucene.search.Query query=null;
  if (matchQueryType == MatchQuery.Type.PHRASE_PREFIX) {
    query=new PrefixQuery(term);
  }
 else {
    PhraseQuery phraseQuery=new PhraseQuery();
    phraseQuery.add(term);
    if (matchQuery.getSlop() != null) {
      phraseQuery.setSlop(matchQuery.getSlop());
    }
    query=phraseQuery;
  }
  if (!matchQuery.isDefaultBoost()) {
    query.setBoost(matchQuery.getBoost());
  }
  return query;
}

{
  if (Validator.isNull(key) || key.equals(_RANDOM_KEY)) {
    return;
  }
  final String encodedKey=_encodeKey(namespace,key);
  try {
    if (value == null) {
      reset(encodedKey);
      return;
    }
    String[] oldValues=super.getValues(encodedKey,null);
    if ((oldValues != null) && (oldValues.length == 1) && value.equals(oldValues[0])) {
      return;
    }
    Callable<Void> callable=new Callable<Void>(){
      @Override public Void call() throws ReadOnlyException {
        PortalPreferencesImpl.super.setValue(encodedKey,value);
        return null;
      }
    }
;
    if (_signedIn) {
      retryableStore(callable,encodedKey);
    }
 else {
      callable.call();
    }
  }
 catch (  ConcurrentModificationException cme) {
    throw cme;
  }
catch (  Throwable t) {
    _log.error(t,t);
  }
}

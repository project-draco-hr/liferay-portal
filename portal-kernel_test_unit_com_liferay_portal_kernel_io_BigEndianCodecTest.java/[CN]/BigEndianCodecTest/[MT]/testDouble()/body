{
  double[] doubles=new double[_COUNT];
  for (int i=0; i < _COUNT; i++) {
    doubles[i]=_random.nextDouble();
  }
  byte[] bytes=new byte[_COUNT * 8];
  ByteBuffer byteBuffer=ByteBuffer.allocate(bytes.length);
  byteBuffer.order(ByteOrder.BIG_ENDIAN);
  DoubleBuffer doubleBuffer=byteBuffer.asDoubleBuffer();
  for (int i=0; i < _COUNT; i++) {
    doubleBuffer.put(doubles[i]);
    BigEndianCodec.putDouble(bytes,i * 8,doubles[i]);
  }
  Assert.assertArrayEquals(byteBuffer.array(),bytes);
  double[] newDoubles=new double[_COUNT];
  for (int i=0; i < _COUNT; i++) {
    newDoubles[i]=BigEndianCodec.getDouble(bytes,i * 8);
  }
  Assert.assertTrue(Arrays.equals(doubles,newDoubles));
}

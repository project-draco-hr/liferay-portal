{
  long pk=nextLong();
  DLFileShortcut newDLFileShortcut=_persistence.create(pk);
  newDLFileShortcut.setUuid(randomString());
  newDLFileShortcut.setCompanyId(nextLong());
  newDLFileShortcut.setUserId(nextLong());
  newDLFileShortcut.setUserName(randomString());
  newDLFileShortcut.setCreateDate(nextDate());
  newDLFileShortcut.setModifiedDate(nextDate());
  newDLFileShortcut.setFolderId(nextLong());
  newDLFileShortcut.setToFolderId(nextLong());
  newDLFileShortcut.setToName(randomString());
  _persistence.update(newDLFileShortcut);
  DLFileShortcut existingDLFileShortcut=_persistence.findByPrimaryKey(newDLFileShortcut.getPrimaryKey());
  assertEquals(existingDLFileShortcut.getUuid(),newDLFileShortcut.getUuid());
  assertEquals(existingDLFileShortcut.getFileShortcutId(),newDLFileShortcut.getFileShortcutId());
  assertEquals(existingDLFileShortcut.getCompanyId(),newDLFileShortcut.getCompanyId());
  assertEquals(existingDLFileShortcut.getUserId(),newDLFileShortcut.getUserId());
  assertEquals(existingDLFileShortcut.getUserName(),newDLFileShortcut.getUserName());
  assertEquals(existingDLFileShortcut.getCreateDate(),newDLFileShortcut.getCreateDate());
  assertEquals(existingDLFileShortcut.getModifiedDate(),newDLFileShortcut.getModifiedDate());
  assertEquals(existingDLFileShortcut.getFolderId(),newDLFileShortcut.getFolderId());
  assertEquals(existingDLFileShortcut.getToFolderId(),newDLFileShortcut.getToFolderId());
  assertEquals(existingDLFileShortcut.getToName(),newDLFileShortcut.getToName());
}

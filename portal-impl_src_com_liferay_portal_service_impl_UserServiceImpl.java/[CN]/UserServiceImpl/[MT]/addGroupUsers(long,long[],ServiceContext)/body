{
  try {
    GroupPermissionUtil.check(getPermissionChecker(),groupId,ActionKeys.ASSIGN_MEMBERS);
  }
 catch (  PrincipalException pe) {
    boolean hasPermission=false;
    if (userIds.length == 0) {
      hasPermission=true;
    }
 else     if (userIds.length == 1) {
      User user=getUser();
      if (user.getUserId() == userIds[0]) {
        Group group=groupPersistence.findByPrimaryKey(groupId);
        if (user.getCompanyId() == group.getCompanyId()) {
          int type=group.getType();
          if (type == GroupConstants.TYPE_SITE_OPEN) {
            hasPermission=true;
          }
        }
      }
    }
    if (!hasPermission) {
      throw new PrincipalException();
    }
  }
  MembershipPolicyException membershipPolicyException=null;
  Group group=groupPersistence.findByPrimaryKey(groupId);
  for (  long userId : userIds) {
    User user=userPersistence.findByPrimaryKey(userId);
    if (!MembershipPolicyUtil.isMembershipAllowed(group,user)) {
      if (membershipPolicyException == null) {
        membershipPolicyException=new MembershipPolicyException(MembershipPolicyException.GROUP_MEMBERSHIP_NOT_ALLOWED);
        membershipPolicyException.addGroup(group);
      }
      membershipPolicyException.addUser(user);
    }
  }
  if (membershipPolicyException != null) {
    throw membershipPolicyException;
  }
  userLocalService.addGroupUsers(groupId,userIds);
}

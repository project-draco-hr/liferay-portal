{
  UserPermissionUtil.check(getPermissionChecker(),userId,organizationIds,ActionKeys.UPDATE);
  User user=userPersistence.findByPrimaryKey(userId);
  if (addresses != null) {
    UsersAdminUtil.updateAddresses(Contact.class.getName(),user.getContactId(),addresses);
  }
  if (emailAddresses != null) {
    UsersAdminUtil.updateEmailAddresses(Contact.class.getName(),user.getContactId(),emailAddresses);
  }
  if (phones != null) {
    UsersAdminUtil.updatePhones(Contact.class.getName(),user.getContactId(),phones);
  }
  if (websites != null) {
    UsersAdminUtil.updateWebsites(Contact.class.getName(),user.getContactId(),websites);
  }
  if (announcementsDelivers != null) {
    updateAnnouncementsDeliveries(user.getUserId(),announcementsDelivers);
  }
  long curUserId=getUserId();
  if (curUserId == userId) {
    screenName=screenName.trim().toLowerCase();
    if (!screenName.equalsIgnoreCase(user.getScreenName())) {
      validateScreenName(user,screenName);
    }
    emailAddress=emailAddress.trim().toLowerCase();
    if (!emailAddress.equalsIgnoreCase(user.getEmailAddress())) {
      validateEmailAddress(user,emailAddress);
    }
  }
  if (groupIds != null) {
    groupIds=checkGroups(userId,groupIds);
  }
  if (organizationIds != null) {
    organizationIds=checkOrganizations(userId,organizationIds);
  }
  if (roleIds != null) {
    roleIds=checkRoles(userId,roleIds);
  }
  if (userGroupRoles != null) {
    userGroupRoles=checkUserGroupRoles(userId,userGroupRoles);
  }
  if (userGroupIds != null) {
    userGroupIds=checkUserGroupIds(userId,userGroupIds);
  }
  return userLocalService.updateUser(userId,oldPassword,newPassword1,newPassword2,passwordReset,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,facebookId,openId,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,aimSn,facebookSn,icqSn,jabberSn,msnSn,mySpaceSn,skypeSn,twitterSn,ymSn,jobTitle,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,serviceContext);
}

{
  List<String> fields=new ArrayList<String>();
  Contact contact=user.getContact();
  Calendar birthday=CalendarFactoryUtil.getCalendar();
  birthday.setTime(contact.getBirthday());
  if ((birthdayMonth != birthday.get(Calendar.MONTH)) || (birthdayDay != birthday.get(Calendar.DAY_OF_MONTH)) || (birthdayYear != birthday.get(Calendar.YEAR))) {
    fields.add("birthday");
  }
  if (!StringUtil.equalsIgnoreCase(emailAddress,user.getEmailAddress())) {
    fields.add("emailAddress");
  }
  if (!StringUtil.equalsIgnoreCase(firstName,user.getFirstName())) {
    fields.add("firstName");
  }
  if (male != contact.getMale()) {
    fields.add("gender");
  }
  if (!StringUtil.equalsIgnoreCase(jobTitle,user.getJobTitle())) {
    fields.add("jobTitle");
  }
  if (!StringUtil.equalsIgnoreCase(lastName,user.getLastName())) {
    fields.add("lastName");
  }
  if (!StringUtil.equalsIgnoreCase(middleName,user.getMiddleName())) {
    fields.add("middleName");
  }
  if (prefixId != contact.getPrefixId()) {
    fields.add("prefix");
  }
  if (!StringUtil.equalsIgnoreCase(screenName,user.getScreenName())) {
    fields.add("screenName");
  }
  if (suffixId != contact.getSuffixId()) {
    fields.add("suffix");
  }
  UserFieldException ufe=new UserFieldException();
  for (  String field : fields) {
    if (!UsersAdminUtil.hasUpdateFieldPermission(user,field)) {
      ufe.addField(field);
    }
  }
  if (ufe.hasFields()) {
    throw ufe;
  }
}

{
  UserPermissionUtil.check(getPermissionChecker(),userId,organizationIds,ActionKeys.UPDATE);
  long curUserId=getUserId();
  if (curUserId == userId) {
    emailAddress=emailAddress.trim().toLowerCase();
    User user=userPersistence.findByPrimaryKey(userId);
    if (!emailAddress.equalsIgnoreCase(user.getEmailAddress())) {
      if (!user.hasCompanyMx() && user.hasCompanyMx(emailAddress)) {
        Company company=companyPersistence.findByPrimaryKey(user.getCompanyId());
        if (!company.isStrangersWithMx()) {
          throw new ReservedUserEmailAddressException();
        }
      }
    }
  }
  if (groupIds != null) {
    groupIds=checkGroups(userId,groupIds);
  }
  if (organizationIds != null) {
    organizationIds=checkOrganizations(userId,organizationIds);
  }
  if (roleIds != null) {
    roleIds=checkRoles(userId,roleIds);
  }
  if (userGroupRoles != null) {
    userGroupRoles=checkUserGroupRoles(userId,userGroupRoles);
  }
  return userLocalService.updateUser(userId,oldPassword,newPassword1,newPassword2,passwordReset,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,openId,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,aimSn,facebookSn,icqSn,jabberSn,msnSn,mySpaceSn,skypeSn,twitterSn,ymSn,jobTitle,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,serviceContext);
}

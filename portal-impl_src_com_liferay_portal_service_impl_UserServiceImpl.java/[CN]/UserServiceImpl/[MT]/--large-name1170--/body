{
  UserPermissionUtil.check(getPermissionChecker(),userId,organizationIds,ActionKeys.UPDATE);
  User user=userPersistence.findByPrimaryKey(userId);
  if (addresses != null) {
    UsersAdminUtil.updateAddresses(Contact.class.getName(),user.getContactId(),addresses);
  }
  if (emailAddresses != null) {
    UsersAdminUtil.updateEmailAddresses(Contact.class.getName(),user.getContactId(),emailAddresses);
  }
  if (phones != null) {
    UsersAdminUtil.updatePhones(Contact.class.getName(),user.getContactId(),phones);
  }
  if (websites != null) {
    UsersAdminUtil.updateWebsites(Contact.class.getName(),user.getContactId(),websites);
  }
  if (announcementsDelivers != null) {
    updateAnnouncementsDeliveries(user.getUserId(),announcementsDelivers);
  }
  long curUserId=getUserId();
  if (curUserId == userId) {
    validateUpdatePermission(user,screenName,emailAddress,firstName,middleName,lastName,prefixId,suffixId,birthdayMonth,birthdayDay,birthdayYear,male,jobTitle);
    emailAddress=StringUtil.toLowerCase(emailAddress.trim());
    if (!StringUtil.equalsIgnoreCase(emailAddress,user.getEmailAddress())) {
      validateEmailAddress(user,emailAddress);
    }
  }
  long[] oldGroupIds=user.getGroupIds();
  List<Long> addGroupIds=new ArrayList<Long>();
  List<Long> removeGroupIds=ListUtil.toList(oldGroupIds);
  if (groupIds != null) {
    groupIds=checkGroups(userId,groupIds);
    for (    long groupId : groupIds) {
      if (ArrayUtil.contains(oldGroupIds,groupId)) {
        removeGroupIds.remove(groupId);
      }
 else {
        addGroupIds.add(groupId);
      }
    }
    if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) {
      SiteMembershipPolicyUtil.checkMembership(new long[]{userId},ArrayUtil.toLongArray(addGroupIds),ArrayUtil.toLongArray(removeGroupIds));
    }
  }
  long[] oldOrganizationIds=user.getOrganizationIds();
  List<Long> addOrganizationIds=new ArrayList<Long>();
  List<Long> removeOrganizationIds=ListUtil.toList(oldOrganizationIds);
  if (organizationIds != null) {
    organizationIds=checkOrganizations(userId,organizationIds);
    for (    long organizationId : organizationIds) {
      if (ArrayUtil.contains(oldOrganizationIds,organizationId)) {
        removeOrganizationIds.remove(organizationId);
      }
 else {
        addOrganizationIds.add(organizationId);
      }
    }
    if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) {
      OrganizationMembershipPolicyUtil.checkMembership(new long[]{userId},ArrayUtil.toLongArray(addOrganizationIds),ArrayUtil.toLongArray(removeOrganizationIds));
    }
  }
  long[] oldRoleIds=user.getRoleIds();
  List<Long> addRoleIds=new ArrayList<Long>();
  List<Long> removeRoleIds=ListUtil.toList(oldRoleIds);
  if (roleIds != null) {
    roleIds=checkRoles(userId,roleIds);
    for (    long roleId : roleIds) {
      if (ArrayUtil.contains(oldRoleIds,roleId)) {
        removeRoleIds.remove(roleId);
      }
 else {
        addRoleIds.add(roleId);
      }
    }
    if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) {
      RoleMembershipPolicyUtil.checkRoles(new long[]{userId},ArrayUtil.toLongArray(addRoleIds),ArrayUtil.toLongArray(removeRoleIds));
    }
  }
  List<UserGroupRole> oldOrganizationUserGroupRoles=new ArrayList<UserGroupRole>();
  List<UserGroupRole> oldSiteUserGroupRoles=new ArrayList<UserGroupRole>();
  List<UserGroupRole> oldUserGroupRoles=userGroupRolePersistence.findByUserId(userId);
  for (  UserGroupRole oldUserGroupRole : oldUserGroupRoles) {
    Role role=oldUserGroupRole.getRole();
    if (role.getType() == RoleConstants.TYPE_ORGANIZATION) {
      oldOrganizationUserGroupRoles.add(oldUserGroupRole);
    }
 else     if (role.getType() == RoleConstants.TYPE_SITE) {
      oldSiteUserGroupRoles.add(oldUserGroupRole);
    }
  }
  List<UserGroupRole> addOrganizationUserGroupRoles=new ArrayList<UserGroupRole>();
  List<UserGroupRole> removeOrganizationUserGroupRoles=ListUtil.copy(oldOrganizationUserGroupRoles);
  List<UserGroupRole> addSiteUserGroupRoles=new ArrayList<UserGroupRole>();
  List<UserGroupRole> removeSiteUserGroupRoles=ListUtil.copy(oldSiteUserGroupRoles);
  if (userGroupRoles != null) {
    userGroupRoles=checkUserGroupRoles(userId,userGroupRoles);
    for (    UserGroupRole userGroupRole : userGroupRoles) {
      Role role=userGroupRole.getRole();
      if (role.getType() == RoleConstants.TYPE_ORGANIZATION) {
        if (oldOrganizationUserGroupRoles.contains(userGroupRole)) {
          removeOrganizationUserGroupRoles.remove(userGroupRole);
        }
 else {
          addOrganizationUserGroupRoles.add(userGroupRole);
        }
      }
 else       if (role.getType() == RoleConstants.TYPE_SITE) {
        if (oldSiteUserGroupRoles.contains(userGroupRole)) {
          removeSiteUserGroupRoles.remove(userGroupRole);
        }
 else {
          addSiteUserGroupRoles.add(userGroupRole);
        }
      }
    }
    if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) {
      OrganizationMembershipPolicyUtil.checkRoles(addOrganizationUserGroupRoles,removeOrganizationUserGroupRoles);
    }
    if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) {
      SiteMembershipPolicyUtil.checkRoles(addSiteUserGroupRoles,removeSiteUserGroupRoles);
    }
  }
  long[] oldUserGroupIds=user.getUserGroupIds();
  List<Long> addUserGroupIds=new ArrayList<Long>();
  List<Long> removeUserGroupIds=ListUtil.toList(oldUserGroupIds);
  if (userGroupIds != null) {
    userGroupIds=checkUserGroupIds(userId,userGroupIds);
    for (    long userGroupId : userGroupIds) {
      if (ArrayUtil.contains(oldUserGroupIds,userGroupId)) {
        removeUserGroupIds.remove(userGroupId);
      }
 else {
        addUserGroupIds.add(userGroupId);
      }
    }
    if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) {
      UserGroupMembershipPolicyUtil.checkMembership(new long[]{userId},ArrayUtil.toLongArray(addUserGroupIds),ArrayUtil.toLongArray(removeUserGroupIds));
    }
  }
  user=userLocalService.updateUser(userId,oldPassword,newPassword1,newPassword2,passwordReset,reminderQueryQuestion,reminderQueryAnswer,screenName,emailAddress,facebookId,openId,languageId,timeZoneId,greeting,comments,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,smsSn,aimSn,facebookSn,icqSn,jabberSn,msnSn,mySpaceSn,skypeSn,twitterSn,ymSn,jobTitle,groupIds,organizationIds,roleIds,userGroupRoles,userGroupIds,portrait,portraitBytes,serviceContext);
  if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) {
    SiteMembershipPolicyUtil.propagateMembership(new long[]{user.getUserId()},ArrayUtil.toLongArray(addGroupIds),ArrayUtil.toLongArray(removeGroupIds));
  }
  if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) {
    OrganizationMembershipPolicyUtil.propagateMembership(new long[]{user.getUserId()},ArrayUtil.toLongArray(addOrganizationIds),ArrayUtil.toLongArray(removeOrganizationIds));
  }
  if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) {
    RoleMembershipPolicyUtil.propagateRoles(new long[]{user.getUserId()},ArrayUtil.toLongArray(addRoleIds),ArrayUtil.toLongArray(removeRoleIds));
  }
  if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) {
    SiteMembershipPolicyUtil.propagateRoles(addSiteUserGroupRoles,removeSiteUserGroupRoles);
  }
  if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) {
    OrganizationMembershipPolicyUtil.propagateRoles(addOrganizationUserGroupRoles,removeOrganizationUserGroupRoles);
  }
  if (!addUserGroupIds.isEmpty() || !removeGroupIds.isEmpty()) {
    UserGroupMembershipPolicyUtil.propagateMembership(new long[]{user.getUserId()},ArrayUtil.toLongArray(addUserGroupIds),ArrayUtil.toLongArray(removeUserGroupIds));
  }
  return user;
}

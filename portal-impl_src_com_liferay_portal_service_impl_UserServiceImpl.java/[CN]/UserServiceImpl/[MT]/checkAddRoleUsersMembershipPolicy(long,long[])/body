{
  MembershipPolicyException membershipPolicyException=null;
  Role role=rolePersistence.findByPrimaryKey(roleId);
  for (  long userId : userIds) {
    User user=userPersistence.findByPrimaryKey(userId);
    if (MembershipPolicyUtil.isMembershipAllowed(role,user)) {
      continue;
    }
    if (membershipPolicyException == null) {
      membershipPolicyException=new MembershipPolicyException(MembershipPolicyException.ROLE_MEMBERSHIP_NOT_ALLOWED);
      membershipPolicyException.addRole(role);
    }
    membershipPolicyException.addUser(user);
  }
  if (membershipPolicyException != null) {
    throw membershipPolicyException;
  }
}

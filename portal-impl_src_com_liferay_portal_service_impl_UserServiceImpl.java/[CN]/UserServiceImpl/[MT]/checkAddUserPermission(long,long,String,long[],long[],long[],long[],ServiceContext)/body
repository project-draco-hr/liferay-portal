{
  Company company=companyPersistence.findByPrimaryKey(companyId);
  if (groupIds != null) {
    checkGroups(0,groupIds);
  }
  if (organizationIds != null) {
    checkOrganizations(0,organizationIds);
  }
  if (roleIds != null) {
    checkRoles(0,roleIds);
  }
  if (userGroupIds != null) {
    checkUserGroupIds(0,userGroupIds);
  }
  boolean anonymousUser=ParamUtil.getBoolean(serviceContext,"anonymousUser");
  long defaultUserId=userLocalService.getDefaultUserId(companyId);
  if (((creatorUserId != 0) && (creatorUserId != defaultUserId)) || (!company.isStrangers() && !anonymousUser)) {
    PermissionChecker permissionChecker=getPermissionChecker();
    if (!PortalPermissionUtil.contains(permissionChecker,ActionKeys.ADD_USER) && !OrganizationPermissionUtil.contains(getPermissionChecker(),organizationIds,ActionKeys.ASSIGN_MEMBERS)) {
      throw new PrincipalException.MustHavePermission(permissionChecker,Organization.class.getName(),0,ActionKeys.ADD_USER,ActionKeys.ASSIGN_MEMBERS);
    }
  }
  if ((creatorUserId == 0) || (creatorUserId == defaultUserId)) {
    if (!company.isStrangersWithMx() && company.hasCompanyMx(emailAddress)) {
      throw new UserEmailAddressException.MustNotUseCompanyMx(emailAddress);
    }
  }
}

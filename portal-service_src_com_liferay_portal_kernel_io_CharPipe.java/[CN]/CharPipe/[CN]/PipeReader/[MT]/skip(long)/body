{
  if (skip < 0) {
    throw new IllegalArgumentException("skip value is negative");
  }
  if (closed) {
    throw new IOException("Stream closed");
  }
  int skipBufferSize=(int)Math.min(skip,_MAX_SKIP_BUFFER_SIZE);
  bufferLock.lock();
  try {
    if ((_skipBuffer == null) || (_skipBuffer.length < skipBufferSize)) {
      _skipBuffer=new char[skipBufferSize];
    }
    long remaining=skip;
    while (remaining > 0) {
      int skipped=read(_skipBuffer,0,(int)Math.min(remaining,skipBufferSize));
      if (skipped == -1) {
        break;
      }
      remaining-=skipped;
    }
    return skip - remaining;
  }
  finally {
    bufferLock.unlock();
  }
}

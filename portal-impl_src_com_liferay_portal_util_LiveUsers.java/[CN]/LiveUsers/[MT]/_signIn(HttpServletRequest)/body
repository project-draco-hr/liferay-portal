{
  HttpSession ses=req.getSession();
  long companyId=CompanyThreadLocal.getCompanyId();
  long userId=GetterUtil.getLong(req.getRemoteUser());
  _updateGroupStatus(userId,true);
  Map<String,UserTracker> sessionUsers=_getSessionUsers();
  List<UserTracker> userTrackers=_getUserTrackers(userId);
  if (!PropsValues.AUTH_SIMULTANEOUS_LOGINS) {
    if (userTrackers != null) {
      for (      UserTracker userTracker : userTrackers) {
        userTracker.getHttpSession().setAttribute(WebKeys.STALE_SESSION,Boolean.TRUE);
      }
    }
  }
  UserTracker userTracker=sessionUsers.get(ses.getId());
  if ((userTracker == null) && (PropsValues.SESSION_TRACKER_MEMORY_ENABLED)) {
    userTracker=UserTrackerUtil.create(0);
    userTracker.setCompanyId(companyId);
    userTracker.setUserId(userId);
    userTracker.setModifiedDate(new Date());
    userTracker.setHttpSession(ses);
    userTracker.setRemoteAddr(req.getRemoteAddr());
    userTracker.setRemoteHost(req.getRemoteHost());
    userTracker.setUserAgent(req.getHeader(HttpHeaders.USER_AGENT));
    sessionUsers.put(ses.getId(),userTracker);
    _addUserTracker(userId,userTracker);
  }
}

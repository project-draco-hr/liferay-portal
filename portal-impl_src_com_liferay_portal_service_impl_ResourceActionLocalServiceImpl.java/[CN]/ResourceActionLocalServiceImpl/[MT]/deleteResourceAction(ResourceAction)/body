{
  final String name=resourceAction.getName();
  final long bitwiseValue=resourceAction.getBitwiseValue();
  ActionableDynamicQuery.AddCriteriaMethod addCriteriaMethod=new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property nameProperty=PropertyFactoryUtil.forName("name");
      dynamicQuery.add(nameProperty.eq(name));
    }
  }
;
  for (  Company company : companyLocalService.getCompanies()) {
    if (resourceBlockLocalService.isSupported(resourceAction.getName())) {
      ActionableDynamicQuery resourceBlockActionableDynamicQuery=resourceBlockLocalService.getActionableDynamicQuery();
      resourceBlockActionableDynamicQuery.setCompanyId(company.getCompanyId());
      resourceBlockActionableDynamicQuery.setAddCriteriaMethod(addCriteriaMethod);
      resourceBlockActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<ResourceBlock>(){
        @Override public void performAction(        ResourceBlock resourceBlock){
          ResourceBlockPermissionsContainer resourceBlockPermissionsContainer=resourceBlockPermissionLocalService.getResourceBlockPermissionsContainer(resourceBlock.getResourceBlockId());
          Set<Long> roleIds=resourceBlockPermissionsContainer.getRoleIds();
          for (          long roleId : roleIds) {
            resourceBlockPermissionsContainer.removePermission(roleId,bitwiseValue);
            resourceBlockPermissionLocalService.updateResourceBlockPermission(resourceBlock.getResourceBlockId(),roleId,bitwiseValue,ResourceBlockConstants.OPERATOR_REMOVE);
          }
          resourceBlock.setPermissionsHash(resourceBlockPermissionsContainer.getPermissionsHash());
          resourceBlockPersistence.update(resourceBlock);
        }
      }
);
      try {
        resourceBlockActionableDynamicQuery.performActions();
      }
 catch (      PortalException pe) {
        throw new SystemException(pe);
      }
      ActionableDynamicQuery resourceTypeActionableDynamicQuery=resourceTypePermissionLocalService.getActionableDynamicQuery();
      resourceTypeActionableDynamicQuery.setCompanyId(company.getCompanyId());
      resourceTypeActionableDynamicQuery.setAddCriteriaMethod(addCriteriaMethod);
      resourceTypeActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<ResourceTypePermission>(){
        @Override public void performAction(        ResourceTypePermission resourceTypePermission){
          long actionIds=resourceTypePermission.getActionIds();
          if ((actionIds & bitwiseValue) != 0) {
            resourceTypePermission.setActionIds(actionIds & (~bitwiseValue));
            resourceTypePermissionPersistence.update(resourceTypePermission);
          }
        }
      }
);
      try {
        resourceTypeActionableDynamicQuery.performActions();
      }
 catch (      PortalException pe) {
        throw new SystemException(pe);
      }
    }
 else {
      ActionableDynamicQuery actionableDynamicQuery=resourcePermissionLocalService.getActionableDynamicQuery();
      actionableDynamicQuery.setCompanyId(company.getCompanyId());
      actionableDynamicQuery.setAddCriteriaMethod(addCriteriaMethod);
      actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<ResourcePermission>(){
        @Override public void performAction(        ResourcePermission resourcePermission){
          long actionIds=resourcePermission.getActionIds();
          if ((actionIds & bitwiseValue) != 0) {
            actionIds&=~bitwiseValue;
            resourcePermission.setActionIds(actionIds);
            resourcePermission.setViewActionId(actionIds % 2 == 1);
            resourcePermissionPersistence.update(resourcePermission);
          }
        }
      }
);
      try {
        actionableDynamicQuery.performActions();
      }
 catch (      PortalException pe) {
        throw new SystemException(pe);
      }
    }
  }
  _resourceActions.remove(encodeKey(resourceAction.getName(),resourceAction.getActionId()));
  resourceActionPersistence.remove(resourceAction);
  PermissionCacheUtil.clearCache();
  return resourceAction;
}

{
  if ((actionIds.size() > Long.SIZE) || ((actionIds.size() == Long.SIZE) && !actionIds.contains(ActionKeys.VIEW))) {
    throw new SystemException("There are too many actions for resource " + name);
  }
  List<ResourceAction> resourceActions=getResourceActions(name);
  LinkedList<Long> availableBitwiseValues=new LinkedList<>();
  long bitwiseValue=2;
  for (int i=0; i < Long.SIZE - 1; i++) {
    availableBitwiseValues.add(bitwiseValue);
    bitwiseValue=bitwiseValue << 1;
  }
  for (  ResourceAction resourceAction : resourceActions) {
    availableBitwiseValues.remove(resourceAction.getBitwiseValue());
  }
  List<ResourceAction> newResourceActions=null;
  for (  String actionId : actionIds) {
    String key=encodeKey(name,actionId);
    ResourceAction resourceAction=_resourceActions.get(key);
    if (resourceAction != null) {
      continue;
    }
    resourceAction=resourceActionPersistence.fetchByN_A(name,actionId);
    if (resourceAction == null) {
      if (actionId.equals(ActionKeys.VIEW)) {
        bitwiseValue=1;
      }
 else {
        bitwiseValue=availableBitwiseValues.pop();
      }
      try {
        resourceAction=resourceActionLocalService.addResourceAction(name,actionId,bitwiseValue);
      }
 catch (      Throwable t) {
        resourceAction=resourceActionLocalService.addResourceAction(name,actionId,bitwiseValue);
      }
      if (newResourceActions == null) {
        newResourceActions=new ArrayList<>();
      }
      newResourceActions.add(resourceAction);
    }
    _resourceActions.put(key,resourceAction);
  }
  if (!addDefaultActions || (newResourceActions == null)) {
    return;
  }
  List<String> groupDefaultActions=ResourceActionsUtil.getModelResourceGroupDefaultActions(name);
  List<String> guestDefaultActions=ResourceActionsUtil.getModelResourceGuestDefaultActions(name);
  long guestBitwiseValue=0;
  long ownerBitwiseValue=0;
  long siteMemberBitwiseValue=0;
  for (  ResourceAction resourceAction : newResourceActions) {
    String actionId=resourceAction.getActionId();
    if (guestDefaultActions.contains(actionId)) {
      guestBitwiseValue|=resourceAction.getBitwiseValue();
    }
    ownerBitwiseValue|=resourceAction.getBitwiseValue();
    if (groupDefaultActions.contains(actionId)) {
      siteMemberBitwiseValue|=resourceAction.getBitwiseValue();
    }
  }
  if (guestBitwiseValue > 0) {
    resourcePermissionLocalService.addResourcePermissions(name,RoleConstants.GUEST,ResourceConstants.SCOPE_INDIVIDUAL,guestBitwiseValue);
  }
  if (ownerBitwiseValue > 0) {
    resourcePermissionLocalService.addResourcePermissions(name,RoleConstants.OWNER,ResourceConstants.SCOPE_INDIVIDUAL,ownerBitwiseValue);
  }
  if (siteMemberBitwiseValue > 0) {
    resourcePermissionLocalService.addResourcePermissions(name,RoleConstants.SITE_MEMBER,ResourceConstants.SCOPE_INDIVIDUAL,siteMemberBitwiseValue);
  }
}

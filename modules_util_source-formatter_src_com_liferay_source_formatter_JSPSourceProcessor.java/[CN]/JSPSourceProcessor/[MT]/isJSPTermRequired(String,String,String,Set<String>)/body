{
  if (checkedForUnusedJSPTerm.contains(fileName)) {
    return false;
  }
  checkedForUnusedJSPTerm.add(fileName);
  String content=_jspContents.get(fileName);
  if (Validator.isNull(content)) {
    return false;
  }
  Pattern pattern=Pattern.compile(regex);
  Matcher matcher=pattern.matcher(content);
  if (matcher.find() && (!type.equals("variable") || (checkedForUnusedJSPTerm.size() > 1) || matcher.find())) {
    return true;
  }
  if (!_checkedForIncludesFileNames.contains(fileName)) {
    _includeFileNames.addAll(getJSPIncludeFileNames(fileName,_includeFileNames));
    _includeFileNames.addAll(getJSPReferenceFileNames(fileName,_includeFileNames));
  }
  _checkedForIncludesFileNames.add(fileName);
  String[] includeFileNamesArray=_includeFileNames.toArray(new String[_includeFileNames.size()]);
  for (  String includeFileName : includeFileNamesArray) {
    if (!checkedForUnusedJSPTerm.contains(includeFileName) && isJSPTermRequired(includeFileName,regex,type,checkedForUnusedJSPTerm)) {
      return true;
    }
  }
  return false;
}

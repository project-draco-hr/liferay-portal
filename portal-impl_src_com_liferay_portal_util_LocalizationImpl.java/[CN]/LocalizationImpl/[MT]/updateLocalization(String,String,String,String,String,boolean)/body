{
  xml=_sanitizeXML(xml);
  XMLStreamReader xmlStreamReader=null;
  XMLStreamWriter xmlStreamWriter=null;
  ClassLoader portalClassLoader=PortalClassLoaderUtil.getClassLoader();
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    if (contextClassLoader != portalClassLoader) {
      currentThread.setContextClassLoader(portalClassLoader);
    }
    XMLInputFactory xmlInputFactory=XMLInputFactory.newInstance();
    xmlStreamReader=xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml));
    String availableLocales=StringPool.BLANK;
    if (xmlStreamReader.hasNext()) {
      xmlStreamReader.nextTag();
      availableLocales=xmlStreamReader.getAttributeValue(null,_AVAILABLE_LOCALES);
      if (Validator.isNull(availableLocales)) {
        availableLocales=defaultLanguageId;
      }
      if (availableLocales.indexOf(requestedLanguageId) == -1) {
        availableLocales=StringUtil.add(availableLocales,requestedLanguageId,StringPool.COMMA);
      }
    }
    UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
    XMLOutputFactory xmlOutputFactory=XMLOutputFactory.newInstance();
    xmlStreamWriter=xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter);
    xmlStreamWriter.writeStartDocument();
    xmlStreamWriter.writeStartElement(_ROOT);
    xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES,availableLocales);
    xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE,defaultLanguageId);
    _copyNonExempt(xmlStreamReader,xmlStreamWriter,requestedLanguageId,defaultLanguageId,cdata);
    if (cdata) {
      xmlStreamWriter.writeStartElement(key);
      xmlStreamWriter.writeAttribute(_LANGUAGE_ID,requestedLanguageId);
      xmlStreamWriter.writeCData(value);
      xmlStreamWriter.writeEndElement();
    }
 else {
      xmlStreamWriter.writeStartElement(key);
      xmlStreamWriter.writeAttribute(_LANGUAGE_ID,requestedLanguageId);
      xmlStreamWriter.writeCharacters(value);
      xmlStreamWriter.writeEndElement();
    }
    xmlStreamWriter.writeEndElement();
    xmlStreamWriter.writeEndDocument();
    xmlStreamWriter.close();
    xmlStreamWriter=null;
    xml=unsyncStringWriter.toString();
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
 finally {
    if (contextClassLoader != portalClassLoader) {
      currentThread.setContextClassLoader(contextClassLoader);
    }
    if (xmlStreamReader != null) {
      try {
        xmlStreamReader.close();
      }
 catch (      Exception e) {
      }
    }
    if (xmlStreamWriter != null) {
      try {
        xmlStreamWriter.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return xml;
}

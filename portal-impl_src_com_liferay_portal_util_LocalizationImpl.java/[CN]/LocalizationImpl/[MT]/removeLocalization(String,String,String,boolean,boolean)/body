{
  if (Validator.isNull(xml)) {
    return StringPool.BLANK;
  }
  if (!Validator.isXml(xml)) {
    return xml;
  }
  xml=_sanitizeXML(xml);
  String systemDefaultLanguageId=LocaleUtil.toLanguageId(LocaleUtil.getDefault());
  XMLStreamReader xmlStreamReader=null;
  XMLStreamWriter xmlStreamWriter=null;
  ClassLoader portalClassLoader=ClassLoaderUtil.getPortalClassLoader();
  ClassLoader contextClassLoader=ClassLoaderUtil.getContextClassLoader();
  try {
    if (contextClassLoader != portalClassLoader) {
      ClassLoaderUtil.setContextClassLoader(portalClassLoader);
    }
    XMLInputFactory xmlInputFactory=SecureXMLFactoryProviderUtil.newXMLInputFactory();
    xmlStreamReader=xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml));
    String availableLocales=StringPool.BLANK;
    String defaultLanguageId=StringPool.BLANK;
    if (xmlStreamReader.hasNext()) {
      xmlStreamReader.nextTag();
      availableLocales=xmlStreamReader.getAttributeValue(null,_AVAILABLE_LOCALES);
      defaultLanguageId=xmlStreamReader.getAttributeValue(null,_DEFAULT_LOCALE);
      if (Validator.isNull(defaultLanguageId)) {
        defaultLanguageId=systemDefaultLanguageId;
      }
    }
    if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) {
      availableLocales=StringUtil.removeFromList(availableLocales,requestedLanguageId);
      UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
      XMLOutputFactory xmlOutputFactory=XMLOutputFactory.newInstance();
      xmlStreamWriter=xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter);
      xmlStreamWriter.writeStartDocument();
      xmlStreamWriter.writeStartElement(_ROOT);
      if (localized) {
        xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES,availableLocales);
        xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE,defaultLanguageId);
      }
      _copyNonExempt(xmlStreamReader,xmlStreamWriter,requestedLanguageId,defaultLanguageId,cdata);
      xmlStreamWriter.writeEndElement();
      xmlStreamWriter.writeEndDocument();
      xmlStreamWriter.close();
      xmlStreamWriter=null;
      xml=unsyncStringWriter.toString();
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
 finally {
    if (contextClassLoader != portalClassLoader) {
      ClassLoaderUtil.setContextClassLoader(contextClassLoader);
    }
    if (xmlStreamReader != null) {
      try {
        xmlStreamReader.close();
      }
 catch (      Exception e) {
      }
    }
    if (xmlStreamWriter != null) {
      try {
        xmlStreamWriter.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return xml;
}

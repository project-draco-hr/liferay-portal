{
  BlogsEntryLocalServiceUtil.updateStatus(getUserId(),entry.getEntryId(),WorkflowConstants.STATUS_APPROVED,getServiceContext(entry),new HashMap<String,Serializable>());
  Calendar displayDate=new GregorianCalendar();
  displayDate.add(Calendar.DATE,1);
  entry.setDisplayDate(displayDate.getTime());
  entry.setStatus(WorkflowConstants.STATUS_DRAFT);
  BlogsEntryLocalServiceUtil.updateBlogsEntry(entry);
  entry=BlogsEntryLocalServiceUtil.updateStatus(getUserId(),entry.getEntryId(),WorkflowConstants.STATUS_APPROVED,getServiceContext(entry),new HashMap<String,Serializable>());
  checkSocialActivity(BlogsActivityKeys.UPDATE_ENTRY,1);
  displayDate.add(Calendar.DATE,-2);
  entry.setDisplayDate(displayDate.getTime());
  BlogsEntryLocalServiceUtil.updateBlogsEntry(entry);
  BlogsEntryLocalServiceUtil.checkEntries();
  Assert.assertTrue(isAssetEntryVisible(entry.getEntryId()));
  Assert.assertEquals(1,searchBlogsEntriesCount(group.getGroupId()));
  checkSocialActivity(BlogsActivityKeys.UPDATE_ENTRY,1);
}

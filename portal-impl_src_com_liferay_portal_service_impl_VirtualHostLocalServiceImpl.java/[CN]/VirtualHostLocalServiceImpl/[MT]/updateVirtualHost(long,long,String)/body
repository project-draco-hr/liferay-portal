{
  VirtualHost virtualHost=virtualHostPersistence.fetchByC_L(companyId,layoutSetId);
  if (virtualHost == null) {
    long virtualHostId=counterLocalService.increment();
    virtualHost=virtualHostPersistence.create(virtualHostId);
    virtualHost.setCompanyId(companyId);
    virtualHost.setLayoutSetId(layoutSetId);
  }
  virtualHost.setHostname(hostname);
  virtualHostPersistence.update(virtualHost);
  final Company company=companyPersistence.fetchByPrimaryKey(companyId);
  if (company != null) {
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      @Override public Void call() throws Exception {
        EntityCacheUtil.removeResult(company.isEntityCacheEnabled(),company.getClass(),company.getPrimaryKeyObj());
        return null;
      }
    }
);
    companyPersistence.clearCache(company);
  }
  LayoutSet layoutSet=layoutSetPersistence.fetchByPrimaryKey(layoutSetId);
  if ((layoutSet == null) && Validator.isNotNull(PropsValues.VIRTUAL_HOSTS_DEFAULT_SITE_NAME)) {
    Group group=groupPersistence.fetchByC_GK(companyId,PropsValues.VIRTUAL_HOSTS_DEFAULT_SITE_NAME);
    if (group != null) {
      layoutSet=layoutSetPersistence.fetchByG_P(group.getGroupId(),false);
    }
  }
  if (layoutSet != null) {
    final LayoutSet cachedLayoutSet=layoutSet;
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      @Override public Void call() throws Exception {
        EntityCacheUtil.removeResult(cachedLayoutSet.isEntityCacheEnabled(),cachedLayoutSet.getClass(),cachedLayoutSet.getPrimaryKeyObj());
        return null;
      }
    }
);
    layoutSetPersistence.clearCache(cachedLayoutSet);
  }
  return virtualHost;
}

{
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  int page=0;
  if ((end > 0) && (start > 0)) {
    page=end / (end - start);
  }
  jsonObject.put("page",page);
  List<AssetCategory> categories;
  int total=0;
  if (Validator.isNotNull(title)) {
    BaseModelSearchResult<AssetCategory> results=assetCategoryLocalService.searchCategories(CompanyThreadLocal.getCompanyId(),groupId,title,vocabularyId,start,end);
    categories=results.getBaseModels();
    total=results.getLength();
  }
 else {
    categories=getVocabularyCategories(vocabularyId,start,end,null);
    total=getVocabularyCategoriesCount(groupId,vocabularyId);
  }
  jsonObject.put("categories",toJSONArray(categories));
  jsonObject.put("total",total);
  return jsonObject;
}

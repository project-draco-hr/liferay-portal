{
  String name=StringUtil.randomString();
  String description=StringUtil.randomString();
  DDMStructure ddmStructure=addStructure(_recordSetClassNameId,StringUtil.randomString());
  String language=TemplateConstants.LANG_TYPE_FTL;
  String script=getTestTemplateScript(language);
  String type=null;
  String mode=null;
  long[] groupIds=new long[]{group.getGroupId(),_otherGroup.getGroupId()};
  long[] classNameIds=new long[]{_structureClassNameId};
  long[] classPKs=new long[]{ddmStructure.getStructureId()};
  DDMTemplate ddmTemplate=addTemplate(_structureClassNameId,ddmStructure.getStructureId(),_recordSetClassNameId,null,name,description,type,mode,language,script,WorkflowConstants.STATUS_ANY);
  addTemplate(_structureClassNameId,ddmStructure.getStructureId(),_recordSetClassNameId,null,name,StringUtil.randomString(),type,mode,language,script,WorkflowConstants.STATUS_ANY);
  addTemplate(_structureClassNameId,ddmStructure.getStructureId(),_recordSetClassNameId,null,StringUtil.randomString(),description,type,mode,language,script,WorkflowConstants.STATUS_ANY);
  List<DDMTemplate> ddmTemplates=DDMTemplateServiceUtil.search(TestPropsValues.getCompanyId(),groupIds,classNameIds,classPKs,_recordSetClassNameId,name,description,type,mode,language,WorkflowConstants.STATUS_ANY,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  Assert.assertEquals(1,ddmTemplates.size());
  DDMTemplate foundDDMTemplate=ddmTemplates.get(0);
  Assert.assertEquals(ddmTemplate,foundDDMTemplate);
}

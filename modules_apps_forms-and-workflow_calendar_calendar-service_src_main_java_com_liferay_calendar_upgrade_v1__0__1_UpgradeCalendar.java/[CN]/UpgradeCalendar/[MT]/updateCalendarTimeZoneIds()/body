{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    StringBundler sb=new StringBundler(5);
    sb.append("select Calendar.calendarId, CalendarResource.");
    sb.append("classNameId, User_.timeZoneId from Calendar inner ");
    sb.append("join CalendarResource on Calendar.calendarResourceId ");
    sb.append("= CalendarResource.calendarResourceId inner join ");
    sb.append("User_ on CalendarResource.userId = User_.userId");
    try (PreparedStatement ps=connection.prepareStatement(sb.toString());ResultSet rs=ps.executeQuery()){
      long userClassNameId=PortalUtil.getClassNameId(User.class);
      while (rs.next()) {
        long calendarId=rs.getLong(1);
        long classNameId=rs.getLong(2);
        String timeZoneId=null;
        if (classNameId == userClassNameId) {
          timeZoneId=rs.getString(3);
        }
 else {
          timeZoneId=PropsUtil.get(PropsKeys.COMPANY_DEFAULT_TIME_ZONE);
        }
        updateCalendarTimeZoneId(calendarId,timeZoneId);
      }
    }
   }
 }

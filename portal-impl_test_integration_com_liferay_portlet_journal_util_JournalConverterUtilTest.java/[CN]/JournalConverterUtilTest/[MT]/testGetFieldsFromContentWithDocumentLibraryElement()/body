{
  Fields expectedFields=new Fields();
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId(),TestPropsValues.getUserId());
  DLAppTestUtil.populateServiceContext(serviceContext,Constants.ADD,DLFileEntryTypeConstants.FILE_ENTRY_TYPE_ID_ALL,true);
  FileEntry fileEntry=DLAppLocalServiceUtil.addFileEntry(TestPropsValues.getUserId(),group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,"Test 1.txt",ContentTypes.TEXT_PLAIN,RandomTestUtil.randomString().getBytes(),serviceContext);
  Field documentLibraryField=getDocumentLibraryField(fileEntry,_ddmStructure.getStructureId());
  expectedFields.put(documentLibraryField);
  Field fieldsDisplayField=getFieldsDisplayField(_ddmStructure.getStructureId(),"document_library_INSTANCE_4aGOvP3N");
  expectedFields.put(fieldsDisplayField);
  String content=read("test-journal-content-doc-library-field.xml");
  XPath xPathSelector=SAXReaderUtil.createXPath("//dynamic-content");
  Document document=SAXReaderUtil.read(content);
  Element element=(Element)xPathSelector.selectSingleNode(document);
  String[] previewURLs=new String[2];
  previewURLs[0]=DLUtil.getPreviewURL(fileEntry,fileEntry.getFileVersion(),null,StringPool.BLANK,true,true);
  previewURLs[1]=DLUtil.getPreviewURL(fileEntry,fileEntry.getFileVersion(),null,StringPool.BLANK,false,false);
  for (int i=0; i < previewURLs.length; i++) {
    element.addCDATA(previewURLs[i]);
    Fields actualFields=JournalConverterUtil.getDDMFields(_ddmStructure,document.asXML());
    Assert.assertEquals(expectedFields,actualFields);
  }
}

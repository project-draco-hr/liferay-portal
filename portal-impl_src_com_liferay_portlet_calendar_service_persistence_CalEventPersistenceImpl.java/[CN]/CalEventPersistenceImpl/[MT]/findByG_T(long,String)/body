{
  boolean finderClassNameCacheEnabled=CalEventModelImpl.CACHE_ENABLED;
  String finderClassName=CalEvent.class.getName();
  String finderMethodName="findByG_T";
  String[] finderParams=new String[]{Long.class.getName(),String.class.getName()};
  Object[] finderArgs=new Object[]{new Long(groupId),type};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCacheUtil.getResult(finderClassName,finderMethodName,finderParams,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("FROM com.liferay.portlet.calendar.model.CalEvent WHERE ");
      query.append("groupId = ?");
      query.append(" AND ");
      if (type == null) {
        query.append("type_ IS NULL");
      }
 else {
        query.append("type_ = ?");
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("startDate ASC, ");
      query.append("title ASC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (type != null) {
        qPos.add(type);
      }
      List<CalEvent> list=q.list();
      FinderCacheUtil.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      return list;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (List<CalEvent>)result;
  }
}

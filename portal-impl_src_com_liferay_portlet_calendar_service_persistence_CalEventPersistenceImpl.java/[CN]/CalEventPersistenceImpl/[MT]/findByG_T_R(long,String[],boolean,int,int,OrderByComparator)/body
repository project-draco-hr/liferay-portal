{
  Object[] finderArgs=new Object[]{groupId,StringUtil.merge(types),repeating,start,end,orderByComparator};
  List<CalEvent> list=(List<CalEvent>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_G_T_R,finderArgs,this);
  if (list == null) {
    StringBundler query=new StringBundler();
    query.append(_SQL_SELECT_CALEVENT_WHERE);
    boolean conjunctionable=false;
    if (conjunctionable) {
      query.append(WHERE_AND);
    }
    query.append(_FINDER_COLUMN_G_T_R_GROUPID_5);
    conjunctionable=true;
    if ((types == null) || (types.length > 0)) {
      if (conjunctionable) {
        query.append(WHERE_AND);
      }
      query.append(StringPool.OPEN_PARENTHESIS);
      for (int i=0; i < types.length; i++) {
        String type=types[i];
        if (type == null) {
          query.append(_FINDER_COLUMN_G_T_R_TYPE_4);
        }
 else {
          if (type.equals(StringPool.BLANK)) {
            query.append(_FINDER_COLUMN_G_T_R_TYPE_6);
          }
 else {
            query.append(_FINDER_COLUMN_G_T_R_TYPE_5);
          }
        }
        if ((i + 1) < types.length) {
          query.append(WHERE_OR);
        }
      }
      query.append(StringPool.CLOSE_PARENTHESIS);
      conjunctionable=true;
    }
    if (conjunctionable) {
      query.append(WHERE_AND);
    }
    query.append(_FINDER_COLUMN_G_T_R_REPEATING_5);
    conjunctionable=true;
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      query.append(CalEventModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (types != null) {
        qPos.add(types);
      }
      qPos.add(repeating);
      list=(List<CalEvent>)QueryUtil.list(q,getDialect(),start,end);
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FIND_BY_G_T_R,finderArgs);
      }
 else {
        cacheResult(list);
        FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_G_T_R,finderArgs,list);
      }
      closeSession(session);
    }
  }
  return list;
}

{
  StringBundler sb=new StringBundler(14);
  sb.append("select distinct sysobjects.name as table_name, ");
  sb.append("sysindexes.name as index_name FROM sysobjects inner ");
  sb.append("join sysindexes on sysobjects.id = sysindexes.id inner ");
  sb.append("join syscolumns on sysobjects.id = syscolumns.id ");
  sb.append("inner join sysindexkeys on ((sysobjects.id = ");
  sb.append("sysindexkeys.id) and (syscolumns.colid = ");
  sb.append("sysindexkeys.colid) and (sysindexes.indid = ");
  sb.append("sysindexkeys.indid)) inner join systypes on ");
  sb.append("syscolumns.xtype = systypes.xtype where (sysobjects.type ");
  sb.append("= 'U') and (sysobjects.category != 2) and ");
  sb.append(_FILTER_NONUNICODE_DATA_TYPES);
  sb.append(" and ");
  sb.append(_FILTER_EXCLUDED_TABLES);
  sb.append(" order by sysobjects.name, sysindexes.name");
  String sql=sb.toString();
  try (PreparedStatement ps=connection.prepareStatement(sql);ResultSet rs=ps.executeQuery()){
    while (rs.next()) {
      String tableName=rs.getString("table_name");
      if (!isPortalTableName(tableName)) {
        continue;
      }
      String indexName=rs.getString("index_name");
      if (_log.isInfoEnabled()) {
        _log.info("Dropping index " + tableName + "."+ indexName);
      }
      String indexNameUpperCase=StringUtil.toUpperCase(indexName);
      if (indexNameUpperCase.startsWith("PK")) {
        String primaryKeyColumnNames=StringUtil.merge(getPrimaryKeyColumnNames(indexName));
        runSQL("alter table " + tableName + " drop constraint "+ indexName);
        _addPrimaryKeySQLs.add("alter table " + tableName + " add primary key ("+ primaryKeyColumnNames+ ")");
      }
 else {
        runSQL("drop index " + indexName + " on "+ tableName);
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

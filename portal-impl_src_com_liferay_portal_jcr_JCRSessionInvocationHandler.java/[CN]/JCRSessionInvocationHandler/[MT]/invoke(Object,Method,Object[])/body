{
  if (method.getName().equals("close")) {
    if (_log.isDebugEnabled()) {
      _log.debug("closing a session " + _session);
    }
    Iterator<Entry<String,Binary>> iterator=_valuesMap.entrySet().iterator();
    while (iterator.hasNext()) {
      Binary binary=iterator.next().getValue();
      binary.dispose();
      iterator.remove();
    }
    _session.logout();
    _valuesMap=null;
    _session=null;
    return null;
  }
 else   if (method.getName().equals("logout")) {
    if (_log.isDebugEnabled()) {
      _log.debug("skipping logout for session " + _session);
    }
    return null;
  }
 else   if (method.getName().equals("put")) {
    String key=(String)args[0];
    Binary value=(Binary)args[1];
    if (_log.isDebugEnabled()) {
      _log.debug("tacking a Binary in session " + _session);
    }
    _valuesMap.put(key,value);
    return null;
  }
  try {
    return method.invoke(_session,args);
  }
 catch (  InvocationTargetException ite) {
    throw ite.getCause();
  }
catch (  Exception e) {
    throw e;
  }
}

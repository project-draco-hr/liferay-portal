{
  Properties properties=getProperties();
  for (  Map.Entry<Object,Object> entry : properties.entrySet()) {
    String key=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (!key.startsWith("security-manager-get-bean-property[")) {
      continue;
    }
    int x=key.indexOf("[");
    int y=key.indexOf("]",x);
    String servletContextName=key.substring(x + 1,y);
    Set<String> beanPropertyClassNames=SetUtil.fromArray(StringUtil.split(value));
    _getBeanPropertyClassNamesMap.put(servletContextName,beanPropertyClassNames);
    if (_log.isDebugEnabled() && !servletContextName.equals(_PORTAL_SERVLET_CONTEXT_NAME)) {
      Set<String> classNames=new TreeSet<String>(beanPropertyClassNames);
      for (      String className : classNames) {
        _log.debug("Allowing get bean property from " + servletContextName + " on class "+ className);
      }
    }
  }
  Set<String> beanPropertyClassNames=_getBeanPropertyClassNamesMap.get(_PORTAL_SERVLET_CONTEXT_NAME);
  if (beanPropertyClassNames == null) {
    beanPropertyClassNames=getPropertySet("security-manager-get-bean-property");
  }
 else {
    beanPropertyClassNames.addAll(getPropertySet("security-manager-get-bean-property"));
  }
  _getBeanPropertyClassNamesMap.put(_PORTAL_SERVLET_CONTEXT_NAME,beanPropertyClassNames);
  if (_log.isDebugEnabled()) {
    Set<String> classNames=new TreeSet<String>(beanPropertyClassNames);
    for (    String className : classNames) {
      _log.debug("Allowing get bean property from " + _PORTAL_SERVLET_CONTEXT_NAME + " on class "+ className);
    }
  }
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  PortletPreferences prefs=req.getPreferences();
  long messageId=ParamUtil.getLong(req,"messageId");
  long categoryId=ParamUtil.getLong(req,"categoryId");
  long threadId=ParamUtil.getLong(req,"threadId");
  long parentMessageId=ParamUtil.getLong(req,"parentMessageId");
  String subject=ParamUtil.getString(req,"subject");
  String body=ParamUtil.getString(req,"body");
  boolean attachments=ParamUtil.getBoolean(req,"attachments");
  List<ObjectValuePair<String,byte[]>> files=new ArrayList<ObjectValuePair<String,byte[]>>();
  if (attachments) {
    UploadPortletRequest uploadReq=UploadRequestUtil.getUploadPortletRequest(req);
    for (int i=1; i <= 5; i++) {
      File file=uploadReq.getFile("msgFile" + i);
      String fileName=uploadReq.getFileName("msgFile" + i);
      byte[] bytes=FileUtil.getBytes(file);
      if ((bytes != null) && (bytes.length > 0)) {
        ObjectValuePair<String,byte[]> ovp=new ObjectValuePair<String,byte[]>(fileName,bytes);
        files.add(ovp);
      }
    }
  }
  boolean anonymous=ParamUtil.getBoolean(req,"anonymous");
  double priority=ParamUtil.getDouble(req,"priority");
  String[] tagsEntries=StringUtil.split(ParamUtil.getString(req,"tagsEntries"));
  String[] communityPermissions=req.getParameterValues("communityPermissions");
  String[] guestPermissions=req.getParameterValues("guestPermissions");
  MBMessage message=null;
  if (messageId <= 0) {
    if (PropsValues.CAPTCHA_CHECK_PORTLET_MESSAGE_BOARDS_EDIT_MESSAGE) {
      CaptchaUtil.check(req);
    }
    if (threadId <= 0) {
      message=MBMessageServiceUtil.addMessage(categoryId,subject,body,files,anonymous,priority,tagsEntries,prefs,communityPermissions,guestPermissions,themeDisplay);
    }
 else {
      message=MBMessageServiceUtil.addMessage(categoryId,threadId,parentMessageId,subject,body,files,anonymous,priority,tagsEntries,prefs,communityPermissions,guestPermissions,themeDisplay);
    }
  }
 else {
    List<String> existingFiles=new ArrayList<String>();
    for (int i=1; i <= 5; i++) {
      String path=ParamUtil.getString(req,"existingPath" + i);
      if (Validator.isNotNull(path)) {
        existingFiles.add(path);
      }
    }
    message=MBMessageServiceUtil.updateMessage(messageId,subject,body,files,existingFiles,priority,tagsEntries,prefs,themeDisplay);
  }
  PortletURL portletURL=((ActionResponseImpl)res).createRenderURL();
  portletURL.setParameter("struts_action","/message_boards/view_message");
  portletURL.setParameter("messageId",String.valueOf(message.getMessageId()));
  res.sendRedirect(portletURL.toString());
}

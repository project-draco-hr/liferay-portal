{
  Assume.assumeTrue(PropsValues.RETRY_ADVICE_MAX_RETRIES != 0);
  _threadCount=ServiceTestUtil.THREAD_COUNT;
  if ((PropsValues.RETRY_ADVICE_MAX_RETRIES > 0) && (_threadCount > PropsValues.RETRY_ADVICE_MAX_RETRIES)) {
    _threadCount=PropsValues.RETRY_ADVICE_MAX_RETRIES;
  }
  AdvisedSupport advisedSupport=ServiceBeanAopProxy.getAdvisedSupport(PortletPreferencesLocalServiceUtil.getService());
  TargetSource targetSource=advisedSupport.getTargetSource();
  final PortletPreferencesLocalServiceImpl portletPreferencesLocalServiceImpl=(PortletPreferencesLocalServiceImpl)targetSource.getTarget();
  final PortletPreferencesPersistence portletPreferencesPersistence=portletPreferencesLocalServiceImpl.getPortletPreferencesPersistence();
  ReflectionTestUtil.setFieldValue(portletPreferencesLocalServiceImpl,"portletPreferencesPersistence",ProxyUtil.newProxyInstance(PortletPreferencesPersistence.class.getClassLoader(),new Class<?>[]{PortletPreferencesPersistence.class},new SynchronousInvocationHandler(_threadCount,new Runnable(){
    @Override public void run(){
      ReflectionTestUtil.setFieldValue(portletPreferencesLocalServiceImpl,"portletPreferencesPersistence",portletPreferencesPersistence);
    }
  }
,PortletPreferencesPersistence.class.getMethod("update",BaseModel.class),portletPreferencesPersistence)));
}

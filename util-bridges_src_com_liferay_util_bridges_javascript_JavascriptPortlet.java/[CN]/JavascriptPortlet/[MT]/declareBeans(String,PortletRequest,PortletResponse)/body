{
  StringBuilder sb=new StringBuilder();
  sb.append(getGlobalScript());
  sb.append(code);
  String script=sb.toString();
  PortletConfig portletConfig=getPortletConfig();
  PortletContext portletContext=getPortletContext();
  PortletPreferences preferences=req.getPreferences();
  Map<String,String> userInfo=(Map<String,String>)req.getAttribute(PortletRequest.USER_INFO);
  Context cx=Context.enter();
  try {
    Scriptable scope=cx.initStandardObjects();
    Object jsOut=Context.javaToJS(System.out,scope);
    ScriptableObject.putProperty(scope,"out",jsOut);
    ScriptableObject.putProperty(scope,"portletConfig",Context.javaToJS(portletConfig,scope));
    ScriptableObject.putProperty(scope,"portletContext",Context.javaToJS(portletContext,scope));
    ScriptableObject.putProperty(scope,"preferences",Context.javaToJS(preferences,scope));
    ScriptableObject.putProperty(scope,"userInfo",Context.javaToJS(userInfo,scope));
    if (req instanceof ActionRequest) {
      ScriptableObject.putProperty(scope,"actionRequest",Context.javaToJS(req,scope));
    }
 else     if (req instanceof RenderRequest) {
      ScriptableObject.putProperty(scope,"renderRequest",Context.javaToJS(req,scope));
    }
 else     if (req instanceof ResourceRequest) {
      ScriptableObject.putProperty(scope,"resourceRequest",Context.javaToJS(req,scope));
    }
    if (res instanceof ActionResponse) {
      ScriptableObject.putProperty(scope,"actionResponse",Context.javaToJS(res,scope));
      _log.debug("Declaring actionResponse");
    }
 else     if (res instanceof RenderResponse) {
      ScriptableObject.putProperty(scope,"renderResponse",Context.javaToJS(res,scope));
      _log.debug("Declaring renderResponse");
    }
 else     if (res instanceof ResourceResponse) {
      ScriptableObject.putProperty(scope,"resourceResponse",Context.javaToJS(res,scope));
      _log.debug("Declaring resourceResponse");
    }
    Object result=cx.evaluateString(scope,script,"script",1,null);
  }
  finally {
    Context.exit();
  }
}

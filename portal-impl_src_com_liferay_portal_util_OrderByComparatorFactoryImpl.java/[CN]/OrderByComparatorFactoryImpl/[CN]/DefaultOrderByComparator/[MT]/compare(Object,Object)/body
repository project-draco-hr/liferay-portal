{
  for (int i=0; i < _columns.length; i+=2) {
    String columnName=String.valueOf(_columns[i]);
    boolean columnAscending=Boolean.valueOf(String.valueOf(_columns[i + 1]));
    Class<?> columnClass=BeanPropertiesUtil.getObjectTypeSilent(object1,columnName);
    Object columnInstance=null;
    try {
      columnInstance=columnClass.newInstance();
    }
 catch (    Exception e) {
    }
    Object columnValue1=BeanPropertiesUtil.getObjectSilent(object1,columnName);
    Object columnValue2=BeanPropertiesUtil.getObjectSilent(object2,columnName);
    if (columnInstance instanceof Date) {
      Date columnValueDate1=(Date)columnValue1;
      Date columnValueDate2=(Date)columnValue2;
      int value=DateUtil.compareTo(columnValueDate1,columnValueDate2);
      if (value == 0) {
        continue;
      }
      if (columnAscending) {
        return value;
      }
 else {
        return -value;
      }
    }
 else     if (columnInstance instanceof Comparable<?>) {
      Comparable<Object> columnValueComparable1=(Comparable<Object>)columnValue1;
      Comparable<Object> columnValueComparable2=(Comparable<Object>)columnValue2;
      int value=columnValueComparable1.compareTo(columnValueComparable2);
      if (value == 0) {
        continue;
      }
      if (columnAscending) {
        return value;
      }
 else {
        return -value;
      }
    }
  }
  return 0;
}

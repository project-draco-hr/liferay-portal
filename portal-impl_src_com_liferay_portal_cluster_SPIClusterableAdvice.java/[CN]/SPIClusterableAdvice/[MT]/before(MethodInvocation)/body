{
  Clusterable clusterable=findAnnotation(methodInvocation);
  if (clusterable == NullClusterable.NULL_CLUSTERABLE) {
    return null;
  }
  if (!clusterable.onMaster()) {
    return null;
  }
  SPI spi=SPIUtil.getSPI();
  Future<Serializable> futureResult=IntrabandRPCUtil.execute(spi.getRegistrationReference(),new MethodHandlerProcessCallable<Serializable>(ClusterableInvokerUtil.createMethodHandler(clusterable.acceptor(),methodInvocation)));
  Object result=futureResult.get();
  Method method=methodInvocation.getMethod();
  Class<?> returnType=method.getReturnType();
  if (returnType == void.class) {
    result=nullResult;
  }
  return result;
}

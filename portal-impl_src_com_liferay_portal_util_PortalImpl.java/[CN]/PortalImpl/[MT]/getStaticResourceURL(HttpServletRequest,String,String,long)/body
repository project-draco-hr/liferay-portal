{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  Theme theme=themeDisplay.getTheme();
  ColorScheme colorScheme=themeDisplay.getColorScheme();
  Map<String,String[]> parameterMap=null;
  if (Validator.isNotNull(queryString)) {
    parameterMap=HttpUtil.getParameterMap(queryString);
  }
  StringBuilder sb=new StringBuilder();
  sb.append(uri);
  sb.append(StringPool.QUESTION);
  if ((parameterMap == null) || (!parameterMap.containsKey("browserId"))) {
    sb.append(StringPool.AMPERSAND_ENCODED);
    sb.append("browserId=");
    sb.append(BrowserSnifferUtil.getBrowserId(request));
  }
  if (uri.endsWith(".jsp")) {
    if ((parameterMap == null) || (!parameterMap.containsKey("themeId"))) {
      sb.append(StringPool.AMPERSAND_ENCODED);
      sb.append("themeId=");
      sb.append(theme.getThemeId());
    }
    if ((parameterMap == null) || (!parameterMap.containsKey("colorSchemeId"))) {
      sb.append(StringPool.AMPERSAND_ENCODED);
      sb.append("colorSchemeId=");
      sb.append(colorScheme.getColorSchemeId());
    }
  }
  if ((parameterMap == null) || (!parameterMap.containsKey("minifierType"))) {
    String minifierType=StringPool.BLANK;
    if (uri.endsWith(".css") || uri.endsWith("css.jsp")) {
      if (themeDisplay.isThemeCssFastLoad()) {
        minifierType="css";
      }
    }
 else     if (themeDisplay.isThemeJsFastLoad()) {
      minifierType="js";
    }
    if (Validator.isNotNull(minifierType)) {
      sb.append(StringPool.AMPERSAND_ENCODED);
      sb.append("minifierType=");
      sb.append(minifierType);
    }
  }
  if (Validator.isNotNull(queryString)) {
    queryString=StringUtil.replace(queryString,"&",StringPool.AMPERSAND_ENCODED);
    if (!queryString.startsWith(StringPool.AMPERSAND_ENCODED)) {
      sb.append(StringPool.AMPERSAND_ENCODED);
    }
    sb.append(queryString);
  }
  boolean appendedTimestamp=false;
  if (uri.startsWith(StrutsUtil.TEXT_HTML_DIR)) {
    ServletContext servletContext=(ServletContext)request.getAttribute(WebKeys.CTX);
    String uriRealPath=ServletContextUtil.getRealPath(servletContext,uri);
    if (uriRealPath != null) {
      File uriFile=new File(uriRealPath);
      if (uriFile.exists()) {
        sb.append(StringPool.AMPERSAND_ENCODED);
        sb.append("t=");
        sb.append(uriFile.lastModified());
        appendedTimestamp=true;
      }
    }
  }
  if (!appendedTimestamp && ((parameterMap == null) || !parameterMap.containsKey("t"))) {
    sb.append(StringPool.AMPERSAND_ENCODED);
    sb.append("t=");
    sb.append(theme.getTimestamp());
  }
  String url=sb.toString();
  url=StringUtil.replace(url,"?" + StringPool.AMPERSAND_ENCODED,StringPool.QUESTION);
  return url;
}

{
  long userId=0;
  HttpAuthorizationHeader httpAuthorizationHeader=HttpAuthManagerUtil.parse(request);
  String username=httpAuthorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTHPARAM_USERNAME);
  String realm=httpAuthorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTHPARAM_REALM);
  String nonce=httpAuthorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTHPARAM_NONCE);
  String uri=httpAuthorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTHPARAM_URI);
  String response=httpAuthorizationHeader.getAuthParameter(HttpAuthorizationHeader.AUTHPARAM_RESPONSE);
  if (Validator.isNull(username) || Validator.isNull(realm) || Validator.isNull(nonce)|| Validator.isNull(uri)|| Validator.isNull(response)) {
    return userId;
  }
  if (!realm.equals(PORTAL_REALM) || !uri.equals(request.getRequestURI())) {
    return userId;
  }
  if (!NonceUtil.verify(nonce)) {
    return userId;
  }
  long companyId=PortalInstances.getCompanyId(request);
  userId=UserLocalServiceUtil.authenticateForDigest(companyId,username,realm,nonce,request.getMethod(),uri,response);
  return userId;
}

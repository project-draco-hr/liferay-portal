{
  if (!modelName.contains(".model.")) {
    return null;
  }
  String[] parts=StringUtil.split(modelName,StringPool.PERIOD);
  if ((parts.length <= 2) || !parts[parts.length - 2].equals("model")) {
    return null;
  }
  parts[parts.length - 2]="service";
  String serviceName=StringUtil.merge(parts,StringPool.PERIOD) + "LocalServiceUtil";
  String methodName="get" + parts[parts.length - 1];
  Method method=null;
  try {
    Class<?> serviceUtil=Class.forName(serviceName);
    if (Validator.isNumber(primKey)) {
      method=serviceUtil.getMethod(methodName,new Class[]{Long.TYPE});
      return (BaseModel<?>)method.invoke(null,new Long(primKey));
    }
 else {
      method=serviceUtil.getMethod(methodName,new Class[]{String.class});
      return (BaseModel<?>)method.invoke(null,primKey);
    }
  }
 catch (  Exception e) {
    Throwable cause=e.getCause();
    if (cause instanceof PortalException) {
      throw (PortalException)cause;
    }
 else     if (cause instanceof SystemException) {
      throw (SystemException)cause;
    }
 else {
      throw new SystemException(cause);
    }
  }
}

{
  if (_log.isDebugEnabled()) {
    String currentURL=(String)request.getAttribute(WebKeys.CURRENT_URL);
    _log.debug("Current URL " + currentURL + " generates exception: "+ e.getMessage());
  }
  if (e instanceof NoSuchImageException) {
    if (_logWebServerServlet.isWarnEnabled()) {
      _logWebServerServlet.warn(e,e);
    }
  }
 else   if ((e instanceof PortalException) && _log.isDebugEnabled()) {
    if ((e instanceof NoSuchLayoutException) || (e instanceof PrincipalException)) {
      String msg=e.getMessage();
      if (Validator.isNotNull(msg)) {
        _log.debug(msg);
      }
    }
 else {
      _log.debug(e,e);
    }
  }
 else   if ((e instanceof SystemException) && _log.isWarnEnabled()) {
    _log.warn(e,e);
  }
  if (response.isCommitted()) {
    return;
  }
  if (status == 0) {
    if (e instanceof PrincipalException) {
      status=HttpServletResponse.SC_FORBIDDEN;
    }
 else {
      String name=e.getClass().getName();
      name=name.substring(name.lastIndexOf(CharPool.PERIOD) + 1);
      if (name.startsWith("NoSuch") && name.endsWith("Exception")) {
        status=HttpServletResponse.SC_NOT_FOUND;
      }
    }
    if (status == 0) {
      if (PropsValues.TCK_URL) {
        status=HttpServletResponse.SC_INTERNAL_SERVER_ERROR;
      }
 else {
        status=HttpServletResponse.SC_BAD_REQUEST;
      }
    }
  }
  String redirect=null;
  if ((e instanceof NoSuchGroupException) && Validator.isNotNull(PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND)) {
    redirect=PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND;
  }
 else   if ((e instanceof NoSuchLayoutException) && Validator.isNotNull(PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND)) {
    redirect=PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND;
  }
 else   if (PropsValues.LAYOUT_SHOW_HTTP_STATUS) {
    redirect=PATH_MAIN + "/portal/status";
  }
  if (Validator.equals(redirect,request.getRequestURI())) {
    _log.warn("Unable to redirect to not found page: " + redirect);
    redirect=null;
  }
  if (Validator.isNotNull(redirect)) {
    HttpSession session=PortalSessionThreadLocal.getHttpSession();
    if (session == null) {
      session=request.getSession();
    }
    ServletContext servletContext=session.getServletContext();
    response.setStatus(status);
    SessionErrors.add(session,e.getClass(),e);
    RequestDispatcher requestDispatcher=servletContext.getRequestDispatcher(redirect);
    if (requestDispatcher != null) {
      requestDispatcher.forward(request,response);
    }
  }
 else   if (e != null) {
    response.sendError(status,e.getMessage());
  }
 else {
    String currentURL=(String)request.getAttribute(WebKeys.CURRENT_URL);
    response.sendError(status,"Current URL " + currentURL);
  }
}

{
  long userId=0;
  String authorizationHeader=request.getHeader(HttpHeaders.AUTHORIZATION);
  if (Validator.isNull(authorizationHeader)) {
    return userId;
  }
  String[] authorizationArray=authorizationHeader.split("\\s+");
  String authorization=authorizationArray[0];
  String credentials=new String(Base64.decode(authorizationArray[1]));
  if (!StringUtil.equalsIgnoreCase(authorization,HttpServletRequest.BASIC_AUTH)) {
    return userId;
  }
  String[] loginAndPassword=StringUtil.split(credentials,CharPool.COLON);
  String login=HttpUtil.decodeURL(loginAndPassword[0].trim());
  String password=null;
  if (loginAndPassword.length > 1) {
    password=loginAndPassword[1].trim();
  }
  if (login.endsWith("@uid")) {
    int pos=login.indexOf("@uid");
    login=login.substring(0,pos);
  }
 else   if (login.endsWith("@sn")) {
    int pos=login.indexOf("@sn");
    login=login.substring(0,pos);
  }
  try {
    userId=AuthenticatedSessionManagerUtil.getAuthenticatedUserId(request,login,password,null);
  }
 catch (  AuthException ae) {
  }
  return userId;
}

{
  queryString=GetterUtil.getString(queryString);
  columnId=GetterUtil.getString(columnId);
  if (columnPos == null) {
    columnPos=Integer.valueOf(0);
  }
  if (columnCount == null) {
    columnCount=Integer.valueOf(0);
  }
  request.setAttribute(WebKeys.RENDER_PORTLET,portlet);
  request.setAttribute(WebKeys.RENDER_PORTLET_QUERY_STRING,queryString);
  request.setAttribute(WebKeys.RENDER_PORTLET_COLUMN_ID,columnId);
  request.setAttribute(WebKeys.RENDER_PORTLET_COLUMN_POS,columnPos);
  request.setAttribute(WebKeys.RENDER_PORTLET_COLUMN_COUNT,columnCount);
  if (path == null) {
    path="/html/portal/render_portlet.jsp";
  }
  RequestDispatcher requestDispatcher=servletContext.getRequestDispatcher(path);
  UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
  PipingServletResponse pipingServletResponse=new PipingServletResponse(response,unsyncStringWriter);
  requestDispatcher.include(request,pipingServletResponse);
  boolean showPortlet=true;
  Boolean portletConfiguratorVisibility=(Boolean)request.getAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY);
  if (portletConfiguratorVisibility != null) {
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    try {
      if (!PortletPermissionUtil.contains(themeDisplay.getPermissionChecker(),themeDisplay.getPlid(),portlet.getPortletId(),ActionKeys.CONFIGURATION)) {
        showPortlet=false;
      }
    }
 catch (    Exception e) {
      throw new ServletException(e);
    }
    request.removeAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY);
  }
  if (showPortlet) {
    if (writeOutput) {
      response.setContentType(ContentTypes.TEXT_HTML_UTF8);
      unsyncStringWriter.getStringBundler().writeTo(response.getWriter());
      return StringPool.BLANK;
    }
 else {
      return unsyncStringWriter.toString();
    }
  }
 else {
    return StringPool.BLANK;
  }
}

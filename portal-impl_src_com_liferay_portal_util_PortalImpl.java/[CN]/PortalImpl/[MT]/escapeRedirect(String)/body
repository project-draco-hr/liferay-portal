{
  if (Validator.isNull(url) || !HttpUtil.hasDomain(url)) {
    return url;
  }
  String domain=HttpUtil.getDomain(url);
  int pos=domain.indexOf(CharPool.COLON);
  if (pos != -1) {
    domain=domain.substring(0,pos);
  }
  if (!_validPortalDomainCheckDisabled && isValidPortalDomain(domain)) {
    return url;
  }
  String securityMode=PropsValues.REDIRECT_URL_SECURITY_MODE;
  if (securityMode.equals("domain")) {
    String[] allowedDomains=PropsValues.REDIRECT_URL_DOMAINS_ALLOWED;
    if (allowedDomains.length == 0) {
      return url;
    }
    for (    String allowedDomain : allowedDomains) {
      if (allowedDomain.startsWith("*.") && (allowedDomain.regionMatches(1,domain,domain.length() - (allowedDomain.length() - 1),allowedDomain.length() - 1) || allowedDomain.regionMatches(2,domain,0,domain.length()))) {
        return url;
      }
 else       if (allowedDomain.equals(domain)) {
        return url;
      }
    }
    if (_log.isWarnEnabled()) {
      _log.warn("Redirect URL " + url + " is not allowed");
    }
    url=null;
  }
 else   if (securityMode.equals("ip")) {
    String[] allowedIps=PropsValues.REDIRECT_URL_IPS_ALLOWED;
    if (allowedIps.length == 0) {
      return url;
    }
    try {
      InetAddress inetAddress=InetAddress.getByName(domain);
      String hostAddress=inetAddress.getHostAddress();
      boolean serverIpIsHostAddress=_computerAddresses.contains(hostAddress);
      for (      String ip : allowedIps) {
        if ((serverIpIsHostAddress && ip.equals("SERVER_IP")) || ip.equals(hostAddress)) {
          return url;
        }
      }
      if (_log.isWarnEnabled()) {
        _log.warn("Redirect URL " + url + " is not allowed");
      }
    }
 catch (    UnknownHostException uhe) {
      if (_log.isDebugEnabled()) {
        _log.debug("Unable to determine IP for redirect URL " + url);
      }
    }
    url=null;
  }
  return url;
}

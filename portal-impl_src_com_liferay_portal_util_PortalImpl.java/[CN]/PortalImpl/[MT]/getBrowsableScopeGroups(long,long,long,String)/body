{
  List<Group> groups=new ArrayList<>();
  LinkedHashMap<String,Object> params=new LinkedHashMap<>();
  params.put("usersGroups",new Long(userId));
  groups.addAll(0,GroupLocalServiceUtil.search(companyId,null,null,params,QueryUtil.ALL_POS,QueryUtil.ALL_POS));
  List<Organization> organizations=OrganizationLocalServiceUtil.getUserOrganizations(userId);
  for (  Organization organization : organizations) {
    groups.add(0,organization.getGroup());
  }
  if (PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED || PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED) {
    groups.add(0,GroupLocalServiceUtil.getUserGroup(companyId,userId));
  }
  groups.addAll(0,getCurrentAndAncestorSiteGroups(groupId));
  List<Group> filteredGroups=new ArrayList<>();
  for (  Group group : ListUtil.unique(groups)) {
    if (group.hasStagingGroup()) {
      Group stagingGroup=group.getStagingGroup();
      if ((stagingGroup.getGroupId() == groupId) && group.isStagedPortlet(portletId) && !group.isStagedRemotely()&& group.isStagedPortlet(PortletKeys.DOCUMENT_LIBRARY)) {
        filteredGroups.add(stagingGroup);
      }
    }
 else {
      filteredGroups.add(group);
    }
  }
  return filteredGroups;
}

{
  StringBuilder sb=new StringBuilder();
  StringBuffer requestURL=req.getRequestURL();
  if (requestURL != null) {
    sb.append(requestURL.toString());
  }
  String queryString=req.getQueryString();
  if (Validator.isNull(queryString)) {
    return sb.toString();
  }
  String portletId=req.getParameter("p_p_id");
  String redirectParam="redirect";
  if (Validator.isNotNull(portletId)) {
    redirectParam=getPortletNamespace(portletId) + redirectParam;
  }
  Map<String,String[]> parameterMap=HttpUtil.parameterMapFromString(queryString);
  String[] redirectValues=parameterMap.get(redirectParam);
  if ((redirectValues != null) && (redirectValues.length > 0)) {
    String redirect=HttpUtil.decodeURL(GetterUtil.getString(redirectValues[0]));
    int pos=redirect.indexOf(StringPool.QUESTION);
    if (pos != -1) {
      String subqueryString=redirect.substring(pos + 1,redirect.length());
      Map<String,String[]> subparameterMap=HttpUtil.parameterMapFromString(subqueryString);
      String[] subredirectValues=subparameterMap.get(redirectParam);
      if ((subredirectValues != null) && (subredirectValues.length > 0)) {
        String subredirect=HttpUtil.decodeURL(GetterUtil.getString(subredirectValues[0]));
        parameterMap.put(redirectParam,new String[]{subredirect});
        queryString=HttpUtil.parameterMapToString(parameterMap,false);
      }
    }
  }
  sb.append(StringPool.QUESTION);
  sb.append(queryString);
  return sb.toString();
}

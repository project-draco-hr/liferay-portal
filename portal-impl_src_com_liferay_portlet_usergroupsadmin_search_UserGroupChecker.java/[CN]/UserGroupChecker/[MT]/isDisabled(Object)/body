{
  User user=(User)obj;
  Set<Group> mandatoryGroups=MembershipPolicyUtil.getMandatoryGroups(user);
  if ((isChecked(user) && mandatoryGroups.contains(_group)) || (!isChecked(user) && !MembershipPolicyUtil.isMembershipAllowed(_group,user))) {
    return true;
  }
 else {
    try {
      PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
      if (MembershipPolicyUtil.isMembershipProtected(permissionChecker,_group,user)) {
        return true;
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  return super.isDisabled(obj);
}

{
  _flickrItemSelectorCriterion=new FlickrItemSelectorCriterion();
  List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(_testURLItemSelectorReturnType);
  _flickrItemSelectorCriterion.setDesiredItemSelectorReturnTypes(desiredItemSelectorReturnTypes);
  _itemSelectorImpl=new ItemSelectorImpl();
  _itemSelectorCriterionSerializer.addItemSelectorReturnType(_testFileEntryItemSelectorReturnType);
  _itemSelectorCriterionSerializer.addItemSelectorReturnType(_testStringItemSelectorReturnType);
  _itemSelectorCriterionSerializer.addItemSelectorReturnType(_testURLItemSelectorReturnType);
  _itemSelectorImpl.setItemSelectorCriterionSerializer(_itemSelectorCriterionSerializer);
  _mediaItemSelectorCriterion=new MediaItemSelectorCriterion();
  _mediaItemSelectorCriterion.setFileExtension("jpg");
  _mediaItemSelectorCriterion.setMaxSize(2048);
  desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(new TestFileEntryItemSelectorReturnType());
  desiredItemSelectorReturnTypes.add(_testURLItemSelectorReturnType);
  _mediaItemSelectorCriterion.setDesiredItemSelectorReturnTypes(desiredItemSelectorReturnTypes);
  JSONFactoryUtil jsonFactoryUtil=new JSONFactoryUtil();
  jsonFactoryUtil.setJSONFactory(new JSONFactoryImpl());
  Portal portal=mock(Portal.class);
  LiferayPortletResponse liferayPortletResponse=mock(LiferayPortletResponse.class);
  LiferayPortletRequest liferayPortletRequest=getMockPortletRequest(liferayPortletResponse);
  when(portal.getLiferayPortletResponse(Mockito.any(PortletResponse.class))).thenReturn(liferayPortletResponse);
  when(portal.getLiferayPortletRequest(Mockito.any(PortletRequest.class))).thenReturn(liferayPortletRequest);
  Layout layout=mock(Layout.class);
  when(portal.getControlPanelLayout(Mockito.anyLong(),Mockito.any(Group.class))).thenReturn(layout);
  PortalUtil portalUtil=new PortalUtil();
  portalUtil.setPortal(portal);
  PortletURLFactory portletURLFactory=mock(PortletURLFactory.class);
  LiferayPortletURL mockLiferayPortletURL=mock(LiferayPortletURL.class);
  when(portletURLFactory.create(Mockito.any(HttpServletRequest.class),Mockito.anyString(),Mockito.any(Layout.class),Mockito.anyString())).thenReturn(mockLiferayPortletURL);
  PortletURLFactoryUtil portletURLFactoryUtil=new PortletURLFactoryUtil();
  portletURLFactoryUtil.setPortletURLFactory(portletURLFactory);
}

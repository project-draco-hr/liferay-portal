{
  ServiceTrackerMap<String,ServiceWrapper<TrackedOne>> serviceTrackerMap=ServiceTrackerCollections.singleValueMap(TrackedOne.class,"target",ServiceTrackerCustomizers.<TrackedOne>serviceWrapper());
  serviceTrackerMap.open();
  try {
    Map<String,Object> properties=new Hashtable<>();
    properties.put("property","aProperty");
    properties.put("target","aTarget");
    TrackedOne trackedOne=new TrackedOne();
    Registry registry=RegistryUtil.getRegistry();
    ServiceRegistration<TrackedOne> serviceRegistration=registry.registerService(TrackedOne.class,trackedOne,properties);
    ServiceWrapper<TrackedOne> serviceWrapper=serviceTrackerMap.getService("aTarget");
    Assert.assertEquals(trackedOne,serviceWrapper.getService());
    Map<String,Object> serviceWrapperProperties=serviceWrapper.getProperties();
    Assert.assertTrue(serviceWrapperProperties.containsKey("property"));
    Assert.assertTrue(serviceWrapperProperties.containsKey("target"));
    Assert.assertEquals("aProperty",serviceWrapperProperties.get("property"));
    Assert.assertEquals("aTarget",serviceWrapperProperties.get("target"));
    serviceRegistration.unregister();
  }
  finally {
    serviceTrackerMap.close();
  }
}

{
  Map<Path,Path> pathMap=new HashMap<Path,Path>();
  Path remoteFilePath=Paths.get("remoteFile");
  pathMap.put(remoteFilePath,Paths.get("localFile"));
  NoticeableFuture<Map<Path,Path>> noticeableFuture=_nettyRepository.getFiles(pathMap,true);
  Exception exception=new Exception();
  DefaultNoticeableFutureAdvice.setConvertThrowable(exception);
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(NettyRepository.class.getName(),Level.WARNING);
  try {
    Assert.assertTrue(_asyncBroker.takeWithResult(remoteFilePath,new FileResponse(_repositoryPath,FileResponse.FILE_NOT_FOUND,-1,false)));
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Remote file remoteFile is not found",logRecord.getMessage());
  }
  finally {
    captureHandler.close();
  }
  try {
    noticeableFuture.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(exception,ee.getCause());
  }
}

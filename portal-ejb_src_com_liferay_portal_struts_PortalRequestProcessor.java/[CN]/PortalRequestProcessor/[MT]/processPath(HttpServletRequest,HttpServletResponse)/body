{
  String path=super.processPath(req,res);
  HttpSession ses=req.getSession();
  UserTracker userTracker=LiveUsers.getUserTracker(ses.getId());
  if ((userTracker != null) && (path != null) && (!path.equals(_PATH_C))&& (path.indexOf(_PATH_J_SECURITY_CHECK) == -1)&& (path.indexOf(_PATH_PORTAL_PROTECTED) == -1)&& (!_trackerIgnorePaths.contains(path))) {
    StringMaker fullPathSM=new StringMaker();
    fullPathSM.append(path);
    fullPathSM.append(StringPool.QUESTION);
    fullPathSM.append(req.getQueryString());
    UserTrackerPath userTrackerPath=UserTrackerPathUtil.create(StringPool.BLANK);
    userTrackerPath.setUserTrackerId(userTracker.getUserTrackerId());
    userTrackerPath.setPath(fullPathSM.toString());
    userTrackerPath.setPathDate(new Date());
    userTracker.addPath(userTrackerPath);
  }
  String remoteUser=req.getRemoteUser();
  User user=null;
  try {
    user=PortalUtil.getUser(req);
  }
 catch (  Exception e) {
  }
  if ((path != null) && (_lastPaths.contains(path)) && (!_trackerIgnorePaths.contains(path))) {
    boolean saveLastPath=true;
    String strutsAction=req.getParameter("_58_struts_action");
    if ((strutsAction != null) && (strutsAction.equals(_PATH_LOGIN_VIEW))) {
      saveLastPath=false;
    }
    strutsAction=req.getParameter("_2_struts_action");
    if ((strutsAction != null) && (strutsAction.equals(_PATH_MY_ACCOUNT_CREATE_ACCOUNT))) {
      saveLastPath=false;
    }
    if (LiferayWindowState.isPopUp(req)) {
      saveLastPath=false;
    }
    if (saveLastPath) {
      String mainPath=(String)req.getAttribute(WebKeys.MAIN_PATH);
      LastPath lastPath=(LastPath)req.getAttribute(WebKeys.LAST_PATH);
      if (lastPath == null) {
        lastPath=new LastPath(mainPath,path,req.getParameterMap());
      }
      ses.setAttribute(WebKeys.LAST_PATH,lastPath);
    }
  }
  if ((remoteUser != null || user != null) && (path != null) && (path.equals(_PATH_PORTAL_LOGOUT))) {
    return _PATH_PORTAL_LOGOUT;
  }
  if ((remoteUser != null || user != null) && (path != null) && (path.equals(_PATH_PORTAL_CSS) || path.equals(_PATH_PORTAL_CSS_CACHED) || path.equals(_PATH_PORTAL_JAVASCRIPT)|| path.equals(_PATH_PORTAL_JAVASCRIPT_CACHED))) {
    return path;
  }
  if ((remoteUser != null || user != null) && (path != null) && (path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE))) {
    return _PATH_PORTAL_UPDATE_TERMS_OF_USE;
  }
  if ((remoteUser != null) && (user == null)) {
    return _PATH_PORTAL_LOGOUT;
  }
  if ((user != null) && (!user.isAgreedToTermsOfUse())) {
    boolean termsOfUseRequired=GetterUtil.getBoolean(PropsUtil.get(PropsUtil.TERMS_OF_USE_REQUIRED),true);
    if (termsOfUseRequired) {
      return _PATH_PORTAL_TERMS_OF_USE;
    }
  }
  if ((user != null) && (!user.isActive())) {
    SessionErrors.add(req,UserActiveException.class.getName());
    return _PATH_PORTAL_ERROR;
  }
  boolean simultaenousLogins=GetterUtil.getBoolean(PropsUtil.get(PropsUtil.AUTH_SIMULTANEOUS_LOGINS),true);
  if (!simultaenousLogins) {
    Boolean staleSession=(Boolean)ses.getAttribute(WebKeys.STALE_SESSION);
    if ((user != null) && (staleSession != null) && (staleSession.booleanValue())) {
      return _PATH_PORTAL_ERROR;
    }
  }
  if ((user != null) && (user.isPasswordReset())) {
    return _PATH_PORTAL_CHANGE_PASSWORD;
  }
  if (user != null) {
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    List layouts=themeDisplay.getLayouts();
    if ((layouts == null) || (layouts.size() == 0)) {
      SessionErrors.add(req,RequiredLayoutException.class.getName());
      return _PATH_PORTAL_ERROR;
    }
  }
  if (!isPublicPath(path)) {
    if (user == null) {
      SessionErrors.add(req,PrincipalException.class.getName());
      return _PATH_PORTAL_LOGIN;
    }
  }
  ActionMapping mapping=(ActionMapping)moduleConfig.findActionConfig(path);
  if (path.startsWith(_PATH_WSRP)) {
    path=_PATH_WSRP;
  }
 else {
    path=mapping.getPath();
  }
  if (user != null) {
    try {
      if (false) {
        SessionErrors.add(req,RequiredRoleException.class.getName());
        return _PATH_PORTAL_ERROR;
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  if (isPortletPath(path)) {
    try {
      Portlet portlet=null;
      String companyId=PortalUtil.getCompanyId(req);
      String portletId=ParamUtil.getString(req,"p_p_id");
      if (Validator.isNotNull(portletId)) {
        portlet=PortletLocalServiceUtil.getPortletById(companyId,portletId);
      }
      if (portlet == null) {
        String strutsPath=path.substring(1,path.lastIndexOf(StringPool.SLASH));
        portlet=PortletLocalServiceUtil.getPortletByStrutsPath(companyId,strutsPath);
      }
      if (portlet != null && portlet.isActive()) {
        defineObjects(req,res,portlet);
      }
    }
 catch (    Exception e) {
      req.setAttribute(PageContext.EXCEPTION,e);
      path=_PATH_COMMON_ERROR;
    }
  }
  if (SessionErrors.contains(req,LayoutPermissionException.class.getName())) {
    return _PATH_PORTAL_ERROR;
  }
  return path;
}

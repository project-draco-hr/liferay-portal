{
  HttpSession ses=req.getSession();
  String portalURL=PortalUtil.getPortalURL(req,req.isSecure());
  String mainPath=(String)req.getAttribute(WebKeys.MAIN_PATH);
  StringBuffer defaultPathSB=new StringBuffer();
  defaultPathSB.append(portalURL);
  defaultPathSB.append(mainPath);
  defaultPathSB.append(_PATH_PORTAL_LAYOUT);
  boolean forwardByLastPath=GetterUtil.getBoolean(PropsUtil.get(PropsUtil.AUTH_FORWARD_BY_LAST_PATH),true);
  if (!forwardByLastPath) {
    if (req.getRemoteUser() != null) {
      defaultPathSB.append(StringPool.QUESTION);
      defaultPathSB.append("p_l_id");
      defaultPathSB.append(StringPool.EQUAL);
      defaultPathSB.append(LayoutImpl.DEFAULT_PLID);
    }
    return defaultPathSB.toString();
  }
  LastPath lastPath=(LastPath)ses.getAttribute(WebKeys.LAST_PATH);
  if (lastPath == null) {
    return defaultPathSB.toString();
  }
  Map parameterMap=lastPath.getParameterMap();
  if (lastPath.getContextPath().equals(mainPath)) {
    ActionMapping mapping=(ActionMapping)moduleConfig.findActionConfig(lastPath.getPath());
    if ((mapping == null) || (parameterMap == null)) {
      return defaultPathSB.toString();
    }
  }
  StringBuffer lastPathSB=new StringBuffer();
  lastPathSB.append(portalURL);
  lastPathSB.append(lastPath.getContextPath());
  lastPathSB.append(lastPath.getPath());
  lastPathSB.append(Http.parameterMapToString(parameterMap));
  return lastPathSB.toString();
}

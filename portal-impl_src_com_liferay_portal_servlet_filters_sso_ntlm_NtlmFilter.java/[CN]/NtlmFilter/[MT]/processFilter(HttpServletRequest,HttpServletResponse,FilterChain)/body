{
  try {
    long companyId=PortalInstances.getCompanyId(request);
    if (PortalLDAPUtil.isNtlmEnabled(companyId)) {
      String domainController=_filterConfig.getInitParameter("jcifs.http.domainController");
      String domain=_filterConfig.getInitParameter("jcifs.smb.client.domain");
      if ((domainController == null) && (domain == null)) {
        domainController=PrefsPropsUtil.getString(companyId,PropsKeys.NTLM_DOMAIN_CONTROLLER,PropsValues.NTLM_DOMAIN_CONTROLLER);
        domain=PrefsPropsUtil.getString(companyId,PropsKeys.NTLM_DOMAIN,PropsValues.NTLM_DOMAIN);
        _filterConfig.addInitParameter("jcifs.http.domainController",domainController);
        _filterConfig.addInitParameter("jcifs.smb.client.domain",domain);
        super.init(_filterConfig);
        if (_log.isDebugEnabled()) {
          _log.debug("Host " + domainController);
          _log.debug("Domain " + domain);
        }
      }
      String authorization=GetterUtil.getString(request.getHeader(HttpHeaders.AUTHORIZATION));
      if (authorization.startsWith("NTLM")) {
        byte[] src=Base64.decode(authorization.substring(5));
        if (src[8] == 1) {
          UniAddress dc=UniAddress.getByName(Config.getProperty("jcifs.http.domainController"),true);
          byte[] challenge=SmbSession.getChallenge(dc);
          Type1Message type1=new Type1Message(src);
          Type2Message type2=new Type2Message(type1,challenge,null);
          authorization=Base64.encode(type2.toByteArray());
          response.setHeader(HttpHeaders.WWW_AUTHENTICATE,"NTLM " + authorization);
          response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
          response.setContentLength(0);
          response.flushBuffer();
          return;
        }
      }
      String path=request.getPathInfo();
      if (path != null && path.endsWith("/login")) {
        NtlmPasswordAuthentication ntlm=negotiate(request,response,false);
        if (ntlm == null) {
          return;
        }
        String remoteUser=ntlm.getName();
        int pos=remoteUser.indexOf(StringPool.BACK_SLASH);
        if (pos != -1) {
          remoteUser=remoteUser.substring(pos + 1);
        }
        if (_log.isDebugEnabled()) {
          _log.debug("NTLM remote user " + remoteUser);
        }
        request.setAttribute(WebKeys.NTLM_REMOTE_USER,remoteUser);
      }
    }
    filterChain.doFilter(request,response);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

{
  RRule rRule=new RRule();
  List<WeekdayNum> weekdayNums=new ArrayList<>();
  for (  PositionalWeekday positionalWeekday : recurrence.getPositionalWeekdays()) {
    com.google.ical.values.Weekday wday=_weekdaysMap.get(positionalWeekday.getWeekday());
    WeekdayNum weekdayNum=new WeekdayNum(positionalWeekday.getPosition(),wday);
    weekdayNums.add(weekdayNum);
  }
  rRule.setByDay(weekdayNums);
  List<Integer> months=recurrence.getMonths();
  if (months != null) {
    int[] monthsArray=ArrayUtil.toIntArray(months);
    for (int i=0; i < monthsArray.length; i++) {
      monthsArray[i]++;
    }
    rRule.setByMonth(monthsArray);
  }
  rRule.setCount(recurrence.getCount());
  com.google.ical.values.Frequency frequency=com.google.ical.values.Frequency.valueOf(String.valueOf(recurrence.getFrequency()));
  rRule.setFreq(frequency);
  rRule.setInterval(recurrence.getInterval());
  Calendar jCalendar=recurrence.getUntilJCalendar();
  if (jCalendar != null) {
    DateValue dateValue=_toDateValue(jCalendar);
    rRule.setUntil(dateValue);
  }
  String data=rRule.toIcal();
  List<Calendar> exceptionJCalendars=recurrence.getExceptionJCalendars();
  if (!exceptionJCalendars.isEmpty()) {
    DateValue[] dateValues=new DateValue[exceptionJCalendars.size()];
    for (int i=0; i < exceptionJCalendars.size(); i++) {
      dateValues[i]=_toDateValue(exceptionJCalendars.get(i));
    }
    RDateList rDateList=new RDateList(TimeZone.getTimeZone(StringPool.UTC));
    rDateList.setDatesUtc(dateValues);
    rDateList.setName(_EXDATE);
    data=data.concat(StringPool.NEW_LINE).concat(rDateList.toIcal());
  }
  return data;
}

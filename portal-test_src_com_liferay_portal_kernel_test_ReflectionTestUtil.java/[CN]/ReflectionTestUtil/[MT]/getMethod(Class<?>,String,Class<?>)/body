{
  try {
    Method method=clazz.getMethod(methodName,parameterTypes);
    method.setAccessible(true);
    return method;
  }
 catch (  NoSuchMethodException nsme) {
  }
  while (clazz != null) {
    try {
      Method method=clazz.getDeclaredMethod(methodName,parameterTypes);
      method.setAccessible(true);
      return method;
    }
 catch (    NoSuchMethodException nsme) {
      clazz=clazz.getSuperclass();
    }
  }
  ReflectionUtil.throwException(new NoSuchMethodException("No method on " + clazz + " with name "+ methodName+ " and parameter types "+ Arrays.toString(parameterTypes)));
  throw new AssertionError();
}

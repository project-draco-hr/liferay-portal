{
  try {
    Field field=clazz.getField(fieldName);
    field.setAccessible(true);
    _unfinalField(field);
    return field;
  }
 catch (  NoSuchFieldException nsfe) {
  }
catch (  Exception e) {
    ReflectionUtil.throwException(e);
  }
  while (clazz != null) {
    try {
      Field field=clazz.getDeclaredField(fieldName);
      field.setAccessible(true);
      _unfinalField(field);
      return field;
    }
 catch (    NoSuchFieldException nsfe) {
      clazz=clazz.getSuperclass();
    }
catch (    Exception e) {
      ReflectionUtil.throwException(e);
    }
  }
  ReflectionUtil.throwException(new NoSuchFieldException("No field on " + clazz + " with name "+ fieldName));
  throw ReflectionUtil.SHOULD_NEVER_HAPPEN_ERROR;
}

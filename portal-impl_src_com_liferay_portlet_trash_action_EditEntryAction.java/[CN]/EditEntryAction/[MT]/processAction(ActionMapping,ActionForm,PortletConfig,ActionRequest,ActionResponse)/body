{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    List<ObjectValuePair<String,Long>> entryOVPs=null;
    if (cmd.equals(Constants.CHECK)) {
      JSONObject jsonObject=ActionUtil.checkEntry(actionRequest);
      writeJSON(actionRequest,actionResponse,jsonObject);
      return;
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.EMPTY_TRASH)) {
      emptyTrash(actionRequest);
    }
 else     if (cmd.equals(Constants.MOVE)) {
      entryOVPs=moveEntry(actionRequest);
    }
 else     if (cmd.equals(Constants.RENAME)) {
      entryOVPs=restoreRename(actionRequest);
    }
 else     if (cmd.equals(Constants.RESTORE)) {
      entryOVPs=restoreEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.OVERRIDE)) {
      entryOVPs=restoreOverride(actionRequest);
    }
    if (cmd.equals(Constants.RENAME) || cmd.equals(Constants.RESTORE) || cmd.equals(Constants.OVERRIDE)|| cmd.equals(Constants.MOVE)) {
      addRestoreData(actionRequest,entryOVPs);
    }
    String redirect=PortalUtil.escapeRedirect(ParamUtil.getString(actionRequest,"redirect"));
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  Exception e) {
    if (e instanceof RestoreEntryException) {
      RestoreEntryException ree=(RestoreEntryException)e;
      SessionErrors.add(actionRequest,ree.getClass(),ree);
    }
 else     if (e instanceof TrashPermissionException) {
      TrashPermissionException tpe=(TrashPermissionException)e;
      SessionErrors.add(actionRequest,tpe.getClass(),tpe);
    }
 else {
      SessionErrors.add(actionRequest,e.getClass());
    }
    WindowState windowState=actionRequest.getWindowState();
    if (windowState.equals(LiferayWindowState.EXCLUSIVE) || windowState.equals(LiferayWindowState.POP_UP)) {
      sendRedirect(actionRequest,actionResponse);
    }
  }
}

{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    List<ObjectValuePair<String,Long>> entryOVPs=null;
    if (cmd.equals(Constants.CHECK)) {
      JSONObject jsonObject=ActionUtil.checkEntry(actionRequest);
      writeJSON(actionRequest,actionResponse,jsonObject);
      return;
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.EMPTY_TRASH)) {
      emptyTrash(actionRequest);
    }
 else     if (cmd.equals(Constants.MOVE)) {
      entryOVPs=moveEntry(actionRequest);
    }
 else     if (cmd.equals(Constants.RENAME)) {
      entryOVPs=restoreRename(actionRequest);
    }
 else     if (cmd.equals(Constants.RESTORE)) {
      entryOVPs=restoreEntries(actionRequest);
    }
 else     if (cmd.equals(Constants.OVERRIDE)) {
      entryOVPs=restoreOverride(actionRequest);
    }
    if (cmd.equals(Constants.RENAME) || cmd.equals(Constants.RESTORE) || cmd.equals(Constants.OVERRIDE)|| cmd.equals(Constants.MOVE)) {
      addRestoreData((LiferayPortletConfig)portletConfig,actionRequest,entryOVPs);
    }
    sendRedirect(actionRequest,actionResponse);
  }
 catch (  PrincipalException pe) {
    if (pe.getMessage() != null) {
      SessionErrors.add(actionRequest,pe.getMessage());
    }
 else {
      SessionErrors.add(actionRequest,pe.getClass());
    }
  }
catch (  Exception e) {
    SessionErrors.add(actionRequest,e.getClass());
  }
}

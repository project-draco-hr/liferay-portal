{
  ActionableDynamicQuery portletPreferencesActionableDynamicQuery=PortletPreferencesLocalServiceUtil.getActionableDynamicQuery();
  portletPreferencesActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property plidProperty=PropertyFactoryUtil.forName("plid");
      DynamicQuery layoutRevisionDynamicQuery=LayoutRevisionLocalServiceUtil.dynamicQuery();
      layoutRevisionDynamicQuery.setProjection(ProjectionFactoryUtil.property("layoutRevisionId"));
      dynamicQuery.add(plidProperty.in(layoutRevisionDynamicQuery));
    }
  }
);
  portletPreferencesActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<PortletPreferences>(){
    @Override public void performAction(    PortletPreferences portletPreferences) throws PortalException {
      long layoutRevisionId=portletPreferences.getPlid();
      LayoutRevision layoutRevision=LayoutRevisionLocalServiceUtil.getLayoutRevision(layoutRevisionId);
      Layout layout=LayoutLocalServiceUtil.getLayout(layoutRevision.getPlid());
      if (!layout.isTypePortlet()) {
        return;
      }
      LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
      List<Portlet> portlets=layoutTypePortlet.getAllPortlets();
      List<String> portletIds=ListUtil.toList(portlets,Portlet.PORTLET_ID_ACCESSOR);
      if (portletIds.contains(portletPreferences.getPortletId())) {
        return;
      }
      if (_log.isWarnEnabled()) {
        _log.warn("Removing portlet preferences " + portletPreferences.getPortletPreferencesId());
      }
      PortletPreferencesLocalServiceUtil.deletePortletPreferences(portletPreferences);
    }
  }
);
  return portletPreferencesActionableDynamicQuery;
}

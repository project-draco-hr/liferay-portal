{
  Object[] finderArgs=new Object[]{String.valueOf(start),String.valueOf(end),String.valueOf(orderByComparator)};
  List<MBMessageFlag> list=(List<MBMessageFlag>)FinderCacheUtil.getResult(FINDER_PATH_FIND_ALL,finderArgs,this);
  if (list == null) {
    StringBundler query=null;
    String sql=null;
    if (orderByComparator != null) {
      query=new StringBundler(2 + (orderByComparator.getOrderByFields().length * 3));
      query.append(_SQL_SELECT_MBMESSAGEFLAG);
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
      sql=query.toString();
    }
 else {
      sql=_SQL_SELECT_MBMESSAGEFLAG;
    }
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      if (orderByComparator == null) {
        list=(List<MBMessageFlag>)QueryUtil.list(q,getDialect(),start,end,false);
        Collections.sort(list);
      }
 else {
        list=(List<MBMessageFlag>)QueryUtil.list(q,getDialect(),start,end);
      }
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FIND_ALL,finderArgs);
      }
 else {
        cacheResult(list);
        FinderCacheUtil.putResult(FINDER_PATH_FIND_ALL,finderArgs,list);
      }
      closeSession(session);
    }
  }
  return list;
}

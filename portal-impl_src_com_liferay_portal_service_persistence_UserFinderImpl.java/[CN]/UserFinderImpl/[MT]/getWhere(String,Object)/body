{
  String join=StringPool.BLANK;
  if (key.equals("contactTwitterSn")) {
    join=CustomSQLUtil.get(JOIN_BY_CONTACT_TWITTER_SN);
  }
 else   if (key.equals("permission")) {
    join=CustomSQLUtil.get(JOIN_BY_PERMISSION);
  }
 else   if (key.equals("userGroupRole")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUP_ROLE);
  }
 else   if (key.equals("usersGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_GROUPS);
  }
 else   if (key.equals("usersOrgs")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_ORGS);
    if (value instanceof Long[]) {
      Long[] organizationIds=(Long[])value;
      StringBuilder sb=new StringBuilder();
      sb.append("WHERE (");
      for (int i=0; i < organizationIds.length; i++) {
        sb.append("(Users_Orgs.organizationId = ?) ");
        if ((i + 1) < organizationIds.length) {
          sb.append("OR ");
        }
      }
      if (organizationIds.length == 0) {
        sb.append("(Users_Orgs.organizationId = -1) ");
      }
      sb.append(")");
      join=sb.toString();
    }
  }
 else   if (key.equals("usersOrgsTree")) {
    Long[][] leftAndRightOrganizationIds=(Long[][])value;
    StringBuilder sb=new StringBuilder();
    sb.append("WHERE (");
    for (int i=0; i < leftAndRightOrganizationIds.length; i++) {
      sb.append("(Organization_.leftOrganizationId BETWEEN ? AND ?) ");
      if ((i + 1) < leftAndRightOrganizationIds.length) {
        sb.append("OR ");
      }
    }
    sb.append(")");
    join=sb.toString();
  }
 else   if (key.equals("usersPasswordPolicies")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_PASSWORD_POLICIES);
  }
 else   if (key.equals("usersRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_ROLES);
  }
 else   if (key.equals("usersUserGroups")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_USER_GROUPS);
  }
 else   if (key.equals("announcementsDeliveryEmailOrSms")) {
    join=CustomSQLUtil.get(JOIN_BY_ANNOUNCEMENTS_DELIVERY_EMAIL_OR_SMS);
  }
 else   if (key.equals("socialMutualRelation")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_MUTUAL_RELATION);
  }
 else   if (key.equals("socialMutualRelationType")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_MUTUAL_RELATION_TYPE);
  }
 else   if (key.equals("socialRelation")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_RELATION);
  }
 else   if (key.equals("socialRelationType")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_RELATION_TYPE);
  }
 else   if (value instanceof CustomSQLParam) {
    CustomSQLParam customSQLParam=(CustomSQLParam)value;
    join=customSQLParam.getSQL();
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      StringBuilder sb=new StringBuilder();
      sb.append(join.substring(pos + 5,join.length()));
      sb.append(" AND ");
      join=sb.toString();
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

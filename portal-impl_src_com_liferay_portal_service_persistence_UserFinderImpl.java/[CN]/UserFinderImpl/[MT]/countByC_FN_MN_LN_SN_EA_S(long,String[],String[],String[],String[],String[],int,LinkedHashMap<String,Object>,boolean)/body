{
  firstNames=CustomSQLUtil.keywords(firstNames);
  middleNames=CustomSQLUtil.keywords(middleNames);
  lastNames=CustomSQLUtil.keywords(lastNames);
  screenNames=CustomSQLUtil.keywords(screenNames);
  emailAddresses=CustomSQLUtil.keywords(emailAddresses);
  if (params == null) {
    params=_emptyLinkedHashMap;
  }
  Long groupId=(Long)params.get("usersGroups");
  boolean inherit=GetterUtil.getBoolean(params.get("inherit"));
  boolean doUnion=Validator.isNotNull(groupId) && inherit;
  LinkedHashMap<String,Object> params1=params;
  LinkedHashMap<String,Object> params2=null;
  LinkedHashMap<String,Object> params3=null;
  if (doUnion) {
    params2=new LinkedHashMap<String,Object>(params1);
    List<Long> organizationIds=new ArrayList<Long>();
    Group group=GroupLocalServiceUtil.fetchGroup(groupId);
    if ((group != null) && group.isOrganization()) {
      organizationIds.add(groupId);
    }
    List<Organization> organizations=GroupUtil.getOrganizations(groupId);
    for (    Organization organization : organizations) {
      organizationIds.add(organization.getOrganizationId());
    }
    params2.remove("usersGroups");
    params2.put("usersOrgs",organizationIds);
    params3=new LinkedHashMap<String,Object>(params1);
    Long[] userGroupIds=new Long[userGroups.size()];
    for (int i=0; i < userGroups.size(); i++) {
      UserGroup userGroup=userGroups.get(i);
      userGroupIds[i]=userGroup.getUserGroupId();
    }
    params3.remove("usersGroups");
    params3.put("usersUserGroups",userGroupIds);
  }
  Session session=null;
  try {
    session=openSession();
    Set<Long> userIds=new HashSet<Long>();
    userIds.addAll(countByC_FN_MN_LN_SN_EA_S(session,companyId,firstNames,middleNames,lastNames,screenNames,emailAddresses,status,params1,andOperator));
    if (doUnion) {
      userIds.addAll(countByC_FN_MN_LN_SN_EA_S(session,companyId,firstNames,middleNames,lastNames,screenNames,emailAddresses,status,params2,andOperator));
      userIds.addAll(countByC_FN_MN_LN_SN_EA_S(session,companyId,firstNames,middleNames,lastNames,screenNames,emailAddresses,status,params3,andOperator));
    }
    return userIds.size();
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

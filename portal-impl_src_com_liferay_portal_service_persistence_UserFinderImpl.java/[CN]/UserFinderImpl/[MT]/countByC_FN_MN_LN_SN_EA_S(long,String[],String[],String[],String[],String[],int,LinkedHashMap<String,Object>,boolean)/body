{
  firstNames=CustomSQLUtil.keywords(firstNames);
  middleNames=CustomSQLUtil.keywords(middleNames);
  lastNames=CustomSQLUtil.keywords(lastNames);
  screenNames=CustomSQLUtil.keywords(screenNames);
  emailAddresses=CustomSQLUtil.keywords(emailAddresses);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_C_FN_MN_LN_SN_EA_S);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(User_.firstName)",StringPool.LIKE,false,firstNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(User_.middleName)",StringPool.LIKE,false,middleNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(User_.lastName)",StringPool.LIKE,false,lastNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(User_.screenName)",StringPool.LIKE,false,screenNames);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(User_.emailAddress)",StringPool.LIKE,true,emailAddresses);
    if (status == WorkflowConstants.STATUS_ANY) {
      sql=StringUtil.replace(sql,STATUS_SQL,StringPool.BLANK);
    }
    sql=StringUtil.replace(sql,"[$JOIN$]",getJoin(params));
    sql=StringUtil.replace(sql,"[$WHERE$]",getWhere(params));
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    setJoin(qPos,params);
    qPos.add(companyId);
    qPos.add(false);
    qPos.add(firstNames,2);
    qPos.add(middleNames,2);
    qPos.add(lastNames,2);
    qPos.add(screenNames,2);
    qPos.add(emailAddresses,2);
    if (status != WorkflowConstants.STATUS_ANY) {
      qPos.add(status);
    }
    Iterator<Long> itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

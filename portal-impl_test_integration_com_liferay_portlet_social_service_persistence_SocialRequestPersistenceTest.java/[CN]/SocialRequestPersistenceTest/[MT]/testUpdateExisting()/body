{
  long pk=RandomTestUtil.nextLong();
  SocialRequest newSocialRequest=_persistence.create(pk);
  newSocialRequest.setUuid(RandomTestUtil.randomString());
  newSocialRequest.setGroupId(RandomTestUtil.nextLong());
  newSocialRequest.setCompanyId(RandomTestUtil.nextLong());
  newSocialRequest.setUserId(RandomTestUtil.nextLong());
  newSocialRequest.setCreateDate(RandomTestUtil.nextLong());
  newSocialRequest.setModifiedDate(RandomTestUtil.nextLong());
  newSocialRequest.setClassNameId(RandomTestUtil.nextLong());
  newSocialRequest.setClassPK(RandomTestUtil.nextLong());
  newSocialRequest.setType(RandomTestUtil.nextInt());
  newSocialRequest.setExtraData(RandomTestUtil.randomString());
  newSocialRequest.setReceiverUserId(RandomTestUtil.nextLong());
  newSocialRequest.setStatus(RandomTestUtil.nextInt());
  _models.add(_persistence.update(newSocialRequest));
  SocialRequest existingSocialRequest=_persistence.findByPrimaryKey(newSocialRequest.getPrimaryKey());
  Assert.assertEquals(existingSocialRequest.getUuid(),newSocialRequest.getUuid());
  Assert.assertEquals(existingSocialRequest.getRequestId(),newSocialRequest.getRequestId());
  Assert.assertEquals(existingSocialRequest.getGroupId(),newSocialRequest.getGroupId());
  Assert.assertEquals(existingSocialRequest.getCompanyId(),newSocialRequest.getCompanyId());
  Assert.assertEquals(existingSocialRequest.getUserId(),newSocialRequest.getUserId());
  Assert.assertEquals(existingSocialRequest.getCreateDate(),newSocialRequest.getCreateDate());
  Assert.assertEquals(existingSocialRequest.getModifiedDate(),newSocialRequest.getModifiedDate());
  Assert.assertEquals(existingSocialRequest.getClassNameId(),newSocialRequest.getClassNameId());
  Assert.assertEquals(existingSocialRequest.getClassPK(),newSocialRequest.getClassPK());
  Assert.assertEquals(existingSocialRequest.getType(),newSocialRequest.getType());
  Assert.assertEquals(existingSocialRequest.getExtraData(),newSocialRequest.getExtraData());
  Assert.assertEquals(existingSocialRequest.getReceiverUserId(),newSocialRequest.getReceiverUserId());
  Assert.assertEquals(existingSocialRequest.getStatus(),newSocialRequest.getStatus());
}

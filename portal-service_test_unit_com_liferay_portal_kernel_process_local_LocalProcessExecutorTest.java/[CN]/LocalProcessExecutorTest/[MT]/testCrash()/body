{
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(LocalProcessExecutor.class.getName(),Level.OFF);
  try {
    KillJVMProcessCallable killJVMProcessCallable=new KillJVMProcessCallable(1);
    Future<Serializable> future=_localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1),killJVMProcessCallable);
    try {
      future.get();
      Assert.fail();
    }
 catch (    ExecutionException ee) {
      Assert.assertFalse(future.isCancelled());
      Assert.assertTrue(future.isDone());
      Throwable throwable=ee.getCause();
      Assert.assertSame(TerminationProcessException.class,throwable.getClass());
      Assert.assertEquals("Subprocess terminated with exit code 1",throwable.getMessage());
      TerminationProcessException terminationProcessException=(TerminationProcessException)throwable;
      Assert.assertEquals(1,terminationProcessException.getExitCode());
    }
    killJVMProcessCallable=new KillJVMProcessCallable(0);
    future=_localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1),killJVMProcessCallable);
    try {
      future.get();
      Assert.fail();
    }
 catch (    ExecutionException ee) {
      Assert.assertFalse(future.isCancelled());
      Assert.assertTrue(future.isDone());
      Throwable throwable=ee.getCause();
      Assert.assertSame(ProcessException.class,throwable.getClass());
      throwable=throwable.getCause();
      Assert.assertSame(EOFException.class,throwable.getClass());
    }
  }
  finally {
    captureHandler.close();
  }
}

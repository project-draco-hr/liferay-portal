{
  Mockito.when(_zipReader.getEntries()).thenReturn(Arrays.asList("/intro.md","/x/a.md","/y/z/b.md","/y/z/c.md"));
  KBArchive kbArchive=_kbArchiveFactory.createKBArchive(1234L,_zipReader);
  Collection<KBArchive.Folder> folders=kbArchive.getFolders();
  Assert.assertEquals(3,folders.size());
  Iterator<KBArchive.Folder> folderIterator=folders.iterator();
  KBArchive.Folder folder0=folderIterator.next();
  Assert.assertEquals(StringPool.SLASH,folder0.getName());
  Assert.assertEquals("/intro.md",folder0.getIntroFile().getName());
  Assert.assertNull(folder0.getParentFolderIntroFile());
  Assert.assertTrue(folder0.getFiles().isEmpty());
  KBArchive.Folder folder1=folderIterator.next();
  Assert.assertEquals("/x",folder1.getName());
  Assert.assertNull(folder1.getIntroFile());
  Assert.assertNotNull(folder1.getParentFolderIntroFile());
  Assert.assertEquals(1,folder1.getFiles().size());
  KBArchive.Folder folder2=folderIterator.next();
  Assert.assertEquals("/y/z",folder2.getName());
  Assert.assertNull(folder2.getIntroFile());
  Assert.assertNull(folder2.getParentFolderIntroFile());
  Assert.assertEquals(2,folder2.getFiles().size());
}

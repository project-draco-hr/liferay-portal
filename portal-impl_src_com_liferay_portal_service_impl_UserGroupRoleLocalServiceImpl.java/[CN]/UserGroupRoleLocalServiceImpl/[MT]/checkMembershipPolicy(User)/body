{
  LinkedHashMap<String,Object> groupParams=new LinkedHashMap<String,Object>();
  groupParams.put("inheritance",Boolean.FALSE);
  groupParams.put("site",Boolean.TRUE);
  groupParams.put("usersGroups",user.getUserId());
  List<Group> groups=groupLocalService.search(user.getCompanyId(),groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  for (  Group group : groups) {
    Set<Role> mandatoryRoles=MembershipPolicyUtil.getMandatoryRoles(group,user);
    for (    Role role : mandatoryRoles) {
      if (!hasUserGroupRole(user.getUserId(),group.getGroupId(),role.getRoleId(),false)) {
        addUserGroupRoles(user.getUserId(),group.getGroupId(),new long[]{role.getRoleId()});
      }
    }
    Set<Role> forbiddenRoles=MembershipPolicyUtil.getForbiddenRoles(group,user);
    for (    Role role : forbiddenRoles) {
      if (hasUserGroupRole(user.getUserId(),group.getGroupId(),role.getRoleId(),false)) {
        deleteUserGroupRoles(user.getUserId(),group.getGroupId(),new long[]{role.getRoleId()});
      }
    }
  }
}

{
  MembershipPolicy membershipPolicy=MembershipPolicyFactory.getInstance();
  LinkedHashMap<String,Object> groupParams=new LinkedHashMap<String,Object>();
  groupParams.put("inheritance",Boolean.FALSE);
  groupParams.put("site",Boolean.TRUE);
  groupParams.put("usersGroups",new Long(user.getUserId()));
  List<Group> userGroups=groupLocalService.search(user.getCompanyId(),groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  for (  Group userGroup : userGroups) {
    List<Role> mandatoryRoles=membershipPolicy.getMandatoryRoles(userGroup,user);
    for (    Role mandatoryRole : mandatoryRoles) {
      if (!hasUserGroupRole(user.getUserId(),userGroup.getGroupId(),mandatoryRole.getRoleId(),false)) {
        addUserGroupRoles(user.getUserId(),userGroup.getGroupId(),new long[]{mandatoryRole.getRoleId()});
      }
    }
    List<Role> forbiddenRoles=membershipPolicy.getForbiddenRoles(userGroup,user);
    for (    Role forbiddenRole : forbiddenRoles) {
      if (hasUserGroupRole(user.getUserId(),userGroup.getGroupId(),forbiddenRole.getRoleId(),false)) {
        deleteUserGroupRoles(user.getUserId(),userGroup.getGroupId(),new long[]{forbiddenRole.getRoleId()});
      }
    }
  }
}

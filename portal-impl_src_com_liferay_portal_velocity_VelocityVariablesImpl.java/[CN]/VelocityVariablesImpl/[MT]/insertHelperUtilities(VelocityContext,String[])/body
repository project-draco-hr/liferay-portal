{
  velocityContext.put("arrayUtil",ArrayUtil_IW.getInstance());
  velocityContext.put("auditMessageFactoryUtil",AuditMessageFactoryUtil.getAuditMessageFactory());
  velocityContext.put("auditRouterUtil",AuditRouterUtil.getAuditRouter());
  velocityContext.put("browserSniffer",BrowserSnifferUtil.getBrowserSniffer());
  velocityContext.put("dateFormatFactory",FastDateFormatFactoryUtil.getFastDateFormatFactory());
  velocityContext.put("dateTool",new DateTool());
  velocityContext.put("dateUtil",DateUtil_IW.getInstance());
  velocityContext.put("escapeTool",new EscapeTool());
  ServiceLocator serviceLocator=ServiceLocator.getInstance();
  velocityContext.put("expandoColumnLocalService",serviceLocator.findService(ExpandoColumnLocalService.class.getName()));
  velocityContext.put("expandoRowLocalService",serviceLocator.findService(ExpandoRowLocalService.class.getName()));
  velocityContext.put("expandoTableLocalService",serviceLocator.findService(ExpandoTableLocalService.class.getName()));
  velocityContext.put("expandoValueLocalService",serviceLocator.findService(ExpandoValueLocalService.class.getName()));
  velocityContext.put("getterUtil",GetterUtil_IW.getInstance());
  velocityContext.put("htmlUtil",HtmlUtil.getHtml());
  velocityContext.put("httpUtil",HttpUtil.getHttp());
  velocityContext.put("imageToken",WebServerServletTokenUtil.getWebServerServletToken());
  velocityContext.put("iteratorTool",new IteratorTool());
  velocityContext.put("journalContentUtil",JournalContentUtil.getJournalContent());
  velocityContext.put("languageUtil",LanguageUtil.getLanguage());
  velocityContext.put("unicodeLanguageUtil",UnicodeLanguageUtil.getUnicodeLanguage());
  velocityContext.put("listTool",new ListTool());
  velocityContext.put("localeUtil",LocaleUtil.getInstance());
  velocityContext.put("mathTool",new MathTool());
  velocityContext.put("numberTool",new NumberTool());
  velocityContext.put("paramUtil",ParamUtil_IW.getInstance());
  velocityContext.put("webServerToken",WebServerServletTokenUtil.getWebServerServletToken());
  insertHelperUtility(velocityContext,restrictedVariables,"portalUtil",PortalUtil.getPortal());
  insertHelperUtility(velocityContext,restrictedVariables,"portal",PortalUtil.getPortal());
  insertHelperUtility(velocityContext,restrictedVariables,"prefsPropsUtil",PrefsPropsUtil_IW.getInstance());
  insertHelperUtility(velocityContext,restrictedVariables,"propsUtil",PropsUtil_IW.getInstance());
  velocityContext.put("portletURLFactory",PortletURLFactoryUtil.getPortletURLFactory());
  insertHelperUtility(velocityContext,restrictedVariables,"velocityPortletPreferences",new VelocityPortletPreferences());
  velocityContext.put("randomizer",Randomizer_IW.getInstance().getWrappedInstance());
  UtilLocator utilLocator=UtilLocator.getInstance();
  velocityContext.put("saxReaderUtil",utilLocator.findUtil(SAXReader.class.getName()));
  insertHelperUtility(velocityContext,restrictedVariables,"serviceLocator",serviceLocator);
  insertHelperUtility(velocityContext,restrictedVariables,"sessionClicks",SessionClicks_IW.getInstance());
  velocityContext.put("sortTool",new SortTool());
  velocityContext.put("staticFieldGetter",StaticFieldGetter.getInstance());
  velocityContext.put("stringUtil",StringUtil_IW.getInstance());
  velocityContext.put("timeZoneUtil",TimeZoneUtil_IW.getInstance());
  insertHelperUtility(velocityContext,restrictedVariables,"utilLocator",utilLocator);
  velocityContext.put("unicodeFormatter",UnicodeFormatter_IW.getInstance());
  velocityContext.put("validator",Validator_IW.getInstance());
  velocityContext.put("accountPermission",AccountPermissionUtil.getAccountPermission());
  velocityContext.put("commonPermission",CommonPermissionUtil.getCommonPermission());
  velocityContext.put("groupPermission",GroupPermissionUtil.getGroupPermission());
  velocityContext.put("layoutPermission",LayoutPermissionUtil.getLayoutPermission());
  velocityContext.put("organizationPermission",OrganizationPermissionUtil.getOrganizationPermission());
  velocityContext.put("passwordPolicyPermission",PasswordPolicyPermissionUtil.getPasswordPolicyPermission());
  velocityContext.put("portalPermission",PortalPermissionUtil.getPortalPermission());
  velocityContext.put("portletPermission",PortletPermissionUtil.getPortletPermission());
  velocityContext.put("rolePermission",RolePermissionUtil.getRolePermission());
  velocityContext.put("userGroupPermission",UserGroupPermissionUtil.getUserGroupPermission());
  velocityContext.put("userPermission",UserPermissionUtil.getUserPermission());
  velocityContext.put("dateFormats",FastDateFormatFactoryUtil.getFastDateFormatFactory());
  velocityContext.put("locationPermission",OrganizationPermissionUtil.getOrganizationPermission());
}

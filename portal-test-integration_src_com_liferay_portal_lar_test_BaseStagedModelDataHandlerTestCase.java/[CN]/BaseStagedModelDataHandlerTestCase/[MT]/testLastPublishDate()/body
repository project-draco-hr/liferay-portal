{
  if (!supportLastPublishDateUpdate()) {
    return;
  }
  Map<String,List<StagedModel>> dependentStagedModelsMap=new HashMap<>();
  StagedGroupedModel stagedGroupedModel=(StagedGroupedModel)addStagedModel(stagingGroup,dependentStagedModelsMap);
  Assert.assertNull(stagedGroupedModel.getLastPublishDate());
  initExport();
  Map<String,String[]> parameterMap=portletDataContext.getParameterMap();
  parameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE,new String[]{Boolean.TRUE.toString()});
  try {
    ExportImportThreadLocal.setPortletStagingInProcess(true);
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedGroupedModel);
  }
  finally {
    ExportImportThreadLocal.setPortletStagingInProcess(false);
  }
  Assert.assertEquals(portletDataContext.getEndDate(),stagedGroupedModel.getLastPublishDate());
  Date originalLastPublishDate=stagedGroupedModel.getLastPublishDate();
  parameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE,new String[]{Boolean.TRUE.toString()});
  try {
    ExportImportThreadLocal.setPortletStagingInProcess(true);
    StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedGroupedModel);
  }
  finally {
    ExportImportThreadLocal.setPortletStagingInProcess(false);
  }
  Assert.assertEquals(originalLastPublishDate,stagedGroupedModel.getLastPublishDate());
}

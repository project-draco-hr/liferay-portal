{
  if (transactionAttribute.rollbackOn(throwable)) {
    try {
      _platformTransactionManager.rollback(transactionStatus);
    }
 catch (    TransactionSystemException tse) {
      _log.error("Application exception overridden by rollback exception",tse);
      throw tse;
    }
catch (    RuntimeException re) {
      _log.error("Application exception overridden by rollback exception",re);
      throw re;
    }
catch (    Error e) {
      _log.error("Application exception overridden by rollback error",e);
      throw e;
    }
 finally {
      if (transactionStatus.isNewTransaction()) {
        TransactionalPortalCacheHelper.rollback();
        TransactionCommitCallbackUtil.popCallbackList();
      }
    }
  }
 else {
    boolean hasError=false;
    try {
      _platformTransactionManager.commit(transactionStatus);
    }
 catch (    TransactionSystemException tse) {
      _log.error("Application exception overridden by commit exception",tse);
      hasError=true;
      throw tse;
    }
catch (    RuntimeException re) {
      _log.error("Application exception overridden by commit exception",re);
      hasError=true;
      throw re;
    }
catch (    Error e) {
      _log.error("Application exception overridden by commit error",e);
      hasError=true;
      throw e;
    }
 finally {
      if (transactionStatus.isNewTransaction()) {
        if (hasError) {
          TransactionalPortalCacheHelper.rollback();
          TransactionCommitCallbackUtil.popCallbackList();
        }
 else {
          TransactionalPortalCacheHelper.commit();
          invokeCallbacks();
        }
      }
    }
  }
  throw throwable;
}

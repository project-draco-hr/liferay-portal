{
  byte sourceComments=(byte)0;
  Sass_Data_Context sassDataContext=null;
  try {
    Memory pointer=toPointer(input);
    sassDataContext=_sassLibrary.sass_make_data_context(pointer);
    Sass_Options sassOptions=_sassLibrary.sass_make_options();
    _sassLibrary.sass_option_set_image_path(sassOptions,imgPath);
    _sassLibrary.sass_option_set_include_path(sassOptions,includePath);
    _sassLibrary.sass_option_set_output_style(sassOptions,Sass_Output_Style.SASS_STYLE_COMPACT);
    _sassLibrary.sass_option_set_source_comments(sassOptions,sourceComments);
    _sassLibrary.sass_data_context_set_options(sassDataContext,sassOptions);
    _sassLibrary.sass_compile_data_context(sassDataContext);
    Sass_Context sassContext=_sassLibrary.sass_data_context_get_context(sassDataContext);
    int errorStatus=_sassLibrary.sass_context_get_error_status(sassContext);
    if (errorStatus != 0) {
      String errorMessage=_sassLibrary.sass_context_get_error_message(sassContext);
      throw new SassCompilerException(errorMessage);
    }
    String output=_sassLibrary.sass_context_get_output_string(sassContext);
    if (output == null) {
      throw new SassCompilerException("Null output");
    }
    return output;
  }
  finally {
    try {
      if (sassDataContext != null) {
        _sassLibrary.sass_delete_data_context(sassDataContext);
      }
    }
 catch (    Throwable t) {
      throw new SassCompilerException(t);
    }
  }
}

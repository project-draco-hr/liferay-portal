{
  long pk=ServiceTestUtil.nextLong();
  BlogsEntry blogsEntry=_persistence.create(pk);
  blogsEntry.setUuid(ServiceTestUtil.randomString());
  blogsEntry.setGroupId(ServiceTestUtil.nextLong());
  blogsEntry.setCompanyId(ServiceTestUtil.nextLong());
  blogsEntry.setUserId(ServiceTestUtil.nextLong());
  blogsEntry.setUserName(ServiceTestUtil.randomString());
  blogsEntry.setCreateDate(ServiceTestUtil.nextDate());
  blogsEntry.setModifiedDate(ServiceTestUtil.nextDate());
  blogsEntry.setTitle(ServiceTestUtil.randomString());
  blogsEntry.setUrlTitle(ServiceTestUtil.randomString());
  blogsEntry.setDescription(ServiceTestUtil.randomString());
  blogsEntry.setContent(ServiceTestUtil.randomString());
  blogsEntry.setDisplayDate(ServiceTestUtil.nextDate());
  blogsEntry.setAllowPingbacks(ServiceTestUtil.randomBoolean());
  blogsEntry.setAllowTrackbacks(ServiceTestUtil.randomBoolean());
  blogsEntry.setTrackbacks(ServiceTestUtil.randomString());
  blogsEntry.setSmallImage(ServiceTestUtil.randomBoolean());
  blogsEntry.setSmallImageId(ServiceTestUtil.nextLong());
  blogsEntry.setSmallImageURL(ServiceTestUtil.randomString());
  blogsEntry.setStatus(ServiceTestUtil.nextInt());
  blogsEntry.setStatusByUserId(ServiceTestUtil.nextLong());
  blogsEntry.setStatusByUserName(ServiceTestUtil.randomString());
  blogsEntry.setStatusDate(ServiceTestUtil.nextDate());
  _persistence.update(blogsEntry);
  return blogsEntry;
}

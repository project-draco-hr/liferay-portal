{
  boolean success=false;
  JSONArray updatedApps=JSONFactoryUtil.createJSONArray();
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Lock lock=null;
  if (_lockLocalService.isLocked(MarketplaceStorePortlet.class.getName(),"updateAllApps")) {
    writeUpdateAppsJSON(actionRequest,actionResponse,jsonObject,success,updatedApps);
    throw new Exception("updateAllApps task is locked");
  }
  lock=_lockLocalService.lock(MarketplaceStorePortlet.class.getName(),"updateAllApps",StringPool.BLANK);
  String[] appPackageIds=ParamUtil.getParameterValues(actionRequest,"appPackageIds",new String[0]);
  File file=null;
  try {
    for (    String appPackage : appPackageIds) {
      try {
        int appPackageId=Integer.valueOf(appPackage);
        if (appPackageId > 0) {
          file=FileUtil.createTempFile();
          downloadApp(actionRequest,actionResponse,appPackageId,false,file);
          App app=_appService.updateApp(file);
          _appService.installApp(app.getRemoteAppId());
          updatedApps.put(getAppJSONObject(app));
        }
      }
 catch (      NumberFormatException nfe) {
      }
    }
    success=true;
  }
  finally {
    if (file != null) {
      file.delete();
    }
    _lockLocalService.unlock(lock.getClassName(),lock.getKey());
    writeUpdateAppsJSON(actionRequest,actionResponse,jsonObject,success,updatedApps);
  }
}

{
  Folder sourceFolder=sourceLocalRepository.getFolder(folderId);
  Folder destinationFolder=destinationLocalRepository.addFolder(userId,parentFolderId,sourceFolder.getName(),sourceFolder.getDescription(),serviceContext);
  dlAppHelperLocalService.addFolder(userId,destinationFolder,serviceContext);
  List<Object> foldersAndFileEntriesAndFileShortcuts=dlAppService.getFoldersAndFileEntriesAndFileShortcuts(sourceLocalRepository.getRepositoryId(),folderId,WorkflowConstants.STATUS_ANY,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  try {
    for (    Object folderAndFileEntryAndFileShortcut : foldersAndFileEntriesAndFileShortcuts) {
      if (folderAndFileEntryAndFileShortcut instanceof FileEntry) {
        FileEntry fileEntry=(FileEntry)folderAndFileEntryAndFileShortcut;
        copyFileEntry(userId,destinationLocalRepository,fileEntry,destinationFolder.getFolderId(),serviceContext);
      }
 else       if (folderAndFileEntryAndFileShortcut instanceof Folder) {
        Folder folder=(Folder)folderAndFileEntryAndFileShortcut;
        moveFolders(userId,folder.getFolderId(),destinationFolder.getFolderId(),sourceLocalRepository,destinationLocalRepository,serviceContext);
      }
 else       if (folderAndFileEntryAndFileShortcut instanceof DLFileShortcut) {
        if (destinationFolder.isSupportsShortcuts()) {
          DLFileShortcut dlFileShorcut=(DLFileShortcut)folderAndFileEntryAndFileShortcut;
          dlFileShortcutLocalService.addFileShortcut(userId,dlFileShorcut.getGroupId(),destinationFolder.getFolderId(),dlFileShorcut.getToFileEntryId(),serviceContext);
        }
      }
    }
  }
 catch (  PortalException pe) {
    destinationLocalRepository.deleteFolder(destinationFolder.getFolderId());
    throw pe;
  }
  try {
    sourceLocalRepository.deleteFolder(folderId);
  }
 catch (  PortalException pe) {
    destinationLocalRepository.deleteFolder(destinationFolder.getFolderId());
    throw pe;
  }
  return destinationFolder;
}

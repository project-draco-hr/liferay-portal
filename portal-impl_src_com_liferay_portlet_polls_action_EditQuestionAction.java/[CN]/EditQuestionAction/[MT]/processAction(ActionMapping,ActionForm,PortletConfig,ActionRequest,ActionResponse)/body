{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (Validator.isNull(cmd)) {
      return;
    }
 else     if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE) || cmd.equals(Constants.VOTE)) {
      updateQuestion(portletConfig,actionRequest);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteQuestion(actionRequest);
    }
    WindowState windowState=actionRequest.getWindowState();
    if (windowState.equals(LiferayWindowState.POP_UP)) {
      String redirect=PortalUtil.escapeRedirect(ParamUtil.getString(actionRequest,"redirect"));
      if (Validator.isNotNull(redirect)) {
        actionResponse.sendRedirect(redirect);
      }
    }
 else {
      sendRedirect(actionRequest,actionResponse);
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchQuestionException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      setForward(actionRequest,"portlet.polls.error");
    }
 else     if (e instanceof DuplicateVoteException || e instanceof NoSuchChoiceException || e instanceof QuestionChoiceException|| e instanceof QuestionDescriptionException|| e instanceof QuestionExpirationDateException|| e instanceof QuestionTitleException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      SessionErrors.add(actionRequest,portletConfig.getPortletName() + ".hideDefaultError");
    }
 else     if (e instanceof QuestionExpiredException) {
    }
 else {
      throw e;
    }
  }
}

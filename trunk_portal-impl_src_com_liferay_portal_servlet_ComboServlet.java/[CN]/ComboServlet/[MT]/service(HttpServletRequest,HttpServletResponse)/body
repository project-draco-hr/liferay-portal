{
  String contextPath=PortalUtil.getPathContext();
  String[] modulePaths=request.getParameterValues("m");
  if ((modulePaths == null) || (modulePaths.length == 0)) {
    response.sendError(HttpServletResponse.SC_BAD_REQUEST);
    return;
  }
  Arrays.sort(modulePaths);
  String modulePathsString=null;
  byte[][] bytesArray=null;
  if (!PropsValues.COMBO_CHECK_TIMESTAMP) {
    modulePathsString=Arrays.toString(modulePaths);
    bytesArray=_byteArrays.get(modulePathsString);
  }
  String firstModulePath=modulePaths[0];
  String extension=FileUtil.getExtension(firstModulePath);
  if (bytesArray == null) {
    String p=ParamUtil.getString(request,"p");
    String minifierType=ParamUtil.getString(request,"minifierType");
    if (Validator.isNull(minifierType)) {
      minifierType="js";
      if (extension.equalsIgnoreCase(_CSS_EXTENSION)) {
        minifierType="css";
      }
    }
    int length=modulePaths.length;
    bytesArray=new byte[length][];
    for (    String modulePath : modulePaths) {
      byte[] bytes=new byte[0];
      if (Validator.isNotNull(modulePath)) {
        modulePath=StringUtil.replaceFirst(p.concat(modulePath),contextPath,StringPool.BLANK);
        bytes=getFileContent(modulePath,minifierType);
      }
      bytesArray[--length]=bytes;
    }
    if (modulePathsString != null) {
      _byteArrays.put(modulePathsString,bytesArray);
    }
  }
  String contentType=ContentTypes.TEXT_JAVASCRIPT;
  if (extension.equalsIgnoreCase(_CSS_EXTENSION)) {
    contentType=ContentTypes.TEXT_CSS;
  }
  response.setContentType(contentType);
  ServletResponseUtil.write(response,bytesArray);
}

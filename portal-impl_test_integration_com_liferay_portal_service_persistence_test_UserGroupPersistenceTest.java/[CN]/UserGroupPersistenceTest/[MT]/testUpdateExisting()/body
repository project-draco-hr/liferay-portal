{
  long pk=RandomTestUtil.nextLong();
  UserGroup newUserGroup=_persistence.create(pk);
  newUserGroup.setMvccVersion(RandomTestUtil.nextLong());
  newUserGroup.setUuid(RandomTestUtil.randomString());
  newUserGroup.setCompanyId(RandomTestUtil.nextLong());
  newUserGroup.setUserId(RandomTestUtil.nextLong());
  newUserGroup.setUserName(RandomTestUtil.randomString());
  newUserGroup.setCreateDate(RandomTestUtil.nextDate());
  newUserGroup.setModifiedDate(RandomTestUtil.nextDate());
  newUserGroup.setParentUserGroupId(RandomTestUtil.nextLong());
  newUserGroup.setName(RandomTestUtil.randomString());
  newUserGroup.setDescription(RandomTestUtil.randomString());
  newUserGroup.setAddedByLDAPImport(RandomTestUtil.randomBoolean());
  newUserGroup.setLastPublishDate(RandomTestUtil.nextDate());
  _userGroups.add(_persistence.update(newUserGroup));
  UserGroup existingUserGroup=_persistence.findByPrimaryKey(newUserGroup.getPrimaryKey());
  Assert.assertEquals(existingUserGroup.getMvccVersion(),newUserGroup.getMvccVersion());
  Assert.assertEquals(existingUserGroup.getUuid(),newUserGroup.getUuid());
  Assert.assertEquals(existingUserGroup.getUserGroupId(),newUserGroup.getUserGroupId());
  Assert.assertEquals(existingUserGroup.getCompanyId(),newUserGroup.getCompanyId());
  Assert.assertEquals(existingUserGroup.getUserId(),newUserGroup.getUserId());
  Assert.assertEquals(existingUserGroup.getUserName(),newUserGroup.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingUserGroup.getCreateDate()),Time.getShortTimestamp(newUserGroup.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingUserGroup.getModifiedDate()),Time.getShortTimestamp(newUserGroup.getModifiedDate()));
  Assert.assertEquals(existingUserGroup.getParentUserGroupId(),newUserGroup.getParentUserGroupId());
  Assert.assertEquals(existingUserGroup.getName(),newUserGroup.getName());
  Assert.assertEquals(existingUserGroup.getDescription(),newUserGroup.getDescription());
  Assert.assertEquals(existingUserGroup.getAddedByLDAPImport(),newUserGroup.getAddedByLDAPImport());
  Assert.assertEquals(Time.getShortTimestamp(existingUserGroup.getLastPublishDate()),Time.getShortTimestamp(newUserGroup.getLastPublishDate()));
}

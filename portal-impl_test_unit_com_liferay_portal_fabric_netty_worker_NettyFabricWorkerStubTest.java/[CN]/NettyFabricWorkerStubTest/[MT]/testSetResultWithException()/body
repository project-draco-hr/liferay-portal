{
  final DefaultNoticeableFuture<Map<Path,Path>> defaultNoticeableFuture=new DefaultNoticeableFuture<Map<Path,Path>>();
  NettyFabricWorkerStub<String> nettyFabricWorkerStub=new NettyFabricWorkerStub<String>(0,NettyTestUtil.createEmptyEmbeddedChannel(),new MockRepository(){
    @Override public NoticeableFuture<Map<Path,Path>> getFiles(    Map<Path,Path> pathMap,    boolean deleteAfterFetch){
      return defaultNoticeableFuture;
    }
  }
,Collections.<Path,Path>emptyMap(),0);
  nettyFabricWorkerStub.setResult("Test result");
  NoticeableFuture<String> noticeableFuture=nettyFabricWorkerStub.getProcessNoticeableFuture();
  Assert.assertFalse(noticeableFuture.isDone());
  Throwable throwable=new Throwable();
  defaultNoticeableFuture.setException(throwable);
  try {
    defaultNoticeableFuture.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(throwable,ee.getCause());
  }
}

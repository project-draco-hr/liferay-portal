{
  List<Layout> junctionAncestors=(List)req.getAttribute(WebKeys.LAYOUT_JUNCTION_ANCESTORS);
  if (junctionAncestors != null) {
    return junctionAncestors;
  }
  HttpSession ses=req.getSession();
  junctionAncestors=new ArrayList<Layout>();
  Layout layout=this;
  long junctionPlid=layout.getPlid();
  Set<Long> visitedPlids=new HashSet<Long>();
  while (true) {
    junctionAncestors.add(layout);
    junctionAncestors.addAll(layout.getAncestors());
    Layout rootLayout=junctionAncestors.get(junctionAncestors.size() - 1);
    junctionPlid=rootLayout.getJunctionPlid();
    if (junctionPlid <= 0) {
      break;
    }
    if (!visitedPlids.add(junctionPlid)) {
      break;
    }
    layout=LayoutLocalServiceUtil.getLayout(junctionPlid);
    Long extensionTargetPlid=new Long(rootLayout.getPlid());
    String key=_getJunctionLayoutKey(junctionPlid,false);
    ses.setAttribute(key,rootLayout.getPlid());
    Properties typeSettingsProperties=layout.getTypeSettingsProperties();
    boolean deepHistory=GetterUtil.getBoolean(typeSettingsProperties.getProperty("deep-history"));
    if (deepHistory) {
      key=_getJunctionLayoutKey(rootLayout.getPlid(),true);
      if (layout.getPlid() != rootLayout.getPlid()) {
        ses.setAttribute(key,layout.getPlid());
      }
 else {
        ses.removeAttribute(key);
      }
    }
  }
  req.setAttribute(WebKeys.LAYOUT_JUNCTION_ANCESTORS,junctionAncestors);
  return junctionAncestors;
}

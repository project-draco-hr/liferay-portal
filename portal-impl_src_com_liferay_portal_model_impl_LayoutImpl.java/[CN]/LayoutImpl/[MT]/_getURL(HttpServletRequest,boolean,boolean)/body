{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  if (resetMaxState) {
    Layout layout=themeDisplay.getLayout();
    LayoutTypePortlet layoutTypePortlet=null;
    if (layout.equals(this)) {
      layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
    }
 else {
      try {
        layoutTypePortlet=_getLayoutTypePortletClone(req);
      }
 catch (      IOException ioe) {
        _log.error("Unable to clone layout settings",ioe);
        layoutTypePortlet=(LayoutTypePortlet)getLayoutType();
      }
    }
    if (layoutTypePortlet.hasStateMax()) {
      String portletId=StringUtil.split(layoutTypePortlet.getStateMax())[0];
      PortletURLImpl portletURLImpl=new PortletURLImpl(req,portletId,getPlid(),true);
      try {
        portletURLImpl.setWindowState(WindowState.NORMAL);
        portletURLImpl.setPortletMode(PortletMode.VIEW);
      }
 catch (      PortletException pe) {
        throw new SystemException(pe);
      }
      portletURLImpl.setAnchor(false);
      if (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {
        portletURLImpl.setParameter("p_l_reset","0");
      }
 else       if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET && resetRenderParameters) {
        portletURLImpl.setParameter("p_l_reset","1");
      }
      return portletURLImpl.toString();
    }
  }
  String url=PortalUtil.getLayoutURL(this,themeDisplay);
  if (!CookieUtil.hasSessionIdCookie(req)) {
    url=PortalUtil.getURLWithSessionId(url,req.getSession().getId());
  }
  if (!resetMaxState && !resetMaxState) {
    return url;
  }
  if (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {
    url=Http.addParameter(url,"p_l_reset",0);
  }
 else   if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET && resetRenderParameters) {
    url=Http.addParameter(url,"p_l_reset",1);
  }
  return url;
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  if (resetMaxState) {
    Layout layout=themeDisplay.getLayout();
    LayoutTypePortlet layoutTypePortlet=null;
    if (layout.equals(this)) {
      layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
    }
 else {
      try {
        layoutTypePortlet=_getLayoutTypePortletClone(request);
      }
 catch (      IOException ioe) {
        _log.error("Unable to clone layout settings",ioe);
        layoutTypePortlet=(LayoutTypePortlet)getLayoutType();
      }
    }
    if (layoutTypePortlet.hasStateMax()) {
      String portletId=StringUtil.split(layoutTypePortlet.getStateMax())[0];
      LiferayPortletURL portletURL=PortletURLFactoryUtil.create(request,portletId,getPlid(),PortletRequest.ACTION_PHASE);
      try {
        portletURL.setWindowState(WindowState.NORMAL);
        portletURL.setPortletMode(PortletMode.VIEW);
      }
 catch (      PortletException pe) {
        throw new SystemException(pe);
      }
      portletURL.setAnchor(false);
      if (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {
        portletURL.setParameter("p_l_reset","0");
      }
 else       if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET && resetRenderParameters) {
        portletURL.setParameter("p_l_reset","1");
      }
      return portletURL.toString();
    }
  }
  String portalURL=PortalUtil.getPortalURL(request);
  String url=PortalUtil.getLayoutURL(this,themeDisplay);
  if (!CookieKeys.hasSessionId(request) && (url.startsWith(portalURL) || url.startsWith(StringPool.SLASH))) {
    HttpSession session=request.getSession();
    url=PortalUtil.getURLWithSessionId(url,session.getId());
  }
  if (!resetMaxState) {
    return url;
  }
  if (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {
    url=HttpUtil.addParameter(url,"p_l_reset",0);
  }
 else   if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET && resetRenderParameters) {
    url=HttpUtil.addParameter(url,"p_l_reset",1);
  }
  return url;
}

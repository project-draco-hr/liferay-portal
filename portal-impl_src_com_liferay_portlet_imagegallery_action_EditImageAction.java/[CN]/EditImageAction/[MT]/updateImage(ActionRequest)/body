{
  UploadPortletRequest uploadReq=PortalUtil.getUploadPortletRequest(req);
  long imageId=ParamUtil.getLong(uploadReq,"imageId");
  long folderId=ParamUtil.getLong(uploadReq,"folderId");
  String description=ParamUtil.getString(uploadReq,"description");
  if (Validator.isNull(description)) {
    description=uploadReq.getFileName("file");
  }
  File file=uploadReq.getFile("file");
  String contentType=getContentType(uploadReq,file);
  if (contentType.equals("application/octet-stream")) {
    String ext=GetterUtil.getString(FileUtil.getExtension(file.getName())).toLowerCase();
    if (Validator.isNotNull(ext)) {
      if (ext.equals("jpg")) {
        ext="jpeg";
      }
 else       if (ext.equals("tif")) {
        ext="tiff";
      }
      contentType="image/" + ext;
    }
  }
  String[] tagsEntries=StringUtil.split(ParamUtil.getString(uploadReq,"tagsEntries"));
  String[] communityPermissions=req.getParameterValues("communityPermissions");
  String[] guestPermissions=req.getParameterValues("guestPermissions");
  if (imageId <= 0) {
    IGImage image=IGImageServiceUtil.addImage(folderId,description,file,contentType,tagsEntries,communityPermissions,guestPermissions);
    AssetPublisherUtil.addAndStoreSelection(req,IGImage.class.getName(),image.getImageId(),-1);
  }
 else {
    String fileName=uploadReq.getFileName("file");
    if (Validator.isNull(fileName)) {
      file=null;
    }
    IGImageServiceUtil.updateImage(imageId,folderId,description,file,contentType,tagsEntries);
  }
  AssetPublisherUtil.addRecentFolderId(req,IGImage.class.getName(),folderId);
}

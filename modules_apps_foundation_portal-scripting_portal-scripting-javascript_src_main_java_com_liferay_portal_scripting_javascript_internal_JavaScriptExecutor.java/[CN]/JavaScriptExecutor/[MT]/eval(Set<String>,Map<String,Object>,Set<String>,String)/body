{
  Script compiledScript=getCompiledScript(script);
  try {
    Context context=Context.enter();
    Scriptable scriptable=context.initStandardObjects();
    Class<?> clazz=getClass();
    context.setApplicationClassLoader(clazz.getClassLoader());
    for (    Map.Entry<String,Object> entry : inputObjects.entrySet()) {
      String key=entry.getKey();
      Object value=entry.getValue();
      ScriptableObject.putProperty(scriptable,key,Context.javaToJS(value,scriptable));
    }
    if (allowedClasses != null) {
      context.setClassShutter(new JavaScriptClassVisibilityChecker(allowedClasses,_forbiddenClassNames));
    }
    compiledScript.exec(context,scriptable);
    if (outputNames == null) {
      return null;
    }
    Map<String,Object> outputObjects=new HashMap<>();
    for (    String outputName : outputNames) {
      Object property=ScriptableObject.getProperty(scriptable,outputName);
      if (property instanceof Wrapper) {
        Wrapper wrapper=(Wrapper)property;
        property=wrapper.unwrap();
      }
      outputObjects.put(outputName,property);
    }
    return outputObjects;
  }
 catch (  Exception e) {
    throw new ScriptingException(e.getMessage() + "\n\n",e);
  }
 finally {
    Context.exit();
  }
}

{
  DDMForm ddmForm=new DDMForm();
  ddmForm.setAvailableLocales(createAvailableLocales(LocaleUtil.US));
  ddmForm.setDefaultLocale(LocaleUtil.US);
  DDMFormField textDDMFormField=new DDMFormField("Text","text");
  textDDMFormField.setDataType("string");
  textDDMFormField.setLocalizable(true);
  textDDMFormField.setRepeatable(true);
  ddmForm.addDDMFormField(textDDMFormField);
  DDMFormField textAreaDDMFormField=new DDMFormField("TextArea","textarea");
  textAreaDDMFormField.setDataType("string");
  textAreaDDMFormField.setLocalizable(true);
  textAreaDDMFormField.setRepeatable(true);
  ddmForm.addDDMFormField(textAreaDDMFormField);
  DDMFormField integerDDMFormField=new DDMFormField("Integer","ddm-integer");
  integerDDMFormField.setDataType("integer");
  integerDDMFormField.setLocalizable(false);
  integerDDMFormField.setRepeatable(false);
  ddmForm.addDDMFormField(integerDDMFormField);
  DDMFormValues ddmFormValues=new DDMFormValues(ddmForm);
  ddmFormValues.setAvailableLocales(createAvailableLocales(LocaleUtil.BRAZIL,LocaleUtil.US));
  ddmFormValues.setDefaultLocale(LocaleUtil.US);
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("srfa","Text",createLocalizedValue("En Text Value 1","Pt Text Value 1",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("ealq","Text",createLocalizedValue("En Text Value 2","Pt Text Value 2",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("elcy","TextArea",createLocalizedValue("En Text Area Value 1","Pt Text Area Value 1",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("uxyj","TextArea",createLocalizedValue("En Text Area Value 2","Pt Text Area Value 2",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("eepy","TextArea",createLocalizedValue("En Text Area Value 3","Pt Text Area Value 3",LocaleUtil.US)));
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("ckkp","Integer",new UnlocalizedValue("1")));
  Document document=SAXReaderUtil.createDocument();
  Element rootElement=document.addElement("root");
  rootElement.addAttribute("default-locale","en_US");
  rootElement.addAttribute("available-locales","en_US,pt_BR");
  addDynamicElementElement(rootElement,"Text",new String[]{"En Text Value 1","En Text Value 2"},new String[]{"Pt Text Value 1","Pt Text Value 2"});
  addDynamicElementElement(rootElement,"TextArea",new String[]{"En Text Area Value 1","En Text Area Value 2","En Text Area Value 3"},new String[]{"Pt Text Area Value 1","Pt Text Area Value 2","Pt Text Area Value 3"});
  addDynamicElementElement(rootElement,"Integer",new String[]{"1"});
  addDynamicElementElement(rootElement,"_fieldsDisplay",new String[]{"Text_INSTANCE_srfa,Text_INSTANCE_ealq," + "TextArea_INSTANCE_elcy,TextArea_INSTANCE_uxyj," + "TextArea_INSTANCE_eepy,Integer_INSTANCE_ckkp"});
  String expectedJSON=DDMFormValuesJSONSerializerUtil.serialize(ddmFormValues);
  UpgradeDynamicDataMapping upgradeDynamicDataMapping=new UpgradeDynamicDataMapping();
  DDMFormValues actualDDMFormValues=upgradeDynamicDataMapping.getDDMFormValues(ddmForm,document.asXML());
  String actualJSON=upgradeDynamicDataMapping.toJSON(actualDDMFormValues);
  JSONAssert.assertEquals(expectedJSON,actualJSON,false);
}

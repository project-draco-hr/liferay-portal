{
  ClusterMessageType requestType=clusterRequest.getMessageType();
  ClusterNodeResponse clusterNodeResponse=new ClusterNodeResponse();
  if (requestType.equals(ClusterMessageType.NOTIFY) || requestType.equals(ClusterMessageType.UPDATE)) {
    ClusterNode clusterNode=clusterRequest.getOriginatingClusterNode();
    if (clusterNode != null) {
      _clusterExecutorImpl.memberJoined(new AddressImpl(sourceAddress),clusterNode);
      clusterNodeResponse.setClusterNode(clusterNode);
      clusterNodeResponse.setMessageType(requestType);
    }
 else {
      if (_log.isWarnEnabled()) {
        _log.warn("Content of Notify Message does not " + "contain ClusterNode information");
      }
      return;
    }
  }
 else {
    clusterNodeResponse.setMulticast(clusterRequest.isMulticast());
    clusterNodeResponse.setUuid(clusterRequest.getUuid());
    clusterNodeResponse.setMessageType(ClusterMessageType.EXECUTE);
    MethodWrapper methodWrapper=clusterRequest.getMethodWrapper();
    if (methodWrapper != null) {
      try {
        Object returnValue=MethodInvoker.invoke(methodWrapper);
        if (returnValue instanceof Serializable) {
          clusterNodeResponse.setResult(returnValue);
        }
 else         if (returnValue != null) {
          clusterNodeResponse.setException(new ClusterException("Return value is not serializable"));
        }
      }
 catch (      Exception e) {
        clusterNodeResponse.setException(e);
      }
    }
 else {
      clusterNodeResponse.setException(new ClusterException("Payload is not of type " + MethodWrapper.class.getName()));
    }
  }
  try {
    _clusterExecutorImpl.getControlChannel().send(sourceAddress,localAddress,clusterNodeResponse);
  }
 catch (  ChannelException ce) {
    _log.error("Unable to send response message " + clusterNodeResponse,ce);
  }
catch (  Throwable t) {
    _log.error(t,t);
  }
}

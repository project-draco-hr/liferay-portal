{
  String name=RandomTestUtil.randomString(NumericStringRandomizerBumper.INSTANCE,UniqueStringRandomizerBumper.INSTANCE);
  Group group=GroupLocalServiceUtil.fetchGroup(TestPropsValues.getCompanyId(),name);
  if (group != null) {
    return group;
  }
  Map<Locale,String> nameMap=new HashMap<>();
  nameMap.put(LocaleUtil.getDefault(),name);
  Map<Locale,String> descriptionMap=new HashMap<>();
  descriptionMap.put(LocaleUtil.getDefault(),RandomTestUtil.randomString());
  int type=GroupConstants.TYPE_SITE_OPEN;
  String friendlyURL=StringPool.SLASH + FriendlyURLNormalizerUtil.normalize(name);
  boolean site=true;
  boolean active=true;
  boolean manualMembership=true;
  int membershipRestriction=GroupConstants.DEFAULT_MEMBERSHIP_RESTRICTION;
  if (serviceContext == null) {
    serviceContext=ServiceContextTestUtil.getServiceContext();
  }
  return GroupServiceUtil.addGroup(parentGroupId,GroupConstants.DEFAULT_LIVE_GROUP_ID,nameMap,descriptionMap,type,manualMembership,membershipRestriction,friendlyURL,site,active,serviceContext);
}

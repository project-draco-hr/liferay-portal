{
  if (pageContext != null) {
    response=new PipingServletResponse(response,pageContext.getOut());
  }
  String portletId=portletName;
  RestrictPortletServletRequest restrictPortletServletRequest=new RestrictPortletServletRequest(request);
  request=DynamicServletRequest.addQueryString(restrictPortletServletRequest,queryString);
  try {
    request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE,Boolean.TRUE);
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    if (themeDisplay.isStateMaximized() && themeDisplay.getLayoutTypePortlet().hasStateMaxPortletId(portletId)) {
      return;
    }
    Portlet portlet=getPortlet(themeDisplay.getCompanyId(),portletId);
    if (PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(PortletKeys.PREFS_OWNER_TYPE_LAYOUT,themeDisplay.getPlid(),portletId) < 1) {
      PortletPreferencesFactoryUtil.getPortletSetup(request,portletId,defaultPreferences);
      PortletLayoutListener portletLayoutListener=portlet.getPortletLayoutListenerInstance();
      if (portletLayoutListener != null) {
        portletLayoutListener.onAddToLayout(portletId,themeDisplay.getPlid());
      }
    }
    PortletContainerUtil.render(request,response,portlet);
    RuntimePortletIDs runtimePortletIDs=(RuntimePortletIDs)request.getAttribute(WebKeys.RUNTIME_PORTLET_IDS);
    if (runtimePortletIDs == null) {
      runtimePortletIDs=new RuntimePortletIDs();
      request.setAttribute(WebKeys.RUNTIME_PORTLET_IDS,runtimePortletIDs);
    }
    runtimePortletIDs.addRuntimePortletID(portletName);
  }
  finally {
    restrictPortletServletRequest.mergeSharedAttributes();
  }
}

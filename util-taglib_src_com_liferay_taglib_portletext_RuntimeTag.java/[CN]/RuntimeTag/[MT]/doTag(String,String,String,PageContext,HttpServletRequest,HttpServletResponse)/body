{
  if (pageContext != null) {
    response=new PipingServletResponse(response,pageContext.getOut());
  }
  String portletId=portletName;
  RestrictPortletServletRequest restrictPortletServletRequest=new RestrictPortletServletRequest(request);
  queryString=PortletParameterUtil.addNamespace(portletId,queryString);
  request=DynamicServletRequest.addQueryString(restrictPortletServletRequest,queryString);
  try {
    request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE,Boolean.TRUE);
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    if (themeDisplay.isStateMaximized()) {
      LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
      if (layoutTypePortlet.hasStateMaxPortletId(portletId)) {
        return;
      }
    }
    Layout layout=themeDisplay.getLayout();
    Portlet portlet=getPortlet(themeDisplay.getCompanyId(),portletId);
    JSONObject jsonObject=null;
    if ((PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(PortletKeys.PREFS_OWNER_TYPE_LAYOUT,themeDisplay.getPlid(),portletId) < 1) || layout.isTypeControlPanel() || layout.isTypePanel()) {
      PortletPreferencesFactoryUtil.getPortletSetup(request,portletId,defaultPreferences);
      PortletLayoutListener portletLayoutListener=portlet.getPortletLayoutListenerInstance();
      if (portletLayoutListener != null) {
        portletLayoutListener.onAddToLayout(portletId,themeDisplay.getPlid());
      }
      jsonObject=JSONFactoryUtil.createJSONObject();
      PortletJSONUtil.populatePortletJSONObject(restrictPortletServletRequest,StringPool.BLANK,portlet,jsonObject);
    }
    if (jsonObject != null) {
      PrintWriter writer=response.getWriter();
      JSONArray jsonArray=jsonObject.getJSONArray("headerCssPaths");
      for (int i=0; i < jsonArray.length(); i++) {
        String value=jsonArray.getString(i);
        writer.print("<link href=\"");
        writer.print(HtmlUtil.escape(value));
        writer.println("\" rel=\"stylesheet\" type=\"text/css\" />");
      }
      jsonArray=jsonObject.getJSONArray("headerJavaScriptPaths");
      for (int i=0; i < jsonArray.length(); i++) {
        String value=jsonArray.getString(i);
        writer.print("<script src=\"");
        writer.print(HtmlUtil.escape(value));
        writer.println("\" type=\"text/javascript\"></script>");
      }
    }
    PortletContainerUtil.render(request,response,portlet);
    if (jsonObject != null) {
      PrintWriter writer=response.getWriter();
      JSONArray jsonArray=jsonObject.getJSONArray("footerCssPaths");
      for (int i=0; i < jsonArray.length(); i++) {
        String value=jsonArray.getString(i);
        writer.print("<link href=\"");
        writer.print(HtmlUtil.escape(value));
        writer.println("\" rel=\"stylesheet\" type=\"text/css\" />");
      }
      jsonArray=jsonObject.getJSONArray("footerJavaScriptPaths");
      for (int i=0; i < jsonArray.length(); i++) {
        String value=jsonArray.getString(i);
        writer.print("<script src=\"");
        writer.print(HtmlUtil.escape(value));
        writer.println("\" type=\"text/javascript\"></script>");
      }
    }
  }
  finally {
    restrictPortletServletRequest.mergeSharedAttributes();
  }
}

{
  if (pageContext != null) {
    response=new PipingServletResponse(response,pageContext.getOut());
  }
  PortletInstance portletInstance=PortletInstance.fromPortletInstanceKey(portletName);
  if (Validator.isNotNull(instanceId)) {
    portletInstance=new PortletInstance(portletInstance.getPortletName(),portletInstance.getUserId(),instanceId);
  }
  RestrictPortletServletRequest restrictPortletServletRequest=new RestrictPortletServletRequest(PortalUtil.getOriginalServletRequest(request));
  queryString=PortletParameterUtil.addNamespace(portletInstance.getPortletInstanceKey(),queryString);
  Map<String,String[]> parameterMap=request.getParameterMap();
  if (!Objects.equals(portletInstance.getPortletInstanceKey(),request.getParameter("p_p_id"))) {
    parameterMap=MapUtil.filterByKeys(parameterMap,new PrefixPredicateFilter("p_p_"));
  }
  request=DynamicServletRequest.addQueryString(restrictPortletServletRequest,parameterMap,queryString,false);
  try {
    request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE,Boolean.TRUE);
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
    if (Objects.equals(portletDisplay.getId(),portletInstance.getPortletInstanceKey())) {
      String errorMessage=LanguageUtil.get(request,"the-application-cannot-include-itself");
      request.setAttribute("liferay-portlet:runtime:errorMessage",errorMessage);
      PortalIncludeUtil.include(pageContext,_ERROR_PAGE);
      return;
    }
    if (themeDisplay.isStateMaximized()) {
      LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
      if (layoutTypePortlet.hasStateMaxPortletId(portletInstance.getPortletInstanceKey())) {
        return;
      }
    }
    Layout layout=themeDisplay.getLayout();
    Portlet portlet=getPortlet(themeDisplay.getCompanyId(),portletInstance.getPortletInstanceKey());
    request.setAttribute(WebKeys.SETTINGS_SCOPE,settingsScope);
    JSONObject jsonObject=null;
    boolean writeJSONObject=false;
    LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
    if (persistSettings && !layoutTypePortlet.isPortletEmbedded(portlet.getPortletId())) {
      PortletPreferencesFactoryUtil.getLayoutPortletSetup(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId(),PortletKeys.PREFS_OWNER_TYPE_LAYOUT,PortletKeys.PREFS_PLID_SHARED,portletInstance.getPortletInstanceKey(),defaultPreferences);
      writeJSONObject=true;
    }
    if (PortletPreferencesLocalServiceUtil.getPortletPreferencesCount(PortletKeys.PREFS_OWNER_TYPE_LAYOUT,themeDisplay.getPlid(),portletInstance.getPortletInstanceKey()) < 1) {
      PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletInstance.getPortletInstanceKey(),defaultPreferences);
      PortletPreferencesFactoryUtil.getPortletSetup(request,portletInstance.getPortletInstanceKey(),defaultPreferences);
      PortletLayoutListener portletLayoutListener=portlet.getPortletLayoutListenerInstance();
      if (portletLayoutListener != null) {
        portletLayoutListener.onAddToLayout(portletInstance.getPortletInstanceKey(),themeDisplay.getPlid());
      }
      writeJSONObject=true;
    }
    if (writeJSONObject) {
      jsonObject=JSONFactoryUtil.createJSONObject();
      PortletJSONUtil.populatePortletJSONObject(request,StringPool.BLANK,portlet,jsonObject);
    }
    if (jsonObject != null) {
      PortletJSONUtil.writeHeaderPaths(response,jsonObject);
    }
    PortletContainerUtil.render(request,response,portlet);
    if (jsonObject != null) {
      PortletJSONUtil.writeFooterPaths(response,jsonObject);
    }
  }
  finally {
    restrictPortletServletRequest.mergeSharedAttributes();
  }
}

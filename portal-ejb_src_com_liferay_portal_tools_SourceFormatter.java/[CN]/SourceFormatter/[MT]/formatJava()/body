{
  try {
    String basedir="../";
    List list=new ArrayList();
    DirectoryScanner ds=new DirectoryScanner();
    ds.setIncludes(new String[]{"**\\*.java"});
    ds.setExcludes(new String[]{"**\\classes\\*","**\\jsp\\*","**\\EARXMLBuilder.java","**\\EJBXMLBuilder.java","**\\JSMin.java","**\\ServiceBuilder.java","**\\SourceFormatter.java","**\\PropsUtil.java","**\\UserAttributes.java","**\\WebKeys.java","**\\portal\\service\\**","**\\portal-client\\**","**\\portlet\\**\\service\\**","**\\model\\*Model.java","**\\tools\\ext_tmpl\\**","**\\util-wsrp\\**","**\\WEB-INF\\jcvs\\work\\**"});
    ds.setBasedir(basedir);
    ds.scan();
    list.addAll(ListUtil.fromArray(ds.getIncludedFiles()));
    ds=new DirectoryScanner();
    ds.setIncludes(new String[]{"**\\service\\impl\\*.java","**\\service\\jms\\*.java","**\\service\\permission\\*.java","**\\persistence\\BasePersistence.java","**\\persistence\\*Finder.java"});
    ds.setExcludes(new String[]{"**\\tools\\ext_tmpl\\**","**\\WEB-INF\\jcvs\\work\\**"});
    ds.setBasedir(basedir);
    ds.scan();
    list.addAll(ListUtil.fromArray(ds.getIncludedFiles()));
    String[] files=(String[])list.toArray(new String[list.size()]);
    for (int i=0; i < files.length; i++) {
      File file=new File(basedir + files[i]);
      String content=FileUtil.read(file);
      String newContent=_formatJavaContent(files[i],content);
      String className=file.getName();
      className=className.substring(0,className.length() - 5);
      String packageDir=files[i];
      int packageDirX=packageDir.indexOf(File.separator + "src" + File.separator);
      int packageDirY=packageDir.lastIndexOf(File.separator);
      packageDir=packageDir.substring(packageDirX + 5,packageDirY);
      packageDir=StringUtil.replace(packageDir,File.separator,StringPool.PERIOD);
      if (newContent.indexOf("$\n */") != -1) {
        System.out.println("*: " + files[i]);
        newContent=StringUtil.replace(newContent,"$\n */","$\n *\n */");
      }
      String copyright=FileUtil.read("../copyright.txt");
      if (newContent.indexOf(copyright) == -1) {
        System.out.println("(c): " + files[i]);
      }
      if (newContent.indexOf(className + ".java.html") == -1) {
        String viewSource="/**\n" + " * <a href=\"" + className + ".java.html\"><b><i>View Source</i></b></a>\n"+ " *\n"+ " * @author  Brian Wing Shun Chan\n"+ " *\n"+ " */\n";
        System.out.println("Java2HTML: " + files[i]);
      }
      if (newContent.indexOf("import ") != -1) {
        int x=newContent.indexOf("import ");
        int y=newContent.indexOf("{",x);
        y=newContent.substring(0,y).lastIndexOf(";") + 1;
        String imports=_formatImports(newContent.substring(x,y));
        newContent=newContent.substring(0,x) + imports + newContent.substring(y + 1,newContent.length());
      }
      if (newContent.indexOf("import ") != -1) {
        Set classes=ClassUtil.getClasses(file);
        classes.add("_getMarkup");
        classes.add("_performBlockingInteraction");
        int x=newContent.indexOf("import ");
        int y=newContent.indexOf("{",x);
        y=newContent.substring(0,y).lastIndexOf(";") + 1;
        String imports=newContent.substring(x,y);
        StringBuffer sb=new StringBuffer();
        BufferedReader br=new BufferedReader(new StringReader(imports));
        String line=null;
        while ((line=br.readLine()) != null) {
          if (line.indexOf("import ") != -1) {
            int importX=line.indexOf(" ");
            int importY=line.lastIndexOf(".");
            String importPackage=line.substring(importX + 1,importY);
            String importClass=line.substring(importY + 1,line.length() - 1);
            if (!packageDir.equals(importPackage)) {
              if (!importClass.equals("*")) {
                if (!classes.contains(importClass)) {
                  System.out.println("Unused imports: " + importClass + " "+ files[i]);
                }
 else {
                  sb.append(line).append("\n");
                }
              }
 else {
                sb.append(line).append("\n");
              }
            }
          }
        }
        imports=_formatImports(sb.toString());
        newContent=newContent.substring(0,x) + imports + newContent.substring(y + 1,newContent.length());
      }
      if (newContent.indexOf(";\n/**") != -1) {
        newContent=StringUtil.replace(newContent,";\n/**",";\n\n/**");
      }
      if (newContent.indexOf("\t/*\n\t *") != -1) {
        newContent=StringUtil.replace(newContent,"\t/*\n\t *","\t/**\n\t *");
      }
      if (newContent.indexOf("if(") != -1) {
        newContent=StringUtil.replace(newContent,"if(","if (");
      }
      if (newContent.indexOf("while(") != -1) {
        newContent=StringUtil.replace(newContent,"while(","while (");
      }
      if (newContent.indexOf("\n\n\n") != -1) {
        newContent=StringUtil.replace(newContent,"\n\n\n","\n\n");
      }
      if (newContent.indexOf("*/\npackage ") != -1) {
        System.out.println("package: " + files[i]);
      }
      if (!newContent.endsWith("\n\n}") && !newContent.endsWith("{\n}")) {
        System.out.println("}: " + files[i]);
      }
      if ((newContent != null) && !content.equals(newContent)) {
        FileUtil.write(file,newContent);
        System.out.println(file.toString());
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}

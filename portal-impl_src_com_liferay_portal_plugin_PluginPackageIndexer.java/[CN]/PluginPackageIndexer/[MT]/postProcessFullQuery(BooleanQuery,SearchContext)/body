{
  BooleanFilter booleanFilter=fullQuery.getPreBooleanFilter();
  if (booleanFilter == null) {
    booleanFilter=new BooleanFilter();
  }
  String type=(String)searchContext.getAttribute("type");
  if (Validator.isNotNull(type)) {
    booleanFilter.addRequiredTerm("type",type);
  }
  String tag=(String)searchContext.getAttribute("tag");
  if (Validator.isNotNull(tag)) {
    booleanFilter.addRequiredTerm("tag",tag);
  }
  String repositoryURL=(String)searchContext.getAttribute("repositoryURL");
  if (Validator.isNotNull(repositoryURL)) {
    booleanFilter.addRequiredTerm("repositoryURL",repositoryURL);
  }
  String license=(String)searchContext.getAttribute("license");
  if (Validator.isNotNull(license)) {
    booleanFilter.addRequiredTerm("license",license);
  }
  String status=(String)searchContext.getAttribute(Field.STATUS);
  if (Validator.isNull(status) || status.equals("all")) {
    return;
  }
  if (status.equals(PluginPackageImpl.STATUS_NOT_INSTALLED_OR_OLDER_VERSION_INSTALLED)) {
    BooleanFilter statusBooleanFilter=new BooleanFilter();
    statusBooleanFilter.addTerm(Field.STATUS,PluginPackageImpl.STATUS_NOT_INSTALLED);
    statusBooleanFilter.addTerm(Field.STATUS,PluginPackageImpl.STATUS_OLDER_VERSION_INSTALLED);
    booleanFilter.add(statusBooleanFilter,BooleanClauseOccur.MUST);
  }
 else {
    booleanFilter.addRequiredTerm(Field.STATUS,status);
  }
  if (booleanFilter.hasClauses()) {
    fullQuery.setPreBooleanFilter(booleanFilter);
  }
}

{
  ModuleId moduleIdObj=ModuleId.getInstance(moduleId);
  shortDescription=HtmlUtil.extractText(shortDescription);
  longDescription=HtmlUtil.extractText(longDescription);
  String content=name + " " + author+ " "+ shortDescription+ " "+ longDescription;
  Document document=new DocumentImpl();
  document.addUID(PORTLET_ID,moduleId);
  document.addModifiedDate(modifiedDate);
  document.addKeyword(Field.PORTLET_ID,PORTLET_ID);
  document.addKeyword(Field.GROUP_ID,moduleIdObj.getGroupId());
  document.addText(Field.TITLE,name);
  document.addText(Field.CONTENT,content);
  document.addKeyword("moduleId",moduleId);
  document.addKeyword("artifactId",moduleIdObj.getArtifactId());
  document.addKeyword("version",version);
  document.addText("author",author);
  document.addKeyword("type",types.toArray(new String[0]));
  document.addKeyword("tag",tags.toArray(new String[0]));
  String[] licenseNames=new String[licenses.size()];
  boolean osiLicense=false;
  for (int i=0; i < licenses.size(); i++) {
    License license=licenses.get(i);
    licenseNames[i]=license.getName();
    if (license.isOsiApproved()) {
      osiLicense=true;
    }
  }
  document.addKeyword("license",licenseNames);
  document.addKeyword("osi-approved-license",String.valueOf(osiLicense));
  document.addText("shortDescription",shortDescription);
  document.addText("longDescription",longDescription);
  document.addText("changeLog",changeLog);
  document.addText("pageURL",pageURL);
  document.addKeyword("repositoryURL",repositoryURL);
  document.addKeyword("status",status);
  document.addKeyword("installedVersion",installedVersion);
  return document;
}

{
  ModuleId moduleIdObj=ModuleId.getInstance(moduleId);
  shortDescription=Html.stripHtml(shortDescription);
  longDescription=Html.stripHtml(longDescription);
  String content=name + " " + author+ " "+ shortDescription+ " "+ longDescription;
  Document doc=new Document();
  doc.add(LuceneFields.getKeyword(LuceneFields.UID,LuceneFields.getUID(PORTLET_ID,moduleId)));
  doc.add(LuceneFields.getKeyword(LuceneFields.PORTLET_ID,PORTLET_ID));
  doc.add(LuceneFields.getText(LuceneFields.TITLE,name));
  doc.add(LuceneFields.getText(LuceneFields.CONTENT,content));
  doc.add(LuceneFields.getDate(LuceneFields.MODIFIED));
  doc.add(LuceneFields.getKeyword("moduleId",moduleId));
  doc.add(LuceneFields.getKeyword("groupId",moduleIdObj.getGroupId()));
  doc.add(LuceneFields.getKeyword("artifactId",moduleIdObj.getArtifactId()));
  doc.add(LuceneFields.getKeyword("version",version));
  doc.add(LuceneFields.getDate("modified-date",modifiedDate));
  doc.add(LuceneFields.getKeyword("shortDescription",shortDescription));
  doc.add(LuceneFields.getKeyword("changeLog",changeLog));
  doc.add(LuceneFields.getKeyword("repositoryURL",repositoryURL));
  StringMaker sm=new StringMaker();
  Iterator itr=types.iterator();
  while (itr.hasNext()) {
    String type=(String)itr.next();
    doc.add(LuceneFields.getKeyword("type",type));
    sm.append(type);
    if (itr.hasNext()) {
      sm.append(StringPool.COMMA);
      sm.append(StringPool.SPACE);
    }
  }
  doc.add(LuceneFields.getKeyword("types",sm.toString()));
  sm=new StringMaker();
  itr=tags.iterator();
  while (itr.hasNext()) {
    String tag=(String)itr.next();
    doc.add(LuceneFields.getKeyword("tag",tag));
    sm.append(tag);
    if (itr.hasNext()) {
      sm.append(StringPool.COMMA);
      sm.append(StringPool.SPACE);
    }
  }
  doc.add(LuceneFields.getKeyword("tags",sm.toString()));
  boolean osiLicense=false;
  itr=licenses.iterator();
  while (itr.hasNext()) {
    License license=(License)itr.next();
    doc.add(LuceneFields.getKeyword("license",license.getName()));
    if (license.isOsiApproved()) {
      osiLicense=true;
    }
  }
  doc.add(LuceneFields.getKeyword("osi-approved-license",String.valueOf(osiLicense)));
  doc.add(LuceneFields.getKeyword("status",status));
  if (installedVersion != null) {
    doc.add(LuceneFields.getKeyword("installedVersion",installedVersion));
  }
  return doc;
}

{
  content=HtmlUtil.stripComments(content);
  Document document=SAXReaderUtil.read(content);
  Element rootElement=document.getRootElement();
  Element serviceElement=rootElement.element("service");
  Map<String,Element> arrayMappingElements=new TreeMap<String,Element>();
  Map<String,Element> typeMappingElements=new TreeMap<String,Element>();
  Map<String,Element> operationElements=new TreeMap<String,Element>();
  Map<String,Element> parameterElements=new TreeMap<String,Element>();
  for (  Element element : serviceElement.elements()) {
    String elementName=element.getName();
    if (elementName.equals("arrayMapping")) {
      element.detach();
      arrayMappingElements.put(element.formattedString(),element);
    }
 else     if (elementName.equals("operation")) {
      element.detach();
      List<Element> parameters=element.elements("parameter");
      StringBundler sb=new StringBundler(2 * parameters.size() + 2);
      String name=element.attributeValue("name");
      sb.append(name);
      sb.append("_METHOD_");
      for (      Element parameterElement : parameters) {
        String type=parameterElement.attributeValue("type");
        sb.append(type);
        sb.append("_PARAMETER_");
      }
      operationElements.put(sb.toString(),element);
    }
 else     if (elementName.equals("parameter")) {
      element.detach();
      String name=element.attributeValue("name");
      if (name.equals("allowedMethods")) {
        Attribute valueAttribute=element.attribute("value");
        String[] values=StringUtil.split(valueAttribute.getValue(),CharPool.SPACE);
        Arrays.sort(values);
        valueAttribute.setValue(StringUtil.merge(values,StringPool.SPACE));
      }
 else       if (name.equals("schemaUnqualified")) {
        Attribute valueAttribute=element.attribute("value");
        String[] values=StringUtil.split(valueAttribute.getValue());
        Arrays.sort(values);
        valueAttribute.setValue(StringUtil.merge(values));
      }
      parameterElements.put(name,element);
    }
 else     if (elementName.equals("typeMapping")) {
      element.detach();
      typeMappingElements.put(element.formattedString(),element);
    }
  }
  _addElements(serviceElement,arrayMappingElements);
  _addElements(serviceElement,typeMappingElements);
  _addElements(serviceElement,operationElements);
  _addElements(serviceElement,parameterElements);
  content=StringUtil.replace(document.formattedString(),"\"/>","\" />");
  return content;
}

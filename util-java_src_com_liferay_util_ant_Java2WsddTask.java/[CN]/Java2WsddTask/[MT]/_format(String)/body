{
  content=HtmlUtil.stripComments(content);
  Document document=SAXReaderUtil.read(content);
  Element rootElement=document.getRootElement();
  Element serviceElement=rootElement.element("service");
  Map<String,Element> parameterElementsByName=new TreeMap<String,Element>();
  List<Element> parameterElements=serviceElement.elements("parameter");
  for (  Element parameterElement : parameterElements) {
    parameterElement.detach();
    String name=parameterElement.attributeValue("name");
    if (name.equals("allowedMethods")) {
      Attribute valueAttribute=parameterElement.attribute("value");
      String[] allowedMethods=StringUtil.split(valueAttribute.getValue()," ");
      Arrays.sort(allowedMethods);
      valueAttribute.setValue(StringUtil.merge(allowedMethods," "));
    }
    parameterElementsByName.put(name,parameterElement);
  }
  for (  Map.Entry<String,Element> entry : parameterElementsByName.entrySet()) {
    Element parameterElement=entry.getValue();
    serviceElement.add(parameterElement);
  }
  Map<String,Element> operationElementsById=new TreeMap<String,Element>();
  List<Element> operationElements=serviceElement.elements("operation");
  for (  Element operationElement : operationElements) {
    operationElement.detach();
    StringBundler sb=new StringBundler();
    String name=operationElement.attributeValue("name");
    sb.append(name);
    sb.append("_METHOD_");
    parameterElements=operationElement.elements("parameter");
    for (    Element parameterElement : parameterElements) {
      String type=parameterElement.attributeValue("type");
      sb.append(type);
      sb.append("_PARAMETER_");
    }
    operationElementsById.put(sb.toString(),operationElement);
  }
  for (  Map.Entry<String,Element> entry : operationElementsById.entrySet()) {
    Element operationElement=entry.getValue();
    serviceElement.add(operationElement);
  }
  content=StringUtil.replace(document.formattedString(),"\"/>","\" />");
  content=_moveElement(content,"typeMapping");
  content=_moveElement(content,"arrayMapping");
  return content;
}

{
  Protocol protocol=new Protocol("http",new FastProtocolSocketFactory(),80);
  Protocol.registerProtocol("http",protocol);
  if (Validator.isNotNull(_NON_PROXY_HOSTS)) {
    String nonProxyHostsRegEx=_NON_PROXY_HOSTS;
    nonProxyHostsRegEx=nonProxyHostsRegEx.replaceAll("\\.","\\\\.");
    nonProxyHostsRegEx=nonProxyHostsRegEx.replaceAll("\\*",".*?");
    nonProxyHostsRegEx=nonProxyHostsRegEx.replaceAll("\\|",")|(");
    nonProxyHostsRegEx="(" + nonProxyHostsRegEx + ")";
    _nonProxyHostsPattern=Pattern.compile(nonProxyHostsRegEx);
  }
 else {
    _nonProxyHostsPattern=null;
  }
  MultiThreadedHttpConnectionManager httpConnectionManager=new MultiThreadedHttpConnectionManager();
  HttpConnectionManagerParams httpConnectionManagerParams=httpConnectionManager.getParams();
  httpConnectionManagerParams.setConnectionTimeout(_TIMEOUT);
  httpConnectionManagerParams.setDefaultMaxConnectionsPerHost(Integer.valueOf(_MAX_CONNECTIONS_PER_HOST));
  httpConnectionManagerParams.setMaxTotalConnections(Integer.valueOf(_MAX_TOTAL_CONNECTIONS));
  httpConnectionManagerParams.setSoTimeout(_TIMEOUT);
  _httpClient.setHttpConnectionManager(httpConnectionManager);
  _proxyHttpClient.setHttpConnectionManager(httpConnectionManager);
  if (!hasProxyConfig() || Validator.isNull(_PROXY_USERNAME)) {
    _proxyCredentials=null;
    return;
  }
  List<String> authPrefs=new ArrayList<>();
  if (_PROXY_AUTH_TYPE.equals("username-password")) {
    _proxyCredentials=new UsernamePasswordCredentials(_PROXY_USERNAME,_PROXY_PASSWORD);
    authPrefs.add(AuthPolicy.BASIC);
    authPrefs.add(AuthPolicy.DIGEST);
    authPrefs.add(AuthPolicy.NTLM);
  }
 else   if (_PROXY_AUTH_TYPE.equals("ntlm")) {
    _proxyCredentials=new NTCredentials(_PROXY_USERNAME,_PROXY_PASSWORD,_PROXY_NTLM_HOST,_PROXY_NTLM_DOMAIN);
    authPrefs.add(AuthPolicy.NTLM);
    authPrefs.add(AuthPolicy.BASIC);
    authPrefs.add(AuthPolicy.DIGEST);
  }
 else {
    _proxyCredentials=null;
  }
  HttpClientParams httpClientParams=_proxyHttpClient.getParams();
  httpClientParams.setParameter(AuthPolicy.AUTH_SCHEME_PRIORITY,authPrefs);
}

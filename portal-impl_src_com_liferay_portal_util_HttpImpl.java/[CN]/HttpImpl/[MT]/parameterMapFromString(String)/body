{
  Map<String,String[]> parameterMap=new LinkedHashMap<String,String[]>();
  if (Validator.isNull(queryString)) {
    return parameterMap;
  }
  Map<String,List<String>> tempParameterMap=new LinkedHashMap<String,List<String>>();
  String[] parameters=StringUtil.split(queryString,CharPool.AMPERSAND);
  for (  String parameter : parameters) {
    if (parameter.length() > 0) {
      String[] kvp=StringUtil.split(parameter,CharPool.EQUAL);
      if (kvp.length == 0) {
        continue;
      }
      String key=kvp[0];
      String value=StringPool.BLANK;
      if (kvp.length > 1) {
        try {
          value=decodeURL(kvp[1]);
        }
 catch (        IllegalArgumentException e) {
          if (_log.isInfoEnabled()) {
            _log.info("Skipping parameter " + key + ", it has invalid value "+ kvp[1]+ " .",e);
          }
          continue;
        }
      }
      List<String> values=tempParameterMap.get(key);
      if (values == null) {
        values=new ArrayList<String>();
        tempParameterMap.put(key,values);
      }
      values.add(value);
    }
  }
  for (  Map.Entry<String,List<String>> entry : tempParameterMap.entrySet()) {
    String key=entry.getKey();
    List<String> values=entry.getValue();
    parameterMap.put(key,values.toArray(new String[values.size()]));
  }
  return parameterMap;
}

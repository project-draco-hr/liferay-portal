{
  try (LoggingTimer loggingTimer=new LoggingTimer(String.valueOf(companyId))){
    StringBundler sb=new StringBundler(8);
    sb.append("select userId, MIN(userName) as userName, ");
    sb.append("classNameId, classPK, MIN(createDate) as createDate, ");
    sb.append("MIN(modifiedDate) as modifiedDate from MBMessage ");
    sb.append("where (companyId = ");
    sb.append(companyId);
    sb.append(") and ");
    sb.append("(classNameId != 0) and (parentMessageId != 0) ");
    sb.append("group by userId, classNameId, classPK");
    try (PreparedStatement ps=connection.prepareStatement(sb.toString());ResultSet rs=ps.executeQuery()){
      while (rs.next()) {
        long userId=rs.getLong("userId");
        String userName=rs.getString("userName");
        Timestamp createDate=rs.getTimestamp("createDate");
        Timestamp modifiedDate=rs.getTimestamp("modifiedDate");
        long classNameId=rs.getLong("classNameId");
        long classPK=rs.getLong("classPK");
        if (hasSubscription(companyId,userId,classNameId,classPK)) {
          continue;
        }
        long subscriptionId=increment();
        String frequency="instant";
        addSubscription(subscriptionId,companyId,userId,userName,createDate,modifiedDate,classNameId,classPK,frequency);
      }
    }
   }
 }

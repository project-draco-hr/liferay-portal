{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection(Constants.DATA_SOURCE);
    ps=con.prepareStatement(_UPGRADE_CATEGORY_1);
    rs=ps.executeQuery();
    while (rs.next()) {
      String topicId=rs.getString("topicId");
      String userId=rs.getString("userId");
      Timestamp createDate=rs.getTimestamp("createDate");
      Timestamp modifiedDate=rs.getTimestamp("modifiedDate");
      String parentCategoryId=rs.getString("categoryId");
      String name=rs.getString("name");
      String description=rs.getString("description");
      Timestamp lastPostDate=rs.getTimestamp("lastPostDate");
      _log.debug("Upgrading topic " + topicId);
      MBCategory category=null;
      if (topicId.equals(CompanyImpl.SYSTEM)) {
        category=MBCategoryLocalServiceUtil.getSystemCategory();
      }
 else {
        String groupId=null;
        try {
          groupId=rs.getString("groupId");
        }
 catch (        SQLException sqle) {
        }
        if (Validator.isNull(parentCategoryId)) {
          parentCategoryId=MBCategoryImpl.DEFAULT_PARENT_CATEGORY_ID;
        }
 else {
          MBCategory parentCategory=MBCategoryLocalServiceUtil.getCategory(parentCategoryId);
          groupId=parentCategory.getGroupId();
        }
        if (Validator.isNotNull(groupId) && !groupId.equals(GroupImpl.DEFAULT_PARENT_GROUP_ID)) {
          String plid=LayoutImpl.PUBLIC + groupId + ".1";
          boolean addCommunityPermissions=true;
          boolean addGuestPermissions=true;
          category=MBCategoryLocalServiceUtil.addCategory(userId,plid,parentCategoryId,name,description,addCommunityPermissions,addGuestPermissions);
        }
      }
      if (category != null) {
        _upgradeMessage(category.getCategoryId(),topicId);
        _upgradeCategory(category.getCategoryId(),createDate,modifiedDate,lastPostDate);
      }
    }
    ResourceLocalServiceUtil.deleteResources("com.liferay.portlet.messageboards.model.MBTopic");
  }
 catch (  NoSuchGroupException nsge) {
    _log.error("Upgrade failed because data does not have a valid group id. " + "Manually assign a group id in the database.");
  }
 finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

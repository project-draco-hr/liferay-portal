{
  try (UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(data))){
    StringBundler sb=new StringBundler();
    boolean createTable=false;
    String line=null;
    while ((line=unsyncBufferedReader.readLine()) != null) {
      if (StringUtil.startsWith(line,"create table")) {
        createTable=true;
      }
 else       if (line.startsWith(ALTER_COLUMN_NAME)) {
        String[] template=buildColumnNameTokens(line);
        line=StringUtil.replace("alter table @table@ change column @old-column@ " + "@new-column@ @type@;",REWORD_TEMPLATE,template);
      }
 else       if (line.startsWith(ALTER_COLUMN_TYPE)) {
        String[] template=buildColumnTypeTokens(line);
        line=StringUtil.replace("alter table @table@ modify @old-column@ @type@;",REWORD_TEMPLATE,template);
      }
 else       if (line.startsWith(ALTER_TABLE_NAME)) {
        String[] template=buildTableNameTokens(line);
        line=StringUtil.replace("rename table @old-table@ to @new-table@;",RENAME_TABLE_TEMPLATE,template);
      }
      int pos=line.indexOf(";");
      if (createTable && (pos != -1)) {
        createTable=false;
        line=line.substring(0,pos) + " engine " + PropsValues.DATABASE_MYSQL_ENGINE+ line.substring(pos);
      }
      sb.append(line);
      sb.append("\n");
    }
    return sb.toString();
  }
 }

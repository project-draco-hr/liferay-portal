{
  UnsyncBufferedReader br=new UnsyncBufferedReader(new UnsyncStringReader(data));
  boolean createTable=false;
  StringBuilder sb=new StringBuilder();
  String line=null;
  while ((line=br.readLine()) != null) {
    if (StringUtil.startsWith(line,"create table")) {
      createTable=true;
    }
 else     if (line.startsWith(ALTER_COLUMN_NAME)) {
      String[] template=buildColumnNameTokens(line);
      line=StringUtil.replace("alter table @table@ change column @old-column@ " + "@new-column@ @type@;",REWORD_TEMPLATE,template);
    }
 else     if (line.startsWith(ALTER_COLUMN_TYPE)) {
      String[] template=buildColumnTypeTokens(line);
      line=StringUtil.replace("alter table @table@ modify @old-column@ @type@;",REWORD_TEMPLATE,template);
    }
    int pos=line.indexOf(";");
    if (createTable && (pos != -1)) {
      createTable=false;
      line=line.substring(0,pos) + " engine " + PropsValues.DATABASE_MYSQL_ENGINE+ line.substring(pos);
    }
    sb.append(line);
    sb.append("\n");
  }
  br.close();
  return sb.toString();
}

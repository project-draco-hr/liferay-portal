{
  Object[] finderArgs=new Object[]{new Long(userId),new Long(classNameId),new Long(classPK)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_RATINGSENTRY_WHERE);
      query.append(_FINDER_COLUMN_U_C_C_USERID_2);
      query.append(_FINDER_COLUMN_U_C_C_CLASSNAMEID_2);
      query.append(_FINDER_COLUMN_U_C_C_CLASSPK_2);
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<RatingsEntry> list=q.list();
      result=list;
      RatingsEntry ratingsEntry=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,list);
      }
 else {
        ratingsEntry=list.get(0);
        cacheResult(ratingsEntry);
        if ((ratingsEntry.getUserId() != userId) || (ratingsEntry.getClassNameId() != classNameId) || (ratingsEntry.getClassPK() != classPK)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,ratingsEntry);
        }
      }
      return ratingsEntry;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,new ArrayList<RatingsEntry>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (RatingsEntry)result;
    }
  }
}

{
  if (isCacheableRequest(request) && !isInclude(request) && !isAlreadyFiltered(request)) {
    request.setAttribute(SKIP_FILTER,Boolean.TRUE);
    response.setHeader(HttpHeaders.VARY,HttpHeaders.ACCEPT_ENCODING);
    String key=getCacheKey(request);
    long companyId=PortalInstances.getCompanyId(request);
    CacheResponseData cacheResponseData=CacheUtil.getCacheResponseData(companyId,key);
    if (cacheResponseData == null) {
      if (!isCacheableData(companyId,request)) {
        if (_log.isDebugEnabled()) {
          _log.debug("Request is not cacheable " + key);
        }
        processFilter(CacheFilter.class,request,response,filterChain);
        return;
      }
      if (_log.isInfoEnabled()) {
        _log.info("Caching request " + key);
      }
      StringServletResponse stringResponse=new StringServletResponse(response);
      processFilter(CacheFilter.class,request,stringResponse,filterChain);
      cacheResponseData=new CacheResponseData(stringResponse);
      LastPath lastPath=(LastPath)request.getAttribute(WebKeys.LAST_PATH);
      if (lastPath != null) {
        cacheResponseData.setAttribute(WebKeys.LAST_PATH,lastPath);
      }
      if (isCacheableRequest(request) && isCacheableResponse(stringResponse)) {
        CacheUtil.putCacheResponseData(companyId,key,cacheResponseData);
      }
    }
 else {
      LastPath lastPath=(LastPath)cacheResponseData.getAttribute(WebKeys.LAST_PATH);
      if (lastPath != null) {
        HttpSession session=request.getSession();
        session.setAttribute(WebKeys.LAST_PATH,lastPath);
      }
    }
    CacheResponseUtil.write(response,cacheResponseData);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Request is not cacheable");
    }
    processFilter(CacheFilter.class,request,response,filterChain);
  }
}

{
  StringBundler sb=new StringBundler(45);
  sb.append("create or replace rule delete_");
  sb.append(table);
  sb.append(StringPool.UNDERLINE);
  sb.append(column);
  sb.append(" as on delete to ");
  sb.append(table);
  sb.append(" do also select case when exists( select 1 from ");
  sb.append("pg_catalog.pg_largeobject where (loid = old.");
  sb.append(column);
  sb.append(")) then lo_unlink(old.");
  sb.append(column);
  sb.append(") end from ");
  sb.append(table);
  sb.append(" where ");
  sb.append(table);
  sb.append(StringPool.PERIOD);
  sb.append(column);
  sb.append(" = old.");
  sb.append(column);
  sb.append(";\ncreate or replace rule update_");
  sb.append(table);
  sb.append(StringPool.UNDERLINE);
  sb.append(column);
  sb.append(" as on update to ");
  sb.append(table);
  sb.append(" where old.");
  sb.append(column);
  sb.append(" is distinct from new.");
  sb.append(column);
  sb.append(" and old.");
  sb.append(column);
  sb.append(" is not null do also select case when exists( select 1 ");
  sb.append("from pg_catalog.pg_largeobject where (loid = old.");
  sb.append(column);
  sb.append(")) then lo_unlink(old.");
  sb.append(column);
  sb.append(") end from ");
  sb.append(table);
  sb.append(" where ");
  sb.append(table);
  sb.append(StringPool.PERIOD);
  sb.append(column);
  sb.append(" = old.");
  sb.append(column);
  sb.append(StringPool.SEMICOLON);
  return sb.toString();
}

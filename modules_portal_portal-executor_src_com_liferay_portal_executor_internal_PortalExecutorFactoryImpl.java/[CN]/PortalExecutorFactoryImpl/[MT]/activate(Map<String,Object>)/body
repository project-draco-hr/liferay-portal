{
  boolean allowCoreThreadTimeout=GetterUtil.getBoolean(properties.get("allowCoreThreadTimeout"),true);
  int corePoolSize=GetterUtil.getInteger(properties.get("corePoolSize"));
  if (corePoolSize < 0) {
    throw new IllegalArgumentException("Core pool size is less than 0");
  }
  long keepAliveTime=GetterUtil.getLong(properties.get("keepAliveTime"));
  if (keepAliveTime < 0) {
    throw new IllegalArgumentException("Keep alive time is less than 0");
  }
  int maxPoolSize=GetterUtil.getInteger(properties.get("maxPoolSize"));
  if (maxPoolSize <= 0) {
    throw new IllegalArgumentException("Max pool size is less than or equal to 0");
  }
  if (maxPoolSize < corePoolSize) {
    throw new IllegalArgumentException("Max pool size is less than core pool size");
  }
  int maxQueueSize=GetterUtil.getInteger(properties.get("maxQueueSize"),Integer.MAX_VALUE);
  if (maxQueueSize <= 0) {
    throw new IllegalArgumentException("Max queue size is less than or equal to 0");
  }
  RejectedExecutionHandler rejectedExecutionHandler=(RejectedExecutionHandler)InstanceFactory.newInstance(GetterUtil.getString(properties.get("rejectedExecutionHandler")));
  ThreadPoolHandler threadPoolHandler=(ThreadPoolHandler)InstanceFactory.newInstance(GetterUtil.getString(properties.get("threadPoolHandler")));
  TimeUnit timeUnit=TimeUnit.valueOf(GetterUtil.getString(properties.get("timeUnit")));
  _config=new Config(allowCoreThreadTimeout,corePoolSize,keepAliveTime,maxPoolSize,maxQueueSize,rejectedExecutionHandler,threadPoolHandler,timeUnit);
}

{
  _allowCoreThreadTimeout=GetterUtil.getBoolean(properties.get("allowCoreThreadTimeout"),true);
  _corePoolSize=GetterUtil.getInteger(properties.get("corePoolSize"));
  if (_corePoolSize < 0) {
    throw new IllegalArgumentException("Core pool size is less than 0");
  }
  _keepAliveTime=GetterUtil.getLong(properties.get("keepAliveTime"));
  if (_keepAliveTime < 0) {
    throw new IllegalArgumentException("Keep alive time is less than 0");
  }
  _maxPoolSize=GetterUtil.getInteger(properties.get("maxPoolSize"));
  if (_maxPoolSize <= 0) {
    throw new IllegalArgumentException("Max pool size is less than or equal to 0");
  }
  if (_maxPoolSize < _corePoolSize) {
    throw new IllegalArgumentException("Max pool size is less than core pool size");
  }
  _maxQueueSize=GetterUtil.getInteger(properties.get("maxQueueSize"),Integer.MAX_VALUE);
  if (_maxQueueSize <= 0) {
    throw new IllegalArgumentException("Max queue size is less than or equal to 0");
  }
  try {
    _rejectedExecutionHandler=(RejectedExecutionHandler)InstanceFactory.newInstance(GetterUtil.getString(properties.get("rejectedExecutionHandler")));
    _threadPoolHandler=(ThreadPoolHandler)InstanceFactory.newInstance(GetterUtil.getString(properties.get("threadPoolHandler")));
  }
 catch (  Exception e) {
    throw new IllegalStateException("Unable to instantiate objects",e);
  }
  _timeUnit=TimeUnit.valueOf(GetterUtil.getString(properties.get("timeUnit")));
}

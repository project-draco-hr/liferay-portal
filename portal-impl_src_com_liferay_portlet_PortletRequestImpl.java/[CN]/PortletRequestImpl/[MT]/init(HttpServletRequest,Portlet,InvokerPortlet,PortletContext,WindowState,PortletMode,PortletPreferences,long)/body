{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  _portletName=portlet.getPortletId();
  String portletNamespace=PortalUtil.getPortletNamespace(_portletName);
  Map<String,Object> sharedSessionAttributes=SharedSessionUtil.getSharedSessionAttributes(req);
  boolean portalSessionShared=false;
  PortletApp portletApp=portlet.getPortletApp();
  if (portletApp.isWARFile() && !portlet.isPrivateSessionAttributes()) {
    portalSessionShared=true;
  }
  req=new SharedSessionServletRequest(req,sharedSessionAttributes,portalSessionShared);
  DynamicServletRequest dynamicReq=null;
  if (portlet.isPrivateRequestAttributes()) {
    dynamicReq=new NamespaceServletRequest(req,portletNamespace,portletNamespace,false);
  }
 else {
    dynamicReq=new DynamicServletRequest(req,false);
  }
  Enumeration<String> enu=null;
  boolean portletFocus=false;
  if (_portletName.equals(req.getParameter("p_p_id"))) {
    if (themeDisplay.isLifecycleRender() || themeDisplay.isLifecycleResource()) {
      portletFocus=true;
    }
 else     if (themeDisplay.isLifecycleAction() && getLifecycle().equals(PortletRequest.ACTION_PHASE)) {
      portletFocus=true;
    }
  }
  Map<String,String[]> oldRenderParameters=RenderParametersPool.get(req,plid,_portletName);
  Map<String,String[]> newRenderParameters=null;
  if (portletFocus) {
    newRenderParameters=new HashMap<String,String[]>();
    if (getLifecycle().equals(PortletRequest.RENDER_PHASE) && !LiferayWindowState.isExclusive(req) && !LiferayWindowState.isPopUp(req)) {
      RenderParametersPool.put(req,plid,_portletName,newRenderParameters);
    }
    if (themeDisplay.isLifecycleResource()) {
      Set<String> oldNames=oldRenderParameters.keySet();
      Set<String> newNames=req.getParameterMap().keySet();
      Set<String> allNames=new HashSet<String>();
      allNames.addAll(oldNames);
      allNames.addAll(newNames);
      enu=Collections.enumeration(newNames);
    }
 else {
      enu=req.getParameterNames();
    }
  }
 else {
    enu=Collections.enumeration(oldRenderParameters.keySet());
  }
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    if (name.startsWith(portletNamespace) && !invokerPortlet.isFacesPortlet()) {
      String shortName=name.substring(portletNamespace.length(),name.length());
      String[] values=null;
      if (portletFocus) {
        values=req.getParameterValues(name);
        if (themeDisplay.isLifecycleRender()) {
          newRenderParameters.put(name,values);
        }
 else         if (themeDisplay.isLifecycleResource()) {
          String[] oldValues=oldRenderParameters.get(name);
          if (oldValues != null) {
            if (values == null) {
              values=oldValues;
            }
 else {
              values=ArrayUtil.append(values,oldValues);
            }
          }
        }
      }
 else {
        values=oldRenderParameters.get(name);
      }
      dynamicReq.setParameterValues(shortName,values);
    }
 else {
      if (!PortalUtil.isReservedParameter(name) && Validator.isNotNull(name)) {
        String[] values=null;
        if (portletFocus) {
          if (themeDisplay.isLifecycleRender()) {
            newRenderParameters.put(name,values);
          }
 else           if (themeDisplay.isLifecycleResource()) {
            String[] oldValues=oldRenderParameters.get(name);
            if (oldValues != null) {
              if (values == null) {
                values=oldValues;
              }
 else {
                values=ArrayUtil.append(values,oldValues);
              }
            }
          }
        }
 else {
          values=oldRenderParameters.get(name);
        }
        dynamicReq.setParameterValues(name,values);
      }
    }
  }
  _req=dynamicReq;
  _wapTheme=BrowserSniffer.is_wap_xhtml(_req);
  _portlet=portlet;
  _portalCtx=new PortalContextImpl();
  _portletCtx=portletCtx;
  _windowState=windowState;
  _portletMode=portletMode;
  _prefs=prefs;
  _portalSessionId=_req.getRequestedSessionId();
  _ses=new PortletSessionImpl(_req,_portletName,_portletCtx,_portalSessionId,plid);
  long userId=PortalUtil.getUserId(req);
  String remoteUser=req.getRemoteUser();
  String userPrincipalStrategy=portlet.getUserPrincipalStrategy();
  if (userPrincipalStrategy.equals(PortletImpl.USER_PRINCIPAL_STRATEGY_SCREEN_NAME)) {
    try {
      User user=PortalUtil.getUser(req);
      _remoteUser=user.getScreenName();
      _remoteUserId=user.getUserId();
      _userPrincipal=new ProtectedPrincipal(_remoteUser);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
 else {
    if ((userId > 0) && (remoteUser == null)) {
      _remoteUser=String.valueOf(userId);
      _remoteUserId=userId;
      _userPrincipal=new ProtectedPrincipal(_remoteUser);
    }
 else {
      _remoteUser=remoteUser;
      _remoteUserId=GetterUtil.getLong(remoteUser);
      _userPrincipal=req.getUserPrincipal();
    }
  }
  _locale=(Locale)_req.getSession().getAttribute(Globals.LOCALE_KEY);
  _plid=plid;
}

{
  directDownloadURL=directDownloadURL.trim().toLowerCase();
  Date now=new Date();
  validate(productVersionId,version,changeLog,downloadPageURL,directDownloadURL,testDirectDownloadURL,frameworkVersionIds);
  SCProductVersion productVersion=scProductVersionPersistence.findByPrimaryKey(productVersionId);
  productVersion.setModifiedDate(now);
  productVersion.setVersion(version);
  productVersion.setChangeLog(changeLog);
  productVersion.setDownloadPageURL(downloadPageURL);
  productVersion.setDirectDownloadURL(directDownloadURL);
  productVersion.setRepoStoreArtifact(repoStoreArtifact);
  scProductVersionPersistence.update(productVersion,false);
  ExpandoBridge expandoBridge=productVersion.getExpandoBridge();
  expandoBridge.setAttributes(serviceContext);
  SCProductEntry productEntry=scProductEntryPersistence.findByPrimaryKey(productVersion.getProductEntryId());
  productEntry.setModifiedDate(now);
  scProductEntryPersistence.update(productEntry,false);
  scProductVersionPersistence.setSCFrameworkVersions(productVersionId,frameworkVersionIds);
  try {
    Indexer.updateProductEntry(productEntry.getCompanyId(),productEntry.getGroupId(),productEntry.getUserId(),productEntry.getUserName(),productEntry.getProductEntryId(),productEntry.getName(),now,productVersion.getVersion(),productEntry.getType(),productEntry.getShortDescription(),productEntry.getLongDescription(),productEntry.getPageURL(),productEntry.getRepoGroupId(),productEntry.getRepoArtifactId(),productEntry.getExpandoBridge());
  }
 catch (  SearchException se) {
    _log.error("Indexing " + productEntry.getProductEntryId(),se);
  }
  return productVersion;
}

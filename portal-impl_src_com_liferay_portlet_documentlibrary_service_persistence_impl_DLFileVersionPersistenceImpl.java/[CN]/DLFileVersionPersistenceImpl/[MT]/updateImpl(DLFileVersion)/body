{
  dlFileVersion=toUnwrappedModel(dlFileVersion);
  boolean isNew=dlFileVersion.isNew();
  DLFileVersionModelImpl dlFileVersionModelImpl=(DLFileVersionModelImpl)dlFileVersion;
  if (Validator.isNull(dlFileVersion.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    dlFileVersion.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (dlFileVersion.getCreateDate() == null)) {
    if (serviceContext == null) {
      dlFileVersion.setCreateDate(now);
    }
 else {
      dlFileVersion.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!dlFileVersionModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      dlFileVersion.setModifiedDate(now);
    }
 else {
      dlFileVersion.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (dlFileVersion.isNew()) {
      session.save(dlFileVersion);
      dlFileVersion.setNew(false);
    }
 else {
      dlFileVersion=(DLFileVersion)session.merge(dlFileVersion);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DLFileVersionModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{dlFileVersionModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalUuid(),dlFileVersionModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{dlFileVersionModelImpl.getUuid(),dlFileVersionModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{dlFileVersionModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID,args);
      args=new Object[]{dlFileVersionModelImpl.getFileEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FILEENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FILEENTRYID,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MIMETYPE.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalMimeType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_MIMETYPE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MIMETYPE,args);
      args=new Object[]{dlFileVersionModelImpl.getMimeType()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_MIMETYPE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_MIMETYPE,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_F_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalFileEntryId(),dlFileVersionModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_F_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_F_S,args);
      args=new Object[]{dlFileVersionModelImpl.getFileEntryId(),dlFileVersionModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_F_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_F_S,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalGroupId(),dlFileVersionModelImpl.getOriginalFolderId(),dlFileVersionModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_S,args);
      args=new Object[]{dlFileVersionModelImpl.getGroupId(),dlFileVersionModelImpl.getFolderId(),dlFileVersionModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_S,args);
    }
    if ((dlFileVersionModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_T_V.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{dlFileVersionModelImpl.getOriginalGroupId(),dlFileVersionModelImpl.getOriginalFolderId(),dlFileVersionModelImpl.getOriginalTitle(),dlFileVersionModelImpl.getOriginalVersion()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_T_V,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_T_V,args);
      args=new Object[]{dlFileVersionModelImpl.getGroupId(),dlFileVersionModelImpl.getFolderId(),dlFileVersionModelImpl.getTitle(),dlFileVersionModelImpl.getVersion()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_F_T_V,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_F_T_V,args);
    }
  }
  entityCache.putResult(DLFileVersionModelImpl.ENTITY_CACHE_ENABLED,DLFileVersionImpl.class,dlFileVersion.getPrimaryKey(),dlFileVersion,false);
  clearUniqueFindersCache(dlFileVersionModelImpl);
  cacheUniqueFindersCache(dlFileVersionModelImpl,isNew);
  dlFileVersion.resetOriginalValues();
  return dlFileVersion;
}

{
  scProductScreenshot=toUnwrappedModel(scProductScreenshot);
  boolean isNew=scProductScreenshot.isNew();
  SCProductScreenshotModelImpl scProductScreenshotModelImpl=(SCProductScreenshotModelImpl)scProductScreenshot;
  Session session=null;
  try {
    session=openSession();
    if (scProductScreenshot.isNew()) {
      session.save(scProductScreenshot);
      scProductScreenshot.setNew(false);
    }
 else {
      scProductScreenshot=(SCProductScreenshot)session.merge(scProductScreenshot);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !SCProductScreenshotModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((scProductScreenshotModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PRODUCTENTRYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scProductScreenshotModelImpl.getOriginalProductEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PRODUCTENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PRODUCTENTRYID,args);
      args=new Object[]{scProductScreenshotModelImpl.getProductEntryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PRODUCTENTRYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PRODUCTENTRYID,args);
    }
  }
  entityCache.putResult(SCProductScreenshotModelImpl.ENTITY_CACHE_ENABLED,SCProductScreenshotImpl.class,scProductScreenshot.getPrimaryKey(),scProductScreenshot,false);
  clearUniqueFindersCache(scProductScreenshotModelImpl);
  cacheUniqueFindersCache(scProductScreenshotModelImpl,isNew);
  scProductScreenshot.resetOriginalValues();
  return scProductScreenshot;
}

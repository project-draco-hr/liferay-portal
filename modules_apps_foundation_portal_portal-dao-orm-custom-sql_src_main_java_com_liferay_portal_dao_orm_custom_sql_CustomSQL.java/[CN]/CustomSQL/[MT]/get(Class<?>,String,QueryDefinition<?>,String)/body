{
  String sql=get(clazz,id);
  if (!Validator.isBlank(tableName) && !tableName.endsWith(StringPool.PERIOD)) {
    tableName=tableName.concat(StringPool.PERIOD);
  }
  if (queryDefinition.getStatus() == WorkflowConstants.STATUS_ANY) {
    sql=sql.replace(_STATUS_KEYWORD,_STATUS_CONDITION_EMPTY);
  }
 else {
    if (queryDefinition.isExcludeStatus()) {
      sql=sql.replace(_STATUS_KEYWORD,tableName.concat(_STATUS_CONDITION_INVERSE));
    }
 else {
      sql=sql.replace(_STATUS_KEYWORD,tableName.concat(_STATUS_CONDITION_DEFAULT));
    }
  }
  if (queryDefinition.getOwnerUserId() > 0) {
    if (queryDefinition.isIncludeOwner()) {
      StringBundler sb=new StringBundler(7);
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(tableName);
      sb.append(_OWNER_USER_ID_CONDITION_DEFAULT);
      sb.append(" AND ");
      sb.append(tableName);
      sb.append(_STATUS_CONDITION_INVERSE);
      sb.append(StringPool.CLOSE_PARENTHESIS);
      sql=sql.replace(_OWNER_USER_ID_KEYWORD,sb.toString());
      sql=sql.replace(_OWNER_USER_ID_AND_OR_CONNECTOR," OR ");
    }
 else {
      sql=sql.replace(_OWNER_USER_ID_KEYWORD,tableName.concat(_OWNER_USER_ID_CONDITION_DEFAULT));
      sql=sql.replace(_OWNER_USER_ID_AND_OR_CONNECTOR," AND ");
    }
  }
 else {
    sql=sql.replace(_OWNER_USER_ID_KEYWORD,StringPool.BLANK);
    sql=sql.replace(_OWNER_USER_ID_AND_OR_CONNECTOR,StringPool.BLANK);
  }
  return sql;
}

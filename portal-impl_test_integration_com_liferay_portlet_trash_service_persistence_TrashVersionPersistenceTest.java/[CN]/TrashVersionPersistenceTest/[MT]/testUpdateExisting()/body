{
  long pk=ServiceTestUtil.nextLong();
  TrashVersion newTrashVersion=_persistence.create(pk);
  newTrashVersion.setEntryId(ServiceTestUtil.nextLong());
  newTrashVersion.setClassNameId(ServiceTestUtil.nextLong());
  newTrashVersion.setClassPK(ServiceTestUtil.nextLong());
  newTrashVersion.setStatus(ServiceTestUtil.nextInt());
  _persistence.update(newTrashVersion);
  TrashVersion existingTrashVersion=_persistence.findByPrimaryKey(newTrashVersion.getPrimaryKey());
  Assert.assertEquals(existingTrashVersion.getVersionId(),newTrashVersion.getVersionId());
  Assert.assertEquals(existingTrashVersion.getEntryId(),newTrashVersion.getEntryId());
  Assert.assertEquals(existingTrashVersion.getClassNameId(),newTrashVersion.getClassNameId());
  Assert.assertEquals(existingTrashVersion.getClassPK(),newTrashVersion.getClassPK());
  Assert.assertEquals(existingTrashVersion.getStatus(),newTrashVersion.getStatus());
}

{
  Map<String,String[]> parameterMap=new LinkedHashMap<>();
  String dataStrategyParameter=PortletDataHandlerKeys.DATA_STRATEGY_MIRROR_OVERWRITE;
  if (Validator.isNotNull(dataStrategy)) {
    parameterMap.put(PortletDataHandlerKeys.DATA_STRATEGY,new String[]{dataStrategyParameter});
  }
  boolean deleteMissingLayoutsParameter=true;
  if (deleteMissingLayouts != null) {
    deleteMissingLayoutsParameter=deleteMissingLayouts.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,new String[]{String.valueOf(deleteMissingLayoutsParameter)});
  boolean deletePortletDataParameter=false;
  if (deletePortletData != null) {
    deletePortletDataParameter=deletePortletData.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.DELETE_PORTLET_DATA,new String[]{String.valueOf(deletePortletDataParameter)});
  boolean ignoreLastPublishDateParameter=true;
  if (ignoreLastPublishDate != null) {
    ignoreLastPublishDateParameter=ignoreLastPublishDate.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.IGNORE_LAST_PUBLISH_DATE,new String[]{String.valueOf(ignoreLastPublishDateParameter)});
  boolean layoutSetPrototypeLinkEnabledParameter=false;
  if (layoutSetPrototypeLinkEnabled != null) {
    layoutSetPrototypeLinkEnabledParameter=layoutSetPrototypeLinkEnabled.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED,new String[]{String.valueOf(layoutSetPrototypeLinkEnabledParameter)});
  boolean layoutSetPrototypeSettingsParameter=false;
  if (layoutSetPrototypeLinkEnabled != null) {
    layoutSetPrototypeSettingsParameter=layoutSetPrototypeLinkEnabled.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_SETTINGS,new String[]{String.valueOf(layoutSetPrototypeSettingsParameter)});
  boolean layoutSetSettingsParameter=false;
  if (layoutSetSettings != null) {
    layoutSetSettingsParameter=layoutSetSettings.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.LAYOUT_SET_SETTINGS,new String[]{String.valueOf(layoutSetSettingsParameter)});
  boolean logoParameter=false;
  if (logo != null) {
    logoParameter=logo.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.LOGO,new String[]{String.valueOf(logoParameter)});
  boolean permissionsParameter=true;
  if (permissions != null) {
    permissionsParameter=permissions.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PERMISSIONS,new String[]{String.valueOf(permissionsParameter)});
  boolean portletConfigurationParameter=true;
  if (portletConfiguration != null) {
    portletConfigurationParameter=portletConfiguration.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_CONFIGURATION,new String[]{String.valueOf(portletConfigurationParameter)});
  boolean portletConfigurationAllParameter=true;
  if (portletConfigurationAll != null) {
    portletConfigurationAllParameter=portletConfigurationAll.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_CONFIGURATION_ALL,new String[]{String.valueOf(portletConfigurationAllParameter)});
  boolean portletDataParameter=false;
  if (portletData != null) {
    portletDataParameter=portletData.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA,new String[]{String.valueOf(portletDataParameter)});
  boolean portletDataAllParameter=false;
  if (portletDataAll != null) {
    portletDataAllParameter=portletDataAll.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{String.valueOf(portletDataAllParameter)});
  boolean portletSetupAllParameter=true;
  if (portletSetupAll != null) {
    portletSetupAllParameter=portletSetupAll.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_SETUP_ALL,new String[]{String.valueOf(portletSetupAllParameter)});
  String rangeParameter=ExportImportDateUtil.RANGE_FROM_LAST_PUBLISH_DATE;
  if (Validator.isNotNull(range)) {
    rangeParameter=range;
  }
  parameterMap.put(ExportImportDateUtil.RANGE,new String[]{rangeParameter});
  boolean themeReferenceParameter=false;
  if (themeReference != null) {
    themeReferenceParameter=themeReference.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.THEME_REFERENCE,new String[]{String.valueOf(themeReferenceParameter)});
  boolean updateLastPublishDateParameter=true;
  if (updateLastPublishDate != null) {
    updateLastPublishDateParameter=updateLastPublishDate.booleanValue();
  }
  parameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE,new String[]{String.valueOf(updateLastPublishDateParameter)});
  String userIdStrategyParameter=UserIdStrategy.CURRENT_USER_ID;
  if (Validator.isNotNull(userIdStrategy)) {
    userIdStrategyParameter=userIdStrategy;
  }
  parameterMap.put(PortletDataHandlerKeys.USER_ID_STRATEGY,new String[]{userIdStrategyParameter});
  return parameterMap;
}

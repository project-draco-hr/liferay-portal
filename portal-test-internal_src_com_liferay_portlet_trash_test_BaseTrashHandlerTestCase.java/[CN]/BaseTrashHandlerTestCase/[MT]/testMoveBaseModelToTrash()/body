{
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(parentBaseModel);
  int initialBaseModelsSearchCount=0;
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  int initialTrashEntriesSearchCount=0;
  if (isIndexableBaseModel()) {
    initialBaseModelsSearchCount=searchBaseModelsCount(getBaseModelClass(),group.getGroupId());
    initialTrashEntriesSearchCount=searchTrashEntriesCount(getSearchKeywords(),serviceContext);
  }
  baseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  Assert.assertEquals(initialBaseModelsCount,getNotInTrashBaseModelsCount(parentBaseModel));
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount(group.getGroupId()));
  if (isIndexableBaseModel()) {
    Assert.assertEquals(initialBaseModelsSearchCount,searchBaseModelsCount(getBaseModelClass(),group.getGroupId()));
    Assert.assertEquals(initialTrashEntriesSearchCount + 1,searchTrashEntriesCount(getSearchKeywords(),serviceContext));
  }
  if (isAssetableModel()) {
    Assert.assertFalse(isAssetEntryVisible(baseModel));
  }
  TrashEntry trashEntry=TrashEntryLocalServiceUtil.getEntry(getBaseModelClassName(),getTrashEntryClassPK(baseModel));
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  Assert.assertEquals(1,getDeletionSystemEventCount(trashHandler,trashEntry.getSystemEventSetKey()));
}

{
  Assume.assumeTrue(this instanceof WhenHasParent);
  Assume.assumeTrue(this instanceof WhenIsRestorableBaseModel);
  WhenHasParent whenHasParent=(WhenHasParent)this;
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  whenHasParent.moveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());
  TrashHandler parentTrashHandler=TrashHandlerRegistryUtil.getTrashHandler(whenHasParent.getParentBaseModelClassName());
  parentTrashHandler.deleteTrashEntry((Long)parentBaseModel.getPrimaryKeyObj());
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  boolean restorable=trashHandler.isRestorable(getAssetClassPK(baseModel));
  Assert.assertFalse(restorable);
}

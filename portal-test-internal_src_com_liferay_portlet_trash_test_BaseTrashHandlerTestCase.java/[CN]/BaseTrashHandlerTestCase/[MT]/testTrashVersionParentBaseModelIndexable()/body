{
  Assume.assumeTrue(this instanceof WhenIsIndexableBaseModel);
  Assume.assumeTrue(this instanceof WhenIsUpdatableBaseModel);
  Assume.assumeTrue(this instanceof WhenIsVersionableBaseModel);
  WhenIsIndexableBaseModel whenIsIndexableBaseModel=(WhenIsIndexableBaseModel)this;
  int initialBaseModelsSearchCount=whenIsIndexableBaseModel.searchBaseModelsCount(getBaseModelClass(),group.getGroupId());
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  int initialTrashEntriesSearchCount=whenIsIndexableBaseModel.searchTrashEntriesCount(whenIsIndexableBaseModel.getSearchKeywords(),serviceContext);
  WhenIsVersionableBaseModel whenIsVersionableBaseModel=(WhenIsVersionableBaseModel)this;
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  baseModel=whenIsVersionableBaseModel.expireBaseModel(baseModel,serviceContext);
  WhenIsUpdatableBaseModel whenIsUpdatableBaseModel=(WhenIsUpdatableBaseModel)this;
  WorkflowedModel workflowedModel=getWorkflowedModel(baseModel);
  List<Integer> originalStatuses=new ArrayList<>();
  originalStatuses.add(workflowedModel.getStatus());
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  baseModel=whenIsUpdatableBaseModel.updateBaseModel((Long)baseModel.getPrimaryKeyObj(),serviceContext);
  workflowedModel=getWorkflowedModel(baseModel);
  originalStatuses.add(workflowedModel.getStatus());
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  baseModel=whenIsUpdatableBaseModel.updateBaseModel((Long)baseModel.getPrimaryKeyObj(),serviceContext);
  workflowedModel=getWorkflowedModel(baseModel);
  originalStatuses.add(workflowedModel.getStatus());
  Assert.assertEquals(initialBaseModelsSearchCount + 1,whenIsIndexableBaseModel.searchBaseModelsCount(getBaseModelClass(),group.getGroupId()));
  Assert.assertEquals(initialTrashEntriesSearchCount,whenIsIndexableBaseModel.searchTrashEntriesCount(whenIsIndexableBaseModel.getSearchKeywords(),serviceContext));
}

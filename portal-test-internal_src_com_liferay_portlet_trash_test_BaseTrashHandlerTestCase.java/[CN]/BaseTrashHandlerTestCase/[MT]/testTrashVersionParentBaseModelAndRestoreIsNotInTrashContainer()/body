{
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  List<Integer> originalStatuses=new ArrayList<>();
  baseModel=addBaseModel(parentBaseModel,true,serviceContext);
  baseModel=expireBaseModel(baseModel,serviceContext);
  WorkflowedModel workflowedModel=getWorkflowedModel(baseModel);
  originalStatuses.add(workflowedModel.getStatus());
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  baseModel=updateBaseModel((Long)baseModel.getPrimaryKeyObj(),serviceContext);
  workflowedModel=getWorkflowedModel(baseModel);
  originalStatuses.add(workflowedModel.getStatus());
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  baseModel=updateBaseModel((Long)baseModel.getPrimaryKeyObj(),serviceContext);
  workflowedModel=getWorkflowedModel(baseModel);
  originalStatuses.add(workflowedModel.getStatus());
  moveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());
  if (isBaseModelMoveableFromTrash()) {
    moveBaseModelFromTrash(baseModel,group,serviceContext);
    baseModel=getBaseModel((Long)baseModel.getPrimaryKeyObj());
    Assert.assertFalse(isInTrashContainer(baseModel));
  }
}

{
  Assume.assumeTrue(this instanceof WhenHasGrandParent);
  Assume.assumeTrue(this instanceof WhenIsAssetableBaseModel);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> grandparentBaseModel=getParentBaseModel(group,serviceContext);
  BaseModel<?> parentBaseModel=getParentBaseModel(group,(Long)grandparentBaseModel.getPrimaryKeyObj(),serviceContext);
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  WhenHasParent whenHasParent=(WhenHasParent)this;
  whenHasParent.moveParentBaseModelToTrash((Long)grandparentBaseModel.getPrimaryKeyObj());
  TrashHandler parentTrashHandler=TrashHandlerRegistryUtil.getTrashHandler(whenHasParent.getParentBaseModelClassName());
  parentTrashHandler.restoreTrashEntry(TestPropsValues.getUserId(),(Long)grandparentBaseModel.getPrimaryKeyObj());
  WhenIsAssetableBaseModel whenIsAssetableBaseModel=(WhenIsAssetableBaseModel)this;
  Assert.assertTrue(whenIsAssetableBaseModel.isAssetEntryVisible(baseModel,getAssetClassPK(baseModel)));
}

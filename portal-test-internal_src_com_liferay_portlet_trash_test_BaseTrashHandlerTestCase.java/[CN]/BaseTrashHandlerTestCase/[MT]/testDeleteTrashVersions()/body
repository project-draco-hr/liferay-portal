{
  Assume.assumeTrue(this instanceof WhenHasParent);
  Assume.assumeTrue(this instanceof WhenIsUpdatableBaseModel);
  WhenIsUpdatableBaseModel whenIsUpdatableBaseModel=(WhenIsUpdatableBaseModel)this;
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  int initialTrashVersionsCount=TrashVersionLocalServiceUtil.getTrashVersionsCount();
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  baseModel=whenIsUpdatableBaseModel.updateBaseModel((Long)baseModel.getPrimaryKeyObj(),serviceContext);
  WhenHasParent whenHasParent=(WhenHasParent)this;
  whenHasParent.moveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  trashHandler.deleteTrashEntry(getTrashEntryClassPK(baseModel));
  Assert.assertEquals(initialTrashVersionsCount,TrashVersionLocalServiceUtil.getTrashVersionsCount());
}

{
  Assume.assumeTrue(this instanceof WhenHasParent);
  Assume.assumeTrue(this instanceof WhenIsRestorableBaseModel);
  Assume.assumeTrue(this instanceof WhenIsRestorableParentBaseModelFromTrash);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  baseModel=addBaseModel(parentBaseModel,serviceContext);
  WhenHasParent whenHasParent=(WhenHasParent)this;
  whenHasParent.moveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());
  WhenIsRestorableParentBaseModelFromTrash whenIsRestorableParentBaseModelFromTrash=(WhenIsRestorableParentBaseModelFromTrash)this;
  whenIsRestorableParentBaseModelFromTrash.restoreParentBaseModelFromTrash((Long)parentBaseModel.getPrimaryKeyObj());
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(getBaseModelClassName());
  trashHandler.restoreTrashEntry(TestPropsValues.getUserId(),getTrashEntryClassPK(baseModel));
}

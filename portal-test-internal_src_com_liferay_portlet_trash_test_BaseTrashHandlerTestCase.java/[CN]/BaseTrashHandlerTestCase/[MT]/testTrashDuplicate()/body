{
  Assume.assumeTrue(this instanceof WhenCanBeDuplicatedInTrash);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(parentBaseModel);
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  baseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  baseModel=getBaseModel((Long)baseModel.getPrimaryKeyObj());
  String baseModelName=getBaseModelName(baseModel);
  Assert.assertTrue(baseModelName.startsWith(StringPool.SLASH));
  BaseModel<?> duplicateBaseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)duplicateBaseModel.getPrimaryKeyObj());
  duplicateBaseModel=getBaseModel((Long)duplicateBaseModel.getPrimaryKeyObj());
  Assert.assertEquals(initialBaseModelsCount,getNotInTrashBaseModelsCount(parentBaseModel));
  Assert.assertEquals(initialTrashEntriesCount + 2,getTrashEntriesCount(group.getGroupId()));
  String duplicateBaseModelName=getBaseModelName(duplicateBaseModel);
  Assert.assertTrue(duplicateBaseModelName.startsWith(StringPool.SLASH));
}

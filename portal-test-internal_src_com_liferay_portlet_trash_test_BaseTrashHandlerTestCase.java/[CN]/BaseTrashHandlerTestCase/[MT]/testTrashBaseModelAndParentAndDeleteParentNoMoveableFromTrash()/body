{
  Assume.assumeFalse(this instanceof WhenIsMoveableFromTrashBaseModel);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  int initialBaseModelsCount=getNotInTrashBaseModelsCount(parentBaseModel);
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  baseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  moveParentBaseModelToTrash((Long)parentBaseModel.getPrimaryKeyObj());
  TrashHandler parentTrashHandler=TrashHandlerRegistryUtil.getTrashHandler(getParentBaseModelClassName());
  parentTrashHandler.deleteTrashEntry((Long)parentBaseModel.getPrimaryKeyObj());
  Assert.assertEquals(initialBaseModelsCount,getNotInTrashBaseModelsCount(parentBaseModel));
  try {
    getBaseModel((Long)baseModel.getPrimaryKeyObj());
    Assert.fail();
  }
 catch (  NoSuchModelException nsme) {
  }
  Assert.assertEquals(initialTrashEntriesCount,getTrashEntriesCount(group.getGroupId()));
}

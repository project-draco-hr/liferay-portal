{
  try {
    if (matches(className)) {
      InstrumentationAgent.recordInstrumentation(classLoader,className,classfileBuffer);
      ProjectData projectData=ProjectDataUtil.getOrCreateProjectData(classLoader);
      ClassWriter classWriter=new ContextAwareClassWriter(ClassWriter.COMPUTE_FRAMES);
      String name=className.replace('/','.');
      ClassVisitor classVisitor=new CoberturaClassVisitor(projectData.getOrCreateClassData(name),classWriter);
      ClassReader classReader=new ClassReader(classfileBuffer);
synchronized (projectData) {
        classReader.accept(classVisitor,0);
      }
      byte[] data=classWriter.toByteArray();
      dumpIntrumentedClass(classLoader,className,data);
      return data;
    }
    if ((className != null) && className.equals("com/liferay/cobertura/agent/coveragedata/TouchCollector")) {
      ClassWriter classWriter=new ContextAwareClassWriter(ClassWriter.COMPUTE_FRAMES);
      ClassVisitor classVisitor=new TouchCollectorClassVisitor(classWriter);
      ClassReader classReader=new ClassReader(classfileBuffer);
      classReader.accept(classVisitor,0);
      byte[] data=classWriter.toByteArray();
      dumpIntrumentedClass(classLoader,className,data);
      return data;
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw new RuntimeException(t);
  }
  return null;
}

{
  long entryId=RandomTestUtil.randomLong();
  when(_blogsEntry.getEntryId()).thenReturn(entryId);
  long groupId=RandomTestUtil.randomLong();
  when(_blogsEntry.getGroupId()).thenReturn(groupId);
  String urlTitle=RandomTestUtil.randomString();
  when(_blogsEntry.getUrlTitle()).thenReturn(urlTitle);
  String layoutFullURL=RandomTestUtil.randomString();
  when(_portal.getLayoutFullURL(_themeDisplay)).thenReturn(layoutFullURL);
  String readMore=RandomTestUtil.randomString();
  when(_themeDisplay.translate("read-more")).thenReturn(readMore);
  long userId=RandomTestUtil.randomLong();
  when(_userLocalService.getDefaultUserId(Matchers.anyLong())).thenReturn(userId);
  long commentId=RandomTestUtil.randomLong();
  when(_commentManager.addComment(Matchers.anyLong(),Matchers.anyLong(),Matchers.anyString(),Matchers.anyLong(),Matchers.anyString(),Matchers.anyString(),Matchers.anyString(),(Function<String,ServiceContext>)Matchers.any())).thenReturn(commentId);
  Trackback trackback=new TrackbackImpl();
  trackback.setCommentManager(_commentManager);
  trackback.setLinkbackConsumer(_linkbackConsumer);
  String excerpt=RandomTestUtil.randomString();
  String url=RandomTestUtil.randomString();
  String blogName=RandomTestUtil.randomString();
  String title=RandomTestUtil.randomString();
  trackback.addTrackback(_blogsEntry,_themeDisplay,excerpt,url,blogName,title,_serviceContextFunction);
  Mockito.verify(_commentManager).addComment(userId,groupId,BlogsEntry.class.getName(),entryId,blogName,title,"[...] " + excerpt + " [...] [url="+ url+ "]"+ readMore+ "[/url]",_serviceContextFunction);
  Mockito.verify(_linkbackConsumer).addNewTrackback(commentId,url,layoutFullURL + "/-/blogs/" + urlTitle);
}

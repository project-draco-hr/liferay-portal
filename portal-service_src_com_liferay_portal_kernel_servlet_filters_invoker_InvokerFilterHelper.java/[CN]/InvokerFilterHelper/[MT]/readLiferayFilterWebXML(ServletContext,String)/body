{
  InputStream inputStream=servletContext.getResourceAsStream(path);
  if (inputStream == null) {
    return;
  }
  Document document=SAXReaderUtil.read(inputStream,true);
  Element rootElement=document.getRootElement();
  List<Element> filterElements=rootElement.elements("filter");
  for (  Element filterElement : filterElements) {
    String filterName=filterElement.elementText("filter-name");
    String filterClassName=filterElement.elementText("filter-class");
    Map<String,String> initParameterMap=new HashMap<>();
    List<Element> initParamElements=filterElement.elements("init-param");
    for (    Element initParamElement : initParamElements) {
      String name=initParamElement.elementText("param-name");
      String value=initParamElement.elementText("param-value");
      initParameterMap.put(name,value);
    }
    initFilter(servletContext,filterName,filterClassName,initParameterMap);
  }
  List<Element> filterMappingElements=rootElement.elements("filter-mapping");
  for (  Element filterMappingElement : filterMappingElements) {
    String filterName=filterMappingElement.elementText("filter-name");
    List<String> urlPatterns=new ArrayList<>();
    List<Element> urlPatternElements=filterMappingElement.elements("url-pattern");
    for (    Element urlPatternElement : urlPatternElements) {
      urlPatterns.add(urlPatternElement.getTextTrim());
    }
    List<String> dispatchers=new ArrayList<>(4);
    List<Element> dispatcherElements=filterMappingElement.elements("dispatcher");
    for (    Element dispatcherElement : dispatcherElements) {
      String dispatcher=StringUtil.toUpperCase(dispatcherElement.getTextTrim());
      dispatchers.add(dispatcher);
    }
    initFilterMapping(filterName,urlPatterns,dispatchers);
  }
}

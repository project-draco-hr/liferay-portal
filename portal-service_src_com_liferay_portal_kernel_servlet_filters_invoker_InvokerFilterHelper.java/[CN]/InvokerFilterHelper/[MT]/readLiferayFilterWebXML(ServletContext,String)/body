{
  InputStream inputStream=servletContext.getResourceAsStream(path);
  if (inputStream == null) {
    return;
  }
  Document document=SAXReaderUtil.read(inputStream,true);
  Element rootElement=document.getRootElement();
  Map<String,FilterConfig> filterConfigs=new HashMap<>();
  Map<String,Filter> filters=new HashMap<>();
  for (  Element filterElement : rootElement.elements("filter")) {
    String filterName=filterElement.elementText("filter-name");
    String filterClassName=filterElement.elementText("filter-class");
    Map<String,String> initParameterMap=new HashMap<>();
    List<Element> initParamElements=filterElement.elements("init-param");
    for (    Element initParamElement : initParamElements) {
      String name=initParamElement.elementText("param-name");
      String value=initParamElement.elementText("param-value");
      initParameterMap.put(name,value);
    }
    FilterConfig filterConfig=new InvokerFilterConfig(servletContext,filterName,initParameterMap);
    Filter filter=initFilter(servletContext,filterClassName,filterName,filterConfig);
    if (filter != null) {
      filterConfigs.put(filterName,filterConfig);
      filters.put(filterName,filter);
    }
  }
  List<Element> filterMappingElements=rootElement.elements("filter-mapping");
  for (  Element filterMappingElement : filterMappingElements) {
    String filterName=filterMappingElement.elementText("filter-name");
    List<String> urlPatterns=new ArrayList<>();
    List<Element> urlPatternElements=filterMappingElement.elements("url-pattern");
    for (    Element urlPatternElement : urlPatternElements) {
      urlPatterns.add(urlPatternElement.getTextTrim());
    }
    List<String> dispatchers=new ArrayList<>(4);
    List<Element> dispatcherElements=filterMappingElement.elements("dispatcher");
    for (    Element dispatcherElement : dispatcherElements) {
      String dispatcher=StringUtil.toUpperCase(dispatcherElement.getTextTrim());
      dispatchers.add(dispatcher);
    }
    FilterConfig filterConfig=filterConfigs.get(filterName);
    if (filterConfig == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("No filter config exists with filter name " + filterName);
      }
      continue;
    }
    Filter filter=filters.get(filterName);
    if (filter == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("No filter exists with filter name " + filterName);
      }
      return;
    }
    _filterMappings.add(new FilterMapping(filter,filterConfig,urlPatterns,dispatchers,filterName));
  }
}

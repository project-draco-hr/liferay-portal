{
  User user=userPersistence.findByPrimaryKey(userId);
  WikiNode node=wikiNodePersistence.findByPrimaryKey(nodeId);
  Date now=new Date();
  long pageId=counterLocalService.increment();
  content=SanitizerUtil.sanitize(user.getCompanyId(),node.getGroupId(),userId,WikiPage.class.getName(),pageId,"text/" + format,content);
  validate(title,nodeId,content,format);
  long resourcePrimKey=wikiPageResourceLocalService.getPageResourcePrimKey(node.getGroupId(),nodeId,title);
  WikiPage page=wikiPagePersistence.create(pageId);
  page.setUuid(serviceContext.getUuid());
  page.setResourcePrimKey(resourcePrimKey);
  page.setGroupId(node.getGroupId());
  page.setCompanyId(user.getCompanyId());
  page.setUserId(user.getUserId());
  page.setUserName(user.getFullName());
  page.setNodeId(nodeId);
  page.setTitle(title);
  page.setVersion(version);
  page.setMinorEdit(minorEdit);
  page.setContent(content);
  page.setSummary(summary);
  page.setFormat(format);
  page.setHead(head);
  page.setParentTitle(parentTitle);
  page.setRedirectTitle(redirectTitle);
  page.setStatus(WorkflowConstants.STATUS_DRAFT);
  page.setStatusByUserId(userId);
  page.setStatusDate(serviceContext.getModifiedDate(now));
  page.setExpandoBridgeAttributes(serviceContext);
  wikiPagePersistence.update(page);
  if (serviceContext.isAddGroupPermissions() || serviceContext.isAddGuestPermissions()) {
    addPageResources(page,serviceContext.isAddGroupPermissions(),serviceContext.isAddGuestPermissions());
  }
 else {
    addPageResources(page,serviceContext.getGroupPermissions(),serviceContext.getGuestPermissions());
  }
  node.setLastPostDate(serviceContext.getModifiedDate(now));
  wikiNodePersistence.update(node);
  updateAsset(userId,page,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds(),serviceContext.getAssetPriority());
  page=startWorkflowInstance(userId,page,serviceContext);
  return page;
}

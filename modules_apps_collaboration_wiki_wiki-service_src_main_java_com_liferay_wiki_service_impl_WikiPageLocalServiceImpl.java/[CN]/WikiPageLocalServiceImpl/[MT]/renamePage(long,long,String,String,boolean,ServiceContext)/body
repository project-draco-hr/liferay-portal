{
  wikiPageTitleValidator.validate(newTitle);
  if (StringUtil.equalsIgnoreCase(title,newTitle)) {
    throw new DuplicatePageException(newTitle);
  }
  if (isUsedTitle(nodeId,newTitle)) {
    WikiPage page=getPage(nodeId,newTitle);
    if (((page.getVersion() == WikiPageConstants.VERSION_DEFAULT) && (page.getContent().length() < 200)) || !strict) {
      deletePage(nodeId,newTitle);
    }
 else {
      throw new DuplicatePageException(newTitle);
    }
  }
  WikiPage page=getPage(nodeId,title);
  String summary=page.getSummary();
  if (Validator.isNotNull(page.getRedirectTitle())) {
    page.setRedirectTitle(StringPool.BLANK);
    summary=StringPool.BLANK;
  }
  serviceContext.setCommand(Constants.RENAME);
  WikiPageRenameContentProcessor wikiPageRenameContentProcessor=_serviceTrackerMap.getService(page.getFormat());
  String content=page.getContent();
  if (wikiPageRenameContentProcessor != null) {
    List<WikiPage> versionPages=wikiPagePersistence.findByN_T_H(nodeId,title,false);
    for (    WikiPage curPage : versionPages) {
      curPage.setTitle(newTitle);
      curPage.setContent(wikiPageRenameContentProcessor.processContent(curPage.getContent(),title,newTitle,curPage.getNodeId()));
      wikiPagePersistence.update(curPage);
    }
    content=wikiPageRenameContentProcessor.processContent(content,title,newTitle,page.getNodeId());
  }
  updatePage(userId,page,0,newTitle,content,summary,page.getMinorEdit(),page.getFormat(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
}

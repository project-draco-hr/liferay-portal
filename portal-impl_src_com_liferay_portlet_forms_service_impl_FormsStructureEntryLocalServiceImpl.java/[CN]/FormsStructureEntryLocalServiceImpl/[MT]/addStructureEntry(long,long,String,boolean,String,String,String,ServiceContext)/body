{
  User user=userPersistence.findByPrimaryKey(serviceContext.getUserId());
  structureId=structureId.trim().toUpperCase();
  Date now=new Date();
  try {
    xsd=FormsXMLUtil.formatXML(xsd);
  }
 catch (  Exception e) {
    throw new StructureEntryXsdException();
  }
  if (autoStructureId) {
    structureId=String.valueOf(counterLocalService.increment());
  }
  validate(groupId,structureId,autoStructureId,name,xsd);
  long id=counterLocalService.increment();
  FormsStructureEntry structureEntry=formsStructureEntryPersistence.create(id);
  structureEntry.setUuid(serviceContext.getUuid());
  structureEntry.setStructureId(structureId);
  structureEntry.setGroupId(serviceContext.getScopeGroupId());
  structureEntry.setCompanyId(user.getCompanyId());
  structureEntry.setUserId(user.getUserId());
  structureEntry.setUserName(user.getFullName());
  structureEntry.setCreateDate(serviceContext.getCreateDate(now));
  structureEntry.setDescription(description);
  structureEntry.setModifiedDate(serviceContext.getModifiedDate(now));
  structureEntry.setName(name);
  structureEntry.setXsd(xsd);
  formsStructureEntryPersistence.update(structureEntry,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addStructureEntryResources(structureEntry,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addStructureEntryResources(structureEntry,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  return structureEntry;
}

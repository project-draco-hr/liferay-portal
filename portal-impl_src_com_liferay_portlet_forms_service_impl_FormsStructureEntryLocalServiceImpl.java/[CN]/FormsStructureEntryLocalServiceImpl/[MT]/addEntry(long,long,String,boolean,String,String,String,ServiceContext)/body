{
  User user=userPersistence.findByPrimaryKey(serviceContext.getUserId());
  formStructureId=formStructureId.trim().toUpperCase();
  Date now=new Date();
  try {
    xsd=FormsXMLUtil.formatXML(xsd);
  }
 catch (  Exception e) {
    throw new EntryXsdException();
  }
  if (autoFormStructureId) {
    formStructureId=String.valueOf(counterLocalService.increment());
  }
  validate(groupId,formStructureId,autoFormStructureId,name,xsd);
  long id=counterLocalService.increment();
  FormsStructureEntry entry=formsStructureEntryPersistence.create(id);
  entry.setUuid(serviceContext.getUuid());
  entry.setFormStructureId(formStructureId);
  entry.setGroupId(serviceContext.getScopeGroupId());
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setUserName(user.getFullName());
  entry.setCreateDate(serviceContext.getCreateDate(now));
  entry.setModifiedDate(serviceContext.getModifiedDate(now));
  entry.setName(name);
  entry.setDescription(description);
  entry.setXsd(xsd);
  formsStructureEntryPersistence.update(entry,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addEntryResources(entry,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addEntryResources(entry,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  ExpandoBridge expandoBridge=entry.getExpandoBridge();
  expandoBridge.setAttributes(serviceContext);
  return entry;
}

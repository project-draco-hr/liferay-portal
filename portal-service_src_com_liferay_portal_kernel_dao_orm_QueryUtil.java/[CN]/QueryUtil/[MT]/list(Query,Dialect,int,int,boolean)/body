{
  if ((start == ALL_POS) && (end == ALL_POS)) {
    return query.list(unmodifiable);
  }
  if (start < 0) {
    start=0;
  }
  if (end < start) {
    end=start;
  }
  if (start == end) {
    if (unmodifiable) {
      return Collections.emptyList();
    }
 else {
      return new ArrayList<Object>();
    }
  }
  if (dialect.supportsLimit()) {
    query.setMaxResults(end - start);
    query.setFirstResult(start);
    return query.list(unmodifiable);
  }
  List<Object> list=new ArrayList<Object>();
  DB db=DBFactoryUtil.getDB();
  if (!db.isSupportsScrollableResults()) {
    if (_log.isWarnEnabled()) {
      _log.warn("Database does not support scrollable results");
    }
    return list;
  }
  ScrollableResults sr=query.scroll();
  if (sr.first() && sr.scroll(start)) {
    for (int i=start; i < end; i++) {
      Object[] array=sr.get();
      if (array.length == 1) {
        list.add(array[0]);
      }
 else {
        list.add(array);
      }
      if (!sr.next()) {
        break;
      }
    }
  }
  if (unmodifiable) {
    return Collections.unmodifiableList(list);
  }
 else {
    return list;
  }
}

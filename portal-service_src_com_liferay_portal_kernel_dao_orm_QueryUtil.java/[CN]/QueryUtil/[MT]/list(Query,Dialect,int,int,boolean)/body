{
  if ((start == ALL_POS) && (end == ALL_POS)) {
    return query.list(unmodifiable);
  }
 else {
    start=start < 0 ? 0 : start;
    end=end < start ? start : end;
    int maxResults=end - start;
    if (maxResults == 0) {
      if (unmodifiable) {
        return new UnmodifiableList<Object>(Collections.emptyList());
      }
 else {
        return new ArrayList<Object>();
      }
    }
 else     if (dialect.supportsLimit()) {
      query.setMaxResults(maxResults);
      query.setFirstResult(start);
      return query.list(unmodifiable);
    }
 else {
      List<Object> list=new ArrayList<Object>();
      DB db=DBFactoryUtil.getDB();
      if (!db.isSupportsScrollableResults()) {
        if (_log.isWarnEnabled()) {
          _log.warn("Database does not support scrollable results");
        }
        return list;
      }
      ScrollableResults sr=query.scroll();
      if (sr.first() && sr.scroll(start)) {
        for (int i=start; i < end; i++) {
          Object[] array=sr.get();
          if (array.length == 1) {
            list.add(array[0]);
          }
 else {
            list.add(array);
          }
          if (!sr.next()) {
            break;
          }
        }
      }
      if (unmodifiable) {
        return new UnmodifiableList<Object>(list);
      }
 else {
        return list;
      }
    }
  }
}

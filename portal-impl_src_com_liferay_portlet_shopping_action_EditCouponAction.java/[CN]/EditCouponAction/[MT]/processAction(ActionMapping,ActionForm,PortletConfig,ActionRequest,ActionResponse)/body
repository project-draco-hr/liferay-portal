{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateCoupon(actionRequest);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteCoupons(actionRequest);
    }
    sendRedirect(actionRequest,actionResponse);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchCouponException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass().getName());
      setForward(actionRequest,"portlet.shopping.error");
    }
 else     if (e instanceof CouponCodeException || e instanceof CouponDateException || e instanceof CouponDescriptionException|| e instanceof CouponEndDateException|| e instanceof CouponLimitCategoriesException|| e instanceof CouponLimitSKUsException|| e instanceof CouponNameException|| e instanceof CouponStartDateException|| e instanceof DuplicateCouponCodeException) {
      if (e instanceof CouponLimitCategoriesException) {
        CouponLimitCategoriesException clce=(CouponLimitCategoriesException)e;
        SessionErrors.add(actionRequest,e.getClass().getName(),clce.getCategoryIds());
      }
 else       if (e instanceof CouponLimitSKUsException) {
        CouponLimitSKUsException clskue=(CouponLimitSKUsException)e;
        SessionErrors.add(actionRequest,e.getClass().getName(),clskue.getSkus());
      }
 else {
        SessionErrors.add(actionRequest,e.getClass().getName());
      }
    }
 else {
      throw e;
    }
  }
}

{
  boolean pagination=true;
  FinderPath finderPath=null;
  Object[] finderArgs=null;
  if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) {
    pagination=false;
    finderPath=FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_P_R;
    finderArgs=new Object[]{companyId,primKey,roleId};
  }
 else {
    finderPath=FINDER_PATH_WITH_PAGINATION_FIND_BY_C_P_R;
    finderArgs=new Object[]{companyId,primKey,roleId,start,end,orderByComparator};
  }
  List<ResourcePermission> list=(List<ResourcePermission>)FinderCacheUtil.getResult(finderPath,finderArgs,this);
  if ((list != null) && !list.isEmpty()) {
    for (    ResourcePermission resourcePermission : list) {
      if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(primKey,resourcePermission.getPrimKey()) || (roleId != resourcePermission.getRoleId())) {
        list=null;
        break;
      }
    }
  }
  if (list == null) {
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(5 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(5);
    }
    query.append(_SQL_SELECT_RESOURCEPERMISSION_WHERE);
    query.append(_FINDER_COLUMN_C_P_R_COMPANYID_2);
    if (primKey == null) {
      query.append(_FINDER_COLUMN_C_P_R_PRIMKEY_1);
    }
 else {
      if (primKey.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_C_P_R_PRIMKEY_3);
      }
 else {
        query.append(_FINDER_COLUMN_C_P_R_PRIMKEY_2);
      }
    }
    query.append(_FINDER_COLUMN_C_P_R_ROLEID_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else     if (pagination) {
      query.append(ResourcePermissionModelImpl.ORDER_BY_JPQL);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      if (primKey != null) {
        qPos.add(primKey);
      }
      qPos.add(roleId);
      if (!pagination) {
        list=(List<ResourcePermission>)QueryUtil.list(q,getDialect(),start,end,false);
        Collections.sort(list);
        list=new UnmodifiableList<ResourcePermission>(list);
      }
 else {
        list=(List<ResourcePermission>)QueryUtil.list(q,getDialect(),start,end);
      }
      cacheResult(list);
      FinderCacheUtil.putResult(finderPath,finderArgs,list);
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return list;
}

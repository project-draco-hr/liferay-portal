{
  Path targetFilePath=Paths.get(targetFilePathName);
  if (isParentUnsynced(targetSyncFile)) {
    if (sourceSyncFile.isFolder()) {
      List<SyncFile> syncFiles=new ArrayList<>();
      syncFiles.add(sourceSyncFile);
      List<SyncFile> childSyncFiles=SyncFileService.findSyncFiles(sourceSyncFile.getFilePathName());
      syncFiles.addAll(childSyncFiles);
      SyncFileService.unsyncFolders(getSyncAccountId(),syncFiles);
      sourceSyncFile=SyncFileService.fetchSyncFile(sourceSyncFile.getSyncFileId());
      SyncFileService.updateSyncFile(targetFilePath,targetSyncFile.getParentFolderId(),sourceSyncFile);
    }
 else {
      deleteFile(sourceSyncFile,targetSyncFile);
    }
    return;
  }
  if (sourceSyncFile.isUnsynced()) {
    if (!isParentUnsynced(sourceSyncFile)) {
      return;
    }
    List<SyncFile> syncFiles=new ArrayList<>();
    syncFiles.add(sourceSyncFile);
    List<SyncFile> childSyncFiles=SyncFileService.findSyncFiles(sourceSyncFile.getFilePathName());
    syncFiles.addAll(childSyncFiles);
    SyncFileService.resyncFolders(getSyncAccountId(),syncFiles);
    return;
  }
  Path sourceFilePath=Paths.get(sourceSyncFile.getFilePathName());
  sourceSyncFile=SyncFileService.updateSyncFile(targetFilePath,targetSyncFile.getParentFolderId(),sourceSyncFile);
  if (Files.exists(sourceFilePath)) {
    FileUtil.moveFile(sourceFilePath,targetFilePath);
    sourceSyncFile.setState(SyncFile.STATE_SYNCED);
  }
 else   if (targetSyncFile.isFolder()) {
    Files.createDirectories(targetFilePath);
    sourceSyncFile.setState(SyncFile.STATE_SYNCED);
    FileKeyUtil.writeFileKey(targetFilePath,String.valueOf(sourceSyncFile.getSyncFileId()),false);
  }
 else {
    downloadFile(sourceSyncFile,null,0,false);
  }
  sourceSyncFile.setModifiedTime(targetSyncFile.getModifiedTime());
  sourceSyncFile.setUiEvent(SyncFile.UI_EVENT_MOVED_REMOTE);
  SyncFileService.update(sourceSyncFile);
}

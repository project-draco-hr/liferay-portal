{
  Bundle jspBundle=FrameworkUtil.getBundle(com.liferay.portal.servlet.jsp.compiler.JspServlet.class);
  BundleWiring bundleWiring=jspBundle.adapt(BundleWiring.class);
  _jspBundleWirings.add(bundleWiring);
  for (  BundleWire bundleWire : bundleWiring.getRequiredWires(null)) {
    BundleWiring providedBundleWiring=bundleWire.getProviderWiring();
    _jspBundleWirings.add(providedBundleWiring);
  }
  BundleContext bundleContext=jspBundle.getBundleContext();
  Bundle systemBundle=bundleContext.getBundle(0);
  if (systemBundle == null) {
    throw new IllegalStateException("Unable to access to system bundle");
  }
  BundleWiring systemBundleWiring=systemBundle.adapt(BundleWiring.class);
  for (  BundleCapability bundleCapability : systemBundleWiring.getCapabilities(BundleRevision.PACKAGE_NAMESPACE)) {
    Map<String,Object> attributes=bundleCapability.getAttributes();
    Object packageName=attributes.get(BundleRevision.PACKAGE_NAMESPACE);
    if (packageName != null) {
      _systemPackageNames.add(packageName);
    }
  }
  _logger=new Logger(bundleContext);
  ServletContext servletContext=jspCompilationContext.getServletContext();
  ClassLoader classLoader=servletContext.getClassLoader();
  if (!(classLoader instanceof JspBundleClassloader)) {
    throw new IllegalStateException("Class loader is not an instance of JspBundleClassloader");
  }
  JspBundleClassloader jspBundleClassloader=(JspBundleClassloader)classLoader;
  _allParticipatingBundles=jspBundleClassloader.getBundles();
  _bundle=_allParticipatingBundles[0];
  _javaFileObjectResolver=new JspJavaFileObjectResolver(_bundle,jspBundle,_logger);
  jspCompilationContext.setClassLoader(jspBundleClassloader);
  initClassPath(servletContext);
  initTLDMappings(servletContext);
  super.init(jspCompilationContext,errorDispatcher,suppressLogging);
}

{
  List<PathMacro> pathMacros=new ArrayList<PathMacro>(pathChunks.length);
  for (int i=0; i < pathChunks.length; i++) {
    String pathChunk=pathChunks[i];
    int[] indexes=_getPathChunkIndexes(pathChunk,StringPool.DOLLAR_AND_OPEN_CURLY_BRACE,StringPool.CLOSE_CURLY_BRACE);
    if (indexes == null) {
      continue;
    }
    PathMacro pathMacro=new PathMacro();
    pathMacro.setIndex(i);
    String name=pathChunk.substring(indexes[1],indexes[2]);
    int index=name.indexOf(CharPool.COLON);
    if (index != -1) {
      String patternString=name.substring(index + 1);
      Pattern pattern=Pattern.compile(patternString);
      pathMacro.setPattern(pattern);
      name=name.substring(0,index);
    }
    pathMacro.setName(name);
    String offsetLeft=StringPool.BLANK;
    if (indexes[0] != 0) {
      offsetLeft=pathChunk.substring(0,indexes[0]);
    }
    pathMacro.setOffsetLeft(offsetLeft);
    String offsetRight=StringPool.BLANK;
    if (indexes[3] == pathChunk.length()) {
      offsetRight=pathChunk.substring(indexes[3]);
    }
    pathMacro.setOffsetRight(offsetRight);
    pathMacros.add(pathMacro);
  }
  if (pathMacros.isEmpty()) {
    return null;
  }
  return pathMacros.toArray(new PathMacro[pathMacros.size()]);
}

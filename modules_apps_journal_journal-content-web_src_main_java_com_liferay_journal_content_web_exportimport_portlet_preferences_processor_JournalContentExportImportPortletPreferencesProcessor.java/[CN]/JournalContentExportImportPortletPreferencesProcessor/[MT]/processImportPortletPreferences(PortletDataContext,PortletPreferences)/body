{
  try {
    portletDataContext.importPortletPermissions(JournalPermission.RESOURCE_NAME);
  }
 catch (  PortalException pe) {
    throw new PortletDataException("Unable to import portlet permissions",pe);
  }
  long previousScopeGroupId=portletDataContext.getScopeGroupId();
  String previousScopeType=portletDataContext.getScopeType();
  Map<Long,Long> groupIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Group.class);
  long importGroupId=GetterUtil.getLong(portletPreferences.getValue("groupId",null));
  if ((importGroupId == portletDataContext.getCompanyGroupId()) && MergeLayoutPrototypesThreadLocal.isInProgress()) {
    portletDataContext.setScopeType("company");
  }
  long groupId=MapUtil.getLong(groupIds,importGroupId,importGroupId);
  portletDataContext.setScopeGroupId(groupId);
  String articleId=portletPreferences.getValue("articleId",null);
  try {
    if (Validator.isNotNull(articleId)) {
      Map<String,String> articleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class + ".articleId");
      articleId=MapUtil.getString(articleIds,articleId,articleId);
      portletPreferences.setValue("articleId",articleId);
      portletPreferences.setValue("groupId",String.valueOf(groupId));
      Layout layout=_layoutLocalService.fetchLayout(portletDataContext.getPlid());
      _journalContentSearchLocalService.updateContentSearch(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletDataContext.getPortletId(),articleId,true);
    }
 else {
      portletPreferences.setValue("groupId",StringPool.BLANK);
      portletPreferences.setValue("articleId",StringPool.BLANK);
    }
    String ddmTemplateKey=portletPreferences.getValue("ddmTemplateKey",null);
    if (Validator.isNotNull(ddmTemplateKey)) {
      Map<String,String> ddmTemplateKeys=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(DDMTemplate.class + ".ddmTemplateKey");
      ddmTemplateKey=MapUtil.getString(ddmTemplateKeys,ddmTemplateKey,ddmTemplateKey);
      portletPreferences.setValue("ddmTemplateKey",ddmTemplateKey);
    }
 else {
      portletPreferences.setValue("ddmTemplateKey",StringPool.BLANK);
    }
  }
 catch (  PortalException pe) {
    throw new PortletDataException("Unable to update journal content search data during import",pe);
  }
catch (  ReadOnlyException roe) {
    throw new PortletDataException("Unable to update portlet preferences during import",roe);
  }
  portletDataContext.setScopeGroupId(previousScopeGroupId);
  portletDataContext.setScopeType(previousScopeType);
  return portletPreferences;
}

{
  String portletId=portletDataContext.getPortletId();
  try {
    portletDataContext.addPortletPermissions(JournalPermission.RESOURCE_NAME);
  }
 catch (  PortalException pe) {
    throw new PortletDataException("Unable to export portlet permissions",pe);
  }
  String articleId=portletPreferences.getValue("articleId",null);
  if (articleId == null) {
    if (_log.isDebugEnabled()) {
      _log.debug("No article ID found in preferences of portlet " + portletId);
    }
    return portletPreferences;
  }
  long articleGroupId=GetterUtil.getLong(portletPreferences.getValue("groupId",StringPool.BLANK));
  if (articleGroupId <= 0) {
    if (_log.isWarnEnabled()) {
      _log.warn("No group ID found in preferences of portlet " + portletId);
    }
    return portletPreferences;
  }
  long previousScopeGroupId=portletDataContext.getScopeGroupId();
  if (articleGroupId != previousScopeGroupId) {
    portletDataContext.setScopeGroupId(articleGroupId);
  }
  JournalArticle article=null;
  article=_journalArticleLocalService.fetchLatestArticle(articleGroupId,articleId,WorkflowConstants.STATUS_APPROVED);
  if (article == null) {
    article=_journalArticleLocalService.fetchLatestArticle(articleGroupId,articleId,WorkflowConstants.STATUS_EXPIRED);
  }
  if (article == null) {
    if (_log.isWarnEnabled()) {
      _log.warn("Portlet " + portletId + " refers to an invalid article ID "+ articleId);
    }
    portletDataContext.setScopeGroupId(previousScopeGroupId);
    return portletPreferences;
  }
  StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,portletId,article);
  String defaultDDMTemplateKey=article.getDDMTemplateKey();
  String preferenceDDMTemplateKey=portletPreferences.getValue("ddmTemplateKey",null);
  if (Validator.isNotNull(defaultDDMTemplateKey) && Validator.isNotNull(preferenceDDMTemplateKey) && !defaultDDMTemplateKey.equals(preferenceDDMTemplateKey)) {
    try {
      DDMTemplate ddmTemplate=_ddmTemplateLocalService.getTemplate(article.getGroupId(),PortalUtil.getClassNameId(DDMStructure.class),preferenceDDMTemplateKey,true);
      StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,article,ddmTemplate,PortletDataContext.REFERENCE_TYPE_STRONG);
    }
 catch (    PortalException pe) {
      throw new PortletDataException("Unable to export referenced article template",pe);
    }
  }
  portletDataContext.setScopeGroupId(previousScopeGroupId);
  return portletPreferences;
}

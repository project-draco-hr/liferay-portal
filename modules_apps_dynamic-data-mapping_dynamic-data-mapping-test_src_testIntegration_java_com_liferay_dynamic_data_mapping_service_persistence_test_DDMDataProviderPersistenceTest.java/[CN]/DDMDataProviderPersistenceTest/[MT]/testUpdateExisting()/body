{
  long pk=RandomTestUtil.nextLong();
  DDMDataProvider newDDMDataProvider=_persistence.create(pk);
  newDDMDataProvider.setUuid(RandomTestUtil.randomString());
  newDDMDataProvider.setGroupId(RandomTestUtil.nextLong());
  newDDMDataProvider.setCompanyId(RandomTestUtil.nextLong());
  newDDMDataProvider.setUserId(RandomTestUtil.nextLong());
  newDDMDataProvider.setUserName(RandomTestUtil.randomString());
  newDDMDataProvider.setCreateDate(RandomTestUtil.nextDate());
  newDDMDataProvider.setModifiedDate(RandomTestUtil.nextDate());
  newDDMDataProvider.setName(RandomTestUtil.randomString());
  newDDMDataProvider.setDescription(RandomTestUtil.randomString());
  newDDMDataProvider.setDefinition(RandomTestUtil.randomString());
  _ddmDataProviders.add(_persistence.update(newDDMDataProvider));
  DDMDataProvider existingDDMDataProvider=_persistence.findByPrimaryKey(newDDMDataProvider.getPrimaryKey());
  Assert.assertEquals(existingDDMDataProvider.getUuid(),newDDMDataProvider.getUuid());
  Assert.assertEquals(existingDDMDataProvider.getDataProviderId(),newDDMDataProvider.getDataProviderId());
  Assert.assertEquals(existingDDMDataProvider.getGroupId(),newDDMDataProvider.getGroupId());
  Assert.assertEquals(existingDDMDataProvider.getCompanyId(),newDDMDataProvider.getCompanyId());
  Assert.assertEquals(existingDDMDataProvider.getUserId(),newDDMDataProvider.getUserId());
  Assert.assertEquals(existingDDMDataProvider.getUserName(),newDDMDataProvider.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMDataProvider.getCreateDate()),Time.getShortTimestamp(newDDMDataProvider.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingDDMDataProvider.getModifiedDate()),Time.getShortTimestamp(newDDMDataProvider.getModifiedDate()));
  Assert.assertEquals(existingDDMDataProvider.getName(),newDDMDataProvider.getName());
  Assert.assertEquals(existingDDMDataProvider.getDescription(),newDDMDataProvider.getDescription());
  Assert.assertEquals(existingDDMDataProvider.getDefinition(),newDDMDataProvider.getDefinition());
}

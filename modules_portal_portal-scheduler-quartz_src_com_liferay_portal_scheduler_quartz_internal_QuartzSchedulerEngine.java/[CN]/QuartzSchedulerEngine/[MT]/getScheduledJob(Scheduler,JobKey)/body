{
  JobDetail jobDetail=scheduler.getJobDetail(jobKey);
  if (jobDetail == null) {
    return null;
  }
  JobDataMap jobDataMap=jobDetail.getJobDataMap();
  String description=jobDataMap.getString(SchedulerEngine.DESCRIPTION);
  String destinationName=jobDataMap.getString(SchedulerEngine.DESTINATION_NAME);
  Message message=getMessage(jobDataMap);
  StorageType storageType=StorageType.valueOf(jobDataMap.getString(SchedulerEngine.STORAGE_TYPE));
  SchedulerResponse schedulerResponse=null;
  String jobName=jobKey.getName();
  String groupName=jobKey.getGroup();
  TriggerKey triggerKey=new TriggerKey(jobName,groupName);
  Trigger trigger=scheduler.getTrigger(triggerKey);
  JobState jobState=getJobState(jobDataMap);
  message.put(SchedulerEngine.JOB_STATE,jobState);
  if (trigger == null) {
    schedulerResponse=new SchedulerResponse();
    schedulerResponse.setDescription(description);
    schedulerResponse.setDestinationName(destinationName);
    schedulerResponse.setGroupName(groupName);
    schedulerResponse.setJobName(jobName);
    schedulerResponse.setMessage(message);
    schedulerResponse.setStorageType(storageType);
  }
 else {
    message.put(SchedulerEngine.END_TIME,trigger.getEndTime());
    message.put(SchedulerEngine.FINAL_FIRE_TIME,trigger.getFinalFireTime());
    message.put(SchedulerEngine.NEXT_FIRE_TIME,trigger.getNextFireTime());
    message.put(SchedulerEngine.PREVIOUS_FIRE_TIME,trigger.getPreviousFireTime());
    message.put(SchedulerEngine.START_TIME,trigger.getStartTime());
    if (trigger instanceof CalendarIntervalTrigger) {
      CalendarIntervalTrigger calendarIntervalTrigger=CalendarIntervalTrigger.class.cast(trigger);
      schedulerResponse=new SchedulerResponse();
      schedulerResponse.setDescription(description);
      schedulerResponse.setDestinationName(destinationName);
      schedulerResponse.setMessage(message);
      schedulerResponse.setStorageType(storageType);
      IntervalUnit intervalUnit=calendarIntervalTrigger.getRepeatIntervalUnit();
      schedulerResponse.setTrigger(new IntervalTrigger(jobName,groupName,calendarIntervalTrigger.getStartTime(),calendarIntervalTrigger.getEndTime(),calendarIntervalTrigger.getRepeatInterval(),TimeUnit.valueOf(intervalUnit.name())));
    }
 else     if (trigger instanceof CronTrigger) {
      CronTrigger cronTrigger=CronTrigger.class.cast(trigger);
      schedulerResponse=new SchedulerResponse();
      schedulerResponse.setDescription(description);
      schedulerResponse.setDestinationName(destinationName);
      schedulerResponse.setMessage(message);
      schedulerResponse.setStorageType(storageType);
      schedulerResponse.setTrigger(new com.liferay.portal.kernel.scheduler.CronTrigger(jobName,groupName,cronTrigger.getStartTime(),cronTrigger.getEndTime(),cronTrigger.getCronExpression()));
    }
  }
  return schedulerResponse;
}

{
  int maxScoreDocs=max * 10;
  TopDocs topDocs=indexSearcher.search(query,null,maxScoreDocs);
  ScoreDoc[] scoreDocs=topDocs.scoreDocs;
  SuggestWordQueue suggestWordQueue=new SuggestWordQueue(max,_suggestWordComparator);
  int stop=Math.min(scoreDocs.length,maxScoreDocs);
  for (int i=0; i < stop; i++) {
    SuggestWord suggestWord=new SuggestWord();
    Document document=indexSearcher.doc(scoreDocs[i].doc);
    Fieldable fieldable=document.getFieldable(fieldName);
    suggestWord.string=fieldable.stringValue();
    boolean relevant=relevancyChecker.isRelevant(suggestWord);
    if (relevant) {
      suggestWordQueue.insertWithOverflow(suggestWord);
    }
  }
  String[] words=new String[suggestWordQueue.size()];
  for (int i=suggestWordQueue.size() - 1; i >= 0; i--) {
    SuggestWord suggestWord=suggestWordQueue.pop();
    words[i]=suggestWord.string;
  }
  return words;
}

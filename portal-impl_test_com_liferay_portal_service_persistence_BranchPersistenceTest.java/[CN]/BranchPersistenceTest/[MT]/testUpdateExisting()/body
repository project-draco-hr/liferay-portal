{
  long pk=nextLong();
  Branch newBranch=_persistence.create(pk);
  newBranch.setGroupId(nextLong());
  newBranch.setCompanyId(nextLong());
  newBranch.setUserId(nextLong());
  newBranch.setUserName(randomString());
  newBranch.setCreateDate(nextDate());
  newBranch.setModifiedDate(nextDate());
  newBranch.setName(randomString());
  newBranch.setDescription(randomString());
  _persistence.update(newBranch,false);
  Branch existingBranch=_persistence.findByPrimaryKey(newBranch.getPrimaryKey());
  assertEquals(existingBranch.getBranchId(),newBranch.getBranchId());
  assertEquals(existingBranch.getGroupId(),newBranch.getGroupId());
  assertEquals(existingBranch.getCompanyId(),newBranch.getCompanyId());
  assertEquals(existingBranch.getUserId(),newBranch.getUserId());
  assertEquals(existingBranch.getUserName(),newBranch.getUserName());
  assertEquals(Time.getShortTimestamp(existingBranch.getCreateDate()),Time.getShortTimestamp(newBranch.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingBranch.getModifiedDate()),Time.getShortTimestamp(newBranch.getModifiedDate()));
  assertEquals(existingBranch.getName(),newBranch.getName());
  assertEquals(existingBranch.getDescription(),newBranch.getDescription());
}

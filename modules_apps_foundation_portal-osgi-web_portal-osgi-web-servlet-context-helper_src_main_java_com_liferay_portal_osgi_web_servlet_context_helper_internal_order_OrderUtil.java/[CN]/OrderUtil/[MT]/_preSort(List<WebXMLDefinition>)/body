{
  List<WebXMLDefinition> preSortWebXMLDefinitions=new ArrayList<>();
  Map<String,Integer> map=new LinkedHashMap<>();
  List<WebXMLDefinition> tempWebXMLDefinitions=new LinkedList<>();
  for (  WebXMLDefinition webXMLDefinition : webXMLDefinitions) {
    Order order=webXMLDefinition.getOrder();
    if (Validator.isNull(webXMLDefinition.getFragmentName()) && !order.isOrdered()) {
      tempWebXMLDefinitions.add(webXMLDefinition);
    }
 else {
      EnumMap<Order.Path,String[]> routes=order.getRoutes();
      String[] afterPathNames=routes.get(Order.Path.AFTER);
      String[] beforePathNames=routes.get(Order.Path.BEFORE);
      map.put(webXMLDefinition.getFragmentName(),afterPathNames.length + beforePathNames.length);
    }
  }
  map=_sortDescendingByValue(map);
  Map<String,WebXMLDefinition> webXMLDefinitionsMap=_getWebXMLDefinitionsMap(webXMLDefinitions);
  for (  Map.Entry<String,Integer> entry : map.entrySet()) {
    String key=entry.getKey();
    preSortWebXMLDefinitions.add(webXMLDefinitionsMap.get(key));
  }
  for (  WebXMLDefinition webXMLDefinition : tempWebXMLDefinitions) {
    preSortWebXMLDefinitions.add(webXMLDefinition);
  }
  return preSortWebXMLDefinitions;
}

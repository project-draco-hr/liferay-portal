{
  List<WebXMLDefinition> newConfigList=new ArrayList<>();
  List<WebXMLDefinition> anonAndUnordered=new LinkedList<>();
  Map<String,Integer> namedMap=new LinkedHashMap<>();
  for (  WebXMLDefinition config : configs) {
    Order configOrdering=config.getOrdering();
    EnumMap<Order.Path,String[]> configOrderingRoutes=configOrdering.getRoutes();
    String[] beforePathNames=configOrderingRoutes.get(Order.Path.BEFORE);
    String[] afterPathNames=configOrderingRoutes.get(Order.Path.AFTER);
    String configName=config.getFragmentName();
    if (Validator.isNull(configName) && !configOrdering.isOrdered()) {
      anonAndUnordered.add(config);
    }
 else {
      int totalPathNames=beforePathNames.length + afterPathNames.length;
      namedMap.put(configName,totalPathNames);
    }
  }
  namedMap=_descendingByValue(namedMap);
  Map<String,WebXMLDefinition> configMap=_getWebXMLDefinitionsMap(configs);
  for (  Map.Entry<String,Integer> entry : namedMap.entrySet()) {
    String key=entry.getKey();
    newConfigList.add(configMap.get(key));
  }
  for (  WebXMLDefinition config : anonAndUnordered) {
    newConfigList.add(config);
  }
  return newConfigList;
}

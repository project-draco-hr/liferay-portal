{
  for (  Map.Entry<String,List<KBArticle>> entry : kbArticlesMap.entrySet()) {
    List<KBArticle> kbArticles=entry.getValue();
    if (kbArticles == null) {
      continue;
    }
    List<KBArticle> siblingKBArticles=null;
    if (Validator.isNull(entry.getKey())) {
      siblingKBArticles=KBArticleLocalServiceUtil.getKBArticles(_groupId,_parentKBFolderId,WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
    }
 else {
      KBArticle parentKBArticle=KBArticleLocalServiceUtil.fetchKBArticleByUrlTitle(_groupId,_parentKBFolderId,entry.getKey());
      siblingKBArticles=KBArticleServiceUtil.getKBArticles(_groupId,parentKBArticle.getResourcePrimKey(),WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
    }
    List<KBArticle> siblingKBArticlesCopy=ListUtil.copy(siblingKBArticles);
    siblingKBArticlesCopy.removeAll(kbArticles);
    double maxPriority=0.0;
    for (    KBArticle sibling : siblingKBArticlesCopy) {
      double priority=sibling.getPriority();
      if (priority > maxPriority) {
        maxPriority=priority;
      }
    }
    int size=kbArticles.size();
    for (int i=0; i < size; i++) {
      KBArticle kbArticle=kbArticles.get(i);
      if (kbArticle.getPriority() >= 1.0) {
        continue;
      }
      maxPriority++;
      KBArticleLocalServiceUtil.updatePriority(kbArticle.getResourcePrimKey(),maxPriority);
    }
  }
}

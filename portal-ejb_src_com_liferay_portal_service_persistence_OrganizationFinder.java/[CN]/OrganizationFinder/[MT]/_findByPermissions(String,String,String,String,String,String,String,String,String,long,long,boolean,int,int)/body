{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    StringMaker sm=new StringMaker();
    sm.append("(");
    sm.append(CustomSQLUtil.get(FIND_BY_C_PO_N_S_C_Z_R_C));
    String sql=sm.toString();
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin("groupsPermissions"));
    sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere("groupsPermissions"));
    sm=new StringMaker();
    sm.append(sql);
    sm.append(") UNION (");
    sm.append(CustomSQLUtil.get(FIND_BY_C_PO_N_S_C_Z_R_C));
    sql=sm.toString();
    sql=StringUtil.replace(sql,"[$JOIN$]",_getJoin("orgGroupPermission"));
    sql=StringUtil.replace(sql,"[$WHERE$]",_getWhere("orgGroupPermission"));
    sql=StringUtil.replace(sql,"[$PARENT_ORGANIZATION_ID_COMPARATOR$]",parentOrganizationComparator);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sm=new StringMaker();
    sm.append(sql);
    sm.append(") ");
    sm.append("ORDER BY orgName ASC");
    sql=sm.toString();
    SQLQuery q=session.createSQLQuery(sql);
    q.setCacheable(false);
    q.addScalar("orgId",Hibernate.STRING);
    QueryPos qPos=QueryPos.getInstance(q);
    for (int i=0; i < 2; i++) {
      qPos.add(resourceId);
      if (i == 1) {
        qPos.add(groupId);
      }
      qPos.add(companyId);
      qPos.add(parentOrganizationId);
      qPos.add(name);
      qPos.add(name);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(city);
      qPos.add(city);
      qPos.add(zip);
      qPos.add(zip);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(countryId);
      qPos.add(countryId);
      qPos.add(countryId);
      qPos.add(countryId);
    }
    List list=new ArrayList();
    Iterator itr=QueryUtil.iterate(q,HibernateUtil.getDialect(),begin,end);
    while (itr.hasNext()) {
      String organizationId=(String)itr.next();
      Organization organization=OrganizationUtil.findByPrimaryKey(organizationId);
      list.add(organization);
    }
    return list;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

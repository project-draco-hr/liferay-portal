{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=null;
    sql="(";
    sql+=CustomSQLUtil.get(COUNT_BY_C_PO_N_S_C_Z_R_C);
    sql=StringUtil.replace(sql,"[$JOIN$]",CustomSQLUtil.get(JOIN_BY_GROUPS_PERMISSIONS));
    sql+=")";
    sql+=" UNION ";
    sql+="(";
    sql+=CustomSQLUtil.get(COUNT_BY_C_PO_N_S_C_Z_R_C);
    sql=StringUtil.replace(sql,"[$JOIN$]",CustomSQLUtil.get(JOIN_BY_ORG_GROUP_PERMISSION));
    sql=StringUtil.replace(sql,"[$PARENT_ORGANIZATION_ID_COMPARATOR$]",parentOrganizationComparator);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sql+=")";
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(HibernateUtil.getCountColumnName(),Hibernate.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    for (int i=0; i < 2; i++) {
      qPos.add(resourceId);
      if (i == 1) {
        qPos.add(groupId);
      }
      qPos.add(companyId);
      qPos.add(parentOrganizationId);
      qPos.add(name);
      qPos.add(name);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(street);
      qPos.add(city);
      qPos.add(city);
      qPos.add(zip);
      qPos.add(zip);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(regionId);
      qPos.add(countryId);
      qPos.add(countryId);
      qPos.add(countryId);
      qPos.add(countryId);
    }
    int count=0;
    Iterator itr=q.list().iterator();
    while (itr.hasNext()) {
      Long i=(Long)itr.next();
      if (i != null) {
        count+=i.intValue();
      }
    }
    return count;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

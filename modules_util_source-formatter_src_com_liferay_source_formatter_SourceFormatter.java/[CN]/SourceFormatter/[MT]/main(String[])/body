{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  try {
    SourceFormatterArgs sourceFormatterArgs=new SourceFormatterArgs();
    boolean autoFix=GetterUtil.getBoolean(arguments.get("source.auto.fix"),SourceFormatterArgs.AUTO_FIX);
    sourceFormatterArgs.setAutoFix(autoFix);
    String baseDirName=GetterUtil.getString(arguments.get("source.base.dir"),SourceFormatterArgs.BASE_DIR_NAME);
    sourceFormatterArgs.setBaseDirName(baseDirName);
    boolean formatLocalChanges=GetterUtil.getBoolean(arguments.get("format.local.changes"),SourceFormatterArgs.FORMAT_LOCAL_CHANGES);
    sourceFormatterArgs.setFormatLocalChanges(formatLocalChanges);
    if (formatLocalChanges) {
      sourceFormatterArgs.setRecentChangesFileNames(GitUtil.getLocalChangesFileNames(baseDirName));
    }
    String copyrightFileName=GetterUtil.getString(arguments.get("source.copyright.file"),SourceFormatterArgs.COPYRIGHT_FILE_NAME);
    sourceFormatterArgs.setCopyrightFileName(copyrightFileName);
    String[] fileNames=StringUtil.split(arguments.get("source.files"),StringPool.COMMA);
    if (ArrayUtil.isNotEmpty(fileNames)) {
      sourceFormatterArgs.setFileNames(Arrays.asList(fileNames));
    }
    boolean printErrors=GetterUtil.getBoolean(arguments.get("source.print.errors"),SourceFormatterArgs.PRINT_ERRORS);
    sourceFormatterArgs.setPrintErrors(printErrors);
    boolean throwException=GetterUtil.getBoolean(arguments.get("source.throw.exception"),SourceFormatterArgs.THROW_EXCEPTION);
    sourceFormatterArgs.setThrowException(throwException);
    boolean useProperties=GetterUtil.getBoolean(arguments.get("source.use.properties"),SourceFormatterArgs.USE_PROPERTIES);
    sourceFormatterArgs.setUseProperties(useProperties);
    SourceFormatter sourceFormatter=new SourceFormatter(sourceFormatterArgs);
    sourceFormatter.format();
  }
 catch (  Exception e) {
    ArgumentsUtil.processMainException(arguments,e);
  }
}

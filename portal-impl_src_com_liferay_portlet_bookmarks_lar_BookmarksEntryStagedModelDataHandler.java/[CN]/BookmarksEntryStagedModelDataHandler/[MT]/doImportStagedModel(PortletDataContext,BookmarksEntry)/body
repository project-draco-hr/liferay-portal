{
  long userId=portletDataContext.getUserId(entry.getUserUuid());
  Map<Long,Long> folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(BookmarksFolder.class);
  long folderId=MapUtil.getLong(folderIds,entry.getFolderId(),entry.getFolderId());
  if ((folderId != BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID) && (folderId == entry.getFolderId())) {
    String parentFolderPath=ExportImportPathUtil.getModelPath(portletDataContext,BookmarksFolder.class.getName(),folderId);
    BookmarksFolder parentFolder=(BookmarksFolder)portletDataContext.getZipEntryAsObject(parentFolderPath);
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,parentFolder);
    folderId=MapUtil.getLong(folderIds,entry.getFolderId(),entry.getFolderId());
  }
  ServiceContext serviceContext=portletDataContext.createServiceContext(entry,BookmarksPortletDataHandler.NAMESPACE);
  BookmarksEntry importedEntry=null;
  if (portletDataContext.isDataStrategyMirror()) {
    BookmarksEntry existingEntry=BookmarksEntryUtil.fetchByUUID_G(entry.getUuid(),portletDataContext.getScopeGroupId());
    if (existingEntry == null) {
      serviceContext.setUuid(entry.getUuid());
      importedEntry=BookmarksEntryLocalServiceUtil.addEntry(userId,portletDataContext.getScopeGroupId(),folderId,entry.getName(),entry.getUrl(),entry.getDescription(),serviceContext);
    }
 else {
      importedEntry=BookmarksEntryLocalServiceUtil.updateEntry(userId,existingEntry.getEntryId(),portletDataContext.getScopeGroupId(),folderId,entry.getName(),entry.getUrl(),entry.getDescription(),serviceContext);
    }
  }
 else {
    importedEntry=BookmarksEntryLocalServiceUtil.addEntry(userId,portletDataContext.getScopeGroupId(),folderId,entry.getName(),entry.getUrl(),entry.getDescription(),serviceContext);
  }
  portletDataContext.importClassedModel(entry,importedEntry,BookmarksPortletDataHandler.NAMESPACE);
}

{
  KaleoTaskInstanceTokenImpl kaleoTaskInstanceTokenImpl=new KaleoTaskInstanceTokenImpl();
  kaleoTaskInstanceTokenImpl.setKaleoTaskInstanceTokenId(kaleoTaskInstanceTokenId);
  kaleoTaskInstanceTokenImpl.setGroupId(groupId);
  kaleoTaskInstanceTokenImpl.setCompanyId(companyId);
  kaleoTaskInstanceTokenImpl.setUserId(userId);
  if (userName == null) {
    kaleoTaskInstanceTokenImpl.setUserName(StringPool.BLANK);
  }
 else {
    kaleoTaskInstanceTokenImpl.setUserName(userName);
  }
  if (createDate == Long.MIN_VALUE) {
    kaleoTaskInstanceTokenImpl.setCreateDate(null);
  }
 else {
    kaleoTaskInstanceTokenImpl.setCreateDate(new Date(createDate));
  }
  if (modifiedDate == Long.MIN_VALUE) {
    kaleoTaskInstanceTokenImpl.setModifiedDate(null);
  }
 else {
    kaleoTaskInstanceTokenImpl.setModifiedDate(new Date(modifiedDate));
  }
  kaleoTaskInstanceTokenImpl.setKaleoDefinitionId(kaleoDefinitionId);
  kaleoTaskInstanceTokenImpl.setKaleoInstanceId(kaleoInstanceId);
  kaleoTaskInstanceTokenImpl.setKaleoInstanceTokenId(kaleoInstanceTokenId);
  kaleoTaskInstanceTokenImpl.setKaleoTaskId(kaleoTaskId);
  if (kaleoTaskName == null) {
    kaleoTaskInstanceTokenImpl.setKaleoTaskName(StringPool.BLANK);
  }
 else {
    kaleoTaskInstanceTokenImpl.setKaleoTaskName(kaleoTaskName);
  }
  if (className == null) {
    kaleoTaskInstanceTokenImpl.setClassName(StringPool.BLANK);
  }
 else {
    kaleoTaskInstanceTokenImpl.setClassName(className);
  }
  kaleoTaskInstanceTokenImpl.setClassPK(classPK);
  kaleoTaskInstanceTokenImpl.setCompletionUserId(completionUserId);
  kaleoTaskInstanceTokenImpl.setCompleted(completed);
  if (completionDate == Long.MIN_VALUE) {
    kaleoTaskInstanceTokenImpl.setCompletionDate(null);
  }
 else {
    kaleoTaskInstanceTokenImpl.setCompletionDate(new Date(completionDate));
  }
  if (dueDate == Long.MIN_VALUE) {
    kaleoTaskInstanceTokenImpl.setDueDate(null);
  }
 else {
    kaleoTaskInstanceTokenImpl.setDueDate(new Date(dueDate));
  }
  if (workflowContext == null) {
    kaleoTaskInstanceTokenImpl.setWorkflowContext(StringPool.BLANK);
  }
 else {
    kaleoTaskInstanceTokenImpl.setWorkflowContext(workflowContext);
  }
  kaleoTaskInstanceTokenImpl.resetOriginalValues();
  return kaleoTaskInstanceTokenImpl;
}

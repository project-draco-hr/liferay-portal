{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    StringBundler sb=new StringBundler(8);
    sb.append("select ");
    sb.append(verifiableAuditedModel.getPrimaryKeyColumnName());
    sb.append(", companyId");
    if (verifiableAuditedModel.getJoinByTableName() != null) {
      sb.append(StringPool.COMMA_AND_SPACE);
      sb.append(verifiableAuditedModel.getJoinByTableName());
    }
    sb.append(" from ");
    sb.append(verifiableAuditedModel.getTableName());
    sb.append(" where userName is null order by companyId");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    Object[] auditedModelArray=null;
    long previousCompanyId=0;
    while (rs.next()) {
      long companyId=rs.getLong("companyId");
      long primKey=rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName());
      if (verifiableAuditedModel.getJoinByTableName() != null) {
        long relatedPrimKey=rs.getLong(verifiableAuditedModel.getJoinByTableName());
        auditedModelArray=getAuditedModelArray(verifiableAuditedModel.getRelatedModelName(),verifiableAuditedModel.getRelatedPKColumnName(),relatedPrimKey);
      }
 else       if (previousCompanyId != companyId) {
        auditedModelArray=getDefaultUserArray(con,companyId);
        previousCompanyId=companyId;
      }
      if (auditedModelArray == null) {
        continue;
      }
      verifyAuditedModel(verifiableAuditedModel.getTableName(),verifiableAuditedModel.getPrimaryKeyColumnName(),primKey,auditedModelArray,verifiableAuditedModel.isUpdateDates());
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

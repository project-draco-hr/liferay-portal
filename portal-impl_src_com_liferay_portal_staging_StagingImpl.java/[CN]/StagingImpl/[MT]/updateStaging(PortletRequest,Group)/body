{
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  long userId=permissionChecker.getUserId();
  Group scopeGroup=themeDisplay.getScopeGroup();
  if (!GroupPermissionUtil.contains(permissionChecker,liveGroup.getGroupId(),ActionKeys.MANAGE_STAGING)) {
    return;
  }
  int stagingType=getStagingType(liveGroup,portletRequest);
  boolean defaultBranchingPublic=GetterUtil.getBoolean(liveGroup.getTypeSettingsProperty("branchingPublic"));
  boolean defaultBranchingPrivate=GetterUtil.getBoolean(liveGroup.getTypeSettingsProperty("branchingPrivate"));
  boolean branchingPublic=ParamUtil.getBoolean(portletRequest,"branchingPublic",defaultBranchingPublic);
  boolean branchingPrivate=ParamUtil.getBoolean(portletRequest,"branchingPrivate",defaultBranchingPrivate);
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  if (stagingType == StagingConstants.TYPE_NOT_STAGED) {
    if (liveGroup.hasStagingGroup() || liveGroup.isStagedRemotely()) {
      disableStaging(portletRequest,scopeGroup,liveGroup,serviceContext);
    }
  }
 else   if (stagingType == StagingConstants.TYPE_LOCAL_STAGING) {
    enableLocalStaging(userId,scopeGroup,liveGroup,branchingPublic,branchingPrivate,serviceContext);
  }
 else   if (stagingType == StagingConstants.TYPE_REMOTE_STAGING) {
    String defaultRemoteAddress=GetterUtil.getString(liveGroup.getTypeSettingsProperty("remoteAddress"));
    String remoteAddress=ParamUtil.getString(portletRequest,"remoteAddress",defaultRemoteAddress);
    remoteAddress=stripProtocolFromRemoteAddress(remoteAddress);
    long defaultRemoteGroupId=GetterUtil.getLong(liveGroup.getTypeSettingsProperty("remoteGroupId"));
    long remoteGroupId=ParamUtil.getLong(portletRequest,"remoteGroupId",defaultRemoteGroupId);
    int defaultRemotePort=GetterUtil.getInteger(liveGroup.getTypeSettingsProperty("remotePort"));
    int remotePort=ParamUtil.getInteger(portletRequest,"remotePort",defaultRemotePort);
    boolean defaultSecureConnection=GetterUtil.getBoolean(liveGroup.getTypeSettingsProperty("secureConnection"));
    boolean secureConnection=ParamUtil.getBoolean(portletRequest,"secureConnection",defaultSecureConnection);
    enableRemoteStaging(userId,scopeGroup,liveGroup,branchingPublic,branchingPrivate,remoteAddress,remoteGroupId,remotePort,secureConnection,serviceContext);
  }
}

{
  RemoteOptionsException roe=null;
  if (!Validator.isDomain(remoteAddress) && !Validator.isIPAddress(remoteAddress)) {
    roe=new RemoteOptionsException(RemoteOptionsException.REMOTE_ADDRESS);
    roe.setRemoteAddress(remoteAddress);
    throw roe;
  }
  if ((remotePort < 1) || (remotePort > 65535)) {
    roe=new RemoteOptionsException(RemoteOptionsException.REMOTE_PORT);
    roe.setRemotePort(remotePort);
    throw roe;
  }
  if (remoteGroupId <= 0) {
    roe=new RemoteOptionsException(RemoteOptionsException.REMOTE_GROUP_ID);
    roe.setRemoteGroupId(remoteGroupId);
    throw roe;
  }
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  User user=UserLocalServiceUtil.getUser(permissionChecker.getUserId());
  StringBundler sb=new StringBundler(4);
  if (secureConnection) {
    sb.append(Http.HTTPS_WITH_SLASH);
  }
 else {
    sb.append(Http.HTTP_WITH_SLASH);
  }
  sb.append(remoteAddress);
  sb.append(StringPool.COLON);
  sb.append(remotePort);
  String url=sb.toString();
  HttpPrincipal httpPrincipal=new HttpPrincipal(url,user.getEmailAddress(),user.getPassword(),user.getPasswordEncrypted());
  try {
    GroupServiceHttp.getGroup(httpPrincipal,remoteGroupId);
  }
 catch (  NoSuchGroupException nsge) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.NO_GROUP);
    ree.setGroupId(remoteGroupId);
    throw ree;
  }
catch (  SystemException se) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.BAD_CONNECTION);
    ree.setURL(url);
    throw ree;
  }
}

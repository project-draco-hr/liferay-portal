{
  LayoutExporter.updateLastPublishDate(liveGroup.getPrivateLayoutSet(),0);
  LayoutExporter.updateLastPublishDate(liveGroup.getPublicLayoutSet(),0);
  Set<String> parameterNames=serviceContext.getAttributes().keySet();
  for (  String parameterName : parameterNames) {
    boolean staged=ParamUtil.getBoolean(serviceContext,parameterName);
    if (parameterName.startsWith(StagingConstants.STAGED_PORTLET) && !parameterName.endsWith("Checkbox")) {
      typeSettingsProperties.setProperty(parameterName,String.valueOf(staged));
    }
  }
  boolean workflowEnabled=false;
  int workflowStages=ParamUtil.getInteger(serviceContext,"workflowStages",1);
  if (workflowStages > 1) {
    workflowEnabled=true;
  }
  typeSettingsProperties.setProperty("workflowEnabled",String.valueOf(workflowEnabled));
  if (workflowEnabled) {
    String workflowRoleNames=getWorkflowRoleNames(serviceContext);
    if (Validator.isNull(workflowRoleNames)) {
      workflowRoleNames=PropsValues.TASKS_DEFAULT_ROLE_NAMES;
    }
    typeSettingsProperties.setProperty("workflowRoleNames",workflowRoleNames);
    if (workflowStages < PropsValues.TASKS_DEFAULT_STAGES) {
      workflowStages=PropsValues.TASKS_DEFAULT_STAGES;
    }
    typeSettingsProperties.setProperty("workflowStages",String.valueOf(workflowStages));
  }
}

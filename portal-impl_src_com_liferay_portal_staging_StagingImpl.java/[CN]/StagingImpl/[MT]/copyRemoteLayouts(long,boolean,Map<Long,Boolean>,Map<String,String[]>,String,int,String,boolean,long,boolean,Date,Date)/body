{
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  User user=permissionChecker.getUser();
  StringBundler sb=new StringBundler(4);
  if (secureConnection) {
    sb.append(Http.HTTPS_WITH_SLASH);
  }
 else {
    sb.append(Http.HTTP_WITH_SLASH);
  }
  sb.append(remoteAddress);
  sb.append(StringPool.COLON);
  sb.append(remotePort);
  sb.append(remotePathContext);
  String url=sb.toString();
  HttpPrincipal httpPrincipal=new HttpPrincipal(url,user.getEmailAddress(),user.getPassword(),user.getPasswordEncrypted());
  try {
    GroupServiceHttp.checkRemoteStagingGroup(httpPrincipal,remoteGroupId);
  }
 catch (  NoSuchGroupException nsge) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.NO_GROUP);
    ree.setGroupId(remoteGroupId);
    throw ree;
  }
catch (  RemoteAuthException rae) {
    rae.setURL(url);
    throw rae;
  }
catch (  SystemException se) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.BAD_CONNECTION);
    ree.setURL(url);
    throw ree;
  }
  Map<String,Serializable> settingsMap=ExportImportConfigurationSettingsMapFactory.buildSettingsMap(user.getUserId(),sourceGroupId,privateLayout,layoutIdMap,parameterMap,remoteAddress,remotePort,remotePathContext,secureConnection,remoteGroupId,remotePrivateLayout,startDate,endDate,null,null);
  settingsMap.put("httpPrincipal",httpPrincipal);
  ServiceContext serviceContext=new ServiceContext();
  ExportImportConfiguration exportImportConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(user.getUserId(),sourceGroupId,StringPool.BLANK,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_REMOTE,settingsMap,WorkflowConstants.STATUS_DRAFT,serviceContext);
  Map<String,Serializable> taskContextMap=new HashMap<String,Serializable>();
  taskContextMap.put("exportImportConfigurationId",exportImportConfiguration.getExportImportConfigurationId());
  BackgroundTaskLocalServiceUtil.addBackgroundTask(user.getUserId(),sourceGroupId,StringPool.BLANK,null,LayoutRemoteStagingBackgroundTaskExecutor.class,taskContextMap,serviceContext);
}

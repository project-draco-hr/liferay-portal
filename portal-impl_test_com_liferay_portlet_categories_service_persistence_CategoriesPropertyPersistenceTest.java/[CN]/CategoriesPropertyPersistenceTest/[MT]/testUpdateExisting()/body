{
  long pk=nextLong();
  CategoriesProperty newCategoriesProperty=_persistence.create(pk);
  newCategoriesProperty.setCompanyId(nextLong());
  newCategoriesProperty.setUserId(nextLong());
  newCategoriesProperty.setUserName(randomString());
  newCategoriesProperty.setCreateDate(nextDate());
  newCategoriesProperty.setModifiedDate(nextDate());
  newCategoriesProperty.setEntryId(nextLong());
  newCategoriesProperty.setKey(randomString());
  newCategoriesProperty.setValue(randomString());
  _persistence.update(newCategoriesProperty,false);
  CategoriesProperty existingCategoriesProperty=_persistence.findByPrimaryKey(newCategoriesProperty.getPrimaryKey());
  assertEquals(existingCategoriesProperty.getPropertyId(),newCategoriesProperty.getPropertyId());
  assertEquals(existingCategoriesProperty.getCompanyId(),newCategoriesProperty.getCompanyId());
  assertEquals(existingCategoriesProperty.getUserId(),newCategoriesProperty.getUserId());
  assertEquals(existingCategoriesProperty.getUserName(),newCategoriesProperty.getUserName());
  assertEquals(Time.getShortTimestamp(existingCategoriesProperty.getCreateDate()),Time.getShortTimestamp(newCategoriesProperty.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingCategoriesProperty.getModifiedDate()),Time.getShortTimestamp(newCategoriesProperty.getModifiedDate()));
  assertEquals(existingCategoriesProperty.getEntryId(),newCategoriesProperty.getEntryId());
  assertEquals(existingCategoriesProperty.getKey(),newCategoriesProperty.getKey());
  assertEquals(existingCategoriesProperty.getValue(),newCategoriesProperty.getValue());
}

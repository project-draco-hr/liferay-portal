{
  try {
    AuthVerifierResult authVerifierResult=new AuthVerifierResult();
    HttpServletRequest request=accessControlContext.getRequest();
    long userId=HttpAuthManagerUtil.getDigestUserId(request);
    if (userId == 0) {
      boolean forcedDigestAuth=MapUtil.getBoolean(accessControlContext.getSettings(),"digest_auth");
      if (!forcedDigestAuth) {
        forcedDigestAuth=GetterUtil.getBoolean(configuration.getProperty("digest_auth"));
      }
      if (forcedDigestAuth) {
        HttpAuthorizationHeader httpAuthorizationHeader=new HttpAuthorizationHeader(HttpAuthorizationHeader.SCHEME_DIGEST);
        HttpAuthManagerUtil.generateChallenge(request,accessControlContext.getResponse(),httpAuthorizationHeader);
        authVerifierResult.setState(AuthVerifierResult.State.INVALID_CREDENTIALS);
      }
      return authVerifierResult;
    }
    authVerifierResult.setPasswordBasedAuthentication(true);
    authVerifierResult.setState(AuthVerifierResult.State.SUCCESS);
    authVerifierResult.setUserId(userId);
    return authVerifierResult;
  }
 catch (  PortalException pe) {
    throw new AuthException(pe);
  }
catch (  SystemException se) {
    throw new AuthException(se);
  }
}

{
  assetCategoryProperty=toUnwrappedModel(assetCategoryProperty);
  boolean isNew=assetCategoryProperty.isNew();
  AssetCategoryPropertyModelImpl assetCategoryPropertyModelImpl=(AssetCategoryPropertyModelImpl)assetCategoryProperty;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (assetCategoryProperty.getCreateDate() == null)) {
    if (serviceContext == null) {
      assetCategoryProperty.setCreateDate(now);
    }
 else {
      assetCategoryProperty.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!assetCategoryPropertyModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      assetCategoryProperty.setModifiedDate(now);
    }
 else {
      assetCategoryProperty.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (assetCategoryProperty.isNew()) {
      session.save(assetCategoryProperty);
      assetCategoryProperty.setNew(false);
    }
 else {
      assetCategoryProperty=(AssetCategoryProperty)session.merge(assetCategoryProperty);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AssetCategoryPropertyModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((assetCategoryPropertyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetCategoryPropertyModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{assetCategoryPropertyModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((assetCategoryPropertyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CATEGORYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetCategoryPropertyModelImpl.getOriginalCategoryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CATEGORYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CATEGORYID,args);
      args=new Object[]{assetCategoryPropertyModelImpl.getCategoryId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CATEGORYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CATEGORYID,args);
    }
    if ((assetCategoryPropertyModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_K.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetCategoryPropertyModelImpl.getOriginalCompanyId(),assetCategoryPropertyModelImpl.getOriginalKey()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_K,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_K,args);
      args=new Object[]{assetCategoryPropertyModelImpl.getCompanyId(),assetCategoryPropertyModelImpl.getKey()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_K,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_K,args);
    }
  }
  entityCache.putResult(AssetCategoryPropertyModelImpl.ENTITY_CACHE_ENABLED,AssetCategoryPropertyImpl.class,assetCategoryProperty.getPrimaryKey(),assetCategoryProperty,false);
  clearUniqueFindersCache(assetCategoryPropertyModelImpl);
  cacheUniqueFindersCache(assetCategoryPropertyModelImpl,isNew);
  assetCategoryProperty.resetOriginalValues();
  return assetCategoryProperty;
}

{
  Object[] finderArgs=new Object[]{userId,classNameId,classPK};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,this);
  }
  if (result instanceof RatingsEntry) {
    RatingsEntry ratingsEntry=(RatingsEntry)result;
    if ((userId != ratingsEntry.getUserId()) || (classNameId != ratingsEntry.getClassNameId()) || (classPK != ratingsEntry.getClassPK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_RATINGSENTRY_WHERE);
    query.append(_FINDER_COLUMN_U_C_C_USERID_2);
    query.append(_FINDER_COLUMN_U_C_C_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_U_C_C_CLASSPK_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(classNameId);
      qPos.add(classPK);
      List<RatingsEntry> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,list);
      }
 else {
        RatingsEntry ratingsEntry=list.get(0);
        result=ratingsEntry;
        cacheResult(ratingsEntry);
        if ((ratingsEntry.getUserId() != userId) || (ratingsEntry.getClassNameId() != classNameId) || (ratingsEntry.getClassPK() != classPK)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs,ratingsEntry);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_U_C_C,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (RatingsEntry)result;
  }
}

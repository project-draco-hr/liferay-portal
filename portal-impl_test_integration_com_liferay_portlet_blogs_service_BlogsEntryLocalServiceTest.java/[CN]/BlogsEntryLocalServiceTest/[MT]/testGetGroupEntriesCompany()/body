{
  User user=TestPropsValues.getUser();
  List<BlogsEntry> groupEntries=BlogsEntryLocalServiceUtil.getGroupsEntries(user.getCompanyId(),group.getGroupId(),new Date(),QUERY_IN_TRASH);
  int initialCount=groupEntries.size();
  addEntryTrashAndEntryNotTrash(user);
  List<BlogsEntry> groupEntriesInTrash=BlogsEntryLocalServiceUtil.getGroupsEntries(user.getCompanyId(),group.getGroupId(),new Date(),QUERY_IN_TRASH);
  Assert.assertEquals(initialCount + 1,groupEntriesInTrash.size());
  for (  BlogsEntry groupEntry : groupEntriesInTrash) {
    if (WorkflowConstants.STATUS_IN_TRASH != groupEntry.getStatus()) {
      Assert.fail("The blogEntry " + groupEntry.getEntryId() + " is not in trash");
    }
    Assert.assertNotEquals(groupEntry.getCompanyId(),0);
    if (groupEntry.getCompanyId() != user.getCompanyId()) {
      Assert.fail("The companyId of the BlogEntry" + groupEntry.getEntryId() + " should be "+ user.getCompanyId()+ " bus is "+ groupEntry.getCompanyId()+ " instead");
    }
  }
}

{
  BlogsEntry entryPrev=addEntry(false);
  BlogsEntry entryCenter=addEntry(false);
  BlogsEntry entryNext=addEntry(false);
  BlogsEntry[] entriesPrevAndNextForCenter=BlogsEntryLocalServiceUtil.getEntriesPrevAndNext(entryCenter.getEntryId());
  Assert.assertNotNull("The previous element of the blog entry " + entryCenter.getEntryId() + " should be "+ entryPrev.getEntryId()+ " but is null instead",entriesPrevAndNextForCenter[0]);
  Assert.assertNotNull("The center element of the blog entry " + entryCenter.getEntryId() + " should be "+ entryCenter.getEntryId()+ " but is null instead",entriesPrevAndNextForCenter[1]);
  Assert.assertNotNull("The next element of the blog entry " + entryCenter.getEntryId() + " should be "+ entryNext.getEntryId()+ " but is null instead",entriesPrevAndNextForCenter[2]);
  Assert.assertEquals("The previous element of the blog entry" + entryCenter.getEntryId() + " should be "+ entryPrev.getEntryId(),entriesPrevAndNextForCenter[0].getEntryId(),entryPrev.getEntryId());
  Assert.assertEquals("The center element of the blog entry " + entryCenter.getEntryId() + " should be "+ entryCenter.getEntryId(),entriesPrevAndNextForCenter[1].getEntryId(),entryCenter.getEntryId());
  Assert.assertEquals("The next element of the blog entry " + entryCenter.getEntryId() + " should be "+ entryNext.getEntryId(),entriesPrevAndNextForCenter[2].getEntryId(),entryNext.getEntryId());
}

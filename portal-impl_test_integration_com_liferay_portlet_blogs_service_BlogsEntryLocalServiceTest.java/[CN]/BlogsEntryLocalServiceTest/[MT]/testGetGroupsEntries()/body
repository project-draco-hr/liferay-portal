{
  List<BlogsEntry> groupsEntries=BlogsEntryLocalServiceUtil.getGroupsEntries(_user.getCompanyId(),_group.getGroupId(),new Date(),_statusInTrashQueryDefinition);
  int initialCount=groupsEntries.size();
  addEntry(false);
  addEntry(true);
  List<BlogsEntry> groupsEntriesInTrash=BlogsEntryLocalServiceUtil.getGroupsEntries(_user.getCompanyId(),_group.getGroupId(),new Date(),_statusInTrashQueryDefinition);
  Assert.assertEquals(initialCount + 1,groupsEntriesInTrash.size());
  for (  BlogsEntry groupsEntry : groupsEntriesInTrash) {
    Assert.assertEquals("Entry " + groupsEntry.getEntryId() + " is not in trash",WorkflowConstants.STATUS_IN_TRASH,groupsEntry.getStatus());
    Assert.assertEquals("Entry belongs to company " + groupsEntry.getCompanyId() + " but should belong to company "+ _user.getCompanyId(),_user.getCompanyId(),groupsEntry.getCompanyId());
  }
}

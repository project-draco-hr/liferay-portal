{
  List<BlogsEntry> groupsEntries=BlogsEntryLocalServiceUtil.getGroupsEntries(_user.getCompanyId(),_group.getGroupId(),new Date(),_statusInTrashQueryDefinition);
  int initialCount=groupsEntries.size();
  addEntry(false);
  addEntry(true);
  List<BlogsEntry> groupsEntriesInTrash=BlogsEntryLocalServiceUtil.getGroupsEntries(_user.getCompanyId(),_group.getGroupId(),new Date(),_statusInTrashQueryDefinition);
  Assert.assertEquals(initialCount + 1,groupsEntriesInTrash.size());
  for (  BlogsEntry groupsEntry : groupsEntriesInTrash) {
    if (WorkflowConstants.STATUS_IN_TRASH != groupsEntry.getStatus()) {
      Assert.fail("Entry " + groupsEntry.getEntryId() + " is not in trash");
    }
    if (groupsEntry.getCompanyId() != _user.getCompanyId()) {
      Assert.fail("Entry belongs to company " + groupsEntry.getCompanyId() + " but should belong to company "+ _user.getCompanyId());
    }
  }
}

{
  addEntry(false);
  BlogsEntry entryCenter=addEntry(false);
  BlogsEntry entryNext=addEntry(false);
  BlogsEntry[] entriesPrevAndNextForTopLeft=BlogsEntryLocalServiceUtil.getEntriesPrevAndNext(entryNext.getEntryId());
  Assert.assertNull("The next element for the blog " + entryNext.getEntryId() + " should be null",entriesPrevAndNextForTopLeft[2]);
  Assert.assertNotNull("The center element for the blog " + entryNext.getEntryId() + " should be "+ entryNext.getEntryId()+ " but is null instead",entriesPrevAndNextForTopLeft[1]);
  Assert.assertNotNull("The previous element for the blog " + entryNext.getEntryId() + " should be "+ entryCenter.getEntryId()+ " but is null instead",entriesPrevAndNextForTopLeft[0]);
  Assert.assertEquals("The left element " + entriesPrevAndNextForTopLeft[0].getEntryId() + " should be "+ entryCenter.getEntryId(),entriesPrevAndNextForTopLeft[0].getEntryId(),entryCenter.getEntryId());
  Assert.assertEquals("The center element " + entriesPrevAndNextForTopLeft[1].getEntryId() + " should be "+ entryNext.getEntryId(),entriesPrevAndNextForTopLeft[1].getEntryId(),entryNext.getEntryId());
}

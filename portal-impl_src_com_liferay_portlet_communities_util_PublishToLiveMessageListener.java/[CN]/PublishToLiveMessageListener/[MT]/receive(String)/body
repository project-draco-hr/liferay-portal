{
  try {
    PublishToLiveRequest publishToLiveRequest=(PublishToLiveRequest)JSONUtil.deserialize(message);
    long userId=publishToLiveRequest.getUserId();
    long stagingGroupId=publishToLiveRequest.getStagingGroupId();
    long liveGroupId=publishToLiveRequest.getLiveGroupId();
    boolean privateLayout=publishToLiveRequest.isPrivateLayout();
    Map<String,String[]> parameterMap=publishToLiveRequest.getParameterMap();
    Map<Long,Boolean> layoutIdMap=publishToLiveRequest.getLayoutIdMap();
    PrincipalThreadLocal.setName(userId);
    User user=UserLocalServiceUtil.getUserById(userId);
    PermissionCheckerImpl _permissionChecker=PermissionCheckerFactory.create(user,false);
    PermissionThreadLocal.setPermissionChecker(_permissionChecker);
    if (publishToLiveRequest.getScope().equals("all-pages")) {
      StagingUtil.copyLayouts(stagingGroupId,liveGroupId,privateLayout,parameterMap);
    }
 else {
      StagingUtil.publishLayouts(layoutIdMap,stagingGroupId,liveGroupId,privateLayout,parameterMap);
    }
  }
 catch (  NoSuchUserException nsue) {
    _log.error("User that created the scheduled publishing doesn't " + "exist anymore");
  }
catch (  Exception e) {
    e.printStackTrace();
  }
}

{
  CalendarNotificationTemplate newCalendarNotificationTemplate=addCalendarNotificationTemplate();
  _persistence.clearCache();
  CalendarNotificationTemplate existingCalendarNotificationTemplate=_persistence.findByPrimaryKey(newCalendarNotificationTemplate.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingCalendarNotificationTemplate.getUuid(),ReflectionTestUtil.invoke(existingCalendarNotificationTemplate,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingCalendarNotificationTemplate.getGroupId()),ReflectionTestUtil.<Long>invoke(existingCalendarNotificationTemplate,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingCalendarNotificationTemplate.getCalendarId()),ReflectionTestUtil.<Long>invoke(existingCalendarNotificationTemplate,"getOriginalCalendarId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingCalendarNotificationTemplate.getNotificationType(),ReflectionTestUtil.invoke(existingCalendarNotificationTemplate,"getOriginalNotificationType",new Class<?>[0])));
  Assert.assertTrue(Objects.equals(existingCalendarNotificationTemplate.getNotificationTemplateType(),ReflectionTestUtil.invoke(existingCalendarNotificationTemplate,"getOriginalNotificationTemplateType",new Class<?>[0])));
}

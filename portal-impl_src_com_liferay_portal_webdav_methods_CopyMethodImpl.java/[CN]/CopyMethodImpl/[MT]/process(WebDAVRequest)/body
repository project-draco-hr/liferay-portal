{
  WebDAVStorage storage=webDavRequest.getWebDAVStorage();
  HttpServletRequest request=webDavRequest.getHttpServletRequest();
  String destination=WebDAVUtil.getDestination(request,storage.getRootPath());
  StringBundler sb=new StringBundler();
  if (_log.isInfoEnabled()) {
    sb.append("Destination is ");
    sb.append(destination);
  }
  int status=HttpServletResponse.SC_FORBIDDEN;
  if ((!destination.equals(webDavRequest.getPath())) && (WebDAVUtil.getGroupId(destination) == webDavRequest.getGroupId())) {
    Resource resource=storage.getResource(webDavRequest);
    if (resource == null) {
      status=HttpServletResponse.SC_NOT_FOUND;
    }
 else     if (resource.isCollection()) {
      boolean overwrite=WebDAVUtil.isOverwrite(request);
      long depth=WebDAVUtil.getDepth(request);
      if (_log.isInfoEnabled()) {
        sb.append(", overwrite is ");
        sb.append(overwrite);
        sb.append(", depth is ");
        sb.append(depth);
        _log.info(sb.toString());
      }
      status=storage.copyCollectionResource(webDavRequest,resource,destination,overwrite,depth);
    }
 else {
      boolean overwrite=WebDAVUtil.isOverwrite(request);
      if (_log.isInfoEnabled()) {
        sb.append(", overwrite is ");
        sb.append(overwrite);
        _log.info(sb.toString());
      }
      status=storage.copySimpleResource(webDavRequest,resource,destination,overwrite);
    }
  }
  return status;
}

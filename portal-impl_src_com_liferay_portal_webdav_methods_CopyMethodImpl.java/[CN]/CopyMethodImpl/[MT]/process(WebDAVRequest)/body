{
  WebDAVStorage storage=webDavReq.getWebDAVStorage();
  HttpServletRequest req=webDavReq.getHttpServletRequest();
  String destination=WebDAVUtil.getDestination(req,storage.getRootPath());
  StringMaker sm=new StringMaker();
  if (_log.isInfoEnabled()) {
    sm.append("Destination is " + destination);
  }
  int status=HttpServletResponse.SC_FORBIDDEN;
  if ((!destination.equals(webDavReq.getPath())) && (WebDAVUtil.getGroupId(destination) == webDavReq.getGroupId())) {
    Resource resource=storage.getResource(webDavReq);
    if (resource == null) {
      status=HttpServletResponse.SC_NOT_FOUND;
    }
 else     if (resource.isCollection()) {
      try {
        boolean overwrite=WebDAVUtil.isOverwrite(req);
        long depth=WebDAVUtil.getDepth(req);
        if (_log.isInfoEnabled()) {
          sm.append(", overwrite is " + overwrite);
          sm.append(", depth is " + depth);
          _log.info(sm.toString());
        }
        status=storage.copyCollectionResource(webDavReq,resource,destination,overwrite,depth);
      }
 catch (      InvalidRequestException ire) {
        status=HttpServletResponse.SC_BAD_REQUEST;
      }
    }
 else {
      boolean overwrite=WebDAVUtil.isOverwrite(req);
      if (_log.isInfoEnabled()) {
        sm.append(", overwrite is " + overwrite);
        _log.info(sm.toString());
      }
      status=storage.copySimpleResource(webDavReq,resource,destination,overwrite);
    }
  }
  return status;
}

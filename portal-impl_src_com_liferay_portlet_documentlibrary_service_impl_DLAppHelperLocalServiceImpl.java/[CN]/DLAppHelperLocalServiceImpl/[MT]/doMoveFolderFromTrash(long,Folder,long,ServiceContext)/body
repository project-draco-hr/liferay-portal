{
  DLFolder dlFolder=(DLFolder)folder.getModel();
  if (dlFolder.isInTrash()) {
    restoreFolderFromTrash(userId,folder);
  }
 else {
    dlFolderLocalService.updateStatus(userId,folder.getFolderId(),WorkflowConstants.STATUS_APPROVED,new HashMap<String,Serializable>(),new ServiceContext());
    dlFileRankLocalService.enableFileRanksByFolderId(folder.getFolderId());
    QueryDefinition queryDefinition=new QueryDefinition(WorkflowConstants.STATUS_ANY);
    List<Object> foldersAndFileEntriesAndFileShortcuts=dlFolderLocalService.getFoldersAndFileEntriesAndFileShortcuts(dlFolder.getGroupId(),dlFolder.getFolderId(),null,false,queryDefinition);
    dlAppHelperLocalService.restoreDependentsFromTrash(foldersAndFileEntriesAndFileShortcuts);
    registerDLSyncEventCallback(DLSyncConstants.EVENT_RESTORE_FROM_TRASH,folder);
    JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
    extraDataJSONObject.put("title",folder.getName());
    socialActivityLocalService.addActivity(userId,folder.getGroupId(),DLFolderConstants.class.getName(),folder.getFolderId(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
  }
  return dlAppLocalService.moveFolder(userId,folder.getFolderId(),parentFolderId,serviceContext);
}

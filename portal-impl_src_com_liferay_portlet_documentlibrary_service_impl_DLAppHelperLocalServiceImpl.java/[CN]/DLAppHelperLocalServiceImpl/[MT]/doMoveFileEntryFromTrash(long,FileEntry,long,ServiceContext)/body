{
  DLFileEntry dlFileEntry=(DLFileEntry)fileEntry.getModel();
  if (dlFileEntry.isInTrashExplicitly()) {
    restoreFileEntryFromTrash(userId,fileEntry);
    fileEntry=dlAppLocalService.moveFileEntry(userId,fileEntry.getFileEntryId(),newFolderId,serviceContext);
    if (DLAppHelperThreadLocal.isEnabled()) {
      dlFileRankLocalService.enableFileRanks(fileEntry.getFileEntryId());
    }
    return fileEntry;
  }
  List<DLFileVersion> dlFileVersions=dlFileVersionLocalService.getFileVersions(fileEntry.getFileEntryId(),WorkflowConstants.STATUS_IN_TRASH);
  dlFileVersions=ListUtil.sort(dlFileVersions,new FileVersionVersionComparator());
  FileVersion fileVersion=new LiferayFileVersion(dlFileVersions.get(0));
  TrashVersion trashVersion=trashVersionLocalService.fetchVersion(DLFileVersion.class.getName(),fileVersion.getFileVersionId());
  int oldStatus=WorkflowConstants.STATUS_APPROVED;
  if (trashVersion != null) {
    oldStatus=trashVersion.getStatus();
  }
  dlFileEntryLocalService.updateStatus(userId,fileVersion.getFileVersionId(),oldStatus,serviceContext,new HashMap<String,Serializable>());
  for (  DLFileVersion dlFileVersion : dlFileVersions) {
    trashVersion=trashVersionLocalService.fetchVersion(DLFileVersion.class.getName(),dlFileVersion.getFileVersionId());
    oldStatus=WorkflowConstants.STATUS_APPROVED;
    if (trashVersion != null) {
      oldStatus=trashVersion.getStatus();
    }
    dlFileVersion.setStatus(oldStatus);
    dlFileVersionPersistence.update(dlFileVersion);
    if (trashVersion != null) {
      trashVersionLocalService.deleteTrashVersion(trashVersion);
    }
  }
  if (DLAppHelperThreadLocal.isEnabled()) {
    dlFileRankLocalService.enableFileRanks(fileEntry.getFileEntryId());
    dlFileShortcutLocalService.enableFileShortcuts(fileEntry.getFileEntryId());
  }
  fileEntry=dlAppService.moveFileEntry(fileEntry.getFileEntryId(),newFolderId,serviceContext);
  triggerRepositoryEvent(fileEntry.getRepositoryId(),TrashRepositoryEventType.EntryRestored.class,FileEntry.class,fileEntry);
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",fileEntry.getTitle());
  socialActivityLocalService.addActivity(userId,fileEntry.getGroupId(),DLFileEntryConstants.getClassName(),fileEntry.getFileEntryId(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
  return fileEntry;
}

{
  List<DLFileVersion> dlFileVersions=dlFileVersionLocalService.getFileVersions(fileEntry.getFileEntryId(),WorkflowConstants.STATUS_ANY);
  dlFileVersions=ListUtil.sort(dlFileVersions,new FileVersionVersionComparator());
  FileVersion fileVersion=new LiferayFileVersion(dlFileVersions.get(0));
  if (fileVersion.isInTrash()) {
    restoreFileEntryFromTrash(userId,fileEntry);
    fileEntry=dlAppLocalService.moveFileEntry(userId,fileEntry.getFileEntryId(),newFolderId,serviceContext);
    if (DLAppHelperThreadLocal.isEnabled()) {
      dlFileRankLocalService.enableFileRanks(fileEntry.getFileEntryId());
    }
    return fileEntry;
  }
 else {
    dlFileEntryLocalService.updateStatus(userId,fileVersion.getFileVersionId(),fileVersion.getStatus(),new HashMap<String,Serializable>(),serviceContext);
    if (DLAppHelperThreadLocal.isEnabled()) {
      dlFileRankLocalService.enableFileRanks(fileEntry.getFileEntryId());
      dlFileShortcutLocalService.enableFileShortcuts(fileEntry.getFileEntryId());
    }
    fileEntry=dlAppService.moveFileEntry(fileEntry.getFileEntryId(),newFolderId,serviceContext);
    registerDLSyncEventCallback(DLSyncConstants.EVENT_RESTORE,DLSyncConstants.TYPE_FILE,fileEntry.getFileEntryId());
    JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
    extraDataJSONObject.put("title",fileEntry.getTitle());
    socialActivityLocalService.addActivity(userId,fileEntry.getGroupId(),DLFileEntryConstants.getClassName(),fileEntry.getFileEntryId(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
    return fileEntry;
  }
}

{
  if (!fileVersion.isApproved() || Validator.isNull(entryURL)) {
    return;
  }
  DLGroupServiceSettings dlGroupServiceSettings=DLGroupServiceSettings.getInstance(fileVersion.getGroupId());
  boolean commandUpdate=false;
  if (serviceContext.isCommandUpdate() || Constants.CHECKIN.equals(serviceContext.getCommand())) {
    commandUpdate=true;
  }
  if (serviceContext.isCommandAdd() && dlGroupServiceSettings.isEmailFileEntryAddedEnabled()) {
  }
 else   if (commandUpdate && dlGroupServiceSettings.isEmailFileEntryUpdatedEnabled()) {
  }
 else {
    return;
  }
  String entryTitle=fileVersion.getTitle();
  String fromName=dlGroupServiceSettings.getEmailFromName();
  String fromAddress=dlGroupServiceSettings.getEmailFromAddress();
  LocalizedValuesMap subjectLocalizedValuesMap=null;
  LocalizedValuesMap bodyLocalizedValuesMap=null;
  if (commandUpdate) {
    subjectLocalizedValuesMap=dlGroupServiceSettings.getEmailFileEntryUpdatedSubject();
    bodyLocalizedValuesMap=dlGroupServiceSettings.getEmailFileEntryUpdatedBody();
  }
 else {
    subjectLocalizedValuesMap=dlGroupServiceSettings.getEmailFileEntryAddedSubject();
    bodyLocalizedValuesMap=dlGroupServiceSettings.getEmailFileEntryAddedBody();
  }
  FileEntry fileEntry=fileVersion.getFileEntry();
  Folder folder=null;
  long folderId=fileEntry.getFolderId();
  if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    folder=dlAppLocalService.getFolder(folderId);
  }
  String folderName=LanguageUtil.get(serviceContext.getLocale(),"home");
  if (folder != null) {
    folderName=folder.getName();
  }
  SubscriptionSender subscriptionSender=new GroupSubscriptionCheckSubscriptionSender(DLPermission.RESOURCE_NAME);
  DLFileEntry dlFileEntry=(DLFileEntry)fileEntry.getModel();
  DLFileEntryType dlFileEntryType=dlFileEntryTypeLocalService.getDLFileEntryType(dlFileEntry.getFileEntryTypeId());
  subscriptionSender.setClassPK(fileVersion.getFileEntryId());
  subscriptionSender.setClassName(DLFileEntryConstants.getClassName());
  subscriptionSender.setCompanyId(fileVersion.getCompanyId());
  subscriptionSender.setContextAttributes("[$DOCUMENT_STATUS_BY_USER_NAME$]",fileVersion.getStatusByUserName(),"[$DOCUMENT_TITLE$]",entryTitle,"[$DOCUMENT_TYPE$]",dlFileEntryType.getName(serviceContext.getLocale()),"[$DOCUMENT_URL$]",entryURL,"[$FOLDER_NAME$]",folderName);
  subscriptionSender.setContextCreatorUserPrefix("DOCUMENT");
  subscriptionSender.setCreatorUserId(fileVersion.getUserId());
  subscriptionSender.setCurrentUserId(userId);
  subscriptionSender.setEntryTitle(entryTitle);
  subscriptionSender.setEntryURL(entryURL);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setLocalizedBodyMap(LocalizationUtil.getMap(bodyLocalizedValuesMap));
  subscriptionSender.setLocalizedSubjectMap(LocalizationUtil.getMap(subjectLocalizedValuesMap));
  subscriptionSender.setMailId("file_entry",fileVersion.getFileEntryId());
  int notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY;
  if (commandUpdate) {
    notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY;
  }
  subscriptionSender.setNotificationType(notificationType);
  String portletId=PortletProviderUtil.getPortletId(FileEntry.class.getName(),PortletProvider.Action.VIEW);
  subscriptionSender.setPortletId(portletId);
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setScopeGroupId(fileVersion.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.addPersistedSubscribers(DLFolder.class.getName(),fileVersion.getGroupId());
  if (folder != null) {
    subscriptionSender.addPersistedSubscribers(DLFolder.class.getName(),folder.getFolderId());
    for (    Long ancestorFolderId : folder.getAncestorFolderIds()) {
      subscriptionSender.addPersistedSubscribers(DLFolder.class.getName(),ancestorFolderId);
    }
  }
  if (dlFileEntryType.getFileEntryTypeId() == DLFileEntryTypeConstants.FILE_ENTRY_TYPE_ID_BASIC_DOCUMENT) {
    subscriptionSender.addPersistedSubscribers(DLFileEntryType.class.getName(),fileVersion.getGroupId());
  }
 else {
    subscriptionSender.addPersistedSubscribers(DLFileEntryType.class.getName(),dlFileEntryType.getFileEntryTypeId());
  }
  subscriptionSender.addPersistedSubscribers(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
  subscriptionSender.flushNotificationsAsync();
}

{
  for (  Object object : dlFileEntriesAndDLFolders) {
    if (object instanceof DLFileEntry) {
      DLFileEntry dlFileEntry=(DLFileEntry)object;
      DLFileVersion dlFileVersion=dlFileVersionLocalService.getLatestFileVersion(dlFileEntry.getFileEntryId(),false);
      if ((status == WorkflowConstants.STATUS_APPROVED) && (dlFileVersion.getStatus() == WorkflowConstants.STATUS_IN_TRASH)) {
        continue;
      }
      if (status == WorkflowConstants.STATUS_APPROVED) {
        if (dlFileVersion.isApproved()) {
          assetEntryLocalService.updateVisible(DLFileEntryConstants.getClassName(),dlFileEntry.getFileEntryId(),true);
        }
      }
 else {
        assetEntryLocalService.updateVisible(DLFileEntryConstants.getClassName(),dlFileEntry.getFileEntryId(),false);
      }
      if (status == WorkflowConstants.STATUS_APPROVED) {
        socialActivityCounterLocalService.enableActivityCounters(DLFileEntryConstants.getClassName(),dlFileEntry.getFileEntryId());
        socialActivityLocalService.addActivity(user.getUserId(),dlFileEntry.getGroupId(),DLFileEntryConstants.getClassName(),dlFileEntry.getFileEntryId(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,StringPool.BLANK,0);
      }
 else {
        socialActivityLocalService.addActivity(user.getUserId(),dlFileEntry.getGroupId(),DLFileEntryConstants.getClassName(),dlFileEntry.getFileEntryId(),SocialActivityConstants.TYPE_MOVE_TO_TRASH,StringPool.BLANK,0);
      }
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(DLFileEntry.class);
      indexer.reindex(dlFileEntry);
      if ((status != WorkflowConstants.STATUS_APPROVED) && dlFileVersion.isPending()) {
        workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(dlFileVersion.getCompanyId(),dlFileVersion.getGroupId(),DLFileEntryConstants.getClassName(),dlFileVersion.getFileVersionId());
      }
    }
 else     if (object instanceof DLFolder) {
      DLFolder dlFolder=(DLFolder)object;
      if (dlFolder.getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
        continue;
      }
      QueryDefinition queryDefinition=new QueryDefinition(WorkflowConstants.STATUS_ANY);
      List<Object> foldersAndFileEntriesAndFileShortcuts=dlFolderLocalService.getFoldersAndFileEntriesAndFileShortcuts(dlFolder.getGroupId(),dlFolder.getFolderId(),null,false,queryDefinition);
      updateStatuses(user,foldersAndFileEntriesAndFileShortcuts,status);
    }
  }
}

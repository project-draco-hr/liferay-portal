{
  if (status == WorkflowConstants.STATUS_APPROVED) {
    if (fileEntry.getVersion().equals(latestFileVersion.getVersion())) {
      if ((latestFileVersion.getVersion() != DLFileEntryConstants.DEFAULT_VERSION)) {
        AssetEntry draftAssetEntry=null;
        try {
          draftAssetEntry=assetEntryLocalService.getEntry(DLFileEntry.class.getName(),latestFileVersion.getPrimaryKey());
          long[] assetCategoryIds=draftAssetEntry.getCategoryIds();
          String[] assetTagNames=draftAssetEntry.getTagNames();
          assetEntryLocalService.updateEntry(userId,fileEntry.getGroupId(),DLFileEntry.class.getName(),fileEntry.getFileEntryId(),fileEntry.getUuid(),assetCategoryIds,assetTagNames,true,null,null,null,null,draftAssetEntry.getMimeType(),fileEntry.getTitle(),fileEntry.getDescription(),null,null,0,0,null,false);
          assetEntryLocalService.deleteEntry(draftAssetEntry.getEntryId());
        }
 catch (        NoSuchEntryException nsee) {
        }
      }
      assetEntryLocalService.updateVisible(DLFileEntry.class.getName(),fileEntry.getFileEntryId(),true);
    }
    socialActivityLocalService.addUniqueActivity(latestFileVersion.getStatusByUserId(),latestFileVersion.getGroupId(),latestFileVersion.getCreateDate(),DLFileEntry.class.getName(),fileEntry.getFileEntryId(),DLActivityKeys.ADD_FILE_ENTRY,StringPool.BLANK,0);
  }
 else {
    if (Validator.isNull(fileEntry.getVersion())) {
      assetEntryLocalService.updateVisible(DLFileEntry.class.getName(),fileEntry.getFileEntryId(),false);
    }
  }
}

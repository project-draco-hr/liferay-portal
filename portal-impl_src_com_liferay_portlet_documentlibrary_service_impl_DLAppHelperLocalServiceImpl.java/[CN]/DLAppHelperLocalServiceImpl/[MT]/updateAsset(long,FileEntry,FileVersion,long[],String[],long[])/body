{
  AssetEntry assetEntry=null;
  boolean visible=false;
  boolean addDraftAssetEntry=false;
  if (fileEntry instanceof LiferayFileEntry) {
    DLFileEntry dlFileEntry=(DLFileEntry)fileEntry.getModel();
    DLFileVersion dlFileVersion=(DLFileVersion)fileVersion.getModel();
    if (dlFileVersion.isApproved()) {
      visible=true;
    }
 else {
      String version=dlFileVersion.getVersion();
      if (!version.equals(DLFileEntryConstants.VERSION_DEFAULT)) {
        addDraftAssetEntry=true;
      }
    }
  }
 else {
    visible=true;
  }
  long fileEntryTypeId=getFileEntryTypeId(fileEntry);
  if (addDraftAssetEntry) {
    assetEntry=assetEntryLocalService.updateEntry(userId,fileEntry.getGroupId(),DLFileEntryConstants.getClassName(),fileVersion.getFileVersionId(),fileEntry.getUuid(),fileEntryTypeId,assetCategoryIds,assetTagNames,false,null,null,null,null,fileEntry.getMimeType(),fileEntry.getTitle(),fileEntry.getDescription(),null,null,null,0,0,null,false);
  }
 else {
    assetEntry=assetEntryLocalService.updateEntry(userId,fileEntry.getGroupId(),DLFileEntryConstants.getClassName(),fileEntry.getFileEntryId(),fileEntry.getUuid(),fileEntryTypeId,assetCategoryIds,assetTagNames,visible,null,null,null,null,fileEntry.getMimeType(),fileEntry.getTitle(),fileEntry.getDescription(),null,null,null,0,0,null,false);
    List<DLFileShortcut> dlFileShortcuts=dlFileShortcutPersistence.findByToFileEntryId(fileEntry.getFileEntryId());
    for (    DLFileShortcut dlFileShortcut : dlFileShortcuts) {
      assetEntryLocalService.updateEntry(userId,dlFileShortcut.getGroupId(),DLFileShortcut.class.getName(),dlFileShortcut.getFileShortcutId(),dlFileShortcut.getUuid(),fileEntryTypeId,assetCategoryIds,assetTagNames,true,null,null,null,null,fileEntry.getMimeType(),fileEntry.getTitle(),fileEntry.getDescription(),null,null,null,0,0,null,false);
    }
  }
  assetLinkLocalService.updateLinks(userId,assetEntry.getEntryId(),assetLinkEntryIds,AssetLinkConstants.TYPE_RELATED);
  return assetEntry;
}

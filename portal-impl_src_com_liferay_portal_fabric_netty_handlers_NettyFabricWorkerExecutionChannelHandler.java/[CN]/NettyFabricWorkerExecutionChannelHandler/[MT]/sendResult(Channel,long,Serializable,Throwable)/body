{
  final FabricWorkerResultProcessCallable fabricWorkerResultProcessCallable=new FabricWorkerResultProcessCallable(fabricWorkerId,result,t);
  NoticeableFuture<Serializable> noticeableFuture=RPCUtil.execute(channel,new SyncProcessRPCCallable<Serializable>(fabricWorkerResultProcessCallable));
  NettyUtil.scheduleCancellation(channel,noticeableFuture,_executionTimeout);
  noticeableFuture.addFutureListener(new BaseFutureListener<Serializable>(){
    @Override public void completeWithException(    Future<Serializable> future,    Throwable throwable){
      _log.error("Unable to send back fabric worker result " + fabricWorkerResultProcessCallable,throwable);
    }
  }
);
}

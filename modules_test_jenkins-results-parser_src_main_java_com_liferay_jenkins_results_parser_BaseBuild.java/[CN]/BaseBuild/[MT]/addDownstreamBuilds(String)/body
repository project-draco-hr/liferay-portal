{
  boolean downstreamBuildAdded=false;
  boolean debugFlag=downstreamBuilds.size() > 0;
  List<URL> downstreamBuildURLs=new ArrayList<>(downstreamBuilds.size());
  int skipCount=0;
  int addCount=0;
  try {
    for (    Build downstreamBuild : downstreamBuilds) {
      URL url=new URL(downstreamBuild.getBuildURL());
      downstreamBuildURLs.add(url);
      if (debugFlag) {
        System.out.println("existing: " + url.toString());
      }
    }
    for (    String url : urls) {
      URL addURL=new URL(JenkinsResultsParserUtil.getLocalURL(decodeURL(url)));
      if (!downstreamBuildURLs.contains(addURL)) {
        downstreamBuildAdded=true;
        downstreamBuilds.add(BuildFactory.newBuild(addURL.toString(),this));
        if (debugFlag) {
          System.out.println("adding: " + addURL.toString());
        }
        addCount++;
      }
 else {
        skipCount++;
      }
    }
    if (downstreamBuildAdded) {
      setStatus("starting");
    }
    if (debugFlag) {
      System.out.println("skipCount: " + skipCount);
      System.out.println("addCount: " + addCount);
      System.out.println("downstreamBuilds size: " + downstreamBuilds.size());
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}

{
  if (!content.contains("include-and-override=portlet-ext.properties")) {
    content="include-and-override=portlet-ext.properties" + "\n\n" + content;
  }
  if (!portalSource) {
    return content;
  }
  try (UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(content))){
    int lineCount=0;
    String line=null;
    String previousProperty=StringPool.BLANK;
    while ((line=unsyncBufferedReader.readLine()) != null) {
      lineCount++;
      if (lineCount == 1) {
        continue;
      }
      if (line.startsWith(StringPool.POUND) || line.startsWith(StringPool.SPACE) || line.startsWith(StringPool.TAB)) {
        continue;
      }
      int pos=line.indexOf(StringPool.EQUAL);
      if (pos == -1) {
        continue;
      }
      String property=StringUtil.trim(line.substring(0,pos));
      pos=property.indexOf(StringPool.OPEN_BRACKET);
      if (pos != -1) {
        property=property.substring(0,pos);
      }
      if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) {
        processErrorMessage(fileName,"sort: " + fileName + " "+ lineCount);
      }
      previousProperty=property;
    }
  }
   return content;
}

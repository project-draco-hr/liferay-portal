{
  HttpSession session=request.getSession();
  Company company=PortalUtil.getCompany(request);
  long companyId=company.getCompanyId();
  String cdnHost=PortalUtil.getCDNHost(request);
  String dynamicResourcesCDNHost=StringPool.BLANK;
  boolean cdnDynamicResourceEnabled=PortalUtil.isCDNDynamicResourcesEnabled(request);
  if (cdnDynamicResourceEnabled) {
    dynamicResourcesCDNHost=cdnHost;
  }
  String portalURL=PortalUtil.getPortalURL(request);
  String contextPath=PortalUtil.getPathContext();
  String friendlyURLPrivateGroupPath=PortalUtil.getPathFriendlyURLPrivateGroup();
  String friendlyURLPrivateUserPath=PortalUtil.getPathFriendlyURLPrivateUser();
  String friendlyURLPublicPath=PortalUtil.getPathFriendlyURLPublic();
  String imagePath=dynamicResourcesCDNHost.concat(PortalUtil.getPathImage());
  String mainPath=PortalUtil.getPathMain();
  String i18nPath=(String)request.getAttribute(WebKeys.I18N_PATH);
  if (Validator.isNotNull(i18nPath)) {
    if (Validator.isNotNull(contextPath)) {
      String i18nContextPath=contextPath.concat(i18nPath);
      friendlyURLPrivateGroupPath=StringUtil.replaceFirst(friendlyURLPrivateGroupPath,contextPath,i18nContextPath);
      friendlyURLPrivateUserPath=StringUtil.replaceFirst(friendlyURLPrivateUserPath,contextPath,i18nContextPath);
      friendlyURLPublicPath=StringUtil.replaceFirst(friendlyURLPublicPath,contextPath,i18nContextPath);
      mainPath=StringUtil.replaceFirst(mainPath,contextPath,i18nContextPath);
    }
 else {
      friendlyURLPrivateGroupPath=i18nPath.concat(friendlyURLPrivateGroupPath);
      friendlyURLPrivateUserPath=i18nPath.concat(friendlyURLPrivateUserPath);
      friendlyURLPublicPath=i18nPath.concat(friendlyURLPublicPath);
      mainPath=i18nPath.concat(mainPath);
    }
  }
  StringBundler sb=new StringBundler(5);
  sb.append(imagePath);
  sb.append("/company_logo?img_id=");
  sb.append(company.getLogoId());
  sb.append("&t=");
  sb.append(WebServerServletTokenUtil.getToken(company.getLogoId()));
  String companyLogo=sb.toString();
  int companyLogoHeight=0;
  int companyLogoWidth=0;
  Image companyLogoImage=null;
  if (company.getLogoId() > 0) {
    companyLogoImage=ImageLocalServiceUtil.getCompanyLogo(company.getLogoId());
  }
 else {
    companyLogoImage=ImageToolUtil.getDefaultCompanyLogo();
  }
  if (companyLogoImage != null) {
    companyLogoHeight=companyLogoImage.getHeight();
    companyLogoWidth=companyLogoImage.getWidth();
  }
  String realCompanyLogo=companyLogo;
  int realCompanyLogoHeight=companyLogoHeight;
  int realCompanyLogoWidth=companyLogoWidth;
  User user=null;
  try {
    user=PortalUtil.initUser(request);
  }
 catch (  NoSuchUserException nsue) {
    return null;
  }
  boolean signedIn=!user.isDefaultUser();
  if (PropsValues.BROWSER_CACHE_DISABLED || (PropsValues.BROWSER_CACHE_SIGNED_IN_DISABLED && signedIn)) {
    response.setDateHeader(HttpHeaders.EXPIRES,0);
    response.setHeader(HttpHeaders.CACHE_CONTROL,HttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);
    response.setHeader(HttpHeaders.PRAGMA,HttpHeaders.PRAGMA_NO_CACHE_VALUE);
  }
  User realUser=user;
  Long realUserId=(Long)session.getAttribute(WebKeys.USER_ID);
  if (realUserId != null) {
    if (user.getUserId() != realUserId.longValue()) {
      realUser=UserLocalServiceUtil.getUserById(realUserId.longValue());
    }
  }
  String doAsUserId=ParamUtil.getString(request,"doAsUserId");
  String doAsUserLanguageId=ParamUtil.getString(request,"doAsUserLanguageId");
  long doAsGroupId=ParamUtil.getLong(request,"doAsGroupId");
  long refererGroupId=ParamUtil.getLong(request,"refererGroupId");
  long refererPlid=ParamUtil.getLong(request,"refererPlid");
  if (LayoutLocalServiceUtil.fetchLayout(refererPlid) == null) {
    refererPlid=0;
  }
  String controlPanelCategory=ParamUtil.getString(request,"controlPanelCategory");
  PermissionChecker permissionChecker=PermissionCheckerFactoryUtil.create(user);
  PermissionThreadLocal.setPermissionChecker(permissionChecker);
  try {
    CookieKeys.validateSupportCookie(request);
  }
 catch (  Exception e) {
    CookieKeys.addSupportCookie(request,response);
  }
  TimeZone timeZone=user.getTimeZone();
  if (timeZone == null) {
    timeZone=company.getTimeZone();
  }
  if (signedIn) {
    updateUserLayouts(user);
  }
  Layout layout=null;
  List<Layout> layouts=null;
  long plid=ParamUtil.getLong(request,"p_l_id");
  boolean viewableSourceGroup=true;
  if (plid > 0) {
    layout=LayoutLocalServiceUtil.getLayout(plid);
  }
 else {
    long groupId=ParamUtil.getLong(request,"groupId");
    boolean privateLayout=ParamUtil.getBoolean(request,"privateLayout");
    long layoutId=ParamUtil.getLong(request,"layoutId");
    if ((groupId > 0) && (layoutId > 0)) {
      layout=LayoutLocalServiceUtil.getLayout(groupId,privateLayout,layoutId);
    }
  }
  if (layout != null) {
    long sourceGroupId=ParamUtil.getLong(request,"p_v_l_s_g_id");
    if ((sourceGroupId > 0) && (sourceGroupId != layout.getGroupId())) {
      Group sourceGroup=GroupLocalServiceUtil.getGroup(sourceGroupId);
      if (layout.isTypeControlPanel() || layout.isPublicLayout() || SitesUtil.isUserGroupLayoutSetViewable(permissionChecker,layout.getGroup())) {
        layout=new VirtualLayout(layout,sourceGroup);
      }
 else {
        viewableSourceGroup=false;
      }
    }
  }
  String ppid=ParamUtil.getString(request,"p_p_id");
  Boolean redirectToDefaultLayout=(Boolean)request.getAttribute(WebKeys.REDIRECT_TO_DEFAULT_LAYOUT);
  if (redirectToDefaultLayout == null) {
    redirectToDefaultLayout=Boolean.FALSE;
  }
  if (layout != null) {
    Group group=layout.getGroup();
    if (!signedIn && PropsValues.AUTH_FORWARD_BY_REDIRECT) {
      request.setAttribute(WebKeys.REQUESTED_LAYOUT,layout);
    }
    if ((Validator.isNull(controlPanelCategory) || controlPanelCategory.equals(PortletCategoryKeys.MY) || controlPanelCategory.equals(PortletCategoryKeys.PORTLET)) && Validator.isNotNull(ppid) && (LiferayWindowState.isPopUp(request) || LiferayWindowState.isExclusive(request))) {
      controlPanelCategory=PortletCategoryKeys.PORTLET;
    }
 else     if (Validator.isNotNull(ppid)) {
      Portlet portlet=PortletLocalServiceUtil.getPortletById(companyId,ppid);
      String portletControlPanelEntryCategory=portlet.getControlPanelEntryCategory();
      if (!controlPanelCategory.startsWith(PortletCategoryKeys.CURRENT_SITE) && portletControlPanelEntryCategory.startsWith(PortletCategoryKeys.SITE_ADMINISTRATION)) {
        portletControlPanelEntryCategory=PortletCategoryKeys.SITES;
      }
      if (!controlPanelCategory.startsWith(PortletCategoryKeys.CURRENT_SITE) && Validator.isNotNull(portletControlPanelEntryCategory)) {
        controlPanelCategory=portletControlPanelEntryCategory;
      }
    }
    boolean viewableGroup=hasAccessPermission(permissionChecker,layout,doAsGroupId,controlPanelCategory,true);
    boolean viewableStaging=!group.isControlPanel() && GroupPermissionUtil.contains(permissionChecker,group,ActionKeys.VIEW_STAGING);
    if (viewableStaging) {
      layouts=LayoutLocalServiceUtil.getLayouts(layout.getGroupId(),layout.isPrivateLayout(),LayoutConstants.DEFAULT_PARENT_LAYOUT_ID);
    }
 else     if ((!viewableGroup || !viewableSourceGroup) && group.isStagingGroup()) {
      layout=null;
    }
 else     if (!isLoginRequest(request) && (!viewableGroup || !viewableSourceGroup || (!redirectToDefaultLayout && !hasAccessPermission(permissionChecker,layout,doAsGroupId,controlPanelCategory,false)))) {
      if (user.isDefaultUser() && PropsValues.AUTH_LOGIN_PROMPT_ENABLED) {
        throw new PrincipalException.MustBeAuthenticated(user.getUserId());
      }
      sb=new StringBundler(6);
      sb.append("User ");
      sb.append(user.getUserId());
      sb.append(" is not allowed to access the ");
      sb.append(layout.isPrivateLayout() ? "private" : "public");
      sb.append(" pages of group ");
      sb.append(layout.getGroupId());
      if (_log.isWarnEnabled()) {
        _log.warn(sb.toString());
      }
      throw new NoSuchLayoutException(sb.toString());
    }
 else     if (isLoginRequest(request) && !viewableGroup) {
      layout=null;
    }
 else     if (group.isLayoutPrototype()) {
      layouts=new ArrayList<>();
    }
 else {
      layouts=LayoutLocalServiceUtil.getLayouts(layout.getGroupId(),layout.isPrivateLayout(),LayoutConstants.DEFAULT_PARENT_LAYOUT_ID);
      if (!group.isControlPanel()) {
        doAsGroupId=0;
      }
    }
  }
  List<Layout> unfilteredLayouts=layouts;
  LayoutComposite viewableLayoutComposite=null;
  if (layout == null) {
    viewableLayoutComposite=getDefaultViewableLayoutComposite(request,user,permissionChecker,doAsGroupId,controlPanelCategory,signedIn);
    request.setAttribute(WebKeys.LAYOUT_DEFAULT,Boolean.TRUE);
  }
 else {
    viewableLayoutComposite=getViewableLayoutComposite(request,user,permissionChecker,layout,layouts,doAsGroupId,controlPanelCategory);
  }
  String layoutSetLogo=null;
  layout=viewableLayoutComposite.getLayout();
  layouts=viewableLayoutComposite.getLayouts();
  Group group=null;
  if (layout != null) {
    group=layout.getGroup();
    if (!group.isControlPanel()) {
      rememberVisitedGroupIds(request,group.getGroupId());
    }
  }
  LayoutTypePortlet layoutTypePortlet=null;
  layouts=mergeAdditionalLayouts(request,user,permissionChecker,layout,layouts,doAsGroupId,controlPanelCategory);
  LayoutSet layoutSet=null;
  boolean hasAddLayoutLayoutPermission=false;
  boolean hasCustomizeLayoutPermission=false;
  boolean hasDeleteLayoutPermission=false;
  boolean hasUpdateLayoutPermission=false;
  boolean customizedView=SessionParamUtil.getBoolean(request,"customized_view",true);
  if (layout != null) {
    LayoutType layoutType=layout.getLayoutType();
    LayoutTypeAccessPolicy layoutTypeAccessPolicy=layoutType.getLayoutTypeAccessPolicy();
    hasAddLayoutLayoutPermission=layoutTypeAccessPolicy.isAddLayoutAllowed(permissionChecker,layout);
    hasCustomizeLayoutPermission=layoutTypeAccessPolicy.isCustomizeLayoutAllowed(permissionChecker,layout);
    hasDeleteLayoutPermission=layoutTypeAccessPolicy.isDeleteLayoutAllowed(permissionChecker,layout);
    hasUpdateLayoutPermission=layoutTypeAccessPolicy.isUpdateLayoutAllowed(permissionChecker,layout);
    layoutSet=layout.getLayoutSet();
    if (company.isSiteLogo()) {
      long logoId=0;
      if (layoutSet.isLogo()) {
        logoId=layoutSet.getLogoId();
        if (logoId == 0) {
          logoId=layoutSet.getLiveLogoId();
        }
      }
 else {
        LayoutSet siblingLayoutSet=LayoutSetLocalServiceUtil.getLayoutSet(layout.getGroupId(),!layout.isPrivateLayout());
        if (siblingLayoutSet.isLogo()) {
          logoId=siblingLayoutSet.getLogoId();
        }
      }
      if (logoId > 0) {
        sb=new StringBundler(5);
        sb.append(imagePath);
        sb.append("/layout_set_logo?img_id=");
        sb.append(logoId);
        sb.append("&t=");
        sb.append(WebServerServletTokenUtil.getToken(logoId));
        layoutSetLogo=sb.toString();
        Image layoutSetLogoImage=ImageLocalServiceUtil.getCompanyLogo(logoId);
        companyLogo=layoutSetLogo;
        companyLogoHeight=layoutSetLogoImage.getHeight();
        companyLogoWidth=layoutSetLogoImage.getWidth();
      }
    }
    plid=layout.getPlid();
    layout=(Layout)layout.clone();
    layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
    boolean customizable=layoutTypePortlet.isCustomizable();
    if (!customizable || group.isLayoutPrototype() || group.isLayoutSetPrototype()|| group.isStagingGroup()) {
      customizedView=false;
    }
    layoutTypePortlet.setCustomizedView(customizedView);
    layoutTypePortlet.setUpdatePermission(hasUpdateLayoutPermission);
    if (signedIn && customizable && customizedView&& hasCustomizeLayoutPermission) {
      PortalPreferences portalPreferences=PortletPreferencesFactoryUtil.getPortalPreferences(user.getUserId(),true);
      layoutTypePortlet.setPortalPreferences(portalPreferences);
    }
    LayoutClone layoutClone=LayoutCloneFactory.getInstance();
    if (layoutClone != null) {
      String typeSettings=layoutClone.get(request,plid);
      if (typeSettings != null) {
        UnicodeProperties typeSettingsProperties=new UnicodeProperties(true);
        typeSettingsProperties.load(typeSettings);
        String stateMax=typeSettingsProperties.getProperty(LayoutTypePortletConstants.STATE_MAX);
        String stateMin=typeSettingsProperties.getProperty(LayoutTypePortletConstants.STATE_MIN);
        String modeAbout=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_ABOUT);
        String modeConfig=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_CONFIG);
        String modeEdit=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_EDIT);
        String modeEditDefaults=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_EDIT_DEFAULTS);
        String modeEditGuest=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_EDIT_GUEST);
        String modeHelp=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_HELP);
        String modePreview=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_PREVIEW);
        String modePrint=typeSettingsProperties.getProperty(LayoutTypePortletConstants.MODE_PRINT);
        layoutTypePortlet.setStateMax(stateMax);
        layoutTypePortlet.setStateMin(stateMin);
        layoutTypePortlet.setModeAbout(modeAbout);
        layoutTypePortlet.setModeConfig(modeConfig);
        layoutTypePortlet.setModeEdit(modeEdit);
        layoutTypePortlet.setModeEditDefaults(modeEditDefaults);
        layoutTypePortlet.setModeEditGuest(modeEditGuest);
        layoutTypePortlet.setModeHelp(modeHelp);
        layoutTypePortlet.setModePreview(modePreview);
        layoutTypePortlet.setModePrint(modePrint);
      }
    }
    request.setAttribute(WebKeys.LAYOUT,layout);
    request.setAttribute(WebKeys.LAYOUTS,layouts);
  }
  String i18nLanguageId=(String)request.getAttribute(WebKeys.I18N_LANGUAGE_ID);
  Locale locale=PortalUtil.getLocale(request,response,true);
  long scopeGroupId=PortalUtil.getScopeGroupId(request);
  if (group.isInheritContent()) {
    scopeGroupId=group.getParentGroupId();
  }
  if ((scopeGroupId <= 0) && (doAsGroupId > 0)) {
    scopeGroupId=doAsGroupId;
  }
  long siteGroupId=0;
  if (layout != null) {
    if (layout.isTypeControlPanel()) {
      siteGroupId=PortalUtil.getSiteGroupId(scopeGroupId);
    }
 else {
      siteGroupId=PortalUtil.getSiteGroupId(layout.getGroupId());
    }
  }
  Theme theme=null;
  ColorScheme colorScheme=null;
  boolean wapTheme=BrowserSnifferUtil.isWap(request);
  if ((layout != null) && (layout.isTypeControlPanel() || group.isControlPanel())) {
    String themeId=PrefsPropsUtil.getString(companyId,PropsKeys.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID);
    String colorSchemeId=ColorSchemeFactoryUtil.getDefaultRegularColorSchemeId();
    theme=ThemeLocalServiceUtil.getTheme(companyId,themeId,wapTheme);
    colorScheme=ThemeLocalServiceUtil.getColorScheme(companyId,theme.getThemeId(),colorSchemeId,wapTheme);
    if (!wapTheme && theme.isWapTheme()) {
      theme=ThemeLocalServiceUtil.getTheme(companyId,PropsValues.CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID,false);
      colorScheme=ThemeLocalServiceUtil.getColorScheme(companyId,theme.getThemeId(),colorSchemeId,false);
    }
    request.setAttribute(WebKeys.THEME,theme);
    request.setAttribute(WebKeys.COLOR_SCHEME,colorScheme);
  }
  boolean themeCssFastLoad=PropsValues.THEME_CSS_FAST_LOAD;
  if (PropsValues.THEME_CSS_FAST_LOAD_CHECK_REQUEST_PARAMETER) {
    themeCssFastLoad=SessionParamUtil.getBoolean(request,"css_fast_load",PropsValues.THEME_CSS_FAST_LOAD);
  }
  boolean themeImagesFastLoad=PropsValues.THEME_IMAGES_FAST_LOAD;
  if (PropsValues.THEME_IMAGES_FAST_LOAD_CHECK_REQUEST_PARAMETER) {
    SessionParamUtil.getBoolean(request,"images_fast_load",PropsValues.THEME_IMAGES_FAST_LOAD);
  }
  boolean themeJsBarebone=PropsValues.JAVASCRIPT_BAREBONE_ENABLED;
  if (themeJsBarebone) {
    if (signedIn) {
      themeJsBarebone=false;
    }
  }
  boolean themeJsFastLoad=SessionParamUtil.getBoolean(request,"js_fast_load",PropsValues.JAVASCRIPT_FAST_LOAD);
  String lifecycle=ParamUtil.getString(request,"p_p_lifecycle","0");
  lifecycle=ParamUtil.getString(request,"p_t_lifecycle",lifecycle);
  boolean isolated=ParamUtil.getBoolean(request,"p_p_isolated");
  String facebookCanvasPageURL=(String)request.getAttribute(WebKeys.FACEBOOK_CANVAS_PAGE_URL);
  boolean widget=false;
  Boolean widgetObj=(Boolean)request.getAttribute(WebKeys.WIDGET);
  if (widgetObj != null) {
    widget=widgetObj.booleanValue();
  }
  ThemeDisplay themeDisplay=ThemeDisplayFactory.create();
  themeDisplay.setRequest(request);
  themeDisplay.setCDNHost(cdnHost);
  themeDisplay.setCDNDynamicResourcesHost(dynamicResourcesCDNHost);
  themeDisplay.setFacebookCanvasPageURL(facebookCanvasPageURL);
  themeDisplay.setPortalURL(portalURL);
  themeDisplay.setRefererPlid(refererPlid);
  themeDisplay.setSecure(request.isSecure());
  themeDisplay.setServerName(request.getServerName());
  themeDisplay.setServerPort(request.getServerPort());
  themeDisplay.setWidget(widget);
  themeDisplay.setCompany(company);
  themeDisplay.setCompanyLogo(companyLogo);
  themeDisplay.setCompanyLogoHeight(companyLogoHeight);
  themeDisplay.setCompanyLogoWidth(companyLogoWidth);
  themeDisplay.setControlPanelCategory(controlPanelCategory);
  themeDisplay.setDoAsGroupId(doAsGroupId);
  themeDisplay.setDoAsUserId(doAsUserId);
  themeDisplay.setDoAsUserLanguageId(doAsUserLanguageId);
  themeDisplay.setI18nLanguageId(i18nLanguageId);
  themeDisplay.setI18nPath(i18nPath);
  themeDisplay.setIsolated(isolated);
  themeDisplay.setLanguageId(LocaleUtil.toLanguageId(locale));
  themeDisplay.setLayout(layout);
  themeDisplay.setLayouts(layouts);
  themeDisplay.setLayoutSet(layoutSet);
  themeDisplay.setLayoutSetLogo(layoutSetLogo);
  themeDisplay.setLayoutTypePortlet(layoutTypePortlet);
  themeDisplay.setLifecycle(lifecycle);
  themeDisplay.setLifecycleAction(lifecycle.equals("1"));
  themeDisplay.setLifecycleEvent(lifecycle.equals("3"));
  themeDisplay.setLifecycleRender(lifecycle.equals("0"));
  themeDisplay.setLifecycleResource(lifecycle.equals("2"));
  themeDisplay.setLocale(locale);
  themeDisplay.setLookAndFeel(theme,colorScheme);
  themeDisplay.setPathApplet(contextPath.concat("/applets"));
  themeDisplay.setPathCms(contextPath.concat("/cms"));
  themeDisplay.setPathContext(contextPath);
  PortalWebResources portalWebResources=PortalWebResourcesUtil.getPortalWebResources(PortalWebResourceConstants.RESOURCE_TYPE_EDITORS);
  if (portalWebResources != null) {
    themeDisplay.setPathEditors(portalWebResources.getContextPath());
  }
  themeDisplay.setPathFlash(contextPath.concat("/flash"));
  themeDisplay.setPathFriendlyURLPrivateGroup(friendlyURLPrivateGroupPath);
  themeDisplay.setPathFriendlyURLPrivateUser(friendlyURLPrivateUserPath);
  themeDisplay.setPathFriendlyURLPublic(friendlyURLPublicPath);
  themeDisplay.setPathImage(imagePath);
  themeDisplay.setPathJavaScript(PortalWebResourcesUtil.getContextPath(PortalWebResourceConstants.RESOURCE_TYPE_JS));
  themeDisplay.setPathMain(mainPath);
  themeDisplay.setPathSound(contextPath.concat("/html/sound"));
  themeDisplay.setPermissionChecker(permissionChecker);
  themeDisplay.setPlid(plid);
  themeDisplay.setPpid(ppid);
  themeDisplay.setRealCompanyLogo(realCompanyLogo);
  themeDisplay.setRealCompanyLogoHeight(realCompanyLogoHeight);
  themeDisplay.setRealCompanyLogoWidth(realCompanyLogoWidth);
  themeDisplay.setRealUser(realUser);
  themeDisplay.setRefererGroupId(refererGroupId);
  themeDisplay.setScopeGroupId(scopeGroupId);
  themeDisplay.setSignedIn(signedIn);
  themeDisplay.setSiteDefaultLocale(PortalUtil.getSiteDefaultLocale(siteGroupId));
  themeDisplay.setSiteGroupId(siteGroupId);
  themeDisplay.setStateExclusive(LiferayWindowState.isExclusive(request));
  themeDisplay.setStateMaximized(LiferayWindowState.isMaximized(request));
  themeDisplay.setStatePopUp(LiferayWindowState.isPopUp(request));
  themeDisplay.setThemeCssFastLoad(themeCssFastLoad);
  themeDisplay.setThemeImagesFastLoad(themeImagesFastLoad);
  themeDisplay.setThemeJsBarebone(themeJsBarebone);
  themeDisplay.setThemeJsFastLoad(themeJsFastLoad);
  themeDisplay.setTimeZone(timeZone);
  themeDisplay.setUnfilteredLayouts(unfilteredLayouts);
  themeDisplay.setUser(user);
  themeDisplay.setShowAddContentIcon(false);
  boolean showControlPanelIcon=false;
  if (signedIn && PortalPermissionUtil.contains(permissionChecker,ActionKeys.VIEW_CONTROL_PANEL)) {
    showControlPanelIcon=true;
  }
  themeDisplay.setShowControlPanelIcon(showControlPanelIcon);
  themeDisplay.setShowHomeIcon(true);
  themeDisplay.setShowMyAccountIcon(signedIn);
  themeDisplay.setShowPageSettingsIcon(hasDeleteLayoutPermission);
  themeDisplay.setShowPortalIcon(true);
  themeDisplay.setShowSignInIcon(!signedIn);
  boolean showSignOutIcon=signedIn;
  if (themeDisplay.isImpersonated()) {
    showSignOutIcon=false;
  }
  themeDisplay.setShowSignOutIcon(showSignOutIcon);
  themeDisplay.setShowStagingIcon(false);
  boolean showSiteAdministrationIcon=false;
  if (signedIn && GroupPermissionUtil.contains(permissionChecker,group,ActionKeys.VIEW_SITE_ADMINISTRATION)) {
    showSiteAdministrationIcon=true;
  }
  themeDisplay.setShowSiteAdministrationIcon(showSiteAdministrationIcon);
  if (PropsValues.SESSION_ENABLE_URL_WITH_SESSION_ID && !CookieKeys.hasSessionId(request)) {
    themeDisplay.setAddSessionIdToURL(true);
    themeDisplay.setSessionId(session.getId());
  }
  String urlControlPanel=friendlyURLPrivateGroupPath.concat(GroupConstants.CONTROL_PANEL_FRIENDLY_URL);
  if (Validator.isNotNull(doAsUserId)) {
    urlControlPanel=HttpUtil.addParameter(urlControlPanel,"doAsUserId",doAsUserId);
  }
  if (refererGroupId > 0) {
    urlControlPanel=HttpUtil.addParameter(urlControlPanel,"refererGroupId",refererGroupId);
  }
 else   if (scopeGroupId > 0) {
    Layout refererLayout=LayoutLocalServiceUtil.fetchLayout(plid);
    if (refererLayout != null) {
      Group refererLayoutGroup=refererLayout.getGroup();
      if (refererLayoutGroup.isUserGroup()) {
        urlControlPanel=HttpUtil.addParameter(urlControlPanel,"refererGroupId",scopeGroupId);
      }
    }
  }
  if (refererPlid > 0) {
    urlControlPanel=HttpUtil.addParameter(urlControlPanel,"refererPlid",refererPlid);
  }
 else   if (plid > 0) {
    urlControlPanel=HttpUtil.addParameter(urlControlPanel,"refererPlid",plid);
  }
  if (themeDisplay.isAddSessionIdToURL()) {
    urlControlPanel=PortalUtil.getURLWithSessionId(urlControlPanel,session.getId());
  }
  themeDisplay.setURLControlPanel(urlControlPanel);
  String currentURL=PortalUtil.getCurrentURL(request);
  themeDisplay.setURLCurrent(currentURL);
  String urlHome=PortalUtil.getHomeURL(request);
  themeDisplay.setURLHome(urlHome);
  String siteAdministrationURL=urlControlPanel;
  siteAdministrationURL=HttpUtil.addParameter(siteAdministrationURL,"controlPanelCategory",PortletCategoryKeys.CURRENT_SITE);
  siteAdministrationURL=HttpUtil.addParameter(siteAdministrationURL,"doAsGroupId",siteGroupId);
  themeDisplay.setURLSiteAdministration(siteAdministrationURL);
  if (layout != null) {
    if (layout.isTypePortlet()) {
      boolean freeformLayout=layoutTypePortlet.getLayoutTemplateId().equals("freeform");
      themeDisplay.setFreeformLayout(freeformLayout);
      if (hasUpdateLayoutPermission) {
        themeDisplay.setShowAddContentIconPermission(true);
        if (!LiferayWindowState.isMaximized(request)) {
          themeDisplay.setShowAddContentIcon(true);
        }
        themeDisplay.setShowLayoutTemplatesIcon(true);
        if (!group.isUser()) {
          themeDisplay.setShowPageCustomizationIcon(true);
        }
        themeDisplay.setURLAddContent("Liferay.Dockbar.loadAddPanel();");
      }
      if (hasCustomizeLayoutPermission && customizedView) {
        themeDisplay.setShowAddContentIconPermission(true);
        if (!LiferayWindowState.isMaximized(request)) {
          themeDisplay.setShowAddContentIcon(true);
        }
        themeDisplay.setURLAddContent("Liferay.Dockbar.loadAddPanel();");
      }
    }
    if (hasUpdateLayoutPermission) {
      themeDisplay.setShowPageSettingsIcon(true);
      boolean site=group.isSite();
      if (!site && group.isStagingGroup()) {
        Group liveGroup=group.getLiveGroup();
        site=liveGroup.isSite();
      }
      if (site && GroupPermissionUtil.contains(permissionChecker,scopeGroupId,ActionKeys.ASSIGN_MEMBERS)) {
        themeDisplay.setShowManageSiteMembershipsIcon(true);
      }
 else {
        themeDisplay.setShowManageSiteMembershipsIcon(false);
      }
    }
    Group scopeGroup=GroupLocalServiceUtil.getGroup(scopeGroupId);
    boolean hasAddLayoutGroupPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.ADD_LAYOUT);
    boolean hasManageLayoutsGroupPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.MANAGE_LAYOUTS);
    boolean hasManageStagingPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.MANAGE_STAGING);
    boolean hasPublishStagingPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.PUBLISH_STAGING);
    boolean hasUpdateGroupPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.UPDATE);
    boolean hasViewStagingPermission=GroupPermissionUtil.contains(permissionChecker,scopeGroup,ActionKeys.VIEW_STAGING);
    if (!group.isControlPanel() && !group.isUser() && !group.isUserGroup()&& hasUpdateGroupPermission) {
      themeDisplay.setShowSiteSettingsIcon(true);
    }
    if (!group.isLayoutPrototype() && (hasAddLayoutGroupPermission || hasAddLayoutLayoutPermission || hasManageLayoutsGroupPermission|| hasUpdateGroupPermission)) {
      themeDisplay.setShowSiteMapSettingsIcon(true);
    }
    if (group.hasStagingGroup() && !group.isStagingGroup()) {
      themeDisplay.setShowAddContentIcon(false);
      themeDisplay.setShowLayoutTemplatesIcon(false);
      themeDisplay.setURLPublishToLive(null);
    }
    if (group.isControlPanel()) {
      themeDisplay.setShowPageSettingsIcon(false);
      themeDisplay.setURLPublishToLive(null);
    }
    if (group.isStaged() || group.isStagingGroup()) {
      if (hasManageStagingPermission || hasPublishStagingPermission || hasUpdateLayoutPermission|| hasViewStagingPermission) {
        themeDisplay.setShowStagingIcon(true);
      }
      if (hasPublishStagingPermission) {
        PortletURL publishToLiveURL=new PortletURLImpl(request,PortletKeys.EXPORT_IMPORT,plid,PortletRequest.RENDER_PHASE);
        publishToLiveURL.setParameter("mvcRenderCommandName","publishLayouts");
        if (layout.isPrivateLayout()) {
          publishToLiveURL.setParameter("tabs1","private-pages");
        }
 else {
          publishToLiveURL.setParameter("tabs1","public-pages");
        }
        publishToLiveURL.setParameter("groupId",String.valueOf(scopeGroupId));
        publishToLiveURL.setParameter("selPlid",String.valueOf(plid));
        publishToLiveURL.setPortletMode(PortletMode.VIEW);
        publishToLiveURL.setWindowState(LiferayWindowState.EXCLUSIVE);
        themeDisplay.setURLPublishToLive(publishToLiveURL);
      }
    }
  }
  if (!user.isActive() || (PrefsPropsUtil.getBoolean(companyId,PropsKeys.TERMS_OF_USE_REQUIRED) && !user.isAgreedToTermsOfUse())) {
    themeDisplay.setShowAddContentIcon(false);
    themeDisplay.setShowMyAccountIcon(false);
    themeDisplay.setShowPageSettingsIcon(false);
  }
  if ((layout != null) && layout.isLayoutPrototypeLinkActive()) {
    themeDisplay.setShowPageCustomizationIcon(false);
  }
  if (group.isLayoutPrototype()) {
    themeDisplay.setShowHomeIcon(false);
    themeDisplay.setShowManageSiteMembershipsIcon(false);
    themeDisplay.setShowMyAccountIcon(false);
    themeDisplay.setShowPageCustomizationIcon(false);
    themeDisplay.setShowPageSettingsIcon(true);
    themeDisplay.setShowPortalIcon(false);
    themeDisplay.setShowSignInIcon(false);
    themeDisplay.setShowSignOutIcon(false);
    themeDisplay.setShowSiteAdministrationIcon(false);
    themeDisplay.setShowSiteSettingsIcon(false);
    themeDisplay.setShowStagingIcon(false);
  }
  if (group.isLayoutSetPrototype()) {
    themeDisplay.setShowPageCustomizationIcon(false);
    themeDisplay.setShowSiteSettingsIcon(false);
  }
  if (group.hasStagingGroup() && !group.isStagingGroup()) {
    themeDisplay.setShowLayoutTemplatesIcon(false);
    themeDisplay.setShowPageCustomizationIcon(false);
    themeDisplay.setShowSiteMapSettingsIcon(false);
    themeDisplay.setShowSiteSettingsIcon(false);
  }
  themeDisplay.setURLPortal(portalURL.concat(contextPath));
  boolean secure=false;
  if (PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS || request.isSecure()) {
    secure=true;
  }
  String securePortalURL=PortalUtil.getPortalURL(request,secure);
  String urlSignIn=securePortalURL.concat(mainPath).concat(_PATH_PORTAL_LOGIN);
  if (layout != null) {
    urlSignIn=HttpUtil.addParameter(urlSignIn,"p_l_id",layout.getPlid());
  }
  themeDisplay.setURLSignIn(urlSignIn);
  themeDisplay.setURLSignOut(mainPath.concat(_PATH_PORTAL_LOGOUT));
  return themeDisplay;
}

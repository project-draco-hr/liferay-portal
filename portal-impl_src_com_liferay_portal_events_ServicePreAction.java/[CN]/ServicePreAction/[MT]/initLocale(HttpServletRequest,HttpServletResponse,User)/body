{
  if (user == null) {
    try {
      user=initUser(request);
    }
 catch (    NoSuchUserException nsue) {
      return null;
    }
  }
  HttpSession session=request.getSession();
  Locale locale=(Locale)session.getAttribute(Globals.LOCALE_KEY);
  String doAsUserLanguageId=ParamUtil.getString(request,"doAsUserLanguageId");
  if (Validator.isNotNull(doAsUserLanguageId)) {
    locale=LocaleUtil.fromLanguageId(doAsUserLanguageId);
  }
  String i18nLanguageId=(String)request.getAttribute(WebKeys.I18N_LANGUAGE_ID);
  if (Validator.isNotNull(i18nLanguageId)) {
    locale=LocaleUtil.fromLanguageId(i18nLanguageId);
  }
 else   if (locale == null) {
    if (!user.isDefaultUser()) {
      locale=user.getLocale();
    }
 else {
      String languageId=CookieKeys.getCookie(request,CookieKeys.GUEST_LANGUAGE_ID,false);
      if (Validator.isNotNull(languageId)) {
        locale=LocaleUtil.fromLanguageId(languageId);
      }
      if ((locale == null) && PropsValues.LOCALE_DEFAULT_REQUEST) {
        Enumeration<Locale> locales=request.getLocales();
        while (locales.hasMoreElements()) {
          Locale requestLocale=locales.nextElement();
          if (Validator.isNull(requestLocale.getCountry())) {
            requestLocale=LanguageUtil.getLocale(requestLocale.getLanguage());
          }
          if (LanguageUtil.isAvailableLocale(requestLocale)) {
            locale=requestLocale;
            break;
          }
        }
      }
      if (locale == null) {
        locale=user.getLocale();
      }
      if (Validator.isNull(locale.getCountry())) {
        locale=LanguageUtil.getLocale(locale.getLanguage());
      }
      if (!LanguageUtil.isAvailableLocale(locale)) {
        locale=user.getLocale();
      }
    }
    session.setAttribute(Globals.LOCALE_KEY,locale);
    LanguageUtil.updateCookie(request,response,locale);
  }
  return locale;
}

{
  if ((layouts == null) || layouts.isEmpty()) {
    return new Object[]{layout,layouts};
  }
  boolean hasUpdateLayoutPermission=false;
  if (LayoutPermissionUtil.contains(permissionChecker,layout,ActionKeys.VIEW)) {
    hasUpdateLayoutPermission=true;
  }
  List<Layout> accessibleLayouts=new ArrayList<Layout>();
  for (int i=0; i < layouts.size(); i++) {
    Layout curLayout=layouts.get(i);
    if (!curLayout.isHidden() && LayoutPermissionUtil.contains(permissionChecker,curLayout,ActionKeys.VIEW)) {
      if (accessibleLayouts.isEmpty() && !hasUpdateLayoutPermission) {
        layout=curLayout;
      }
      accessibleLayouts.add(curLayout);
    }
  }
  if (accessibleLayouts.isEmpty()) {
    layouts=null;
    if (!hasUpdateLayoutPermission) {
      SessionErrors.add(request,LayoutPermissionException.class.getName());
    }
  }
 else {
    layouts=accessibleLayouts;
  }
  return new Object[]{layout,layouts};
}

{
  if (user.hasPrivateLayouts()) {
    return;
  }
  Group userGroup=user.getGroup();
  String privateLARName=PropsUtil.get(PropsUtil.DEFAULT_USER_PRIVATE_LAYOUT_LAR);
  boolean doDefaultPrivateLayout=true;
  if (Validator.isNotNull(privateLARName)) {
    try {
      File privateLAR=new File(privateLARName);
      _importLayouts(user.getUserId(),userGroup.getGroupId(),true,privateLAR);
      doDefaultPrivateLayout=false;
    }
 catch (    Exception e) {
      _log.debug("addDefaultLayouts for {" + privateLARName + "}",e);
    }
  }
  if (doDefaultPrivateLayout) {
    String name=PropsUtil.get(PropsUtil.DEFAULT_USER_LAYOUT_NAME);
    Layout layout=LayoutLocalServiceUtil.addLayout(user.getUserId(),userGroup.getGroupId(),true,LayoutImpl.DEFAULT_PARENT_LAYOUT_ID,name,StringPool.BLANK,StringPool.BLANK,LayoutImpl.TYPE_PORTLET,false,StringPool.BLANK);
    LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
    String layoutTemplateId=PropsUtil.get(PropsUtil.DEFAULT_USER_LAYOUT_TEMPLATE_ID);
    layoutTypePortlet.setLayoutTemplateId(0,layoutTemplateId,false);
    for (int i=0; i < 10; i++) {
      String columnId="column-" + i;
      String portletIds=PropsUtil.get(PropsUtil.DEFAULT_USER_LAYOUT_COLUMN + i);
      String[] portletIdsArray=StringUtil.split(portletIds);
      layoutTypePortlet.addPortletIds(0,portletIdsArray,columnId,false);
    }
    LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getTypeSettings());
  }
  String publicLARName=PropsUtil.get(PropsUtil.DEFAULT_USER_PUBLIC_LAYOUT_LAR);
  if (Validator.isNotNull(publicLARName)) {
    try {
      File publicLAR=new File(publicLARName);
      _importLayouts(user.getUserId(),userGroup.getGroupId(),false,publicLAR);
    }
 catch (    Exception e) {
      _log.debug("addDefaultLayouts for {" + publicLARName + "}",e);
    }
  }
}

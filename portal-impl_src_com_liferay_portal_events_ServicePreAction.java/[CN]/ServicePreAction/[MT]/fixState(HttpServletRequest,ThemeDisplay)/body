{
  String requestURI=GetterUtil.getString(req.getRequestURI());
  if (!requestURI.endsWith("/portal/layout")) {
    return;
  }
  Layout layout=themeDisplay.getLayout();
  if ((layout == null) || (!layout.getType().equals(LayoutImpl.TYPE_PORTLET))) {
    return;
  }
  LayoutTypePortlet layoutTypePortlet=themeDisplay.getLayoutTypePortlet();
  String stateMaxPrevious=layoutTypePortlet.getStateMaxPrevious();
  if (stateMaxPrevious != null && !themeDisplay.isStatePopUp()) {
    layoutTypePortlet.removeStateMaxPrevious();
    if (stateMaxPrevious.equals(StringPool.BLANK)) {
      layoutTypePortlet.setStateMax(StringPool.BLANK);
    }
 else {
      layoutTypePortlet.setStateMax(stateMaxPrevious);
    }
    if (!layout.isShared()) {
      LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),layout.getTypeSettings());
    }
  }
  if (layoutTypePortlet.hasStateMax()) {
    String portletId=StringUtil.split(layoutTypePortlet.getStateMax())[0];
    boolean removeStateMax=false;
    if (!GetterUtil.getBoolean(PropsUtil.get(PropsUtil.LAYOUT_REMEMBER_REQUEST_WINDOW_STATE_MAXIMIZED)) && Validator.isNotNull(portletId)) {
      removeStateMax=true;
    }
    if (!layoutTypePortlet.hasPortletId(portletId)) {
      removeStateMax=true;
    }
    if (removeStateMax) {
      String ppState=ParamUtil.getString(req,"p_p_state");
      if (Validator.isNull(ppState) || ppState.equals(WindowState.NORMAL.toString())) {
        layoutTypePortlet.removeStateMaxPortletId(portletId);
        String typeSettings=layout.getTypeSettings();
        if (!layout.isShared()) {
          LayoutLocalServiceUtil.updateLayout(layout.getGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),typeSettings);
        }
      }
    }
  }
}

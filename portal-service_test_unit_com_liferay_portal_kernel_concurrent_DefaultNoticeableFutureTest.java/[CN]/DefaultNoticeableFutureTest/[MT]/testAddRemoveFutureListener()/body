{
  try {
    defaultNoticeableFuture.addFutureListener(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Future listener is null",npe.getMessage());
  }
  try {
    defaultNoticeableFuture.removeFutureListener(null);
    Assert.fail();
  }
 catch (  NullPointerException npe) {
    Assert.assertEquals("Future listener is null",npe.getMessage());
  }
  Object futureListeners=ReflectionTestUtil.getFieldValue(defaultNoticeableFuture,"_futureListeners");
  Assert.assertEquals(0,futureListeners.hashCode());
  RecordedFutureListener<Object> recordedFutureListener1=new RecordedFutureListener<Object>();
  Assert.assertTrue(defaultNoticeableFuture.addFutureListener(recordedFutureListener1));
  Assert.assertEquals(recordedFutureListener1.hashCode(),futureListeners.hashCode());
  RecordedFutureListener<Object> recordedFutureListener2=new RecordedFutureListener<Object>();
  Assert.assertTrue(defaultNoticeableFuture.addFutureListener(recordedFutureListener2));
  Assert.assertEquals(recordedFutureListener1.hashCode() + recordedFutureListener2.hashCode(),futureListeners.hashCode());
  Assert.assertFalse(defaultNoticeableFuture.addFutureListener(recordedFutureListener1));
  Assert.assertFalse(defaultNoticeableFuture.addFutureListener(recordedFutureListener2));
  Assert.assertTrue(defaultNoticeableFuture.removeFutureListener(recordedFutureListener1));
  Assert.assertFalse(defaultNoticeableFuture.removeFutureListener(recordedFutureListener1));
  Assert.assertTrue(defaultNoticeableFuture.removeFutureListener(recordedFutureListener2));
  Assert.assertFalse(defaultNoticeableFuture.removeFutureListener(recordedFutureListener2));
}

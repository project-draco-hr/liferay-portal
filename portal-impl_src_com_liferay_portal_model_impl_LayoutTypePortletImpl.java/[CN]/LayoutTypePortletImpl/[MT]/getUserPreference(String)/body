{
  String value=StringPool.BLANK;
  if (!hasUserPreferences()) {
    return value;
  }
  value=_portalPreferences.getValue(CustomizedPages.namespacePlid(getPlid()),key,StringPool.NULL);
  if (!value.equals(StringPool.NULL)) {
    return value;
  }
  value=getTypeSettingsProperty(key);
  if (Validator.isNull(value)) {
    return value;
  }
  List<String> newPortletIds=new ArrayList<String>();
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  String[] portletIds=StringUtil.split(value);
  for (  String portletId : portletIds) {
    try {
      String rootPortletId=PortletConstants.getRootPortletId(portletId);
      if (!PortletPermissionUtil.contains(permissionChecker,rootPortletId,ActionKeys.ADD_TO_PAGE)) {
        continue;
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    String newPortletId=null;
    if (PortletConstants.hasInstanceId(portletId)) {
      newPortletId=PortletConstants.assemblePortletId(portletId,_portalPreferences.getUserId(),generateInstanceId());
      copyPreferences(_portalPreferences.getUserId(),portletId,newPortletId);
    }
 else {
      newPortletId=portletId;
    }
    newPortletIds.add(newPortletId);
  }
  value=StringUtil.merge(newPortletIds);
  setUserPreference(key,value);
  return value;
}

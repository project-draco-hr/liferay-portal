{
  try {
    Portlet portlet=PortletLocalServiceUtil.getPortletById(getCompanyId(),portletId);
    if (portlet == null) {
      _log.error("Portlet " + portletId + " cannot be removed because it is not registered");
      return;
    }
    PortletInstanceFactoryUtil.delete(portlet);
    PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
    if (!LayoutPermissionUtil.contains(permissionChecker,getLayout(),ActionKeys.UPDATE) && !isCustomizable()) {
      return;
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  List<String> columns=getColumns();
  for (int i=0; i < columns.size(); i++) {
    String columnId=columns.get(i);
    if (isCustomizable() && isColumnDisabled(columnId)) {
      continue;
    }
    String columnValue=StringPool.BLANK;
    if (hasUserPreferences()) {
      columnValue=getUserPreference(columnId);
    }
 else {
      columnValue=getTypeSettingsProperty(columnId);
    }
    columnValue=StringUtil.remove(columnValue,portletId);
    if (hasUserPreferences()) {
      setUserPreference(columnId,columnValue);
      try {
        String rootPortletId=PortletConstants.getRootPortletId(portletId);
        ResourceLocalServiceUtil.deleteResource(getCompanyId(),rootPortletId,ResourceConstants.SCOPE_INDIVIDUAL,PortletPermissionUtil.getPrimaryKey(getPlid(),portletId));
      }
 catch (      Exception e) {
      }
    }
 else {
      setTypeSettingsProperty(columnId,columnValue);
    }
  }
  if (cleanUp) {
    removeStatesPortletId(portletId);
    removeModesPortletId(portletId);
    try {
      onRemoveFromLayout(portletId);
    }
 catch (    Exception e) {
      _log.error("Unable to fire portlet layout listener event",e);
    }
  }
}

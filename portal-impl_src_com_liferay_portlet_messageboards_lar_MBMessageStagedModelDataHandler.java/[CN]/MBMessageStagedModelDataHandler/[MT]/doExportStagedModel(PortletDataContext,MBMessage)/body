{
  if ((message.getStatus() != WorkflowConstants.STATUS_APPROVED) || (message.getCategoryId() == MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {
    return;
  }
  StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,message.getCategory());
  Element messageElement=portletDataContext.getExportDataStagedModelElement(message);
  message.setPriority(message.getPriority());
  MBThread thread=message.getThread();
  messageElement.addAttribute("question",String.valueOf(thread.isQuestion()));
  boolean hasAttachmentsFileEntries=message.getAttachmentsFileEntriesCount() > 0;
  messageElement.addAttribute("hasAttachmentsFileEntries",String.valueOf(hasAttachmentsFileEntries));
  if (portletDataContext.getBooleanParameter(MBPortletDataHandler.NAMESPACE,"attachments") && hasAttachmentsFileEntries) {
    for (    FileEntry fileEntry : message.getAttachmentsFileEntries()) {
      String name=fileEntry.getTitle();
      String binPath=ExportImportPathUtil.getModelPath(message,name);
      Element attachmentElement=messageElement.addElement("attachment");
      attachmentElement.addAttribute("name",name);
      attachmentElement.addAttribute("bin-path",binPath);
      portletDataContext.addZipEntry(binPath,fileEntry.getContentStream());
    }
    long folderId=message.getAttachmentsFolderId();
    if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      message.setAttachmentsFolderId(folderId);
    }
  }
  portletDataContext.addClassedModel(messageElement,ExportImportPathUtil.getModelPath(message),message,MBPortletDataHandler.NAMESPACE);
}

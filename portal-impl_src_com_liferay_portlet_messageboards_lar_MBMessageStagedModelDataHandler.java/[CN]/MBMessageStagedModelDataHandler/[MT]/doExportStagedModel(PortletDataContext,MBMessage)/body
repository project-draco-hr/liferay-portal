{
  if (message.isDiscussion()) {
    MBDiscussion discussion=MBDiscussionLocalServiceUtil.getDiscussion(message.getClassName(),message.getClassPK());
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,message,discussion,PortletDataContext.REFERENCE_TYPE_PARENT);
    List<RatingsEntry> ratingsEntries=RatingsEntryLocalServiceUtil.getEntries(MBDiscussion.class.getName(),message.getMessageId());
    for (    RatingsEntry ratingsEntry : ratingsEntries) {
      StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,message,ratingsEntry,PortletDataContext.REFERENCE_TYPE_WEAK);
    }
  }
 else   if (message.getCategoryId() != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,message,message.getCategory(),PortletDataContext.REFERENCE_TYPE_PARENT);
  }
  if (!message.isRoot()) {
    MBMessage parentMessage=MBMessageLocalServiceUtil.getMessage(message.getParentMessageId());
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,message,parentMessage,PortletDataContext.REFERENCE_TYPE_PARENT);
  }
  message.setPriority(message.getPriority());
  MBThread thread=message.getThread();
  Element messageElement=portletDataContext.getExportDataElement(message);
  messageElement.addAttribute("question",String.valueOf(thread.isQuestion()));
  boolean hasAttachmentsFileEntries=message.getAttachmentsFileEntriesCount() > 0;
  messageElement.addAttribute("hasAttachmentsFileEntries",String.valueOf(hasAttachmentsFileEntries));
  if (hasAttachmentsFileEntries) {
    for (    FileEntry fileEntry : message.getAttachmentsFileEntries()) {
      StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,message,fileEntry,PortletDataContext.REFERENCE_TYPE_WEAK);
    }
    long folderId=message.getAttachmentsFolderId();
    if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      message.setAttachmentsFolderId(folderId);
    }
  }
  portletDataContext.addClassedModel(messageElement,ExportImportPathUtil.getModelPath(message),message);
}

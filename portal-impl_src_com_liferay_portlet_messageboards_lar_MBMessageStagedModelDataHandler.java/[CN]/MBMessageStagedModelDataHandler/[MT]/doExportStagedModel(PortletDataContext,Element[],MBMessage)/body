{
  Element messagesElement=elements[0];
  Element categoriesElement=elements[1];
  if ((message.getStatus() != WorkflowConstants.STATUS_APPROVED) || (message.getCategoryId() == MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {
    return;
  }
  StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,categoriesElement,message.getCategory());
  Element messageElement=messagesElement.addElement("message");
  message.setPriority(message.getPriority());
  MBThread thread=message.getThread();
  messageElement.addAttribute("question",String.valueOf(thread.isQuestion()));
  boolean hasAttachmentsFileEntries=message.getAttachmentsFileEntriesCount() > 0;
  messageElement.addAttribute("hasAttachmentsFileEntries",String.valueOf(hasAttachmentsFileEntries));
  if (portletDataContext.getBooleanParameter(MBPortletDataHandler.NAMESPACE,"attachments") && hasAttachmentsFileEntries) {
    for (    FileEntry fileEntry : message.getAttachmentsFileEntries()) {
      String name=fileEntry.getTitle();
      String binPath=StagedModelPathUtil.getPath(message,name);
      Element attachmentElement=messageElement.addElement("attachment");
      attachmentElement.addAttribute("name",name);
      attachmentElement.addAttribute("bin-path",binPath);
      portletDataContext.addZipEntry(binPath,fileEntry.getContentStream());
    }
    message.setAttachmentsFolderId(message.getAttachmentsFolderId());
  }
  portletDataContext.addClassedModel(messageElement,StagedModelPathUtil.getPath(message),message,MBPortletDataHandler.NAMESPACE);
}

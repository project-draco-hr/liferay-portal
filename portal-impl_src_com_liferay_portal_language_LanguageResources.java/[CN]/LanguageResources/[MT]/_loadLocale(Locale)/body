{
  String[] names=StringUtil.split(_config.replace(StringPool.PERIOD,StringPool.SLASH));
  Map<String,String> languageMap=null;
  if (names.length > 0) {
    String localeName=locale.toString();
    languageMap=new HashMap<String,String>();
    for (    String name : names) {
      StringBundler sb=new StringBundler(4);
      sb.append(name);
      if (localeName.length() > 0) {
        sb.append(StringPool.UNDERLINE);
        sb.append(localeName);
      }
      sb.append(".properties");
      Properties properties=_loadProperties(sb.toString());
      for (      Map.Entry<Object,Object> entry : properties.entrySet()) {
        String key=(String)entry.getKey();
        String value=(String)entry.getValue();
        try {
          value=new String(value.getBytes(StringPool.ISO_8859_1),StringPool.UTF8);
        }
 catch (        UnsupportedEncodingException uee) {
          _log.error(uee,uee);
        }
        if (value.endsWith(LangBuilder.AUTOMATIC_COPY)) {
          value=value.substring(0,value.length() - LangBuilder.AUTOMATIC_COPY.length());
        }
        if (value.endsWith(LangBuilder.AUTOMATIC_TRANSLATION)) {
          value=value.substring(0,value.length() - LangBuilder.AUTOMATIC_TRANSLATION.length());
        }
        languageMap.put(key,value);
      }
    }
  }
 else {
    languageMap=Collections.EMPTY_MAP;
  }
  _languageMaps.put(locale,languageMap);
  return languageMap;
}

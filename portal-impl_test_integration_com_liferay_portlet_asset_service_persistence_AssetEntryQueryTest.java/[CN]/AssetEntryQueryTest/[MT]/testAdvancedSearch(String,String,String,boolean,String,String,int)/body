{
  ThreadLocalCache<Object[]> threadLocalCache=ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST,AssetEntryServiceImpl.class.getName());
  threadLocalCache.removeAll();
  User user=TestPropsValues.getUser();
  AssetEntryQuery assetEntryQuery=buildAssetEntryQueryWithAdvancedSearch(_group.getGroupId(),isAndOperator,searchTitle,searchDescription,searchUserName);
  int initialEntries=AssetEntryServiceUtil.getEntriesCount(assetEntryQuery);
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId());
  BlogsEntry entry1=BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(),StringUtil.randomString(),StringPool.BLANK,StringUtil.randomString(),"This is a blog entry for testing purposes",1,1,1965,0,0,true,true,null,null,null,serviceContext);
  BlogsEntry entry2=BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(),title,StringPool.BLANK,description,"This is a blog entry for testing purposes",1,1,1965,0,0,true,true,null,null,null,serviceContext);
  threadLocalCache.removeAll();
  int entriesCount=AssetEntryServiceUtil.getEntriesCount(assetEntryQuery);
  Assert.assertEquals(initialEntries + expectedResults,entriesCount);
  BlogsEntryLocalServiceUtil.deleteEntry(entry1);
  BlogsEntryLocalServiceUtil.deleteEntry(entry2);
}

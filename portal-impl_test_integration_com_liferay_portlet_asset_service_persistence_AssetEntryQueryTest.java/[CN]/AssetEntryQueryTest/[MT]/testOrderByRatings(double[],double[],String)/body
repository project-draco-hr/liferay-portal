{
  ThreadLocalCache<Object[]> threadLocalCache=ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST,AssetEntryServiceImpl.class.getName());
  threadLocalCache.removeAll();
  for (int i=0; i < scores.length; i++) {
    BlogsEntry entry=BlogsTestUtil.addEntry(_group,true);
    RatingsEntryServiceUtil.updateEntry(BlogsEntry.class.getName(),entry.getEntryId(),scores[i]);
  }
  threadLocalCache.removeAll();
  AssetEntryQuery assetEntryQuery=buildAssetEntryQuery(_group.getGroupId(),null,null,false,false);
  assetEntryQuery.setOrderByCol1("ratings");
  assetEntryQuery.setOrderByType1(orderByType);
  List<AssetEntry> assetEntries=AssetEntryServiceUtil.getEntries(assetEntryQuery);
  for (int i=0; i < assetEntries.size(); i++) {
    AssetEntry assetEntry=assetEntries.get(i);
    RatingsStats ratingsStats=RatingsStatsLocalServiceUtil.getStats(assetEntry.getClassName(),assetEntry.getClassPK());
    Assert.assertEquals(ratingsStats.getAverageScore(),orderedScores[i],0);
  }
}

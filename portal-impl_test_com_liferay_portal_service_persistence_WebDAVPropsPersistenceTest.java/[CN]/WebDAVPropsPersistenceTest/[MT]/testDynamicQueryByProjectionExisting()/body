{
  WebDAVProps newWebDAVProps=addWebDAVProps();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(WebDAVProps.class,WebDAVProps.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("webDavPropsId"));
  Object newWebDavPropsId=newWebDAVProps.getWebDavPropsId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("webDavPropsId",new Object[]{newWebDavPropsId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingWebDavPropsId=result.get(0);
  assertEquals(existingWebDavPropsId,newWebDavPropsId);
}

{
  long pk=nextLong();
  WebDAVProps newWebDAVProps=_persistence.create(pk);
  newWebDAVProps.setCompanyId(nextLong());
  newWebDAVProps.setCreateDate(nextDate());
  newWebDAVProps.setModifiedDate(nextDate());
  newWebDAVProps.setClassNameId(nextLong());
  newWebDAVProps.setClassPK(nextLong());
  newWebDAVProps.setProps(randomString());
  _persistence.update(newWebDAVProps,false);
  WebDAVProps existingWebDAVProps=_persistence.findByPrimaryKey(newWebDAVProps.getPrimaryKey());
  assertEquals(existingWebDAVProps.getWebDavPropsId(),newWebDAVProps.getWebDavPropsId());
  assertEquals(existingWebDAVProps.getCompanyId(),newWebDAVProps.getCompanyId());
  assertEquals(existingWebDAVProps.getCreateDate(),newWebDAVProps.getCreateDate());
  assertEquals(existingWebDAVProps.getModifiedDate(),newWebDAVProps.getModifiedDate());
  assertEquals(existingWebDAVProps.getClassNameId(),newWebDAVProps.getClassNameId());
  assertEquals(existingWebDAVProps.getClassPK(),newWebDAVProps.getClassPK());
  assertEquals(existingWebDAVProps.getProps(),newWebDAVProps.getProps());
}

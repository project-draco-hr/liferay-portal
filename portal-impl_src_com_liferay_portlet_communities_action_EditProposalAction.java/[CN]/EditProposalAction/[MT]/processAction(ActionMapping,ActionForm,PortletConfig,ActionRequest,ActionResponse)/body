{
  try {
    checkPermissions(req);
  }
 catch (  PrincipalException pe) {
    return;
  }
  String cmd=ParamUtil.getString(req,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateProposal(req,res);
    }
 else     if (cmd.equals(Constants.APPROVE)) {
      approveReview(req);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteProposal(req);
    }
 else     if (cmd.equals(Constants.PUBLISH)) {
      publishProposal(req);
    }
 else     if (cmd.equals(Constants.REJECT)) {
      rejectReview(req);
    }
    String redirect=ParamUtil.getString(req,"redirect");
    String pagesRedirect=ParamUtil.getString(req,"pagesRedirect");
    if (Validator.isNotNull(pagesRedirect)) {
      redirect=pagesRedirect;
    }
    sendRedirect(req,res,redirect);
  }
 catch (  Exception e) {
    if (e instanceof NoSuchProposalException || e instanceof PrincipalException) {
      SessionErrors.add(req,e.getClass().getName());
      setForward(req,"portlet.communities.error");
    }
 else     if (e instanceof DuplicateReviewUserIdException || e instanceof ProposalDueDateException || e instanceof ProposalPublishDateException) {
      SessionErrors.add(req,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

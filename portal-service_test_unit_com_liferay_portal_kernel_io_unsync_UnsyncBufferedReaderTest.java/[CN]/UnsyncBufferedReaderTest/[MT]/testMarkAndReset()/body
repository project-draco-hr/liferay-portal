{
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new StringReader("abcdefghi"),5);
  assertEquals(-1,unsyncBufferedReader.markLimitIndex);
  unsyncBufferedReader.mark(0);
  assertEquals(-1,unsyncBufferedReader.markLimitIndex);
  try {
    unsyncBufferedReader.mark(-2);
    fail();
  }
 catch (  IllegalArgumentException iae) {
  }
  assertEquals(-1,unsyncBufferedReader.markLimitIndex);
  int markLimit=3;
  unsyncBufferedReader.mark(markLimit);
  assertEquals(markLimit,unsyncBufferedReader.markLimitIndex);
  assertEquals(0,unsyncBufferedReader.index);
  assertEquals('a',unsyncBufferedReader.read());
  assertEquals('b',unsyncBufferedReader.read());
  assertEquals('c',unsyncBufferedReader.read());
  assertEquals(3,unsyncBufferedReader.index);
  unsyncBufferedReader.reset();
  assertEquals(0,unsyncBufferedReader.index);
  assertEquals('a',unsyncBufferedReader.read());
  assertEquals('b',unsyncBufferedReader.read());
  assertEquals('c',unsyncBufferedReader.read());
  assertEquals(3,unsyncBufferedReader.index);
  unsyncBufferedReader=new UnsyncBufferedReader(new StringReader("abcdefghi"),5);
  assertEquals(-1,unsyncBufferedReader.markLimitIndex);
  unsyncBufferedReader.mark(markLimit);
  assertEquals(markLimit,unsyncBufferedReader.markLimitIndex);
  assertEquals('a',unsyncBufferedReader.read());
  assertEquals('b',unsyncBufferedReader.read());
  assertEquals('c',unsyncBufferedReader.read());
  assertEquals('d',unsyncBufferedReader.read());
  assertEquals('e',unsyncBufferedReader.read());
  assertEquals('f',unsyncBufferedReader.read());
  assertEquals(1,unsyncBufferedReader.index);
  assertEquals(-1,unsyncBufferedReader.markLimitIndex);
  try {
    unsyncBufferedReader.reset();
    fail();
  }
 catch (  IOException ioe) {
  }
  unsyncBufferedReader=new UnsyncBufferedReader(new StringReader("abcdefghi"),5);
  assertEquals('a',unsyncBufferedReader.read());
  assertEquals('b',unsyncBufferedReader.read());
  assertEquals('c',unsyncBufferedReader.read());
  assertEquals(3,unsyncBufferedReader.index);
  unsyncBufferedReader.mark(markLimit);
  assertEquals(0,unsyncBufferedReader.index);
  assertEquals('d',unsyncBufferedReader.read());
  assertEquals('e',unsyncBufferedReader.read());
  assertEquals('f',unsyncBufferedReader.read());
  unsyncBufferedReader=new UnsyncBufferedReader(new StringReader(new String(_BUFFER)),_SIZE);
  char[] tempBuffer=new char[_SIZE / 2];
  assertEquals(_SIZE / 2,unsyncBufferedReader.read(tempBuffer));
  assertEquals(_SIZE / 2,unsyncBufferedReader.read(tempBuffer));
  assertEquals(_SIZE,unsyncBufferedReader.index);
  assertEquals(_SIZE,unsyncBufferedReader.firstInvalidIndex);
  unsyncBufferedReader.mark(markLimit);
  assertEquals(0,unsyncBufferedReader.index);
  assertEquals(0,unsyncBufferedReader.firstInvalidIndex);
}

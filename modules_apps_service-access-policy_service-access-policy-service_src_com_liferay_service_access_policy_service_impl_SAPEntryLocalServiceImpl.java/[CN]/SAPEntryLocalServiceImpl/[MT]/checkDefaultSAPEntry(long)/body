{
  SAPConfiguration sapConfiguration=configurationFactory.getConfiguration(SAPConfiguration.class,new CompanyServiceSettingsLocator(companyId,SAPConstants.SERVICE_NAME));
  SAPEntry applicationSAPEntry=sapEntryPersistence.fetchByC_N(companyId,sapConfiguration.defaultApplicationSAPEntryName());
  SAPEntry userSAPEntry=sapEntryPersistence.fetchByC_N(companyId,sapConfiguration.defaultUserSAPEntryName());
  if ((applicationSAPEntry != null) && (userSAPEntry != null)) {
    return;
  }
  long defaultUserId=userLocalService.getDefaultUserId(companyId);
  Role guestRole=roleLocalService.getRole(companyId,RoleConstants.GUEST);
  if (applicationSAPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sapConfiguration.defaultApplicationSAPEntryDescription());
    applicationSAPEntry=addSAPEntry(defaultUserId,sapConfiguration.defaultApplicationSAPEntryServiceSignatures(),true,sapConfiguration.defaultApplicationSAPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(applicationSAPEntry.getCompanyId(),SAPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(applicationSAPEntry.getSapEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
  if (userSAPEntry == null) {
    Map<Locale,String> titleMap=new HashMap<>();
    titleMap.put(LocaleUtil.getDefault(),sapConfiguration.defaultUserSAPEntryDescription());
    userSAPEntry=addSAPEntry(defaultUserId,sapConfiguration.defaultUserSAPEntryServiceSignatures(),true,sapConfiguration.defaultUserSAPEntryName(),titleMap,new ServiceContext());
    resourcePermissionLocalService.setResourcePermissions(userSAPEntry.getCompanyId(),SAPEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(userSAPEntry.getSapEntryId()),guestRole.getRoleId(),new String[]{ActionKeys.VIEW});
  }
}

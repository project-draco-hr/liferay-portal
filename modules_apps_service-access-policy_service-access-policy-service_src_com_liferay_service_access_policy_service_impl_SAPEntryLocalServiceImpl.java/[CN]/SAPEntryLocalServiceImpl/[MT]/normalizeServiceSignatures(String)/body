{
  String[] serviceSignaturesArray=serviceSignatures.split(StringPool.NEW_LINE);
  Set<String> sortedServiceSignatures=new TreeSet<>();
  for (  String serviceSignature : serviceSignaturesArray) {
    String[] serviceSignatureArray=serviceSignature.split(StringPool.POUND);
    StringBundler sb=new StringBundler(serviceSignatureArray.length * 2);
    boolean empty=true;
    for (int i=0; i < serviceSignatureArray.length; i++) {
      serviceSignatureArray[i]=StringUtil.trim(serviceSignatureArray[i]);
      if (serviceSignatureArray[i].length() > 0) {
        empty=false;
      }
      sb.append(serviceSignatureArray[i]);
      sb.append(StringPool.POUND);
    }
    if (!empty) {
      sb.setIndex(sb.index() - 1);
      sortedServiceSignatures.add(sb.toString());
    }
  }
  StringBundler sb=new StringBundler(sortedServiceSignatures.size() * 2);
  for (  String sortedServiceSignature : sortedServiceSignatures) {
    sb.append(sortedServiceSignature);
    sb.append(StringPool.NEW_LINE);
  }
  if (sb.index() > 0) {
    sb.setIndex(sb.index() - 1);
  }
  return sb.toString();
}

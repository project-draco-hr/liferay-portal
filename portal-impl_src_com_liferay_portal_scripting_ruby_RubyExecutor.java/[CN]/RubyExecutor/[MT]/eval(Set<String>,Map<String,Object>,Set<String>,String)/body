{
  if (allowedClasses != null) {
    throw new ExecutionException("Constrained execution not supported for Ruby");
  }
  try {
    GlobalVariables globalVariables=_runtime.getGlobalVariables();
    for (    final String varName : inputObjects.keySet()) {
      String rubyVarName=varName;
      if (!rubyVarName.startsWith("$")) {
        rubyVarName="$" + rubyVarName;
      }
      BeanGlobalVariable rubyVarValue=new BeanGlobalVariable(_runtime,inputObjects.get(varName),inputObjects.get(varName).getClass());
      globalVariables.define(rubyVarName,rubyVarValue);
    }
    _runtime.evalScriptlet(script);
    if (outputNames == null) {
      return null;
    }
    Map<String,Object> outputObjects=new HashMap<String,Object>();
    for (    String outputName : outputNames) {
      outputObjects.put(outputName,globalVariables.get(outputName));
    }
    return outputObjects;
  }
 catch (  RaiseException re) {
    StringBuilder sb=new StringBuilder();
    sb.append(re.getException().message.asJavaString());
    sb.append("\n\n");
    throw new ScriptingException(sb.toString(),re);
  }
 finally {
    JavaEmbedUtils.terminate(_runtime);
  }
}

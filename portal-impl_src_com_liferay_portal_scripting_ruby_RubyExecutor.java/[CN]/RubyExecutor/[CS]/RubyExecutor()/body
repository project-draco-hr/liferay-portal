{
  initScriptingExecutorClassLoader();
  org.jruby.embed.ScriptingContainer scriptingContainer=new org.jruby.embed.ScriptingContainer(LocalContextScope.THREADSAFE);
  _scriptingContainer=new RubyScriptingContainer(scriptingContainer);
  LocalContextProvider localContextProvider=scriptingContainer.getProvider();
  RubyInstanceConfig rubyInstanceConfig=localContextProvider.getRubyInstanceConfig();
  if (PropsValues.SCRIPTING_JRUBY_COMPILE_MODE.equals(_COMPILE_MODE_FORCE)) {
    rubyInstanceConfig.setCompileMode(CompileMode.FORCE);
  }
 else   if (PropsValues.SCRIPTING_JRUBY_COMPILE_MODE.equals(_COMPILE_MODE_JIT)) {
    rubyInstanceConfig.setCompileMode(CompileMode.JIT);
  }
  rubyInstanceConfig.setJitThreshold(PropsValues.SCRIPTING_JRUBY_COMPILE_THRESHOLD);
  rubyInstanceConfig.setLoader(ClassLoaderUtil.getPortalClassLoader());
  _basePath=PropsValues.LIFERAY_LIB_PORTAL_DIR;
  _loadPaths=new ArrayList<>(PropsValues.SCRIPTING_JRUBY_LOAD_PATHS.length);
  for (  String gemLibPath : PropsValues.SCRIPTING_JRUBY_LOAD_PATHS) {
    _loadPaths.add(gemLibPath);
  }
  rubyInstanceConfig.setLoadPaths(_loadPaths);
  scriptingContainer.setCurrentDirectory(_basePath);
}

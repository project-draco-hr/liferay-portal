{
  boolean aligned=false;
  int i=difference.getDeletedStart();
  int j=difference.getAddedStart();
  for (; i <= difference.getDeletedEnd(); i++) {
    for (; j <= difference.getAddedEnd(); j++) {
      if (_lineDiff(sourceStringList,targetStringList,addedMarkerStart,addedMarkerEnd,deletedMarkerStart,deletedMarkerEnd,i,j,false,results)) {
        aligned=true;
        break;
      }
 else {
        _highlight(targetStringList,j,j,addedMarkerStart,addedMarkerEnd);
        DiffResult diffResult=new DiffResult(DiffResult.TARGET,j,targetStringList.subList(j,j + 1));
        results.add(diffResult);
      }
    }
    if (aligned) {
      break;
    }
 else {
      _highlight(sourceStringList,i,i,deletedMarkerStart,deletedMarkerEnd);
      DiffResult diffResult=new DiffResult(DiffResult.SOURCE,i,sourceStringList.subList(i,i + 1));
      results.add(diffResult);
    }
  }
  i=i + 1;
  j=j + 1;
  for (; i <= difference.getDeletedEnd() && j <= difference.getAddedEnd(); i++, j++) {
    _lineDiff(sourceStringList,targetStringList,addedMarkerStart,addedMarkerEnd,deletedMarkerStart,deletedMarkerEnd,i,j,true,results);
  }
  for (; i <= difference.getDeletedEnd(); i++) {
    _highlight(sourceStringList,i,i,deletedMarkerStart,deletedMarkerEnd);
    DiffResult diffResult=new DiffResult(DiffResult.SOURCE,i,sourceStringList.subList(i,i + 1));
    results.add(diffResult);
  }
  for (; j <= difference.getAddedEnd(); j++) {
    _highlight(targetStringList,j,j,addedMarkerStart,addedMarkerEnd);
    DiffResult diffResult=new DiffResult(DiffResult.TARGET,j,targetStringList.subList(j,j + 1));
    results.add(diffResult);
  }
}

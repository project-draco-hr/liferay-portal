{
  String spiProviderName=spiProvider.getName();
  boolean result=false;
  _registerLock.lock();
  try {
    result=_spiProviderMap.remove(spiProviderName,spiProvider);
    if (result) {
      for (      Map.Entry<SPIKey,SPI> entry : _spiMap.entrySet()) {
        SPIKey spiKey=entry.getKey();
        if (spiKey._spiProviderName.equals(spiProviderName)) {
          SPI spi=entry.getValue();
          try {
            spi.destroy();
            if (_log.isInfoEnabled()) {
              _log.info("Cascaded unregistered SPI " + spi + " with key "+ spiKey);
            }
          }
 catch (          RemoteException re) {
            _log.error("Failed cascaded unregister SPI " + spi + " with key "+ spiKey,re);
          }
        }
      }
      if (_log.isInfoEnabled()) {
        _log.info("Unregistered SPIProvider " + spiProvider + " with name "+ spiProviderName);
      }
    }
 else     if (_log.isWarnEnabled()) {
      _log.warn("Unable to unregister SPIProvider " + spiProvider + " with name "+ spiProviderName+ ". It is not registered");
    }
  }
  finally {
    _registerLock.unlock();
  }
  return result;
}

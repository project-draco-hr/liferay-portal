{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  long groupId=ParamUtil.getLong(actionRequest,"groupId");
  long ddmStructureId=ParamUtil.getLong(actionRequest,"ddmStructureId");
  String recordSetKey=ParamUtil.getString(actionRequest,"recordSetKey");
  boolean autoRecordSetKey=ParamUtil.getBoolean(actionRequest,"autoRecordSetKey");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DDLRecordSet.class.getName(),actionRequest);
  DDLRecordSet recordSet=null;
  if (cmd.equals(Constants.ADD)) {
    recordSet=DDLRecordSetServiceUtil.addRecordSet(groupId,ddmStructureId,recordSetKey,autoRecordSetKey,nameMap,descriptionMap,DDLConstants.MIN_DISPLAY_ROWS_DEFAULT,serviceContext);
  }
 else {
    recordSet=DDLRecordSetServiceUtil.updateRecordSet(groupId,ddmStructureId,recordSetKey,nameMap,descriptionMap,DDLConstants.MIN_DISPLAY_ROWS_DEFAULT,serviceContext);
  }
  String workflowDefinition=ParamUtil.getString(actionRequest,"workflowDefinition");
  WorkflowDefinitionLinkLocalServiceUtil.updateWorkflowDefinitionLink(serviceContext.getUserId(),serviceContext.getCompanyId(),groupId,DDLRecordSet.class.getName(),recordSet.getRecordSetId(),workflowDefinition);
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  if (Validator.isNotNull(portletResource)) {
    PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(actionRequest,portletResource);
    preferences.reset("detailDDMTemplateId");
    preferences.reset("editable");
    preferences.reset("listDDMTemplateId");
    preferences.reset("spreadsheet");
    preferences.setValue("recordSetId",String.valueOf(recordSet.getRecordSetId()));
    preferences.store();
  }
  return recordSet;
}

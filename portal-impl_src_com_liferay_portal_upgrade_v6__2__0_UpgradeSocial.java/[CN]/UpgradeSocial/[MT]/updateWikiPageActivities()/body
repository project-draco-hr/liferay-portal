{
  long classNameId=PortalUtil.getClassNameId(WikiPage.class);
  runSQL("delete from SocialActivity where classNameId = " + classNameId);
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    ps=con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage");
    rs=ps.executeQuery();
    while (rs.next()) {
      long groupId=rs.getLong("groupId");
      long companyId=rs.getLong("companyId");
      long userId=rs.getLong("userId");
      Timestamp modifiedDate=rs.getTimestamp("modifiedDate");
      long resourcePrimKey=rs.getLong("resourcePrimKey");
      double version=rs.getDouble("version");
      int type=WikiActivityKeys.ADD_PAGE;
      if (version > 1.0) {
        type=WikiActivityKeys.UPDATE_PAGE;
      }
      JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
      extraDataJSONObject.put("version",version);
      addActivity(increment(),groupId,companyId,userId,modifiedDate,0,classNameId,resourcePrimKey,type,extraDataJSONObject.toString(),0);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

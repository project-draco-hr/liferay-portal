{
  MethodTargetClassKey methodTargetClassKey=new MethodTargetClassKey(method,targetClass);
  TransactionAttribute transactionAttribute=_transactionAttributes.get(methodTargetClassKey);
  if (transactionAttribute != null) {
    if (transactionAttribute == _nullTransactionAttribute) {
      return null;
    }
 else {
      return transactionAttribute;
    }
  }
  Queue<Class<?>> candidateQueue=new LinkedList<Class<?>>();
  if (targetClass == null) {
    candidateQueue.offer(method.getDeclaringClass());
  }
 else {
    candidateQueue.offer(targetClass);
  }
  Transactional transactional=_findTransactionAnnotation(method,candidateQueue);
  transactionAttribute=_parseTransactionAnnotation(transactional);
  if (transactionAttribute == null) {
    _transactionAttributes.put(methodTargetClassKey,_nullTransactionAttribute);
  }
 else {
    _transactionAttributes.put(methodTargetClassKey,transactionAttribute);
  }
  return transactionAttribute;
}

{
  Map<Method,TransactionAttribute> transactionAttributes=_transactionAttributes.get(targetClass);
  if (transactionAttributes == null) {
    transactionAttributes=new ConcurrentHashMap<>();
    Map<Method,TransactionAttribute> previousTransactionAttributes=_transactionAttributes.putIfAbsent(targetClass,transactionAttributes);
    if (previousTransactionAttributes != null) {
      transactionAttributes=previousTransactionAttributes;
    }
  }
  TransactionAttribute transactionAttribute=transactionAttributes.get(method);
  if (transactionAttribute != null) {
    if (transactionAttribute == _nullTransactionAttribute) {
      return null;
    }
 else {
      return transactionAttribute;
    }
  }
  Transactional transactional=AnnotationLocator.locate(method,targetClass,Transactional.class);
  transactionAttribute=TransactionAttributeBuilder.build(transactional);
  if (transactionAttribute == null) {
    transactionAttributes.put(method,_nullTransactionAttribute);
  }
 else {
    transactionAttributes.put(method,transactionAttribute);
  }
  return transactionAttribute;
}

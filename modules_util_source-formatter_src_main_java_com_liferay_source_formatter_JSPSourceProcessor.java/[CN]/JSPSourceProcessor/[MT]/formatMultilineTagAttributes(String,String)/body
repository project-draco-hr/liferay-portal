{
  Matcher matcher=_multilineTagPattern.matcher(content);
  while (matcher.find()) {
    char beforeClosingTagChar=content.charAt(matcher.start(2) - 1);
    if ((beforeClosingTagChar != CharPool.NEW_LINE) && (beforeClosingTagChar != CharPool.TAB)) {
      String closingTag=matcher.group(2);
      String whitespace=matcher.group(1);
      String tabs=StringUtil.removeChar(whitespace,CharPool.NEW_LINE);
      return StringUtil.replaceFirst(content,closingTag,"\n" + tabs + closingTag,matcher.start(2));
    }
    String tag=matcher.group();
    String singlelineTag=StringUtil.removeChar(StringUtil.trim(tag),CharPool.TAB);
    singlelineTag=StringUtil.replace(singlelineTag,CharPool.NEW_LINE,CharPool.SPACE);
    String newTag=formatAttributes(fileName,tag,singlelineTag,getLineCount(content,matcher.end(1)),false);
    if (!tag.equals(newTag)) {
      return StringUtil.replace(content,tag,newTag);
    }
  }
  return content;
}

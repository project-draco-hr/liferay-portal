{
  _moveFrequentlyUsedImportsToCommonInit=GetterUtil.getBoolean(getProperty("move.frequently.used.imports.to.common.init"));
  _unusedVariablesExcludes=getPropertyList("jsp.unused.variables.excludes");
  String[] excludes=new String[]{"**/null.jsp","**/tools/**"};
  List<String> allFileNames=getFileNames(sourceFormatterArgs.getBaseDirName(),null,excludes,getIncludes());
  try {
    for (    String fileName : allFileNames) {
      File file=new File(fileName);
      fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
      String absolutePath=getAbsolutePath(file);
      String content=FileUtil.read(file);
      Matcher matcher=_includeFilePattern.matcher(content);
      String newContent=content;
      while (matcher.find()) {
        newContent=StringUtil.replaceFirst(newContent,matcher.group(),"@ include file=\"" + matcher.group(1) + "\"",matcher.start());
      }
      processFormattedFile(file,fileName,content,newContent);
      if (portalSource && _moveFrequentlyUsedImportsToCommonInit && fileName.endsWith("/init.jsp")&& !isModulesFile(absolutePath,true)&& !fileName.endsWith("/common/init.jsp")) {
        addImportCounts(content);
      }
      _jspContents.put(fileName,newContent);
    }
    if (portalSource && _moveFrequentlyUsedImportsToCommonInit) {
      moveFrequentlyUsedImportsToCommonInit(4);
    }
  }
 catch (  Exception e) {
    ReflectionUtil.throwException(e);
  }
  _populateTagJavaClasses();
}

{
  MBMessage message=mbMessagePersistence.findByPrimaryKey(messageId);
  MBCategory category=getCategory(message,categoryId);
  long oldCategoryId=message.getCategoryId();
  subject=ModelHintsUtil.trimString(MBMessage.class.getName(),"subject",subject);
  Date now=new Date();
  validate(subject,body);
  if (files.size() > 0) {
    long companyId=message.getCompanyId();
    String portletId=CompanyImpl.SYSTEM_STRING;
    long groupId=GroupImpl.DEFAULT_PARENT_GROUP_ID;
    long repositoryId=CompanyImpl.SYSTEM;
    String dirName=message.getAttachmentsDir();
    try {
      try {
        dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
      }
 catch (      NoSuchDirectoryException nsde) {
      }
      dlService.addDirectory(companyId,repositoryId,dirName);
      for (int i=0; i < files.size(); i++) {
        ObjectValuePair ovp=(ObjectValuePair)files.get(i);
        String fileName=(String)ovp.getKey();
        byte[] byteArray=(byte[])ovp.getValue();
        try {
          dlService.addFile(companyId,portletId,groupId,repositoryId,dirName + "/" + fileName,StringPool.BLANK,byteArray);
        }
 catch (        DuplicateFileException dfe) {
        }
      }
    }
 catch (    RemoteException re) {
      throw new SystemException(re);
    }
  }
  message.setModifiedDate(now);
  message.setSubject(subject);
  message.setBody(body);
  message.setAttachments((files.size() > 0 ? true : false));
  mbMessagePersistence.update(message);
  notifySubscribers(category,message,prefs,true);
  MBThread thread=mbThreadPersistence.findByPrimaryKey(message.getThreadId());
  if (priority != MBThreadImpl.PRIORITY_NOT_GIVEN) {
    thread.setPriority(priority);
  }
  mbThreadPersistence.update(thread);
  category.setLastPostDate(now);
  mbCategoryPersistence.update(category);
  if (oldCategoryId != category.getCategoryId()) {
    Iterator itr=mbMessagePersistence.findByC_T(oldCategoryId,thread.getThreadId()).iterator();
    while (itr.hasNext()) {
      MBMessage curMessage=(MBMessage)itr.next();
      curMessage.setCategoryId(category.getCategoryId());
      mbMessagePersistence.update(curMessage);
      try {
        if (!category.isDiscussion()) {
          String[] curTagsEntries=tagsEntryLocalService.getEntryNames(MBMessage.class.getName(),curMessage.getMessageId());
          Indexer.updateMessage(curMessage.getCompanyId(),category.getGroupId(),curMessage.getUserName(),category.getCategoryId(),curMessage.getThreadId(),curMessage.getMessageId(),curMessage.getSubject(),curMessage.getBody(),curTagsEntries);
        }
      }
 catch (      IOException ioe) {
        _log.error("Indexing " + messageId,ioe);
      }
    }
    thread.setCategoryId(category.getCategoryId());
    mbThreadPersistence.update(thread);
  }
  updateTagsAsset(userId,message,tagsEntries);
  try {
    if (!category.isDiscussion()) {
      Indexer.updateMessage(message.getCompanyId(),category.getGroupId(),message.getUserName(),category.getCategoryId(),message.getThreadId(),messageId,subject,body,tagsEntries);
    }
  }
 catch (  IOException ioe) {
    _log.error("Indexing " + messageId,ioe);
  }
  return message;
}

{
  String className=(String)serviceContext.getAttribute("className");
  Long classPK=GetterUtil.getLong((String)serviceContext.getAttribute("classPK"));
  MBMessage message=getMessage(messageId);
  int oldStatus=message.getStatus();
  if ((oldStatus != WorkflowConstants.STATUS_APPROVED) && (status == WorkflowConstants.STATUS_APPROVED)) {
    if (!message.isRoot()) {
      socialEquityLogLocalService.addEquityLogs(userId,className,classPK,ActionKeys.ADD_DISCUSSION);
    }
    long parentMessageId=message.getParentMessageId();
    if (className.equals(BlogsEntry.class.getName()) && parentMessageId != MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID) {
      BlogsEntry entry=blogsEntryPersistence.findByPrimaryKey(classPK);
      JSONObject extraData=JSONFactoryUtil.createJSONObject();
      extraData.put("messageId",message.getMessageId());
      socialActivityLocalService.addActivity(userId,entry.getGroupId(),BlogsEntry.class.getName(),classPK,BlogsActivityKeys.ADD_COMMENT,extraData.toString(),entry.getUserId());
      try {
        sendBlogsCommentsEmail(userId,entry,message,serviceContext);
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
  }
}

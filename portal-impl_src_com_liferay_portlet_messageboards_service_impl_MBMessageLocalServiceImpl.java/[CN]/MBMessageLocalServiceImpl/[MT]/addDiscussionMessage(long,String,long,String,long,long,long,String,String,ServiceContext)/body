{
  long categoryId=MBCategoryConstants.DISCUSSION_CATEGORY_ID;
  if (Validator.isNull(subject) && Validator.isNotNull(body)) {
    subject=body.substring(0,Math.min(body.length(),50)) + "...";
  }
 else {
    throw new MessageBodyException();
  }
  List<ObjectValuePair<String,InputStream>> inputStreamOVPs=Collections.emptyList();
  boolean anonymous=false;
  double priority=0.0;
  boolean allowPingbacks=false;
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setAttribute("className",className);
  serviceContext.setAttribute("classPK",String.valueOf(classPK));
  MBMessage message=addMessage(userId,userName,groupId,categoryId,threadId,parentMessageId,subject,body,MBMessageConstants.DEFAULT_FORMAT,inputStreamOVPs,anonymous,priority,allowPingbacks,serviceContext);
  if (parentMessageId == MBMessageConstants.DEFAULT_PARENT_MESSAGE_ID) {
    long classNameId=PortalUtil.getClassNameId(className);
    MBDiscussion discussion=mbDiscussionPersistence.fetchByC_C(classNameId,classPK);
    if (discussion == null) {
      discussion=mbDiscussionLocalService.addDiscussion(classNameId,classPK,message.getThreadId());
    }
  }
  return message;
}

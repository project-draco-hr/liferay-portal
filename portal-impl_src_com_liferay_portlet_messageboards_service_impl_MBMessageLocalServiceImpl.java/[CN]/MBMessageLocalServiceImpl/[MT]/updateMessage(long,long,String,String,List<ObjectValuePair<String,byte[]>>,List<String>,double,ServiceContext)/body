{
  MBMessage message=mbMessagePersistence.findByPrimaryKey(messageId);
  MBCategory category=message.getCategory();
  subject=ModelHintsUtil.trimString(MBMessage.class.getName(),"subject",subject);
  Date now=new Date();
  validate(subject,body);
  message.setModifiedDate(now);
  message.setSubject(subject);
  message.setBody(body);
  message.setAttachments(!files.isEmpty() || !existingFiles.isEmpty());
  if (priority != MBThreadImpl.PRIORITY_NOT_GIVEN) {
    message.setPriority(priority);
  }
  long companyId=message.getCompanyId();
  String portletId=CompanyConstants.SYSTEM_STRING;
  long groupId=GroupConstants.DEFAULT_PARENT_GROUP_ID;
  long repositoryId=CompanyConstants.SYSTEM;
  String dirName=message.getAttachmentsDir();
  if (!files.isEmpty() || !existingFiles.isEmpty()) {
    try {
      dlService.addDirectory(companyId,repositoryId,dirName);
    }
 catch (    DuplicateDirectoryException dde) {
    }
    String[] fileNames=dlService.getFileNames(companyId,repositoryId,dirName);
    for (    String fileName : fileNames) {
      if (!existingFiles.contains(fileName)) {
        dlService.deleteFile(companyId,portletId,repositoryId,fileName);
      }
    }
    for (int i=0; i < files.size(); i++) {
      ObjectValuePair<String,byte[]> ovp=files.get(i);
      String fileName=ovp.getKey();
      byte[] bytes=ovp.getValue();
      try {
        dlService.addFile(companyId,portletId,groupId,repositoryId,dirName + "/" + fileName,0,StringPool.BLANK,message.getModifiedDate(),serviceContext,bytes);
      }
 catch (      DuplicateFileException dfe) {
      }
    }
  }
 else {
    try {
      dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
    }
 catch (    NoSuchDirectoryException nsde) {
    }
  }
  mbMessagePersistence.update(message,false);
  MBThread thread=mbThreadPersistence.findByPrimaryKey(message.getThreadId());
  if ((priority != MBThreadImpl.PRIORITY_NOT_GIVEN) && (thread.getPriority() != priority)) {
    thread.setPriority(priority);
    mbThreadPersistence.update(thread,false);
    updatePriorities(thread.getThreadId(),priority);
  }
  category.setLastPostDate(now);
  mbCategoryPersistence.update(category,false);
  updateAsset(userId,message,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  notifySubscribers(category,message,serviceContext,true);
  reIndex(message);
  return message;
}

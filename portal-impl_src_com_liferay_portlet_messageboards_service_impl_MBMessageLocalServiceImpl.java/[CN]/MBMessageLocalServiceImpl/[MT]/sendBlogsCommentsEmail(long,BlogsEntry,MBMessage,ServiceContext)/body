{
  long companyId=message.getCompanyId();
  if (!PrefsPropsUtil.getBoolean(companyId,PropsKeys.BLOGS_EMAIL_COMMENTS_ADDED_ENABLED)) {
    return;
  }
  String layoutFullURL=serviceContext.getLayoutFullURL();
  String blogsEntryURL=layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "blogs/"+ entry.getUrlTitle();
  User user=userPersistence.findByPrimaryKey(userId);
  String fromName=PrefsPropsUtil.getString(companyId,PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(companyId,PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String subject=PrefsPropsUtil.getContent(companyId,PropsKeys.BLOGS_EMAIL_COMMENTS_ADDED_SUBJECT);
  String body=PrefsPropsUtil.getContent(companyId,PropsKeys.BLOGS_EMAIL_COMMENTS_ADDED_BODY);
  subject=StringUtil.replace(subject,new String[]{"[$BLOGS_COMMENTS_BODY$]","[$BLOGS_COMMENTS_USER_ADDRESS$]","[$BLOGS_COMMENTS_USER_NAME$]","[$BLOGS_ENTRY_URL$]","[$FROM_ADDRESS$]","[$FROM_NAME$]"},new String[]{message.getBody(),user.getEmailAddress(),user.getFullName(),blogsEntryURL,fromAddress,fromName});
  body=StringUtil.replace(body,new String[]{"[$BLOGS_COMMENTS_BODY$]","[$BLOGS_COMMENTS_USER_ADDRESS$]","[$BLOGS_COMMENTS_USER_NAME$]","[$BLOGS_ENTRY_URL$]","[$FROM_ADDRESS$]","[$FROM_NAME$]"},new String[]{message.getBody(),user.getEmailAddress(),user.getFullName(),blogsEntryURL,fromAddress,fromName});
  Set<Long> sent=new HashSet<Long>();
  List<MBMessage> messages=mbMessagePersistence.findByThreadId(message.getThreadId());
  for (  MBMessage curMessage : messages) {
    long curMessageUserId=curMessage.getUserId();
    if (curMessageUserId == userId) {
      continue;
    }
    if (sent.contains(curMessageUserId)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Do not send a duplicate email to user " + curMessageUserId);
      }
      continue;
    }
 else {
      if (_log.isDebugEnabled()) {
        _log.debug("Add user " + curMessageUserId + " to the list of users who have received an email");
      }
      sent.add(curMessageUserId);
    }
    User curMessageUser=null;
    try {
      curMessageUser=userLocalService.getUserById(curMessageUserId);
    }
 catch (    NoSuchUserException nsue) {
      continue;
    }
    if (!curMessageUser.isActive()) {
      continue;
    }
    InternetAddress from=new InternetAddress(fromAddress,fromName);
    InternetAddress to=new InternetAddress(curMessageUser.getEmailAddress(),curMessageUser.getFullName());
    String curSubject=StringUtil.replace(subject,new String[]{"[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{curMessageUser.getFullName(),curMessageUser.getEmailAddress()});
    String curBody=StringUtil.replace(body,new String[]{"[$TO_ADDRESS$]","[$TO_NAME$]"},new String[]{curMessageUser.getFullName(),curMessageUser.getEmailAddress()});
    MailMessage mailMessage=new MailMessage(from,to,curSubject,curBody,true);
    mailService.sendEmail(mailMessage);
  }
}

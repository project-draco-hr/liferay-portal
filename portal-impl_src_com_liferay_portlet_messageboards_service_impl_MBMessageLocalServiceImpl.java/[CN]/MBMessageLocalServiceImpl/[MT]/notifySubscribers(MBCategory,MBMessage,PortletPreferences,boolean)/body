{
  try {
    if (prefs == null) {
      return;
    }
 else     if (!update && MBUtil.getEmailMessageAddedEnabled(prefs)) {
    }
 else     if (update && MBUtil.getEmailMessageUpdatedEnabled(prefs)) {
    }
 else {
      return;
    }
    Company company=companyPersistence.findByPrimaryKey(message.getCompanyId());
    Group group=groupPersistence.findByPrimaryKey(category.getGroupId());
    User user=userPersistence.findByPrimaryKey(message.getUserId());
    List categoryIds=new ArrayList();
    mbCategoryLocalService.getSubcategoryIds(categoryIds,category.getGroupId(),category.getCategoryId());
    categoryIds.add(new Long(category.getCategoryId()));
    String portletName=PortalUtil.getPortletTitle(PortletKeys.MESSAGE_BOARDS,user);
    String fromName=MBUtil.getEmailFromName(prefs);
    String fromAddress=MBUtil.getEmailFromAddress(prefs);
    String mailingListAddress=StringPool.BLANK;
    if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.SMTP_SERVER_ENABLED))) {
      mailingListAddress=MBUtil.getMailingListAddress(message.getCategoryId(),company.getMx());
    }
    String replyToAddress=mailingListAddress;
    String messageId=MBUtil.getMailId(company.getMx(),message.getCategoryId(),message.getMessageId());
    fromName=StringUtil.replace(fromName,new String[]{"[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTLET_NAME$]"},new String[]{String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),mailingListAddress,user.getEmailAddress(),user.getFullName(),portletName});
    fromAddress=StringUtil.replace(fromAddress,new String[]{"[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTLET_NAME$]"},new String[]{String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),mailingListAddress,user.getEmailAddress(),user.getFullName(),portletName});
    String subjectPrefix=null;
    String body=null;
    String signature=null;
    if (update) {
      subjectPrefix=MBUtil.getEmailMessageUpdatedSubjectPrefix(prefs);
      body=MBUtil.getEmailMessageUpdatedBody(prefs);
      signature=MBUtil.getEmailMessageUpdatedSignature(prefs);
    }
 else {
      subjectPrefix=MBUtil.getEmailMessageAddedSubjectPrefix(prefs);
      body=MBUtil.getEmailMessageAddedBody(prefs);
      signature=MBUtil.getEmailMessageAddedSignature(prefs);
    }
    if (Validator.isNotNull(signature)) {
      body+="\n--\n" + signature;
    }
    subjectPrefix=StringUtil.replace(subjectPrefix,new String[]{"[$CATEGORY_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_BODY$]","[$MESSAGE_ID$]","[$MESSAGE_SUBJECT$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{category.getName(),String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,mailingListAddress,message.getBody(),String.valueOf(message.getMessageId()),message.getSubject(),user.getEmailAddress(),user.getFullName(),company.getVirtualHost(),portletName});
    body=StringUtil.replace(body,new String[]{"[$CATEGORY_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_BODY$]","[$MESSAGE_ID$]","[$MESSAGE_SUBJECT$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{category.getName(),String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,mailingListAddress,message.getBody(),String.valueOf(message.getMessageId()),message.getSubject(),user.getEmailAddress(),user.getFullName(),company.getVirtualHost(),portletName});
    String subject=message.getSubject();
    if (subject.indexOf(subjectPrefix) == -1) {
      subject=subjectPrefix + subject;
    }
    String inReplyTo=null;
    if (message.getParentMessageId() != MBMessageImpl.DEFAULT_PARENT_MESSAGE_ID) {
      inReplyTo=MBUtil.getMailId(company.getMx(),message.getCategoryId(),message.getParentMessageId());
    }
    MBMessageProducer.produce(new String[]{String.valueOf(message.getCompanyId()),String.valueOf(message.getUserId()),StringUtil.merge(categoryIds),String.valueOf(message.getThreadId()),fromName,fromAddress,subject,body,replyToAddress,messageId,inReplyTo});
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
}

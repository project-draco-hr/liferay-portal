{
  MBMessage message=mbMessagePersistence.findByPrimaryKey(messageId);
  MBCategory category=message.getCategory();
  subject=ModelHintsUtil.trimString(MBMessage.class.getName(),"subject",subject);
  Date now=new Date();
  validate(subject,body);
  long companyId=message.getCompanyId();
  String portletId=CompanyImpl.SYSTEM_STRING;
  long groupId=GroupImpl.DEFAULT_PARENT_GROUP_ID;
  long repositoryId=CompanyImpl.SYSTEM;
  String dirName=message.getAttachmentsDir();
  if (!files.isEmpty() || !existingFiles.isEmpty()) {
    try {
      try {
        dlService.addDirectory(companyId,repositoryId,dirName);
      }
 catch (      DuplicateDirectoryException dde) {
      }
      String[] fileNames=dlService.getFileNames(companyId,repositoryId,dirName);
      for (      String fileName : fileNames) {
        if (!existingFiles.contains(fileName)) {
          dlService.deleteFile(companyId,portletId,repositoryId,fileName);
        }
      }
      for (int i=0; i < files.size(); i++) {
        ObjectValuePair ovp=(ObjectValuePair)files.get(i);
        String fileName=(String)ovp.getKey();
        byte[] byteArray=(byte[])ovp.getValue();
        try {
          dlService.addFile(companyId,portletId,groupId,repositoryId,dirName + "/" + fileName,StringPool.BLANK,new String[0],byteArray);
        }
 catch (        DuplicateFileException dfe) {
        }
      }
    }
 catch (    RemoteException re) {
      throw new SystemException(re);
    }
  }
 else {
    try {
      dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
    }
 catch (    NoSuchDirectoryException nsde) {
    }
catch (    RemoteException re) {
      throw new SystemException(re);
    }
  }
  message.setModifiedDate(now);
  message.setSubject(subject);
  message.setBody(body);
  message.setAttachments(!files.isEmpty() || !existingFiles.isEmpty());
  mbMessagePersistence.update(message);
  MBThread thread=mbThreadPersistence.findByPrimaryKey(message.getThreadId());
  if (priority != MBThreadImpl.PRIORITY_NOT_GIVEN) {
    thread.setPriority(priority);
  }
  mbThreadPersistence.update(thread);
  category.setLastPostDate(now);
  mbCategoryPersistence.update(category);
  notifySubscribers(category,message,prefs,themeDisplay,true);
  updateTagsAsset(userId,message,tagsEntries);
  try {
    if (!category.isDiscussion()) {
      Indexer.updateMessage(message.getCompanyId(),category.getGroupId(),message.getUserName(),category.getCategoryId(),message.getThreadId(),messageId,subject,body,tagsEntries);
    }
  }
 catch (  IOException ioe) {
    _log.error("Indexing " + messageId,ioe);
  }
  return message;
}

{
  if (category.isDiscussion()) {
    return;
  }
  if (prefs == null) {
    long ownerId=category.getGroupId();
    int ownerType=PortletKeys.PREFS_OWNER_TYPE_GROUP;
    long plid=PortletKeys.PREFS_PLID_SHARED;
    String portletId=PortletKeys.MESSAGE_BOARDS;
    String defaultPreferences=null;
    prefs=portletPreferencesLocalService.getPreferences(category.getCompanyId(),ownerId,ownerType,plid,portletId,defaultPreferences);
  }
  if (!update && MBUtil.getEmailMessageAddedEnabled(prefs)) {
  }
 else   if (update && MBUtil.getEmailMessageUpdatedEnabled(prefs)) {
  }
 else {
    return;
  }
  Company company=companyPersistence.findByPrimaryKey(message.getCompanyId());
  Group group=groupPersistence.findByPrimaryKey(category.getGroupId());
  User user=userPersistence.findByPrimaryKey(message.getUserId());
  List<Long> categoryIds=new ArrayList<Long>();
  categoryIds.add(category.getCategoryId());
  categoryIds.addAll(category.getAncestorCategoryIds());
  String messageURL=StringPool.BLANK;
  if (themeDisplay != null) {
    String portalURL=PortalUtil.getPortalURL(themeDisplay);
    String layoutURL=PortalUtil.getLayoutURL(themeDisplay);
    messageURL=portalURL + layoutURL + "/message_boards/message/"+ message.getMessageId();
  }
  String portletName=PortalUtil.getPortletTitle(PortletKeys.MESSAGE_BOARDS,user);
  String fromName=MBUtil.getEmailFromName(prefs);
  String fromAddress=MBUtil.getEmailFromAddress(prefs);
  String mailingListAddress=StringPool.BLANK;
  if (PropsValues.POP_SERVER_NOTIFICATIONS_ENABLED) {
    mailingListAddress=MBUtil.getMailingListAddress(message.getCategoryId(),message.getMessageId(),company.getMx(),fromAddress);
  }
  String replyToAddress=mailingListAddress;
  String mailId=MBUtil.getMailId(company.getMx(),message.getCategoryId(),message.getMessageId());
  fromName=StringUtil.replace(fromName,new String[]{"[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTLET_NAME$]"},new String[]{String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),mailingListAddress,user.getEmailAddress(),user.getFullName(),portletName});
  fromAddress=StringUtil.replace(fromAddress,new String[]{"[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTLET_NAME$]"},new String[]{String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),mailingListAddress,user.getEmailAddress(),user.getFullName(),portletName});
  String subjectPrefix=null;
  String body=null;
  String signature=null;
  boolean htmlFormat=MBUtil.getEmailHtmlFormat(prefs);
  if (update) {
    subjectPrefix=MBUtil.getEmailMessageUpdatedSubjectPrefix(prefs);
    body=MBUtil.getEmailMessageUpdatedBody(prefs);
    signature=MBUtil.getEmailMessageUpdatedSignature(prefs);
  }
 else {
    subjectPrefix=MBUtil.getEmailMessageAddedSubjectPrefix(prefs);
    body=MBUtil.getEmailMessageAddedBody(prefs);
    signature=MBUtil.getEmailMessageAddedSignature(prefs);
  }
  if (Validator.isNotNull(signature)) {
    body+="\n--\n" + signature;
  }
  subjectPrefix=StringUtil.replace(subjectPrefix,new String[]{"[$CATEGORY_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_BODY$]","[$MESSAGE_ID$]","[$MESSAGE_SUBJECT$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{category.getName(),String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,mailingListAddress,message.getBody(),String.valueOf(message.getMessageId()),message.getSubject(),user.getEmailAddress(),user.getFullName(),company.getVirtualHost(),portletName});
  body=StringUtil.replace(body,new String[]{"[$CATEGORY_NAME$]","[$COMPANY_ID$]","[$COMPANY_MX$]","[$COMPANY_NAME$]","[$COMMUNITY_NAME$]","[$FROM_ADDRESS$]","[$FROM_NAME$]","[$MAILING_LIST_ADDRESS$]","[$MESSAGE_BODY$]","[$MESSAGE_ID$]","[$MESSAGE_SUBJECT$]","[$MESSAGE_URL$]","[$MESSAGE_USER_ADDRESS$]","[$MESSAGE_USER_NAME$]","[$PORTAL_URL$]","[$PORTLET_NAME$]"},new String[]{category.getName(),String.valueOf(company.getCompanyId()),company.getMx(),company.getName(),group.getName(),fromAddress,fromName,mailingListAddress,message.getBody(),String.valueOf(message.getMessageId()),message.getSubject(),messageURL,user.getEmailAddress(),user.getFullName(),company.getVirtualHost(),portletName});
  String subject=message.getSubject();
  if (subject.indexOf(subjectPrefix) == -1) {
    subject=subjectPrefix.trim() + " " + subject.trim();
  }
  String inReplyTo=null;
  if (message.getParentMessageId() != MBMessageImpl.DEFAULT_PARENT_MESSAGE_ID) {
    inReplyTo=MBUtil.getMailId(company.getMx(),message.getCategoryId(),message.getParentMessageId());
  }
  com.liferay.portal.kernel.messaging.Message messagingObj=new com.liferay.portal.kernel.messaging.Message();
  messagingObj.put("companyId",message.getCompanyId());
  messagingObj.put("userId",message.getUserId());
  messagingObj.put("categoryIds",StringUtil.merge(categoryIds));
  messagingObj.put("threadId",message.getThreadId());
  messagingObj.put("fromName",fromName);
  messagingObj.put("fromAddress",fromAddress);
  messagingObj.put("subject",subject);
  messagingObj.put("body",body);
  messagingObj.put("replyToAddress",replyToAddress);
  messagingObj.put("mailId",mailId);
  messagingObj.put("inReplyTo",inReplyTo);
  messagingObj.put("htmlFormat",htmlFormat);
  messagingObj.put("sourceMailingList",MailingListThreadLocal.isSourceMailingList());
  MessageBusUtil.sendMessage(DestinationNames.MESSAGE_BOARDS,messagingObj);
}

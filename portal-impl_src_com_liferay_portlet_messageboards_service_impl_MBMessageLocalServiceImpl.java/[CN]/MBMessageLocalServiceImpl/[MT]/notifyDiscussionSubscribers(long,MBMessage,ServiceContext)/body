{
  if (!PrefsPropsUtil.getBoolean(message.getCompanyId(),PropsKeys.DISCUSSION_EMAIL_COMMENTS_ADDED_ENABLED)) {
    return;
  }
  MBDiscussion mbDiscussion=mbDiscussionLocalService.getThreadDiscussion(message.getThreadId());
  String contentURL=(String)serviceContext.getAttribute("contentURL");
  String userAddress=StringPool.BLANK;
  String userName=(String)serviceContext.getAttribute("pingbackUserName");
  if (Validator.isNull(userName)) {
    userAddress=PortalUtil.getUserEmailAddress(message.getUserId());
    userName=PortalUtil.getUserName(message.getUserId(),StringPool.BLANK);
  }
  String fromName=PrefsPropsUtil.getString(message.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(message.getCompanyId(),PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
  String subject=PrefsPropsUtil.getContent(message.getCompanyId(),PropsKeys.DISCUSSION_EMAIL_SUBJECT);
  String body=PrefsPropsUtil.getContent(message.getCompanyId(),PropsKeys.DISCUSSION_EMAIL_BODY);
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(message.getCompanyId());
  subscriptionSender.setClassName(MBDiscussion.class.getName());
  subscriptionSender.setClassPK(mbDiscussion.getDiscussionId());
  subscriptionSender.setContextAttribute("[$COMMENTS_BODY$]",message.getBody(true),false);
  subscriptionSender.setContextAttributes("[$COMMENTS_USER_ADDRESS$]",userAddress,"[$COMMENTS_USER_NAME$]",userName,"[$CONTENT_URL$]",contentURL);
  subscriptionSender.setCreatorUserId(creatorUserId);
  subscriptionSender.setEntryTitle(message.getBody());
  subscriptionSender.setEntryURL(contentURL);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  Date modifiedDate=message.getModifiedDate();
  subscriptionSender.setMailId("mb_discussion",message.getCategoryId(),message.getMessageId(),modifiedDate.getTime());
  int notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY;
  if (serviceContext.isCommandUpdate()) {
    notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY;
  }
  subscriptionSender.setNotificationType(notificationType);
  subscriptionSender.setPortletId(PortletKeys.COMMENTS);
  subscriptionSender.setScopeGroupId(message.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setSubject(subject);
  subscriptionSender.setUniqueMailId(false);
  subscriptionSender.setUserId(message.getUserId());
  String className=(String)serviceContext.getAttribute("className");
  long classPK=ParamUtil.getLong(serviceContext,"classPK");
  subscriptionSender.addPersistedSubscribers(className,classPK);
  subscriptionSender.flushNotificationsAsync();
}

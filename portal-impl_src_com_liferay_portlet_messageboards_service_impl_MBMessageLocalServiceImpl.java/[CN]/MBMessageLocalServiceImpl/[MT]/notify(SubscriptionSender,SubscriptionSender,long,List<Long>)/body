{
  TransactionCommitCallbackRegistryUtil.registerCallback(new Callable<Void>(){
    @Override public Void call() throws Exception {
      subscriptionSender.flushNotificationsAsync();
      if (!MailingListThreadLocal.isSourceMailingList()) {
        return null;
      }
      for (      long categoryId : categoryIds) {
        MBSubscriptionSender sourceMailingListSubscriptionSender=(MBSubscriptionSender)SerializableUtil.clone(subscriptionSenderPrototype);
        sourceMailingListSubscriptionSender.setBulk(false);
        sourceMailingListSubscriptionSender.addMailingListSubscriber(groupId,categoryId);
        sourceMailingListSubscriptionSender.flushNotificationsAsync();
      }
      return null;
    }
  }
);
}

{
  Object[] finderArgs=new Object[]{userId,entryId,value};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,this);
  }
  if (result instanceof AnnouncementsFlag) {
    AnnouncementsFlag announcementsFlag=(AnnouncementsFlag)result;
    if ((userId != announcementsFlag.getUserId()) || (entryId != announcementsFlag.getEntryId()) || (value != announcementsFlag.getValue())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_ANNOUNCEMENTSFLAG_WHERE);
    query.append(_FINDER_COLUMN_U_E_V_USERID_2);
    query.append(_FINDER_COLUMN_U_E_V_ENTRYID_2);
    query.append(_FINDER_COLUMN_U_E_V_VALUE_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(entryId);
      qPos.add(value);
      List<AnnouncementsFlag> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,list);
      }
 else {
        AnnouncementsFlag announcementsFlag=list.get(0);
        result=announcementsFlag;
        cacheResult(announcementsFlag);
        if ((announcementsFlag.getUserId() != userId) || (announcementsFlag.getEntryId() != entryId) || (announcementsFlag.getValue() != value)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,announcementsFlag);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (AnnouncementsFlag)result;
  }
}

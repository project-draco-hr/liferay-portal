{
  List<Permission> permissions=new CopyOnWriteArrayList<Permission>();
  String value=getProperty(key);
  if (value != null) {
    value=StringUtil.replace(value,_defaultReadPathsFromArray,_defaultReadPathsToArray);
    String[] paths=StringUtil.split(value);
    if (value.contains("${comma}")) {
      for (int i=0; i < paths.length; i++) {
        paths[i]=StringUtil.replace(paths[i],"${comma}",StringPool.COMMA);
      }
    }
    for (    String path : paths) {
      addPermission(permissions,path,actions);
    }
  }
  String pathContext=ContextPathUtil.getContextPath(PropsValues.PORTAL_CTX);
  ServletContext servletContext=ServletContextPool.get(pathContext);
  if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) {
    addPermission(permissions,_workDir,actions);
    addPermission(permissions,_workDir + "/-",actions);
    if (servletContext != null) {
      File tempDir=(File)servletContext.getAttribute(JavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR);
      String tempDirAbsolutePath=tempDir.getAbsolutePath();
      if (_log.isDebugEnabled()) {
        _log.debug("Temp directory " + tempDirAbsolutePath);
      }
      if (actions.equals(FILE_PERMISSION_ACTION_READ)) {
        addPermission(permissions,tempDirAbsolutePath,actions);
      }
      addPermission(permissions,tempDirAbsolutePath + "/-",actions);
    }
  }
  if (!actions.equals(FILE_PERMISSION_ACTION_READ)) {
    return permissions;
  }
  List<String> paths=new UniqueList<String>();
  try {
    File file=new File(System.getProperty("java.home") + "/lib");
    addCanonicalPaths(paths,file);
    ClassLoader classLoader=ClassLoader.getSystemClassLoader();
    Enumeration<URL> enumeration=classLoader.getResources("META-INF/MANIFEST.MF");
    while (enumeration.hasMoreElements()) {
      URL url=enumeration.nextElement();
      URLConnection urlConnection=url.openConnection();
      if (urlConnection instanceof JarURLConnection) {
        JarURLConnection jarURLConnection=(JarURLConnection)url.openConnection();
        URL jarFileURL=jarURLConnection.getJarFileURL();
        String fileName=jarFileURL.getFile();
        int pos=fileName.lastIndexOf(File.separatorChar);
        if (pos != -1) {
          fileName=fileName.substring(0,pos + 1);
        }
        addCanonicalPath(paths,fileName);
      }
    }
  }
 catch (  IOException ioe) {
    _log.error(ioe,ioe);
  }
  if (Validator.isNotNull(_globalSharedLibDir)) {
    paths.add(_globalSharedLibDir + "-");
  }
  if (_rootDir != null) {
    paths.add(_rootDir + "-");
  }
  addDefaultReadPaths(paths,ServerDetector.getServerId());
  for (  String path : paths) {
    addPermission(permissions,path,actions);
  }
  return permissions;
}

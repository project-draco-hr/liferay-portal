{
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  ServiceTracker<?,?> serviceTracker=new ServiceTracker<Object,Object>(bundleContext,bundleContext.createFilter(filterString),null){
    @Override public void removedService(    ServiceReference<Object> reference,    Object service){
      countDownLatch.countDown();
      close();
    }
  }
;
  serviceTracker.open();
  return new Waiter(){
    @Override public void waitFor(    long timeout) throws Exception {
      if (!countDownLatch.await(timeout,TimeUnit.MILLISECONDS)) {
        throw new TimeoutException("Time out on waiting for " + filterString + " to disappear after "+ timeout+ "ms");
      }
    }
  }
;
}

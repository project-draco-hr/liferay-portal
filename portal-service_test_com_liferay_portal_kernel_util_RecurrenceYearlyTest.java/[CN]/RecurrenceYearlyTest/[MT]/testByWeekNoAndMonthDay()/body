{
  Recurrence recurrence=new Recurrence(getCalendar(2009,MARCH,23,HOUR_DURING,MINUTE_DURING),getDefaultDuration(),Recurrence.YEARLY);
  int[] weekNos={13,17,21,27,30};
  int[] monthDays={22,25,26,27,29};
  recurrence.setByWeekNo(weekNos);
  recurrence.setByMonthDay(monthDays);
  assertIsInRecurrence(true,recurrence,2009,MARCH,23);
  assertIsInRecurrence(true,recurrence,2009,MARCH,26);
  assertIsInRecurrence(true,recurrence,2009,MARCH,27);
  assertIsInRecurrence(false,recurrence,2009,MARCH,30);
  assertIsInRecurrence(false,recurrence,2009,MARCH,31);
  assertIsInRecurrence(false,recurrence,2009,APRIL,3);
  assertIsInRecurrence(true,recurrence,2009,APRIL,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,18);
  assertIsInRecurrence(true,recurrence,2009,MAY,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,29);
  assertIsInRecurrence(false,recurrence,2010,MARCH,23);
  assertIsInRecurrence(true,recurrence,2010,MARCH,29);
  assertIsInRecurrence(false,recurrence,2011,MARCH,23);
  assertIsInRecurrence(false,recurrence,2011,MARCH,25);
  assertIsInRecurrence(true,recurrence,2012,MARCH,26);
  assertIsInRecurrence(true,recurrence,2013,MARCH,25);
  assertIsInRecurrence(true,recurrence,2013,APRIL,22);
  recurrence.setInterval(2);
  assertIsInRecurrence(true,recurrence,2009,MARCH,23);
  assertIsInRecurrence(true,recurrence,2009,MARCH,26);
  assertIsInRecurrence(true,recurrence,2009,MARCH,27);
  assertIsInRecurrence(false,recurrence,2009,MARCH,30);
  assertIsInRecurrence(false,recurrence,2009,MARCH,31);
  assertIsInRecurrence(false,recurrence,2009,APRIL,3);
  assertIsInRecurrence(true,recurrence,2009,APRIL,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,18);
  assertIsInRecurrence(true,recurrence,2009,MAY,22);
  assertIsInRecurrence(false,recurrence,2009,MAY,29);
  assertIsInRecurrence(false,recurrence,2010,MARCH,29);
  assertIsInRecurrence(false,recurrence,2010,MARCH,23);
  assertIsInRecurrence(false,recurrence,2011,MARCH,23);
  assertIsInRecurrence(false,recurrence,2011,MARCH,25);
  assertIsInRecurrence(false,recurrence,2012,MARCH,26);
  assertIsInRecurrence(true,recurrence,2013,MARCH,25);
  assertIsInRecurrence(true,recurrence,2013,APRIL,22);
  recurrence.setUntil(getCalendar(2013,APRIL,22,0,0));
  assertIsInRecurrence(true,recurrence,2013,MARCH,25);
  assertIsInRecurrence(false,recurrence,2013,APRIL,22);
  recurrence.setOccurrence(2);
  assertIsInRecurrence(true,recurrence,2009,MARCH,25);
}

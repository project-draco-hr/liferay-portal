{
  String personalizableKey=PersonalizedPages.encodeColumnId(columnId);
  boolean templatePersonalizable=true;
  if (_templateLayout != null) {
    templatePersonalizable=GetterUtil.getBoolean(_templateLayout.getTypeSettingsProperties().getProperty(personalizableKey,String.valueOf(false)));
  }
  boolean personalizable=false;
  if (templatePersonalizable) {
    personalizable=GetterUtil.getBoolean(_layoutTypeSettings.getProperty(personalizableKey,String.valueOf(false)));
  }
  _writer.append("<div class='");
  _writer.append(classNames);
  _writer.append("'>");
  _writer.append("<h1>");
  _writer.append(columnId);
  _writer.append("</h1>");
  Object inputTag=_INPUT_TAG.newInstance();
  BeanPropertiesUtil.setProperty(inputTag,"name","TypeSettingsProperties--".concat(personalizableKey).concat("--"));
  BeanPropertiesUtil.setProperty(inputTag,"disabled",!templatePersonalizable);
  BeanPropertiesUtil.setProperty(inputTag,"label","personalizable");
  BeanPropertiesUtil.setProperty(inputTag,"pageContext",_pageContext);
  BeanPropertiesUtil.setProperty(inputTag,"type","checkbox");
  BeanPropertiesUtil.setProperty(inputTag,"value",personalizable);
  MethodHandler doEndMethodHandler=new MethodHandler(_doEndTagMethodKey);
  MethodHandler doStartMethodHandler=new MethodHandler(_doStartTagMethodKey);
  int result=(Integer)doStartMethodHandler.invoke(inputTag);
  if (result == Tag.EVAL_BODY_INCLUDE) {
    doEndMethodHandler.invoke(inputTag);
  }
  _writer.append("</div>");
  return StringPool.BLANK;
}

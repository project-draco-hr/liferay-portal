{
  Object[] finderArgs=new Object[]{countryId,regionCode};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,this);
  }
  if (result instanceof Region) {
    Region region=(Region)result;
    if ((countryId != region.getCountryId()) || !Objects.equals(regionCode,region.getRegionCode())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_REGION_WHERE);
    query.append(_FINDER_COLUMN_C_R_COUNTRYID_2);
    boolean bindRegionCode=false;
    if (regionCode == null) {
      query.append(_FINDER_COLUMN_C_R_REGIONCODE_1);
    }
 else     if (regionCode.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_C_R_REGIONCODE_3);
    }
 else {
      bindRegionCode=true;
      query.append(_FINDER_COLUMN_C_R_REGIONCODE_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(countryId);
      if (bindRegionCode) {
        qPos.add(regionCode);
      }
      List<Region> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,list);
      }
 else {
        Region region=list.get(0);
        result=region;
        cacheResult(region);
        if ((region.getCountryId() != countryId) || (region.getRegionCode() == null) || !region.getRegionCode().equals(regionCode)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_C_R,finderArgs,region);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_C_R,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (Region)result;
  }
}

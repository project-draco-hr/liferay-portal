{
  long[] groupIds=assetPublisherDisplayContext.getGroupIds();
  if (groupIds.length == 0) {
    return Collections.emptyMap();
  }
  PortletURL redirectURL=PortletURLFactoryUtil.create(portletRequest,AssetPublisherPortletKeys.ASSET_PUBLISHER,themeDisplay.getPlid(),PortletRequest.RENDER_PHASE);
  redirectURL.setParameter("hideDefaultSuccessMessage",Boolean.TRUE.toString());
  redirectURL.setParameter("mvcPath","/add_asset_redirect.jsp");
  redirectURL.setParameter("redirect",themeDisplay.getURLCurrent());
  redirectURL.setWindowState(LiferayWindowState.POP_UP);
  String redirect=redirectURL.toString();
  Map<Long,Map<String,PortletURL>> scopeAddPortletURLs=new HashMap();
  for (  long groupId : groupIds) {
    Map<String,PortletURL> addPortletURLs=AssetUtil.getAddPortletURLs((LiferayPortletRequest)portletRequest,(LiferayPortletResponse)portletResponse,groupId,assetPublisherDisplayContext.getClassNameIds(),assetPublisherDisplayContext.getClassTypeIds(),assetPublisherDisplayContext.getAllAssetCategoryIds(),assetPublisherDisplayContext.getAllAssetTagNames(),redirect);
    if (MapUtil.isNotEmpty(addPortletURLs)) {
      scopeAddPortletURLs.put(groupId,addPortletURLs);
    }
    if (scopeAddPortletURLs.size() > max) {
      break;
    }
  }
  return scopeAddPortletURLs;
}

{
  try {
    String[] credentials=null;
    String authHeader=req.getHeader("Authorization");
    if (authHeader == null) {
      return credentials;
    }
    StringTokenizer st=new StringTokenizer(authHeader);
    if (!st.hasMoreTokens()) {
      return credentials;
    }
    String basic=st.nextToken();
    if (basic.equalsIgnoreCase("Basic")) {
      String encodedCredentials=st.nextToken();
      if (_log.isDebugEnabled()) {
        _log.debug("Encoded credentials are " + encodedCredentials);
      }
      String decodedCredentials=new String(Base64.decode(encodedCredentials));
      if (_log.isDebugEnabled()) {
        _log.debug("Decoded credentials are " + decodedCredentials);
      }
      int p=decodedCredentials.indexOf(StringPool.COLON);
      if (p == -1) {
        return credentials;
      }
      long userId=GetterUtil.getLong(decodedCredentials.substring(0,p));
      String password=decodedCredentials.substring(p + 1);
      try {
        UserLocalServiceUtil.getUserById(userId);
        credentials=new String[3];
        credentials[0]=String.valueOf(userId);
        credentials[1]=password;
        credentials[2]=Boolean.TRUE.toString();
      }
 catch (      NoSuchUserException nsue) {
        if (_log.isWarnEnabled()) {
          _log.warn(userId + " is not a valid user id");
        }
      }
    }
    return credentials;
  }
 catch (  Exception e) {
    throw new AutoLoginException(e);
  }
}

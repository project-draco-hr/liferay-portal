{
  Object service=_bundleContext.getService(serviceReference);
  JaxWsServerFactoryBean jaxWsServerFactoryBean=new JaxWsServerFactoryBean();
  jaxWsServerFactoryBean.setBus(_bus);
  Map<String,Object> properties=getPropertiesAsMap(serviceReference);
  jaxWsServerFactoryBean.setProperties(properties);
  Object addressObject=serviceReference.getProperty("soap.address");
  String address=addressObject.toString();
  jaxWsServerFactoryBean.setAddress(address);
  Object endpointNameObject=serviceReference.getProperty("soap.endpoint.name");
  if ((endpointNameObject != null) && endpointNameObject instanceof QName) {
    QName endpointName=(QName)endpointNameObject;
    jaxWsServerFactoryBean.setEndpointName(endpointName);
  }
  jaxWsServerFactoryBean.setServiceBean(service);
  Object serviceClassObject=serviceReference.getProperty("soap.service.class");
  if ((serviceClassObject != null) && serviceClassObject instanceof Class<?>) {
    Class<?> serviceClass=(Class<?>)serviceClassObject;
    jaxWsServerFactoryBean.setServiceClass(serviceClass);
  }
  Object wsdlLocationObject=serviceReference.getProperty("soap.wsdl.location");
  if (wsdlLocationObject != null) {
    jaxWsServerFactoryBean.setWsdlLocation(wsdlLocationObject.toString());
  }
  Thread thread=Thread.currentThread();
  ClassLoader contextClassLoader=thread.getContextClassLoader();
  try {
    Bundle bundle=serviceReference.getBundle();
    BundleWiring bundleWiring=bundle.adapt(BundleWiring.class);
    thread.setContextClassLoader(bundleWiring.getClassLoader());
    Server server=jaxWsServerFactoryBean.create();
    ServiceTracker<Handler<?>,Handler<?>> handlerServiceTracker=trackHandlers(address,server);
    if (_logger.isInfoEnabled()) {
      _logger.info("Created JAX-WS server at location " + address + " using "+ service);
    }
    return new ServerTrackingInformation(server,handlerServiceTracker);
  }
 catch (  Throwable t) {
    _bundleContext.ungetService(serviceReference);
    _logger.error(t.getMessage(),t);
    return null;
  }
 finally {
    thread.setContextClassLoader(contextClassLoader);
  }
}

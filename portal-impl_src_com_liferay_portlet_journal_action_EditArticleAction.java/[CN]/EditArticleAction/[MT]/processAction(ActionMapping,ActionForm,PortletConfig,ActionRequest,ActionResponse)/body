{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  JournalArticle article=null;
  String oldUrlTitle=StringPool.BLANK;
  try {
    if (Validator.isNull(cmd)) {
      UploadException uploadException=(UploadException)actionRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
      if (uploadException != null) {
        if (uploadException.isExceededSizeLimit()) {
          throw new ArticleContentSizeException();
        }
        throw new PortalException(uploadException.getCause());
      }
      return;
    }
 else     if (cmd.equals(Constants.ADD) || cmd.equals(Constants.TRANSLATE) || cmd.equals(Constants.UPDATE)) {
      Object[] returnValue=updateArticle(actionRequest);
      article=(JournalArticle)returnValue[0];
      oldUrlTitle=((String)returnValue[1]);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteArticles(actionRequest);
    }
 else     if (cmd.equals(Constants.DELETE_TRANSLATION)) {
      removeArticlesLocale(actionRequest);
    }
 else     if (cmd.equals(Constants.EXPIRE)) {
      expireArticles(actionRequest);
    }
 else     if (cmd.equals(Constants.MOVE)) {
      moveArticles(actionRequest);
    }
 else     if (cmd.equals(Constants.SUBSCRIBE)) {
      subscribeArticles(actionRequest);
    }
 else     if (cmd.equals(Constants.UNSUBSCRIBE)) {
      unsubscribeArticles(actionRequest);
    }
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    int workflowAction=ParamUtil.getInteger(actionRequest,"workflowAction",WorkflowConstants.ACTION_PUBLISH);
    if ((article != null) && (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {
      redirect=getSaveAndContinueRedirect(portletConfig,actionRequest,article,redirect);
    }
    if (Validator.isNotNull(oldUrlTitle)) {
      String portletId=HttpUtil.getParameter(redirect,"p_p_id",false);
      String oldRedirectParam=PortalUtil.getPortletNamespace(portletId) + "redirect";
      String oldRedirect=HttpUtil.getParameter(redirect,oldRedirectParam,false);
      if (Validator.isNotNull(oldRedirect)) {
        String newRedirect=HttpUtil.decodeURL(oldRedirect);
        newRedirect=StringUtil.replace(newRedirect,oldUrlTitle,article.getUrlTitle());
        newRedirect=StringUtil.replace(newRedirect,oldRedirectParam,"redirect");
        redirect=StringUtil.replace(redirect,oldRedirect,newRedirect);
      }
    }
    WindowState windowState=actionRequest.getWindowState();
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    Layout layout=themeDisplay.getLayout();
    if (cmd.equals(Constants.DELETE) && ActionUtil.hasArticle(actionRequest)) {
      redirect=ParamUtil.getString(actionRequest,"originalRedirect");
    }
 else     if (cmd.equals(Constants.DELETE_TRANSLATION) || cmd.equals(Constants.TRANSLATE)) {
      setForward(actionRequest,"portlet.journal.update_translation_redirect");
    }
 else     if (!windowState.equals(LiferayWindowState.POP_UP) && layout.isTypeControlPanel()) {
      sendRedirect(actionRequest,actionResponse,redirect);
    }
 else {
      redirect=PortalUtil.escapeRedirect(redirect);
      if (Validator.isNotNull(redirect)) {
        actionResponse.sendRedirect(redirect);
      }
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchArticleException || e instanceof NoSuchStructureException || e instanceof NoSuchTemplateException|| e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portlet.journal.error");
    }
 else     if (e instanceof ArticleContentException || e instanceof ArticleContentSizeException || e instanceof ArticleDisplayDateException|| e instanceof ArticleExpirationDateException|| e instanceof ArticleIdException|| e instanceof ArticleSmallImageNameException|| e instanceof ArticleSmallImageSizeException|| e instanceof ArticleTitleException|| e instanceof ArticleTypeException|| e instanceof ArticleVersionException|| e instanceof DuplicateArticleIdException) {
      SessionErrors.add(actionRequest,e.getClass());
    }
 else     if (e instanceof AssetCategoryException || e instanceof AssetTagException || e instanceof LocaleException) {
      SessionErrors.add(actionRequest,e.getClass(),e);
    }
 else {
      throw e;
    }
  }
}

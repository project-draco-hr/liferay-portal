{
  String cmd=ParamUtil.getString(req,Constants.CMD);
  JournalArticle article=null;
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      article=updateArticle(req);
    }
 else     if (cmd.equals(Constants.APPROVE)) {
      approveArticle(req);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteArticles(req);
    }
 else     if (cmd.equals(Constants.EXPIRE)) {
      expireArticles(req);
    }
 else     if (cmd.equals("removeArticlesLocale")) {
      removeArticlesLocale(req);
    }
    if (Validator.isNotNull(cmd)) {
      String redirect=ParamUtil.getString(req,"redirect");
      if (article != null) {
        boolean saveAndContinue=ParamUtil.getBoolean(req,"saveAndContinue");
        if (saveAndContinue) {
          redirect=getSaveAndContinueRedirect(config,req,article,redirect);
        }
      }
      sendRedirect(req,res,redirect);
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchArticleException || e instanceof NoSuchStructureException || e instanceof NoSuchTemplateException|| e instanceof PrincipalException) {
      SessionErrors.add(req,e.getClass().getName());
      setForward(req,"portlet.journal.error");
    }
 else     if (e instanceof ArticleContentException || e instanceof ArticleDisplayDateException || e instanceof ArticleExpirationDateException|| e instanceof ArticleIdException|| e instanceof ArticleTitleException|| e instanceof ArticleTypeException|| e instanceof DuplicateArticleIdException) {
      SessionErrors.add(req,e.getClass().getName());
    }
 else     if (e instanceof TagsEntryException) {
      SessionErrors.add(req,e.getClass().getName(),e);
    }
 else {
      throw e;
    }
  }
}

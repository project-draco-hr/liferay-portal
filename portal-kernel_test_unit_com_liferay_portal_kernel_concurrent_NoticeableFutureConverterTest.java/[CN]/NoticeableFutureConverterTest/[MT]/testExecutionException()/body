{
  NoticeableFuture<Object> noticeableFutureConverter=new NopNoticeableFutureConverter(_defaultNoticeableFuture);
  RecordedFutureListener<Object> recordedFutureListener=new RecordedFutureListener<>();
  Assert.assertTrue(noticeableFutureConverter.addFutureListener(recordedFutureListener));
  Exception exception=new Exception();
  _defaultNoticeableFuture.setException(exception);
  Assert.assertEquals(1,recordedFutureListener.getCount());
  Assert.assertSame(ReflectionTestUtil.getFieldValue(noticeableFutureConverter,"_defaultNoticeableFuture"),recordedFutureListener.getFuture());
  try {
    noticeableFutureConverter.get();
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(exception,ee.getCause());
  }
  try {
    noticeableFutureConverter.get(1,TimeUnit.SECONDS);
    Assert.fail();
  }
 catch (  ExecutionException ee) {
    Assert.assertSame(exception,ee.getCause());
  }
}

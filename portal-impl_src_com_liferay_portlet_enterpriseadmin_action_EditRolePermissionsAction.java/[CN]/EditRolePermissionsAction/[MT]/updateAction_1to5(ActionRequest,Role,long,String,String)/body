{
  long roleId=role.getRoleId();
  int scope=ParamUtil.getInteger(actionRequest,"scope" + selResource + actionId);
  if (scope == ResourceConstants.SCOPE_COMPANY) {
    PermissionServiceUtil.setRolePermission(roleId,groupId,selResource,scope,String.valueOf(role.getCompanyId()),actionId);
  }
 else   if (scope == ResourceConstants.SCOPE_GROUP) {
    if ((role.getType() == RoleConstants.TYPE_COMMUNITY) || (role.getType() == RoleConstants.TYPE_ORGANIZATION)) {
      PermissionServiceUtil.setRolePermission(roleId,groupId,selResource,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupConstants.DEFAULT_PARENT_GROUP_ID),actionId);
    }
 else {
      String[] groupIds=StringUtil.split(ParamUtil.getString(actionRequest,"groupIds" + selResource + actionId));
      if (groupIds.length == 0) {
        SessionErrors.add(actionRequest,"missingGroupIdsForAction");
        return;
      }
      groupIds=ArrayUtil.distinct(groupIds);
      PermissionServiceUtil.unsetRolePermissions(roleId,groupId,selResource,ResourceConstants.SCOPE_GROUP,actionId);
      for (      String curGroupId : groupIds) {
        PermissionServiceUtil.setRolePermission(roleId,groupId,selResource,ResourceConstants.SCOPE_GROUP,curGroupId,actionId);
      }
    }
  }
 else {
    PermissionServiceUtil.unsetRolePermissions(roleId,groupId,selResource,ResourceConstants.SCOPE_COMPANY,actionId);
    PermissionServiceUtil.unsetRolePermissions(roleId,groupId,selResource,ResourceConstants.SCOPE_GROUP_TEMPLATE,actionId);
    PermissionServiceUtil.unsetRolePermissions(roleId,groupId,selResource,ResourceConstants.SCOPE_GROUP,actionId);
  }
}

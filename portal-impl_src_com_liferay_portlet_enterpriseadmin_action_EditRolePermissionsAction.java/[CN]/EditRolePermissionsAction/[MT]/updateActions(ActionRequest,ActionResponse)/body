{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long roleId=ParamUtil.getLong(actionRequest,"roleId");
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  String[] modelResources=StringUtil.split(ParamUtil.getString(actionRequest,"modelResources"));
  Map<String,List<String>> resourceActionsMap=new HashMap<String,List<String>>();
  if (Validator.isNotNull(portletResource)) {
    resourceActionsMap.put(portletResource,ResourceActionsUtil.getResourceActions(themeDisplay.getCompanyId(),portletResource,null));
  }
  for (int i=0; i < modelResources.length; i++) {
    resourceActionsMap.put(modelResources[i],ResourceActionsUtil.getResourceActions(themeDisplay.getCompanyId(),null,modelResources[i]));
  }
  for (  Map.Entry<String,List<String>> entry : resourceActionsMap.entrySet()) {
    String selResource=entry.getKey();
    List<String> actions=entry.getValue();
    Collections.sort(actions,new ActionComparator(themeDisplay.getCompanyId(),themeDisplay.getLocale()));
    Role role=RoleServiceUtil.getRole(roleId);
    for (    String actionId : actions) {
      int scope=ParamUtil.getInteger(actionRequest,"scope" + selResource + actionId);
      if (scope == ResourceConstants.SCOPE_COMPANY) {
        PermissionServiceUtil.setRolePermission(roleId,themeDisplay.getScopeGroupId(),selResource,scope,String.valueOf(themeDisplay.getCompanyId()),actionId);
      }
 else       if (scope == ResourceConstants.SCOPE_GROUP) {
        if ((role.getType() == RoleImpl.TYPE_COMMUNITY) || (role.getType() == RoleImpl.TYPE_ORGANIZATION)) {
          PermissionServiceUtil.setRolePermission(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupImpl.DEFAULT_PARENT_GROUP_ID),actionId);
        }
 else {
          String[] groupIds=StringUtil.split(ParamUtil.getString(actionRequest,"groupIds" + selResource + actionId));
          if (groupIds.length == 0) {
            SessionErrors.add(actionRequest,"missingGroupIdsForAction");
            return;
          }
          groupIds=ArrayUtil.distinct(groupIds);
          PermissionServiceUtil.unsetRolePermissions(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_GROUP,actionId);
          for (int j=0; j < groupIds.length; j++) {
            PermissionServiceUtil.setRolePermission(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_GROUP,groupIds[j],actionId);
          }
        }
      }
 else {
        PermissionServiceUtil.unsetRolePermissions(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_COMPANY,actionId);
        PermissionServiceUtil.unsetRolePermissions(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_GROUP_TEMPLATE,actionId);
        PermissionServiceUtil.unsetRolePermissions(roleId,themeDisplay.getScopeGroupId(),selResource,ResourceConstants.SCOPE_GROUP,actionId);
      }
    }
  }
  SessionMessages.add(actionRequest,"permissionsUpdated");
  String redirect=ParamUtil.getString(actionRequest,"redirect") + "&" + Constants.CMD+ "="+ Constants.VIEW;
  actionResponse.sendRedirect(redirect);
}

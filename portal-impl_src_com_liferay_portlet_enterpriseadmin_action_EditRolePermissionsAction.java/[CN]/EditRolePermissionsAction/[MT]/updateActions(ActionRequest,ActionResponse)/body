{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long roleId=ParamUtil.getLong(actionRequest,"roleId");
  Role role=RoleLocalServiceUtil.getRole(roleId);
  if (role.getName().equals(RoleConstants.ADMINISTRATOR) || role.getName().equals(RoleConstants.OWNER) || role.getName().equals(RoleConstants.COMMUNITY_ADMINISTRATOR)|| role.getName().equals(RoleConstants.COMMUNITY_OWNER)|| role.getName().equals(RoleConstants.ORGANIZATION_ADMINISTRATOR)|| role.getName().equals(RoleConstants.ORGANIZATION_OWNER)) {
    throw new RolePermissionsException(role.getName());
  }
  String portletResource=ParamUtil.getString(actionRequest,"portletResource");
  String[] modelResources=StringUtil.split(ParamUtil.getString(actionRequest,"modelResources"));
  Map<String,List<String>> resourceActionsMap=new HashMap<String,List<String>>();
  if (Validator.isNotNull(portletResource)) {
    resourceActionsMap.put(portletResource,ResourceActionsUtil.getResourceActions(portletResource,null));
  }
  for (  String modelResource : modelResources) {
    resourceActionsMap.put(modelResource,ResourceActionsUtil.getResourceActions(null,modelResource));
  }
  for (  Map.Entry<String,List<String>> entry : resourceActionsMap.entrySet()) {
    String selResource=entry.getKey();
    List<String> actions=entry.getValue();
    actions=ListUtil.sort(actions,new ActionComparator(themeDisplay.getCompanyId(),themeDisplay.getLocale()));
    for (    String actionId : actions) {
      if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
        updateAction_6(actionRequest,role,themeDisplay.getScopeGroupId(),selResource,actionId);
      }
 else {
        updateAction_1to5(actionRequest,role,themeDisplay.getScopeGroupId(),selResource,actionId);
      }
    }
  }
  SessionMessages.add(actionRequest,"permissionsUpdated");
  String redirect=ParamUtil.getString(actionRequest,"redirect") + "&" + Constants.CMD+ "="+ Constants.VIEW;
  actionResponse.sendRedirect(redirect);
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long roleId=ParamUtil.getLong(actionRequest,"roleId");
  long permissionId=ParamUtil.getLong(actionRequest,"permissionId");
  String name=ParamUtil.getString(actionRequest,"name");
  int scope=ParamUtil.getInteger(actionRequest,"scope");
  String primKey=ParamUtil.getString(actionRequest,"primKey");
  String actionId=ParamUtil.getString(actionRequest,"actionId");
  Role role=RoleLocalServiceUtil.getRole(roleId);
  if (role.getName().equals(RoleConstants.ADMINISTRATOR) || role.getName().equals(RoleConstants.OWNER) || role.getName().equals(RoleConstants.SITE_ADMINISTRATOR)|| role.getName().equals(RoleConstants.SITE_OWNER)|| role.getName().equals(RoleConstants.ORGANIZATION_ADMINISTRATOR)|| role.getName().equals(RoleConstants.ORGANIZATION_OWNER)) {
    throw new RolePermissionsException(role.getName());
  }
  if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
    ResourcePermissionServiceUtil.removeResourcePermission(themeDisplay.getScopeGroupId(),themeDisplay.getCompanyId(),name,scope,primKey,roleId,actionId);
  }
 else {
    PermissionServiceUtil.unsetRolePermission(roleId,themeDisplay.getScopeGroupId(),permissionId);
  }
  SessionMessages.add(actionRequest,"permissionDeleted");
  String redirect=ParamUtil.getString(actionRequest,"redirect");
  actionResponse.sendRedirect(redirect);
}

{
  String join=StringPool.BLANK;
  if (key.equals("contactTwitterSn")) {
    join=CustomSQLUtil.get(JOIN_BY_CONTACT_TWITTER_SN);
  }
 else   if (key.equals("groupsOrgs")) {
    Long[] groupIds=(Long[])value;
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_ORGS);
    if (groupIds.length > 1) {
      StringBundler sb=new StringBundler(groupIds.length * 2 + 1);
      sb.append("Groups_Orgs.groupId IN (");
      for (      long groupId : groupIds) {
        sb.append(groupId);
        sb.append(StringPool.COMMA);
      }
      sb.setIndex(sb.index() - 1);
      sb.append(StringPool.CLOSE_PARENTHESIS);
      join=StringUtil.replace(join,"Groups_Orgs.groupId = ?",sb.toString());
    }
 else {
      join=StringUtil.replace(join,"Groups_Orgs.groupId = ?","Groups_Orgs.groupId = " + groupIds[0]);
    }
  }
 else   if (key.equals("groupsUserGroups")) {
    Long[] groupIds=(Long[])value;
    join=CustomSQLUtil.get(JOIN_BY_GROUPS_USER_GROUPS);
    if (groupIds.length > 1) {
      StringBundler sb=new StringBundler(groupIds.length * 2 + 1);
      sb.append("Groups_UserGroups.groupId IN (");
      for (      long groupId : groupIds) {
        sb.append(groupId);
        sb.append(StringPool.COMMA);
      }
      sb.setIndex(sb.index() - 1);
      sb.append(StringPool.CLOSE_PARENTHESIS);
      join=StringUtil.replace(join,"Groups_UserGroups.groupId = ?",sb.toString());
    }
 else {
      join=StringUtil.replace(join,"Groups_UserGroups.groupId = ?","Groups_UserGroups.groupId = " + groupIds[0]);
    }
  }
 else   if (key.equals("noOrganizations")) {
    join=CustomSQLUtil.get(JOIN_BY_NO_ORGANIZATIONS);
  }
 else   if (key.equals("userGroupRole")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUP_ROLE);
    Long[] valueArray=(Long[])value;
    Long groupId=valueArray[0];
    if (Validator.isNull(groupId)) {
      join=StringUtil.replace(join,"(UserGroupRole.groupId = ?) AND",StringPool.BLANK);
    }
  }
 else   if (key.equals("usersGroups")) {
    if (value instanceof Long) {
      join=CustomSQLUtil.get(JOIN_BY_USERS_GROUPS);
    }
 else     if (value instanceof Long[]) {
      Long[] groupIds=(Long[])value;
      if (groupIds.length > 1) {
        StringBundler sb=new StringBundler(groupIds.length * 2 + 1);
        sb.append("WHERE (Users_Groups.groupId IN (");
        for (        long groupId : groupIds) {
          sb.append(groupId);
          sb.append(StringPool.COMMA);
        }
        sb.setIndex(sb.index() - 1);
        sb.append("))");
        join=sb.toString();
      }
 else {
        join="WHERE (Users_Groups.groupId = " + groupIds[0] + ")";
      }
    }
  }
 else   if (key.equals("usersOrgs")) {
    if (value instanceof Long) {
      join=CustomSQLUtil.get(JOIN_BY_USERS_ORGS);
    }
 else     if (value instanceof Long[]) {
      Long[] organizationIds=(Long[])value;
      if (organizationIds.length > 1) {
        StringBundler sb=new StringBundler(organizationIds.length * 2 + 1);
        sb.append("WHERE (Users_Orgs.organizationId IN (");
        for (        long organizationId : organizationIds) {
          sb.append(organizationId);
          sb.append(StringPool.COMMA);
        }
        sb.setIndex(sb.index() - 1);
        sb.append("))");
        join=sb.toString();
      }
 else {
        join="WHERE (Users_Orgs.organizationId = " + organizationIds[0] + ")";
      }
    }
  }
 else   if (key.equals("usersOrgsTree")) {
    List<Organization> organizationsTree=(List<Organization>)value;
    int size=organizationsTree.size();
    if (size > 0) {
      StringBundler sb=new StringBundler(size * 3 + 1);
      sb.append("WHERE (");
      for (      Organization organization : organizationsTree) {
        sb.append("(Organization_.treePath LIKE '%/");
        sb.append(organization.getOrganizationId());
        sb.append("/%') OR ");
      }
      sb.setIndex(sb.index() - 1);
      sb.append(StringPool.CLOSE_PARENTHESIS);
      join=sb.toString();
    }
 else {
      join="WHERE (Organization_.treePath LIKE '%/ /%')";
    }
  }
 else   if (key.equals("usersPasswordPolicies")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_PASSWORD_POLICIES);
  }
 else   if (key.equals("usersRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_ROLES);
  }
 else   if (key.equals("usersTeams")) {
    join=CustomSQLUtil.get(JOIN_BY_USERS_TEAMS);
  }
 else   if (key.equals("usersUserGroups")) {
    if (value instanceof Long) {
      join=CustomSQLUtil.get(JOIN_BY_USERS_USER_GROUPS);
    }
 else     if (value instanceof Long[]) {
      Long[] userGroupIds=(Long[])value;
      if (userGroupIds.length > 1) {
        StringBundler sb=new StringBundler(userGroupIds.length * 2 + 1);
        sb.append("WHERE (Users_UserGroups.userGroupId IN (");
        for (        long userGroupId : userGroupIds) {
          sb.append(userGroupId);
          sb.append(StringPool.COMMA);
        }
        sb.setIndex(sb.index() - 1);
        sb.append("))");
        join=sb.toString();
      }
 else {
        join="WHERE (Users_UserGroups.userGroupId = " + userGroupIds[0] + ")";
      }
    }
  }
 else   if (key.equals("announcementsDeliveryEmailOrSms")) {
    join=CustomSQLUtil.get(JOIN_BY_ANNOUNCEMENTS_DELIVERY_EMAIL_OR_SMS);
  }
 else   if (key.equals("socialMutualRelation")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_MUTUAL_RELATION);
  }
 else   if (key.equals("socialMutualRelationType")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_MUTUAL_RELATION_TYPE);
  }
 else   if (key.equals("socialRelation")) {
    join=CustomSQLUtil.get(JOIN_BY_SOCIAL_RELATION);
  }
 else   if (key.equals("socialRelationType")) {
    if (value instanceof Long[]) {
      join=CustomSQLUtil.get(JOIN_BY_SOCIAL_RELATION_TYPE);
    }
 else     if (value instanceof Long[][]) {
      StringBundler sb=new StringBundler();
      sb.append("WHERE (SocialRelation.userId1 = ?) AND ");
      sb.append("(SocialRelation.type_ IN (");
      Long[][] valueDoubleArray=(Long[][])value;
      Long[] socialRelationTypes=valueDoubleArray[1];
      for (int i=0; i < socialRelationTypes.length; i++) {
        sb.append(StringPool.QUESTION);
        if ((i + 1) < socialRelationTypes.length) {
          sb.append(StringPool.COMMA);
        }
      }
      sb.append("))");
      join=sb.toString();
    }
  }
 else   if (value instanceof CustomSQLParam) {
    CustomSQLParam customSQLParam=(CustomSQLParam)value;
    join=customSQLParam.getSQL();
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      join=join.substring(pos + 5,join.length()).concat(" AND ");
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

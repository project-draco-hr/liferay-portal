{
  long pk=RandomTestUtil.nextLong();
  ClusterGroup newClusterGroup=_persistence.create(pk);
  newClusterGroup.setMvccVersion(RandomTestUtil.nextLong());
  newClusterGroup.setName(RandomTestUtil.randomString());
  newClusterGroup.setClusterNodeIds(RandomTestUtil.randomString());
  newClusterGroup.setWholeCluster(RandomTestUtil.randomBoolean());
  _models.add(_persistence.update(newClusterGroup));
  ClusterGroup existingClusterGroup=_persistence.findByPrimaryKey(newClusterGroup.getPrimaryKey());
  Assert.assertEquals(existingClusterGroup.getMvccVersion(),newClusterGroup.getMvccVersion());
  Assert.assertEquals(existingClusterGroup.getClusterGroupId(),newClusterGroup.getClusterGroupId());
  Assert.assertEquals(existingClusterGroup.getName(),newClusterGroup.getName());
  Assert.assertEquals(existingClusterGroup.getClusterNodeIds(),newClusterGroup.getClusterNodeIds());
  Assert.assertEquals(existingClusterGroup.getWholeCluster(),newClusterGroup.getWholeCluster());
}

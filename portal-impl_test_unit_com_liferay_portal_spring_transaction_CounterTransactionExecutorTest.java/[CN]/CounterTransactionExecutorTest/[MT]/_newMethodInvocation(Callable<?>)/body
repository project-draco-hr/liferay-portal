{
  return (MethodInvocation)ProxyUtil.newProxyInstance(MethodInvocation.class.getClassLoader(),new Class<?>[]{MethodInvocation.class},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Exception {
      if ("proceed".equals(method.getName())) {
        return callable.call();
      }
      throw new UnsupportedOperationException(method.toString());
    }
  }
);
}

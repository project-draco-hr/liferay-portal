{
  long pk=nextLong();
  MBMessage newMBMessage=_persistence.create(pk);
  newMBMessage.setUuid(randomString());
  newMBMessage.setGroupId(nextLong());
  newMBMessage.setCompanyId(nextLong());
  newMBMessage.setUserId(nextLong());
  newMBMessage.setUserName(randomString());
  newMBMessage.setCreateDate(nextDate());
  newMBMessage.setModifiedDate(nextDate());
  newMBMessage.setClassNameId(nextLong());
  newMBMessage.setClassPK(nextLong());
  newMBMessage.setCategoryId(nextLong());
  newMBMessage.setThreadId(nextLong());
  newMBMessage.setParentMessageId(nextLong());
  newMBMessage.setSubject(randomString());
  newMBMessage.setBody(randomString());
  newMBMessage.setAttachments(randomBoolean());
  newMBMessage.setAnonymous(randomBoolean());
  newMBMessage.setPriority(nextDouble());
  newMBMessage.setStatus(nextInt());
  newMBMessage.setStatusByUserId(nextLong());
  newMBMessage.setStatusByUserName(randomString());
  newMBMessage.setStatusDate(nextDate());
  newMBMessage.setDiscussion(randomBoolean());
  _persistence.update(newMBMessage,false);
  MBMessage existingMBMessage=_persistence.findByPrimaryKey(newMBMessage.getPrimaryKey());
  assertEquals(existingMBMessage.getUuid(),newMBMessage.getUuid());
  assertEquals(existingMBMessage.getMessageId(),newMBMessage.getMessageId());
  assertEquals(existingMBMessage.getGroupId(),newMBMessage.getGroupId());
  assertEquals(existingMBMessage.getCompanyId(),newMBMessage.getCompanyId());
  assertEquals(existingMBMessage.getUserId(),newMBMessage.getUserId());
  assertEquals(existingMBMessage.getUserName(),newMBMessage.getUserName());
  assertEquals(Time.getShortTimestamp(existingMBMessage.getCreateDate()),Time.getShortTimestamp(newMBMessage.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingMBMessage.getModifiedDate()),Time.getShortTimestamp(newMBMessage.getModifiedDate()));
  assertEquals(existingMBMessage.getClassNameId(),newMBMessage.getClassNameId());
  assertEquals(existingMBMessage.getClassPK(),newMBMessage.getClassPK());
  assertEquals(existingMBMessage.getCategoryId(),newMBMessage.getCategoryId());
  assertEquals(existingMBMessage.getThreadId(),newMBMessage.getThreadId());
  assertEquals(existingMBMessage.getParentMessageId(),newMBMessage.getParentMessageId());
  assertEquals(existingMBMessage.getSubject(),newMBMessage.getSubject());
  assertEquals(existingMBMessage.getBody(),newMBMessage.getBody());
  assertEquals(existingMBMessage.getAttachments(),newMBMessage.getAttachments());
  assertEquals(existingMBMessage.getAnonymous(),newMBMessage.getAnonymous());
  assertEquals(existingMBMessage.getPriority(),newMBMessage.getPriority());
  assertEquals(existingMBMessage.getStatus(),newMBMessage.getStatus());
  assertEquals(existingMBMessage.getStatusByUserId(),newMBMessage.getStatusByUserId());
  assertEquals(existingMBMessage.getStatusByUserName(),newMBMessage.getStatusByUserName());
  assertEquals(Time.getShortTimestamp(existingMBMessage.getStatusDate()),Time.getShortTimestamp(newMBMessage.getStatusDate()));
  assertEquals(existingMBMessage.getDiscussion(),newMBMessage.getDiscussion());
}

{
  if (_log.isDebugEnabled()) {
    _log.debug("Disable transactions");
  }
  PropsValues.SPRING_HIBERNATE_SESSION_DELEGATED=false;
  try {
    Field field=ReflectionUtil.getDeclaredField(ServiceBeanAopCacheManager.class,"_annotations");
    field.set(null,new HashMap<MethodInvocation,Annotation[]>(){
      @Override public Annotation[] get(      Object key){
        return _annotations;
      }
      private Annotation[] _annotations=new Annotation[]{new Skip(){
        @Override public Class<? extends Annotation> annotationType(){
          return Skip.class;
        }
      }
};
    }
);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unexpected error disabling transactions",e);
  }
}

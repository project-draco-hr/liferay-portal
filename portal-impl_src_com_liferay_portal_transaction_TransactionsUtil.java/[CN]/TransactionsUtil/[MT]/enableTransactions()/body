{
  if (_log.isDebugEnabled()) {
    _log.debug("Enable transactions");
  }
  PropsValues.SPRING_HIBERNATE_SESSION_DELEGATED=GetterUtil.getBoolean(PropsUtil.get(PropsKeys.SPRING_HIBERNATE_SESSION_DELEGATED));
  try {
    Field field=ReflectionUtil.getDeclaredField(ServiceBeanAopCacheManager.class,"_annotations");
    field.set(null,new ConcurrentHashMap<MethodInvocation,Annotation[]>());
    ServiceBeanAopCacheManagerUtil.reset();
  }
 catch (  Exception e) {
    throw new RuntimeException("Unexpected error disabling transactions",e);
  }
}

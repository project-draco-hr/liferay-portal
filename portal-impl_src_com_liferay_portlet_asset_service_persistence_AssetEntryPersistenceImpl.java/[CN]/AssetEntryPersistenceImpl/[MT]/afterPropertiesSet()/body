{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portlet.asset.model.AssetEntry")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<AssetEntry>> listenersList=new ArrayList<ModelListener<AssetEntry>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<AssetEntry>)InstanceFactory.newInstance(listenerClassName));
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsAssetCategory=new ContainsAssetCategory();
  addAssetCategory=new AddAssetCategory();
  clearAssetCategories=new ClearAssetCategories();
  removeAssetCategory=new RemoveAssetCategory();
  containsAssetTag=new ContainsAssetTag();
  addAssetTag=new AddAssetTag();
  clearAssetTags=new ClearAssetTags();
  removeAssetTag=new RemoveAssetTag();
}

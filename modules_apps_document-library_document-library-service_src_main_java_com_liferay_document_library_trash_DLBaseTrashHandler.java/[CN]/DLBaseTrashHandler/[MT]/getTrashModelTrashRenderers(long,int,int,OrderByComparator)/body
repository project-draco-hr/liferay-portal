{
  List<TrashRenderer> trashRenderers=new ArrayList<>();
  DocumentRepository documentRepository=getDocumentRepository(classPK);
  List<RepositoryEntry> entries=documentRepository.getFoldersAndFileEntriesAndFileShortcuts(classPK,WorkflowConstants.STATUS_IN_TRASH,false,start,end,obc);
  for (  RepositoryEntry repositoryEntry : entries) {
    TrashRenderer trashRenderer=null;
    if (repositoryEntry instanceof FileShortcut) {
      FileShortcut fileShortcut=(FileShortcut)repositoryEntry;
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(DLFileShortcutConstants.getClassName());
      trashRenderer=trashHandler.getTrashRenderer(fileShortcut.getPrimaryKey());
    }
 else     if (repositoryEntry instanceof FileEntry) {
      FileEntry fileEntry=(FileEntry)repositoryEntry;
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(DLFileEntry.class.getName());
      trashRenderer=trashHandler.getTrashRenderer(fileEntry.getPrimaryKey());
    }
 else {
      Folder folder=(Folder)repositoryEntry;
      TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(DLFolder.class.getName());
      trashRenderer=trashHandler.getTrashRenderer(folder.getPrimaryKey());
    }
    trashRenderers.add(trashRenderer);
  }
  return trashRenderers;
}

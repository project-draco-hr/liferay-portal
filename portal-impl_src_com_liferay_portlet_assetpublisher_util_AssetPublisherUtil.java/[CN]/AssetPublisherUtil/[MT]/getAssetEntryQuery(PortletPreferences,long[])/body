{
  AssetEntryQuery assetEntryQuery=new AssetEntryQuery();
  long[] allAssetCategoryIds=new long[0];
  long[] anyAssetCategoryIds=new long[0];
  long[] notAllAssetCategoryIds=new long[0];
  long[] notAnyAssetCategoryIds=new long[0];
  String[] allAssetTagNames=new String[0];
  String[] anyAssetTagNames=new String[0];
  String[] notAllAssetTagNames=new String[0];
  String[] notAnyAssetTagNames=new String[0];
  for (int i=0; true; i++) {
    String[] queryValues=preferences.getValues("queryValues" + i,null);
    if ((queryValues == null) || (queryValues.length == 0)) {
      break;
    }
    boolean queryContains=GetterUtil.getBoolean(preferences.getValue("queryContains" + i,StringPool.BLANK));
    boolean queryAndOperator=GetterUtil.getBoolean(preferences.getValue("queryAndOperator" + i,StringPool.BLANK));
    String queryName=preferences.getValue("queryName" + i,StringPool.BLANK);
    if (Validator.equals(queryName,"assetCategories")) {
      long[] assetCategoryIds=GetterUtil.getLongValues(queryValues);
      if (queryContains && (queryAndOperator || assetCategoryIds.length == 1)) {
        allAssetCategoryIds=assetCategoryIds;
      }
 else       if (queryContains && !queryAndOperator) {
        anyAssetCategoryIds=assetCategoryIds;
      }
 else       if (!queryContains && queryAndOperator) {
        notAllAssetCategoryIds=assetCategoryIds;
      }
 else {
        notAnyAssetCategoryIds=assetCategoryIds;
      }
    }
 else {
      if (queryContains && queryAndOperator) {
        allAssetTagNames=queryValues;
      }
 else       if (queryContains && !queryAndOperator) {
        anyAssetTagNames=queryValues;
      }
 else       if (!queryContains && queryAndOperator) {
        notAllAssetTagNames=queryValues;
      }
 else {
        notAnyAssetTagNames=queryValues;
      }
    }
  }
  long[] allAssetTagIds=AssetTagLocalServiceUtil.getTagIds(scopeGroupIds,allAssetTagNames);
  long[] anyAssetTagIds=AssetTagLocalServiceUtil.getTagIds(scopeGroupIds,anyAssetTagNames);
  long[] notAllAssetTagIds=AssetTagLocalServiceUtil.getTagIds(scopeGroupIds,notAllAssetTagNames);
  long[] notAnyAssetTagIds=AssetTagLocalServiceUtil.getTagIds(scopeGroupIds,notAnyAssetTagNames);
  assetEntryQuery.setAllCategoryIds(allAssetCategoryIds);
  assetEntryQuery.setAllTagIds(allAssetTagIds);
  assetEntryQuery.setAnyCategoryIds(anyAssetCategoryIds);
  assetEntryQuery.setAnyTagIds(anyAssetTagIds);
  assetEntryQuery.setNotAllCategoryIds(notAllAssetCategoryIds);
  assetEntryQuery.setNotAllTagIds(notAllAssetTagIds);
  assetEntryQuery.setNotAnyCategoryIds(notAnyAssetCategoryIds);
  assetEntryQuery.setNotAnyTagIds(notAnyAssetTagIds);
  return assetEntryQuery;
}

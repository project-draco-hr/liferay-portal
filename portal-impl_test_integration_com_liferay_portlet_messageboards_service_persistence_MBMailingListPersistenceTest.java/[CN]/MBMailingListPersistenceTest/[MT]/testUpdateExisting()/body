{
  long pk=ServiceTestUtil.nextLong();
  MBMailingList newMBMailingList=_persistence.create(pk);
  newMBMailingList.setUuid(ServiceTestUtil.randomString());
  newMBMailingList.setGroupId(ServiceTestUtil.nextLong());
  newMBMailingList.setCompanyId(ServiceTestUtil.nextLong());
  newMBMailingList.setUserId(ServiceTestUtil.nextLong());
  newMBMailingList.setUserName(ServiceTestUtil.randomString());
  newMBMailingList.setCreateDate(ServiceTestUtil.nextDate());
  newMBMailingList.setModifiedDate(ServiceTestUtil.nextDate());
  newMBMailingList.setCategoryId(ServiceTestUtil.nextLong());
  newMBMailingList.setEmailAddress(ServiceTestUtil.randomString());
  newMBMailingList.setInProtocol(ServiceTestUtil.randomString());
  newMBMailingList.setInServerName(ServiceTestUtil.randomString());
  newMBMailingList.setInServerPort(ServiceTestUtil.nextInt());
  newMBMailingList.setInUseSSL(ServiceTestUtil.randomBoolean());
  newMBMailingList.setInUserName(ServiceTestUtil.randomString());
  newMBMailingList.setInPassword(ServiceTestUtil.randomString());
  newMBMailingList.setInReadInterval(ServiceTestUtil.nextInt());
  newMBMailingList.setOutEmailAddress(ServiceTestUtil.randomString());
  newMBMailingList.setOutCustom(ServiceTestUtil.randomBoolean());
  newMBMailingList.setOutServerName(ServiceTestUtil.randomString());
  newMBMailingList.setOutServerPort(ServiceTestUtil.nextInt());
  newMBMailingList.setOutUseSSL(ServiceTestUtil.randomBoolean());
  newMBMailingList.setOutUserName(ServiceTestUtil.randomString());
  newMBMailingList.setOutPassword(ServiceTestUtil.randomString());
  newMBMailingList.setAllowAnonymous(ServiceTestUtil.randomBoolean());
  newMBMailingList.setActive(ServiceTestUtil.randomBoolean());
  _persistence.update(newMBMailingList,false);
  MBMailingList existingMBMailingList=_persistence.findByPrimaryKey(newMBMailingList.getPrimaryKey());
  Assert.assertEquals(existingMBMailingList.getUuid(),newMBMailingList.getUuid());
  Assert.assertEquals(existingMBMailingList.getMailingListId(),newMBMailingList.getMailingListId());
  Assert.assertEquals(existingMBMailingList.getGroupId(),newMBMailingList.getGroupId());
  Assert.assertEquals(existingMBMailingList.getCompanyId(),newMBMailingList.getCompanyId());
  Assert.assertEquals(existingMBMailingList.getUserId(),newMBMailingList.getUserId());
  Assert.assertEquals(existingMBMailingList.getUserName(),newMBMailingList.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMBMailingList.getCreateDate()),Time.getShortTimestamp(newMBMailingList.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMBMailingList.getModifiedDate()),Time.getShortTimestamp(newMBMailingList.getModifiedDate()));
  Assert.assertEquals(existingMBMailingList.getCategoryId(),newMBMailingList.getCategoryId());
  Assert.assertEquals(existingMBMailingList.getEmailAddress(),newMBMailingList.getEmailAddress());
  Assert.assertEquals(existingMBMailingList.getInProtocol(),newMBMailingList.getInProtocol());
  Assert.assertEquals(existingMBMailingList.getInServerName(),newMBMailingList.getInServerName());
  Assert.assertEquals(existingMBMailingList.getInServerPort(),newMBMailingList.getInServerPort());
  Assert.assertEquals(existingMBMailingList.getInUseSSL(),newMBMailingList.getInUseSSL());
  Assert.assertEquals(existingMBMailingList.getInUserName(),newMBMailingList.getInUserName());
  Assert.assertEquals(existingMBMailingList.getInPassword(),newMBMailingList.getInPassword());
  Assert.assertEquals(existingMBMailingList.getInReadInterval(),newMBMailingList.getInReadInterval());
  Assert.assertEquals(existingMBMailingList.getOutEmailAddress(),newMBMailingList.getOutEmailAddress());
  Assert.assertEquals(existingMBMailingList.getOutCustom(),newMBMailingList.getOutCustom());
  Assert.assertEquals(existingMBMailingList.getOutServerName(),newMBMailingList.getOutServerName());
  Assert.assertEquals(existingMBMailingList.getOutServerPort(),newMBMailingList.getOutServerPort());
  Assert.assertEquals(existingMBMailingList.getOutUseSSL(),newMBMailingList.getOutUseSSL());
  Assert.assertEquals(existingMBMailingList.getOutUserName(),newMBMailingList.getOutUserName());
  Assert.assertEquals(existingMBMailingList.getOutPassword(),newMBMailingList.getOutPassword());
  Assert.assertEquals(existingMBMailingList.getAllowAnonymous(),newMBMailingList.getAllowAnonymous());
  Assert.assertEquals(existingMBMailingList.getActive(),newMBMailingList.getActive());
}

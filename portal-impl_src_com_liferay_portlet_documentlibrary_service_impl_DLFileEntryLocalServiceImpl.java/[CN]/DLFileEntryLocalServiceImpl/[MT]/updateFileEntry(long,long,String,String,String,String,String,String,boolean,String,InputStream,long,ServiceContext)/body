{
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  boolean autoCheckIn=!dlFileEntry.isCheckedOut();
  dlFileEntry=checkOutFileEntry(userId,fileEntryId);
  if (Validator.isNull(extension)) {
    extension=dlFileEntry.getExtension();
  }
  if (Validator.isNull(mimeType)) {
    mimeType=dlFileEntry.getMimeType();
  }
  if (Validator.isNull(title)) {
    title=sourceFileName;
    if (Validator.isNull(title)) {
      title=dlFileEntry.getTitle();
    }
  }
  Long documentTypeId=(Long)serviceContext.getAttribute("documentTypeId");
  if (documentTypeId == null) {
    documentTypeId=0L;
  }
  Date now=new Date();
  validateFile(dlFileEntry.getGroupId(),dlFileEntry.getFolderId(),dlFileEntry.getFileEntryId(),dlFileEntry.getExtension(),title,sourceFileName,is);
  DLFileVersion dlFileVersion=dlFileEntry.getLatestFileVersion();
  String version=dlFileVersion.getVersion();
  if (size == 0) {
    size=dlFileVersion.getSize();
  }
  updateFileVersion(user,dlFileVersion,sourceFileName,extension,mimeType,title,description,changeLog,extraSettings,documentTypeId,version,size,dlFileVersion.getStatus(),serviceContext.getModifiedDate(now),serviceContext);
  if (is != null) {
    try {
      dlLocalService.deleteFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),version);
    }
 catch (    NoSuchFileException nsfe) {
    }
    dlLocalService.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getGroupId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),dlFileEntry.getExtension(),false,version,sourceFileName,dlFileEntry.getFileEntryId(),dlFileEntry.getLuceneProperties(),dlFileEntry.getModifiedDate(),serviceContext,is);
  }
  updateAsset(userId,dlFileEntry,dlFileVersion,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames(),serviceContext.getAssetLinkEntryIds());
  if (autoCheckIn) {
    checkInFileEntry(userId,fileEntryId,majorVersion,changeLog,serviceContext);
  }
  return dlFileEntry;
}

{
  String mimeType=MimeTypesUtil.getContentType(fileEntry.getTitle());
  boolean addDraftAssetEntry=false;
  if ((fileVersion != null) && !fileVersion.isApproved() && (fileVersion.getVersion() != DLFileEntryConstants.DEFAULT_VERSION)) {
    int approvedArticlesCount=dlFileVersionPersistence.countByG_F_N_S(fileEntry.getGroupId(),fileEntry.getFolderId(),fileEntry.getName(),WorkflowConstants.STATUS_APPROVED);
    if (approvedArticlesCount > 0) {
      addDraftAssetEntry=true;
    }
  }
  if (addDraftAssetEntry) {
    assetEntryLocalService.updateEntry(userId,fileEntry.getGroupId(),DLFileEntry.class.getName(),fileVersion.getFileVersionId(),fileEntry.getUuid(),assetCategoryIds,assetTagNames,false,null,null,null,null,mimeType,fileEntry.getTitle(),fileEntry.getDescription(),null,null,0,0,null,false);
  }
 else {
    boolean visible=true;
    if ((fileVersion != null) && !fileVersion.isApproved()) {
      visible=false;
    }
    assetEntryLocalService.updateEntry(userId,fileEntry.getGroupId(),DLFileEntry.class.getName(),fileEntry.getFileEntryId(),fileEntry.getUuid(),assetCategoryIds,assetTagNames,visible,null,null,null,null,mimeType,fileEntry.getTitle(),fileEntry.getDescription(),null,null,0,0,null,false);
    List<DLFileShortcut> fileShortcuts=dlFileShortcutPersistence.findByG_TF_TN(fileEntry.getGroupId(),fileEntry.getFolderId(),fileEntry.getName());
    for (    DLFileShortcut fileShortcut : fileShortcuts) {
      assetEntryLocalService.updateEntry(userId,fileShortcut.getGroupId(),DLFileShortcut.class.getName(),fileShortcut.getFileShortcutId(),fileShortcut.getUuid(),assetCategoryIds,assetTagNames,true,null,null,null,null,mimeType,fileEntry.getTitle(),fileEntry.getDescription(),null,null,0,0,null,false);
    }
  }
}

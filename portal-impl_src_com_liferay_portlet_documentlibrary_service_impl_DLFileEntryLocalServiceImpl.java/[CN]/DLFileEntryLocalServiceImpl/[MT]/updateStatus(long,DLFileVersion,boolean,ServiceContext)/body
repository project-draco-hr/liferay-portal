{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  fileVersion.setStatus(serviceContext.getStatus());
  fileVersion.setStatusByUserId(user.getUserId());
  fileVersion.setStatusByUserName(user.getFullName());
  fileVersion.setStatusDate(now);
  dlFileVersionPersistence.update(fileVersion,false);
  DLFileEntry fileEntry=dlFileEntryLocalService.getFileEntry(fileVersion.getGroupId(),fileVersion.getFolderId(),fileVersion.getName());
  if ((serviceContext.getStatus() == StatusConstants.APPROVED) && (fileEntry.getVersion() < fileVersion.getVersion())) {
    fileEntry.setVersion(fileVersion.getVersion());
    dlFileEntryPersistence.update(fileEntry,false);
  }
 else   if ((serviceContext.getStatus() != StatusConstants.APPROVED) && (fileEntry.getVersion() == fileVersion.getVersion())) {
    double newVersion=0;
    if (fileVersion.getVersion() > 1) {
      List<DLFileVersion> approvedVersions=dlFileVersionPersistence.findByG_F_N_S(fileEntry.getGroupId(),fileEntry.getFolderId(),fileEntry.getName(),StatusConstants.APPROVED);
      if (approvedVersions.size() > 0) {
        newVersion=approvedVersions.get(0).getVersion();
      }
    }
    fileEntry.setPendingVersion(fileVersion.getVersion());
    fileEntry.setVersion(newVersion);
    dlFileEntryPersistence.update(fileEntry,false);
  }
  if ((serviceContext.getStatus() == StatusConstants.APPROVED) && (fileEntry.getVersion() == fileVersion.getVersion())) {
    assetEntryLocalService.updateVisible(DLFileEntry.class.getName(),fileEntry.getFileEntryId(),true);
  }
  if (fileEntry.getVersion() == 0) {
    assetEntryLocalService.updateVisible(DLFileEntry.class.getName(),fileEntry.getFileEntryId(),false);
  }
  if (reIndex) {
    dlFileEntryLocalService.reIndex(fileEntry.getFileEntryId());
  }
  return fileEntry;
}

{
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  boolean hasLock=hasFileEntryLock(userId,fileEntryId);
  if (!hasLock) {
    if ((expirationTime <= 0) || (expirationTime > DLFileEntryImpl.LOCK_EXPIRATION_TIME)) {
      expirationTime=DLFileEntryImpl.LOCK_EXPIRATION_TIME;
    }
    lockLocalService.lock(userId,DLFileEntry.class.getName(),fileEntryId,owner,false,expirationTime);
  }
  User user=userPersistence.findByPrimaryKey(userId);
  dlFileEntryPersistence.update(dlFileEntry,false);
  DLFileVersion dlFileVersion=getLatestFileVersion(fileEntryId);
  String version=dlFileVersion.getVersion();
  if (!version.equals(DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION)) {
    ServiceContext serviceContext=new ServiceContext();
    HashMap<Long,Fields> fieldsMap=new HashMap<Long,Fields>();
    if (dlFileVersion.getDocumentTypeId() > 0) {
      fieldsMap=getDocumentMetadataFieldsMap(dlFileVersion.getDocumentTypeId(),dlFileVersion.getFileVersionId());
    }
    serviceContext.setAttribute("fieldsMap",fieldsMap);
    dlFileVersion=addFileVersion(user,dlFileEntry,new Date(),dlFileVersion.getExtension(),dlFileVersion.getMimeType(),dlFileVersion.getTitle(),dlFileVersion.getDescription(),dlFileVersion.getChangeLog(),dlFileVersion.getExtraSettings(),dlFileVersion.getDocumentTypeId(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION,dlFileVersion.getSize(),WorkflowConstants.STATUS_DRAFT,serviceContext);
    File file=getFile(dlFileEntry);
    InputStream is;
    try {
      is=new FileInputStream(file);
    }
 catch (    FileNotFoundException fnfe) {
      throw new NoSuchFileException(fnfe);
    }
    try {
      dlLocalService.deleteFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
    }
 catch (    NoSuchFileException nsfe) {
    }
    dlLocalService.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getGroupId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),dlFileEntry.getExtension(),false,DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION,dlFileVersion.getTitle(),dlFileEntry.getFileEntryId(),dlFileEntry.getLuceneProperties(),dlFileEntry.getModifiedDate(),new ServiceContext(),is);
    updateAsset(userId,dlFileEntry,dlFileVersion,fileEntryId);
  }
  return dlFileEntry;
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  if (dlFileEntry.isCheckedOut() && (userId != dlFileEntry.getCheckoutUserId())) {
    throw new DuplicateCheckOutException();
  }
 else   if (dlFileEntry.isCheckedOut()) {
    return dlFileEntry;
  }
  Date now=new Date();
  dlFileEntry.setCheckedOut(true);
  dlFileEntry.setCheckoutDate(now);
  dlFileEntry.setCheckoutOwner(owner);
  dlFileEntry.setCheckoutUserId(userId);
  dlFileEntry.setCheckoutUserName(user.getFullName());
  dlFileEntry.setCheckoutUserUuid(user.getUserUuid());
  if (expirationTime == 0) {
    dlFileEntry.setCheckoutExpirationDate(null);
  }
 else {
    dlFileEntry.setCheckoutExpirationDate(new Date(now.getTime() + expirationTime));
  }
  dlFileEntryPersistence.update(dlFileEntry,false);
  DLFileVersion dlFileVersion=getLatestFileVersion(fileEntryId);
  if (!dlFileVersion.equals(DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION)) {
    String version=DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION;
    dlFileVersion=addFileVersion(user,dlFileEntry,new Date(),dlFileVersion.getExtension(),dlFileVersion.getMimeType(),dlFileVersion.getTitle(),dlFileVersion.getDescription(),dlFileVersion.getChangeLog(),dlFileVersion.getExtraSettings(),dlFileVersion.getDocumentTypeId(),version,dlFileVersion.getSize(),WorkflowConstants.STATUS_DRAFT,new ServiceContext());
    File file=getAsFile(dlFileEntry);
    InputStream is;
    try {
      is=new FileInputStream(file);
    }
 catch (    FileNotFoundException fnfe) {
      throw new NoSuchFileException(fnfe);
    }
    try {
      dlLocalService.deleteFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),version);
    }
 catch (    NoSuchFileException nsfe) {
    }
    dlLocalService.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getGroupId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),dlFileEntry.getExtension(),false,version,dlFileVersion.getTitle(),dlFileEntry.getFileEntryId(),dlFileEntry.getLuceneProperties(),dlFileEntry.getModifiedDate(),new ServiceContext(),is);
  }
  updateAsset(userId,dlFileEntry,dlFileVersion,null,null,null);
  return dlFileEntry;
}

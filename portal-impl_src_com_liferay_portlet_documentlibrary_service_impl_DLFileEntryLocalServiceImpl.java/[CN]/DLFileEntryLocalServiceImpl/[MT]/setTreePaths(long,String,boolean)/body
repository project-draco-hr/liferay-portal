{
  if (treePath == null) {
    throw new IllegalArgumentException("Cannot set null treePath");
  }
  ActionableDynamicQuery actionableDynamicQuery=getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property folderIdProperty=PropertyFactoryUtil.forName("folderId");
      dynamicQuery.add(folderIdProperty.eq(folderId));
      Property treePathProperty=PropertyFactoryUtil.forName("treePath");
      Criterion criterion=RestrictionsFactoryUtil.or(treePathProperty.isNull(),treePathProperty.ne(treePath));
      dynamicQuery.add(criterion);
    }
  }
);
  final Indexer indexer=IndexerRegistryUtil.getIndexer(DLFileEntry.class.getName());
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
    @Override public void performAction(    Object object) throws PortalException {
      DLFileEntry dlFileEntry=(DLFileEntry)object;
      dlFileEntry.setTreePath(treePath);
      updateDLFileEntry(dlFileEntry);
      if (!reindex) {
        return;
      }
      indexer.reindex(dlFileEntry);
    }
  }
);
  actionableDynamicQuery.performActions();
}

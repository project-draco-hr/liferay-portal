{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  DLFileEntry fileEntry=dlFileEntryPersistence.findByG_F_N(groupId,folderId,name);
  long oldFileEntryId=fileEntry.getFileEntryId();
  if (dlLocalService.hasFile(user.getCompanyId(),DLFileEntryImpl.getRepositoryId(groupId,newFolderId),name,StringPool.BLANK)) {
    throw new DuplicateFileException(name);
  }
  long newFileEntryId=counterLocalService.increment();
  DLFileEntry newFileEntry=dlFileEntryPersistence.create(newFileEntryId);
  newFileEntry.setGroupId(fileEntry.getGroupId());
  newFileEntry.setCompanyId(fileEntry.getCompanyId());
  newFileEntry.setUserId(fileEntry.getUserId());
  newFileEntry.setUserName(fileEntry.getUserName());
  newFileEntry.setVersionUserId(fileEntry.getVersionUserId());
  newFileEntry.setVersionUserName(fileEntry.getVersionUserName());
  newFileEntry.setCreateDate(fileEntry.getCreateDate());
  newFileEntry.setModifiedDate(fileEntry.getModifiedDate());
  newFileEntry.setFolderId(newFolderId);
  newFileEntry.setName(name);
  newFileEntry.setTitle(fileEntry.getTitle());
  newFileEntry.setDescription(fileEntry.getDescription());
  newFileEntry.setVersion(fileEntry.getVersion());
  newFileEntry.setSize(fileEntry.getSize());
  newFileEntry.setReadCount(fileEntry.getReadCount());
  newFileEntry.setExtraSettings(fileEntry.getExtraSettings());
  dlFileEntryPersistence.update(newFileEntry,false);
  dlFileEntryPersistence.remove(fileEntry);
  workflowInstanceLinkLocalService.updateClassPK(fileEntry.getCompanyId(),fileEntry.getGroupId(),DLFileEntry.class.getName(),oldFileEntryId,newFileEntryId);
  List<DLFileVersion> fileVersions=dlFileVersionPersistence.findByG_F_N(groupId,folderId,name);
  for (  DLFileVersion fileVersion : fileVersions) {
    long newFileVersionId=counterLocalService.increment();
    DLFileVersion newFileVersion=dlFileVersionPersistence.create(newFileVersionId);
    newFileVersion.setGroupId(fileVersion.getGroupId());
    newFileVersion.setCompanyId(fileVersion.getCompanyId());
    newFileVersion.setUserId(fileVersion.getUserId());
    newFileVersion.setUserName(fileVersion.getUserName());
    newFileVersion.setCreateDate(fileVersion.getCreateDate());
    newFileVersion.setFolderId(newFolderId);
    newFileVersion.setName(name);
    newFileVersion.setVersion(fileVersion.getVersion());
    newFileVersion.setSize(fileVersion.getSize());
    newFileVersion.setStatus(fileVersion.getStatus());
    newFileVersion.setStatusByUserId(userId);
    newFileVersion.setStatusByUserName(user.getFullName());
    newFileVersion.setStatusDate(serviceContext.getModifiedDate(now));
    dlFileVersionPersistence.update(newFileVersion,false);
    dlFileVersionPersistence.remove(fileVersion);
  }
  dlFileShortcutLocalService.updateFileShortcuts(groupId,folderId,name,newFolderId,name);
  Resource resource=resourceLocalService.getResource(fileEntry.getCompanyId(),DLFileEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(fileEntry.getFileEntryId()));
  resource.setPrimKey(String.valueOf(newFileEntryId));
  resourcePersistence.update(resource,false);
  assetEntryLocalService.deleteEntry(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
  List<DLFileShortcut> fileShortcuts=dlFileShortcutPersistence.findByG_TF_TN(groupId,folderId,name);
  for (  DLFileShortcut fileShortcut : fileShortcuts) {
    assetEntryLocalService.deleteEntry(DLFileShortcut.class.getName(),fileShortcut.getFileShortcutId());
  }
  expandoValueLocalService.deleteValues(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
  RatingsStats stats=ratingsStatsLocalService.getStats(DLFileEntry.class.getName(),oldFileEntryId);
  stats.setClassPK(newFileEntryId);
  ratingsStatsPersistence.update(stats,false);
  long classNameId=PortalUtil.getClassNameId(DLFileEntry.class.getName());
  List<RatingsEntry> entries=ratingsEntryPersistence.findByC_C(classNameId,oldFileEntryId);
  for (  RatingsEntry entry : entries) {
    entry.setClassPK(newFileEntryId);
    ratingsEntryPersistence.update(entry,false);
  }
  MBDiscussion discussion=mbDiscussionPersistence.fetchByC_C(classNameId,oldFileEntryId);
  if (discussion != null) {
    discussion.setClassPK(newFileEntryId);
    mbDiscussionPersistence.update(discussion,false);
  }
  socialActivityLocalService.deleteActivities(DLFileEntry.class.getName(),fileEntry.getFileEntryId());
  dlService.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,newFileEntry.getGroupId(),fileEntry.getRepositoryId(),newFileEntry.getRepositoryId(),name,newFileEntryId);
  return newFileEntry;
}

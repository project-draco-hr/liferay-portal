{
  if (!isFileEntryCheckedOut(fileEntryId)) {
    return;
  }
  if (!hasFileEntryLock(userId,fileEntryId)) {
    lockFileEntry(userId,fileEntryId);
  }
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  String version=getNextVersion(dlFileEntry,majorVersion,serviceContext.getWorkflowAction());
  DLFileVersion dlFileVersion=dlFileVersionLocalService.getLatestFileVersion(fileEntryId,false);
  dlFileVersion.setVersion(version);
  dlFileVersion.setChangeLog(changeLog);
  dlFileVersionPersistence.update(dlFileVersion,false);
  if (dlFileEntry.getFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    dlFolderLocalService.updateLastPostDate(dlFileEntry.getFolderId(),dlFileEntry.getModifiedDate());
  }
  DLStoreUtil.updateFileVersion(user.getCompanyId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION,version);
  if (serviceContext.getWorkflowAction() == WorkflowConstants.ACTION_PUBLISH) {
    doStartWorkflowInstance(userId,serviceContext,dlFileVersion,DLSyncConstants.EVENT_UPDATE);
  }
  lockLocalService.unlock(DLFileEntry.class.getName(),fileEntryId);
}

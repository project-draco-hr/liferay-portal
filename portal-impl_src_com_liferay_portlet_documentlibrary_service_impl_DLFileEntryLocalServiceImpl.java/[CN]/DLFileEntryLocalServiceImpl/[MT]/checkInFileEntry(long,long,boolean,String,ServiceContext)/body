{
  boolean hasLock=hasFileEntryLock(userId,fileEntryId);
  boolean isCheckedOut=isFileEntryCheckedOut(fileEntryId);
  if (!isCheckedOut) {
    return;
  }
  if (!hasLock) {
    lockFileEntry(userId,fileEntryId);
  }
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  String version=getNextVersion(dlFileEntry,majorVersion,serviceContext.getWorkflowAction());
  DLFileVersion dlFileVersion=getLatestFileVersion(fileEntryId);
  dlFileVersion.setVersion(version);
  dlFileVersion.setChangeLog(changeLog);
  dlFileVersionPersistence.update(dlFileVersion,false);
  updateAsset(userId,dlFileEntry,dlFileVersion,dlFileVersion.getFileVersionId());
  if (dlFileEntry.getFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    DLFolder dlFolder=dlFolderPersistence.findByPrimaryKey(dlFileEntry.getFolderId());
    dlFolder.setLastPostDate(dlFileEntry.getModifiedDate());
    dlFolderPersistence.update(dlFolder,false);
  }
  File file=getFile(dlFileEntry,DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
  InputStream is=null;
  if (file != null) {
    try {
      DLStoreUtil.deleteFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
    }
 catch (    NoSuchFileException nsfe) {
    }
    try {
      is=new FileInputStream(file);
    }
 catch (    IOException ioe) {
      throw new SystemException(ioe);
    }
    DLStoreUtil.updateFile(user.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getGroupId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),dlFileEntry.getExtension(),false,version,dlFileEntry.getTitle(),serviceContext,is);
    index(dlFileEntry,serviceContext);
  }
  if (serviceContext.getWorkflowAction() == WorkflowConstants.ACTION_PUBLISH) {
    WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),dlFileEntry.getGroupId(),userId,DLFileEntry.class.getName(),dlFileVersion.getFileVersionId(),dlFileVersion,serviceContext);
  }
  lockLocalService.unlock(DLFileEntry.class.getName(),fileEntryId);
}

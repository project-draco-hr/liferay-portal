{
  if (!isFileEntryCheckedOut(fileEntryId)) {
    return;
  }
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  boolean webDAVCheckInMode=GetterUtil.getBoolean(serviceContext.getAttribute(DL.WEBDAV_CHECK_IN_MODE));
  boolean manualCheckInRequired=dlFileEntry.getManualCheckInRequired();
  if (!webDAVCheckInMode && manualCheckInRequired) {
    dlFileEntry.setManualCheckInRequired(false);
    dlFileEntryPersistence.update(dlFileEntry);
  }
  DLFileVersion lastDLFileVersion=dlFileVersionLocalService.getFileVersion(dlFileEntry.getFileEntryId(),dlFileEntry.getVersion());
  DLFileVersion latestDLFileVersion=dlFileVersionLocalService.getLatestFileVersion(fileEntryId,false);
  boolean keepFileVersionLabel=!majorVersion && isKeepFileVersionLabel(dlFileEntry,lastDLFileVersion,latestDLFileVersion,serviceContext);
  if (keepFileVersionLabel) {
    if (lastDLFileVersion.getSize() != latestDLFileVersion.getSize()) {
      dlFileEntry.setExtension(latestDLFileVersion.getExtension());
      dlFileEntry.setMimeType(latestDLFileVersion.getMimeType());
      dlFileEntry.setSize(latestDLFileVersion.getSize());
      dlFileEntryPersistence.update(dlFileEntry);
      lastDLFileVersion.setExtension(latestDLFileVersion.getExtension());
      lastDLFileVersion.setMimeType(latestDLFileVersion.getMimeType());
      lastDLFileVersion.setSize(latestDLFileVersion.getSize());
      dlFileVersionPersistence.update(lastDLFileVersion);
      DLStoreUtil.deleteFile(user.getCompanyId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),lastDLFileVersion.getVersion());
      DLStoreUtil.copyFileVersion(user.getCompanyId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION,lastDLFileVersion.getVersion());
    }
    removeFileVersion(dlFileEntry,latestDLFileVersion);
  }
 else {
    String version=getNextVersion(dlFileEntry,majorVersion,serviceContext.getWorkflowAction());
    latestDLFileVersion.setVersion(version);
    latestDLFileVersion.setChangeLog(changeLog);
    dlFileVersionPersistence.update(latestDLFileVersion);
    if (dlFileEntry.getFolderId() != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
      dlFolderLocalService.updateLastPostDate(dlFileEntry.getFolderId(),latestDLFileVersion.getModifiedDate());
    }
    DLStoreUtil.updateFileVersion(user.getCompanyId(),dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION,version);
  }
  unlockFileEntry(fileEntryId);
}

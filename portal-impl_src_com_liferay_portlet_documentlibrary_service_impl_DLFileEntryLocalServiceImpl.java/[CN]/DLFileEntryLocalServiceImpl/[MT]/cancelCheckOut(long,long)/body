{
  boolean hasLock=hasFileEntryLock(userId,fileEntryId);
  boolean isCheckedOut=isFileEntryCheckedOut(fileEntryId);
  if (!isCheckedOut) {
    return;
  }
  if (!hasLock) {
    lockFileEntry(userId,fileEntryId);
  }
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  DLFileVersion dlFileVersion=dlFileVersionLocalService.getLatestFileVersion(fileEntryId,false);
  dlFileVersionPersistence.remove(dlFileVersion);
  try {
    DLStoreUtil.deleteFile(dlFileEntry.getCompanyId(),PortletKeys.DOCUMENT_LIBRARY,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName(),DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
  }
 catch (  NoSuchFileException nsfe) {
  }
  lockLocalService.unlock(DLFileEntry.class.getName(),fileEntryId);
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  DLFileEntry dlFileEntry=dlFileEntryPersistence.findByPrimaryKey(fileEntryId);
  long oldDataRepositoryId=dlFileEntry.getDataRepositoryId();
  validateFile(dlFileEntry.getGroupId(),newFolderId,dlFileEntry.getFileEntryId(),dlFileEntry.getTitle(),dlFileEntry.getExtension());
  if (DLStoreUtil.hasFile(user.getCompanyId(),DLFolderConstants.getDataRepositoryId(dlFileEntry.getGroupId(),newFolderId),dlFileEntry.getName(),StringPool.BLANK)) {
    throw new DuplicateFileException(dlFileEntry.getName());
  }
  dlFileEntry.setFolderId(newFolderId);
  dlFileEntry.setModifiedDate(serviceContext.getModifiedDate(null));
  dlFileEntryPersistence.update(dlFileEntry,false);
  DLFolder dlFolder=dlFolderPersistence.findByPrimaryKey(newFolderId);
  dlFolder.setModifiedDate(serviceContext.getModifiedDate(null));
  dlFolderPersistence.update(dlFolder,false);
  List<DLFileVersion> dlFileVersions=dlFileVersionPersistence.findByFileEntryId(fileEntryId);
  for (  DLFileVersion dlFileVersion : dlFileVersions) {
    dlFileVersion.setFolderId(newFolderId);
    dlFileVersionPersistence.update(dlFileVersion,false);
  }
  DLStoreUtil.updateFile(user.getCompanyId(),oldDataRepositoryId,dlFileEntry.getDataRepositoryId(),dlFileEntry.getName());
  return dlFileEntry;
}

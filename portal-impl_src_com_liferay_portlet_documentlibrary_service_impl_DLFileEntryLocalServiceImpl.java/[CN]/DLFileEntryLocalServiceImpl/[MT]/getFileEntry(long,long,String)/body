{
  DLFileEntry dlFileEntry=dlFileEntryPersistence.fetchByG_F_T(groupId,folderId,title);
  if (dlFileEntry != null) {
    setFileVersion(dlFileEntry);
    return dlFileEntry;
  }
  List<DLFileVersion> dlFileVersions=dlFileVersionPersistence.findByG_F_T_V(groupId,folderId,title,DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
  long userId=PrincipalThreadLocal.getUserId();
  for (  DLFileVersion dlFileVersion : dlFileVersions) {
    if (hasFileEntryLock(userId,dlFileVersion.getFileEntryId())) {
      return dlFileVersion.getFileEntry();
    }
  }
  StringBundler sb=new StringBundler(8);
  sb.append("No DLFileEntry exists with the key {");
  sb.append("groupId=");
  sb.append(groupId);
  sb.append(", folderId=");
  sb.append(folderId);
  sb.append(", title=");
  sb.append(title);
  sb.append(StringPool.CLOSE_CURLY_BRACE);
  if (_log.isWarnEnabled()) {
    _log.warn(sb.toString());
  }
  throw new NoSuchFileEntryException(sb.toString());
}

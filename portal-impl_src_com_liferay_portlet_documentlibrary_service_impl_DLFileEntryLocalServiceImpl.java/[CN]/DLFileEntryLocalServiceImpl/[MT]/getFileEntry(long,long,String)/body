{
  DLFileEntry dlFileEntry=dlFileEntryPersistence.fetchByG_F_T(groupId,folderId,title);
  if (dlFileEntry != null) {
    setFileVersion(dlFileEntry);
    return dlFileEntry;
  }
 else {
    List<DLFileVersion> dlFileVersions=dlFileVersionPersistence.findByG_F_T_V(groupId,folderId,title,DLFileEntryConstants.PRIVATE_WORKING_COPY_VERSION);
    long userId=PrincipalThreadLocal.getUserId();
    for (    DLFileVersion dlFileVersion : dlFileVersions) {
      if (hasFileEntryLock(userId,dlFileVersion.getFileEntryId())) {
        return dlFileVersion.getFileEntry();
      }
    }
    StringBundler msg=new StringBundler(8);
    msg.append("No DLFileEntry exists with the key {");
    msg.append("groupId=");
    msg.append(groupId);
    msg.append(", folderId=");
    msg.append(folderId);
    msg.append(", title=");
    msg.append(title);
    msg.append(StringPool.CLOSE_CURLY_BRACE);
    if (_log.isWarnEnabled()) {
      _log.warn(msg.toString());
    }
    throw new NoSuchFileEntryException(msg.toString());
  }
}

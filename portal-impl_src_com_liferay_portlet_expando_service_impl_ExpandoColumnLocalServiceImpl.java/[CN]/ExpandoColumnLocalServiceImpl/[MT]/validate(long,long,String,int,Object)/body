{
  if (Validator.isNull(name)) {
    throw new ColumnNameException();
  }
  ExpandoColumn column=expandoColumnPersistence.fetchByT_N(tableId,name);
  if ((column != null) && (column.getColumnId() != columnId)) {
    throw new DuplicateColumnNameException();
  }
  if ((type != ExpandoColumnConstants.BOOLEAN) && (type != ExpandoColumnConstants.BOOLEAN_ARRAY) && (type != ExpandoColumnConstants.DATE)&& (type != ExpandoColumnConstants.DATE_ARRAY)&& (type != ExpandoColumnConstants.DOUBLE)&& (type != ExpandoColumnConstants.DOUBLE_ARRAY)&& (type != ExpandoColumnConstants.FLOAT)&& (type != ExpandoColumnConstants.FLOAT_ARRAY)&& (type != ExpandoColumnConstants.INTEGER)&& (type != ExpandoColumnConstants.INTEGER_ARRAY)&& (type != ExpandoColumnConstants.LONG)&& (type != ExpandoColumnConstants.LONG_ARRAY)&& (type != ExpandoColumnConstants.SHORT)&& (type != ExpandoColumnConstants.SHORT_ARRAY)&& (type != ExpandoColumnConstants.STRING)&& (type != ExpandoColumnConstants.STRING_ARRAY)) {
    throw new ColumnTypeException();
  }
  ExpandoValue value=null;
  if (Validator.isNotNull(defaultData)) {
    value=new ExpandoValueImpl();
    value.setColumnId(columnId);
switch (type) {
case ExpandoColumnConstants.BOOLEAN:
{
        value.setBoolean((Boolean)defaultData);
        break;
      }
case ExpandoColumnConstants.BOOLEAN_ARRAY:
{
      value.setBooleanArray((boolean[])defaultData);
      break;
    }
case ExpandoColumnConstants.DATE:
{
    value.setDate((Date)defaultData);
    break;
  }
case ExpandoColumnConstants.DATE_ARRAY:
{
  value.setDateArray((Date[])defaultData);
  break;
}
case ExpandoColumnConstants.DOUBLE:
{
value.setDouble((Double)defaultData);
break;
}
case ExpandoColumnConstants.DOUBLE_ARRAY:
{
value.setDoubleArray((double[])defaultData);
break;
}
case ExpandoColumnConstants.FLOAT:
{
value.setFloat((Float)defaultData);
break;
}
case ExpandoColumnConstants.FLOAT_ARRAY:
{
value.setFloatArray((float[])defaultData);
break;
}
case ExpandoColumnConstants.INTEGER:
{
value.setInteger((Integer)defaultData);
break;
}
case ExpandoColumnConstants.INTEGER_ARRAY:
{
value.setIntegerArray((int[])defaultData);
break;
}
case ExpandoColumnConstants.LONG:
{
value.setLong((Long)defaultData);
break;
}
case ExpandoColumnConstants.LONG_ARRAY:
{
value.setLongArray((long[])defaultData);
break;
}
case ExpandoColumnConstants.SHORT:
{
value.setShort((Short)defaultData);
break;
}
case ExpandoColumnConstants.SHORT_ARRAY:
{
value.setShortArray((short[])defaultData);
break;
}
case ExpandoColumnConstants.STRING:
{
value.setString((String)defaultData);
break;
}
case ExpandoColumnConstants.STRING_ARRAY:
{
value.setStringArray((String[])defaultData);
break;
}
}
}
return value;
}

{
  long pk=RandomTestUtil.nextLong();
  DLFolder newDLFolder=_persistence.create(pk);
  newDLFolder.setUuid(RandomTestUtil.randomString());
  newDLFolder.setGroupId(RandomTestUtil.nextLong());
  newDLFolder.setCompanyId(RandomTestUtil.nextLong());
  newDLFolder.setUserId(RandomTestUtil.nextLong());
  newDLFolder.setUserName(RandomTestUtil.randomString());
  newDLFolder.setCreateDate(RandomTestUtil.nextDate());
  newDLFolder.setModifiedDate(RandomTestUtil.nextDate());
  newDLFolder.setRepositoryId(RandomTestUtil.nextLong());
  newDLFolder.setMountPoint(RandomTestUtil.randomBoolean());
  newDLFolder.setParentFolderId(RandomTestUtil.nextLong());
  newDLFolder.setTreePath(RandomTestUtil.randomString());
  newDLFolder.setName(RandomTestUtil.randomString());
  newDLFolder.setDescription(RandomTestUtil.randomString());
  newDLFolder.setLastPostDate(RandomTestUtil.nextDate());
  newDLFolder.setDefaultFileEntryTypeId(RandomTestUtil.nextLong());
  newDLFolder.setHidden(RandomTestUtil.randomBoolean());
  newDLFolder.setRestrictionType(RandomTestUtil.nextInt());
  newDLFolder.setLastPublishDate(RandomTestUtil.nextDate());
  newDLFolder.setStatus(RandomTestUtil.nextInt());
  newDLFolder.setStatusByUserId(RandomTestUtil.nextLong());
  newDLFolder.setStatusByUserName(RandomTestUtil.randomString());
  newDLFolder.setStatusDate(RandomTestUtil.nextDate());
  _dlFolders.add(_persistence.update(newDLFolder));
  DLFolder existingDLFolder=_persistence.findByPrimaryKey(newDLFolder.getPrimaryKey());
  Assert.assertEquals(existingDLFolder.getUuid(),newDLFolder.getUuid());
  Assert.assertEquals(existingDLFolder.getFolderId(),newDLFolder.getFolderId());
  Assert.assertEquals(existingDLFolder.getGroupId(),newDLFolder.getGroupId());
  Assert.assertEquals(existingDLFolder.getCompanyId(),newDLFolder.getCompanyId());
  Assert.assertEquals(existingDLFolder.getUserId(),newDLFolder.getUserId());
  Assert.assertEquals(existingDLFolder.getUserName(),newDLFolder.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDLFolder.getCreateDate()),Time.getShortTimestamp(newDLFolder.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingDLFolder.getModifiedDate()),Time.getShortTimestamp(newDLFolder.getModifiedDate()));
  Assert.assertEquals(existingDLFolder.getRepositoryId(),newDLFolder.getRepositoryId());
  Assert.assertEquals(existingDLFolder.getMountPoint(),newDLFolder.getMountPoint());
  Assert.assertEquals(existingDLFolder.getParentFolderId(),newDLFolder.getParentFolderId());
  Assert.assertEquals(existingDLFolder.getTreePath(),newDLFolder.getTreePath());
  Assert.assertEquals(existingDLFolder.getName(),newDLFolder.getName());
  Assert.assertEquals(existingDLFolder.getDescription(),newDLFolder.getDescription());
  Assert.assertEquals(Time.getShortTimestamp(existingDLFolder.getLastPostDate()),Time.getShortTimestamp(newDLFolder.getLastPostDate()));
  Assert.assertEquals(existingDLFolder.getDefaultFileEntryTypeId(),newDLFolder.getDefaultFileEntryTypeId());
  Assert.assertEquals(existingDLFolder.getHidden(),newDLFolder.getHidden());
  Assert.assertEquals(existingDLFolder.getRestrictionType(),newDLFolder.getRestrictionType());
  Assert.assertEquals(Time.getShortTimestamp(existingDLFolder.getLastPublishDate()),Time.getShortTimestamp(newDLFolder.getLastPublishDate()));
  Assert.assertEquals(existingDLFolder.getStatus(),newDLFolder.getStatus());
  Assert.assertEquals(existingDLFolder.getStatusByUserId(),newDLFolder.getStatusByUserId());
  Assert.assertEquals(existingDLFolder.getStatusByUserName(),newDLFolder.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDLFolder.getStatusDate()),Time.getShortTimestamp(newDLFolder.getStatusDate()));
}

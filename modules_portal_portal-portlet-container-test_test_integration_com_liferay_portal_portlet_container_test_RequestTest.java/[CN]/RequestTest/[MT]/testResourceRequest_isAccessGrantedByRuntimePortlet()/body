{
  Map<String,String> ignored=new HashMap<>();
  requestTestPortlet=new RequestTestPortlet(ignored){
    @Override public void serveResource(    ResourceRequest resourceRequest,    ResourceResponse resourceResponse) throws IOException, PortletException {
      PortletContext portletContext=getPortletContext();
      PortletRequestDispatcher requestDispatcher=portletContext.getRequestDispatcher("/runtime_portlet.jsp");
      requestDispatcher.include(resourceRequest,resourceResponse);
    }
  }
;
  String portletToEmbbed="TEST_EMBEDDED";
  setUpPortlet(new RequestTestPortlet(map),properties,portletToEmbbed,false);
  setUpPortlet(requestTestPortlet,properties,PortletKeys.TEST_PORTLET);
  HttpServletRequest request=getHttpServletRequest();
  PortletURL portletURL=new PortletURLImpl(request,PortletKeys.TEST_PORTLET,layout.getPlid(),PortletRequest.RESOURCE_PHASE);
  portletURL.setParameter("portletToEmbbed",portletToEmbbed);
  Map<String,List<String>> responseMap=request(portletURL.toString());
  Assert.assertEquals("200",responseMap.get("responseCode").get(0));
  Assert.assertTrue(map.containsKey("render"));
}

{
  Field field=ReflectionUtil.getDeclaredField(PropsValues.class,"AUTH_TOKEN_IGNORE_ORIGINS");
  Object originalValue=field.get(null);
  try {
    field.set(null,new String[]{SecurityPortletContainerWrapper.class.getName()});
    AuthTokenWhitelistUtil.resetOriginCSRFWhitelist();
    setUpPortlet(requestTestPortlet,properties,PortletKeys.TEST_PORTLET);
    HttpServletRequest request=getHttpServletRequest();
    PortletURL portletURL=new PortletURLImpl(request,PortletKeys.TEST_PORTLET,layout.getPlid(),PortletRequest.ACTION_PHASE);
    Map<String,List<String>> responseMap=request(portletURL.toString());
    Assert.assertEquals("200",responseMap.get("responseCode").get(0));
    Assert.assertTrue(map.containsKey("processAction"));
  }
  finally {
    field.set(null,originalValue);
    AuthTokenWhitelistUtil.resetOriginCSRFWhitelist();
  }
}

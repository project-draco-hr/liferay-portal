{
  if (SearchEngineUtil.isIndexReadOnly() || !isIndexerEnabled()) {
    return;
  }
  try {
    final String[] ddmStructureKeys=new String[ddmStructureIds.size()];
    for (int i=0; i < ddmStructureIds.size(); i++) {
      long ddmStructureId=ddmStructureIds.get(i);
      DDMStructure ddmStructure=_ddmStructureLocalService.getDDMStructure(ddmStructureId);
      ddmStructureKeys[i]=ddmStructure.getStructureKey();
    }
    final ActionableDynamicQuery actionableDynamicQuery=_journalArticleLocalService.getActionableDynamicQuery();
    actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
      @Override public void addCriteria(      DynamicQuery dynamicQuery){
        Property ddmStructureKey=PropertyFactoryUtil.forName("DDMStructureKey");
        if (!JournalServiceConfigurationValues.JOURNAL_ARTICLE_INDEX_ALL_VERSIONS) {
          Property status=PropertyFactoryUtil.forName("status");
          dynamicQuery.add(status.in(new int[]{WorkflowConstants.STATUS_APPROVED,WorkflowConstants.STATUS_IN_TRASH}));
        }
        dynamicQuery.add(ddmStructureKey.in(ddmStructureKeys));
      }
    }
);
    actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
      @Override public void performAction(      Object object) throws PortalException {
        JournalArticle article=(JournalArticle)object;
        if (!JournalServiceConfigurationValues.JOURNAL_ARTICLE_INDEX_ALL_VERSIONS) {
          article=_journalArticleLocalService.getLatestArticle(article.getResourcePrimKey());
        }
        try {
          doReindex(article,false);
        }
 catch (        Exception e) {
          throw new PortalException(e);
        }
      }
    }
);
    actionableDynamicQuery.performActions();
  }
 catch (  Exception e) {
    throw new SearchException(e);
  }
}

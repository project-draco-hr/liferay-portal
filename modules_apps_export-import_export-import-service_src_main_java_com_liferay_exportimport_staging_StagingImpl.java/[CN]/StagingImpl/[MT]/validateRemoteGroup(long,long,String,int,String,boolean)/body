{
  if (remoteGroupId <= 0) {
    RemoteOptionsException roe=new RemoteOptionsException(RemoteOptionsException.REMOTE_GROUP_ID);
    roe.setRemoteGroupId(remoteGroupId);
    throw roe;
  }
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  User user=permissionChecker.getUser();
  String remoteURL=buildRemoteURL(remoteAddress,remotePort,remotePathContext,secureConnection,GroupConstants.DEFAULT_LIVE_GROUP_ID,false);
  HttpPrincipal httpPrincipal=new HttpPrincipal(remoteURL,user.getLogin(),user.getPassword(),user.getPasswordEncrypted());
  try {
    currentThread.setContextClassLoader(PortalClassLoaderUtil.getClassLoader());
    GroupServiceHttp.checkRemoteStagingGroup(httpPrincipal,remoteGroupId);
    Group group=_groupLocalService.getGroup(groupId);
    Group remoteGroup=GroupServiceHttp.getGroup(httpPrincipal,remoteGroupId);
    if (group.isCompany() ^ isCompanyGroup(httpPrincipal,remoteGroup)) {
      RemoteExportException ree=new RemoteExportException(RemoteExportException.INVALID_GROUP);
      ree.setGroupId(remoteGroupId);
      throw ree;
    }
  }
 catch (  NoSuchGroupException nsge) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.NO_GROUP);
    ree.setGroupId(remoteGroupId);
    throw ree;
  }
catch (  PrincipalException pe) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.NO_PERMISSIONS);
    ree.setGroupId(remoteGroupId);
    throw ree;
  }
catch (  RemoteAuthException rae) {
    rae.setURL(remoteURL);
    throw rae;
  }
catch (  SystemException se) {
    RemoteExportException ree=new RemoteExportException(RemoteExportException.BAD_CONNECTION,se.getMessage());
    ree.setURL(remoteURL);
    throw ree;
  }
 finally {
    currentThread.setContextClassLoader(contextClassLoader);
  }
}

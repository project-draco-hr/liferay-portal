{
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_ID,article.getArticleId());
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_VERSION,article.getVersion());
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_TITLE,article.getTitle(languageId));
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_URL_TITLE,article.getUrlTitle());
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_DESCRIPTION,article.getDescription(languageId));
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_TYPE,article.getType());
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_CREATE_DATE,article.getCreateDate());
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_MODIFIED_DATE,article.getModifiedDate());
  if (article.getDisplayDate() != null) {
    JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_DISPLAY_DATE,article.getDisplayDate());
  }
  String smallImageURL=StringPool.BLANK;
  if (Validator.isNotNull(article.getSmallImageURL())) {
    smallImageURL=article.getSmallImageURL();
  }
 else   if ((themeDisplay != null) && article.isSmallImage()) {
    StringBundler sb=new StringBundler(5);
    sb.append(themeDisplay.getPathImage());
    sb.append("/journal/article?img_id=");
    sb.append(article.getSmallImageId());
    sb.append("&t=");
    sb.append(WebServerServletTokenUtil.getToken(article.getSmallImageId()));
    smallImageURL=sb.toString();
  }
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_SMALL_IMAGE_URL,smallImageURL);
  String[] assetTagNames=new String[0];
  try {
    assetTagNames=AssetTagLocalServiceUtil.getTagNames(JournalArticle.class.getName(),article.getResourcePrimKey());
  }
 catch (  SystemException se) {
  }
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_ASSET_TAG_NAMES,StringUtil.merge(assetTagNames));
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_AUTHOR_ID,String.valueOf(article.getUserId()));
  String userName=StringPool.BLANK;
  String userEmailAddress=StringPool.BLANK;
  String userComments=StringPool.BLANK;
  String userJobTitle=StringPool.BLANK;
  User user=null;
  try {
    user=UserLocalServiceUtil.getUserById(article.getUserId());
    userName=user.getFullName();
    userEmailAddress=user.getEmailAddress();
    userComments=user.getComments();
    userJobTitle=user.getJobTitle();
  }
 catch (  PortalException pe) {
  }
catch (  SystemException se) {
  }
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_AUTHOR_NAME,userName);
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_AUTHOR_EMAIL_ADDRESS,userEmailAddress);
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_AUTHOR_COMMENTS,userComments);
  JournalUtil.addReservedEl(rootElement,tokens,JournalStructureConstants.RESERVED_ARTICLE_AUTHOR_JOB_TITLE,userJobTitle);
}

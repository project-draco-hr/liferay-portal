{
  try {
    Document oldDocument=SAXReaderUtil.read(content);
    Document newDocument=SAXReaderUtil.read(content);
    Element newRootElement=newDocument.getRootElement();
    Attribute availableLocalesAttribute=newRootElement.attribute("available-locales");
    if (availableLocalesAttribute == null) {
      availableLocalesAttribute=(Attribute)newRootElement.addAttribute("available-locales",StringPool.BLANK);
    }
    String defaultImportLanguageId=LocaleUtil.toLanguageId(defaultImportLocale);
    if (!StringUtil.contains(availableLocalesAttribute.getValue(),defaultImportLanguageId)) {
      if (Validator.isNull(availableLocalesAttribute.getValue())) {
        availableLocalesAttribute.setValue(defaultImportLanguageId);
      }
 else {
        availableLocalesAttribute.setValue(availableLocalesAttribute.getValue() + StringPool.COMMA + defaultImportLanguageId);
      }
      _mergeArticleContentUpdate(oldDocument,newRootElement,LocaleUtil.toLanguageId(defaultImportLocale));
      content=XMLUtil.formatXML(newDocument);
    }
    Attribute defaultLocaleAttribute=newRootElement.attribute("default-locale");
    if (defaultLocaleAttribute == null) {
      defaultLocaleAttribute=(Attribute)newRootElement.addAttribute("default-locale",StringPool.BLANK);
    }
    Locale defaultContentLocale=LocaleUtil.fromLanguageId(defaultLocaleAttribute.getValue());
    if (!LocaleUtil.equals(defaultContentLocale,defaultImportLocale)) {
      defaultLocaleAttribute.setValue(defaultImportLanguageId);
      content=XMLUtil.formatXML(newDocument);
    }
  }
 catch (  Exception e) {
    throw new LocaleException(LocaleException.TYPE_CONTENT,"The locale " + defaultImportLocale + " is not available");
  }
  return content;
}

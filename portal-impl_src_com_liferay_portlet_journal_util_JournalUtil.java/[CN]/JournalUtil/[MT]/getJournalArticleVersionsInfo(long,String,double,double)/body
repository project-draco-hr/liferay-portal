{
  double previousVersion=0;
  double nextVersion=0;
  List<JournalArticle> articles=JournalArticleServiceUtil.getArticlesByArticleId(groupId,articleId,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new ArticleVersionComparator());
  List<JournalArticle> intermediateArticles=new ArrayList<JournalArticle>();
  for (  JournalArticle article : articles) {
    if ((article.getVersion() < sourceVersion) && (article.getVersion() > previousVersion)) {
      previousVersion=article.getVersion();
    }
    if ((article.getVersion() > targetVersion) && ((article.getVersion() < nextVersion) || (nextVersion == 0))) {
      nextVersion=article.getVersion();
    }
    if ((article.getVersion() > sourceVersion) && (article.getVersion() <= targetVersion)) {
      intermediateArticles.add(article);
    }
  }
  List<Tuple> versionsInfo=new ArrayList<Tuple>();
  for (  JournalArticle article : intermediateArticles) {
    Tuple versionInfo=new Tuple(article.getUserId(),article.getVersion(),StringPool.BLANK,StringPool.BLANK);
    versionsInfo.add(versionInfo);
  }
  return new Object[]{versionsInfo,previousVersion,nextVersion};
}

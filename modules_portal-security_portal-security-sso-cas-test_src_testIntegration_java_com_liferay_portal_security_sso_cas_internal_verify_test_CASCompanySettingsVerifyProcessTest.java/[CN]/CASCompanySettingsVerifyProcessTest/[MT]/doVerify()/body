{
  super.doVerify();
  List<Company> companies=_companyLocalService.getCompanies(false);
  for (  Company company : companies) {
    long companyId=company.getCompanyId();
    PortletPreferences portletPreferences=_prefsProps.getPreferences(companyId,true);
    for (    String key : LegacyCASPropsKeys.LEGACY_CAS_KEYS) {
      Assert.assertTrue(Validator.isNull(portletPreferences.getValue(key,StringPool.BLANK)));
    }
    Settings settings=getSettings(companyId);
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(CASConstants.AUTH_ENABLED,StringPool.FALSE)));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(CASConstants.IMPORT_FROM_LDAP,StringPool.FALSE)));
    Assert.assertEquals("http://test.com/cas/login/url",settings.getValue(CASConstants.LOGIN_URL,StringPool.BLANK));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(CASConstants.LOGOUT_ON_SESSION_EXPIRATION,StringPool.FALSE)));
    Assert.assertEquals("http://test.com/cas/logout/url",settings.getValue(CASConstants.LOGOUT_URL,StringPool.BLANK));
    Assert.assertEquals("http://test.com/cas/no/such/user/redirect/url",settings.getValue(CASConstants.NO_SUCH_USER_REDIRECT_URL,StringPool.BLANK));
    Assert.assertEquals("http://test.com/cas/server/name",settings.getValue(CASConstants.SERVER_NAME,StringPool.BLANK));
    Assert.assertEquals("http://test.com/cas/server/url",settings.getValue(CASConstants.SERVER_URL,StringPool.BLANK));
    Assert.assertEquals("http://test.com/cas/service/url",settings.getValue(CASConstants.SERVICE_URL,StringPool.BLANK));
  }
}

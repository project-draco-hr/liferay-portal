{
  Bundle bundle=FrameworkUtil.getBundle(CASCompanySettingsVerifyProcessTest.class);
  _bundleContext=bundle.getBundleContext();
  ServiceReference<CompanyLocalService> companyLocalServiceReference=_bundleContext.getServiceReference(CompanyLocalService.class);
  _companyLocalService=_bundleContext.getService(companyLocalServiceReference);
  ServiceReference<PrefsProps> prefsPropsServiceReference=_bundleContext.getServiceReference(PrefsProps.class);
  _prefsProps=_bundleContext.getService(prefsPropsServiceReference);
  ServiceReference<SettingsFactory> settingsFactoryReference=_bundleContext.getServiceReference(SettingsFactory.class);
  _settingsFactory=_bundleContext.getService(settingsFactoryReference);
  UnicodeProperties properties=new UnicodeProperties();
  properties.put(LegacyCASPropsKeys.CAS_AUTH_ENABLED,StringPool.TRUE);
  properties.put(LegacyCASPropsKeys.CAS_IMPORT_FROM_LDAP,StringPool.TRUE);
  properties.put(LegacyCASPropsKeys.CAS_LOGIN_URL,"http://test.com/cas/login/url");
  properties.put(LegacyCASPropsKeys.CAS_LOGOUT_ON_SESSION_EXPIRATION,StringPool.TRUE);
  properties.put(LegacyCASPropsKeys.CAS_LOGOUT_URL,"http://test.com/cas/logout/url");
  properties.put(LegacyCASPropsKeys.CAS_NO_SUCH_USER_REDIRECT_URL,"http://test.com/cas/no/such/user/redirect/url");
  properties.put(LegacyCASPropsKeys.CAS_SERVER_NAME,"http://test.com/cas/server/name");
  properties.put(LegacyCASPropsKeys.CAS_SERVER_URL,"http://test.com/cas/server/url");
  properties.put(LegacyCASPropsKeys.CAS_SERVICE_URL,"http://test.com/cas/service/url");
  List<Company> companies=_companyLocalService.getCompanies(false);
  for (  Company company : companies) {
    _companyLocalService.updatePreferences(company.getCompanyId(),properties);
  }
}

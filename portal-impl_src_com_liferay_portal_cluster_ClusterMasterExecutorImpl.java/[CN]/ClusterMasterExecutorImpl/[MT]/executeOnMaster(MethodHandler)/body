{
  if (!_enabled) {
    if (_log.isWarnEnabled()) {
      _log.warn("Executing on the local node because the cluster master " + "executor is disabled");
    }
    DefaultNoticeableFuture<T> defaultNoticeableFuture=new DefaultNoticeableFuture<>();
    try {
      defaultNoticeableFuture.set((T)methodHandler.invoke());
      return defaultNoticeableFuture;
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
  }
  String masterAddressString=getMasterAddressString();
  final Address address=AddressSerializerUtil.deserialize(masterAddressString);
  ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(methodHandler,address);
  try {
    return new NoticeableFutureConverter<T,ClusterNodeResponses>(_clusterExecutor.execute(clusterRequest)){
      @Override protected T convert(      ClusterNodeResponses clusterNodeResponses) throws Exception {
        ClusterNodeResponse clusterNodeResponse=clusterNodeResponses.getClusterResponse(address);
        return (T)clusterNodeResponse.getResult();
      }
    }
;
  }
 catch (  Exception e) {
    throw new SystemException("Unable to execute on master " + address.getDescription(),e);
  }
}

{
  String owner=null;
  while (true) {
    try {
      Lock lock=null;
      if (owner == null) {
        lock=LockLocalServiceUtil.lock(_LOCK_CLASS_NAME,_LOCK_CLASS_NAME,_localClusterNodeAddress);
      }
 else {
        lock=LockLocalServiceUtil.lock(_LOCK_CLASS_NAME,_LOCK_CLASS_NAME,owner,_localClusterNodeAddress);
      }
      owner=lock.getOwner();
      Address address=AddressSerializerUtil.deserialize(owner);
      if (_clusterExecutor.isClusterNodeAlive(address)) {
        break;
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to acquire the cluster master lock",e);
      }
    }
    if (_log.isInfoEnabled()) {
      if (Validator.isNotNull(owner)) {
        _log.info("Lock currently held by " + owner);
      }
      _log.info("Reattempting to acquire the cluster master lock");
    }
  }
  boolean master=_localClusterNodeAddress.equals(owner);
  if (master == _master) {
    return owner;
  }
  _master=master;
  if (_enabled) {
    notifyMasterTokenTransitionListeners(master);
  }
  return owner;
}

{
  mockStatic(LocaleUtil.class);
  when(LocaleUtil.fromLanguageId("en_US")).thenReturn(LocaleUtil.US);
  when(LocaleUtil.fromLanguageId("pt_BR")).thenReturn(LocaleUtil.BRAZIL);
  when(LocaleUtil.toLanguageId(LocaleUtil.US)).thenReturn("en_US");
  when(LocaleUtil.toLanguageId(LocaleUtil.BRAZIL)).thenReturn("pt_BR");
  when(LocaleUtil.toLanguageIds((Locale[])Matchers.any())).then(new Answer<String[]>(){
    @Override public String[] answer(    InvocationOnMock invocationOnMock) throws Throwable {
      Object[] args=invocationOnMock.getArguments();
      Locale[] locales=(Locale[])args[0];
      String[] languageIds=new String[locales.length];
      for (int i=0; i < locales.length; i++) {
        languageIds[i]=LocaleUtil.toLanguageId(locales[i]);
      }
      return languageIds;
    }
  }
);
}

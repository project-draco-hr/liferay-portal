{
  Map<String,Serializable> taskContextMap=backgroundTask.getTaskContextMap();
  long userId=MapUtil.getLong(taskContextMap,"userId");
  long targetGroupId=MapUtil.getLong(taskContextMap,"targetGroupId");
  StagingUtil.lockGroup(userId,targetGroupId);
  long sourceGroupId=MapUtil.getLong(taskContextMap,"sourceGroupId");
  boolean initialImport=MapUtil.getBoolean(taskContextMap,"initialImport");
  ServiceContext serviceContext=(ServiceContext)taskContextMap.get("serviceContext");
  Group sourceGroup=GroupLocalServiceUtil.getGroup(sourceGroupId);
  clearBackgroundTaskStatus(backgroundTask);
  MissingReferences missingReferences=null;
  boolean failed=false;
  try {
    Callable layoutStagingCallable=new LayoutStagingCallable(backgroundTask,sourceGroupId,targetGroupId,taskContextMap,userId);
    missingReferences=(MissingReferences)TransactionalCallableUtil.call(_transactionAttribute,layoutStagingCallable);
  }
 catch (  Throwable t) {
    failed=true;
    if (t instanceof Exception) {
      throw (Exception)t;
    }
 else {
      throw new SystemException(t);
    }
  }
 finally {
    StagingUtil.unlockGroup(targetGroupId);
    if (failed && initialImport) {
      StagingUtil.disableStaging(sourceGroup,serviceContext);
    }
  }
  return processMissingReferences(backgroundTask,missingReferences);
}

{
  try {
    String contentType=part.getContentType().toLowerCase();
    boolean attachment=true;
    if (part.getContent() instanceof Multipart) {
      attachment=false;
      Multipart multipart=(Multipart)part.getContent();
      for (int i=0; i < multipart.getCount(); i++) {
        Part curPart=multipart.getBodyPart(i);
        mailMessage=_getContent(curPart,mailMessage,content,contentPath + StringPool.PERIOD + i);
      }
    }
 else     if (Validator.isNull(part.getFileName())) {
      attachment=false;
      if (contentType.startsWith(ContentTypes.TEXT_PLAIN)) {
        content.appendPlainBody((String)part.getContent());
      }
 else       if (contentType.startsWith(ContentTypes.TEXT_HTML)) {
        content.appendHtmlBody(_customizeHtml((String)part.getContent()));
      }
 else       if (contentType.startsWith(ContentTypes.MESSAGE_RFC822)) {
        MailContent subContent=new MailContent();
        mailMessage=_getContent((Part)part.getContent(),mailMessage,subContent,contentPath + StringPool.PERIOD + 0);
        content.appendSubContent(subContent);
      }
    }
    if (attachment) {
      mailMessage.appendRemoteAttachment(_getRemoteAttachment(part,contentPath + StringPool.PERIOD + -1));
    }
  }
 catch (  IOException ioe) {
    throw new ContentException(ioe);
  }
catch (  MessagingException me) {
    throw new ContentException(me);
  }
  return mailMessage;
}

{
  IMAPFolder toFolder=null;
  toFolderName=_getResolvedFolderName(toFolderName);
  try {
    MailSessionLock.lock(req);
    Iterator itr=msgMap.keySet().iterator();
    while (itr.hasNext()) {
      String folderName=(String)itr.next();
      long[] messageIds=_getMessageIds(msgMap,folderName);
      IMAPFolder folder=_getFolder(req,folderName);
      folderName=_getResolvedFolderName(folder.getName());
      if (folderName.equals(toFolderName)) {
        continue;
      }
      if ((folderName.equals(MAIL_DRAFTS_NAME) || toFolderName.equals(MAIL_DRAFTS_NAME)) && (!toFolderName.equals(MAIL_TRASH_NAME))) {
        continue;
      }
      Store store=_getStore(req);
      toFolder=(IMAPFolder)store.getFolder(toFolderName);
      toFolder.open(IMAPFolder.READ_WRITE);
      Message[] messages=folder.getMessagesByUID(messageIds);
      folder.copyMessages(messages,toFolder);
      folder.setFlags(messages,new Flags(Flags.Flag.DELETED),true);
      folder.expunge();
    }
  }
 catch (  MessagingException me) {
    throw new FolderException(me);
  }
 finally {
    try {
      if ((toFolder != null) && toFolder.isOpen()) {
        toFolder.close(true);
      }
    }
 catch (    Exception e) {
    }
    MailSessionLock.unlock(req);
  }
}

{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    ps=con.prepareStatement("select TE.entryId, TE.groupId, TE.userId, TP.propertyId, " + "TP.value from TagsEntry TE, TagsProperty TP where " + "TE.entryId = TP.entryId and TE.vocabularyId <= 0 "+ "and TP.key_ = 'category'");
    rs=ps.executeQuery();
    SmartResultSet srs=new SmartResultSet(rs);
    while (srs.next()) {
      long entryId=srs.getLong("TE.entryId");
      long groupId=srs.getLong("TE.groupId");
      long userId=srs.getLong("TE.userId");
      long propertyId=srs.getLong("TP.propertyId");
      String value=srs.getString("TP.value");
      long vocabularyId=-1;
      try {
        vocabularyId=getVocabularyId(userId,groupId,value);
      }
 catch (      NoSuchUserException e) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to get vocabulary ID for TagsProperty " + propertyId + ": "+ e.getMessage());
        }
        continue;
      }
      ps=con.prepareStatement("update TagsEntry set vocabularyId = ? where entryId = ?");
      ps.setLong(1,vocabularyId);
      ps.setLong(2,entryId);
      ps.executeUpdate();
      ps.close();
      ps=con.prepareStatement("delete from TagsProperty where propertyId = ?");
      ps.setLong(1,propertyId);
      ps.executeUpdate();
      ps.close();
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

{
  Object[] finderArgs=new Object[]{groupId,recordSetKey};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_R,finderArgs,this);
  }
  if (result instanceof DDLRecordSet) {
    DDLRecordSet ddlRecordSet=(DDLRecordSet)result;
    if ((groupId != ddlRecordSet.getGroupId()) || !Validator.equals(recordSetKey,ddlRecordSet.getRecordSetKey())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_DDLRECORDSET_WHERE);
    query.append(_FINDER_COLUMN_G_R_GROUPID_2);
    boolean bindRecordSetKey=false;
    if (recordSetKey == null) {
      query.append(_FINDER_COLUMN_G_R_RECORDSETKEY_1);
    }
 else     if (recordSetKey.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_R_RECORDSETKEY_3);
    }
 else {
      bindRecordSetKey=true;
      query.append(_FINDER_COLUMN_G_R_RECORDSETKEY_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindRecordSetKey) {
        qPos.add(recordSetKey);
      }
      List<DDLRecordSet> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_R,finderArgs,list);
      }
 else {
        DDLRecordSet ddlRecordSet=list.get(0);
        result=ddlRecordSet;
        cacheResult(ddlRecordSet);
        if ((ddlRecordSet.getGroupId() != groupId) || (ddlRecordSet.getRecordSetKey() == null) || !ddlRecordSet.getRecordSetKey().equals(recordSetKey)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_R,finderArgs,ddlRecordSet);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_R,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (DDLRecordSet)result;
  }
}

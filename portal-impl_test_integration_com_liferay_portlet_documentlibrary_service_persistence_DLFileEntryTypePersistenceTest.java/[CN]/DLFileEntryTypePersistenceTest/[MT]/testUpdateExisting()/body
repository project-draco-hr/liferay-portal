{
  long pk=nextLong();
  DLFileEntryType newDLFileEntryType=_persistence.create(pk);
  newDLFileEntryType.setUuid(randomString());
  newDLFileEntryType.setGroupId(nextLong());
  newDLFileEntryType.setCompanyId(nextLong());
  newDLFileEntryType.setUserId(nextLong());
  newDLFileEntryType.setUserName(randomString());
  newDLFileEntryType.setCreateDate(nextDate());
  newDLFileEntryType.setModifiedDate(nextDate());
  newDLFileEntryType.setName(randomString());
  newDLFileEntryType.setDescription(randomString());
  _persistence.update(newDLFileEntryType,false);
  DLFileEntryType existingDLFileEntryType=_persistence.findByPrimaryKey(newDLFileEntryType.getPrimaryKey());
  assertEquals(existingDLFileEntryType.getUuid(),newDLFileEntryType.getUuid());
  assertEquals(existingDLFileEntryType.getFileEntryTypeId(),newDLFileEntryType.getFileEntryTypeId());
  assertEquals(existingDLFileEntryType.getGroupId(),newDLFileEntryType.getGroupId());
  assertEquals(existingDLFileEntryType.getCompanyId(),newDLFileEntryType.getCompanyId());
  assertEquals(existingDLFileEntryType.getUserId(),newDLFileEntryType.getUserId());
  assertEquals(existingDLFileEntryType.getUserName(),newDLFileEntryType.getUserName());
  assertEquals(Time.getShortTimestamp(existingDLFileEntryType.getCreateDate()),Time.getShortTimestamp(newDLFileEntryType.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingDLFileEntryType.getModifiedDate()),Time.getShortTimestamp(newDLFileEntryType.getModifiedDate()));
  assertEquals(existingDLFileEntryType.getName(),newDLFileEntryType.getName());
  assertEquals(existingDLFileEntryType.getDescription(),newDLFileEntryType.getDescription());
}

{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.addCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.createCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.fetchCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.fetchCalendarResourceByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getExportActionableDynamicQuery((com.liferay.portal.kernel.lar.PortletDataContext)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourcesByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourcesByUuidAndCompanyId((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarResource>)arguments[4]);
  }
  if (_methodName20.equals(name) && Arrays.deepEquals(_methodParameterTypes20,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourceByUuidAndGroupId((java.lang.String)arguments[0],((Long)arguments[1]).longValue());
  }
  if (_methodName21.equals(name) && Arrays.deepEquals(_methodParameterTypes21,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResources(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName22.equals(name) && Arrays.deepEquals(_methodParameterTypes22,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResourcesCount();
  }
  if (_methodName23.equals(name) && Arrays.deepEquals(_methodParameterTypes23,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.updateCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName80.equals(name) && Arrays.deepEquals(_methodParameterTypes80,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName81.equals(name) && Arrays.deepEquals(_methodParameterTypes81,parameterTypes)) {
    CalendarResourceLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName86.equals(name) && Arrays.deepEquals(_methodParameterTypes86,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.addCalendarResource(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),((Long)arguments[2]).longValue(),((Long)arguments[3]).longValue(),(java.lang.String)arguments[4],(java.lang.String)arguments[5],(java.util.Map<java.util.Locale,java.lang.String>)arguments[6],(java.util.Map<java.util.Locale,java.lang.String>)arguments[7],((Boolean)arguments[8]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[9]);
  }
  if (_methodName87.equals(name) && Arrays.deepEquals(_methodParameterTypes87,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource((com.liferay.calendar.model.CalendarResource)arguments[0]);
  }
  if (_methodName88.equals(name) && Arrays.deepEquals(_methodParameterTypes88,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.deleteCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName89.equals(name) && Arrays.deepEquals(_methodParameterTypes89,parameterTypes)) {
    CalendarResourceLocalServiceUtil.deleteCalendarResources(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName90.equals(name) && Arrays.deepEquals(_methodParameterTypes90,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.fetchCalendarResource(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName91.equals(name) && Arrays.deepEquals(_methodParameterTypes91,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResource(((Long)arguments[0]).longValue());
  }
  if (_methodName92.equals(name) && Arrays.deepEquals(_methodParameterTypes92,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.getCalendarResources(((Long)arguments[0]).longValue());
  }
  if (_methodName93.equals(name) && Arrays.deepEquals(_methodParameterTypes93,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.search(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],((Boolean)arguments[6]).booleanValue(),((Boolean)arguments[7]).booleanValue(),((Integer)arguments[8]).intValue(),((Integer)arguments[9]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarResource>)arguments[10]);
  }
  if (_methodName94.equals(name) && Arrays.deepEquals(_methodParameterTypes94,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchByKeywords(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue(),((Boolean)arguments[5]).booleanValue(),((Integer)arguments[6]).intValue(),((Integer)arguments[7]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.calendar.model.CalendarResource>)arguments[8]);
  }
  if (_methodName95.equals(name) && Arrays.deepEquals(_methodParameterTypes95,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],((Boolean)arguments[4]).booleanValue());
  }
  if (_methodName96.equals(name) && Arrays.deepEquals(_methodParameterTypes96,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.searchCount(((Long)arguments[0]).longValue(),(long[])arguments[1],(long[])arguments[2],(java.lang.String)arguments[3],(java.lang.String)arguments[4],(java.lang.String)arguments[5],((Boolean)arguments[6]).booleanValue(),((Boolean)arguments[7]).booleanValue());
  }
  if (_methodName97.equals(name) && Arrays.deepEquals(_methodParameterTypes97,parameterTypes)) {
    CalendarResourceLocalServiceUtil.updateAsset(((Long)arguments[0]).longValue(),(com.liferay.calendar.model.CalendarResource)arguments[1],(long[])arguments[2],(java.lang.String[])arguments[3]);
    return null;
  }
  if (_methodName98.equals(name) && Arrays.deepEquals(_methodParameterTypes98,parameterTypes)) {
    return CalendarResourceLocalServiceUtil.updateCalendarResource(((Long)arguments[0]).longValue(),(java.util.Map<java.util.Locale,java.lang.String>)arguments[1],(java.util.Map<java.util.Locale,java.lang.String>)arguments[2],((Boolean)arguments[3]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  throw new UnsupportedOperationException();
}

{
  if (!ScopeUtils.isLocalVariableDef(detailAST)) {
    return;
  }
  List<DetailAST> methodCallASTList=DetailASTUtil.getMethodCalls(detailAST,"Pattern","compile");
  if (methodCallASTList.isEmpty()) {
    return;
  }
  DetailAST methodCallAST=methodCallASTList.get(0);
  DetailAST elistAST=methodCallAST.findFirstToken(TokenTypes.ELIST);
  DetailAST expressionAST=elistAST.findFirstToken(TokenTypes.EXPR);
  List<DetailAST> childASTList=DetailASTUtil.getAllChildTokens(expressionAST,true,DetailASTUtil.ALL_TYPES);
  for (  DetailAST childAST : childASTList) {
    if ((childAST.getType() != TokenTypes.PLUS) && (childAST.getType() != TokenTypes.STRING_LITERAL)) {
      return;
    }
  }
  DetailAST nameAST=detailAST.findFirstToken(TokenTypes.IDENT);
  log(detailAST.getLineNo(),MSG_LOCAL_PATTERN,nameAST.getText());
}

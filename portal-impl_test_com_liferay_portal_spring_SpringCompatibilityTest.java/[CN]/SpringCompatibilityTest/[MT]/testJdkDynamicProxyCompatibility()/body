{
  Class<?> proxyClass=null;
  try {
    proxyClass=Class.forName("org.springframework.aop.framework.JdkDynamicAopProxy");
  }
 catch (  ClassNotFoundException ex) {
    throw new RuntimeException("Class org.springframework.aop.framework.JdkDynamicAopProxy " + "does not exist anymore");
  }
  Field advisedSupportField=null;
  try {
    advisedSupportField=proxyClass.getDeclaredField("advised");
  }
 catch (  Exception ex) {
    throw new RuntimeException("Field advised does not exist anymore");
  }
  Class<?> advisedSupportClass=advisedSupportField.getType();
  if (!advisedSupportClass.equals(AdvisedSupport.class)) {
    throw new RuntimeException("Field advised's type is no longer " + AdvisedSupport.class.getName() + ", but "+ advisedSupportClass.getName());
  }
}

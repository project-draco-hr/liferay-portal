{
  if (!LDAPSettingsUtil.isAuthEnabled(companyId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Authenticator is not enabled");
    }
    return SUCCESS;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Authenticator is enabled");
  }
  long[] ldapServerIds=StringUtil.split(PrefsPropsUtil.getString(companyId,"ldap.server.ids"),0L);
  for (  long ldapServerId : ldapServerIds) {
    int result=authenticate(companyId,ldapServerId,emailAddress,screenName,userId,password);
    if (result == SUCCESS) {
      return result;
    }
  }
  for (int ldapServerId=0; ; ldapServerId++) {
    String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
    String providerUrl=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_PROVIDER_URL + postfix);
    if (Validator.isNull(providerUrl)) {
      break;
    }
    int result=authenticate(companyId,ldapServerId,emailAddress,screenName,userId,password);
    if (result == SUCCESS) {
      return result;
    }
  }
  return authenticateRequired(companyId,userId,emailAddress,screenName,true,FAILURE);
}

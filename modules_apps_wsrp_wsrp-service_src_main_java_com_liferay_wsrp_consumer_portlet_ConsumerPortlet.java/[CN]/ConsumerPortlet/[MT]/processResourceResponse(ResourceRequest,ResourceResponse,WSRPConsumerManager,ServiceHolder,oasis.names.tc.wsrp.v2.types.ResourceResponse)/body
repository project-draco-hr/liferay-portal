{
  PortletSession portletSession=resourceRequest.getPortletSession();
  PortletContext portletContext=wsrpResourceResponse.getPortletContext();
  if (portletContext != null) {
    portletSession.setAttribute(WebKeys.PORTLET_CONTEXT,portletContext);
  }
  SessionContext sessionContext=wsrpResourceResponse.getSessionContext();
  updateSessionContext(portletSession,serviceHolder,sessionContext);
  ResourceContext resourceContext=wsrpResourceResponse.getResourceContext();
  CacheControl cacheControl=resourceContext.getCacheControl();
  if (cacheControl != null) {
    if (cacheControl.getExpires() == 0) {
      resourceResponse.setProperty(HttpHeaders.CACHE_CONTROL,HttpHeaders.CACHE_CONTROL_NO_CACHE_VALUE);
    }
 else     if (cacheControl.getExpires() > 0) {
      resourceResponse.setProperty(HttpHeaders.CACHE_CONTROL,"max-age=" + cacheControl.getExpires());
    }
 else {
      resourceResponse.setProperty(HttpHeaders.CACHE_CONTROL,HttpHeaders.CACHE_CONTROL_DEFAULT_VALUE);
    }
  }
  NamedString[] clientAttributes=resourceContext.getClientAttributes();
  if (clientAttributes != null) {
    for (    NamedString clientAttribute : clientAttributes) {
      String name=clientAttribute.getName();
      String value=clientAttribute.getValue();
      if (StringUtil.equalsIgnoreCase(name,HttpHeaders.CONTENT_DISPOSITION)) {
        resourceResponse.setProperty(HttpHeaders.CONTENT_DISPOSITION,value);
        break;
      }
    }
  }
  processMimeResponse(resourceRequest,resourceResponse,resourceContext);
}

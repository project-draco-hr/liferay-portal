{
  Collection<String> resources=_jspResourceCache.get(path);
  if (resources != null) {
    return resources;
  }
  List<URL> urls=null;
  Map<String,List<URL>> extraPackageMap=_serviceTracker.getService();
  if (extraPackageMap != null) {
    urls=extraPackageMap.get(path.replace('/','.'));
  }
  if ((urls == null) || urls.isEmpty()) {
    ClassLoader classLoader=bundleWiring.getClassLoader();
    try {
      Enumeration<URL> enumeration=classLoader.getResources(path);
      if ((enumeration != null) && enumeration.hasMoreElements()) {
        urls=Collections.list(enumeration);
      }
    }
 catch (    IOException ioe) {
      _logger.log(Logger.LOG_ERROR,ioe.getMessage(),ioe);
    }
  }
  if ((urls == null) || urls.isEmpty()) {
    _jspResourceCache.put(path,Collections.<String>emptyList());
    return null;
  }
  int length=path.length();
  for (  URL url : urls) {
    try {
      JarFile jarFile=getJarFile(url);
      Enumeration<? extends ZipEntry> enumeration=jarFile.entries();
      while (enumeration.hasMoreElements()) {
        ZipEntry zipEntry=enumeration.nextElement();
        String name=zipEntry.getName();
        if (name.length() <= (length + 7)) {
          continue;
        }
        if (!name.startsWith(path) || (name.charAt(length) != CharPool.SLASH)) {
          continue;
        }
        if (!name.endsWith(".class")) {
          continue;
        }
        if (name.indexOf(CharPool.SLASH,length + 1) >= 0) {
          continue;
        }
        if (resources == null) {
          resources=new ArrayList<>();
        }
        resources.add(name);
      }
    }
 catch (    Exception e) {
      _logger.log(Logger.LOG_ERROR,e.getMessage(),e);
    }
  }
  if (resources == null) {
    _jspResourceCache.put(path,Collections.<String>emptyList());
  }
 else {
    _jspResourceCache.put(path,resources);
  }
  return resources;
}

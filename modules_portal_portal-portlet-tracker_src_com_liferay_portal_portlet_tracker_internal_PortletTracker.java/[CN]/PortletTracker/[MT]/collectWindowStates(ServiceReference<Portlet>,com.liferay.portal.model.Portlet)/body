{
  Map<String,Set<String>> windowStates=new HashMap<>();
  windowStates.put(ContentTypes.TEXT_HTML,SetUtil.fromArray(new String[]{toLowerCase(LiferayWindowState.EXCLUSIVE),toLowerCase(LiferayWindowState.POP_UP),toLowerCase(WindowState.MAXIMIZED),toLowerCase(WindowState.MINIMIZED),toLowerCase(WindowState.NORMAL)}));
  List<String> windowStatesStrings=StringPlus.asList(serviceReference.getProperty("javax.portlet.window-state"));
  for (  String windowStatesString : windowStatesStrings) {
    String[] windowStatesStringParts=StringUtil.split(windowStatesString,CharPool.SEMICOLON);
    if (windowStatesStringParts.length != 2) {
      continue;
    }
    String mimeType=windowStatesStringParts[0];
    Set<String> mimeTypeWindowStates=new HashSet<>();
    mimeTypeWindowStates.add(toLowerCase(WindowState.NORMAL));
    Set<String> windowStatesSet=toLowerCaseSet(windowStatesStringParts[1]);
    if (windowStatesSet.isEmpty()) {
      mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.EXCLUSIVE));
      mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.POP_UP));
      mimeTypeWindowStates.add(toLowerCase(WindowState.MAXIMIZED));
      mimeTypeWindowStates.add(toLowerCase(WindowState.MINIMIZED));
    }
 else {
      mimeTypeWindowStates.addAll(windowStatesSet);
    }
    windowStates.put(mimeType,mimeTypeWindowStates);
  }
  portletModel.setWindowStates(windowStates);
}

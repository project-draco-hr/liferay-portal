{
  Map<String,Set<String>> windowStates=new HashMap<String,Set<String>>();
  Set<String> defaultWindowStates=new HashSet<String>();
  defaultWindowStates.add(WindowState.NORMAL.toString().toLowerCase());
  defaultWindowStates.add(WindowState.MAXIMIZED.toString().toLowerCase());
  defaultWindowStates.add(WindowState.MINIMIZED.toString().toLowerCase());
  defaultWindowStates.add(LiferayWindowState.EXCLUSIVE.toString().toLowerCase());
  defaultWindowStates.add(LiferayWindowState.POP_UP.toString().toLowerCase());
  windowStates.put(ContentTypes.TEXT_HTML,defaultWindowStates);
  List<String> windowStateStrings=StringPlus.asList(serviceReference.getProperty("javax.portlet.windowStates"));
  for (  String windowStateString : windowStateStrings) {
    String[] parts=StringUtil.split(windowStateString,';');
    if (parts.length != 2) {
      continue;
    }
    String mimeType=parts[0];
    Set<String> mimeTypeWindowStates=new HashSet<String>();
    String[] states=StringUtil.split(parts[1]);
    mimeTypeWindowStates.add(WindowState.NORMAL.toString().toLowerCase());
    boolean addDefaultStates=true;
    for (    String state : states) {
      mimeTypeWindowStates.add(state.trim().toLowerCase());
      addDefaultStates=false;
    }
    if (addDefaultStates) {
      mimeTypeWindowStates.add(WindowState.MAXIMIZED.toString().toLowerCase());
      mimeTypeWindowStates.add(WindowState.MINIMIZED.toString().toLowerCase());
      mimeTypeWindowStates.add(LiferayWindowState.EXCLUSIVE.toString().toLowerCase());
      mimeTypeWindowStates.add(LiferayWindowState.POP_UP.toString().toLowerCase());
    }
    windowStates.put(mimeType,mimeTypeWindowStates);
  }
  portletModel.setWindowStates(windowStates);
}

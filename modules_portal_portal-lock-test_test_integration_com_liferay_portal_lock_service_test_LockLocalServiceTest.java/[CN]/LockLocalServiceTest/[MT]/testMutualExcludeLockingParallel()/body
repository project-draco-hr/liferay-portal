{
  try (CaptureAppender captureAppender=Log4JLoggerTestUtil.configureLog4JLogger(JDBCExceptionReporter.class.getName(),Level.ERROR)){
    ExecutorService executorService=Executors.newFixedThreadPool(10);
    List<LockingJob> lockingJobs=new ArrayList<>();
    for (int i=0; i < 10; i++) {
      LockingJob lockingJob=new LockingJob("className","key","owner-" + i,10);
      lockingJobs.add(lockingJob);
      executorService.execute(lockingJob);
    }
    executorService.shutdown();
    Assert.assertTrue(executorService.awaitTermination(600,TimeUnit.SECONDS));
    for (    LockingJob lockingJob : lockingJobs) {
      RuntimeException runtimeException=lockingJob.getRuntimeException();
      if (runtimeException != null) {
        throw runtimeException;
      }
    }
    Assert.assertFalse(LockLocalServiceUtil.isLocked("className","key"));
    for (    LoggingEvent loggingEvent : captureAppender.getLoggingEvents()) {
      Assert.assertEquals("Deadlock found when trying to get lock; try restarting " + "transaction",loggingEvent.getMessage());
    }
  }
 }

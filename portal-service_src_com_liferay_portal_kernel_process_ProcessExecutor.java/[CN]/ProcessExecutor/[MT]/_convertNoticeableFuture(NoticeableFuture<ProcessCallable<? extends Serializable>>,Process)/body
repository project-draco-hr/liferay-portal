{
  DefaultNoticeableFuture<T> defaultNoticeableFuture=new NoticeableFutureConvertor<T,ProcessCallable<? extends Serializable>>(processCallableNoticeableFuture){
    @Override protected T convert(    ProcessCallable<? extends Serializable> processCallable) throws ProcessException {
      if (processCallable instanceof ReturnProcessCallable<?>) {
        return (T)processCallable.call();
      }
      ExceptionProcessCallable exceptionProcessCallable=(ExceptionProcessCallable)processCallable;
      throw exceptionProcessCallable.call();
    }
  }
;
  defaultNoticeableFuture.addFutureListener(new FutureListener<T>(){
    @Override public void complete(    Future<T> future){
      if (future.isCancelled()) {
        processCallableNoticeableFuture.cancel(true);
        process.destroy();
      }
    }
  }
);
  return defaultNoticeableFuture;
}

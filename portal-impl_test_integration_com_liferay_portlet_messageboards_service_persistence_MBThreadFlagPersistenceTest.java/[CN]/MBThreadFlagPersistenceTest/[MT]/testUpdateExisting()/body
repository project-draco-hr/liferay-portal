{
  long pk=nextLong();
  MBThreadFlag newMBThreadFlag=_persistence.create(pk);
  newMBThreadFlag.setUserId(nextLong());
  newMBThreadFlag.setModifiedDate(nextDate());
  newMBThreadFlag.setThreadId(nextLong());
  _persistence.update(newMBThreadFlag,false);
  MBThreadFlag existingMBThreadFlag=_persistence.findByPrimaryKey(newMBThreadFlag.getPrimaryKey());
  assertEquals(existingMBThreadFlag.getThreadFlagId(),newMBThreadFlag.getThreadFlagId());
  assertEquals(existingMBThreadFlag.getUserId(),newMBThreadFlag.getUserId());
  assertEquals(Time.getShortTimestamp(existingMBThreadFlag.getModifiedDate()),Time.getShortTimestamp(newMBThreadFlag.getModifiedDate()));
  assertEquals(existingMBThreadFlag.getThreadId(),newMBThreadFlag.getThreadId());
}

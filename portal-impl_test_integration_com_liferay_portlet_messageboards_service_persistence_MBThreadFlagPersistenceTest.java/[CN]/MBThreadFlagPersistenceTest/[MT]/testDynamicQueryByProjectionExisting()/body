{
  MBThreadFlag newMBThreadFlag=addMBThreadFlag();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(MBThreadFlag.class,MBThreadFlag.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("threadFlagId"));
  Object newThreadFlagId=newMBThreadFlag.getThreadFlagId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("threadFlagId",new Object[]{newThreadFlagId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingThreadFlagId=result.get(0);
  Assert.assertEquals(existingThreadFlagId,newThreadFlagId);
}

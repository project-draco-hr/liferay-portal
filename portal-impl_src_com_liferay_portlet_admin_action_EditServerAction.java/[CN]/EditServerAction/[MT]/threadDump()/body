{
  String jvm=System.getProperty("java.vm.name") + " " + System.getProperty("java.vm.version");
  StringBuffer sb=null;
  try {
    sb=new StringBuffer("Full thread dump " + jvm + "\n\n");
    Map<Thread,StackTraceElement[]> stackTraces=(Map<Thread,StackTraceElement[]>)PortalClassInvoker.invoke(Thread.class.getName(),"getAllStackTraces",false);
    Object[] nullArgs=new Object[]{};
    Method getId=Thread.class.getMethod("getId");
    Method getState=Thread.class.getMethod("getState");
    Iterator<Thread> itr=stackTraces.keySet().iterator();
    while (itr.hasNext()) {
      Thread thread=itr.next();
      StackTraceElement[] elements=stackTraces.get(thread);
      sb.append(StringPool.QUOTE);
      sb.append(thread.getName());
      sb.append(StringPool.QUOTE);
      if (thread.getThreadGroup() != null) {
        sb.append(StringPool.SPACE);
        sb.append(StringPool.OPEN_PARENTHESIS);
        sb.append(thread.getThreadGroup().getName());
        sb.append(StringPool.CLOSE_PARENTHESIS);
      }
      sb.append(", priority=" + thread.getPriority());
      sb.append(", id=" + getId.invoke(thread,nullArgs));
      sb.append(", state=" + getState.invoke(thread,nullArgs));
      sb.append("\n");
      for (int i=0; i < elements.length; i++) {
        sb.append("\t" + elements[i] + "\n");
      }
      sb.append("\n");
    }
  }
 catch (  Exception e) {
    ThreadGroup root=Thread.currentThread().getThreadGroup();
    while (root.getParent() != null) {
      root=root.getParent();
    }
    sb=new StringBuffer("Summarized thread dump " + jvm + "\n\n");
    jvm4ThreadDump(sb,root);
  }
  _log.info(sb.toString());
}

{
  final ExportActionableDynamicQuery exportActionableDynamicQuery=new ExportActionableDynamicQuery(){
    @Override public long performCount() throws PortalException {
      ManifestSummary manifestSummary=portletDataContext.getManifestSummary();
      StagedModelType stagedModelType=getStagedModelType();
      long modelAdditionCount=super.performCount();
      manifestSummary.addModelAdditionCount(stagedModelType.toString(),modelAdditionCount);
      long modelDeletionCount=ExportImportHelperUtil.getModelDeletionCount(portletDataContext,new StagedModelType(AssetTag.class));
      manifestSummary.addModelDeletionCount(stagedModelType.toString(),modelDeletionCount);
      return modelAdditionCount;
    }
  }
;
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
  }
);
  exportActionableDynamicQuery.setBaseLocalService(AssetTagLocalServiceUtil.getService());
  exportActionableDynamicQuery.setClass(AssetTag.class);
  exportActionableDynamicQuery.setClassLoader(this.getClass().getClassLoader());
  exportActionableDynamicQuery.setCompanyId(portletDataContext.getCompanyId());
  exportActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
    @Override public void performAction(    Object object) throws PortalException {
      StagedAssetTag stagedAssetTag=ModelAdapterUtil.adapt((AssetTag)object,AssetTag.class,StagedAssetTag.class);
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedAssetTag);
    }
  }
);
  exportActionableDynamicQuery.setPrimaryKeyPropertyName("tagId");
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(StagedAssetTag.class));
  return exportActionableDynamicQuery;
}

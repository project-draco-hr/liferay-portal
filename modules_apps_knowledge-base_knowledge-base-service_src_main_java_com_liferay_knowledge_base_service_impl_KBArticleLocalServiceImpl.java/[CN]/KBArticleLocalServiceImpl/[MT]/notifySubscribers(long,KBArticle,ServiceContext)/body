{
  if (Validator.isNull(serviceContext.getLayoutFullURL())) {
    return;
  }
  KBGroupServiceConfiguration kbGroupServiceConfiguration=getKBGroupServiceConfiguration(kbArticle.getGroupId());
  if (serviceContext.isCommandAdd() && !kbGroupServiceConfiguration.emailKBArticleAddedEnabled()) {
    return;
  }
  if (serviceContext.isCommandUpdate() && !kbGroupServiceConfiguration.emailKBArticleUpdatedEnabled()) {
    return;
  }
  String fromName=kbGroupServiceConfiguration.emailFromName();
  String fromAddress=kbGroupServiceConfiguration.emailFromAddress();
  String kbArticleContent=StringUtil.replace(kbArticle.getContent(),new String[]{"href=\"/","src=\"/"},new String[]{"href=\"" + serviceContext.getPortalURL() + "/","src=\"" + serviceContext.getPortalURL() + "/"});
  Map<String,String> kbArticleDiffs=getEmailKBArticleDiffs(kbArticle);
  for (  Map.Entry<String,String> entry : kbArticleDiffs.entrySet()) {
    String value=StringUtil.replace(entry.getValue(),new String[]{"href=\"/","src=\"/"},new String[]{"href=\"" + serviceContext.getPortalURL() + "/","src=\"" + serviceContext.getPortalURL() + "/"});
    kbArticleDiffs.put(entry.getKey(),value);
  }
  String subject=null;
  String body=null;
  if (serviceContext.isCommandAdd()) {
    subject=kbGroupServiceConfiguration.emailKBArticleAddedSubject();
    body=kbGroupServiceConfiguration.emailKBArticleAddedBody();
  }
 else {
    subject=kbGroupServiceConfiguration.emailKBArticleUpdatedSubject();
    body=kbGroupServiceConfiguration.emailKBArticleUpdatedBody();
  }
  SubscriptionSender subscriptionSender=new AdminSubscriptionSender(kbArticle,serviceContext);
  subscriptionSender.setBody(body);
  subscriptionSender.setCompanyId(kbArticle.getCompanyId());
  subscriptionSender.setContextAttribute("[$ARTICLE_CONTENT$]",kbArticleContent,false);
  subscriptionSender.setContextAttribute("[$ARTICLE_CONTENT_DIFF$]",kbArticleDiffs.get("content"),false);
  subscriptionSender.setContextAttribute("[$ARTICLE_TITLE$]",kbArticle.getTitle(),false);
  subscriptionSender.setContextAttribute("[$ARTICLE_TITLE_DIFF$]",kbArticleDiffs.get("title"),false);
  subscriptionSender.setContextCreatorUserPrefix("ARTICLE");
  subscriptionSender.setCreatorUserId(kbArticle.getUserId());
  subscriptionSender.setCurrentUserId(userId);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setMailId("kb_article",kbArticle.getKbArticleId());
  subscriptionSender.setPortletId(serviceContext.getPortletId());
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setScopeGroupId(kbArticle.getGroupId());
  subscriptionSender.setSubject(subject);
  subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getGroupId());
  subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getResourcePrimKey());
  while (!kbArticle.isRoot() && (kbArticle.getClassNameId() == kbArticle.getParentResourceClassNameId())) {
    kbArticle=getLatestKBArticle(kbArticle.getParentResourcePrimKey(),WorkflowConstants.STATUS_APPROVED);
    subscriptionSender.addPersistedSubscribers(KBArticle.class.getName(),kbArticle.getResourcePrimKey());
  }
  subscriptionSender.flushNotificationsAsync();
}

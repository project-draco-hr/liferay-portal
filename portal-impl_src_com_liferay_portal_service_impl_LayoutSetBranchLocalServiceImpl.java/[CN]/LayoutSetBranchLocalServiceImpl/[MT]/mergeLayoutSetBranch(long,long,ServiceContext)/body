{
  LayoutSetBranch layoutSetBranch=layoutSetBranchPersistence.findByPrimaryKey(layoutSetBranchId);
  LayoutSetBranch mergeLayoutSetBranch=layoutSetBranchPersistence.findByPrimaryKey(mergeLayoutSetBranchId);
  Locale locale=serviceContext.getLocale();
  Format dateFormatDateTime=FastDateFormatFactoryUtil.getDateTime(locale);
  String nowString=dateFormatDateTime.format(new Date());
  serviceContext.setWorkflowAction(WorkflowConstants.STATUS_DRAFT);
  List<LayoutRevision> layoutRevisions=layoutRevisionLocalService.getLayoutRevisions(mergeLayoutSetBranchId,true);
  for (  LayoutRevision layoutRevision : layoutRevisions) {
    String layoutBranchName=getLayoutBranchName(layoutSetBranch.getLayoutSetBranchId(),locale,layoutRevision.getLayoutBranch().getName(),mergeLayoutSetBranch.getName(),layoutRevision.getPlid());
    StringBundler sb=new StringBundler(3);
    sb.append(mergeLayoutSetBranch.getDescription());
    sb.append(StringPool.SPACE);
    sb.append(LanguageUtil.format(locale,"merged-from-x-x",new String[]{mergeLayoutSetBranch.getName(),nowString},false));
    LayoutBranch layoutBranch=layoutBranchLocalService.addLayoutBranch(layoutSetBranch.getLayoutSetBranchId(),layoutRevision.getPlid(),layoutBranchName,sb.toString(),false,serviceContext);
    layoutRevisionLocalService.addLayoutRevision(layoutRevision.getUserId(),layoutSetBranch.getLayoutSetBranchId(),layoutBranch.getLayoutBranchId(),LayoutRevisionConstants.DEFAULT_PARENT_LAYOUT_REVISION_ID,false,layoutRevision.getPlid(),layoutRevision.getLayoutRevisionId(),layoutRevision.isPrivateLayout(),layoutRevision.getName(),layoutRevision.getTitle(),layoutRevision.getDescription(),layoutRevision.getKeywords(),layoutRevision.getRobots(),layoutRevision.getTypeSettings(),layoutRevision.getIconImage(),layoutRevision.getIconImageId(),layoutRevision.getThemeId(),layoutRevision.getColorSchemeId(),layoutRevision.getWapThemeId(),layoutRevision.getWapColorSchemeId(),layoutRevision.getCss(),serviceContext);
  }
  return layoutSetBranch;
}

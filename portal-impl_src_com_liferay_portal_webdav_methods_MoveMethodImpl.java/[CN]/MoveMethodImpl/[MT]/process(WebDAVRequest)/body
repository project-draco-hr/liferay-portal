{
  WebDAVStorage storage=webDAVRequest.getWebDAVStorage();
  HttpServletRequest request=webDAVRequest.getHttpServletRequest();
  long companyId=webDAVRequest.getCompanyId();
  String destination=WebDAVUtil.getDestination(request,storage.getRootPath());
  StringBundler sb=null;
  if (_log.isInfoEnabled()) {
    sb=new StringBundler(4);
    sb.append("Destination is ");
    sb.append(destination);
  }
  if (!destination.equals(webDAVRequest.getPath()) && (WebDAVUtil.getGroupId(companyId,destination) == webDAVRequest.getGroupId())) {
    Resource resource=storage.getResource(webDAVRequest);
    if (resource == null) {
      return HttpServletResponse.SC_NOT_FOUND;
    }
    boolean overwrite=WebDAVUtil.isOverwrite(request);
    if (_log.isInfoEnabled()) {
      sb.append(", overwrite is ");
      sb.append(overwrite);
      _log.info(sb.toString());
    }
    if (resource.isCollection()) {
      return storage.moveCollectionResource(webDAVRequest,resource,destination,overwrite);
    }
 else {
      return storage.moveSimpleResource(webDAVRequest,resource,destination,overwrite);
    }
  }
  return HttpServletResponse.SC_FORBIDDEN;
}

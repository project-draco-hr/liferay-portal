{
  if (Validator.isNull(sku)) {
    throw new ItemSKUException();
  }
  ShoppingItem item=shoppingItemPersistence.fetchByC_S(companyId,sku);
  if ((item != null) && (item.getItemId() != itemId)) {
    StringBundler sb=new StringBundler(5);
    sb.append("{companyId=");
    sb.append(companyId);
    sb.append(", sku=");
    sb.append(sku);
    sb.append("}");
    throw new DuplicateItemSKUException(sb.toString());
  }
  if (Validator.isNull(name)) {
    throw new ItemNameException();
  }
  String[] imageExtensions=PrefsPropsUtil.getStringArray(PropsKeys.SHOPPING_IMAGE_EXTENSIONS,StringPool.COMMA);
  if (smallImage && Validator.isNull(smallImageURL) && (smallImageFile != null)&& (smallImageBytes != null)) {
    String smallImageName=smallImageFile.getName();
    if (smallImageName != null) {
      boolean validSmallImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(smallImageName,imageExtensions[i])) {
          validSmallImageExtension=true;
          break;
        }
      }
      if (!validSmallImageExtension) {
        throw new ItemSmallImageNameException(smallImageName);
      }
    }
    long smallImageMaxSize=PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_MEDIUM_MAX_SIZE);
    if ((smallImageMaxSize > 0) && ((smallImageBytes == null) || (smallImageBytes.length > smallImageMaxSize))) {
      throw new ItemSmallImageSizeException();
    }
  }
  if (mediumImage && Validator.isNull(mediumImageURL) && (mediumImageFile != null)&& (mediumImageBytes != null)) {
    String mediumImageName=mediumImageFile.getName();
    if (mediumImageName != null) {
      boolean validMediumImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(mediumImageName,imageExtensions[i])) {
          validMediumImageExtension=true;
          break;
        }
      }
      if (!validMediumImageExtension) {
        throw new ItemMediumImageNameException(mediumImageName);
      }
    }
    long mediumImageMaxSize=PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_MEDIUM_MAX_SIZE);
    if ((mediumImageMaxSize > 0) && ((mediumImageBytes == null) || (mediumImageBytes.length > mediumImageMaxSize))) {
      throw new ItemMediumImageSizeException();
    }
  }
  if (!largeImage || Validator.isNotNull(largeImageURL) || (largeImageFile == null)|| (largeImageBytes == null)) {
    return;
  }
  String largeImageName=largeImageFile.getName();
  if (largeImageName != null) {
    boolean validLargeImageExtension=false;
    for (int i=0; i < imageExtensions.length; i++) {
      if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(largeImageName,imageExtensions[i])) {
        validLargeImageExtension=true;
        break;
      }
    }
    if (!validLargeImageExtension) {
      throw new ItemLargeImageNameException(largeImageName);
    }
  }
  long largeImageMaxSize=PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_LARGE_MAX_SIZE);
  if ((largeImageMaxSize > 0) && ((largeImageBytes == null) || (largeImageBytes.length > largeImageMaxSize))) {
    throw new ItemLargeImageSizeException();
  }
}

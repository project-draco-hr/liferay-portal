{
  long startTime=System.currentTimeMillis();
  Files.walkFileTree(filePath,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult preVisitDirectory(    Path filePath,    BasicFileAttributes basicFileAttributes){
      SyncFile syncFile=SyncFileService.fetchSyncFile(filePath.toString());
      if (syncFile == null) {
        syncFile=SyncFileService.fetchSyncFile(FileKeyUtil.getFileKey(filePath));
      }
      if (syncFile != null) {
        syncFile.setLocalSyncTime(System.currentTimeMillis());
        SyncFileService.update(syncFile);
      }
      return FileVisitResult.CONTINUE;
    }
    @Override public FileVisitResult visitFile(    Path filePath,    BasicFileAttributes basicFileAttributes){
      SyncFile syncFile=SyncFileService.fetchSyncFile(filePath.toString());
      if (syncFile == null) {
        syncFile=SyncFileService.fetchSyncFile(FileKeyUtil.getFileKey(filePath));
      }
      if (syncFile != null) {
        syncFile.setLocalSyncTime(System.currentTimeMillis());
        SyncFileService.update(syncFile);
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
  List<SyncFile> deletedSyncFiles=SyncFileService.findSyncFiles(filePath.toString(),startTime);
  for (  SyncFile deletedSyncFile : deletedSyncFiles) {
    if (!Files.notExists(Paths.get(deletedSyncFile.getFilePathName()))) {
      continue;
    }
    if (deletedSyncFile.getTypePK() == 0) {
      SyncFileService.deleteSyncFile(deletedSyncFile,false);
      continue;
    }
    if (deletedSyncFile.isFolder()) {
      FileEventUtil.deleteFolder(deletedSyncFile.getSyncAccountId(),deletedSyncFile);
    }
 else {
      FileEventUtil.deleteFile(deletedSyncFile.getSyncAccountId(),deletedSyncFile);
    }
  }
}

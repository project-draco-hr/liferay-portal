{
  long pk=RandomTestUtil.nextLong();
  AssetEntry newAssetEntry=_persistence.create(pk);
  newAssetEntry.setGroupId(RandomTestUtil.nextLong());
  newAssetEntry.setCompanyId(RandomTestUtil.nextLong());
  newAssetEntry.setUserId(RandomTestUtil.nextLong());
  newAssetEntry.setUserName(RandomTestUtil.randomString());
  newAssetEntry.setCreateDate(RandomTestUtil.nextDate());
  newAssetEntry.setModifiedDate(RandomTestUtil.nextDate());
  newAssetEntry.setClassNameId(RandomTestUtil.nextLong());
  newAssetEntry.setClassPK(RandomTestUtil.nextLong());
  newAssetEntry.setClassUuid(RandomTestUtil.randomString());
  newAssetEntry.setClassTypeId(RandomTestUtil.nextLong());
  newAssetEntry.setVisible(RandomTestUtil.randomBoolean());
  newAssetEntry.setStartDate(RandomTestUtil.nextDate());
  newAssetEntry.setEndDate(RandomTestUtil.nextDate());
  newAssetEntry.setPublishDate(RandomTestUtil.nextDate());
  newAssetEntry.setExpirationDate(RandomTestUtil.nextDate());
  newAssetEntry.setMimeType(RandomTestUtil.randomString());
  newAssetEntry.setTitle(RandomTestUtil.randomString());
  newAssetEntry.setDescription(RandomTestUtil.randomString());
  newAssetEntry.setSummary(RandomTestUtil.randomString());
  newAssetEntry.setUrl(RandomTestUtil.randomString());
  newAssetEntry.setLayoutUuid(RandomTestUtil.randomString());
  newAssetEntry.setHeight(RandomTestUtil.nextInt());
  newAssetEntry.setWidth(RandomTestUtil.nextInt());
  newAssetEntry.setPriority(RandomTestUtil.nextDouble());
  newAssetEntry.setViewCount(RandomTestUtil.nextInt());
  _models.add(_persistence.update(newAssetEntry));
  AssetEntry existingAssetEntry=_persistence.findByPrimaryKey(newAssetEntry.getPrimaryKey());
  Assert.assertEquals(existingAssetEntry.getEntryId(),newAssetEntry.getEntryId());
  Assert.assertEquals(existingAssetEntry.getGroupId(),newAssetEntry.getGroupId());
  Assert.assertEquals(existingAssetEntry.getCompanyId(),newAssetEntry.getCompanyId());
  Assert.assertEquals(existingAssetEntry.getUserId(),newAssetEntry.getUserId());
  Assert.assertEquals(existingAssetEntry.getUserName(),newAssetEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getCreateDate()),Time.getShortTimestamp(newAssetEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getModifiedDate()),Time.getShortTimestamp(newAssetEntry.getModifiedDate()));
  Assert.assertEquals(existingAssetEntry.getClassNameId(),newAssetEntry.getClassNameId());
  Assert.assertEquals(existingAssetEntry.getClassPK(),newAssetEntry.getClassPK());
  Assert.assertEquals(existingAssetEntry.getClassUuid(),newAssetEntry.getClassUuid());
  Assert.assertEquals(existingAssetEntry.getClassTypeId(),newAssetEntry.getClassTypeId());
  Assert.assertEquals(existingAssetEntry.getVisible(),newAssetEntry.getVisible());
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getStartDate()),Time.getShortTimestamp(newAssetEntry.getStartDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getEndDate()),Time.getShortTimestamp(newAssetEntry.getEndDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getPublishDate()),Time.getShortTimestamp(newAssetEntry.getPublishDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAssetEntry.getExpirationDate()),Time.getShortTimestamp(newAssetEntry.getExpirationDate()));
  Assert.assertEquals(existingAssetEntry.getMimeType(),newAssetEntry.getMimeType());
  Assert.assertEquals(existingAssetEntry.getTitle(),newAssetEntry.getTitle());
  Assert.assertEquals(existingAssetEntry.getDescription(),newAssetEntry.getDescription());
  Assert.assertEquals(existingAssetEntry.getSummary(),newAssetEntry.getSummary());
  Assert.assertEquals(existingAssetEntry.getUrl(),newAssetEntry.getUrl());
  Assert.assertEquals(existingAssetEntry.getLayoutUuid(),newAssetEntry.getLayoutUuid());
  Assert.assertEquals(existingAssetEntry.getHeight(),newAssetEntry.getHeight());
  Assert.assertEquals(existingAssetEntry.getWidth(),newAssetEntry.getWidth());
  AssertUtils.assertEquals(existingAssetEntry.getPriority(),newAssetEntry.getPriority());
  Assert.assertEquals(existingAssetEntry.getViewCount(),newAssetEntry.getViewCount());
}

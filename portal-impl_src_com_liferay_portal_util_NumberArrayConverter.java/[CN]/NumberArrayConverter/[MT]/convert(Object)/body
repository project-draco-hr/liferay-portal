{
  if (value == null) {
    return null;
  }
  Class<?> type=value.getClass();
  if (type.isArray() == false) {
    if (type == String.class) {
      String[] values=CsvUtil.toStringArray(value.toString());
      return convertArray(values);
    }
    return new Number[]{convertBean.toBigDecimal(value)};
  }
  if (type.getComponentType().isPrimitive()) {
    if (type == double[].class) {
      double[] values=(double[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
    if (type == float[].class) {
      float[] values=(float[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
    if (type == int[].class) {
      int[] values=(int[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
    if (type == long[].class) {
      long[] values=(long[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
    if (type == byte[].class) {
      byte[] values=(byte[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
    if (type == boolean[].class) {
      boolean[] values=(boolean[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=(values[i] == true ? 1 : 0);
      }
      return results;
    }
    if (type == short[].class) {
      short[] values=(short[])value;
      Number[] results=new Number[values.length];
      for (int i=0; i < values.length; i++) {
        results[i]=values[i];
      }
      return results;
    }
  }
  return convertArray((Object[])value);
}

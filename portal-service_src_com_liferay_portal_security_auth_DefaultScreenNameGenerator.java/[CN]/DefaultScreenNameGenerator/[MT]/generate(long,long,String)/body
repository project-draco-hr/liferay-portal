{
  String screenName=null;
  if (Validator.isNotNull(emailAddress)) {
    screenName=StringUtil.extractFirst(emailAddress,StringPool.AT).toLowerCase();
    screenName=StringUtil.replace(screenName,new String[]{StringPool.SLASH,StringPool.UNDERLINE},new String[]{StringPool.PERIOD,StringPool.PERIOD});
    if (screenName.equals(DefaultScreenNameValidator.CYRUS) || screenName.equals(DefaultScreenNameValidator.POSTFIX)) {
      screenName+=StringPool.PERIOD + userId;
    }
  }
 else {
    screenName=String.valueOf(userId);
  }
  String[] reservedScreenNames=PrefsPropsUtil.getStringArray(companyId,PropsKeys.ADMIN_RESERVED_SCREEN_NAMES,StringPool.NEW_LINE,PropsValues.ADMIN_RESERVED_SCREEN_NAMES_VALUES);
  for (  String reservedScreenName : reservedScreenNames) {
    if (screenName.equalsIgnoreCase(reservedScreenName)) {
      return getUnusedScreenName(companyId,screenName);
    }
  }
  try {
    UserLocalServiceUtil.getUserByScreenName(companyId,screenName);
  }
 catch (  NoSuchUserException nsue) {
    try {
      GroupLocalServiceUtil.getFriendlyURLGroup(companyId,StringPool.SLASH + screenName);
    }
 catch (    NoSuchGroupException nsge) {
      return screenName;
    }
  }
  return getUnusedScreenName(companyId,screenName);
}

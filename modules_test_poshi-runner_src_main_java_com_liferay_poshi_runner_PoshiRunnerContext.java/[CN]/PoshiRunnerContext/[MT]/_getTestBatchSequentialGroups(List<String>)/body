{
  Multimap<Properties,String> multimap=HashMultimap.create();
  for (  String classCommandName : classCommandNames) {
    Properties properties=_classCommandNamePropertiesMap.get(classCommandName);
    Set<String> propertyNames=properties.stringPropertyNames();
    for (    String propertyName : propertyNames) {
      if (propertyName.matches(PropsValues.TEST_BATCH_GROUP_IGNORE_REGEX)) {
        properties.remove(propertyName);
      }
    }
    multimap.put(properties,classCommandName);
  }
  Map<Integer,List<String>> classCommandNameGroups=new HashMap<>();
  int classCommandNameIndex=0;
  Map<Properties,Collection<String>> map=multimap.asMap();
  for (  Collection<String> value : map.values()) {
    List<String> classCommandNameGroup=new ArrayList(value);
    Collections.sort(classCommandNameGroup);
    int groupSize=_getAllocatedTestGroupSize(classCommandNameGroup.size());
    List<List<String>> partitions=Lists.partition(classCommandNameGroup,groupSize);
    for (int j=0; j < partitions.size(); j++) {
      classCommandNameGroups.put(classCommandNameIndex,partitions.get(j));
      classCommandNameIndex++;
    }
  }
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < classCommandNameGroups.size(); i++) {
    List<String> classCommandNameGroup=classCommandNameGroups.get(i);
    int subGroupSize=PropsValues.TEST_BATCH_MAX_SUBGROUP_SIZE;
    int subGroupCount=MathUtil.quotient(classCommandNameGroup.size(),subGroupSize,true);
    sb.append("RUN_TEST_CASE_METHOD_GROUP_");
    sb.append(i);
    sb.append("=");
    for (int j=0; j < subGroupCount; j++) {
      sb.append(i);
      sb.append("_");
      sb.append(j);
      if (j < (subGroupCount - 1)) {
        sb.append(" ");
      }
    }
    sb.append("\n");
    for (int j=0; j < classCommandNameGroup.size(); j++) {
      if ((j % subGroupSize) == 0) {
        sb.append("RUN_TEST_CASE_METHOD_GROUP_");
        sb.append(i);
        sb.append("_");
        sb.append(j / subGroupSize);
        sb.append("=");
        sb.append(classCommandNameGroup.get(j));
      }
 else       if (((j + 1) % subGroupSize) == 0) {
        sb.append(",");
        sb.append(classCommandNameGroup.get(j));
        sb.append("\n");
      }
 else {
        sb.append(",");
        sb.append(classCommandNameGroup.get(j));
      }
    }
    sb.append("\n");
  }
  sb.append("RUN_TEST_CASE_METHOD_GROUPS=");
  for (int i=0; i < classCommandNameGroups.size(); i++) {
    sb.append(i);
    if (i < (classCommandNameGroups.size() - 1)) {
      sb.append(" ");
    }
  }
  return sb.toString();
}

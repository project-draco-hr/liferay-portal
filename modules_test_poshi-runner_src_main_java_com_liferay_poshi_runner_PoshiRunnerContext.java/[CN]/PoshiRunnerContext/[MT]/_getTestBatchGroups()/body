{
  StringBuilder sb=new StringBuilder();
  String[] propertyNames=PropsValues.TEST_BATCH_FILTER_PROPERTY_NAMES;
  String[] propertyValues=PropsValues.TEST_BATCH_FILTER_PROPERTY_VALUES;
  List<String> classCommandNames=new ArrayList<>();
  if (propertyNames.length != propertyValues.length) {
    throw new Exception("test.batch.property.names/test.batch.property.values " + "must have matching amounts of entries!");
  }
  for (int i=0; i < propertyNames.length; i++) {
    classCommandNames.addAll(_getRunTestCaseCommandNames(propertyNames[i],propertyValues[i]));
  }
  String testBatchGroups;
  if (PropsValues.TEST_BATCH_RUN_TYPE.equals("sequential")) {
    Map<Integer,List<String>> classCommandNameGroups=_getTestBatchSequentialGroupsMap(classCommandNames);
    testBatchGroups=_getTestBatchSequentialGroups(classCommandNameGroups);
  }
 else   if (PropsValues.TEST_BATCH_RUN_TYPE.equals("single")) {
    Map<Integer,List<String>> classCommandNameGroups=_getTestBatchSingleGroupsMap(classCommandNames);
    testBatchGroups=_getTestBatchSingleGroups(classCommandNameGroups);
  }
 else {
    throw new Exception("test.batch.run.type must be set to 'single' or " + "'sequential'");
  }
  sb.append(testBatchGroups);
  return sb.toString();
}

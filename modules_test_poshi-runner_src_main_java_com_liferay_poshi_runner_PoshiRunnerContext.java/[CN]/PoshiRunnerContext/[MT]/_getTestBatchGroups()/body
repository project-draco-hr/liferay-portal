{
  StringBuilder sb=new StringBuilder();
  String[] propertyNames=PropsValues.TEST_BATCH_FILTER_PROPERTY_NAMES;
  String[] propertyValues=PropsValues.TEST_BATCH_FILTER_PROPERTY_VALUES;
  List<String> classCommandNames=new ArrayList<>();
  if (propertyNames.length != propertyValues.length) {
    throw new Exception("test.batch.property.names/test.batch.property.values " + "must have matching amounts of entries!");
  }
  for (int i=0; i < propertyNames.length; i++) {
    classCommandNames.addAll(_getRunTestCaseCommandNames(propertyNames[i],propertyValues[i]));
  }
  Map<Integer,List<String>> classCommandNameGroups=_getTestBatchSingleGroupsMap(classCommandNames);
  for (int i=0; i < classCommandNameGroups.size(); i++) {
    sb.append("RUN_TEST_CASE_METHOD_GROUP_");
    sb.append(i);
    sb.append("=");
    List<String> classCommandNameGroup=classCommandNameGroups.get(i);
    for (int j=0; j < classCommandNameGroup.size(); j++) {
      String testCaseClassCommandName=classCommandNameGroup.get(j);
      sb.append(testCaseClassCommandName);
      if (j < (classCommandNameGroup.size() - 1)) {
        sb.append(" ");
      }
    }
    sb.append("\n");
  }
  sb.append("RUN_TEST_CASE_METHOD_GROUPS=");
  for (int i=0; i < classCommandNameGroups.size(); i++) {
    sb.append(i);
    if (i < (classCommandNameGroups.size() - 1)) {
      sb.append(" ");
    }
  }
  return sb.toString();
}

{
  StringBuilder sb=new StringBuilder();
  for (  String componentName : _componentNames) {
    String componentNameKey=componentName + "_TEST_CASE_METHOD_NAMES";
    componentNameKey=StringUtil.upperCase(componentNameKey.replace("-","_"));
    sb.append(componentNameKey);
    sb.append("=");
    Set<String> classCommandNames=_componentClassCommandNames.get(componentName);
    if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) {
      Iterator<String> iterator=classCommandNames.iterator();
      while (iterator.hasNext()) {
        sb.append(iterator.next());
        if (iterator.hasNext()) {
          sb.append(" ");
        }
      }
    }
 else {
      sb.append(PropsValues.TEST_NAME);
    }
    sb.append("\n");
  }
  if ((PropsValues.TEST_BATCH_MAX_GROUP_SIZE > 0) && (PropsValues.TEST_BATCH_PROPERTY_NAMES != null) && (PropsValues.TEST_BATCH_PROPERTY_VALUES != null)) {
    String[] propertyNames=PropsValues.TEST_BATCH_PROPERTY_NAMES;
    String[] propertyValues=PropsValues.TEST_BATCH_PROPERTY_VALUES;
    List<String> classCommandNames=new ArrayList<>();
    if (propertyNames.length != propertyValues.length) {
      throw new Exception("test.batch.property.names/test.batch.property.values " + "must have matching amounts of entries!");
    }
    for (int i=0; i < propertyNames.length; i++) {
      classCommandNames.addAll(_getRunTestCaseCommandNames(propertyNames[i],propertyValues[i]));
    }
    int maxGroupSize=PropsValues.TEST_BATCH_MAX_GROUP_SIZE;
    double totalTestCount=classCommandNames.size();
    double totalGroupCount=Math.ceil(totalTestCount / maxGroupSize);
    double groupSize=Math.ceil(totalTestCount / totalGroupCount);
    Map<Integer,List<String>> classCommandNameGroups=new HashMap<>();
    int classCommandNameIndex=0;
    for (    List<String> partition : Lists.partition(classCommandNames,(int)groupSize)) {
      classCommandNameGroups.put(classCommandNameIndex,partition);
      classCommandNameIndex++;
    }
    for (int i=0; i < classCommandNameGroups.size(); i++) {
      sb.append("RUN_TEST_CASE_METHOD_GROUP_");
      sb.append(i);
      sb.append("=");
      List<String> classCommandNameGroup=classCommandNameGroups.get(i);
      for (int j=0; j < classCommandNameGroup.size(); j++) {
        String testCaseClassCommandName=classCommandNameGroup.get(j);
        sb.append(testCaseClassCommandName);
        if (j < (classCommandNameGroup.size() - 1)) {
          sb.append(" ");
        }
      }
      sb.append("\n");
    }
    sb.append("RUN_TEST_CASE_METHOD_GROUPS=");
    for (int i=0; i < classCommandNameGroups.size(); i++) {
      sb.append(i);
      if (i < (classCommandNameGroups.size() - 1)) {
        sb.append(" ");
      }
    }
  }
  FileUtil.write("test.case.method.names.properties",sb.toString());
}

{
  final String prefix="html/themes/" + theme + "/";
  final File frontendThemesWebDir=getFrontendThemesWebDir();
  final File frontendThemesWebFile=getFrontendThemesWebFile();
  final File themeRootDir=getThemeRootDir();
  if (frontendThemesWebDir != null) {
    Closure<Void> closure=new Closure<Void>(null){
      @SuppressWarnings("unused") public void doCall(      CopySpec copySpec){
        copySpec.from(new File(frontendThemesWebDir,prefix));
        if (ArrayUtil.isNotEmpty(excludes)) {
          copySpec.exclude(excludes);
        }
        copySpec.include(include);
        copySpec.into(themeRootDir);
      }
    }
;
    _project.copy(closure);
  }
 else   if (frontendThemesWebFile != null) {
    String jarPrefix="META-INF/resources/" + prefix;
    final String[] prefixedExcludes=StringUtil.prepend(excludes,jarPrefix);
    final String prefixedInclude=jarPrefix + include;
    Closure<Void> closure=new Closure<Void>(null){
      @SuppressWarnings("unused") public void doCall(      CopySpec copySpec){
        copySpec.eachFile(new StripPathSegmentsAction(5));
        if (ArrayUtil.isNotEmpty(prefixedExcludes)) {
          copySpec.exclude(prefixedExcludes);
        }
        copySpec.from(_project.zipTree(frontendThemesWebFile));
        copySpec.include(prefixedInclude);
        copySpec.into(themeRootDir);
        copySpec.setIncludeEmptyDirs(false);
      }
    }
;
    _project.copy(closure);
  }
 else {
    throw new GradleException("Unable to find frontend themes web");
  }
}

{
  boolean isNew=tagsVocabulary.isNew();
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,tagsVocabulary,merge);
    tagsVocabulary.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  TagsVocabularyModelImpl tagsVocabularyModelImpl=(TagsVocabularyModelImpl)tagsVocabulary;
  if (!isNew && ((tagsVocabulary.getGroupId() != tagsVocabularyModelImpl.getOriginalGroupId()) || !tagsVocabulary.getName().equals(tagsVocabularyModelImpl.getOriginalName()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_N,new Object[]{new Long(tagsVocabularyModelImpl.getOriginalGroupId()),tagsVocabularyModelImpl.getOriginalName()});
  }
  if (isNew || ((tagsVocabulary.getGroupId() != tagsVocabularyModelImpl.getOriginalGroupId()) || !tagsVocabulary.getName().equals(tagsVocabularyModelImpl.getOriginalName()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_N,new Object[]{new Long(tagsVocabulary.getGroupId()),tagsVocabulary.getName()},tagsVocabulary);
  }
  EntityCacheUtil.putResult(TagsVocabularyModelImpl.ENTITY_CACHE_ENABLED,TagsVocabulary.class,tagsVocabulary.getPrimaryKey(),tagsVocabulary);
  return tagsVocabulary;
}

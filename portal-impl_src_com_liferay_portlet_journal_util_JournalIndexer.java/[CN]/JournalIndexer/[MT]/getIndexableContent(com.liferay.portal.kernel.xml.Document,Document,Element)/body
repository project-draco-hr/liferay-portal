{
  StringBundler sb=new StringBundler();
  LinkedList<Element> queue=new LinkedList<Element>(rootElement.elements());
  Element element=null;
  while ((element=queue.poll()) != null) {
    String name=element.getName();
    String elName=element.attributeValue("name",StringPool.BLANK);
    String elType=element.attributeValue("type",StringPool.BLANK);
    String elIndexType=element.attributeValue("index-type",StringPool.BLANK);
    if (structureDocument != null) {
      String path=element.getPath().concat("[@name='").concat(elName).concat("']");
      Node structureNode=structureDocument.selectSingleNode(path);
      if (structureNode != null) {
        Element structureElement=(Element)structureNode;
        elType=structureElement.attributeValue("type",StringPool.BLANK);
        elIndexType=structureElement.attributeValue("index-type",StringPool.BLANK);
      }
    }
    if (name.equals("static-content")) {
      String text=element.getText();
      sb.append(text);
      sb.append(StringPool.SPACE);
    }
 else     if (Validator.isNotNull(elType)) {
      indexField(document,element,elType,elIndexType);
      for (      Element dynamicContentElement : element.elements("dynamic-content")) {
        if (elType.equals("list") || elType.equals("multi-list")) {
          for (          Element optionElement : dynamicContentElement.elements("option")) {
            String text=optionElement.getText();
            sb.append(text);
            sb.append(StringPool.SPACE);
          }
        }
 else {
          String text=dynamicContentElement.getText();
          sb.append(text);
          sb.append(StringPool.SPACE);
        }
      }
    }
    queue.addAll(element.elements());
  }
  return sb.toString();
}

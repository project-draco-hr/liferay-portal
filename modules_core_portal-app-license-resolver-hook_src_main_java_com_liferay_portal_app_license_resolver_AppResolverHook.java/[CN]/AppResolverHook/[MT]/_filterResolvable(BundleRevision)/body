{
  if (_log.isDebugEnabled()) {
    _log.debug("Resolving bundle " + bundleRevision.getSymbolicName());
  }
  Bundle bundle=bundleRevision.getBundle();
  Dictionary<String,String> headers=bundle.getHeaders();
  String xLiferayMarketplace=headers.get("X-Liferay-Marketplace");
  if (xLiferayMarketplace == null) {
    return;
  }
  Attrs attrs=OSGiHeader.parseProperties(xLiferayMarketplace);
  String productId=attrs.get("productId");
  if (productId == null) {
    return;
  }
  boolean verified=false;
  String licenseVersion=attrs.get("licenseVersion");
  Filter filter=FrameworkUtil.createFilter("(version=" + licenseVersion + ")");
  SortedMap<ServiceReference<AppLicenseVerifier>,AppLicenseVerifier> serviceReferences=_serviceTracker.getTracked();
  for (  ServiceReference<AppLicenseVerifier> serviceReference : serviceReferences.keySet()) {
    if (!filter.match(serviceReference)) {
      continue;
    }
    AppLicenseVerifier appLicenseVerifier=serviceReferences.get(serviceReference);
    String productType=attrs.get("productType");
    String productVersion=attrs.get("productVersion");
    appLicenseVerifier.verify(bundle,productId,productType,productVersion);
    verified=true;
    break;
  }
  if (!verified) {
    throw new Exception("Unable to resolve " + AppLicenseVerifier.class.getName());
  }
}

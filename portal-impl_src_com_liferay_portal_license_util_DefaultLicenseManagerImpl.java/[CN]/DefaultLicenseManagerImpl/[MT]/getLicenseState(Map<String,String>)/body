{
  String productId=licenseProperties.get("productId");
  if (Validator.isNull(productId)) {
    return 0;
  }
  try {
    JSONObject jsonObject=new JSONObjectImpl();
    byte[] serverIdBytes=LicenseUtil.getServerIdBytes();
    jsonObject.put(Constants.CMD,"GET_LICENSE_STATE");
    jsonObject.put("hostName",getHostName());
    jsonObject.put("ipAddresses",StringUtil.merge(getIpAddresses()));
    jsonObject.put("macAddresses",StringUtil.merge(getMacAddresses()));
    jsonObject.put("productId",productId);
    String productVersion=licenseProperties.get("productVersion");
    jsonObject.put("productVersion",productVersion);
    UUID uuid=new UUID(SecureRandomUtil.nextLong(),SecureRandomUtil.nextLong());
    String randomUuid=uuid.toString();
    jsonObject.put("randomUuid",randomUuid);
    jsonObject.put("serverId",Arrays.toString(serverIdBytes));
    String userCount=licenseProperties.get("userCount");
    jsonObject.put("userCount",userCount);
    jsonObject.put("version",2);
    String response=LicenseUtil.sendRequest(jsonObject.toString());
    JSONObject responseJSONObject=new JSONObjectImpl(response);
    String errorMessage=responseJSONObject.getString("errorMessage");
    if (Validator.isNotNull(errorMessage)) {
      throw new Exception(errorMessage);
    }
    String responseRandomUuid=responseJSONObject.getString("randomUuid");
    if (responseRandomUuid.equals(randomUuid)) {
      int licenseState=responseJSONObject.getInt("licenseState");
      return licenseState;
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return 0;
}

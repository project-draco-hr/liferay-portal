{
  if (!GetterUtil.getBoolean(PropsUtil.get("dl.file.entry.type.igimage"))) {
    return xml;
  }
  PortletPreferences portletPreferences=PortletPreferencesFactoryUtil.fromXML(companyId,ownerId,ownerType,plid,portletId,xml);
  String classNameIds[]=portletPreferences.getValues("classNameIds",null);
  if (Validator.isNotNull(classNameIds)) {
    long igClassNameId=PortalUtil.getClassNameId("com.liferay.portlet.imagegallery.model.IGImage");
    long dlClassNameId=PortalUtil.getClassNameId(DLFileEntry.class.getName());
    List<String> list=new LinkedList<String>(Arrays.asList(classNameIds));
    int index=list.indexOf(String.valueOf(igClassNameId));
    if (index >= 0) {
      list.remove(index);
      if (!list.contains(String.valueOf(dlClassNameId))) {
        list.add(index,String.valueOf(dlClassNameId));
      }
    }
    portletPreferences.setValues("classNameIds",list.toArray(new String[list.size()]));
    long fileEntryTypeId=getIGImageFileEntryType(companyId);
    portletPreferences.setValue("anyClassTypeDLFileEntryAssetRendererFactory",String.valueOf(fileEntryTypeId));
    portletPreferences.setValue("classTypeIds",String.valueOf(fileEntryTypeId));
  }
  return PortletPreferencesFactoryUtil.toXML(portletPreferences);
}

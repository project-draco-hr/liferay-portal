{
  if (!GetterUtil.getBoolean(PropsUtil.get(PropsKeys.DL_FILE_ENTRY_TYPE_IGIMAGE))) {
    return xml;
  }
  PortletPreferences portletPreferences=PortletPreferencesFactoryUtil.fromXML(companyId,ownerId,ownerType,plid,portletId,xml);
  String classNameIdsPreference[]=portletPreferences.getValues("classNameIds",null);
  if (Validator.isNotNull(classNameIdsPreference)) {
    long igClassNameId=PortalUtil.getClassNameId("com.liferay.portlet.imagegallery.model.IGImage");
    long dlClassNameId=PortalUtil.getClassNameId(DLFileEntry.class.getName());
    List<String> classNameIds=ListUtil.fromArray(classNameIdsPreference);
    int index=classNameIds.indexOf(String.valueOf(igClassNameId));
    if (index >= 0) {
      classNameIds.remove(index);
      if (!classNameIds.contains(String.valueOf(dlClassNameId))) {
        classNameIds.add(index,String.valueOf(dlClassNameId));
      }
    }
    portletPreferences.setValues("classNameIds",classNameIds.toArray(new String[classNameIds.size()]));
    long fileEntryTypeId=getIGImageFileEntryType(companyId);
    portletPreferences.setValue("anyClassTypeDLFileEntryAssetRendererFactory",String.valueOf(fileEntryTypeId));
    portletPreferences.setValue("classTypeIds",String.valueOf(fileEntryTypeId));
  }
  return PortletPreferencesFactoryUtil.toXML(portletPreferences);
}

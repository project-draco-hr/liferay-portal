{
  Document document=null;
  ObjectId checkOutDocumentObjectId=null;
  try {
    Session session=getSession();
    String versionSeriesId=toFileEntryId(fileEntryId);
    document=(Document)session.getObject(versionSeriesId);
    String versionSeriesCheckedOutId=document.getVersionSeriesCheckedOutId();
    if (Validator.isNotNull(versionSeriesCheckedOutId)) {
      document=(Document)session.getObject(versionSeriesCheckedOutId);
      document.refresh();
    }
    String currentTitle=document.getName();
    AllowableActions allowableActions=document.getAllowableActions();
    Set<Action> allowableActionsSet=allowableActions.getAllowableActions();
    if (allowableActionsSet.contains(Action.CAN_CHECK_OUT)) {
      checkOutDocumentObjectId=document.checkOut();
      document=(Document)session.getObject(checkOutDocumentObjectId);
    }
    Map<String,Object> properties=null;
    ContentStream contentStream=null;
    if (Validator.isNotNull(title) && !title.equals(currentTitle)) {
      properties=new HashMap<String,Object>();
      properties.put(PropertyIds.NAME,title);
    }
    if (is != null) {
      contentStream=new ContentStreamImpl(sourceFileName,BigInteger.valueOf(size),mimeType,is);
    }
    checkUpdatable(allowableActionsSet,properties,contentStream);
    if (checkOutDocumentObjectId != null) {
      if (!isSupportsMinorVersions()) {
        majorVersion=true;
      }
      document.checkIn(majorVersion,properties,contentStream,changeLog);
      checkOutDocumentObjectId=null;
    }
 else {
      if (properties != null) {
        document=(Document)document.updateProperties(properties);
      }
      if (contentStream != null) {
        document.setContentStream(contentStream,true,false);
      }
    }
    document=(Document)session.getObject(versionSeriesId);
    return toFileEntry(document);
  }
 catch (  PortalException pe) {
    throw pe;
  }
catch (  SystemException se) {
    throw se;
  }
catch (  Exception e) {
    processException(e);
    throw new RepositoryException(e);
  }
 finally {
    if (checkOutDocumentObjectId != null) {
      document.cancelCheckOut();
    }
  }
}

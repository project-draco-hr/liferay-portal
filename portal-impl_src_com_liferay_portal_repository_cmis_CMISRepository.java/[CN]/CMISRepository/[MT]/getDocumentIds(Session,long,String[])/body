{
  StringBundler sb=new StringBundler();
  sb.append("SELECT cmis:objectId FROM cmis:document");
  if (ArrayUtil.isNotEmpty(mimeTypes)) {
    sb.append(" WHERE cmis:contentStreamMimeType IN (");
    for (int i=0; i < mimeTypes.length; i++) {
      sb.append(StringUtil.quote(mimeTypes[i]));
      if ((i + 1) < mimeTypes.length) {
        sb.append(", ");
      }
    }
    sb.append(StringPool.CLOSE_PARENTHESIS);
  }
  if (folderId > 0) {
    if (ArrayUtil.isNotEmpty(mimeTypes)) {
      sb.append(" AND ");
    }
 else {
      sb.append(" WHERE ");
    }
    sb.append("IN_FOLDER(");
    String objectId=toFolderId(session,folderId);
    sb.append(StringUtil.quote(objectId));
    sb.append(StringPool.CLOSE_PARENTHESIS);
  }
  String query=sb.toString();
  if (_log.isDebugEnabled()) {
    _log.debug("Calling query " + query);
  }
  ItemIterable<QueryResult> queryResults=session.query(query,false);
  List<String> cmisDocumentIds=new ArrayList<>();
  for (  QueryResult queryResult : queryResults) {
    String objectId=queryResult.getPropertyValueByQueryName(PropertyIds.OBJECT_ID);
    cmisDocumentIds.add(objectId);
  }
  return cmisDocumentIds;
}

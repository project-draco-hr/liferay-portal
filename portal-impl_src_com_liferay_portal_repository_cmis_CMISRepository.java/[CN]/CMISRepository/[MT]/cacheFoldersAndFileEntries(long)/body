{
  try {
    Map<Long,List<Object>> foldersAndFileEntriesCache=_foldersAndFileEntriesCache.get();
    if (foldersAndFileEntriesCache.containsKey(folderId)) {
      return;
    }
    List<Object> foldersAndFileEntries=new ArrayList<Object>();
    List<Folder> folders=new ArrayList<Folder>();
    List<FileEntry> fileEntries=new ArrayList<FileEntry>();
    Session session=getSession();
    org.apache.chemistry.opencmis.client.api.Folder cmisParentFolder=getCmisFolder(session,folderId);
    Folder parentFolder=toFolder(cmisParentFolder);
    ItemIterable<CmisObject> cmisObjects=cmisParentFolder.getChildren();
    for (    CmisObject cmisObject : cmisObjects) {
      if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) {
        CMISFolder cmisFolder=(CMISFolder)toFolder((org.apache.chemistry.opencmis.client.api.Folder)cmisObject);
        cmisFolder.setParentFolder(parentFolder);
        foldersAndFileEntries.add(cmisFolder);
        folders.add(cmisFolder);
      }
 else       if (cmisObject instanceof Document) {
        CMISFileEntry cmisFileEntry=(CMISFileEntry)toFileEntry((Document)cmisObject);
        cmisFileEntry.setParentFolder(parentFolder);
        foldersAndFileEntries.add(cmisFileEntry);
        fileEntries.add(cmisFileEntry);
      }
    }
    foldersAndFileEntriesCache.put(folderId,foldersAndFileEntries);
    Map<Long,List<Folder>> foldersCache=_foldersCache.get();
    foldersCache.put(folderId,folders);
    Map<Long,List<FileEntry>> fileEntriesCache=_fileEntriesCache.get();
    fileEntriesCache.put(folderId,fileEntries);
  }
 catch (  SystemException se) {
    throw se;
  }
catch (  Exception e) {
    throw new RepositoryException(e);
  }
}

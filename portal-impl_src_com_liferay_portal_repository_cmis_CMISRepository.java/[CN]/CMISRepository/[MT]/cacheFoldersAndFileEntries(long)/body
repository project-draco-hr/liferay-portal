{
  try {
    Map<Long,List<Object>> foldersAndFileEntriesCache=_foldersAndFileEntriesCache.get();
    if (foldersAndFileEntriesCache.containsKey(folderId)) {
      return;
    }
    List<Object> foldersAndFileEntries=new ArrayList<Object>();
    List<Folder> folders=new ArrayList<Folder>();
    List<FileEntry> fileEntries=new ArrayList<FileEntry>();
    Iterator<CmisObject> itr=getIterator(folderId);
    while (itr.hasNext()) {
      CmisObject cmisObject=itr.next();
      if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) {
        Folder folder=toFolder((org.apache.chemistry.opencmis.client.api.Folder)cmisObject);
        foldersAndFileEntries.add(folder);
        folders.add(folder);
      }
 else       if (cmisObject instanceof Document) {
        FileEntry fileEntry=toFileEntry((Document)cmisObject);
        foldersAndFileEntries.add(fileEntry);
        fileEntries.add(fileEntry);
      }
    }
    foldersAndFileEntriesCache.put(folderId,foldersAndFileEntries);
    Map<Long,List<Folder>> foldersCache=_foldersCache.get();
    foldersCache.put(folderId,folders);
    Map<Long,List<FileEntry>> fileEntriesCache=_fileEntriesCache.get();
    fileEntriesCache.put(folderId,fileEntries);
  }
 catch (  SystemException se) {
    throw se;
  }
catch (  Exception e) {
    throw new RepositoryException(e);
  }
}

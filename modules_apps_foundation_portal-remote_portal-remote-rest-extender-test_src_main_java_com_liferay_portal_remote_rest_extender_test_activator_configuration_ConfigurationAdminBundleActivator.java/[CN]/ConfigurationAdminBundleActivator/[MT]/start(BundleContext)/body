{
  ServiceReference<ConfigurationAdmin> serviceReference=bundleContext.getServiceReference(ConfigurationAdmin.class);
  try {
    ConfigurationAdmin configurationAdmin=bundleContext.getService(serviceReference);
    _cxfConfiguration=configurationAdmin.createFactoryConfiguration("com.liferay.portal.remote.cxf.common.configuration." + "CXFEndpointPublisherConfiguration",null);
    Dictionary<String,Object> properties=new Hashtable<>();
    properties.put("contextPath","/rest-test");
    _cxfConfiguration.update(properties);
    _restConfiguration=configurationAdmin.createFactoryConfiguration("com.liferay.portal.remote.rest.extender.configuration." + "RestExtenderConfiguration",null);
    properties=new Hashtable<>();
    properties.put("contextPaths",new String[]{"/rest-test"});
    properties.put("jaxRsApplicationFilterStrings",new String[]{"(jaxrs.application=true)"});
    _restConfiguration.update(properties);
    properties=new Hashtable<>();
    properties.put("jaxrs.application",true);
    _serviceRegistration=bundleContext.registerService(Application.class,new Greeter(),properties);
    ServiceTracker<Bus,Bus> serviceTracker=ServiceTrackerFactory.open(bundleContext,"(&(objectClass=" + Bus.class.getName() + ")("+ HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_PATH+ "=/rest-test))");
    Bus bus=serviceTracker.waitForService(10000L);
    if (bus == null) {
      throw new IllegalStateException("Bus was not registered within 10 seconds");
    }
    ServerRegistry serverRegistry=bus.getExtension(ServerRegistry.class);
    List<Server> servers=null;
    for (int i=0; i <= 100; i++) {
      servers=serverRegistry.getServers();
      if (!servers.isEmpty()) {
        break;
      }
      Thread.sleep(100);
    }
    if (servers.isEmpty()) {
      _cleanUp(bundleContext);
      throw new IllegalStateException("Endpoint was not registered within 10 seconds");
    }
  }
  finally {
    bundleContext.ungetService(serviceReference);
  }
}

{
  if (ArrayUtil.isEmpty(ddmStructureIds)) {
    return;
  }
  JournalFolder folder=journalFolderPersistence.findByPrimaryKey(folderId);
  List<JournalArticle> articles=journalArticleLocalService.getArticles(folder.getGroupId(),folderId);
  if (!articles.isEmpty()) {
    long classNameId=classNameLocalService.getClassNameId(JournalArticle.class);
    for (    JournalArticle article : articles) {
      DDMStructure ddmStructure=ddmStructureLocalService.fetchStructure(article.getGroupId(),classNameId,article.getDDMStructureKey(),true);
      if (ddmStructure == null) {
        StringBundler sb=new StringBundler(7);
        sb.append("No DDM structure exists for group ");
        sb.append(article.getGroupId());
        sb.append(", class name ");
        sb.append(classNameId);
        sb.append(", and structure key ");
        sb.append(article.getDDMStructureKey());
        sb.append(" that includes ancestor structures");
        throw new InvalidDDMStructureException(sb.toString());
      }
      if (!ArrayUtil.contains(ddmStructureIds,ddmStructure.getStructureId())) {
        throw new InvalidDDMStructureException("Invalid DDM structure " + ddmStructure.getStructureId());
      }
    }
  }
  List<JournalFolder> folders=journalFolderPersistence.findByG_P(folder.getGroupId(),folder.getFolderId());
  if (folders.isEmpty()) {
    return;
  }
  for (  JournalFolder curFolder : folders) {
    validateArticleDDMStructures(curFolder.getFolderId(),ddmStructureIds);
  }
}

{
  String property=analyzer.getProperty("-spring-dependency");
  Parameters parameters=analyzer.parseHeader(property);
  if (parameters.isEmpty()) {
    return false;
  }
  Jar jar=analyzer.getJar();
  Collection<Clazz> classes=analyzer.getClasses();
  Set<String> serviceReferences=new TreeSet<String>();
  for (  String key : parameters.keySet()) {
    ServiceReferenceCollector serviceReferenceCollector=new ServiceReferenceCollector(key);
    for (    Clazz clazz : classes) {
      clazz.parseClassFileWithCollector(serviceReferenceCollector);
    }
    serviceReferences.addAll(serviceReferenceCollector.getServiceReferences());
  }
  String releaseInfo=getReleaseInfo(analyzer);
  if (!releaseInfo.equals("")) {
    serviceReferences.add(releaseInfo);
  }
  jar.putResource("OSGI-INF/context/context.dependencies",new ContextDependencyWriter(analyzer,serviceReferences));
  return false;
}

{
  try {
    SearchContainerRowTag<R> searchContainerRowTag=(SearchContainerRowTag<R>)findAncestorWithClass(this,SearchContainerRowTag.class);
    ResultRow resultRow=searchContainerRowTag.getRow();
    if (Validator.isNotNull(_property)) {
      _value=(Date)BeanPropertiesUtil.getObject(resultRow.getObject(),_property);
    }
    if (index <= -1) {
      List<SearchEntry> searchEntries=resultRow.getEntries();
      index=searchEntries.size();
    }
    if (resultRow.isRestricted()) {
      _href=null;
    }
    TextSearchEntry textSearchEntry=new TextSearchEntry();
    textSearchEntry.setAlign(getAlign());
    textSearchEntry.setColspan(getColspan());
    textSearchEntry.setCssClass(getCssClass());
    textSearchEntry.setHref((String)getHref());
    if (Validator.isNotNull(_value)) {
      Object[] localeAndTimeZone=getLocaleAndTimeZone(pageContext);
      Format dateFormatDateTime=FastDateFormatFactoryUtil.getDateTime((Locale)localeAndTimeZone[0],(TimeZone)localeAndTimeZone[1]);
      StringBundler sb=new StringBundler(5);
      sb.append("<span onmouseover=\"Liferay.Portal.ToolTip.show(this, '");
      sb.append(dateFormatDateTime.format(_value));
      sb.append("')\">");
      sb.append(LanguageUtil.format(pageContext,"x-ago",LanguageUtil.getTimeDescription(pageContext,System.currentTimeMillis() - _value.getTime(),true)));
      sb.append("</span>");
      textSearchEntry.setName(sb.toString());
    }
 else {
      textSearchEntry.setName(StringPool.BLANK);
    }
    textSearchEntry.setValign(getValign());
    resultRow.addSearchEntry(index,textSearchEntry);
    return EVAL_PAGE;
  }
  finally {
    index=-1;
    _value=null;
    if (!ServerDetector.isResin()) {
      align=SearchEntry.DEFAULT_ALIGN;
      colspan=SearchEntry.DEFAULT_COLSPAN;
      cssClass=SearchEntry.DEFAULT_CSS_CLASS;
      _href=null;
      name=null;
      _orderable=false;
      _orderableProperty=null;
      _property=null;
      _timeZone=null;
      valign=SearchEntry.DEFAULT_VALIGN;
    }
  }
}

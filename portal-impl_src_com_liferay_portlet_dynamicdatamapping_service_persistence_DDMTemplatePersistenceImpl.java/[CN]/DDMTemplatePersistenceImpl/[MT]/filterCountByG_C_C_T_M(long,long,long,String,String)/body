{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return countByG_C_C_T_M(groupId,classNameId,classPK,type,mode);
  }
  StringBundler query=new StringBundler(6);
  query.append(_FILTER_SQL_COUNT_DDMTEMPLATE_WHERE);
  query.append(_FINDER_COLUMN_G_C_C_T_M_GROUPID_2);
  query.append(_FINDER_COLUMN_G_C_C_T_M_CLASSNAMEID_2);
  query.append(_FINDER_COLUMN_G_C_C_T_M_CLASSPK_2);
  boolean bindType=false;
  if (type == null) {
    query.append(_FINDER_COLUMN_G_C_C_T_M_TYPE_1_SQL);
  }
 else   if (type.equals(StringPool.BLANK)) {
    query.append(_FINDER_COLUMN_G_C_C_T_M_TYPE_3_SQL);
  }
 else {
    bindType=true;
    query.append(_FINDER_COLUMN_G_C_C_T_M_TYPE_2_SQL);
  }
  boolean bindMode=false;
  if (mode == null) {
    query.append(_FINDER_COLUMN_G_C_C_T_M_MODE_1_SQL);
  }
 else   if (mode.equals(StringPool.BLANK)) {
    query.append(_FINDER_COLUMN_G_C_C_T_M_MODE_3_SQL);
  }
 else {
    bindMode=true;
    query.append(_FINDER_COLUMN_G_C_C_T_M_MODE_2_SQL);
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),DDMTemplate.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,groupId);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(classNameId);
    qPos.add(classPK);
    if (bindType) {
      qPos.add(type);
    }
    if (bindMode) {
      qPos.add(mode);
    }
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  Callable<Void> callable=new Callable<Void>(){
    public Void call() throws Exception {
      ObjectValuePair<ClusterLinkImpl,JChannel[]> clusterPlatform=_getClusterLinkPlatform(2,true);
      _handleLog(ClusterLinkImpl.class,Level.FINE);
      JChannel[] actualChannel1=new JChannel[5];
      JChannel[] actualChannel2=new JChannel[5];
      try {
        actualChannel1[0]=clusterPlatform.getKey().getChannel(Priority.LEVEL1);
        actualChannel1[1]=clusterPlatform.getKey().getChannel(Priority.LEVEL2);
        actualChannel1[2]=clusterPlatform.getKey().getChannel(Priority.LEVEL3);
        actualChannel1[3]=clusterPlatform.getKey().getChannel(Priority.LEVEL4);
        actualChannel1[4]=clusterPlatform.getKey().getChannel(Priority.LEVEL5);
        actualChannel2[0]=clusterPlatform.getKey().getChannel(Priority.LEVEL6);
        actualChannel2[1]=clusterPlatform.getKey().getChannel(Priority.LEVEL7);
        actualChannel2[2]=clusterPlatform.getKey().getChannel(Priority.LEVEL8);
        actualChannel2[3]=clusterPlatform.getKey().getChannel(Priority.LEVEL9);
        actualChannel2[4]=clusterPlatform.getKey().getChannel(Priority.LEVEL10);
      }
 catch (      Exception e) {
        fail();
      }
      JChannel expectedChannel1=clusterPlatform.getValue()[0];
      JChannel expectedChannel2=clusterPlatform.getValue()[1];
      for (int i=0; i < 5; i++) {
        assertEquals(expectedChannel1,actualChannel1[i]);
        assertEquals(expectedChannel2,actualChannel2[i]);
      }
      clusterPlatform.getKey().destroy();
      return null;
    }
  }
;
  runInNewClassLoader((Class<? extends Callable<Void>>)callable.getClass());
}

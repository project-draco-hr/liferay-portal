{
  TransportationConfigurationAdvice.setChannelCount(1);
  ClusterLinkImpl clusterLinkImpl1=getClusterLinkImpl();
  ClusterLinkImpl clusterLinkImpl2=getClusterLinkImpl();
  ClusterLinkImpl clusterLinkImpl3=getClusterLinkImpl();
  List<JChannel> jChannels1=getJChannels(clusterLinkImpl1);
  List<JChannel> jChannels2=getJChannels(clusterLinkImpl2);
  List<JChannel> jChannels3=getJChannels(clusterLinkImpl3);
  TestReceiver testReceiver1=getTestReceiver(jChannels1,0);
  TestReceiver testReceiver2=getTestReceiver(jChannels2,0);
  TestReceiver testReceiver3=getTestReceiver(jChannels3,0);
  Message message=createMessage();
  clusterLinkImpl1.sendMulticastMessage(message,Priority.LEVEL1);
  String localMessage1=testReceiver1.waitLocalMessage();
  String remoteMessage1=testReceiver1.waitRemoteMessage();
  String localMessage2=testReceiver2.waitLocalMessage();
  String remoteMessage2=testReceiver2.waitRemoteMessage();
  String localMessage3=testReceiver3.waitLocalMessage();
  String remoteMessage3=testReceiver3.waitRemoteMessage();
  String messageKey=(String)message.getPayload();
  Assert.assertEquals(messageKey,localMessage1);
  Assert.assertNull(remoteMessage1);
  Assert.assertNull(localMessage2);
  Assert.assertEquals(messageKey,remoteMessage2);
  Assert.assertNull(localMessage3);
  Assert.assertEquals(messageKey,remoteMessage3);
  clusterLinkImpl1.destroy();
  clusterLinkImpl2.destroy();
  clusterLinkImpl3.destroy();
}

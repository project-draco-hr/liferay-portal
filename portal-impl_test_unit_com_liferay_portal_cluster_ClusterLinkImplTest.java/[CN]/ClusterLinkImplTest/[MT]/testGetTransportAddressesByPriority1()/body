{
  Callable<Void> callable=new Callable<Void>(){
    public Void call() throws Exception {
      ObjectValuePair<ClusterLinkImpl,JChannel[]> clusterPlatform1=_getClusterLinkPlatform(2,true);
      ObjectValuePair<ClusterLinkImpl,JChannel[]> clusterPlatform2=_getClusterLinkPlatform(2,true);
      List<Address> addresses1=null;
      List<Address> addresses2=null;
      try {
        addresses1=clusterPlatform1.getKey().getTransportAddresses(Priority.LEVEL1);
        addresses2=clusterPlatform1.getKey().getTransportAddresses(Priority.LEVEL6);
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail();
      }
      org.jgroups.Address exceptedAddress1=clusterPlatform1.getValue()[0].getAddress();
      org.jgroups.Address exceptedAddress2=clusterPlatform1.getValue()[1].getAddress();
      org.jgroups.Address exceptedAddress3=clusterPlatform2.getValue()[0].getAddress();
      org.jgroups.Address exceptedAddress4=clusterPlatform2.getValue()[1].getAddress();
      assertEquals(2,addresses1.size());
      assertEquals(exceptedAddress1,addresses1.get(0).getRealAddress());
      assertEquals(exceptedAddress3,addresses1.get(1).getRealAddress());
      assertEquals(2,addresses2.size());
      assertEquals(exceptedAddress2,addresses2.get(0).getRealAddress());
      assertEquals(exceptedAddress4,addresses2.get(1).getRealAddress());
      clusterPlatform1.getKey().destroy();
      clusterPlatform2.getKey().destroy();
      return null;
    }
  }
;
  runInNewClassLoader((Class<? extends Callable<Void>>)callable.getClass());
}

{
  Callable<Void> callable=new Callable<Void>(){
    public Void call() throws Exception {
      ObjectValuePair<ClusterLinkImpl,JChannel[]> clusterPlatform1=_getClusterLinkPlatform(1,true);
      ObjectValuePair<ClusterLinkImpl,JChannel[]> clusterPlatform2=_getClusterLinkPlatform(1,true);
      Message message=_createMessage();
      TestReceiver testReceiver1=(TestReceiver)clusterPlatform1.getValue()[0].getReceiver();
      TestReceiver testReceiver2=(TestReceiver)clusterPlatform2.getValue()[0].getReceiver();
      testReceiver2.setRemoteMessageCount(1);
      try {
        clusterPlatform1.getKey().sendUnicastMessage(new AddressImpl(clusterPlatform2.getValue()[0].getAddress()),message,Priority.LEVEL1);
        testReceiver2.waitRemoteMessage();
      }
 catch (      Exception e) {
        fail();
      }
      Set<String> localMessages1=testReceiver1.getReceivedLocalMessages();
      Set<String> remoteMessages1=testReceiver1.getReceivedRemoteMessages();
      Set<String> localMessages2=testReceiver2.getReceivedLocalMessages();
      Set<String> remoteMessages2=testReceiver2.getReceivedRemoteMessages();
      assertEquals(0,localMessages1.size());
      assertEquals(0,remoteMessages1.size());
      assertEquals(0,localMessages2.size());
      assertEquals(1,remoteMessages2.size());
      assertTrue(remoteMessages2.contains((String)message.getPayload()));
      clusterPlatform1.getKey().destroy();
      clusterPlatform2.getKey().destroy();
      return null;
    }
  }
;
  runInNewClassLoader((Class<? extends Callable<Void>>)callable.getClass());
}

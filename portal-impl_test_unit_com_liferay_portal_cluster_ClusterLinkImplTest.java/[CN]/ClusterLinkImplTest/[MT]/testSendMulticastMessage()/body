{
  TransportationConfigurationAdvice.setChannelCount(1);
  BaseReceiverAdvice.reset(3);
  ClusterLinkImpl clusterLinkImpl1=null;
  ClusterLinkImpl clusterLinkImpl2=null;
  ClusterLinkImpl clusterLinkImpl3=null;
  try {
    clusterLinkImpl1=getClusterLinkImpl();
    clusterLinkImpl2=getClusterLinkImpl();
    clusterLinkImpl3=getClusterLinkImpl();
    List<JChannel> jChannels1=getJChannels(clusterLinkImpl1);
    List<JChannel> jChannels2=getJChannels(clusterLinkImpl2);
    List<JChannel> jChannels3=getJChannels(clusterLinkImpl3);
    JChannel jChannel1=jChannels1.get(0);
    JChannel jChannel2=jChannels2.get(0);
    JChannel jChannel3=jChannels3.get(0);
    Receiver receiver1=jChannel1.getReceiver();
    Receiver receiver2=jChannel2.getReceiver();
    Receiver receiver3=jChannel3.getReceiver();
    Message message=createMessage();
    clusterLinkImpl1.sendMulticastMessage(message,Priority.LEVEL1);
    org.jgroups.Address sourceAddress=jChannel1.getAddress();
    BaseReceiverAdvice.awaitMessageReceived();
    Message receivedMessage1=(Message)BaseReceiverAdvice.getJgroupsMessagePayload(receiver1,sourceAddress);
    Message receivedMessage2=(Message)BaseReceiverAdvice.getJgroupsMessagePayload(receiver2,sourceAddress);
    Message receivedMessage3=(Message)BaseReceiverAdvice.getJgroupsMessagePayload(receiver3,sourceAddress);
    Assert.assertEquals(message.getPayload(),receivedMessage1.getPayload());
    Assert.assertEquals(message.getPayload(),receivedMessage2.getPayload());
    Assert.assertEquals(message.getPayload(),receivedMessage3.getPayload());
  }
  finally {
    if (clusterLinkImpl1 != null) {
      clusterLinkImpl1.destroy();
    }
    if (clusterLinkImpl2 != null) {
      clusterLinkImpl2.destroy();
    }
    if (clusterLinkImpl3 != null) {
      clusterLinkImpl3.destroy();
    }
  }
}

{
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setScopeGroupId(TestPropsValues.getGroupId());
  User user=TestPropsValues.getUser();
  MBMessage message=MBMessageLocalServiceUtil.addMessage(user.getUserId(),user.getFullName(),TestPropsValues.getGroupId(),MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID,"Message Subject","Message Body",MBMessageConstants.DEFAULT_FORMAT,getInputStreamOVPs("company_logo.png"),false,0,false,serviceContext);
  int initialNotInTrashCount=message.getAttachmentsFiles().length;
  int initialTrashEntriesCount=message.getDeletedAttachmentsFiles().length;
  String[] existingAttachments=DLStoreUtil.getFileNames(message.getCompanyId(),CompanyConstants.SYSTEM,message.getAttachmentsDir());
  List<String> existingFiles=new ArrayList<String>();
  for (int i=0; i < existingAttachments.length; i++) {
    existingFiles.add(existingAttachments[i]);
  }
  message=MBMessageLocalServiceUtil.updateMessage(user.getUserId(),message.getMessageId(),"Message Subject","Message Body",getInputStreamOVPs("OSX_Test.docx"),existingFiles,0,false,serviceContext);
  Assert.assertEquals(initialTrashEntriesCount,message.getDeletedAttachmentsFiles().length);
  Assert.assertEquals(initialNotInTrashCount + 1,message.getAttachmentsFiles().length);
  String fileName=message.getAttachmentsFiles()[0];
  MBMessageLocalServiceUtil.moveMessageAttachmentToTrash(message.getMessageId(),fileName);
  Assert.assertEquals(initialTrashEntriesCount + 1,message.getDeletedAttachmentsFiles().length);
  Assert.assertEquals(initialNotInTrashCount,message.getAttachmentsFiles().length);
  fileName=message.getDeletedAttachmentsFiles()[0];
  MBMessageLocalServiceUtil.moveMessageAttachmentFromTrash(message.getMessageId(),fileName);
  Assert.assertEquals(initialTrashEntriesCount,message.getDeletedAttachmentsFiles().length);
  Assert.assertEquals(initialNotInTrashCount + 1,message.getAttachmentsFiles().length);
}

{
  long pk=nextLong();
  Website newWebsite=_persistence.create(pk);
  newWebsite.setCompanyId(nextLong());
  newWebsite.setUserId(nextLong());
  newWebsite.setUserName(randomString());
  newWebsite.setCreateDate(nextDate());
  newWebsite.setModifiedDate(nextDate());
  newWebsite.setClassNameId(nextLong());
  newWebsite.setClassPK(nextLong());
  newWebsite.setUrl(randomString());
  newWebsite.setTypeId(nextInt());
  newWebsite.setPrimary(randomBoolean());
  _persistence.update(newWebsite,false);
  Website existingWebsite=_persistence.findByPrimaryKey(newWebsite.getPrimaryKey());
  assertEquals(existingWebsite.getWebsiteId(),newWebsite.getWebsiteId());
  assertEquals(existingWebsite.getCompanyId(),newWebsite.getCompanyId());
  assertEquals(existingWebsite.getUserId(),newWebsite.getUserId());
  assertEquals(existingWebsite.getUserName(),newWebsite.getUserName());
  assertEquals(Time.getShortTimestamp(existingWebsite.getCreateDate()),Time.getShortTimestamp(newWebsite.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingWebsite.getModifiedDate()),Time.getShortTimestamp(newWebsite.getModifiedDate()));
  assertEquals(existingWebsite.getClassNameId(),newWebsite.getClassNameId());
  assertEquals(existingWebsite.getClassPK(),newWebsite.getClassPK());
  assertEquals(existingWebsite.getUrl(),newWebsite.getUrl());
  assertEquals(existingWebsite.getTypeId(),newWebsite.getTypeId());
  assertEquals(existingWebsite.getPrimary(),newWebsite.getPrimary());
}

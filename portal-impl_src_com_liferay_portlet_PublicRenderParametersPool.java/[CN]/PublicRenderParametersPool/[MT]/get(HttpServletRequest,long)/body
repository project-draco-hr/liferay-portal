{
  Map<String,String[]> publicRenderParameters=null;
  if (PropsValues.PORTLET_PUBLIC_RENDER_PARAMETER_DISTRIBUTION.equals("LAYOUT_SET")) {
    HttpSession session=request.getSession();
    Map<Long,Map<String,String[]>> publicRenderParametersPool=(Map<Long,Map<String,String[]>>)session.getAttribute(WebKeys.PUBLIC_RENDER_PARAMETERS_POOL);
    if (publicRenderParametersPool == null) {
      publicRenderParametersPool=new ConcurrentHashMap<Long,Map<String,String[]>>();
      session.setAttribute(WebKeys.PUBLIC_RENDER_PARAMETERS_POOL,publicRenderParametersPool);
    }
    Layout layout=null;
    Long layoutSetId=0L;
    try {
      layout=LayoutLocalServiceUtil.getLayout(plid);
      layoutSetId=layout.getLayoutSet().getLayoutSetId();
    }
 catch (    Exception e) {
      if (_log.isDebugEnabled()) {
        _log.debug("Unable to get layout for plid + " + plid);
      }
    }
    publicRenderParameters=publicRenderParametersPool.get(layoutSetId);
    if (publicRenderParameters == null) {
      publicRenderParameters=new HashMap<String,String[]>();
      publicRenderParametersPool.put(layoutSetId,publicRenderParameters);
    }
  }
 else {
    publicRenderParameters=RenderParametersPool.get(request,plid,PUBLIC_RENDER_PARAMETERS);
  }
  return publicRenderParameters;
}

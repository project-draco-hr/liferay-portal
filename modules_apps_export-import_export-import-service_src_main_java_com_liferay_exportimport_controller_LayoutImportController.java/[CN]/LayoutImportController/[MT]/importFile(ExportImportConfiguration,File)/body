{
  PortletDataContext portletDataContext=null;
  try {
    ExportImportThreadLocal.setLayoutImportInProcess(true);
    portletDataContext=getPortletDataContext(exportImportConfiguration,file);
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_LAYOUT_IMPORT_STARTED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext));
    Map<String,Serializable> settingsMap=exportImportConfiguration.getSettingsMap();
    long userId=MapUtil.getLong(settingsMap,"userId");
    doImportFile(portletDataContext,userId);
    ExportImportThreadLocal.setLayoutImportInProcess(false);
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_LAYOUT_IMPORT_SUCCEEDED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),userId);
    Map<Long,Long> folderIdPairs=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DLFolder.class);
    if (!folderIdPairs.isEmpty()) {
      ExportImportProcessCallbackRegistryUtil.registerCallback(new CascadeFileEntryTypesCallable(folderIdPairs));
    }
  }
 catch (  Throwable t) {
    ExportImportThreadLocal.setLayoutImportInProcess(false);
    _exportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_LAYOUT_IMPORT_FAILED,getProcessFlag(),PortletDataContextFactoryUtil.clonePortletDataContext(portletDataContext),t);
    throw t;
  }
}

{
  List<Tuple> missingLayoutPrototypes=new ArrayList<>();
  String layoutSetPrototypeUuid=layoutsElement.attributeValue("layout-set-prototype-uuid");
  if (Validator.isNotNull(layoutSetPrototypeUuid)) {
    try {
      _layoutSetPrototypeLocalService.getLayoutSetPrototypeByUuidAndCompanyId(layoutSetPrototypeUuid,companyId);
    }
 catch (    NoSuchLayoutSetPrototypeException nslspe) {
      String layoutSetPrototypeName=layoutsElement.attributeValue("layout-set-prototype-name");
      missingLayoutPrototypes.add(new Tuple(LayoutSetPrototype.class.getName(),layoutSetPrototypeUuid,layoutSetPrototypeName));
    }
  }
  List<Element> layoutElements=layoutsElement.elements();
  for (  Element layoutElement : layoutElements) {
    String action=layoutElement.attributeValue(Constants.ACTION);
    if (action.equals(Constants.SKIP)) {
      continue;
    }
    String layoutPrototypeUuid=GetterUtil.getString(layoutElement.attributeValue("layout-prototype-uuid"));
    if (Validator.isNotNull(layoutPrototypeUuid)) {
      try {
        _layoutPrototypeLocalService.getLayoutPrototypeByUuidAndCompanyId(layoutPrototypeUuid,companyId);
      }
 catch (      NoSuchLayoutPrototypeException nslpe) {
        String layoutPrototypeName=GetterUtil.getString(layoutElement.attributeValue("layout-prototype-name"));
        missingLayoutPrototypes.add(new Tuple(LayoutPrototype.class.getName(),layoutPrototypeUuid,layoutPrototypeName));
      }
    }
  }
  if (!missingLayoutPrototypes.isEmpty()) {
    throw new LayoutPrototypeException(missingLayoutPrototypes);
  }
}

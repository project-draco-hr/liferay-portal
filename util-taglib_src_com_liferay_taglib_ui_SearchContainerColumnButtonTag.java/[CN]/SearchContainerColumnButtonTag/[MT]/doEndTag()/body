{
  try {
    SearchContainerRowTag<R> searchContainerRowTag=(SearchContainerRowTag<R>)findAncestorWithClass(this,SearchContainerRowTag.class);
    ResultRow resultRow=searchContainerRowTag.getRow();
    if (index <= -1) {
      List<SearchEntry> searchEntries=resultRow.getEntries();
      index=searchEntries.size();
    }
    ResourceBundle resourceBundle=TagResourceBundleUtil.getResourceBundle(pageContext);
    ButtonSearchEntry buttonSearchEntry=new ButtonSearchEntry();
    buttonSearchEntry.setAlign(getAlign());
    buttonSearchEntry.setColspan(getColspan());
    buttonSearchEntry.setCssClass(getCssClass());
    buttonSearchEntry.setHref(String.valueOf(getHref()));
    buttonSearchEntry.setName(LanguageUtil.get(resourceBundle,getName()));
    buttonSearchEntry.setValign(getValign());
    resultRow.addSearchEntry(index,buttonSearchEntry);
    return EVAL_PAGE;
  }
  finally {
    index=-1;
    if (!ServerDetector.isResin()) {
      align=SearchEntry.DEFAULT_ALIGN;
      colspan=SearchEntry.DEFAULT_COLSPAN;
      cssClass=SearchEntry.DEFAULT_CSS_CLASS;
      _href=null;
      name=StringPool.BLANK;
      valign=SearchEntry.DEFAULT_VALIGN;
    }
  }
}

{
  String field=stats.getField();
  StatsResults statsResults=new StatsResults(field);
  if (stats.isCount()) {
    ValueCount valueCount=(ValueCount)aggregationMap.get(field + "_count");
    statsResults.setCount(valueCount.getValue());
  }
  if (stats.isMax()) {
    Max max=(Max)aggregationMap.get(field + "_max");
    statsResults.setMax(max.getValue());
  }
  if (stats.isMean()) {
    org.elasticsearch.search.aggregations.metrics.stats.Stats elasticsearchStats=(org.elasticsearch.search.aggregations.metrics.stats.Stats)aggregationMap.get(field + "_stats");
    statsResults.setMean(elasticsearchStats.getAvg());
  }
  if (stats.isMin()) {
    Min min=(Min)aggregationMap.get(field + "_min");
    statsResults.setMin(min.getValue());
  }
  if (stats.isMissing()) {
    Missing missing=(Missing)aggregationMap.get(field + "_missing");
    statsResults.setMissing((int)missing.getDocCount());
  }
  if (stats.isStandardDeviation()) {
    ExtendedStats extendedStats=(ExtendedStats)aggregationMap.get(field + "_extendedStats");
    statsResults.setStandardDeviation(extendedStats.getStdDeviation());
  }
  if (stats.isSum()) {
    Sum sum=(Sum)aggregationMap.get(field + "_sum");
    statsResults.setSum(sum.getValue());
  }
  if (stats.isSumOfSquares()) {
    ExtendedStats extendedStats=(ExtendedStats)aggregationMap.get(field + "_extendedStats");
    statsResults.setSumOfSquares(extendedStats.getSumOfSquares());
  }
  return statsResults;
}

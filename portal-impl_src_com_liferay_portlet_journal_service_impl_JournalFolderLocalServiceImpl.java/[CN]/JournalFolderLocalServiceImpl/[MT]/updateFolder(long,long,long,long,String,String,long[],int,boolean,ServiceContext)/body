{
  JournalFolder folder=null;
  Set<Long> originalDDMStructureIds=new HashSet<>();
  if (folderId > JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    originalDDMStructureIds=getDDMStructureIds(ddmStructureLinkLocalService.getStructureLinks(classNameLocalService.getClassNameId(JournalFolder.class),folderId));
    folder=doUpdateFolder(userId,folderId,parentFolderId,name,description,ddmStructureIds,restrictionType,mergeWithParentFolder,serviceContext);
  }
  List<ObjectValuePair<Long,String>> workflowDefinitionOVPs=new ArrayList<>();
  if (restrictionType == JournalFolderConstants.RESTRICTION_TYPE_DDM_STRUCTURES_AND_WORKFLOW) {
    workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(JournalArticleConstants.DDM_STRUCTURE_ID_ALL,StringPool.BLANK));
    for (    long ddmStructureId : ddmStructureIds) {
      String workflowDefinition=ParamUtil.getString(serviceContext,"workflowDefinition" + ddmStructureId);
      workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(ddmStructureId,workflowDefinition));
    }
  }
 else   if (restrictionType == JournalFolderConstants.RESTRICTION_TYPE_INHERIT) {
    if (originalDDMStructureIds.isEmpty()) {
      originalDDMStructureIds.add(JournalArticleConstants.DDM_STRUCTURE_ID_ALL);
    }
    for (    long originalDDMStructureId : originalDDMStructureIds) {
      workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(originalDDMStructureId,StringPool.BLANK));
    }
  }
 else   if (restrictionType == JournalFolderConstants.RESTRICTION_TYPE_WORKFLOW) {
    String workflowDefinition=ParamUtil.getString(serviceContext,"workflowDefinition" + JournalArticleConstants.DDM_STRUCTURE_ID_ALL);
    workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(JournalArticleConstants.DDM_STRUCTURE_ID_ALL,workflowDefinition));
    for (    long originalDDMStructureId : originalDDMStructureIds) {
      workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(originalDDMStructureId,StringPool.BLANK));
    }
  }
  workflowDefinitionLinkLocalService.updateWorkflowDefinitionLinks(userId,serviceContext.getCompanyId(),groupId,JournalFolder.class.getName(),folderId,workflowDefinitionOVPs);
  return folder;
}

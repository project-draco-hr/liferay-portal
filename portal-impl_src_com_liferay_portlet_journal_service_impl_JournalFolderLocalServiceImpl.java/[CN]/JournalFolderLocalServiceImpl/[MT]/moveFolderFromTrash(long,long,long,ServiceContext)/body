{
  JournalFolder folder=journalFolderPersistence.findByPrimaryKey(folderId);
  TrashEntry trashEntry=folder.getTrashEntry();
  if (trashEntry.isTrashEntry(JournalFolder.class,folderId)) {
    restoreFolderFromTrash(userId,folderId);
  }
 else {
    TrashVersion trashVersion=trashVersionLocalService.fetchVersion(trashEntry.getEntryId(),JournalFolder.class.getName(),folderId);
    int status=WorkflowConstants.STATUS_APPROVED;
    if (trashVersion != null) {
      status=trashVersion.getStatus();
    }
    updateStatus(userId,folder,status);
    if (trashVersion != null) {
      trashVersionLocalService.deleteTrashVersion(trashVersion);
    }
    List<Object> foldersAndArticles=journalFolderLocalService.getFoldersAndArticles(folder.getGroupId(),folder.getFolderId(),WorkflowConstants.STATUS_IN_TRASH);
    restoreDependentsFromTrash(foldersAndArticles,trashEntry.getEntryId());
  }
  return journalFolderLocalService.moveFolder(folderId,parentFolderId,serviceContext);
}

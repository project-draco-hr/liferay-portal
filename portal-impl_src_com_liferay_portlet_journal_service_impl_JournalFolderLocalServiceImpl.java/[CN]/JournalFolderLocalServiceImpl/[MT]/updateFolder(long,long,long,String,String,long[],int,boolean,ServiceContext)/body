{
  JournalFolder folder=null;
  if (folderId > JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    folder=doUpdateFolder(userId,folderId,parentFolderId,name,description,ddmStructureIds,restrictionType,mergeWithParentFolder,serviceContext);
  }
  List<ObjectValuePair<Long,String>> workflowDefinitionOVPs=new ArrayList<ObjectValuePair<Long,String>>();
  if (ArrayUtil.isEmpty(ddmStructureIds)) {
    ddmStructureIds=ArrayUtil.append(ddmStructureIds,JournalArticleConstants.DDM_STRUCTURE_ID_ALL);
  }
 else {
    workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(JournalArticleConstants.DDM_STRUCTURE_ID_ALL,StringPool.BLANK));
  }
  for (  long ddmStructureId : ddmStructureIds) {
    String workflowDefinition=StringPool.BLANK;
    if ((restrictionType != JournalFolderConstants.RESTRICTION_TYPE_INHERIT) || (folderId == JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)) {
      workflowDefinition=ParamUtil.getString(serviceContext,"workflowDefinition" + ddmStructureId);
    }
    workflowDefinitionOVPs.add(new ObjectValuePair<Long,String>(ddmStructureId,workflowDefinition));
  }
  workflowDefinitionLinkLocalService.updateWorkflowDefinitionLinks(serviceContext.getUserId(),serviceContext.getCompanyId(),serviceContext.getScopeGroupId(),JournalFolder.class.getName(),folderId,workflowDefinitionOVPs);
  return folder;
}

{
  for (  Object object : foldersAndEntries) {
    if (object instanceof JournalArticle) {
      JournalArticle article=(JournalArticle)object;
      if (status == WorkflowConstants.STATUS_IN_TRASH) {
        if (article.getStatus() == WorkflowConstants.STATUS_APPROVED) {
          assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),false);
        }
        socialActivityCounterLocalService.disableActivityCounters(JournalArticle.class.getName(),article.getResourcePrimKey());
        if (article.getStatus() == WorkflowConstants.STATUS_PENDING) {
          article.setStatus(WorkflowConstants.STATUS_DRAFT);
          journalArticlePersistence.update(article);
        }
      }
 else {
        if (article.getStatus() == WorkflowConstants.STATUS_APPROVED) {
          assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),true);
        }
        socialActivityCounterLocalService.enableActivityCounters(JournalArticle.class.getName(),article.getResourcePrimKey());
      }
      if (status != WorkflowConstants.STATUS_APPROVED) {
        List<JournalArticle> articleVersions=journalArticlePersistence.findByG_A(article.getGroupId(),article.getArticleId());
        for (        JournalArticle curArticle : articleVersions) {
          if (!curArticle.isPending()) {
            continue;
          }
          curArticle.setStatus(WorkflowConstants.STATUS_DRAFT);
          journalArticlePersistence.update(curArticle);
          workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(curArticle.getCompanyId(),curArticle.getGroupId(),JournalArticle.class.getName(),curArticle.getId());
        }
      }
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(JournalArticle.class);
      indexer.reindex(article);
    }
 else     if (object instanceof JournalFolder) {
      JournalFolder folder=(JournalFolder)object;
      if (folder.isInTrash()) {
        continue;
      }
      if (status == WorkflowConstants.STATUS_IN_TRASH) {
        assetEntryLocalService.updateVisible(JournalFolder.class.getName(),folder.getFolderId(),false);
        socialActivityCounterLocalService.disableActivityCounters(JournalFolder.class.getName(),folder.getFolderId());
      }
 else {
        assetEntryLocalService.updateVisible(JournalFolder.class.getName(),folder.getFolderId(),true);
        socialActivityCounterLocalService.enableActivityCounters(JournalFolder.class.getName(),folder.getFolderId());
      }
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(JournalFolder.class);
      indexer.reindex(folder);
      List<Object> curFoldersAndEntries=journalFolderLocalService.getFoldersAndArticles(folder.getGroupId(),folder.getFolderId());
      updateDependentStatus(curFoldersAndEntries,status);
    }
  }
}

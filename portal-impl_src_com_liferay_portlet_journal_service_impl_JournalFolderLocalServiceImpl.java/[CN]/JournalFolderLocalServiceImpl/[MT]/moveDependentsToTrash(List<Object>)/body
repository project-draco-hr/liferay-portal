{
  for (  Object object : foldersAndEntries) {
    if (object instanceof JournalArticle) {
      JournalArticle article=(JournalArticle)object;
      if (article.getStatus() == WorkflowConstants.STATUS_APPROVED) {
        assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),false);
      }
      if (article.getStatus() == WorkflowConstants.STATUS_PENDING) {
        article.setStatus(WorkflowConstants.STATUS_DRAFT);
        journalArticlePersistence.update(article);
      }
      List<JournalArticle> articleVersions=journalArticlePersistence.findByG_A(article.getGroupId(),article.getArticleId());
      for (      JournalArticle curArticle : articleVersions) {
        if (!curArticle.isPending()) {
          continue;
        }
        curArticle.setStatus(WorkflowConstants.STATUS_DRAFT);
        journalArticlePersistence.update(curArticle);
        workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(curArticle.getCompanyId(),curArticle.getGroupId(),JournalArticle.class.getName(),curArticle.getId());
      }
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(JournalArticle.class);
      indexer.reindex(article);
    }
 else     if (object instanceof JournalFolder) {
      JournalFolder folder=(JournalFolder)object;
      if (folder.isInTrash()) {
        continue;
      }
      List<Object> curFoldersAndEntries=getFoldersAndArticles(folder.getGroupId(),folder.getFolderId());
      moveDependentsToTrash(curFoldersAndEntries);
      assetEntryLocalService.updateVisible(JournalFolder.class.getName(),folder.getFolderId(),false);
      Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(JournalFolder.class);
      indexer.reindex(folder);
    }
  }
}

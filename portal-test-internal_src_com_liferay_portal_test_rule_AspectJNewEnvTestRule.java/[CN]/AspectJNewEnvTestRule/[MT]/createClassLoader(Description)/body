{
  AdviseWith adviseWith=description.getAnnotation(AdviseWith.class);
  if (adviseWith == null) {
    return super.createClassLoader(description);
  }
  Class<?>[] adviceClasses=adviseWith.adviceClasses();
  if (ArrayUtil.isEmpty(adviceClasses)) {
    return super.createClassLoader(description);
  }
  for (  Class<?> adviceClass : adviceClasses) {
    Aspect aspect=adviceClass.getAnnotation(Aspect.class);
    if (aspect == null) {
      throw new IllegalArgumentException("Class " + adviceClass.getName() + " is not an aspect");
    }
  }
  String className=description.getClassName();
  File dumpDir=new File(System.getProperty("junit.aspectj.dump"),className.concat(StringPool.PERIOD).concat(description.getMethodName()));
  try {
    return new WeavingClassLoader(ClassPathUtil.getClassPathURLs(CLASS_PATH),adviceClasses,dumpDir);
  }
 catch (  MalformedURLException murle) {
    throw new RuntimeException(murle);
  }
}

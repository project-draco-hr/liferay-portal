{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    ActionableDynamicQuery actionableDynamicQuery=_groupLocalService.getActionableDynamicQuery();
    actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
      @Override public void addCriteria(      DynamicQuery dynamicQuery){
        Property classNameId=PropertyFactoryUtil.forName("classNameId");
        Property siteProperty=PropertyFactoryUtil.forName("site");
        dynamicQuery.add(RestrictionsFactoryUtil.or(classNameId.eq(PortalUtil.getClassNameId(User.class)),siteProperty.eq(true)));
      }
    }
);
    actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<Group>(){
      @Override public void performAction(      Group group) throws PortalException {
        if (group.isStaged()) {
          return;
        }
        try {
          verifyDLFileEntriesAndFolders(group.getGroupId());
          verifyLocks(group.getGroupId());
          verifyMacPackages(group.getGroupId());
        }
 catch (        Exception e) {
          throw new PortalException(e);
        }
      }
    }
);
    actionableDynamicQuery.performActions();
    _dlSyncEventLocalService.deleteDLSyncEvents();
  }
 }

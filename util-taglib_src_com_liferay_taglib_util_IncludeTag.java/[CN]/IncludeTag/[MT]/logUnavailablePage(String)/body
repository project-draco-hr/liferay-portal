{
  if ((page == null) || !_log.isWarnEnabled()) {
    return;
  }
  String contextPath=servletContext.getContextPath();
  if (contextPath.equals(StringPool.BLANK)) {
    contextPath=StringPool.SLASH;
  }
  StringBundler sb=new StringBundler(13);
  sb.append("Unable to find ");
  sb.append(page);
  sb.append(" in context ");
  sb.append(contextPath);
  sb.append(".");
  if (isPortalPage(page)) {
    if (contextPath.equals(StringPool.SLASH)) {
      sb=null;
    }
 else {
      sb.append(" It seems that you are trying to use an ");
      sb.append("include-derived taglib from a module and ");
      sb.append("setting the servletContext at the same time,");
      sb.append(" which is not supported. Please consider ");
      sb.append("inlining the nested content of the tag ");
      sb.append(" directly in the JSP where the tag is invoked,");
      sb.append(" instead of using the file and servletContext");
      sb.append(" attributes.");
    }
  }
 else {
    if (contextPath.equals(StringPool.SLASH)) {
      if (getClass().equals(IncludeTag.class)) {
        sb.append(" It seems that you are trying to use an ");
        sb.append("include taglib from a module without ");
        sb.append("specifying the servletContext attribute, ");
        sb.append("which is unsupported and will not render ");
        sb.append("anything in the page. Please set the ");
        sb.append("servletContext attribute of the tag to the");
        sb.append(" value <%= application %> to make it work.");
      }
 else {
        sb.append(" It seems that you are trying to use an ");
        sb.append("include-derived taglib from a module using");
        sb.append(" the file attribute of the taglib, which ");
        sb.append("is unsupported and will not render ");
        sb.append("anything in the page. Please consider ");
        sb.append("nesting the content directly inside ");
        sb.append("the tag.");
      }
    }
  }
  if (sb != null) {
    _log.warn(sb.toString());
  }
}

{
  if (calendarBooking.isInTrash()) {
    throw new TrashEntryException();
  }
  if (!calendarBooking.isMasterBooking()) {
    return calendarBooking;
  }
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setUserId(userId);
  List<CalendarBooking> relatedCalendarBookings=getRelatedCalendarBookings(calendarBooking);
  for (  CalendarBooking relatedCalendarBooking : relatedCalendarBookings) {
    calendarBookingLocalService.updateStatus(userId,relatedCalendarBooking,CalendarBookingWorkflowConstants.STATUS_IN_TRASH,serviceContext);
    socialActivityCounterLocalService.disableActivityCounters(CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    socialActivityLocalService.addActivity(userId,relatedCalendarBooking.getGroupId(),CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId(),SocialActivityConstants.TYPE_MOVE_TO_TRASH,getExtraDataJSON(relatedCalendarBooking),0);
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLinks(relatedCalendarBooking.getCompanyId(),relatedCalendarBooking.getGroupId(),CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
  }
  return calendarBooking;
}

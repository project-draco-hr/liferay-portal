{
  Set<CalendarBooking> recurringCalendarBookings=new HashSet<>();
  List<CalendarBooking> childCalendarBookings=new ArrayList<>();
  childCalendarBookings.addAll(getChildCalendarBookings(calendarBooking.getCalendarBookingId()));
  childCalendarBookings.add(calendarBooking);
  for (  CalendarBooking childCalendarBooking : childCalendarBookings) {
    if (allRecurringInstances) {
      recurringCalendarBookings.addAll(getRecurringCalendarBookings(childCalendarBooking));
    }
 else {
      recurringCalendarBookings.add(childCalendarBooking);
    }
  }
  for (  CalendarBooking recurringCalendarBooking : recurringCalendarBookings) {
    calendarBookingPersistence.remove(recurringCalendarBooking);
    resourceLocalService.deleteResource(recurringCalendarBooking,ResourceConstants.SCOPE_INDIVIDUAL);
    subscriptionLocalService.deleteSubscriptions(recurringCalendarBooking.getCompanyId(),CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
    assetEntryLocalService.deleteEntry(CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
    mbMessageLocalService.deleteDiscussionMessages(CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
    ratingsStatsLocalService.deleteStats(CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
    trashEntryLocalService.deleteEntry(CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLinks(recurringCalendarBooking.getCompanyId(),recurringCalendarBooking.getGroupId(),CalendarBooking.class.getName(),recurringCalendarBooking.getCalendarBookingId());
  }
  return calendarBooking;
}

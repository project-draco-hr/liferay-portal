{
  Set<CalendarBooking> relatedCalendarBookings=new HashSet<>();
  List<CalendarBooking> childCalendarBookings=new ArrayList<>();
  childCalendarBookings.addAll(getChildCalendarBookings(calendarBooking.getCalendarBookingId()));
  childCalendarBookings.add(calendarBooking);
  for (  CalendarBooking childCalendarBooking : childCalendarBookings) {
    if (allRecurringInstances) {
      relatedCalendarBookings.addAll(getRelatedCalendarBookings(childCalendarBooking));
    }
 else {
      relatedCalendarBookings.add(childCalendarBooking);
    }
  }
  for (  CalendarBooking relatedCalendarBooking : relatedCalendarBookings) {
    calendarBookingPersistence.remove(relatedCalendarBooking);
    resourceLocalService.deleteResource(relatedCalendarBooking,ResourceConstants.SCOPE_INDIVIDUAL);
    subscriptionLocalService.deleteSubscriptions(relatedCalendarBooking.getCompanyId(),CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    assetEntryLocalService.deleteEntry(CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    mbMessageLocalService.deleteDiscussionMessages(CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    ratingsStatsLocalService.deleteStats(CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    trashEntryLocalService.deleteEntry(CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLinks(relatedCalendarBooking.getCompanyId(),relatedCalendarBooking.getGroupId(),CalendarBooking.class.getName(),relatedCalendarBooking.getCalendarBookingId());
  }
  return calendarBooking;
}

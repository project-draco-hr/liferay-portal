{
  try {
    String fromAddy=((InternetAddress)mm.getFrom()).getAddress();
    String fromName=((InternetAddress)mm.getFrom()).getPersonal();
    Message message=new MimeMessage(_getSession());
    message.setSubject(mm.getSubject());
    message.setFrom(new InternetAddress(fromAddy,fromName));
    if (!Validator.isNull(mm.getTo())) {
      message.setRecipients(Message.RecipientType.TO,mm.getTo());
    }
    if (!Validator.isNull(mm.getCc())) {
      message.setRecipients(Message.RecipientType.CC,mm.getCc());
    }
    if (!Validator.isNull(mm.getBcc())) {
      message.setRecipients(Message.RecipientType.BCC,mm.getBcc());
    }
    Multipart multipart=new MimeMultipart();
    BodyPart bodypart=new MimeBodyPart();
    bodypart.setContent(mm.getHtmlBody(),Constants.TEXT_HTML);
    multipart.addBodyPart(bodypart);
    List attachments=mm.getAttachments();
    for (Iterator itr=attachments.iterator(); itr.hasNext(); ) {
      MailAttachment ma=(MailAttachment)itr.next();
      DataSource ds=new ByteArrayDataSource(ma.getContent(),ma.getContentType());
      BodyPart attachment=new MimeBodyPart();
      attachment.setDataHandler(new DataHandler(ds));
      attachment.setFileName(ma.getFilename());
      multipart.addBodyPart(attachment);
    }
    List remoteAttachments=mm.getRemoteAttachments();
    for (Iterator itr=remoteAttachments.iterator(); itr.hasNext(); ) {
      RemoteMailAttachment rma=(RemoteMailAttachment)itr.next();
      Object[] parts=getAttachment(ses,rma.getContentPath());
      DataSource ds=new ByteArrayDataSource((byte[])parts[0],(String)parts[1]);
      BodyPart attachment=new MimeBodyPart();
      attachment.setDataHandler(new DataHandler(ds));
      attachment.setFileName(rma.getFilename());
      multipart.addBodyPart(attachment);
    }
    message.setContent(multipart);
    message.setSentDate(new Date());
    if (send) {
      Transport.send(message);
      setCurrentFolder(ses,MAIL_SENT_NAME);
    }
 else {
      setCurrentFolder(ses,MAIL_DRAFTS_NAME);
    }
    _getCurrentFolder(ses).appendMessages(new Message[]{message});
    if (draftId > 0L) {
      setCurrentFolder(ses,MAIL_DRAFTS_NAME);
      Message msg=_getCurrentFolder(ses).getMessageByUID(draftId);
      _getCurrentFolder(ses).setFlags(new Message[]{msg},new Flags(Flags.Flag.DELETED),true);
      _getCurrentFolder(ses).expunge();
    }
  }
 catch (  UnsupportedEncodingException e) {
    _log.error("Error in building and sending email object");
    throw new ContentException(e);
  }
catch (  NamingException e) {
    _log.error("Error in building and sending email object");
    throw new ContentException(e);
  }
catch (  MessagingException e) {
    _log.error("Error in building and sending email object");
    throw new ContentException(e);
  }
}

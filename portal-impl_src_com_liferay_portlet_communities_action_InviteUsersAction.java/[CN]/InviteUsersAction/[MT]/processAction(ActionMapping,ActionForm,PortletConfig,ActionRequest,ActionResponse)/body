{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long groupId=ParamUtil.getLong(actionRequest,"groupId");
  String redirect=ParamUtil.getString(actionRequest,"redirect");
  String[] addEmailAddresses=StringUtil.split(ParamUtil.getString(actionRequest,"addEmailAddresses"),",");
  Map<String,String> entries=new HashMap<String,String>();
  for (  String email : addEmailAddresses) {
    User invitee=UserLocalServiceUtil.getUserByEmailAddress(themeDisplay.getCompanyId(),email);
    MembershipInvitation invitation=MembershipInvitationLocalServiceUtil.addMembershipInvitation(themeDisplay.getCompanyId(),groupId,themeDisplay.getUserId(),invitee.getUserId());
    HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
    Group guestGroup=GroupLocalServiceUtil.getGroup(themeDisplay.getCompanyId(),GroupConstants.GUEST);
    long defaultPlid=LayoutLocalServiceUtil.getDefaultPlid(guestGroup.getGroupId());
    PortletURL portletURL=new PortletURLImpl(request,PortletKeys.LOGIN,defaultPlid,PortletRequest.RENDER_PHASE);
    portletURL.setParameter("key",invitation.getKey());
    portletURL.setParameter("struts_action","/login/login");
    portletURL.setWindowState(WindowState.MAXIMIZED);
    entries.put(email,portletURL.toString());
  }
  MembershipInvitationLocalServiceUtil.invite(themeDisplay.getCompanyId(),groupId,entries);
  sendRedirect(actionRequest,actionResponse,redirect);
}

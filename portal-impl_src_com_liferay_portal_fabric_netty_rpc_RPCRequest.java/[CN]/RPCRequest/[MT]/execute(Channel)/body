{
  ChannelThreadLocal.setChannel(channel);
  try {
    NoticeableFuture<T> noticeableFuture=_rpcCallable.call();
    noticeableFuture.addFutureListener(new BaseFutureListener<T>(){
      @Override public void completeWithCancel(      Future<T> future){
        sendRPCResponse(channel,new RPCResponse<T>(id,true,null,null));
      }
      @Override public void completeWithException(      Future<T> future,      Throwable throwable){
        sendRPCResponse(channel,new RPCResponse<T>(id,false,null,throwable));
      }
      @Override public void completeWithResult(      Future<T> future,      T result){
        sendRPCResponse(channel,new RPCResponse<T>(id,false,result,null));
      }
    }
);
  }
 catch (  Throwable t) {
    sendRPCResponse(channel,new RPCResponse<T>(id,false,null,t));
  }
 finally {
    ChannelThreadLocal.removeChannel();
  }
}

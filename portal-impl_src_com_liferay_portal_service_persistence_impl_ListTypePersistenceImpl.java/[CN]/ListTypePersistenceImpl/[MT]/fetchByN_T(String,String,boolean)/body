{
  Object[] finderArgs=new Object[]{name,type};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,this);
  }
  if (result instanceof ListType) {
    ListType listType=(ListType)result;
    if (!Objects.equals(name,listType.getName()) || !Objects.equals(type,listType.getType())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_LISTTYPE_WHERE);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_N_T_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_N_T_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_N_T_NAME_2);
    }
    boolean bindType=false;
    if (type == null) {
      query.append(_FINDER_COLUMN_N_T_TYPE_1);
    }
 else     if (type.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_N_T_TYPE_3);
    }
 else {
      bindType=true;
      query.append(_FINDER_COLUMN_N_T_TYPE_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindName) {
        qPos.add(name);
      }
      if (bindType) {
        qPos.add(type);
      }
      List<ListType> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,list);
      }
 else {
        if (list.size() > 1) {
          Collections.sort(list,Collections.reverseOrder());
          if (_log.isWarnEnabled()) {
            _log.warn("ListTypePersistenceImpl.fetchByN_T(String, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
          }
        }
        ListType listType=list.get(0);
        result=listType;
        cacheResult(listType);
        if ((listType.getName() == null) || !listType.getName().equals(name) || (listType.getType() == null)|| !listType.getType().equals(type)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_N_T,finderArgs,listType);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_N_T,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (ListType)result;
  }
}

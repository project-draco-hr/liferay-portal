{
  long pk=nextLong();
  BlogsEntry newBlogsEntry=_persistence.create(pk);
  newBlogsEntry.setUuid(randomString());
  newBlogsEntry.setGroupId(nextLong());
  newBlogsEntry.setCompanyId(nextLong());
  newBlogsEntry.setUserId(nextLong());
  newBlogsEntry.setUserName(randomString());
  newBlogsEntry.setCreateDate(nextDate());
  newBlogsEntry.setModifiedDate(nextDate());
  newBlogsEntry.setTitle(randomString());
  newBlogsEntry.setUrlTitle(randomString());
  newBlogsEntry.setDescription(randomString());
  newBlogsEntry.setContent(randomString());
  newBlogsEntry.setDisplayDate(nextDate());
  newBlogsEntry.setAllowPingbacks(randomBoolean());
  newBlogsEntry.setAllowTrackbacks(randomBoolean());
  newBlogsEntry.setTrackbacks(randomString());
  newBlogsEntry.setSmallImage(randomBoolean());
  newBlogsEntry.setSmallImageId(nextLong());
  newBlogsEntry.setSmallImageURL(randomString());
  newBlogsEntry.setStatus(nextInt());
  newBlogsEntry.setStatusByUserId(nextLong());
  newBlogsEntry.setStatusByUserName(randomString());
  newBlogsEntry.setStatusDate(nextDate());
  _persistence.update(newBlogsEntry,false);
  BlogsEntry existingBlogsEntry=_persistence.findByPrimaryKey(newBlogsEntry.getPrimaryKey());
  assertEquals(existingBlogsEntry.getUuid(),newBlogsEntry.getUuid());
  assertEquals(existingBlogsEntry.getEntryId(),newBlogsEntry.getEntryId());
  assertEquals(existingBlogsEntry.getGroupId(),newBlogsEntry.getGroupId());
  assertEquals(existingBlogsEntry.getCompanyId(),newBlogsEntry.getCompanyId());
  assertEquals(existingBlogsEntry.getUserId(),newBlogsEntry.getUserId());
  assertEquals(existingBlogsEntry.getUserName(),newBlogsEntry.getUserName());
  assertEquals(Time.getShortTimestamp(existingBlogsEntry.getCreateDate()),Time.getShortTimestamp(newBlogsEntry.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingBlogsEntry.getModifiedDate()),Time.getShortTimestamp(newBlogsEntry.getModifiedDate()));
  assertEquals(existingBlogsEntry.getTitle(),newBlogsEntry.getTitle());
  assertEquals(existingBlogsEntry.getUrlTitle(),newBlogsEntry.getUrlTitle());
  assertEquals(existingBlogsEntry.getDescription(),newBlogsEntry.getDescription());
  assertEquals(existingBlogsEntry.getContent(),newBlogsEntry.getContent());
  assertEquals(Time.getShortTimestamp(existingBlogsEntry.getDisplayDate()),Time.getShortTimestamp(newBlogsEntry.getDisplayDate()));
  assertEquals(existingBlogsEntry.getAllowPingbacks(),newBlogsEntry.getAllowPingbacks());
  assertEquals(existingBlogsEntry.getAllowTrackbacks(),newBlogsEntry.getAllowTrackbacks());
  assertEquals(existingBlogsEntry.getTrackbacks(),newBlogsEntry.getTrackbacks());
  assertEquals(existingBlogsEntry.getSmallImage(),newBlogsEntry.getSmallImage());
  assertEquals(existingBlogsEntry.getSmallImageId(),newBlogsEntry.getSmallImageId());
  assertEquals(existingBlogsEntry.getSmallImageURL(),newBlogsEntry.getSmallImageURL());
  assertEquals(existingBlogsEntry.getStatus(),newBlogsEntry.getStatus());
  assertEquals(existingBlogsEntry.getStatusByUserId(),newBlogsEntry.getStatusByUserId());
  assertEquals(existingBlogsEntry.getStatusByUserName(),newBlogsEntry.getStatusByUserName());
  assertEquals(Time.getShortTimestamp(existingBlogsEntry.getStatusDate()),Time.getShortTimestamp(newBlogsEntry.getStatusDate()));
}

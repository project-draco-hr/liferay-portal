{
  String doAsUserId=ParamUtil.getString(request,"doAsUserId");
  String doAsUserLanguageId=ParamUtil.getString(request,"doAsUserLanguageId");
  long groupId=ParamUtil.getLong(request,"groupId");
  boolean privateLayout=ParamUtil.getBoolean(request,"privateLayout");
  long parentLayoutId=ParamUtil.getLong(request,"parentLayoutId");
  String name=ParamUtil.getString(request,"name","New Page");
  String title=StringPool.BLANK;
  String description=StringPool.BLANK;
  String type=LayoutConstants.TYPE_PORTLET;
  boolean hidden=false;
  String friendlyURL=StringPool.BLANK;
  long layoutPrototypeId=ParamUtil.getLong(request,"layoutPrototypeId");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(request);
  Layout layout=null;
  if (layoutPrototypeId > 0) {
    layout=LayoutServiceUtil.addLayout(groupId,privateLayout,parentLayoutId,name,title,description,LayoutConstants.TYPE_PORTLET,false,friendlyURL,serviceContext);
    LayoutPrototype layoutPrototype=LayoutPrototypeServiceUtil.getLayoutPrototype(layoutPrototypeId);
    SitesUtil.applyLayoutPrototype(layoutPrototype,layout,true);
  }
 else {
    layout=LayoutServiceUtil.addLayout(groupId,privateLayout,parentLayoutId,name,title,description,type,hidden,friendlyURL,serviceContext);
  }
  LayoutSettings layoutSettings=LayoutSettings.getInstance(layout);
  EventsProcessorUtil.process(PropsKeys.LAYOUT_CONFIGURATION_ACTION_UPDATE,layoutSettings.getConfigurationActionUpdate(),request,response);
  String layoutURL=PortalUtil.getLayoutURL(layout,themeDisplay);
  if (Validator.isNotNull(doAsUserId)) {
    layoutURL=HttpUtil.addParameter(layoutURL,"doAsUserId",themeDisplay.getDoAsUserId());
  }
  if (Validator.isNotNull(doAsUserLanguageId)) {
    layoutURL=HttpUtil.addParameter(layoutURL,"doAsUserLanguageId",themeDisplay.getDoAsUserLanguageId());
  }
  boolean deleteable=true;
  boolean updateable=true;
  return new String[]{String.valueOf(layout.getLayoutId()),layoutURL,String.valueOf(deleteable),String.valueOf(updateable)};
}

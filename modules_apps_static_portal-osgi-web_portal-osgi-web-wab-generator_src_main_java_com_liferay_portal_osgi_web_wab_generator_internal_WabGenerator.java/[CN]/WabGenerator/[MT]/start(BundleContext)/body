{
  registerURLStreamHandlerService(bundleContext);
  registerArtifactUrlTransformer(bundleContext);
  final Set<String> requiredForStartupLocations=getRequiredForStartupLocations(Paths.get(PropsValues.LIFERAY_HOME,"osgi/war"));
  if (requiredForStartupLocations.isEmpty()) {
    return;
  }
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  BundleTracker<Void> bundleTracker=new BundleTracker<Void>(bundleContext,Bundle.ACTIVE,null){
    @Override public Void addingBundle(    Bundle bundle,    BundleEvent bundleEvent){
      String location=StringUtil.toLowerCase(bundle.getLocation());
      if (_log.isDebugEnabled()) {
        _log.debug("WAB activated at location: " + location);
        if (requiredForStartupLocations.contains(location)) {
          _log.debug("WAB is required for startup");
        }
      }
      if (requiredForStartupLocations.remove(location) && requiredForStartupLocations.isEmpty()) {
        countDownLatch.countDown();
      }
      return null;
    }
  }
;
  if (_log.isDebugEnabled()) {
    _log.debug("WABs required for startup: " + requiredForStartupLocations);
  }
  bundleTracker.open();
  countDownLatch.await();
  bundleTracker.close();
}

{
  _containerNamespace=portletRequest.getContextPath();
  _contentType=portletRequest.getResponseContentType();
  _serverName=portletRequest.getServerName();
  _serverPort=portletRequest.getServerPort();
  _secure=portletRequest.isSecure();
  _authType=portletRequest.getAuthType();
  _remoteUser=portletRequest.getRemoteUser();
  _contextPath=portletRequest.getContextPath();
  _locale=portletRequest.getLocale();
  _portletMode=portletRequest.getPortletMode();
  _portletSessionId=portletRequest.getRequestedSessionId();
  _scheme=portletRequest.getScheme();
  _windowState=portletRequest.getWindowState();
  if (portletRequest instanceof ActionRequest) {
    _lifecycle=RenderRequest.ACTION_PHASE;
  }
 else   if (portletRequest instanceof RenderRequest) {
    _lifecycle=RenderRequest.RENDER_PHASE;
  }
 else   if (portletRequest instanceof ResourceRequest) {
    _lifecycle=RenderRequest.RESOURCE_PHASE;
  }
  if (portletResponse instanceof MimeResponse) {
    MimeResponse mimeResponse=(MimeResponse)portletResponse;
    _portletNamespace=mimeResponse.getNamespace();
    try {
      PortletURL actionURL=mimeResponse.createActionURL();
      _actionURL=actionURL.toString();
    }
 catch (    IllegalStateException ise) {
      if (_log.isWarnEnabled()) {
        _log.warn(ise.getMessage());
      }
    }
    try {
      PortletURL renderURL=mimeResponse.createRenderURL();
      _renderURL=renderURL.toString();
      try {
        renderURL.setWindowState(LiferayWindowState.EXCLUSIVE);
        _renderURLExclusive=renderURL.toString();
      }
 catch (      WindowStateException wse) {
      }
      try {
        renderURL.setWindowState(LiferayWindowState.MAXIMIZED);
        _renderURLMaximized=renderURL.toString();
      }
 catch (      WindowStateException wse) {
      }
      try {
        renderURL.setWindowState(LiferayWindowState.MINIMIZED);
        _renderURLMinimized=renderURL.toString();
      }
 catch (      WindowStateException wse) {
      }
      try {
        renderURL.setWindowState(LiferayWindowState.NORMAL);
        _renderURLNormal=renderURL.toString();
      }
 catch (      WindowStateException wse) {
      }
      try {
        renderURL.setWindowState(LiferayWindowState.POP_UP);
        _renderURLPopUp=renderURL.toString();
      }
 catch (      WindowStateException wse) {
      }
    }
 catch (    IllegalStateException ise) {
      if (_log.isWarnEnabled()) {
        _log.warn(ise.getMessage());
      }
    }
    ResourceURL resourceURL=mimeResponse.createResourceURL();
    String resourceURLString=HttpUtil.removeParameter(resourceURL.toString(),_portletNamespace + "struts_action");
    resourceURLString=HttpUtil.removeParameter(resourceURLString,_portletNamespace + "redirect");
    _resourceURL=resourceURL.toString();
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)portletRequest.getAttribute(WebKeys.THEME_DISPLAY);
  if (themeDisplay != null) {
    _themeDisplayModel=new ThemeDisplayModel(themeDisplay);
  }
  _parameters=new HashMap<String,String[]>(portletRequest.getParameterMap());
  _attributes=new HashMap<String,Object>();
  Enumeration<String> enumeration=portletRequest.getAttributeNames();
  while (enumeration.hasMoreElements()) {
    String name=enumeration.nextElement();
    Object value=portletRequest.getAttribute(name);
    _attributes.put(name,value);
  }
  PortletSession portletSession=portletRequest.getPortletSession();
  try {
    _portletScopeSessioAttributes=portletSession.getAttributeMap(PortletSession.PORTLET_SCOPE);
    _applicationScopeSessionAttributes=portletSession.getAttributeMap(PortletSession.APPLICATION_SCOPE);
  }
 catch (  IllegalStateException ise) {
    if (_log.isWarnEnabled()) {
      _log.warn(ise.getMessage());
    }
  }
}

{
  ExportImportConfiguration exportImportConfiguration=getExportImportConfiguration(backgroundTask);
  File file=null;
  MissingReferences missingReferences=null;
  try {
    ExportImportThreadLocal.setPortletStagingInProcess(true);
    ExportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PUBLICATION_PORTLET_LOCAL_STARTED,PROCESS_FLAG_PORTLET_STAGING_IN_PROCESS,exportImportConfiguration);
    file=LayoutLocalServiceUtil.exportPortletInfoAsFile(exportImportConfiguration);
    markBackgroundTask(backgroundTask.getBackgroundTaskId(),"exported");
    missingReferences=TransactionHandlerUtil.invoke(transactionAttribute,new PortletStagingCallable(backgroundTask.getBackgroundTaskId(),exportImportConfiguration,file));
    ExportImportThreadLocal.setPortletStagingInProcess(false);
    ExportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PUBLICATION_PORTLET_LOCAL_SUCCEEDED,PROCESS_FLAG_PORTLET_STAGING_IN_PROCESS,exportImportConfiguration);
  }
 catch (  Throwable t) {
    ExportImportThreadLocal.setPortletStagingInProcess(false);
    ExportImportLifecycleManager.fireExportImportLifecycleEvent(EVENT_PUBLICATION_PORTLET_LOCAL_FAILED,PROCESS_FLAG_PORTLET_STAGING_IN_PROCESS,exportImportConfiguration);
    if (_log.isDebugEnabled()) {
      _log.debug(t,t);
    }
 else     if (_log.isWarnEnabled()) {
      _log.warn("Unable to publish portlet: " + t.getMessage());
    }
    deleteTempLarOnFailure(file);
    throw new SystemException(t);
  }
  deleteTempLarOnSuccess(file);
  return processMissingReferences(backgroundTask.getBackgroundTaskId(),missingReferences);
}

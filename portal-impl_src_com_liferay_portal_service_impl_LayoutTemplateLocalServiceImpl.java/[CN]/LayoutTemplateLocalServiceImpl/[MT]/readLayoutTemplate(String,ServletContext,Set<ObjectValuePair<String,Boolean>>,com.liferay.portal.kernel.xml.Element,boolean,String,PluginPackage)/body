{
  Map<String,LayoutTemplate> layoutTemplates=null;
  if (themeId != null) {
    if (standard) {
      layoutTemplates=_getThemesStandard(themeId);
    }
 else {
      layoutTemplates=_getThemesCustom(themeId);
    }
  }
 else   if (servletContextName != null) {
    if (standard) {
      layoutTemplates=_warStandard;
    }
 else {
      layoutTemplates=_warCustom;
    }
  }
 else {
    if (standard) {
      layoutTemplates=_portalStandard;
    }
 else {
      layoutTemplates=_portalCustom;
    }
  }
  Iterator<com.liferay.portal.kernel.xml.Element> itr=el.elements("layout-template").iterator();
  while (itr.hasNext()) {
    com.liferay.portal.kernel.xml.Element layoutTemplate=itr.next();
    String layoutTemplateId=layoutTemplate.attributeValue("id");
    if (layoutTemplateIds != null) {
      ObjectValuePair<String,Boolean> ovp=new ObjectValuePair<String,Boolean>(layoutTemplateId,standard);
      layoutTemplateIds.add(ovp);
    }
    LayoutTemplate layoutTemplateModel=layoutTemplates.get(layoutTemplateId);
    if (layoutTemplateModel == null) {
      layoutTemplateModel=new LayoutTemplateImpl(layoutTemplateId);
      layoutTemplates.put(layoutTemplateId,layoutTemplateModel);
    }
    PluginSetting pluginSetting=PluginSettingLocalServiceUtil.getDefaultPluginSetting();
    layoutTemplateModel.setPluginPackage(pluginPackage);
    layoutTemplateModel.setServletContext(servletContext);
    if (servletContextName != null) {
      layoutTemplateModel.setServletContextName(servletContextName);
    }
    layoutTemplateModel.setStandard(standard);
    layoutTemplateModel.setName(GetterUtil.getString(layoutTemplate.attributeValue("name"),layoutTemplateModel.getName()));
    layoutTemplateModel.setTemplatePath(GetterUtil.getString(layoutTemplate.elementText("template-path"),layoutTemplateModel.getTemplatePath()));
    layoutTemplateModel.setWapTemplatePath(GetterUtil.getString(layoutTemplate.elementText("wap-template-path"),layoutTemplateModel.getWapTemplatePath()));
    layoutTemplateModel.setThumbnailPath(GetterUtil.getString(layoutTemplate.elementText("thumbnail-path"),layoutTemplateModel.getThumbnailPath()));
    String content=null;
    try {
      content=HttpUtil.URLtoString(servletContext.getResource(layoutTemplateModel.getTemplatePath()));
    }
 catch (    Exception e) {
      _log.error("Unable to get content at template path " + layoutTemplateModel.getTemplatePath() + ": "+ e.getMessage());
    }
    if (Validator.isNull(content)) {
      _log.error("No content found at template path " + layoutTemplateModel.getTemplatePath());
    }
 else {
      layoutTemplateModel.setContent(content);
      layoutTemplateModel.setColumns(_getColumns(content));
    }
    if (Validator.isNull(layoutTemplateModel.getWapTemplatePath())) {
      _log.error("The element wap-template-path is not defined for " + layoutTemplateId);
    }
 else {
      String wapContent=null;
      try {
        wapContent=HttpUtil.URLtoString(servletContext.getResource(layoutTemplateModel.getWapTemplatePath()));
      }
 catch (      Exception e) {
        _log.error("Unable to get content at WAP template path " + layoutTemplateModel.getWapTemplatePath() + ": "+ e.getMessage());
      }
      if (Validator.isNull(wapContent)) {
        _log.error("No content found at WAP template path " + layoutTemplateModel.getWapTemplatePath());
      }
 else {
        layoutTemplateModel.setWapContent(wapContent);
      }
    }
    com.liferay.portal.kernel.xml.Element rolesEl=layoutTemplate.element("roles");
    if (rolesEl != null) {
      Iterator<com.liferay.portal.kernel.xml.Element> itr2=rolesEl.elements("role-name").iterator();
      while (itr2.hasNext()) {
        com.liferay.portal.kernel.xml.Element roleNameEl=itr2.next();
        pluginSetting.addRole(roleNameEl.getText());
      }
    }
    layoutTemplateModel.setDefaultPluginSetting(pluginSetting);
  }
}

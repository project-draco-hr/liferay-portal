{
  Portlet portlet=null;
  try {
    portlet=ActionUtil.getPortlet(actionRequest);
  }
 catch (  PrincipalException pe) {
    SessionErrors.add(actionRequest,pe.getClass());
    actionResponse.setRenderParameter("mvcPath","/error.jsp");
    return;
  }
  actionRequest=ActionUtil.getWrappedActionRequest(actionRequest,null);
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  if (Validator.isNull(cmd)) {
    String portletId=PortalUtil.getPortletId(actionRequest);
    Map<String,String[]> parameterMap=ExportImportConfigurationParameterMapFactory.buildParameterMap(actionRequest);
    SessionMessages.add(actionRequest,portletId + "parameterMap",parameterMap);
    return;
  }
  try {
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    if (cmd.equals(Constants.ADD_TEMP)) {
      addTempFileEntry(actionRequest,ExportImportHelper.TEMP_FOLDER_NAME + portlet.getPortletId());
      validateFile(actionRequest,actionResponse,ExportImportHelper.TEMP_FOLDER_NAME + portlet.getPortletId());
    }
 else     if (cmd.equals("copy_from_live")) {
      StagingUtil.copyFromLive(actionRequest,portlet);
    }
 else     if (cmd.equals(Constants.DELETE_TEMP)) {
      deleteTempFileEntry(actionRequest,actionResponse,ExportImportHelper.TEMP_FOLDER_NAME + portlet.getPortletId());
    }
 else     if (cmd.equals(Constants.EXPORT)) {
      hideDefaultSuccessMessage(actionRequest);
      exportData(actionRequest,portlet);
      sendRedirect(actionRequest,actionResponse,redirect);
    }
 else     if (cmd.equals(Constants.IMPORT)) {
      hideDefaultSuccessMessage(actionRequest);
      importData(actionRequest,ExportImportHelper.TEMP_FOLDER_NAME + portlet.getPortletId());
      SessionMessages.add(actionRequest,PortalUtil.getPortletId(actionRequest) + SessionMessages.KEY_SUFFIX_CLOSE_REFRESH_PORTLET,portlet.getPortletId());
      sendRedirect(actionRequest,actionResponse,redirect);
    }
 else     if (cmd.equals(Constants.PUBLISH_TO_LIVE)) {
      hideDefaultSuccessMessage(actionRequest);
      StagingUtil.publishToLive(actionRequest,portlet);
    }
  }
 catch (  Exception e) {
    if (cmd.equals(Constants.ADD_TEMP) || cmd.equals(Constants.DELETE_TEMP)) {
      handleUploadException(actionRequest,actionResponse,ExportImportHelper.TEMP_FOLDER_NAME + portlet.getPortletId(),e);
    }
 else {
      if ((e instanceof LARFileException) || (e instanceof LARFileNameException) || (e instanceof LARFileSizeException)|| (e instanceof LARTypeException)|| (e instanceof LocaleException)|| (e instanceof NoSuchLayoutException)|| (e instanceof PortletIdException)|| (e instanceof PrincipalException)|| (e instanceof StructureDuplicateStructureKeyException)) {
        SessionErrors.add(actionRequest,e.getClass());
      }
 else {
        _log.error(e,e);
        SessionErrors.add(actionRequest,ExportImportMVCActionCommand.class.getName());
      }
    }
  }
}

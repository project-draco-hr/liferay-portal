{
  List<Exception> exceptions=new ArrayList<>();
  int totalRetries=3;
  for (int i=0; i < totalRetries; i++) {
    FutureTask<String> futureTask=new FutureTask<>(new Callable<String>(){
      @Override public String call() throws Exception {
        return _webDriver.getCurrentUrl();
      }
      private Callable<String> init(      WebDriver webDriver) throws Exception {
        _webDriver=webDriver;
        return this;
      }
      private WebDriver _webDriver;
    }
.init(webDriver));
    Thread getCurrentUrlThread=new Thread(futureTask);
    getCurrentUrlThread.start();
    try {
      String location=futureTask.get(PropsValues.TIMEOUT_EXPLICIT_WAIT,TimeUnit.SECONDS);
      return location;
    }
 catch (    CancellationException ce) {
      exceptions.add(ce);
    }
catch (    ExecutionException ee) {
      exceptions.add(ee);
    }
catch (    InterruptedException ie) {
      exceptions.add(ie);
    }
catch (    java.util.concurrent.TimeoutException te) {
      exceptions.add(te);
    }
 finally {
      getCurrentUrlThread.interrupt();
    }
    System.out.println("WebDriverHelper.getLocation(webDriver) failed");
    System.out.println(webDriver.toString());
    Set<String> windowHandles=webDriver.getWindowHandles();
    for (    String windowHandle : windowHandles) {
      System.out.println(windowHandle);
    }
  }
  if (!exceptions.isEmpty()) {
    throw new Exception(exceptions.get(0));
  }
 else {
    throw new java.util.concurrent.TimeoutException();
  }
}

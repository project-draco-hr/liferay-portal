{
  OutputStreamWriter out=null;
  try {
    long groupId=ParamUtil.getLong(req,"groupId");
    boolean privateLayout=ParamUtil.getBoolean(req,"privateLayout");
    Group group=GroupLocalServiceUtil.getGroup(groupId);
    if (group.isStagingGroup()) {
      groupId=group.getLiveGroupId();
    }
    LayoutSet layoutSet=null;
    if (groupId > 0) {
      layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(groupId,privateLayout);
    }
 else {
      String host=PortalUtil.getHost(req);
      layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(host);
    }
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    String sitemap=SitemapUtil.getSitemap(layoutSet.getGroupId(),layoutSet.isPrivateLayout(),themeDisplay);
    if (!res.isCommitted()) {
      res.setContentType(ContentTypes.TEXT_XML_UTF8);
      out=new OutputStreamWriter(res.getOutputStream());
      out.write(sitemap);
    }
  }
 catch (  NoSuchLayoutSetException e) {
    PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND,e,req,res);
  }
catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
    PortalUtil.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,e,req,res);
  }
 finally {
    if (out != null) {
      out.flush();
      out.close();
    }
  }
  return null;
}

{
  if (!portletDataContext.isWithinDateRange(repository.getModifiedDate())) {
    return;
  }
  String path=getRepositoryPath(portletDataContext,repository);
  if (!portletDataContext.isPathNotProcessed(path)) {
    return;
  }
  Element repositoryElement=repositoriesElement.addElement("repository");
  Folder folder=DLAppLocalServiceUtil.getFolder(repository.getDlFolderId());
  if (folder.getModel() instanceof DLFolder) {
    DLFolder dlFolder=(DLFolder)folder.getModel();
    repositoryElement.addAttribute("hidden",String.valueOf(dlFolder.isHidden()));
  }
  portletDataContext.addClassedModel(repositoryElement,path,repository,NAMESPACE);
  List<RepositoryEntry> repositoryEntries=RepositoryEntryUtil.findByRepositoryId(repository.getRepositoryId());
  for (  RepositoryEntry repositoryEntry : repositoryEntries) {
    exportRepositoryEntry(portletDataContext,repositoryEntriesElement,repositoryEntry);
  }
}

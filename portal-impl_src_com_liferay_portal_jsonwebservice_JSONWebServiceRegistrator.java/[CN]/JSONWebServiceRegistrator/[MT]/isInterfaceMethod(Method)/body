{
  Class<?> declaringClass=method.getDeclaringClass();
  if (declaringClass.isInterface()) {
    return true;
  }
  Queue<Class<?>> queue=new LinkedList<>(Arrays.asList(declaringClass.getInterfaces()));
  Class<?> superClass=declaringClass.getSuperclass();
  if (superClass != null) {
    queue.add(superClass);
  }
  Class<?> clazz=null;
  while ((clazz=queue.poll()) != null) {
    if (clazz.isInterface()) {
      try {
        clazz.getMethod(method.getName(),method.getParameterTypes());
        return true;
      }
 catch (      ReflectiveOperationException roe) {
      }
    }
 else {
      queue.addAll(Arrays.asList(clazz.getInterfaces()));
      superClass=clazz.getSuperclass();
      if (superClass != null) {
        queue.add(superClass);
      }
    }
  }
  return false;
}

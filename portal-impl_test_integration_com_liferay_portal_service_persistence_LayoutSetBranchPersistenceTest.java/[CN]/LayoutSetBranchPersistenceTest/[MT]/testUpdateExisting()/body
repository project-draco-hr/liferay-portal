{
  long pk=nextLong();
  LayoutSetBranch newLayoutSetBranch=_persistence.create(pk);
  newLayoutSetBranch.setGroupId(nextLong());
  newLayoutSetBranch.setCompanyId(nextLong());
  newLayoutSetBranch.setUserId(nextLong());
  newLayoutSetBranch.setUserName(randomString());
  newLayoutSetBranch.setCreateDate(nextDate());
  newLayoutSetBranch.setModifiedDate(nextDate());
  newLayoutSetBranch.setPrivateLayout(randomBoolean());
  newLayoutSetBranch.setName(randomString());
  newLayoutSetBranch.setDescription(randomString());
  newLayoutSetBranch.setMaster(randomBoolean());
  newLayoutSetBranch.setLogo(randomBoolean());
  newLayoutSetBranch.setLogoId(nextLong());
  newLayoutSetBranch.setThemeId(randomString());
  newLayoutSetBranch.setColorSchemeId(randomString());
  newLayoutSetBranch.setWapThemeId(randomString());
  newLayoutSetBranch.setWapColorSchemeId(randomString());
  newLayoutSetBranch.setCss(randomString());
  newLayoutSetBranch.setSettings(randomString());
  newLayoutSetBranch.setLayoutSetPrototypeUuid(randomString());
  newLayoutSetBranch.setLayoutSetPrototypeLinkEnabled(randomBoolean());
  _persistence.update(newLayoutSetBranch,false);
  LayoutSetBranch existingLayoutSetBranch=_persistence.findByPrimaryKey(newLayoutSetBranch.getPrimaryKey());
  assertEquals(existingLayoutSetBranch.getLayoutSetBranchId(),newLayoutSetBranch.getLayoutSetBranchId());
  assertEquals(existingLayoutSetBranch.getGroupId(),newLayoutSetBranch.getGroupId());
  assertEquals(existingLayoutSetBranch.getCompanyId(),newLayoutSetBranch.getCompanyId());
  assertEquals(existingLayoutSetBranch.getUserId(),newLayoutSetBranch.getUserId());
  assertEquals(existingLayoutSetBranch.getUserName(),newLayoutSetBranch.getUserName());
  assertEquals(Time.getShortTimestamp(existingLayoutSetBranch.getCreateDate()),Time.getShortTimestamp(newLayoutSetBranch.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingLayoutSetBranch.getModifiedDate()),Time.getShortTimestamp(newLayoutSetBranch.getModifiedDate()));
  assertEquals(existingLayoutSetBranch.getPrivateLayout(),newLayoutSetBranch.getPrivateLayout());
  assertEquals(existingLayoutSetBranch.getName(),newLayoutSetBranch.getName());
  assertEquals(existingLayoutSetBranch.getDescription(),newLayoutSetBranch.getDescription());
  assertEquals(existingLayoutSetBranch.getMaster(),newLayoutSetBranch.getMaster());
  assertEquals(existingLayoutSetBranch.getLogo(),newLayoutSetBranch.getLogo());
  assertEquals(existingLayoutSetBranch.getLogoId(),newLayoutSetBranch.getLogoId());
  assertEquals(existingLayoutSetBranch.getThemeId(),newLayoutSetBranch.getThemeId());
  assertEquals(existingLayoutSetBranch.getColorSchemeId(),newLayoutSetBranch.getColorSchemeId());
  assertEquals(existingLayoutSetBranch.getWapThemeId(),newLayoutSetBranch.getWapThemeId());
  assertEquals(existingLayoutSetBranch.getWapColorSchemeId(),newLayoutSetBranch.getWapColorSchemeId());
  assertEquals(existingLayoutSetBranch.getCss(),newLayoutSetBranch.getCss());
  assertEquals(existingLayoutSetBranch.getSettings(),newLayoutSetBranch.getSettings());
  assertEquals(existingLayoutSetBranch.getLayoutSetPrototypeUuid(),newLayoutSetBranch.getLayoutSetPrototypeUuid());
  assertEquals(existingLayoutSetBranch.getLayoutSetPrototypeLinkEnabled(),newLayoutSetBranch.getLayoutSetPrototypeLinkEnabled());
}

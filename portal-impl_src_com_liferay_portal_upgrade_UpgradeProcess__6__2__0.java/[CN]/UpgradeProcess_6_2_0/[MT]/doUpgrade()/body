{
  upgrade(UpgradeSchema.class);
  List<ThrowableAwareRunnable> throwableAwareRunnables=new ArrayList<>();
  throwableAwareRunnables.add(new ThrowableAwareRunnable(){
    @Override protected void doRun() throws Exception {
      upgrade(UpgradeJournal.class);
    }
  }
);
  throwableAwareRunnables.add(new ThrowableAwareRunnable(){
    @Override protected void doRun() throws Exception {
      upgrade(UpgradePortletPreferences.class);
    }
  }
);
  throwableAwareRunnables.add(new ThrowableAwareRunnable(){
    @Override protected void doRun() throws Exception {
      upgrade(UpgradeSocial.class);
    }
  }
);
  throwableAwareRunnables.add(new ThrowableAwareRunnable(){
    @Override protected void doRun() throws Exception {
      upgrade(UpgradeAnnouncements.class);
      upgrade(UpgradeAssetPublisher.class);
      upgrade(UpgradeBlogs.class);
      upgrade(UpgradeBlogsAggregator.class);
      upgrade(UpgradeCalendar.class);
      upgrade(UpgradeCompany.class);
      upgrade(UpgradeCustomizablePortlets.class);
      upgrade(UpgradeDocumentLibrary.class);
      upgrade(UpgradeDynamicDataListDisplay.class);
      upgrade(UpgradeDynamicDataMapping.class);
      upgrade(UpgradeGroup.class);
      upgrade(UpgradeImageGallery.class);
      upgrade(UpgradeLayout.class);
      upgrade(UpgradeLayoutFriendlyURL.class);
      upgrade(UpgradeLayoutRevision.class);
      upgrade(UpgradeLayoutSet.class);
      upgrade(UpgradeLayoutSetBranch.class);
      upgrade(UpgradeMessageBoards.class);
      upgrade(UpgradeMessageBoardsAttachments.class);
      upgrade(UpgradePortletItem.class);
      upgrade(UpgradeRepository.class);
      upgrade(UpgradeSearch.class);
      upgrade(UpgradeUser.class);
      upgrade(UpgradeWiki.class);
      upgrade(UpgradeWikiAttachments.class);
    }
  }
);
  ThrowableAwareRunnablesExecutorUtil.execute(throwableAwareRunnables);
  clearIndexesCache();
}

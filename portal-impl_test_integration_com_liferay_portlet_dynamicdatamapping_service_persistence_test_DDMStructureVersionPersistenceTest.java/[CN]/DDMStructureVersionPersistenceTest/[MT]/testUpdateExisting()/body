{
  long pk=RandomTestUtil.nextLong();
  DDMStructureVersion newDDMStructureVersion=_persistence.create(pk);
  newDDMStructureVersion.setGroupId(RandomTestUtil.nextLong());
  newDDMStructureVersion.setCompanyId(RandomTestUtil.nextLong());
  newDDMStructureVersion.setUserId(RandomTestUtil.nextLong());
  newDDMStructureVersion.setUserName(RandomTestUtil.randomString());
  newDDMStructureVersion.setCreateDate(RandomTestUtil.nextDate());
  newDDMStructureVersion.setStructureId(RandomTestUtil.nextLong());
  newDDMStructureVersion.setVersion(RandomTestUtil.randomString());
  newDDMStructureVersion.setName(RandomTestUtil.randomString());
  newDDMStructureVersion.setDescription(RandomTestUtil.randomString());
  newDDMStructureVersion.setDefinition(RandomTestUtil.randomString());
  newDDMStructureVersion.setStorageType(RandomTestUtil.randomString());
  newDDMStructureVersion.setType(RandomTestUtil.nextInt());
  newDDMStructureVersion.setStatus(RandomTestUtil.nextInt());
  newDDMStructureVersion.setStatusByUserId(RandomTestUtil.nextLong());
  newDDMStructureVersion.setStatusByUserName(RandomTestUtil.randomString());
  newDDMStructureVersion.setStatusDate(RandomTestUtil.nextDate());
  _ddmStructureVersions.add(_persistence.update(newDDMStructureVersion));
  DDMStructureVersion existingDDMStructureVersion=_persistence.findByPrimaryKey(newDDMStructureVersion.getPrimaryKey());
  Assert.assertEquals(existingDDMStructureVersion.getStructureVersionId(),newDDMStructureVersion.getStructureVersionId());
  Assert.assertEquals(existingDDMStructureVersion.getGroupId(),newDDMStructureVersion.getGroupId());
  Assert.assertEquals(existingDDMStructureVersion.getCompanyId(),newDDMStructureVersion.getCompanyId());
  Assert.assertEquals(existingDDMStructureVersion.getUserId(),newDDMStructureVersion.getUserId());
  Assert.assertEquals(existingDDMStructureVersion.getUserName(),newDDMStructureVersion.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMStructureVersion.getCreateDate()),Time.getShortTimestamp(newDDMStructureVersion.getCreateDate()));
  Assert.assertEquals(existingDDMStructureVersion.getStructureId(),newDDMStructureVersion.getStructureId());
  Assert.assertEquals(existingDDMStructureVersion.getVersion(),newDDMStructureVersion.getVersion());
  Assert.assertEquals(existingDDMStructureVersion.getName(),newDDMStructureVersion.getName());
  Assert.assertEquals(existingDDMStructureVersion.getDescription(),newDDMStructureVersion.getDescription());
  Assert.assertEquals(existingDDMStructureVersion.getDefinition(),newDDMStructureVersion.getDefinition());
  Assert.assertEquals(existingDDMStructureVersion.getStorageType(),newDDMStructureVersion.getStorageType());
  Assert.assertEquals(existingDDMStructureVersion.getType(),newDDMStructureVersion.getType());
  Assert.assertEquals(existingDDMStructureVersion.getStatus(),newDDMStructureVersion.getStatus());
  Assert.assertEquals(existingDDMStructureVersion.getStatusByUserId(),newDDMStructureVersion.getStatusByUserId());
  Assert.assertEquals(existingDDMStructureVersion.getStatusByUserName(),newDDMStructureVersion.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingDDMStructureVersion.getStatusDate()),Time.getShortTimestamp(newDDMStructureVersion.getStatusDate()));
}

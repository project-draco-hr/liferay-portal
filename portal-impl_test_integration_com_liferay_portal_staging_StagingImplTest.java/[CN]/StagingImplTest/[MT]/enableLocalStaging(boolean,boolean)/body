{
  Group group=ServiceTestUtil.addGroup();
  ServiceTestUtil.addLayout(group.getGroupId(),"Page1");
  ServiceTestUtil.addLayout(group.getGroupId(),"Page2");
  int initialPagesCount=LayoutLocalServiceUtil.getLayoutsCount(group,false);
  JournalArticle journalArticle=addJournalArticle(group.getGroupId(),"Title","content");
  PollsQuestion pollsQuestion=addPollsQuestion(group.getGroupId(),"Question","Description");
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setScopeGroupId(group.getGroupId());
  Map<String,String[]> parameters=StagingUtil.getStagingParameters();
  parameters.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{String.valueOf(false)});
  parameters.put(PortletDataHandlerKeys.PORTLET_DATA + "_" + PortletKeys.JOURNAL,new String[]{String.valueOf(stageJournal)});
  parameters.put(PortletDataHandlerKeys.PORTLET_DATA + "_" + PortletKeys.POLLS,new String[]{String.valueOf(stagePolls)});
  for (  String parameterName : parameters.keySet()) {
    serviceContext.setAttribute(parameterName,parameters.get(parameterName)[0]);
  }
  serviceContext.setAttribute(StagingConstants.STAGED_PORTLET + PortletKeys.JOURNAL,stageJournal);
  serviceContext.setAttribute(StagingConstants.STAGED_PORTLET + PortletKeys.POLLS,stagePolls);
  StagingUtil.enableLocalStaging(TestPropsValues.getUserId(),group,group,false,false,serviceContext);
  Group stagingGroup=group.getStagingGroup();
  Assert.assertNotNull(stagingGroup);
  Assert.assertEquals(LayoutLocalServiceUtil.getLayoutsCount(stagingGroup,false),initialPagesCount);
  JournalArticle stagingJournalArticle=JournalArticleLocalServiceUtil.getArticleByUrlTitle(stagingGroup.getGroupId(),journalArticle.getUrlTitle());
  stagingJournalArticle=updateJournalArticle(stagingJournalArticle,"Title2",stagingJournalArticle.getContent());
  PollsQuestion stagingQuestion=PollsQuestionLocalServiceUtil.getPollsQuestionByUuidAndGroupId(pollsQuestion.getUuid(),stagingGroup.getGroupId());
  stagingQuestion=updatePollsQuestion(stagingQuestion,"Question2","Description2");
  StagingUtil.publishLayouts(TestPropsValues.getUserId(),stagingGroup.getGroupId(),group.getGroupId(),false,parameters,null,null);
  journalArticle=JournalArticleLocalServiceUtil.getArticle(journalArticle.getId());
  pollsQuestion=PollsQuestionLocalServiceUtil.getQuestion(pollsQuestion.getQuestionId());
  if (stagePolls) {
    for (    Locale locale : _locales) {
      Assert.assertEquals(pollsQuestion.getTitle(locale),stagingQuestion.getTitle(locale));
    }
  }
 else {
    for (    Locale locale : _locales) {
      Assert.assertFalse(pollsQuestion.getTitle(locale).equals(stagingQuestion.getTitle(locale)));
    }
  }
  if (stageJournal) {
    for (    Locale locale : _locales) {
      Assert.assertEquals(journalArticle.getTitle(locale),stagingJournalArticle.getTitle(locale));
    }
  }
 else {
    for (    Locale locale : _locales) {
      Assert.assertFalse(journalArticle.getTitle(locale).equals(stagingJournalArticle.getTitle(locale)));
    }
  }
}

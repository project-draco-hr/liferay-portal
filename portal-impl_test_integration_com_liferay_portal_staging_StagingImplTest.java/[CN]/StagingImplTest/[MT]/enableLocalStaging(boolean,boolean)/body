{
  Group group=GroupTestUtil.addGroup();
  LayoutTestUtil.addLayout(group.getGroupId(),"Page1");
  LayoutTestUtil.addLayout(group.getGroupId(),"Page2");
  int initialPagesCount=LayoutLocalServiceUtil.getLayoutsCount(group,false);
  AssetCategory assetCategory=addAssetCategory(group.getGroupId(),"Title","content");
  JournalArticle journalArticle=JournalTestUtil.addArticle(group.getGroupId(),"Title","content");
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setAddGroupPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setScopeGroupId(group.getGroupId());
  Map<String,String[]> parameters=StagingUtil.getStagingParameters();
  parameters.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{String.valueOf(false)});
  parameters.put(PortletDataHandlerKeys.PORTLET_DATA + "_" + PortletKeys.JOURNAL,new String[]{String.valueOf(stageJournal)});
  parameters.put(PortletDataHandlerKeys.CATEGORIES,new String[]{String.valueOf(stageCategories)});
  for (  String parameterName : parameters.keySet()) {
    serviceContext.setAttribute(parameterName,parameters.get(parameterName)[0]);
  }
  serviceContext.setAttribute(StagingConstants.STAGED_PORTLET + PortletKeys.JOURNAL,stageJournal);
  serviceContext.setAttribute(StagingConstants.STAGED_PORTLET + PortletDataHandlerKeys.CATEGORIES,stageCategories);
  StagingUtil.enableLocalStaging(TestPropsValues.getUserId(),group,group,false,false,serviceContext);
  Group stagingGroup=group.getStagingGroup();
  Assert.assertNotNull(stagingGroup);
  Assert.assertEquals(LayoutLocalServiceUtil.getLayoutsCount(stagingGroup,false),initialPagesCount);
  AssetCategory stagingAssetCategory=AssetCategoryLocalServiceUtil.getCategory(assetCategory.getUuid(),stagingGroup.getGroupId());
  stagingAssetCategory=updateAssetCategory(stagingAssetCategory,"new name");
  JournalArticle stagingJournalArticle=JournalArticleLocalServiceUtil.getArticleByUrlTitle(stagingGroup.getGroupId(),journalArticle.getUrlTitle());
  stagingJournalArticle=JournalTestUtil.updateArticle(stagingJournalArticle,"Title2",stagingJournalArticle.getContent());
  StagingUtil.publishLayouts(TestPropsValues.getUserId(),stagingGroup.getGroupId(),group.getGroupId(),false,parameters,null,null);
  assetCategory=AssetCategoryLocalServiceUtil.getCategory(assetCategory.getUuid(),group.getGroupId());
  journalArticle=JournalArticleLocalServiceUtil.getArticle(group.getGroupId(),journalArticle.getArticleId());
  if (stageCategories) {
    for (    Locale locale : _locales) {
      Assert.assertEquals(assetCategory.getTitle(locale),stagingAssetCategory.getTitle(locale));
    }
  }
 else {
    for (    Locale locale : _locales) {
      Assert.assertFalse(assetCategory.getTitle(locale).equals(stagingAssetCategory.getTitle(locale)));
    }
  }
  if (stageJournal) {
    for (    Locale locale : _locales) {
      Assert.assertEquals(journalArticle.getTitle(locale),stagingJournalArticle.getTitle(locale));
    }
  }
 else {
    for (    Locale locale : _locales) {
      Assert.assertFalse(journalArticle.getTitle(locale).equals(stagingJournalArticle.getTitle(locale)));
    }
  }
}

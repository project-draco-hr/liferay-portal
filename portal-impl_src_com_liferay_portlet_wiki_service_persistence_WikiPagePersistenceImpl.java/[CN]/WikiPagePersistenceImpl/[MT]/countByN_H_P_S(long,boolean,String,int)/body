{
  Object[] finderArgs=new Object[]{nodeId,head,parentTitle,status};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_N_H_P_S,finderArgs,this);
  if (count == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_COUNT_WIKIPAGE_WHERE);
      query.append(_FINDER_COLUMN_N_H_P_S_NODEID_2);
      query.append(_FINDER_COLUMN_N_H_P_S_HEAD_2);
      if (parentTitle == null) {
        query.append(_FINDER_COLUMN_N_H_P_S_PARENTTITLE_1);
      }
 else {
        if (parentTitle.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_N_H_P_S_PARENTTITLE_3);
        }
 else {
          query.append(_FINDER_COLUMN_N_H_P_S_PARENTTITLE_2);
        }
      }
      query.append(_FINDER_COLUMN_N_H_P_S_STATUS_2);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(nodeId);
      qPos.add(head);
      if (parentTitle != null) {
        qPos.add(parentTitle);
      }
      qPos.add(status);
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_N_H_P_S,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}

{
  Object[] finderArgs=new Object[]{new Long(nodeId),redirectTitle};
  List<WikiPage> list=(List<WikiPage>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_N_R,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_WIKIPAGE_WHERE);
      query.append("wikiPage.nodeId = ?");
      query.append(" AND ");
      if (redirectTitle == null) {
        query.append("wikiPage.redirectTitle IS NULL");
      }
 else {
        if (redirectTitle.equals(StringPool.BLANK)) {
          query.append("(wikiPage.redirectTitle IS NULL OR ");
        }
        query.append("wikiPage.redirectTitle = ?");
        if (redirectTitle.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" ORDER BY ");
      query.append("wikiPage.nodeId ASC, ");
      query.append("wikiPage.title ASC, ");
      query.append("wikiPage.version ASC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(nodeId);
      if (redirectTitle != null) {
        qPos.add(redirectTitle);
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<WikiPage>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_N_R,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

{
  wikiPage=toUnwrappedModel(wikiPage);
  boolean isNew=wikiPage.isNew();
  WikiPageModelImpl wikiPageModelImpl=(WikiPageModelImpl)wikiPage;
  if (Validator.isNull(wikiPage.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wikiPage.setUuid(uuid);
  }
  long userId=GetterUtil.getLong(PrincipalThreadLocal.getName());
  if (userId > 0) {
    long companyId=wikiPage.getCompanyId();
    long groupId=wikiPage.getGroupId();
    long pageId=0;
    if (!isNew) {
      pageId=wikiPage.getPrimaryKey();
    }
    try {
      wikiPage.setTitle(SanitizerUtil.sanitize(companyId,groupId,userId,com.liferay.portlet.wiki.model.WikiPage.class.getName(),pageId,ContentTypes.TEXT_PLAIN,Sanitizer.MODE_ALL,wikiPage.getTitle(),null));
    }
 catch (    SanitizerException se) {
      throw new SystemException(se);
    }
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,wikiPage,merge);
    wikiPage.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WikiPageModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{wikiPageModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUuid(),Long.valueOf(wikiPageModelImpl.getOriginalCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{wikiPageModelImpl.getUuid(),Long.valueOf(wikiPageModelImpl.getCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_NODEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_NODEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalFormat()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_FORMAT,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT,args);
      args=new Object[]{wikiPageModelImpl.getFormat()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_FORMAT,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalResourcePrimKey()),Long.valueOf(wikiPageModelImpl.getOriginalNodeId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_N,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getResourcePrimKey()),Long.valueOf(wikiPageModelImpl.getNodeId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_N,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),wikiPageModelImpl.getTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Boolean.valueOf(wikiPageModelImpl.getOriginalHead())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),Boolean.valueOf(wikiPageModelImpl.getHead())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalParentTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),wikiPageModelImpl.getParentTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalRedirectTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_R,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),wikiPageModelImpl.getRedirectTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_R,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalResourcePrimKey()),Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getResourcePrimKey()),Long.valueOf(wikiPageModelImpl.getNodeId()),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalUserId()),Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_U_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getUserId()),Long.valueOf(wikiPageModelImpl.getNodeId()),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_U_N_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalTitle(),Boolean.valueOf(wikiPageModelImpl.getOriginalHead())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T_H,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),wikiPageModelImpl.getTitle(),Boolean.valueOf(wikiPageModelImpl.getHead())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T_H,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalTitle(),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),wikiPageModelImpl.getTitle(),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Boolean.valueOf(wikiPageModelImpl.getOriginalHead()),wikiPageModelImpl.getOriginalParentTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),Boolean.valueOf(wikiPageModelImpl.getHead()),wikiPageModelImpl.getParentTitle()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_P,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Boolean.valueOf(wikiPageModelImpl.getOriginalHead()),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),Boolean.valueOf(wikiPageModelImpl.getHead()),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Boolean.valueOf(wikiPageModelImpl.getOriginalHead()),wikiPageModelImpl.getOriginalParentTitle(),Integer.valueOf(wikiPageModelImpl.getOriginalStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_P_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S,args);
      args=new Object[]{Long.valueOf(wikiPageModelImpl.getNodeId()),Boolean.valueOf(wikiPageModelImpl.getHead()),wikiPageModelImpl.getParentTitle(),Integer.valueOf(wikiPageModelImpl.getStatus())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_H_P_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S,args);
    }
  }
  EntityCacheUtil.putResult(WikiPageModelImpl.ENTITY_CACHE_ENABLED,WikiPageImpl.class,wikiPage.getPrimaryKey(),wikiPage);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{wikiPage.getUuid(),Long.valueOf(wikiPage.getGroupId())},wikiPage);
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_N_V,new Object[]{Long.valueOf(wikiPage.getResourcePrimKey()),Long.valueOf(wikiPage.getNodeId()),Double.valueOf(wikiPage.getVersion())},wikiPage);
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_N_T_V,new Object[]{Long.valueOf(wikiPage.getNodeId()),wikiPage.getTitle(),Double.valueOf(wikiPage.getVersion())},wikiPage);
  }
 else {
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_UUID_G.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUuid(),Long.valueOf(wikiPageModelImpl.getOriginalGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_G,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_UUID_G,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{wikiPage.getUuid(),Long.valueOf(wikiPage.getGroupId())},wikiPage);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_R_N_V.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalResourcePrimKey()),Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),Double.valueOf(wikiPageModelImpl.getOriginalVersion())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_N_V,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_R_N_V,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_R_N_V,new Object[]{Long.valueOf(wikiPage.getResourcePrimKey()),Long.valueOf(wikiPage.getNodeId()),Double.valueOf(wikiPage.getVersion())},wikiPage);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_N_T_V.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalTitle(),Double.valueOf(wikiPageModelImpl.getOriginalVersion())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_N_T_V,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_N_T_V,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_N_T_V,new Object[]{Long.valueOf(wikiPage.getNodeId()),wikiPage.getTitle(),Double.valueOf(wikiPage.getVersion())},wikiPage);
    }
  }
  return wikiPage;
}

{
  boolean isNew=wikiPage.isNew();
  if (Validator.isNull(wikiPage.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wikiPage.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,wikiPage,merge);
    wikiPage.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  EntityCacheUtil.putResult(WikiPageModelImpl.ENTITY_CACHE_ENABLED,WikiPageImpl.class,wikiPage.getPrimaryKey(),wikiPage);
  WikiPageModelImpl wikiPageModelImpl=(WikiPageModelImpl)wikiPage;
  if (!isNew && ((wikiPage.getNodeId() != wikiPageModelImpl.getOriginalNodeId()) || !wikiPage.getTitle().equals(wikiPageModelImpl.getOriginalTitle()) || (wikiPage.getVersion() != wikiPageModelImpl.getOriginalVersion()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_N_T_V,new Object[]{new Long(wikiPageModelImpl.getOriginalNodeId()),wikiPageModelImpl.getOriginalTitle(),new Double(wikiPageModelImpl.getOriginalVersion())});
  }
  if (isNew || ((wikiPage.getNodeId() != wikiPageModelImpl.getOriginalNodeId()) || !wikiPage.getTitle().equals(wikiPageModelImpl.getOriginalTitle()) || (wikiPage.getVersion() != wikiPageModelImpl.getOriginalVersion()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_N_T_V,new Object[]{new Long(wikiPage.getNodeId()),wikiPage.getTitle(),new Double(wikiPage.getVersion())},wikiPage);
  }
  return wikiPage;
}

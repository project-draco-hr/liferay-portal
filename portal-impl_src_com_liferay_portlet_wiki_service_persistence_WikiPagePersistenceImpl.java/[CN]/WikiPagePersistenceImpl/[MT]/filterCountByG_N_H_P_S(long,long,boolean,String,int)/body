{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return countByG_N_H_P_S(groupId,nodeId,head,parentTitle,status);
  }
  StringBundler query=new StringBundler(6);
  query.append(_FILTER_SQL_COUNT_WIKIPAGE_WHERE);
  query.append(_FINDER_COLUMN_G_N_H_P_S_GROUPID_2);
  query.append(_FINDER_COLUMN_G_N_H_P_S_NODEID_2);
  query.append(_FINDER_COLUMN_G_N_H_P_S_HEAD_2);
  boolean bindParentTitle=false;
  if (parentTitle == null) {
    query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_1);
  }
 else   if (parentTitle.equals(StringPool.BLANK)) {
    query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_3);
  }
 else {
    bindParentTitle=true;
    query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_2);
  }
  query.append(_FINDER_COLUMN_G_N_H_P_S_STATUS_2);
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),WikiPage.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,groupId);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(nodeId);
    qPos.add(head);
    if (bindParentTitle) {
      qPos.add(parentTitle.toLowerCase());
    }
    qPos.add(status);
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  long pk=ServiceTestUtil.nextLong();
  Region newRegion=_persistence.create(pk);
  newRegion.setCountryId(ServiceTestUtil.nextLong());
  newRegion.setRegionCode(ServiceTestUtil.randomString());
  newRegion.setName(ServiceTestUtil.randomString());
  newRegion.setActive(ServiceTestUtil.randomBoolean());
  newRegion.setMvccVersion(ServiceTestUtil.nextLong());
  _persistence.update(newRegion);
  Region existingRegion=_persistence.findByPrimaryKey(newRegion.getPrimaryKey());
  Assert.assertEquals(existingRegion.getRegionId(),newRegion.getRegionId());
  Assert.assertEquals(existingRegion.getCountryId(),newRegion.getCountryId());
  Assert.assertEquals(existingRegion.getRegionCode(),newRegion.getRegionCode());
  Assert.assertEquals(existingRegion.getName(),newRegion.getName());
  Assert.assertEquals(existingRegion.getActive(),newRegion.getActive());
  Assert.assertEquals(existingRegion.getMvccVersion(),newRegion.getMvccVersion());
}

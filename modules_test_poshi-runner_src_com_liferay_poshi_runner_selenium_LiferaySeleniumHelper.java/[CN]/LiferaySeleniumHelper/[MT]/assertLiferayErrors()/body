{
  String fileName=PropsValues.TEST_CONSOLE_LOG_FILE_NAME;
  if (!FileUtil.exists(fileName)) {
    return;
  }
  String content=FileUtil.read(fileName);
  if (content.equals("")) {
    return;
  }
  SAXReader saxReader=new SAXReader();
  content="<log4j>" + content + "</log4j>";
  content=content.replaceAll("log4j:","");
  InputStream inputStream=new ByteArrayInputStream(content.getBytes("UTF-8"));
  Document document=saxReader.read(inputStream);
  Element rootElement=document.getRootElement();
  List<Element> eventElements=rootElement.elements("event");
  List<Exception> exceptions=new ArrayList<>();
  for (  Element eventElement : eventElements) {
    String level=eventElement.attributeValue("level");
    if (level.equals("ERROR")) {
      String fileContent=FileUtil.read(fileName);
      fileContent=fileContent.replaceFirst("level=\"ERROR\"","level=\"ERROR_FOUND\"");
      FileUtil.write(fileName,fileContent);
      Element messageElement=eventElement.element("message");
      String messageText=messageElement.getText();
      if (isIgnorableErrorLine(messageText)) {
        continue;
      }
      StringBuilder sb=new StringBuilder();
      sb.append("LIFERAY_ERROR: ");
      sb.append(messageText);
      Element throwableElement=eventElement.element("throwable");
      if (throwableElement != null) {
        sb.append("\n");
        sb.append(throwableElement.getText());
      }
      System.out.println(sb.toString());
      exceptions.add(new PoshiRunnerWarningException(sb.toString()));
    }
  }
  if (!exceptions.isEmpty()) {
    addToLiferayExceptions(exceptions);
    throw exceptions.get(0);
  }
}

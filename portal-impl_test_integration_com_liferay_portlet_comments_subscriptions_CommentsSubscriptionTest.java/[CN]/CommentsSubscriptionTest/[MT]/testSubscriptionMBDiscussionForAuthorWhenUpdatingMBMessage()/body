{
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group,_contextUser.getUserId());
  BlogsTestUtil.populateNotificationsServiceContext(serviceContext,Constants.ADD);
  BlogsEntry blogsEntry=BlogsEntryLocalServiceUtil.addEntry(_contextUser.getUserId(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),serviceContext);
  MBMessage mbMessage=addDiscussionMessage(_contextUser.getUserId(),serviceContext,blogsEntry);
  MBDiscussionLocalServiceUtil.subscribeDiscussion(_contextUser.getUserId(),_group.getGroupId(),BlogsEntry.class.getName(),blogsEntry.getEntryId());
  MBTestUtil.populateNotificationsServiceContext(serviceContext,Constants.UPDATE);
  MBMessageLocalServiceUtil.updateDiscussionMessage(_contextUser.getUserId(),mbMessage.getMessageId(),BlogsEntry.class.getName(),blogsEntry.getEntryId(),RandomTestUtil.randomString(),RandomTestUtil.randomString(50),serviceContext);
  Assert.assertEquals(0,MailServiceTestUtil.getInboxSize());
}

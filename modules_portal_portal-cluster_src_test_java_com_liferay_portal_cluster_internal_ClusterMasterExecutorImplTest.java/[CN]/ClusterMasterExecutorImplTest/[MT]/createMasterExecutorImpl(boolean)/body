{
  ClusterMasterExecutorImpl clusterMasterExecutorImpl=new ClusterMasterExecutorImpl();
  clusterMasterExecutorImpl.setClusterExecutor(new ClusterExecutor(){
    @Override public void addClusterEventListener(    ClusterEventListener clusterEventListener){
    }
    @Override public FutureClusterResponses execute(    ClusterRequest clusterRequest){
      return null;
    }
    @Override public InetAddress getBindInetAddress(){
      return InetAddress.getLoopbackAddress();
    }
    @Override public NetworkInterface getBindNetworkInterface(){
      try {
        return NetworkInterface.getByInetAddress(InetAddress.getLoopbackAddress());
      }
 catch (      SocketException se) {
        throw new IllegalStateException(se);
      }
    }
    @Override public List<ClusterEventListener> getClusterEventListeners(){
      return null;
    }
    @Override public List<ClusterNode> getClusterNodes(){
      return null;
    }
    @Override public ClusterNode getLocalClusterNode(){
      return null;
    }
    @Override public boolean isClusterNodeAlive(    String clusterNodeId){
      return enabled;
    }
    @Override public boolean isEnabled(){
      return enabled;
    }
    @Override public void removeClusterEventListener(    ClusterEventListener clusterEventListener){
    }
  }
);
  clusterMasterExecutorImpl.setLockManager(_mockLockManager);
  return clusterMasterExecutorImpl;
}

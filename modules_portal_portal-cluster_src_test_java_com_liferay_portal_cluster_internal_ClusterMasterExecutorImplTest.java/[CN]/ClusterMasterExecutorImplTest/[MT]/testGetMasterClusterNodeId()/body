{
  ClusterMasterExecutorImpl clusterMasterExecutorImpl=new ClusterMasterExecutorImpl();
  MockClusterExecutor mockClusterExecutor=new MockClusterExecutor(true);
  clusterMasterExecutorImpl.setClusterExecutorImpl(mockClusterExecutor);
  clusterMasterExecutorImpl.activate();
  Assert.assertEquals(mockClusterExecutor.getLocalClusterNodeId(),clusterMasterExecutorImpl.getMasterClusterNodeId(true));
  Assert.assertTrue(clusterMasterExecutorImpl.isMaster());
  mockClusterExecutor.addClusterNode(_TEST_ADDRESS,new ClusterNode(_TEST_CLUSTER_NODE_ID,InetAddress.getLocalHost()));
  MockClusterMasterTokenTransitionListener mockClusterMasterTokenTransitionListener=new MockClusterMasterTokenTransitionListener();
  clusterMasterExecutorImpl.addClusterMasterTokenTransitionListener(mockClusterMasterTokenTransitionListener);
  Address oldCoordinator=mockClusterExecutor.getCoordinator();
  mockClusterExecutor.setCoordinator(_TEST_ADDRESS);
  Assert.assertEquals(_TEST_CLUSTER_NODE_ID,clusterMasterExecutorImpl.getMasterClusterNodeId(true));
  Assert.assertFalse(clusterMasterExecutorImpl.isMaster());
  Assert.assertTrue(mockClusterMasterTokenTransitionListener.isMasterTokenReleasedNotified());
  mockClusterExecutor.setCoordinator(oldCoordinator);
  Assert.assertEquals(mockClusterExecutor.getLocalClusterNodeId(),clusterMasterExecutorImpl.getMasterClusterNodeId(true));
  Assert.assertTrue(clusterMasterExecutorImpl.isMaster());
  Assert.assertTrue(mockClusterMasterTokenTransitionListener.isMasterTokenAcquiredNotified());
}

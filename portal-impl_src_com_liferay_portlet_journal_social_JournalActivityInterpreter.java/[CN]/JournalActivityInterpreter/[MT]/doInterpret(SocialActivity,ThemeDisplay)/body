{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  JournalArticle article=JournalArticleLocalServiceUtil.getJournalArticle(activity.getClassPK());
  if (!JournalPermission.contains(permissionChecker,activity.getGroupId(),ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  int activityType=activity.getType();
  JournalArticle lastestArticle=JournalArticleLocalServiceUtil.getLatestArticle(article.getGroupId(),article.getArticleId());
  String groupFriendlyURL=PortalUtil.getGroupFriendlyURL(themeDisplay.getScopeGroup(),false,themeDisplay);
  String link=groupFriendlyURL.concat(JournalArticleConstants.CANONICAL_URL_SEPARATOR).concat(lastestArticle.getUrlTitle());
  String titlePattern=null;
  if (activityType == JournalActivityKeys.ADD_JOURNAL_ARTICLE) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-journal-add-article";
    }
 else {
      titlePattern="activity-journal-add-article-in";
    }
  }
 else   if (activityType == JournalActivityKeys.UPDATE_JOURNAL_ARTICLE) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-journal-update-article";
    }
 else {
      titlePattern="activity-journal-update-article-in";
    }
  }
  String eventTitle=getValue(activity.getExtraData(),"title",article.getTitle());
  Object[] titleArguments=new Object[]{groupName,creatorUserName,wrapLink(link,eventTitle)};
  String title=themeDisplay.translate(titlePattern,titleArguments);
  return new SocialActivityFeedEntry(link,title,StringPool.BLANK);
}

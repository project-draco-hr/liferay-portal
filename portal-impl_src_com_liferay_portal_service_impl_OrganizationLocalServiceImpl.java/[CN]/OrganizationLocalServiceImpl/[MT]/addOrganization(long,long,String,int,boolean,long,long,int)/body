{
  User user=userPersistence.findByPrimaryKey(userId);
  parentOrganizationId=getParentOrganizationId(user.getCompanyId(),parentOrganizationId);
  validate(user.getCompanyId(),parentOrganizationId,name,type,countryId,statusId);
  long organizationId=counterLocalService.increment();
  Organization organization=organizationPersistence.create(organizationId);
  organization.setCompanyId(user.getCompanyId());
  organization.setParentOrganizationId(parentOrganizationId);
  organization.setName(name);
  if (type == OrganizationImpl.TYPE_LOCATION) {
    organization.setLocation(true);
  }
 else {
    organization.setLocation(false);
  }
  organization.setRecursable(recursable);
  organization.setRegionId(regionId);
  organization.setCountryId(countryId);
  organization.setStatusId(statusId);
  organizationPersistence.update(organization);
  groupLocalService.addGroup(userId,Organization.class.getName(),organization.getOrganizationId(),null,null,null,null,true);
  addOrganizationResources(userId,organization);
  return organization;
}

{
  parentOrganizationId=getParentOrganizationId(companyId,parentOrganizationId);
  validate(companyId,organizationId,parentOrganizationId,name,type,countryId,statusId);
  Organization organization=organizationPersistence.findByPrimaryKey(organizationId);
  long oldParentOrganizationId=organization.getParentOrganizationId();
  String oldName=organization.getName();
  organization.setModifiedDate(new Date());
  organization.setParentOrganizationId(parentOrganizationId);
  organization.setTreePath(organization.buildTreePath());
  organization.setName(name);
  organization.setType(type);
  organization.setRecursable(true);
  organization.setRegionId(regionId);
  organization.setCountryId(countryId);
  organization.setStatusId(statusId);
  organization.setComments(comments);
  PortalUtil.updateImageId(organization,logo,logoBytes,"logoId",PrefsPropsUtil.getLong(PropsKeys.USERS_IMAGE_MAX_SIZE),PropsValues.USERS_IMAGE_MAX_HEIGHT,PropsValues.USERS_IMAGE_MAX_WIDTH);
  organization.setExpandoBridgeAttributes(serviceContext);
  organizationPersistence.update(organization);
  Group group=organization.getGroup();
  long parentGroupId=group.getParentGroupId();
  boolean createSite=false;
  if (!group.isSite() && site) {
    createSite=true;
  }
  boolean organizationGroup=isOrganizationGroup(oldParentOrganizationId,group.getParentGroupId());
  if (createSite || organizationGroup) {
    if (parentOrganizationId != OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {
      Organization parentOrganization=organizationPersistence.fetchByPrimaryKey(parentOrganizationId);
      Group parentGroup=parentOrganization.getGroup();
      if (site && parentGroup.isSite()) {
        parentGroupId=parentOrganization.getGroupId();
      }
 else {
        parentGroupId=GroupConstants.DEFAULT_PARENT_GROUP_ID;
      }
    }
 else {
      parentGroupId=GroupConstants.DEFAULT_PARENT_GROUP_ID;
    }
  }
  if (createSite || !oldName.equals(name) || organizationGroup) {
    Map<Locale,String> nameMap=new HashMap<Locale,String>();
    nameMap.put(LocaleUtil.getDefault(),name);
    groupLocalService.updateGroup(group.getGroupId(),parentGroupId,nameMap,group.getDescriptionMap(),group.getType(),group.isManualMembership(),group.getMembershipRestriction(),group.getFriendlyURL(),group.isInheritContent(),group.isActive(),null);
  }
  if (group.isSite() != site) {
    groupLocalService.updateSite(group.getGroupId(),site);
  }
  if (createSite) {
    List<Organization> childOrganizations=organizationLocalService.getOrganizations(companyId,organizationId);
    for (    Organization childOrganization : childOrganizations) {
      Group childGroup=childOrganization.getGroup();
      if (childGroup.isSite() && (childGroup.getParentGroupId() == GroupConstants.DEFAULT_PARENT_GROUP_ID)) {
        childGroup.setParentGroupId(group.getGroupId());
        groupLocalService.updateGroup(childGroup);
      }
    }
  }
  if (serviceContext != null) {
    updateAsset(serviceContext.getUserId(),organization,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  }
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(Organization.class);
  if (oldParentOrganizationId != parentOrganizationId) {
    long[] organizationIds=getReindexOrganizationIds(organization);
    indexer.reindex(organizationIds);
  }
 else {
    indexer.reindex(organization);
  }
  return organization;
}

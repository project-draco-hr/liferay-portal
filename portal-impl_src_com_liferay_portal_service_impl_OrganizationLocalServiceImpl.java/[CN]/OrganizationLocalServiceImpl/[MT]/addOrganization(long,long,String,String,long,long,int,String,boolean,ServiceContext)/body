{
  User user=userPersistence.findByPrimaryKey(userId);
  parentOrganizationId=getParentOrganizationId(user.getCompanyId(),parentOrganizationId);
  validate(user.getCompanyId(),parentOrganizationId,name,type,countryId,statusId);
  long organizationId=counterLocalService.increment();
  Organization organization=organizationPersistence.create(organizationId);
  if (serviceContext != null) {
    organization.setUuid(serviceContext.getUuid());
  }
  organization.setCompanyId(user.getCompanyId());
  organization.setParentOrganizationId(parentOrganizationId);
  String treePath=organization.buildTreePath();
  organization.setTreePath(treePath);
  organization.setName(name);
  organization.setType(type);
  organization.setRecursable(true);
  organization.setRegionId(regionId);
  organization.setCountryId(countryId);
  organization.setStatusId(statusId);
  organization.setComments(comments);
  organization.setExpandoBridgeAttributes(serviceContext);
  organizationPersistence.update(organization);
  long parentGroupId=GroupConstants.DEFAULT_PARENT_GROUP_ID;
  if (parentOrganizationId != OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {
    Organization parentOrganization=organizationPersistence.fetchByPrimaryKey(parentOrganizationId);
    if (parentOrganization != null) {
      Group parentGroup=parentOrganization.getGroup();
      if (site && parentGroup.isSite()) {
        parentGroupId=parentOrganization.getGroupId();
      }
    }
  }
  Group group=groupLocalService.addGroup(userId,parentGroupId,Organization.class.getName(),organizationId,GroupConstants.DEFAULT_LIVE_GROUP_ID,name,null,GroupConstants.TYPE_SITE_PRIVATE,null,site,true,null);
  Role role=roleLocalService.getRole(organization.getCompanyId(),RoleConstants.ORGANIZATION_OWNER);
  userGroupRoleLocalService.addUserGroupRoles(userId,group.getGroupId(),new long[]{role.getRoleId()});
  addOrganizationResources(userId,organization);
  if (serviceContext != null) {
    updateAsset(userId,organization,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  }
  if ((serviceContext == null) || serviceContext.isIndexingEnabled()) {
    Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(Organization.class);
    indexer.reindex(organization);
  }
  return organization;
}

{
  NumericUnaryEpressionContext _localctx=new NumericUnaryEpressionContext(_ctx,getState());
  enterRule(_localctx,20,RULE_numericUnaryEpression);
  try {
    setState(139);
switch (_input.LA(1)) {
case MINUS:
      _localctx=new MinusExpressionContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(136);
    match(MINUS);
    setState(137);
    numericUnaryEpression();
  }
break;
case IntegerLiteral:
case FloatingPointLiteral:
case LPAREN:
case STRING:
case IDENTIFIER:
_localctx=new PrimaryContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(138);
numericOperandExpression();
}
break;
default :
throw new NoViableAltException(this);
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}

{
  BooleanUnaryExpressionContext _localctx=new BooleanUnaryExpressionContext(_ctx,getState());
  enterRule(_localctx,10,RULE_booleanUnaryExpression);
  try {
    setState(94);
switch (_input.LA(1)) {
case NOT:
      _localctx=new NotExpressionContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(91);
    match(NOT);
    setState(92);
    booleanUnaryExpression();
  }
break;
case IntegerLiteral:
case FloatingPointLiteral:
case FALSE:
case LPAREN:
case MINUS:
case STRING:
case TRUE:
case IDENTIFIER:
_localctx=new ToBooleanOperandExpressionContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(93);
booleanOperandExpression();
}
break;
default :
throw new NoViableAltException(this);
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}

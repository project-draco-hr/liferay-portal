{
  long pk=RandomTestUtil.nextLong();
  BlogsEntry newBlogsEntry=_persistence.create(pk);
  newBlogsEntry.setUuid(RandomTestUtil.randomString());
  newBlogsEntry.setGroupId(RandomTestUtil.nextLong());
  newBlogsEntry.setCompanyId(RandomTestUtil.nextLong());
  newBlogsEntry.setUserId(RandomTestUtil.nextLong());
  newBlogsEntry.setUserName(RandomTestUtil.randomString());
  newBlogsEntry.setCreateDate(RandomTestUtil.nextDate());
  newBlogsEntry.setModifiedDate(RandomTestUtil.nextDate());
  newBlogsEntry.setTitle(RandomTestUtil.randomString());
  newBlogsEntry.setSubtitle(RandomTestUtil.randomString());
  newBlogsEntry.setUrlTitle(RandomTestUtil.randomString());
  newBlogsEntry.setDescription(RandomTestUtil.randomString());
  newBlogsEntry.setContent(RandomTestUtil.randomString());
  newBlogsEntry.setDisplayDate(RandomTestUtil.nextDate());
  newBlogsEntry.setAllowPingbacks(RandomTestUtil.randomBoolean());
  newBlogsEntry.setAllowTrackbacks(RandomTestUtil.randomBoolean());
  newBlogsEntry.setTrackbacks(RandomTestUtil.randomString());
  newBlogsEntry.setCoverImageFileEntryId(RandomTestUtil.nextLong());
  newBlogsEntry.setCoverImageURL(RandomTestUtil.randomString());
  newBlogsEntry.setSmallImage(RandomTestUtil.randomBoolean());
  newBlogsEntry.setSmallImageFileEntryId(RandomTestUtil.nextLong());
  newBlogsEntry.setSmallImageId(RandomTestUtil.nextLong());
  newBlogsEntry.setSmallImageURL(RandomTestUtil.randomString());
  newBlogsEntry.setStatus(RandomTestUtil.nextInt());
  newBlogsEntry.setStatusByUserId(RandomTestUtil.nextLong());
  newBlogsEntry.setStatusByUserName(RandomTestUtil.randomString());
  newBlogsEntry.setStatusDate(RandomTestUtil.nextDate());
  _blogsEntries.add(_persistence.update(newBlogsEntry));
  BlogsEntry existingBlogsEntry=_persistence.findByPrimaryKey(newBlogsEntry.getPrimaryKey());
  Assert.assertEquals(existingBlogsEntry.getUuid(),newBlogsEntry.getUuid());
  Assert.assertEquals(existingBlogsEntry.getEntryId(),newBlogsEntry.getEntryId());
  Assert.assertEquals(existingBlogsEntry.getGroupId(),newBlogsEntry.getGroupId());
  Assert.assertEquals(existingBlogsEntry.getCompanyId(),newBlogsEntry.getCompanyId());
  Assert.assertEquals(existingBlogsEntry.getUserId(),newBlogsEntry.getUserId());
  Assert.assertEquals(existingBlogsEntry.getUserName(),newBlogsEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingBlogsEntry.getCreateDate()),Time.getShortTimestamp(newBlogsEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingBlogsEntry.getModifiedDate()),Time.getShortTimestamp(newBlogsEntry.getModifiedDate()));
  Assert.assertEquals(existingBlogsEntry.getTitle(),newBlogsEntry.getTitle());
  Assert.assertEquals(existingBlogsEntry.getSubtitle(),newBlogsEntry.getSubtitle());
  Assert.assertEquals(existingBlogsEntry.getUrlTitle(),newBlogsEntry.getUrlTitle());
  Assert.assertEquals(existingBlogsEntry.getDescription(),newBlogsEntry.getDescription());
  Assert.assertEquals(existingBlogsEntry.getContent(),newBlogsEntry.getContent());
  Assert.assertEquals(Time.getShortTimestamp(existingBlogsEntry.getDisplayDate()),Time.getShortTimestamp(newBlogsEntry.getDisplayDate()));
  Assert.assertEquals(existingBlogsEntry.getAllowPingbacks(),newBlogsEntry.getAllowPingbacks());
  Assert.assertEquals(existingBlogsEntry.getAllowTrackbacks(),newBlogsEntry.getAllowTrackbacks());
  Assert.assertEquals(existingBlogsEntry.getTrackbacks(),newBlogsEntry.getTrackbacks());
  Assert.assertEquals(existingBlogsEntry.getCoverImageFileEntryId(),newBlogsEntry.getCoverImageFileEntryId());
  Assert.assertEquals(existingBlogsEntry.getCoverImageURL(),newBlogsEntry.getCoverImageURL());
  Assert.assertEquals(existingBlogsEntry.getSmallImage(),newBlogsEntry.getSmallImage());
  Assert.assertEquals(existingBlogsEntry.getSmallImageFileEntryId(),newBlogsEntry.getSmallImageFileEntryId());
  Assert.assertEquals(existingBlogsEntry.getSmallImageId(),newBlogsEntry.getSmallImageId());
  Assert.assertEquals(existingBlogsEntry.getSmallImageURL(),newBlogsEntry.getSmallImageURL());
  Assert.assertEquals(existingBlogsEntry.getStatus(),newBlogsEntry.getStatus());
  Assert.assertEquals(existingBlogsEntry.getStatusByUserId(),newBlogsEntry.getStatusByUserId());
  Assert.assertEquals(existingBlogsEntry.getStatusByUserName(),newBlogsEntry.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingBlogsEntry.getStatusDate()),Time.getShortTimestamp(newBlogsEntry.getStatusDate()));
}

{
  String[] credentials=null;
  try {
    Company company=PortalUtil.getCompany(request);
    long companyId=company.getCompanyId();
    if (!AuthSettingsUtil.isSiteMinderEnabled(companyId)) {
      return credentials;
    }
    String siteMinderUserHeader=request.getHeader(PrefsPropsUtil.getString(companyId,PropsKeys.SITEMINDER_USER_HEADER,PropsValues.SITEMINDER_USER_HEADER));
    if (Validator.isNull(siteMinderUserHeader)) {
      return credentials;
    }
    String authType=company.getAuthType();
    User user=null;
    if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.SITEMINDER_IMPORT_FROM_LDAP,PropsValues.SITEMINDER_IMPORT_FROM_LDAP)) {
      try {
        if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
          user=importLDAPUser(companyId,siteMinderUserHeader,StringPool.BLANK);
        }
 else {
          user=importLDAPUser(companyId,StringPool.BLANK,siteMinderUserHeader);
        }
      }
 catch (      SystemException se) {
      }
    }
    if (user == null) {
      if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
        user=UserLocalServiceUtil.getUserByEmailAddress(companyId,siteMinderUserHeader);
      }
 else {
        user=UserLocalServiceUtil.getUserByScreenName(companyId,siteMinderUserHeader);
      }
    }
    credentials=new String[3];
    credentials[0]=String.valueOf(user.getUserId());
    credentials[1]=user.getPassword();
    credentials[2]=Boolean.TRUE.toString();
    return credentials;
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  return credentials;
}

{
  try {
    Object paramObj0=folderId;
    if (folderId == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=name;
    if (name == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=title;
    if (title == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=description;
    if (description == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=tagsEntries;
    if (tagsEntries == null) {
      paramObj4=new NullWrapper("[Ljava.lang.String;");
    }
    Object paramObj5=extraSettings;
    if (extraSettings == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=byteArray;
    if (byteArray == null) {
      paramObj6=new NullWrapper("[B");
    }
    Object paramObj7=new BooleanWrapper(addCommunityPermissions);
    Object paramObj8=new BooleanWrapper(addGuestPermissions);
    MethodWrapper methodWrapper=new MethodWrapper(DLFileEntryServiceUtil.class.getName(),"addFileEntry",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      throw new com.liferay.portal.SystemException(e);
    }
    return (com.liferay.portlet.documentlibrary.model.DLFileEntry)returnObj;
  }
 catch (  com.liferay.portal.SystemException se) {
    _log.error(se,se);
    throw se;
  }
}

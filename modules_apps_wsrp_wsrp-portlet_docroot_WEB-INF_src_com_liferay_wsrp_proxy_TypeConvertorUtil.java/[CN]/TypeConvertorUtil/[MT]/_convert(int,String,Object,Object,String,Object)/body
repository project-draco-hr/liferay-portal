{
  Class<?> sourceChildClass=sourceChild.getClass();
  if (sourceChildClass == NavigationalContext.class) {
    sourceChildName="navigationalState";
    NavigationalContext navigationalContext=(NavigationalContext)sourceChild;
    sourceChild=navigationalContext.getOpaqueValue();
  }
 else   if (sourceChildClass == SessionParams.class) {
    sourceChildName="sessionID";
    SessionParams sessionParams=(SessionParams)sourceChild;
    sourceChild=sessionParams.getSessionID();
  }
  if (sourceChild == null) {
    return;
  }
  sourceChildClass=sourceChild.getClass();
  Object destinationChild=null;
  if (sourceChildClass.isArray()) {
    destinationChild=convert(sourceChild,sourceVersion);
  }
 else {
    destinationChild=sourceChild;
    sourceChildClass=sourceChild.getClass();
    if (sourceChildClass.getName().contains(sourcePackage)) {
      destinationChild=convert(sourceChild,sourceVersion);
    }
  }
  String destinationChildName=sourceChildName;
  if (sourceChildName.equals("itemBinary")) {
    destinationChildName="markupBinary";
  }
 else   if (sourceChildName.equals("itemString")) {
    destinationChildName="markupString";
  }
 else   if (sourceChildName.equals("markupBinary")) {
    destinationChildName="itemBinary";
  }
 else   if (sourceChildName.equals("markupString")) {
    destinationChildName="itemString";
  }
 else   if (sourceChildName.equals("name") && (sourceClass == Property.class)) {
    QName qName=(QName)destinationChild;
    destinationChild=qName.getLocalPart();
  }
 else   if (sourceChildName.equals("name") && (sourceClass == PropertyDescription.class)) {
    String name=(String)destinationChild;
    destinationChild=new QName("namespace",name,"prefix");
  }
 else   if (sourceChildName.equals("navigationalState") && (sourceClass == MarkupParams.class)) {
    String navigationalState=(String)sourceChild;
    NavigationalContext navigationalContext=new NavigationalContext();
    navigationalContext.setOpaqueValue(navigationalState);
    destinationChild=navigationalContext;
    destinationChildName="navigationalContext";
  }
 else   if (sourceChildName.equals("requiresRewriting")) {
    destinationChildName="requiresUrlRewriting";
  }
 else   if (sourceChildName.equals("requiresUrlRewriting")) {
    destinationChildName="requiresRewriting";
  }
 else   if (sourceChildName.equals("sessionID") && (sourceClass == RuntimeContext.class)) {
    String sessionID=(String)sourceChild;
    SessionParams sessionParams=new SessionParams();
    sessionParams.setSessionID(sessionID);
    destinationChild=sessionParams;
    destinationChildName="sessionParams";
  }
  try {
    PropertyUtils.setProperty(destination,destinationChildName,destinationChild);
  }
 catch (  NoSuchMethodException nsme) {
    if (_log.isWarnEnabled()) {
      _log.warn(nsme,nsme);
    }
  }
}

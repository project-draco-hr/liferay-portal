{
  Set<Long> remoteSyncSiteIds=new HashSet<Long>();
  ObjectMapper objectMapper=new ObjectMapper();
  List<SyncSite> remoteSyncSites=objectMapper.readValue(response,new TypeReference<List<SyncSite>>(){
  }
);
  for (  SyncSite remoteSyncSite : remoteSyncSites) {
    SyncSite localSyncSite=SyncSiteService.fetchSyncSite(remoteSyncSite.getGroupId(),getSyncAccountId());
    if (localSyncSite == null) {
      SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
      String name=remoteSyncSite.getName();
      if (!FileUtil.isValidFileName(name)) {
        name=String.valueOf(remoteSyncSite.getGroupId());
      }
      remoteSyncSite.setFilePathName(FileUtil.getFilePathName(syncAccount.getFilePathName(),name));
      remoteSyncSite.setSyncAccountId(getSyncAccountId());
      SyncSiteService.update(remoteSyncSite);
      remoteSyncSiteIds.add(remoteSyncSite.getSyncSiteId());
    }
 else {
      localSyncSite.setDescription(remoteSyncSite.getDescription());
      localSyncSite.setFriendlyURL(remoteSyncSite.getFriendlyURL());
      localSyncSite.setName(remoteSyncSite.getName());
      localSyncSite.setType(remoteSyncSite.getType());
      localSyncSite.setTypeSettings(remoteSyncSite.getTypeSettings());
      localSyncSite.setSite(remoteSyncSite.getSite());
      SyncSiteService.update(localSyncSite);
      remoteSyncSiteIds.add(localSyncSite.getSyncSiteId());
    }
  }
  List<SyncSite> localSyncSites=SyncSiteService.findSyncSites(getSyncAccountId());
  for (  SyncSite localSyncSite : localSyncSites) {
    if (remoteSyncSiteIds.contains(localSyncSite.getSyncSiteId())) {
      continue;
    }
    SyncSiteService.deleteSyncSite(localSyncSite.getSyncSiteId());
  }
}

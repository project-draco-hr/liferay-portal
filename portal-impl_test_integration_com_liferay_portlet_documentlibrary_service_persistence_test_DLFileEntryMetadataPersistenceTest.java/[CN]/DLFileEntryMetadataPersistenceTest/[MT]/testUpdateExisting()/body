{
  long pk=RandomTestUtil.nextLong();
  DLFileEntryMetadata newDLFileEntryMetadata=_persistence.create(pk);
  newDLFileEntryMetadata.setUuid(RandomTestUtil.randomString());
  newDLFileEntryMetadata.setCompanyId(RandomTestUtil.nextLong());
  newDLFileEntryMetadata.setDDMStorageId(RandomTestUtil.nextLong());
  newDLFileEntryMetadata.setDDMStructureId(RandomTestUtil.nextLong());
  newDLFileEntryMetadata.setFileEntryId(RandomTestUtil.nextLong());
  newDLFileEntryMetadata.setFileVersionId(RandomTestUtil.nextLong());
  _dlFileEntryMetadatas.add(_persistence.update(newDLFileEntryMetadata));
  DLFileEntryMetadata existingDLFileEntryMetadata=_persistence.findByPrimaryKey(newDLFileEntryMetadata.getPrimaryKey());
  Assert.assertEquals(existingDLFileEntryMetadata.getUuid(),newDLFileEntryMetadata.getUuid());
  Assert.assertEquals(existingDLFileEntryMetadata.getFileEntryMetadataId(),newDLFileEntryMetadata.getFileEntryMetadataId());
  Assert.assertEquals(existingDLFileEntryMetadata.getCompanyId(),newDLFileEntryMetadata.getCompanyId());
  Assert.assertEquals(existingDLFileEntryMetadata.getDDMStorageId(),newDLFileEntryMetadata.getDDMStorageId());
  Assert.assertEquals(existingDLFileEntryMetadata.getDDMStructureId(),newDLFileEntryMetadata.getDDMStructureId());
  Assert.assertEquals(existingDLFileEntryMetadata.getFileEntryId(),newDLFileEntryMetadata.getFileEntryId());
  Assert.assertEquals(existingDLFileEntryMetadata.getFileVersionId(),newDLFileEntryMetadata.getFileVersionId());
}

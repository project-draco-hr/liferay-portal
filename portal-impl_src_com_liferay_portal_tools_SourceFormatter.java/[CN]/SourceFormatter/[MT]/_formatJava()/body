{
  String basedir="../";
  List list=new ArrayList();
  DirectoryScanner ds=new DirectoryScanner();
  ds.setBasedir(basedir);
  ds.setExcludes(new String[]{"**\\classes\\*","**\\jsp\\*","**\\tmp\\**","**\\EARXMLBuilder.java","**\\EJBXMLBuilder.java","**\\JSMin.java","**\\PropsUtil.java","**\\InstanceWrapperBuilder.java","**\\ServiceBuilder.java","**\\SourceFormatter.java","**\\UserAttributes.java","**\\WebKeys.java","**\\*_IW.java","**\\XHTMLComplianceFormatter.java","**\\portal-service\\**\\model\\*Model.java","**\\portal-service\\**\\model\\*Soap.java","**\\model\\impl\\*ModelImpl.java","**\\portal\\service\\**","**\\portal-client\\**","**\\portlet\\**\\service\\**","**\\tools\\ext_tmpl\\**","**\\util-wsrp\\**"});
  ds.setIncludes(new String[]{"**\\*.java"});
  ds.scan();
  list.addAll(ListUtil.fromArray(ds.getIncludedFiles()));
  ds=new DirectoryScanner();
  ds.setBasedir(basedir);
  ds.setExcludes(new String[]{"**\\tools\\ext_tmpl\\**","**\\*_IW.java"});
  ds.setIncludes(new String[]{"**\\service\\http\\*HttpTest.java","**\\service\\http\\*SoapTest.java","**\\service\\impl\\*.java","**\\service\\jms\\*.java","**\\service\\permission\\*.java","**\\service\\persistence\\BasePersistence.java","**\\service\\persistence\\*FinderImpl.java","**\\portal-service\\**\\liferay\\counter\\**.java","**\\portal-service\\**\\liferay\\documentlibrary\\**.java","**\\portal-service\\**\\liferay\\lock\\**.java","**\\portal-service\\**\\liferay\\mail\\**.java","**\\util-bridges\\**\\*.java"});
  ds.scan();
  list.addAll(ListUtil.fromArray(ds.getIncludedFiles()));
  ds=new DirectoryScanner();
  ds.setBasedir(basedir);
  ds.setIncludes(new String[]{"**\\test\\src\\**\\*.java"});
  ds.scan();
  list.addAll(ListUtil.fromArray(ds.getIncludedFiles()));
  String copyright=FileUtil.read("../copyright.txt");
  String[] files=(String[])list.toArray(new String[list.size()]);
  for (int i=0; i < files.length; i++) {
    File file=new File(basedir + files[i]);
    String content=FileUtil.read(file);
    String className=file.getName();
    className=className.substring(0,className.length() - 5);
    String packagePath=files[i];
    int packagePathX=packagePath.indexOf(File.separator + "src" + File.separator);
    int packagePathY=packagePath.lastIndexOf(File.separator);
    packagePath=packagePath.substring(packagePathX + 5,packagePathY);
    packagePath=StringUtil.replace(packagePath,File.separator,StringPool.PERIOD);
    if (packagePath.endsWith(".model")) {
      if (content.indexOf("extends " + className + "Model {") != -1) {
        continue;
      }
    }
    String newContent=_formatJavaContent(files[i],content);
    if (newContent.indexOf("$\n */") != -1) {
      System.out.println("*: " + files[i]);
      newContent=StringUtil.replace(newContent,"$\n */","$\n *\n */");
    }
    if (newContent.indexOf(copyright) == -1) {
      System.out.println("(c): " + files[i]);
    }
    if (newContent.indexOf(className + ".java.html") == -1) {
      System.out.println("Java2HTML: " + files[i]);
    }
    newContent=stripImports(newContent,packagePath,className);
    if (newContent.indexOf(";\n/**") != -1) {
      newContent=StringUtil.replace(newContent,";\n/**",";\n\n/**");
    }
    if (newContent.indexOf("\t/*\n\t *") != -1) {
      newContent=StringUtil.replace(newContent,"\t/*\n\t *","\t/**\n\t *");
    }
    if (newContent.indexOf("if(") != -1) {
      newContent=StringUtil.replace(newContent,"if(","if (");
    }
    if (newContent.indexOf("while(") != -1) {
      newContent=StringUtil.replace(newContent,"while(","while (");
    }
    if (newContent.indexOf("\n\n\n") != -1) {
      newContent=StringUtil.replace(newContent,"\n\n\n","\n\n");
    }
    if (newContent.indexOf("*/\npackage ") != -1) {
      System.out.println("package: " + files[i]);
    }
    if (!newContent.endsWith("\n\n}") && !newContent.endsWith("{\n}")) {
      System.out.println("}: " + files[i]);
    }
    if ((newContent != null) && !content.equals(newContent)) {
      FileUtil.write(file,newContent);
      System.out.println(file.toString());
    }
  }
}

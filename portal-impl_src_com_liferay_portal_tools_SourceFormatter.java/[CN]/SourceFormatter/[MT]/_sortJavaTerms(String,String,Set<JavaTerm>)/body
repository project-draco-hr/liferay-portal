{
  String previousJavaTermContent=StringPool.BLANK;
  int previousJavaTermLineCount=-1;
  String previousJavaTermName=StringPool.BLANK;
  String fileNameWithForwardSlashes=StringUtil.replace(fileName,"\\","/");
  Iterator<JavaTerm> itr=javaTerms.iterator();
  while (itr.hasNext()) {
    JavaTerm javaTerm=itr.next();
    String javaTermContent=javaTerm.getContent();
    javaTermContent=javaTermContent.trim();
    int javaTermLineCount=javaTerm.getLineCount();
    String javaTermName=javaTerm.getName();
    String excluded=null;
    if (_javaTermSortExclusions != null) {
      excluded=_javaTermSortExclusions.getProperty(fileNameWithForwardSlashes + StringPool.AT + javaTermLineCount);
      if (excluded == null) {
        excluded=_javaTermSortExclusions.getProperty(fileNameWithForwardSlashes + StringPool.AT + javaTermName);
      }
      if (excluded == null) {
        excluded=_javaTermSortExclusions.getProperty(fileNameWithForwardSlashes);
      }
    }
    if ((excluded == null) && (previousJavaTermLineCount > javaTermLineCount)) {
      String javaTermNameLowerCase=javaTermName.toLowerCase();
      String previousJavaTermNameLowerCase=previousJavaTermName.toLowerCase();
      if (fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count"))|| (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter"))|| (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find"))|| (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) {
      }
 else {
        content=StringUtil.replaceFirst(content,javaTermContent,previousJavaTermContent);
        content=StringUtil.replaceLast(content,previousJavaTermContent,javaTermContent);
        return content;
      }
    }
    previousJavaTermContent=javaTermContent;
    previousJavaTermLineCount=javaTermLineCount;
    previousJavaTermName=javaTermName;
  }
  return content;
}

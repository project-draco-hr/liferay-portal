{
  Matcher matcher=_xssPattern.matcher(jspContent);
  while (matcher.find()) {
    boolean xssVulnerable=false;
    String jspVariable=matcher.group(1);
    String inputVulnerability=" value=\"<%= " + jspVariable + " %>";
    if (_checkHtmlTagVulnerability(jspContent,inputVulnerability)) {
      xssVulnerable=true;
    }
    String anchorVulnerability=" href=\"<%= " + jspVariable + " %>";
    if (_checkHtmlTagVulnerability(jspContent,anchorVulnerability)) {
      xssVulnerable=true;
    }
    String inlineStringVulnerability1="'<%= " + jspVariable + " %>";
    if (jspContent.indexOf(inlineStringVulnerability1) != -1) {
      xssVulnerable=true;
    }
    String inlineStringVulnerability2="(\"<%= " + jspVariable + " %>";
    if (jspContent.indexOf(inlineStringVulnerability2) != -1) {
      xssVulnerable=true;
    }
    String inlineStringVulnerability3=" \"<%= " + jspVariable + " %>";
    if (jspContent.indexOf(inlineStringVulnerability3) != -1) {
      xssVulnerable=true;
    }
    String documentIdVulnerability=".<%= " + jspVariable + " %>";
    if (jspContent.indexOf(documentIdVulnerability) != -1) {
      xssVulnerable=true;
    }
    if (xssVulnerable) {
      _sourceFormatterHelper.printError(fileName,"(xss): " + fileName + " ("+ jspVariable+ ")");
    }
  }
}

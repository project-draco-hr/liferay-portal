{
  int x=line.indexOf(StringPool.OPEN_PARENTHESIS);
  if (x != -1) {
    line=line.substring(x + 1);
    if (Validator.isNull(line) || line.startsWith(StringPool.CLOSE_PARENTHESIS)) {
      return methodParameterTypes;
    }
  }
  for (x=0; ; ) {
    x=line.indexOf(StringPool.SPACE);
    if (x == -1) {
      return methodParameterTypes;
    }
    String parameterType=line.substring(0,x);
    if (parameterType.equals("throws")) {
      return methodParameterTypes;
    }
    if (parameterType.endsWith("...")) {
      parameterType=StringUtil.replaceLast(parameterType,"...",StringPool.BLANK);
    }
    int pos=parameterType.lastIndexOf(StringPool.PERIOD);
    if (pos != -1) {
      parameterType=parameterType.substring(pos + 1);
    }
    methodParameterTypes.add(parameterType);
    int y=line.indexOf(StringPool.COMMA);
    int z=line.indexOf(StringPool.CLOSE_PARENTHESIS);
    if ((y == -1) || ((z != -1) && (z < y))) {
      return methodParameterTypes;
    }
    line=line.substring(y + 1);
    line=line.trim();
  }
}

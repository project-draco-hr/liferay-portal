{
  int quoteCount=StringUtil.count(javaParameter,StringPool.QUOTE);
  if ((quoteCount % 2) == 1) {
    return false;
  }
  String[] parts=StringUtil.split(javaParameter,CharPool.QUOTE);
  int i=1;
  while (i < parts.length) {
    javaParameter=StringUtil.replaceFirst(javaParameter,StringPool.QUOTE + parts[i] + StringPool.QUOTE,StringPool.BLANK);
    i=i + 2;
  }
  int openParenthesisCount=StringUtil.count(javaParameter,StringPool.OPEN_PARENTHESIS);
  int closeParenthesisCount=StringUtil.count(javaParameter,StringPool.CLOSE_PARENTHESIS);
  int lessThanCount=StringUtil.count(javaParameter,StringPool.LESS_THAN);
  int greaterThanCount=StringUtil.count(javaParameter,StringPool.GREATER_THAN);
  int openCurlyBraceCount=StringUtil.count(javaParameter,StringPool.OPEN_CURLY_BRACE);
  int closeCurlyBraceCount=StringUtil.count(javaParameter,StringPool.CLOSE_CURLY_BRACE);
  if ((openParenthesisCount == closeParenthesisCount) && (lessThanCount == greaterThanCount) && (openCurlyBraceCount == closeCurlyBraceCount)) {
    return true;
  }
  return false;
}

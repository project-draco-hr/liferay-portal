{
  StringBuilder regexpSB=new StringBuilder();
  String quoteFix=StringPool.APOSTROPHE;
  if (quoteFix == quoteType) {
    quoteFix=StringPool.QUOTE;
  }
  regexpSB.append("<(");
  for (int i=0; i < _TAG_LIBRARIES.length; i++) {
    regexpSB.append(_TAG_LIBRARIES[i]);
    regexpSB.append(StringPool.PIPE);
  }
  regexpSB.deleteCharAt(regexpSB.length() - 1);
  regexpSB.append("):([^>]|%>)*");
  regexpSB.append(quoteType);
  regexpSB.append("<%=[^>]*");
  regexpSB.append(quoteType);
  regexpSB.append("[^>]*");
  regexpSB.append(quoteType);
  regexpSB.append("[^>]*%>");
  regexpSB.append(quoteType);
  regexpSB.append("([^>]|%>)*>");
  Pattern pattern=Pattern.compile(regexpSB.toString());
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    int x=content.indexOf(quoteType + "<%=",matcher.start());
    int y=content.indexOf("%>" + quoteType,x);
    while (x != -1 && y != -1) {
      String regexpResult=content.substring(x + 1,y + 2);
      if (regexpResult.indexOf(quoteType) != -1) {
        int line=1;
        char charContent[]=content.toCharArray();
        for (int i=0; i < x; i++) {
          if (charContent[i] == CharPool.NEW_LINE) {
            line++;
          }
        }
        if (regexpResult.indexOf(quoteFix) == -1) {
          StringBuilder contentSB=new StringBuilder();
          contentSB.append(content.substring(0,x));
          contentSB.append(quoteFix);
          contentSB.append(regexpResult);
          contentSB.append(quoteFix);
          contentSB.append(content.substring(y + 3,content.length()));
          content=contentSB.toString();
        }
 else {
          StringBuilder warningSB=new StringBuilder();
          warningSB.append("(taglibQuotes): ");
          warningSB.append(fileName);
          warningSB.append(": Line ");
          warningSB.append(line);
          System.out.println(warningSB.toString());
        }
      }
      x=content.indexOf(quoteType + "<%=",y);
      if (x > matcher.end()) {
        break;
      }
      y=content.indexOf("%>" + quoteType,x);
    }
  }
  return content;
}

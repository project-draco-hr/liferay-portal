{
  String basedir="./";
  String copyright=_getCopyright();
  String oldCopyright=_getOldCopyright();
  List<String> list=new ArrayList<String>();
  DirectoryScanner directoryScanner=new DirectoryScanner();
  directoryScanner.setBasedir(basedir);
  String[] excludes={"**\\portal\\aui\\**","**\\bin\\**","**\\null.jsp","**\\tmp\\**","**\\tools\\**"};
  excludes=ArrayUtil.append(excludes,_excludes);
  directoryScanner.setExcludes(excludes);
  directoryScanner.setIncludes(new String[]{"**\\*.jsp","**\\*.jspf","**\\*.vm"});
  list.addAll(_sourceFormatterHelper.scanForFiles(directoryScanner));
  String[] fileNames=list.toArray(new String[list.size()]);
  for (  String fileName : fileNames) {
    File file=new File(basedir + fileName);
    String content=_fileUtil.read(file);
    fileName=fileName.replace(CharPool.BACK_SLASH,CharPool.FORWARD_SLASH);
    _jspContents.put(fileName,content);
  }
  boolean stripJSPImports=true;
  for (  String fileName : fileNames) {
    File file=new File(basedir + fileName);
    String content=_fileUtil.read(file);
    String newContent=_formatJSPContent(fileName,content);
    newContent=StringUtil.replace(newContent,new String[]{"<br/>","\"/>","\" >","@page import","\"%>",")%>","javascript: "},new String[]{"<br />","\" />","\">","@ page import","\" %>",") %>","javascript:"});
    if (stripJSPImports) {
      try {
        newContent=_stripJSPImports(fileName,newContent);
      }
 catch (      RuntimeException re) {
        stripJSPImports=false;
      }
    }
    newContent=StringUtil.replace(newContent,new String[]{"* Copyright (c) 2000-2010 Liferay, Inc."},new String[]{"* Copyright (c) 2000-2011 Liferay, Inc."});
    if (fileName.endsWith(".jsp") || fileName.endsWith(".jspf")) {
      if ((oldCopyright != null) && newContent.contains(oldCopyright)) {
        newContent=StringUtil.replace(newContent,oldCopyright,copyright);
        _sourceFormatterHelper.printError(fileName,"old (c): " + fileName);
      }
      if (!newContent.contains(copyright)) {
        String customCopyright=_getCustomCopyright(file);
        if (Validator.isNull(customCopyright) || !newContent.contains(customCopyright)) {
          _sourceFormatterHelper.printError(fileName,"(c): " + fileName);
        }
 else {
          newContent=StringUtil.replace(newContent,"<%\n" + customCopyright + "\n%>","<%--\n" + customCopyright + "\n--%>");
        }
      }
 else {
        newContent=StringUtil.replace(newContent,"<%\n" + copyright + "\n%>","<%--\n" + copyright + "\n--%>");
      }
    }
    newContent=StringUtil.replace(newContent,new String[]{"alert('<%= LanguageUtil.","alert(\"<%= LanguageUtil.","confirm('<%= LanguageUtil.","confirm(\"<%= LanguageUtil."},new String[]{"alert('<%= UnicodeLanguageUtil.","alert(\"<%= UnicodeLanguageUtil.","confirm('<%= UnicodeLanguageUtil.","confirm(\"<%= UnicodeLanguageUtil."});
    if (newContent.contains("    ")) {
      if (!fileName.endsWith("template.vm")) {
        _sourceFormatterHelper.printError(fileName,"tab: " + fileName);
      }
    }
    if (fileName.endsWith("init.jsp")) {
      newContent=StringUtil.replace(newContent,">\r\n<%@","><%@");
      newContent=StringUtil.replace(newContent,">\n<%@","><%@");
    }
    _checkXSS(fileName,newContent);
    if ((newContent != null) && !content.equals(newContent)) {
      _fileUtil.write(file,newContent);
      _sourceFormatterHelper.printError(fileName,file);
    }
  }
}

{
  String fileExtension=_fileUtil.getExtension(fileName);
  if (!_portalSource || fileExtension.equals("vm")) {
    return;
  }
  if (_portalLanguageKeysProperties == null) {
    _portalLanguageKeysProperties=new Properties();
    ClassLoader classLoader=SourceFormatter.class.getClassLoader();
    InputStream inputStream=classLoader.getResourceAsStream("content/Language.properties");
    _portalLanguageKeysProperties.load(inputStream);
  }
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    String match=matcher.group();
    String languageKey=_getLanguageKey(match);
    if (Validator.isNull(languageKey)) {
      return;
    }
    String[] languageKeys=new String[]{languageKey};
    if (match.startsWith("names")) {
      languageKeys=StringUtil.split(languageKey);
    }
    for (    String key : languageKeys) {
      if (Validator.isNumber(key) || key.endsWith(StringPool.DASH) || key.endsWith(StringPool.PERIOD)|| key.endsWith(StringPool.UNDERLINE)|| key.startsWith(StringPool.DASH)|| key.startsWith(StringPool.PERIOD)|| key.startsWith(StringPool.UNDERLINE)) {
        continue;
      }
      if (!_portalLanguageKeysProperties.containsKey(key)) {
        _sourceFormatterHelper.printError(fileName,"missing language key: " + key + StringPool.SPACE+ fileName);
      }
    }
  }
}

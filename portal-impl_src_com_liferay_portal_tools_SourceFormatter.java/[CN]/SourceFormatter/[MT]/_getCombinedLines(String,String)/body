{
  if (Validator.isNull(previousLine)) {
    return null;
  }
  int previousLineLength=_getLineLength(previousLine);
  String trimmedPreviousLine=StringUtil.trimLeading(previousLine);
  if ((line.length() + previousLineLength) < 80) {
    if (trimmedPreviousLine.startsWith("for ") && previousLine.endsWith(StringPool.COLON) && line.endsWith(StringPool.OPEN_CURLY_BRACE)) {
      return new String[]{previousLine + StringPool.SPACE + line};
    }
    if (previousLine.endsWith(StringPool.EQUAL) && line.endsWith(StringPool.SEMICOLON)) {
      return new String[]{previousLine + StringPool.SPACE + line};
    }
    if ((trimmedPreviousLine.startsWith("if ") || trimmedPreviousLine.startsWith("else ")) && (previousLine.endsWith("||") || previousLine.endsWith("&&")) && line.endsWith(StringPool.OPEN_CURLY_BRACE)) {
      return new String[]{previousLine + StringPool.SPACE + line};
    }
  }
  if (previousLine.endsWith(StringPool.EQUAL) && line.endsWith(StringPool.SEMICOLON)) {
    int pos=line.indexOf(StringPool.DASH);
    if (pos == -1) {
      pos=line.indexOf(StringPool.PLUS);
    }
    if (pos == -1) {
      pos=line.indexOf(StringPool.STAR);
    }
    if (pos != -1) {
      String linePart=line.substring(0,pos);
      int openParenthesisCount=StringUtil.count(linePart,StringPool.OPEN_PARENTHESIS);
      int closeParenthesisCount=StringUtil.count(linePart,StringPool.CLOSE_PARENTHESIS);
      if (openParenthesisCount == closeParenthesisCount) {
        return null;
      }
    }
    int x=line.indexOf(StringPool.OPEN_PARENTHESIS);
    int y=line.indexOf(StringPool.CLOSE_PARENTHESIS);
    int z=line.indexOf(StringPool.QUOTE);
    if ((x > 0) && ((x + 1) != y) && ((z == -1) || (z > x))) {
      if ((line.charAt(x - 1) != CharPool.SPACE) && (previousLineLength + 1 + x) < 80) {
        String addToPreviousLine=line.substring(0,x + 1);
        if (addToPreviousLine.contains(StringPool.SPACE)) {
          return null;
        }
        return new String[]{previousLine + StringPool.SPACE + addToPreviousLine,addToPreviousLine};
      }
    }
  }
  if (!previousLine.endsWith(StringPool.OPEN_PARENTHESIS)) {
    return null;
  }
  if ((line.length() + previousLineLength) > 80) {
    return null;
  }
  if (line.endsWith(StringPool.SEMICOLON)) {
    return new String[]{previousLine + line};
  }
  if ((line.endsWith(StringPool.OPEN_CURLY_BRACE) || line.endsWith(StringPool.CLOSE_PARENTHESIS)) && (trimmedPreviousLine.startsWith("else ") || trimmedPreviousLine.startsWith("if ") || trimmedPreviousLine.startsWith("private ")|| trimmedPreviousLine.startsWith("protected ")|| trimmedPreviousLine.startsWith("public "))) {
    return new String[]{previousLine + line};
  }
  return null;
}

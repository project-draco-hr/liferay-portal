{
  setSearcher(((HitsImpl)hits).getSearcher());
  List<Document> docs=new ArrayList<Document>(hits.getLength());
  List<Float> scores=new ArrayList<Float>(hits.getLength());
  for (int i=0; i < hits.getLength(); i++) {
    Document doc=hits.doc(i);
    String articleId=doc.get("articleId");
    long articleGroupId=GetterUtil.getLong(doc.get(Field.GROUP_ID));
    if (JournalContentSearchLocalServiceUtil.getLayoutIdsCount(groupId,privateLayout,articleId) > 0) {
      docs.add(hits.doc(i));
      scores.add(hits.score(i));
    }
 else     if (!isShowListed() && (articleGroupId == groupId)) {
      docs.add(hits.doc(i));
      scores.add(hits.score(i));
    }
  }
  setLength(docs.size());
  setDocs(docs.toArray(new Document[docs.size()]));
  setScores(scores.toArray(new Float[scores.size()]));
  setSearchTime((float)(System.currentTimeMillis() - getStart()) / Time.SECOND);
}

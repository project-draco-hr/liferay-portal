{
  try {
    Object paramObj0=categoryId;
    if (categoryId == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=sku;
    if (sku == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=name;
    if (name == null) {
      paramObj2=new NullWrapper("java.lang.String");
    }
    Object paramObj3=description;
    if (description == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=properties;
    if (properties == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=supplierUserId;
    if (supplierUserId == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=fieldsQuantities;
    if (fieldsQuantities == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=new BooleanWrapper(requiresShipping);
    Object paramObj8=new IntegerWrapper(stockQuantity);
    Object paramObj9=new BooleanWrapper(featured);
    Object paramObj10=sale;
    if (sale == null) {
      paramObj10=new NullWrapper("java.lang.Boolean");
    }
    Object paramObj11=new BooleanWrapper(smallImage);
    Object paramObj12=smallImageURL;
    if (smallImageURL == null) {
      paramObj12=new NullWrapper("java.lang.String");
    }
    Object paramObj13=smallFile;
    if (smallFile == null) {
      paramObj13=new NullWrapper("java.io.File");
    }
    Object paramObj14=new BooleanWrapper(mediumImage);
    Object paramObj15=mediumImageURL;
    if (mediumImageURL == null) {
      paramObj15=new NullWrapper("java.lang.String");
    }
    Object paramObj16=mediumFile;
    if (mediumFile == null) {
      paramObj16=new NullWrapper("java.io.File");
    }
    Object paramObj17=new BooleanWrapper(largeImage);
    Object paramObj18=largeImageURL;
    if (largeImageURL == null) {
      paramObj18=new NullWrapper("java.lang.String");
    }
    Object paramObj19=largeFile;
    if (largeFile == null) {
      paramObj19=new NullWrapper("java.io.File");
    }
    Object paramObj20=itemFields;
    if (itemFields == null) {
      paramObj20=new NullWrapper("java.util.List");
    }
    Object paramObj21=itemPrices;
    if (itemPrices == null) {
      paramObj21=new NullWrapper("java.util.List");
    }
    MethodWrapper methodWrapper=new MethodWrapper(ShoppingItemServiceUtil.class.getName(),"addItem",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20,paramObj21});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      throw e;
    }
    return (com.liferay.portlet.shopping.model.ShoppingItem)returnObj;
  }
 catch (  com.liferay.portal.PortalException pe) {
    _log.error(StackTraceUtil.getStackTrace(pe));
    throw pe;
  }
catch (  com.liferay.portal.SystemException se) {
    _log.error(StackTraceUtil.getStackTrace(se));
    throw se;
  }
catch (  Exception e) {
    String stackTrace=StackTraceUtil.getStackTrace(e);
    _log.error(stackTrace);
    throw new com.liferay.portal.SystemException(stackTrace);
  }
}

{
  if (!_ldapSettings.isImportEnabled(companyId)) {
    return;
  }
  try {
    long defaultUserId=_userLocalService.getDefaultUserId(companyId);
    if (_lockManager.hasLock(defaultUserId,UserImporterUtil.class.getName(),companyId)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Skipping LDAP import for company " + companyId + " because another LDAP import is in process");
      }
      return;
    }
    LDAPConfiguration ldapCompanyServiceSettings=_ldapConfigurationSettingsUtil.getLDAPConfiguration(companyId);
    _lockManager.lock(defaultUserId,UserImporterUtil.class.getName(),companyId,LDAPUserImporterImpl.class.getName(),false,ldapCompanyServiceSettings.importLockExpirationTime());
    long[] ldapServerIds=StringUtil.split(PrefsPropsUtil.getString(companyId,"ldap.server.ids"),0L);
    for (    long ldapServerId : ldapServerIds) {
      importUsers(ldapServerId,companyId);
    }
    for (int ldapServerId=0; ; ldapServerId++) {
      String postfix=_ldapSettings.getPropertyPostfix(ldapServerId);
      String providerUrl=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_PROVIDER_URL + postfix);
      if (Validator.isNull(providerUrl)) {
        break;
      }
      importUsers(ldapServerId,companyId);
    }
  }
  finally {
    _lockManager.unlock(UserImporterUtil.class.getName(),companyId);
  }
}

{
  try {
    Class<?> fieldClass=fieldsBag.getFieldClass();
    PersistedModelLocalService persistedModelLocalService=PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(fieldClass.getName());
    for (    Field field : fieldsBag.getFields()) {
      Object obj=field.get(instance);
      if (obj == null) {
        continue;
      }
      Class<?> objClass=obj.getClass();
      if (objClass.isArray()) {
        for (        PersistedModel persistedModel : (PersistedModel[])obj) {
          if (persistedModel == null) {
            continue;
          }
          persistedModelLocalService.deletePersistedModel(persistedModel);
        }
      }
 else       if (Collection.class.isAssignableFrom(objClass)) {
        Collection<? extends PersistedModel> collection=(Collection<? extends PersistedModel>)obj;
        for (        PersistedModel persistedModel : collection) {
          persistedModelLocalService.deletePersistedModel(persistedModel);
        }
      }
 else {
        persistedModelLocalService.deletePersistedModel((PersistedModel)obj);
      }
      field.set(instance,null);
    }
  }
 catch (  Exception e) {
    _log.error("Unable to delete",e);
  }
}

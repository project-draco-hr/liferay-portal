{
  Class<? extends PersistedModel> collectionType=null;
  for (  Object obj : collection) {
    Queue<Class<?>> types=new LinkedList<Class<?>>();
    types.add(obj.getClass());
    Class<?> type=null;
    while ((type=types.poll()) != null) {
      if (ArrayUtil.contains(type.getInterfaces(),PersistedModel.class)) {
        if (collectionType == null) {
          collectionType=(Class<? extends PersistedModel>)type;
        }
 else         if (collectionType != type) {
          return null;
        }
        break;
      }
      types.add(type.getSuperclass());
      types.addAll(Arrays.asList(type.getInterfaces()));
    }
  }
  return collectionType;
}

{
  long pk=ServiceTestUtil.nextLong();
  PluginSetting newPluginSetting=_persistence.create(pk);
  newPluginSetting.setMvccVersion(ServiceTestUtil.nextLong());
  newPluginSetting.setCompanyId(ServiceTestUtil.nextLong());
  newPluginSetting.setPluginId(ServiceTestUtil.randomString());
  newPluginSetting.setPluginType(ServiceTestUtil.randomString());
  newPluginSetting.setRoles(ServiceTestUtil.randomString());
  newPluginSetting.setActive(ServiceTestUtil.randomBoolean());
  _persistence.update(newPluginSetting);
  PluginSetting existingPluginSetting=_persistence.findByPrimaryKey(newPluginSetting.getPrimaryKey());
  Assert.assertEquals(existingPluginSetting.getMvccVersion(),newPluginSetting.getMvccVersion());
  Assert.assertEquals(existingPluginSetting.getPluginSettingId(),newPluginSetting.getPluginSettingId());
  Assert.assertEquals(existingPluginSetting.getCompanyId(),newPluginSetting.getCompanyId());
  Assert.assertEquals(existingPluginSetting.getPluginId(),newPluginSetting.getPluginId());
  Assert.assertEquals(existingPluginSetting.getPluginType(),newPluginSetting.getPluginType());
  Assert.assertEquals(existingPluginSetting.getRoles(),newPluginSetting.getRoles());
  Assert.assertEquals(existingPluginSetting.getActive(),newPluginSetting.getActive());
}

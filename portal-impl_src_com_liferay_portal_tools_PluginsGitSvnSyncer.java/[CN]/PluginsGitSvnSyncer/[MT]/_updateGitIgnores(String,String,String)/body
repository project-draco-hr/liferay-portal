{
  File gitIgnoreFile=new File(destDirName + dirName + ".gitignore");
  if (!_fileUtil.exists(srcDirName + dirName + ".svn")) {
    _fileUtil.delete(gitIgnoreFile);
    return;
  }
  List<String> ignores=null;
  if (!dirName.contains("/docroot/")) {
    ignores=Collections.emptyList();
  }
 else {
    ignores=ListUtil.fromArray(_exec(_SVN_GET_IGNORES + srcDirName + dirName));
  }
  Collections.sort(ignores);
  Iterator<String> itr=ignores.iterator();
  while (itr.hasNext()) {
    String ignore=itr.next();
    if (ignore.equals("classes")) {
      itr.remove();
    }
  }
  if (!ignores.isEmpty()) {
    String[] ignoresArray=ignores.toArray(new String[ignores.size()]);
    _fileUtil.write(destDirName + dirName + ".gitignore",StringUtil.merge(ignoresArray,"\n"));
  }
 else {
    _fileUtil.delete(gitIgnoreFile);
  }
}

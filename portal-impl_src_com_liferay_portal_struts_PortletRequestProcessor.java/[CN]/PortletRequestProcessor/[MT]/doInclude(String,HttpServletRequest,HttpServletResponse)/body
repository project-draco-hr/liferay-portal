{
  PortletConfigImpl portletConfig=(PortletConfigImpl)request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);
  PortletContext portletContext=portletConfig.getPortletContext();
  PortletRequest portletRequest=(PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
  PortletResponse portletResponse=(PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  PortletRequestDispatcherImpl portletRequestDispatcher=(PortletRequestDispatcherImpl)portletContext.getRequestDispatcher(StrutsUtil.TEXT_HTML_DIR + uri);
  try {
    if (portletRequestDispatcher == null) {
      _log.error(uri + " is not a valid include");
    }
 else {
      portletRequestDispatcher.include(portletRequest,portletResponse,true);
    }
  }
 catch (  PortletException pe) {
    Throwable cause=pe.getCause();
    if (cause instanceof ServletException) {
      throw (ServletException)cause;
    }
 else {
      _log.error(cause,cause);
    }
  }
}

{
  ActionResponseImpl resImpl=(ActionResponseImpl)res;
  HttpServletRequest httpReq=PortalUtil.getHttpServletRequest(req);
  HttpServletResponse httpRes=PortalUtil.getHttpServletResponse(res);
  ActionMapping mapping=processMapping(httpReq,httpRes,path);
  if (mapping == null) {
    return;
  }
  if (!processRoles(httpReq,httpRes,mapping,true)) {
    return;
  }
  ActionForm form=processActionForm(httpReq,httpRes,mapping);
  processPopulate(httpReq,httpRes,form,mapping);
  if (!processValidateAction(httpReq,httpRes,form,mapping)) {
    return;
  }
  PortletAction action=(PortletAction)processActionCreate(httpReq,httpRes,mapping);
  if (action == null) {
    return;
  }
  PortletConfigImpl portletConfig=(PortletConfigImpl)req.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);
  try {
    if (action.isCheckMethodOnProcessAction()) {
      if (!PortalUtil.isMethodPost(req)) {
        String currentURL=PortalUtil.getCurrentURL(req);
        _log.warn("This URL can only be invoked using POST: " + currentURL);
        throw new PrincipalException(currentURL);
      }
    }
    action.processAction(mapping,form,portletConfig,req,res);
  }
 catch (  Exception e) {
    String exceptionId=WebKeys.PORTLET_STRUTS_EXCEPTION + StringPool.PERIOD + portletConfig.getPortletId();
    req.setAttribute(exceptionId,e);
  }
  String forward=(String)req.getAttribute(PortletAction.getForwardKey(req));
  if (forward != null) {
    String queryString=StringPool.BLANK;
    int pos=forward.indexOf("?");
    if (pos != -1) {
      queryString=forward.substring(pos + 1,forward.length());
      forward=forward.substring(0,pos);
    }
    ActionForward actionForward=mapping.findForward(forward);
    if ((actionForward != null) && (actionForward.getRedirect())) {
      String forwardPath=actionForward.getPath();
      if (forwardPath.startsWith("/")) {
        LiferayPortletURL forwardURL=(LiferayPortletURL)resImpl.createRenderURL();
        forwardURL.setParameter("struts_action",forwardPath);
        StrutsURLEncoder.setParameters(forwardURL,queryString);
        forwardPath=forwardURL.toString();
      }
      res.sendRedirect(forwardPath);
    }
  }
}

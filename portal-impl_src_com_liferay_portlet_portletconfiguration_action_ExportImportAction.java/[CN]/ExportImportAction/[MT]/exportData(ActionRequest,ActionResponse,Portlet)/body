{
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    long plid=ParamUtil.getLong(req,"plid");
    String fileName=ParamUtil.getString(req,"exportFileName");
    boolean dateRange=ParamUtil.getBoolean(req,"dateRange");
    Date startDate=null;
    Date endDate=null;
    if (dateRange) {
      int startDateMonth=ParamUtil.getInteger(req,"startDateMonth");
      int startDateDay=ParamUtil.getInteger(req,"startDateDay");
      int startDateYear=ParamUtil.getInteger(req,"startDateYear");
      int startDateHour=ParamUtil.getInteger(req,"startDateHour");
      int startDateMinute=ParamUtil.getInteger(req,"startDateMinute");
      int startDateAmPm=ParamUtil.getInteger(req,"startDateAmPm");
      if (startDateAmPm == Calendar.PM) {
        startDateHour+=12;
      }
      startDate=PortalUtil.getDate(startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,themeDisplay.getTimeZone(),new PortalException());
      int endDateMonth=ParamUtil.getInteger(req,"endDateMonth");
      int endDateDay=ParamUtil.getInteger(req,"endDateDay");
      int endDateYear=ParamUtil.getInteger(req,"endDateYear");
      int endDateHour=ParamUtil.getInteger(req,"endDateHour");
      int endDateMinute=ParamUtil.getInteger(req,"endDateMinute");
      int endDateAmPm=ParamUtil.getInteger(req,"endDateAmPm");
      if (endDateAmPm == Calendar.PM) {
        endDateHour+=12;
      }
      endDate=PortalUtil.getDate(endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,themeDisplay.getTimeZone(),new PortalException());
    }
    byte[] bytes=LayoutServiceUtil.exportPortletInfo(plid,portlet.getPortletId(),req.getParameterMap(),startDate,endDate);
    HttpServletResponse httpRes=PortalUtil.getHttpServletResponse(res);
    ServletResponseUtil.sendFile(httpRes,fileName,bytes);
    setForward(req,ActionConstants.COMMON_NULL);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

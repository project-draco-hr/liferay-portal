{
  File file=null;
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    long plid=ParamUtil.getLong(actionRequest,"plid");
    long groupId=ParamUtil.getLong(actionRequest,"groupId");
    String fileName=ParamUtil.getString(actionRequest,"exportFileName");
    String range=ParamUtil.getString(actionRequest,"range");
    Date startDate=null;
    Date endDate=null;
    if (range.equals("dateRange")) {
      int startDateMonth=ParamUtil.getInteger(actionRequest,"startDateMonth");
      int startDateDay=ParamUtil.getInteger(actionRequest,"startDateDay");
      int startDateYear=ParamUtil.getInteger(actionRequest,"startDateYear");
      int startDateHour=ParamUtil.getInteger(actionRequest,"startDateHour");
      int startDateMinute=ParamUtil.getInteger(actionRequest,"startDateMinute");
      int startDateAmPm=ParamUtil.getInteger(actionRequest,"startDateAmPm");
      if (startDateAmPm == Calendar.PM) {
        startDateHour+=12;
      }
      startDate=PortalUtil.getDate(startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,themeDisplay.getTimeZone(),PortalException.class);
      int endDateMonth=ParamUtil.getInteger(actionRequest,"endDateMonth");
      int endDateDay=ParamUtil.getInteger(actionRequest,"endDateDay");
      int endDateYear=ParamUtil.getInteger(actionRequest,"endDateYear");
      int endDateHour=ParamUtil.getInteger(actionRequest,"endDateHour");
      int endDateMinute=ParamUtil.getInteger(actionRequest,"endDateMinute");
      int endDateAmPm=ParamUtil.getInteger(actionRequest,"endDateAmPm");
      if (endDateAmPm == Calendar.PM) {
        endDateHour+=12;
      }
      endDate=PortalUtil.getDate(endDateMonth,endDateDay,endDateYear,endDateHour,endDateMinute,themeDisplay.getTimeZone(),PortalException.class);
    }
 else     if (range.equals("fromLastPublishDate")) {
      Layout layout=LayoutLocalServiceUtil.getLayout(plid);
      PortletPreferences preferences=PortletPreferencesFactoryUtil.getPortletSetup(layout,portlet.getPortletId(),StringPool.BLANK);
      long lastPublishDate=GetterUtil.getLong(preferences.getValue("last-publish-date",StringPool.BLANK));
      if (lastPublishDate > 0) {
        Calendar cal=Calendar.getInstance(themeDisplay.getTimeZone(),themeDisplay.getLocale());
        endDate=cal.getTime();
        cal.setTimeInMillis(lastPublishDate);
        startDate=cal.getTime();
      }
    }
    file=LayoutServiceUtil.exportPortletInfoAsFile(plid,groupId,portlet.getPortletId(),actionRequest.getParameterMap(),startDate,endDate);
    HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
    HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
    ServletResponseUtil.sendFile(request,response,fileName,new FileInputStream(file),ContentTypes.APPLICATION_ZIP);
    setForward(actionRequest,ActionConstants.COMMON_NULL);
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
    SessionErrors.add(actionRequest,e.getClass(),e);
  }
 finally {
    FileUtil.delete(file);
  }
}

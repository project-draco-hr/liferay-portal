{
  StringMaker sm=new StringMaker();
  sm.append("select distinct sa1.* from SocialActivity sa1 ");
  sm.append("inner join SocialActivity sa2 on ");
  sm.append("sa1.activityId != sa2.activityId and ");
  sm.append("sa1.groupId = sa2.groupId and ");
  sm.append("sa1.userId = sa2.userId and ");
  sm.append("sa1.classNameId = sa2.classNameId and ");
  sm.append("sa1.classPK = sa2.classPK and ");
  sm.append("sa1.type_ = sa2.type_ and ");
  sm.append("sa1.extraData = sa2.extraData and ");
  sm.append("sa1.receiverUserId = sa2.receiverUserId ");
  sm.append("where sa1.mirrorActivityId = 0 ");
  sm.append("order by sa1.groupId, sa1.userId, sa1.classNameId, ");
  sm.append("sa1.classPK, sa1.type_, sa1.extraData, ");
  sm.append("sa1.receiverUserId, sa1.createDate desc");
  String sql=sm.toString();
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=HibernateUtil.getConnection();
    ps=con.prepareStatement(sql);
    rs=ps.executeQuery();
    long activityId=0;
    long groupId=0;
    long userId=0;
    long classNameId=0;
    long classPK=0;
    long type=0;
    String extraData=StringPool.BLANK;
    long receiverUserId=0;
    while (rs.next()) {
      long curActivityId=rs.getLong("activityId");
      long curGroupId=rs.getLong("groupId");
      long curUserId=rs.getLong("userId");
      long curClassNameId=rs.getLong("classNameId");
      long curClassPK=rs.getLong("classPK");
      long curType=rs.getLong("type_");
      String curExtraData=rs.getString("extraData");
      long curReceiverUserId=rs.getLong("receiverUserId");
      if ((curGroupId == groupId) && (curUserId == userId) && (curClassNameId == classNameId)&& (curClassPK == classPK)&& (curType == type)&& (curExtraData.equals(extraData))&& (curReceiverUserId == receiverUserId)) {
        SocialActivityLocalServiceUtil.deleteActivity(curActivityId);
      }
 else {
        activityId=curActivityId;
        groupId=curGroupId;
        userId=curUserId;
        classNameId=curClassNameId;
        classPK=curClassPK;
        type=curType;
        extraData=curExtraData;
        receiverUserId=curReceiverUserId;
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

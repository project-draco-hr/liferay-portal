{
  StringBuilder sb=new StringBuilder();
  sb.append("select distinct sr1.* from SocialRequest sr1 ");
  sb.append("inner join SocialRequest sr2 on ");
  sb.append("sr1.requestId != sr2.requestId and ");
  sb.append("sr1.groupId = sr2.groupId and ");
  sb.append("sr1.userId = sr2.userId and ");
  sb.append("sr1.classNameId = sr2.classNameId and ");
  sb.append("sr1.classPK = sr2.classPK and ");
  sb.append("sr1.type_ = sr2.type_ and ");
  sb.append("sr1.extraData = sr2.extraData and ");
  sb.append("sr1.receiverUserId = sr2.receiverUserId ");
  sb.append("order by sr1.groupId, sr1.userId, sr1.classNameId, ");
  sb.append("sr1.classPK, sr1.type_, sr1.extraData, ");
  sb.append("sr1.receiverUserId, sr1.createDate desc");
  String sql=sb.toString();
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    ps=con.prepareStatement(sql);
    rs=ps.executeQuery();
    long groupId=0;
    long userId=0;
    long classNameId=0;
    long classPK=0;
    long type=0;
    String extraData=StringPool.BLANK;
    long receiverUserId=0;
    while (rs.next()) {
      long curRequestId=rs.getLong("requestId");
      long curGroupId=rs.getLong("groupId");
      long curUserId=rs.getLong("userId");
      long curClassNameId=rs.getLong("classNameId");
      long curClassPK=rs.getLong("classPK");
      long curType=rs.getLong("type_");
      String curExtraData=rs.getString("extraData");
      long curReceiverUserId=rs.getLong("receiverUserId");
      if ((curGroupId == groupId) && (curUserId == userId) && (curClassNameId == classNameId)&& (curClassPK == classPK)&& (curType == type)&& (curExtraData.equals(extraData))&& (curReceiverUserId == receiverUserId)) {
        SocialRequestLocalServiceUtil.deleteRequest(curRequestId);
      }
 else {
        groupId=curGroupId;
        userId=curUserId;
        classNameId=curClassNameId;
        classPK=curClassPK;
        type=curType;
        extraData=curExtraData;
        receiverUserId=curReceiverUserId;
      }
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

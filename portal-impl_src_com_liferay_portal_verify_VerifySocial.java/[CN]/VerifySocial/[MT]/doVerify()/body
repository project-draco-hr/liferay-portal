{
  ActionableDynamicQuery socialRequestActionableDynamicQuery=new SocialRequestActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      Property classNameId=PropertyFactoryUtil.forName("classNameId");
      dynamicQuery.add(classNameId.eq(PortalUtil.getClassNameId(Group.class)));
      Property classPK=PropertyFactoryUtil.forName("classPK");
      DynamicQuery groupDynamicQuery=DynamicQueryFactoryUtil.forClass(Group.class);
      groupDynamicQuery.setProjection(ProjectionFactoryUtil.property("groupId"));
      dynamicQuery.add(classPK.notIn(groupDynamicQuery));
    }
    @Override protected void performAction(    Object object) throws SystemException {
      SocialRequestLocalServiceUtil.deleteRequest((SocialRequest)object);
    }
  }
;
  socialRequestActionableDynamicQuery.performActions();
}

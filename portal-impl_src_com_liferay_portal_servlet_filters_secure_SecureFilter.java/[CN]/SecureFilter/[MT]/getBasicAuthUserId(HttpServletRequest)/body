{
  long userId=0;
  String authorizationHeader=request.getHeader(HttpHeaders.AUTHORIZATION);
  if (Validator.isNull(authorizationHeader)) {
    return userId;
  }
  String[] authorizationArray=authorizationHeader.split("\\s+");
  String authorization=authorizationArray[0];
  String credentials=new String(Base64.decode(authorizationArray[1]));
  if (!authorization.equalsIgnoreCase(HttpServletRequest.BASIC_AUTH)) {
    return userId;
  }
  long companyId=PortalInstances.getCompanyId(request);
  String[] loginAndPassword=StringUtil.split(credentials,StringPool.COLON);
  String login=loginAndPassword[0].trim();
  String password=loginAndPassword[1].trim();
  if (login.endsWith("@uid")) {
    int pos=login.indexOf("@uid");
    login=login.substring(0,pos);
  }
 else   if (login.endsWith("@sn")) {
    int pos=login.indexOf("@sn");
    login=login.substring(0,pos);
  }
  userId=UserLocalServiceUtil.authenticateForBasic(companyId,CompanyConstants.AUTH_TYPE_EA,login,password);
  if (userId > 0) {
    return userId;
  }
  userId=UserLocalServiceUtil.authenticateForBasic(companyId,CompanyConstants.AUTH_TYPE_SN,login,password);
  if (userId > 0) {
    return userId;
  }
  userId=UserLocalServiceUtil.authenticateForBasic(companyId,CompanyConstants.AUTH_TYPE_ID,login,password);
  return userId;
}

{
  MBSubscriptionNotificationMessageListener listener=new MBSubscriptionNotificationMessageListener(_mockSender,_subscriptionLocalService,_userLocalService);
  _messageFromMB.put("categoryIds","");
  final List<Subscription> threadSubscriptions=Arrays.asList(new Subscription[]{new MockSubscriptionImpl(1,1,1)});
  final MockUserImpl threadSubscriber=new MockUserImpl(1,"test@liferay.com","Joe","","Bloggs",false);
  _mockery.checking(new Expectations(){
{
      one(_subscriptionLocalService).getSubscriptions(with(any(Long.class)),with(equal(MBThread.class.getName())),with(any(Long.class)));
      will(returnValue(threadSubscriptions));
      exactly(threadSubscriptions.size()).of(_userLocalService).getUserById(with(any(Long.class)));
      will(returnValue(threadSubscriber));
      one(_subscriptionLocalService).deleteSubscription(with(equal(threadSubscriber.getUserId())));
      never(_mockSender);
      never(_subscriptionLocalService).getSubscriptions(with(any(Long.class)),with(equal(MBCategory.class.getName())),with(any(Long.class)));
    }
  }
);
  listener.receive(_messageFromMB);
}

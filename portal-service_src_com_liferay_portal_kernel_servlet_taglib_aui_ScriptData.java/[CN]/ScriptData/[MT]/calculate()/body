{
  if (_calculated) {
    return;
  }
  _callbackSB=new StringBundler();
  _rawSB=new StringBundler();
  _useSet=new TreeSet<String>();
  for (  ObjectValuePair<Object,String> append : _appendList) {
    Object key=append.getKey();
    String use=append.getValue();
    if (key instanceof StringBundler) {
      StringBundler contentSB=(StringBundler)key;
      if (Validator.isNull(use)) {
        _rawSB.append(contentSB);
      }
 else {
        _callbackSB.append("(function() {");
        _callbackSB.append(contentSB);
        _callbackSB.append("})();");
        String[] useArray=StringUtil.split(use);
        for (int i=0; i < useArray.length; i++) {
          _useSet.add(useArray[i]);
        }
      }
    }
 else {
      String content=(String)key;
      if (Validator.isNull(use)) {
        _rawSB.append(content);
      }
 else {
        _callbackSB.append("(function() {");
        _callbackSB.append(content);
        _callbackSB.append("})();");
        String[] useArray=StringUtil.split(use);
        for (int i=0; i < useArray.length; i++) {
          _useSet.add(useArray[i]);
        }
      }
    }
  }
  _calculated=true;
}

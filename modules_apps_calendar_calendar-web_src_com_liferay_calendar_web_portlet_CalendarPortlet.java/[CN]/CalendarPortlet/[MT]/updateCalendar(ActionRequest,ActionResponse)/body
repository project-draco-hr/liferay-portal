{
  long calendarId=ParamUtil.getLong(actionRequest,"calendarId");
  long calendarResourceId=ParamUtil.getLong(actionRequest,"calendarResourceId");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  String timeZoneId=ParamUtil.getString(actionRequest,"timeZoneId");
  int color=ParamUtil.getInteger(actionRequest,"color");
  boolean defaultCalendar=ParamUtil.getBoolean(actionRequest,"defaultCalendar");
  boolean enableComments=ParamUtil.getBoolean(actionRequest,"enableComments");
  boolean enableRatings=ParamUtil.getBoolean(actionRequest,"enableRatings");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(Calendar.class.getName(),actionRequest);
  Calendar calendar=null;
  if (calendarId <= 0) {
    CalendarResource calendarResource=CalendarResourceServiceUtil.getCalendarResource(calendarResourceId);
    calendar=CalendarServiceUtil.addCalendar(calendarResource.getGroupId(),calendarResourceId,nameMap,descriptionMap,timeZoneId,color,defaultCalendar,enableComments,enableRatings,serviceContext);
  }
 else {
    calendar=CalendarServiceUtil.updateCalendar(calendarId,nameMap,descriptionMap,timeZoneId,color,defaultCalendar,enableComments,enableRatings,serviceContext);
  }
  String redirect=getEditCalendarURL(actionRequest,actionResponse,calendar);
  actionRequest.setAttribute(WebKeys.REDIRECT,redirect);
}

{
  long pk=RandomTestUtil.nextLong();
  Image newImage=_persistence.create(pk);
  newImage.setMvccVersion(RandomTestUtil.nextLong());
  newImage.setModifiedDate(RandomTestUtil.nextDate());
  newImage.setType(RandomTestUtil.randomString());
  newImage.setHeight(RandomTestUtil.nextInt());
  newImage.setWidth(RandomTestUtil.nextInt());
  newImage.setSize(RandomTestUtil.nextInt());
  _models.add(_persistence.update(newImage));
  Image existingImage=_persistence.findByPrimaryKey(newImage.getPrimaryKey());
  Assert.assertEquals(existingImage.getMvccVersion(),newImage.getMvccVersion());
  Assert.assertEquals(existingImage.getImageId(),newImage.getImageId());
  Assert.assertEquals(Time.getShortTimestamp(existingImage.getModifiedDate()),Time.getShortTimestamp(newImage.getModifiedDate()));
  Assert.assertEquals(existingImage.getType(),newImage.getType());
  Assert.assertEquals(existingImage.getHeight(),newImage.getHeight());
  Assert.assertEquals(existingImage.getWidth(),newImage.getWidth());
  Assert.assertEquals(existingImage.getSize(),newImage.getSize());
}

{
  long userId=portletDataContext.getUserId(organization.getUserUuid());
  if (organization.getParentOrganizationId() != OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,organization,Organization.class,organization.getParentOrganizationId());
  }
  Map<Long,Long> organizationIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Organization.class);
  long parentOrganizationId=MapUtil.getLong(organizationIds,organization.getParentOrganizationId(),organization.getParentOrganizationId());
  ServiceContext serviceContext=portletDataContext.createServiceContext(organization);
  serviceContext.setUserId(userId);
  Organization existingOrganization=OrganizationLocalServiceUtil.fetchOrganizationByUuidAndCompanyId(organization.getUuid(),portletDataContext.getCompanyId());
  if (existingOrganization == null) {
    existingOrganization=OrganizationLocalServiceUtil.fetchOrganization(portletDataContext.getCompanyId(),organization.getName());
  }
  Organization importedOrganization=null;
  if (existingOrganization == null) {
    serviceContext.setUuid(organization.getUuid());
    importedOrganization=OrganizationLocalServiceUtil.addOrganization(userId,parentOrganizationId,organization.getName(),organization.getType(),organization.getRegionId(),organization.getCountryId(),organization.getStatusId(),organization.getComments(),false,serviceContext);
  }
 else {
    importedOrganization=OrganizationLocalServiceUtil.updateOrganization(portletDataContext.getCompanyId(),existingOrganization.getOrganizationId(),parentOrganizationId,organization.getName(),organization.getType(),organization.getRegionId(),organization.getCountryId(),organization.getStatusId(),organization.getComments(),true,null,false,serviceContext);
  }
  importAddresses(portletDataContext,organization,importedOrganization);
  importEmailAddresses(portletDataContext,organization,importedOrganization);
  importOrgLabors(portletDataContext,organization,importedOrganization);
  importPasswordPolicyRel(portletDataContext,organization,importedOrganization);
  importPhones(portletDataContext,organization,importedOrganization);
  importWebsites(portletDataContext,organization,importedOrganization);
  portletDataContext.importClassedModel(organization,importedOrganization);
}

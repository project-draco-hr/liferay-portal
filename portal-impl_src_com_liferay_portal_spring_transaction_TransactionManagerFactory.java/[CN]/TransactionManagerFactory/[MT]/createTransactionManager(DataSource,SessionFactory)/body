{
  ClassLoader classLoader=PACLClassLoaderUtil.getPortalClassLoader();
  AbstractPlatformTransactionManager abstractPlatformTransactionManager=(AbstractPlatformTransactionManager)classLoader.loadClass(PropsValues.TRANSACTION_MANAGER_IMPL).newInstance();
  Properties properties=PropsUtil.getProperties("transaction.manager.property.",true);
  Enumeration<String> enu=(Enumeration<String>)properties.propertyNames();
  while (enu.hasMoreElements()) {
    String key=enu.nextElement();
    String value=properties.getProperty(key);
    BeanUtil.setProperty(abstractPlatformTransactionManager,key,value);
  }
  if (abstractPlatformTransactionManager instanceof HibernateTransactionManager) {
    HibernateTransactionManager hibernateTransactionManager=(HibernateTransactionManager)abstractPlatformTransactionManager;
    hibernateTransactionManager.setDataSource(dataSource);
    hibernateTransactionManager.setSessionFactory(sessionFactory);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Created transaction manager " + abstractPlatformTransactionManager.getClass().getName());
    SortedProperties sortedProperties=new SortedProperties(properties);
    sortedProperties.list(System.out);
  }
  return abstractPlatformTransactionManager;
}

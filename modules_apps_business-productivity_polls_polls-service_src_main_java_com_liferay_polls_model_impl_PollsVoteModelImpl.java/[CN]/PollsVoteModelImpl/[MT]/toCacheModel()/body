{
  PollsVoteCacheModel pollsVoteCacheModel=new PollsVoteCacheModel();
  pollsVoteCacheModel.uuid=getUuid();
  String uuid=pollsVoteCacheModel.uuid;
  if ((uuid != null) && (uuid.length() == 0)) {
    pollsVoteCacheModel.uuid=null;
  }
  pollsVoteCacheModel.voteId=getVoteId();
  pollsVoteCacheModel.groupId=getGroupId();
  pollsVoteCacheModel.companyId=getCompanyId();
  pollsVoteCacheModel.userId=getUserId();
  pollsVoteCacheModel.userName=getUserName();
  String userName=pollsVoteCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    pollsVoteCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    pollsVoteCacheModel.createDate=createDate.getTime();
  }
 else {
    pollsVoteCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    pollsVoteCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    pollsVoteCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  pollsVoteCacheModel.questionId=getQuestionId();
  pollsVoteCacheModel.choiceId=getChoiceId();
  Date lastPublishDate=getLastPublishDate();
  if (lastPublishDate != null) {
    pollsVoteCacheModel.lastPublishDate=lastPublishDate.getTime();
  }
 else {
    pollsVoteCacheModel.lastPublishDate=Long.MIN_VALUE;
  }
  Date voteDate=getVoteDate();
  if (voteDate != null) {
    pollsVoteCacheModel.voteDate=voteDate.getTime();
  }
 else {
    pollsVoteCacheModel.voteDate=Long.MIN_VALUE;
  }
  return pollsVoteCacheModel;
}

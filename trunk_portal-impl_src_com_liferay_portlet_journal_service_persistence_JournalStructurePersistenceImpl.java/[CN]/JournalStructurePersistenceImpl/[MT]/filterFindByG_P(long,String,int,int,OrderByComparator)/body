{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return findByG_P(groupId,parentStructureId,start,end,orderByComparator);
  }
  StringBundler query=null;
  if (orderByComparator != null) {
    query=new StringBundler(4 + (orderByComparator.getOrderByFields().length * 3));
  }
 else {
    query=new StringBundler(4);
  }
  query.append(_FILTER_SQL_SELECT_JOURNALSTRUCTURE_WHERE);
  query.append(_FINDER_COLUMN_G_P_GROUPID_2);
  if (parentStructureId == null) {
    query.append(_FINDER_COLUMN_G_P_PARENTSTRUCTUREID_1);
  }
 else {
    if (parentStructureId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_P_PARENTSTRUCTUREID_3);
    }
 else {
      query.append(_FINDER_COLUMN_G_P_PARENTSTRUCTUREID_2);
    }
  }
  appendGroupByComparator(query,_FILTER_COLUMN_PK);
  if (orderByComparator != null) {
    if (getDB().isSupportsInlineDistinct()) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_TABLE,orderByComparator);
    }
  }
 else {
    if (getDB().isSupportsInlineDistinct()) {
      query.append(JournalStructureModelImpl.ORDER_BY_JPQL);
    }
 else {
      query.append(JournalStructureModelImpl.ORDER_BY_SQL);
    }
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),JournalStructure.class.getName(),_FILTER_COLUMN_PK,groupId);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    if (getDB().isSupportsInlineDistinct()) {
      q.addEntity(_FILTER_ENTITY_ALIAS,JournalStructureImpl.class);
    }
 else {
      q.addEntity(_FILTER_ENTITY_TABLE,JournalStructureImpl.class);
    }
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (parentStructureId != null) {
      qPos.add(parentStructureId);
    }
    return (List<JournalStructure>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

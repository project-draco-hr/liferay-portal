{
  long passwordPolicyId=ParamUtil.getLong(actionRequest,"passwordPolicyId");
  String name=ParamUtil.getString(actionRequest,"name");
  String description=ParamUtil.getString(actionRequest,"description");
  boolean changeable=ParamUtil.getBoolean(actionRequest,"changeable");
  boolean changeRequired=false;
  long minAge=0L;
  if (changeable) {
    changeRequired=ParamUtil.getBoolean(actionRequest,"changeRequired");
    minAge=ParamUtil.getLong(actionRequest,"minAge");
  }
  boolean checkSyntax=ParamUtil.getBoolean(actionRequest,"checkSyntax");
  boolean allowDictionaryWords=ParamUtil.getBoolean(actionRequest,"allowDictionaryWords");
  int minAlphanumeric=ParamUtil.getInteger(actionRequest,"minAlphanumeric");
  int minLength=ParamUtil.getInteger(actionRequest,"minLength");
  int minLowerCase=ParamUtil.getInteger(actionRequest,"minLowerCase");
  int minNumbers=ParamUtil.getInteger(actionRequest,"minNumbers");
  int minSymbols=ParamUtil.getInteger(actionRequest,"minSymbols");
  int minUpperCase=ParamUtil.getInteger(actionRequest,"minUpperCase");
  String regex=ParamUtil.getString(actionRequest,"regex");
  boolean history=ParamUtil.getBoolean(actionRequest,"history");
  int historyCount=ParamUtil.getInteger(actionRequest,"historyCount");
  boolean expireable=ParamUtil.getBoolean(actionRequest,"expireable");
  long maxAge=ParamUtil.getLong(actionRequest,"maxAge");
  long warningTime=ParamUtil.getLong(actionRequest,"warningTime");
  int graceLimit=ParamUtil.getInteger(actionRequest,"graceLimit");
  boolean lockout=ParamUtil.getBoolean(actionRequest,"lockout");
  int maxFailure=ParamUtil.getInteger(actionRequest,"maxFailure");
  long lockoutDuration=ParamUtil.getLong(actionRequest,"lockoutDuration");
  long resetFailureCount=ParamUtil.getLong(actionRequest,"resetFailureCount");
  long resetTicketMaxAge=ParamUtil.getLong(actionRequest,"resetTicketMaxAge");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(PasswordPolicy.class.getName(),actionRequest);
  if (passwordPolicyId <= 0) {
    PasswordPolicyServiceUtil.addPasswordPolicy(name,description,changeable,changeRequired,minAge,checkSyntax,allowDictionaryWords,minAlphanumeric,minLength,minLowerCase,minNumbers,minSymbols,minUpperCase,regex,history,historyCount,expireable,maxAge,warningTime,graceLimit,lockout,maxFailure,lockoutDuration,resetFailureCount,resetTicketMaxAge,serviceContext);
  }
 else {
    PasswordPolicyServiceUtil.updatePasswordPolicy(passwordPolicyId,name,description,changeable,changeRequired,minAge,checkSyntax,allowDictionaryWords,minAlphanumeric,minLength,minLowerCase,minNumbers,minSymbols,minUpperCase,regex,history,historyCount,expireable,maxAge,warningTime,graceLimit,lockout,maxFailure,lockoutDuration,resetFailureCount,resetTicketMaxAge,serviceContext);
  }
}

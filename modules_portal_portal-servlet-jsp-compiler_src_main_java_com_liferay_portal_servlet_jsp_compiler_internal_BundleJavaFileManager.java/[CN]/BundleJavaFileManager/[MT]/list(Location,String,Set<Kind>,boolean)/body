{
  List<JavaFileObject> javaFileObjects=new ArrayList<>();
  if ((location == StandardLocation.CLASS_PATH) && _verbose) {
    _logger.log(Logger.LOG_INFO,"List available sources for {location=" + location + ", packageName="+ packageName+ ", kinds="+ kinds+ ", recurse="+ recurse+ "}");
  }
  String packagePath=packageName.replace('.','/');
  if (!packageName.startsWith(JAVA_PACKAGE) && (location == StandardLocation.CLASS_PATH)) {
    listFromDependencies(kinds,recurse,packagePath,javaFileObjects);
    if (javaFileObjects.isEmpty() && _systemCapabilities.contains(packageName)) {
      Iterable<JavaFileObject> localJavaFileObjects=fileManager.list(location,packagePath,kinds,recurse);
      for (      JavaFileObject javaFileObject : localJavaFileObjects) {
        if ((location == StandardLocation.CLASS_PATH) && _verbose) {
          _logger.log(Logger.LOG_INFO,"\t" + javaFileObject);
        }
        javaFileObjects.add(javaFileObject);
      }
    }
  }
 else {
    Iterable<JavaFileObject> localJavaFileObjects=fileManager.list(location,packagePath,kinds,recurse);
    for (    JavaFileObject javaFileObject : localJavaFileObjects) {
      if ((location == StandardLocation.CLASS_PATH) && _verbose) {
        _logger.log(Logger.LOG_INFO,"\t" + javaFileObject);
      }
      javaFileObjects.add(javaFileObject);
    }
  }
  return javaFileObjects;
}

{
  super(javaFileManager);
  _logger=logger;
  _verbose=verbose;
  _resourceResolver=resourceResolver;
  if (_verbose) {
    StringBundler sb=new StringBundler(4);
    sb.append("BundleJavaFileManager for bundle: ");
    sb.append(bundle.getSymbolicName());
    sb.append(StringPool.DASH);
    sb.append(bundle.getVersion());
    _logger.log(Logger.LOG_INFO,sb.toString());
  }
  _bundleWiring=bundle.adapt(BundleWiring.class);
  if (_verbose) {
    _logger.log(Logger.LOG_INFO,"Dependent BundleWirings included in this BundleJavaManager " + "context: ");
  }
  for (  BundleWire bundleWire : _bundleWiring.getRequiredWires(null)) {
    BundleWiring bundleWiring=bundleWire.getProviderWiring();
    if (!_bundleWirings.add(bundleWiring)) {
      continue;
    }
    Bundle currentBundle=bundleWiring.getBundle();
    if (currentBundle.getBundleId() == 0) {
      for (      BundleCapability bundleCapability : bundleWiring.getCapabilities(BundleRevision.PACKAGE_NAMESPACE)) {
        Map<String,Object> attributes=bundleCapability.getAttributes();
        Object packageName=attributes.get(BundleRevision.PACKAGE_NAMESPACE);
        if (packageName != null) {
          _systemPackageNames.add(packageName);
        }
      }
    }
    if (_verbose) {
      _logger.log(Logger.LOG_INFO,"\t" + currentBundle.getSymbolicName() + "-"+ currentBundle.getVersion());
    }
  }
}

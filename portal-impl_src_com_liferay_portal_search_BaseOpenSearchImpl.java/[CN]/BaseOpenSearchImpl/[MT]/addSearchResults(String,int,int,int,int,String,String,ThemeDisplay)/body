{
  int totalPages=0;
  if (total % itemsPerPage == 0) {
    totalPages=total / itemsPerPage;
  }
 else {
    totalPages=(total / itemsPerPage) + 1;
  }
  int previousPage=startPage - 1;
  int nextPage=startPage + 1;
  Document doc=SAXReaderUtil.createDocument();
  if (useRSS) {
    Element rssRoot=doc.addElement("rss");
    rssRoot.addAttribute("version","2.0");
    rssRoot.add(SAXReaderUtil.createNamespace("atom","http://www.w3.org/2005/Atom"));
    rssRoot.add(OpenSearchUtil.getNamespace(OpenSearchUtil.OS_NAMESPACE));
    rssRoot.add(OpenSearchUtil.getNamespace(OpenSearchUtil.RELEVANCE_NAMESPACE));
    Element channel=rssRoot.addElement("channel");
    OpenSearchUtil.addElement(channel,"title",OpenSearchUtil.NO_NAMESPACE,title);
    OpenSearchUtil.addElement(channel,"link",OpenSearchUtil.NO_NAMESPACE,themeDisplay.getURLPortal() + searchPath);
    OpenSearchUtil.addElement(channel,"description",OpenSearchUtil.NO_NAMESPACE,title);
    OpenSearchUtil.addElement(channel,"totalResults",OpenSearchUtil.OS_NAMESPACE,total);
    OpenSearchUtil.addElement(channel,"startIndex",OpenSearchUtil.OS_NAMESPACE,start + 1);
    OpenSearchUtil.addElement(channel,"itemsPerPage",OpenSearchUtil.OS_NAMESPACE,itemsPerPage);
    Element query=OpenSearchUtil.addElement(channel,"Query",OpenSearchUtil.OS_NAMESPACE);
    query.addAttribute("role","request");
    query.addAttribute("searchTerms",keywords);
    query.addAttribute("startPage",String.valueOf(startPage));
    return new Object[]{doc,channel};
  }
  Element root=doc.addElement("feed");
  root.add(OpenSearchUtil.getNamespace(OpenSearchUtil.DEFAULT_NAMESPACE));
  root.add(OpenSearchUtil.getNamespace(OpenSearchUtil.OS_NAMESPACE));
  root.add(OpenSearchUtil.getNamespace(OpenSearchUtil.RELEVANCE_NAMESPACE));
  OpenSearchUtil.addElement(root,"title",OpenSearchUtil.DEFAULT_NAMESPACE,title);
  OpenSearchUtil.addElement(root,"updated",OpenSearchUtil.DEFAULT_NAMESPACE,new Date());
  Element author=OpenSearchUtil.addElement(root,"author",OpenSearchUtil.DEFAULT_NAMESPACE);
  OpenSearchUtil.addElement(author,"name",OpenSearchUtil.DEFAULT_NAMESPACE,themeDisplay.getUserId());
  OpenSearchUtil.addElement(root,"id",OpenSearchUtil.DEFAULT_NAMESPACE,"urn:uuid:" + PortalUUIDUtil.generate());
  OpenSearchUtil.addElement(root,"totalResults",OpenSearchUtil.OS_NAMESPACE,total);
  OpenSearchUtil.addElement(root,"startIndex",OpenSearchUtil.OS_NAMESPACE,start + 1);
  OpenSearchUtil.addElement(root,"itemsPerPage",OpenSearchUtil.OS_NAMESPACE,itemsPerPage);
  Element query=OpenSearchUtil.addElement(root,"Query",OpenSearchUtil.OS_NAMESPACE);
  query.addAttribute("role","request");
  query.addAttribute("searchTerms",keywords);
  query.addAttribute("startPage",String.valueOf(startPage));
  String searchURL=themeDisplay.getURLPortal() + searchPath;
  OpenSearchUtil.addLink(root,searchURL,"self",keywords,startPage,itemsPerPage);
  OpenSearchUtil.addLink(root,searchURL,"first",keywords,1,itemsPerPage);
  if (previousPage > 0) {
    OpenSearchUtil.addLink(root,searchURL,"previous",keywords,previousPage,itemsPerPage);
  }
  if (nextPage <= totalPages) {
    OpenSearchUtil.addLink(root,searchURL,"next",keywords,nextPage,itemsPerPage);
  }
  OpenSearchUtil.addLink(root,searchURL,"last",keywords,totalPages,itemsPerPage);
  Element link=OpenSearchUtil.addElement(root,"link",OpenSearchUtil.DEFAULT_NAMESPACE);
  link.addAttribute("rel","search");
  link.addAttribute("href",searchPath + "_description.xml");
  link.addAttribute("type","application/opensearchdescription+xml");
  return new Object[]{doc,root};
}

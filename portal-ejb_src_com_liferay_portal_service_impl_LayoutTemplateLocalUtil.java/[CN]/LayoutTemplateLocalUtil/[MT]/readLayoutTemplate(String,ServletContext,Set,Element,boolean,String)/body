{
  Map layoutTemplates=null;
  if (themeId != null) {
    if (standard) {
      layoutTemplates=_getThemesStandard(themeId);
    }
 else {
      layoutTemplates=_getThemesCustom(themeId);
    }
  }
 else   if (servletContextName != null) {
    if (standard) {
      layoutTemplates=_warStandard;
    }
 else {
      layoutTemplates=_warCustom;
    }
  }
 else {
    if (standard) {
      layoutTemplates=_portalStandard;
    }
 else {
      layoutTemplates=_portalCustom;
    }
  }
  Iterator itr=el.elements("layout-template").iterator();
  while (itr.hasNext()) {
    Element layoutTemplate=(Element)itr.next();
    String layoutTemplateId=layoutTemplate.attributeValue("id");
    if (layoutTemplateIds != null) {
      layoutTemplateIds.add(new ObjectValuePair(layoutTemplateId,new Boolean(standard)));
    }
    LayoutTemplate layoutTemplateModel=(LayoutTemplate)layoutTemplates.get(layoutTemplateId);
    if (layoutTemplateModel == null) {
      layoutTemplateModel=new LayoutTemplate(layoutTemplateId);
      layoutTemplates.put(layoutTemplateId,layoutTemplateModel);
    }
    layoutTemplateModel.setStandard(standard);
    layoutTemplateModel.setName(GetterUtil.getString(layoutTemplate.attributeValue("name"),layoutTemplateModel.getName()));
    layoutTemplateModel.setTemplatePath(GetterUtil.getString(layoutTemplate.elementText("template-path"),layoutTemplateModel.getTemplatePath()));
    layoutTemplateModel.setThumbnailPath(GetterUtil.getString(layoutTemplate.elementText("thumbnail-path"),layoutTemplateModel.getThumbnailPath()));
    String content=Http.URLtoString(ctx.getResource(layoutTemplateModel.getTemplatePath()));
    if ((content == null) || (content.length() == 0)) {
      _log.error("No content found at " + layoutTemplateModel.getTemplatePath());
    }
 else {
      layoutTemplateModel.setContent(content);
      layoutTemplateModel.setColumns(_getColumns(content));
    }
  }
}

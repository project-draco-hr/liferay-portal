{
  DynamicQuery dynamicQuery=_resourceTypePermissionLocalService.dynamicQuery();
  Property companyIdProperty=PropertyFactoryUtil.forName("companyId");
  dynamicQuery.add(companyIdProperty.eq(portletDataContext.getCompanyId()));
  Junction junction=RestrictionsFactoryUtil.disjunction();
  long[] permissibleGroupIds={GroupConstants.DEFAULT_PARENT_GROUP_ID,portletDataContext.getCompanyId(),portletDataContext.getCompanyGroupId(),portletDataContext.getUserPersonalSiteGroupId()};
  for (  long permissibleGroupId : permissibleGroupIds) {
    Property property=PropertyFactoryUtil.forName("groupId");
    junction.add(property.eq(permissibleGroupId));
  }
  dynamicQuery.add(junction);
  Property roleIdProperty=PropertyFactoryUtil.forName("roleId");
  dynamicQuery.add(roleIdProperty.eq(importedRole.getRoleId()));
  return _resourceTypePermissionLocalService.dynamicQuery(dynamicQuery);
}

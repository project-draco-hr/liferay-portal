{
  Thread currentThread=Thread.currentThread();
  StackTraceElement[] stackTraceElements=currentThread.getStackTrace();
  StackTraceElement stackTraceElement=stackTraceElements[2];
  Method method=BaseTransactionalTestRuleTest.class.getMethod(stackTraceElement.getMethodName());
  Deque<TransactionConfig> transactionConfigs=transactionConfigThreadLocal.get();
  TransactionConfig transactionConfig=transactionConfigs.peek();
  Transactional transactional=method.getAnnotation(Transactional.class);
  if (transactional == null) {
    Assert.assertEquals(TransactionConfig.Factory.create(Propagation.SUPPORTS,new Class<?>[]{PortalException.class,SystemException.class}),transactionConfig);
    return;
  }
  Assert.assertEquals(TransactionConfig.Factory.create(transactional.isolation(),transactional.propagation(),transactional.readOnly(),transactional.timeout(),transactional.rollbackFor(),transactional.rollbackForClassName(),transactional.noRollbackFor(),transactional.noRollbackForClassName()),transactionConfig);
}

{
  MBMessageFlag mbMessageFlag=findByPrimaryKey(messageFlagId);
  int count=countByU_T_F(userId,threadId,flag);
  Session session=null;
  try {
    session=openSession();
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(5 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(4);
    }
    query.append(_SQL_SELECT_MBMESSAGEFLAG_WHERE);
    query.append(_FINDER_COLUMN_U_T_F_USERID_2);
    query.append(_FINDER_COLUMN_U_T_F_THREADID_2);
    query.append(_FINDER_COLUMN_U_T_F_FLAG_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
    String sql=query.toString();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userId);
    qPos.add(threadId);
    qPos.add(flag);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,orderByComparator,mbMessageFlag);
    MBMessageFlag[] array=new MBMessageFlagImpl[3];
    array[0]=(MBMessageFlag)objArray[0];
    array[1]=(MBMessageFlag)objArray[1];
    array[2]=(MBMessageFlag)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

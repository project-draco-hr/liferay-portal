{
  Object[] finderArgs=new Object[]{userId,messageId,flag};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_M_F,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(4);
      query.append(_SQL_SELECT_MBMESSAGEFLAG_WHERE);
      query.append(_FINDER_COLUMN_U_M_F_USERID_2);
      query.append(_FINDER_COLUMN_U_M_F_MESSAGEID_2);
      query.append(_FINDER_COLUMN_U_M_F_FLAG_2);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(messageId);
      qPos.add(flag);
      List<MBMessageFlag> list=q.list();
      result=list;
      MBMessageFlag mbMessageFlag=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_M_F,finderArgs,list);
      }
 else {
        mbMessageFlag=list.get(0);
        cacheResult(mbMessageFlag);
        if ((mbMessageFlag.getUserId() != userId) || (mbMessageFlag.getMessageId() != messageId) || (mbMessageFlag.getFlag() != flag)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_M_F,finderArgs,mbMessageFlag);
        }
      }
      return mbMessageFlag;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_M_F,finderArgs,new ArrayList<MBMessageFlag>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (MBMessageFlag)result;
    }
  }
}

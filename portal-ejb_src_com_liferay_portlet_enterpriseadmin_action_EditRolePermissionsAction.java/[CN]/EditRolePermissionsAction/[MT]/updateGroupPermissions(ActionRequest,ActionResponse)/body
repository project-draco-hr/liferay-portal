{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  long roleId=ParamUtil.getLong(req,"roleId");
  String portletResource=ParamUtil.getString(req,"portletResource");
  String modelResource=ParamUtil.getString(req,"modelResource");
  String selResource=modelResource;
  if (Validator.isNull(modelResource)) {
    selResource=portletResource;
  }
  int groupScopePos=ParamUtil.getInteger(req,"groupScopePos");
  String[] groupScopeActionIds=StringUtil.split(ParamUtil.getString(req,"groupScopeActionIds"));
  String actionId=groupScopeActionIds[groupScopePos];
  String[] addGroupIds=StringUtil.split(ParamUtil.getString(req,"addGroupIds"));
  String[] removeGroupIds=StringUtil.split(ParamUtil.getString(req,"removeGroupIds"));
  for (int i=0; i < addGroupIds.length; i++) {
    PermissionServiceUtil.setRolePermission(roleId,themeDisplay.getPortletGroupId(),selResource,ResourceImpl.SCOPE_GROUP,addGroupIds[i],actionId);
  }
  for (int i=0; i < removeGroupIds.length; i++) {
    PermissionServiceUtil.unsetRolePermission(roleId,themeDisplay.getPortletGroupId(),selResource,ResourceImpl.SCOPE_GROUP,removeGroupIds[i],actionId);
  }
  String redirect=ParamUtil.getString(req,"redirect");
  if (redirect.indexOf("groupScopePos=" + groupScopePos + "&") != -1) {
    SessionMessages.add(req,"request_processed");
  }
 else   if ((groupScopePos + 1) == groupScopeActionIds.length) {
    SessionMessages.add(req,"permissionsUpdated");
  }
  res.sendRedirect(redirect);
}

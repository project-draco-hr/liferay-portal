{
  try {
    SchedulerEngineUtil.unschedule(_schedulerEntry);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  for (int i=0; i < _indexers.size(); i++) {
    ObjectValuePair<LuceneIndexer,Thread> ovp=_indexers.get(i);
    LuceneIndexer indexer=ovp.getKey();
    Thread indexerThread=ovp.getValue();
    if ((indexer != null) && (!indexer.isFinished()) && (indexerThread != null)) {
      if (_log.isWarnEnabled()) {
        _log.warn("Waiting for Lucene indexer to shutdown");
      }
      indexer.halt();
      try {
        indexerThread.join(THREAD_TIMEOUT);
      }
 catch (      InterruptedException e) {
        _log.error("Lucene indexer shutdown interrupted",e);
      }
    }
  }
  super.destroy();
}

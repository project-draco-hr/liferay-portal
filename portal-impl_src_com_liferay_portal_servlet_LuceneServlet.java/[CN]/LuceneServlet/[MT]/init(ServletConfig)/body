{
  super.init(config);
  long[] companyIds=PortalInstances.getCompanyIds();
  for (int i=0; i < companyIds.length; i++) {
    long companyId=companyIds[0];
    if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.INDEX_ON_STARTUP))) {
      LuceneIndexer indexer=new LuceneIndexer(companyId);
      Thread indexerThread=null;
      if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.INDEX_WITH_THREAD)) || ServerDetector.isOrion()) {
        indexerThread=new Thread(indexer,THREAD_NAME + "." + companyId);
        indexerThread.setPriority(THREAD_PRIORITY);
        indexerThread.start();
      }
 else {
        indexer.reIndex();
      }
      _indexers.add(new ObjectValuePair(indexer,indexerThread));
    }
 else {
      Directory luceneDir=LuceneUtil.getLuceneDir(companyId);
      IndexWriter writer=null;
      try {
        if (luceneDir.fileExists("segments")) {
          writer=new IndexWriter(luceneDir,LuceneUtil.getAnalyzer(),false);
        }
 else {
          writer=new IndexWriter(luceneDir,LuceneUtil.getAnalyzer(),true);
        }
      }
 catch (      IOException ioe) {
        _log.error(ioe);
      }
 finally {
        if (writer != null) {
          try {
            writer.close();
          }
 catch (          IOException ioe) {
            _log.error(ioe);
          }
        }
      }
    }
    if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.LUCENE_STORE_JDBC_AUTO_CLEAN_UP))) {
      try {
        JobScheduler.schedule(new CleanUpJob());
      }
 catch (      SchedulerException se) {
        _log.error(se);
      }
    }
  }
}

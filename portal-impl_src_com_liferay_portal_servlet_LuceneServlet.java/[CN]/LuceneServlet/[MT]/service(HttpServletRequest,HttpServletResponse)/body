{
  String pathInfo=request.getPathInfo();
  if (!Validator.equals(LUCENE_DUMP_INDEX_URL_PATH,pathInfo)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Request for path : " + pathInfo + " is not supported.");
    }
    response.sendError(HttpServletResponse.SC_NOT_FOUND);
    return;
  }
  String token=request.getParameter(LUCENE_DUMP_INDEX_TOKEN);
  if (Validator.isNull(token)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Request does not have an index dump token");
    }
    response.sendError(HttpServletResponse.SC_FORBIDDEN);
    return;
  }
  boolean valid=TransientTokenUtil.checkToken(token);
  if (!valid) {
    if (_log.isWarnEnabled()) {
      _log.warn("Request does not have a valid index dump token");
    }
    response.sendError(HttpServletResponse.SC_UNAUTHORIZED);
  }
  String companyIdString=request.getParameter(LUCENE_DUMP_INDEX_COMPANY_ID);
  if (Validator.isNull(companyIdString)) {
    if (_log.isWarnEnabled()) {
      _log.warn("Request does not have an index dump companyId");
    }
    response.sendError(HttpServletResponse.SC_BAD_REQUEST);
    return;
  }
  long companyId=GetterUtil.getLong(companyIdString,-1);
  if (companyId == -1) {
    if (_log.isWarnEnabled()) {
      _log.warn("Request does not have a valid index dump companyId");
    }
    response.sendError(HttpServletResponse.SC_BAD_REQUEST);
    return;
  }
  LuceneHelperUtil.dumpIndex(companyId,response.getOutputStream());
}

{
  Name name=new NameImpl(user.getFullName());
  Person person=new PersonImpl(String.valueOf(user.getUserId()),user.getScreenName(),name);
  StringBundler sb=new StringBundler(4);
  sb.append(securityToken.getDomain());
  sb.append(PortalUtil.getPathFriendlyURLPublic());
  sb.append(StringPool.SLASH);
  sb.append(user.getScreenName());
  person.setProfileUrl(sb.toString());
  sb.setIndex(0);
  sb.append(securityToken.getDomain());
  sb.append(PortalUtil.getPathImage());
  sb.append("/user_");
  sb.append(user.isFemale() ? "female" : "male");
  sb.append("_portrait?img_id=");
  sb.append(user.getPortraitId());
  sb.append("&t=");
  sb.append(WebServerServletTokenUtil.getToken(user.getPortraitId()));
  person.setThumbnailUrl(sb.toString());
  if (fields.contains(Person.Field.ABOUT_ME.toString())) {
    person.setAboutMe(user.getComments());
  }
  if (fields.contains(Person.Field.AGE.toString())) {
    Calendar birthday=new GregorianCalendar();
    birthday.setTime(user.getBirthday());
    Calendar today=Calendar.getInstance();
    int age=today.get(Calendar.YEAR) - birthday.get(Calendar.YEAR);
    birthday.add(Calendar.YEAR,age);
    if (today.before(birthday)) {
      age--;
    }
    person.setAge(age);
  }
  if (fields.contains(Person.Field.BIRTHDAY.toString())) {
    person.setBirthday(user.getBirthday());
  }
  if (fields.contains(Person.Field.EMAILS)) {
    person.setEmails(getEmails(user));
  }
  if (fields.contains(Person.Field.GENDER.toString())) {
    if (user.isFemale()) {
      person.setGender(Gender.female);
    }
 else {
      person.setGender(Gender.male);
    }
  }
  if (fields.contains(Person.Field.NICKNAME.toString())) {
    person.setNickname(user.getScreenName());
  }
  if (fields.contains(Person.Field.PHONE_NUMBERS.toString())) {
    List<ListField> phoneNumbers=getPhoneNumbers(Contact.class.getName(),user.getContactId());
    person.setPhoneNumbers(phoneNumbers);
  }
  if (fields.contains(Person.Field.UTC_OFFSET.toString())) {
    TimeZone timeZone=user.getTimeZone();
    person.setUtcOffset(Long.valueOf(timeZone.getOffset(System.currentTimeMillis())));
  }
  if (securityToken.getOwnerId().equals(person.getId())) {
    person.setIsOwner(true);
  }
  if (securityToken.getViewerId().equals(person.getId())) {
    person.setIsViewer(true);
  }
  return person;
}

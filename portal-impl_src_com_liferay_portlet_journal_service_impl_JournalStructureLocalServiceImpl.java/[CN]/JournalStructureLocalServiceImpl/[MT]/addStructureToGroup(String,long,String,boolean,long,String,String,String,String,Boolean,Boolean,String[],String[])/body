{
  User user=userPersistence.findByPrimaryKey(userId);
  structureId=structureId.trim().toUpperCase();
  Date now=new Date();
  try {
    xsd=JournalUtil.formatXML(xsd);
  }
 catch (  Exception e) {
    throw new StructureXsdException();
  }
  validate(groupId,structureId,autoStructureId,name,description,xsd,parentStructureId);
  if (autoStructureId) {
    structureId=String.valueOf(counterLocalService.increment());
  }
  long id=counterLocalService.increment();
  JournalStructure structure=journalStructurePersistence.create(id);
  structure.setUuid(uuid);
  structure.setGroupId(groupId);
  structure.setCompanyId(user.getCompanyId());
  structure.setUserId(user.getUserId());
  structure.setUserName(user.getFullName());
  structure.setCreateDate(now);
  structure.setModifiedDate(now);
  structure.setStructureId(structureId);
  structure.setName(name);
  structure.setDescription(description);
  structure.setXsd(xsd);
  structure.setParentStructureId(parentStructureId);
  journalStructurePersistence.update(structure,false);
  if ((addCommunityPermissions != null) && (addGuestPermissions != null)) {
    addStructureResources(structure,addCommunityPermissions.booleanValue(),addGuestPermissions.booleanValue());
  }
 else {
    addStructureResources(structure,communityPermissions,guestPermissions);
  }
  return structure;
}

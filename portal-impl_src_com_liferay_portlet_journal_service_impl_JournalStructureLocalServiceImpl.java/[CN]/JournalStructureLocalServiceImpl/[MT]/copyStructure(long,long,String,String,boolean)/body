{
  User user=userPersistence.findByPrimaryKey(userId);
  oldStructureId=StringUtil.toUpperCase(oldStructureId.trim());
  newStructureId=StringUtil.toUpperCase(newStructureId.trim());
  Date now=new Date();
  JournalStructure oldStructure=doGetStructure(groupId,oldStructureId);
  if (autoStructureId) {
    newStructureId=String.valueOf(counterLocalService.increment());
  }
 else {
    validateStructureId(newStructureId);
    JournalStructure newStructure=fetchStructure(groupId,newStructureId);
    if (newStructure != null) {
      StringBundler sb=new StringBundler(5);
      sb.append("{groupId=");
      sb.append(groupId);
      sb.append(", structureId=");
      sb.append(newStructureId);
      sb.append("}");
      throw new DuplicateStructureIdException(sb.toString());
    }
  }
  long id=counterLocalService.increment();
  JournalStructure newStructure=createJournalStructure(id);
  newStructure.setGroupId(groupId);
  newStructure.setCompanyId(user.getCompanyId());
  newStructure.setUserId(user.getUserId());
  newStructure.setUserName(user.getFullName());
  newStructure.setCreateDate(now);
  newStructure.setModifiedDate(now);
  newStructure.setStructureId(newStructureId);
  newStructure.setNameMap(oldStructure.getNameMap());
  newStructure.setDescriptionMap(oldStructure.getDescriptionMap());
  newStructure.setXsd(oldStructure.getXsd());
  newStructure.setExpandoBridgeAttributes(oldStructure);
  return updateStructure(newStructure);
}

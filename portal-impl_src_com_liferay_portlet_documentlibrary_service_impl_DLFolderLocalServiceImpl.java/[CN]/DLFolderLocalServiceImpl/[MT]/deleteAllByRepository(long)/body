{
  Repository repository=RepositoryLocalServiceUtil.fetchRepository(repositoryId);
  long groupId=repositoryId;
  if (repository != null) {
    groupId=repository.getGroupId();
  }
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  List<DLFolder> dlFolders=dlFolderPersistence.findByRepositoryId(repositoryId);
  for (  DLFolder dlFolder : dlFolders) {
    dlFolderLocalService.deleteFolder(dlFolder);
  }
  if (repository != null) {
    dlFileEntryLocalService.deleteFileEntriesByRepository(repository.getRepositoryId(),repository.getDlFolderId());
  }
 else {
    dlFileEntryLocalService.deleteFileEntries(groupId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
    dlFileShortcutLocalService.deleteFileShortcuts(groupId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  }
  try {
    DLStoreUtil.deleteDirectory(group.getCompanyId(),repositoryId,StringPool.BLANK);
  }
 catch (  NoSuchDirectoryException nsde) {
    if (_log.isDebugEnabled()) {
      _log.debug(nsde.getMessage());
    }
  }
}

{
  Repository repository=repositoryLocalService.fetchRepository(repositoryId);
  long groupId=repositoryId;
  if (repository != null) {
    groupId=repository.getGroupId();
  }
  Group group=groupLocalService.getGroup(groupId);
  RepositoryEventTrigger repositoryEventTrigger=RepositoryUtil.getRepositoryEventTrigger(repositoryId);
  List<DLFolder> dlFolders=dlFolderPersistence.findByRepositoryId(repositoryId);
  for (  DLFolder dlFolder : dlFolders) {
    deleteFolderEntries(dlFolder,true);
    repositoryEventTrigger.trigger(RepositoryEventType.Delete.class,Folder.class,new LiferayFolder(dlFolder));
  }
  if (repository != null) {
    dlFileEntryLocalService.deleteRepositoryFileEntries(repository.getRepositoryId(),repository.getDlFolderId());
  }
 else {
    dlFileEntryLocalService.deleteFileEntries(groupId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
    dlFileShortcutLocalService.deleteFileShortcuts(groupId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  }
  try {
    DLStoreUtil.deleteDirectory(group.getCompanyId(),repositoryId,StringPool.BLANK);
  }
 catch (  NoSuchDirectoryException nsde) {
    if (_log.isDebugEnabled()) {
      _log.debug(nsde.getMessage());
    }
  }
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  DLFolder dlFolder=dlFolderPersistence.findByPrimaryKey(folderId);
  int oldStatus=dlFolder.getStatus();
  dlFolder.setStatus(status);
  dlFolder.setStatusByUserId(user.getUserId());
  dlFolder.setStatusByUserName(user.getFullName());
  dlFolder.setStatusDate(new Date());
  dlFolderPersistence.update(dlFolder);
  QueryDefinition queryDefinition=new QueryDefinition(WorkflowConstants.STATUS_ANY);
  List<Object> foldersAndFileEntriesAndFileShortcuts=getFoldersAndFileEntriesAndFileShortcuts(dlFolder.getGroupId(),folderId,null,false,queryDefinition);
  dlAppHelperLocalService.updateDependentStatus(user,foldersAndFileEntriesAndFileShortcuts,status);
  if (status == WorkflowConstants.STATUS_APPROVED) {
    assetEntryLocalService.updateVisible(DLFolder.class.getName(),dlFolder.getFolderId(),true);
  }
 else   if (status == WorkflowConstants.STATUS_IN_TRASH) {
    assetEntryLocalService.updateVisible(DLFolder.class.getName(),dlFolder.getFolderId(),false);
  }
  if (status == WorkflowConstants.STATUS_IN_TRASH) {
    UnicodeProperties typeSettingsProperties=new UnicodeProperties();
    typeSettingsProperties.put("title",dlFolder.getName());
    trashEntryLocalService.addTrashEntry(userId,dlFolder.getGroupId(),DLFolderConstants.getClassName(),dlFolder.getFolderId(),WorkflowConstants.STATUS_APPROVED,null,typeSettingsProperties);
  }
 else {
    trashEntryLocalService.deleteEntry(DLFolderConstants.getClassName(),dlFolder.getFolderId());
  }
  if (((status == WorkflowConstants.STATUS_APPROVED) || (status == WorkflowConstants.STATUS_IN_TRASH) || (oldStatus == WorkflowConstants.STATUS_IN_TRASH)) && ((serviceContext == null) || serviceContext.isIndexingEnabled())) {
    Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(DLFolderConstants.getClassName());
    indexer.reindex(dlFolder);
  }
  return dlFolder;
}

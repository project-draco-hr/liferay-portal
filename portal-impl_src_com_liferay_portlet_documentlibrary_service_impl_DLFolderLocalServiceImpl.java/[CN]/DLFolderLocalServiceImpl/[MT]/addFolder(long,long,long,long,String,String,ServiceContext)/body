{
  User user=userPersistence.findByPrimaryKey(userId);
  parentFolderId=getParentFolderId(groupId,parentFolderId);
  Date now=new Date();
  validateFolder(groupId,parentFolderId,name);
  long folderId=counterLocalService.increment();
  DLFolder dlFolder=dlFolderPersistence.create(folderId);
  dlFolder.setUuid(serviceContext.getUuid());
  dlFolder.setGroupId(groupId);
  dlFolder.setCompanyId(user.getCompanyId());
  dlFolder.setUserId(user.getUserId());
  dlFolder.setCreateDate(serviceContext.getCreateDate(now));
  dlFolder.setModifiedDate(serviceContext.getModifiedDate(now));
  dlFolder.setRepositoryId(repositoryId);
  dlFolder.setMountPoint(GetterUtil.getBoolean(serviceContext.getAttribute("mountPoint")));
  dlFolder.setParentFolderId(parentFolderId);
  dlFolder.setName(name);
  dlFolder.setDescription(description);
  dlFolder.setExpandoBridgeAttributes(serviceContext);
  dlFolderPersistence.update(dlFolder,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addFolderResources(dlFolder,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addFolderResources(dlFolder,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  if (parentFolderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    DLFolder parentDLFolder=dlFolderPersistence.findByPrimaryKey(parentFolderId);
    parentDLFolder.setLastPostDate(now);
    dlFolderPersistence.update(parentDLFolder,false);
  }
  dlAppHelperLocalService.addFolder(new LiferayFolder(dlFolder),serviceContext);
  return dlFolder;
}

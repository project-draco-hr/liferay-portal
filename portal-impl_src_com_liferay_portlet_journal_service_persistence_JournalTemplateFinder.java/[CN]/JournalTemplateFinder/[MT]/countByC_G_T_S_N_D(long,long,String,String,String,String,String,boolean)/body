{
  templateId=StringUtil.upperCase(templateId);
  name=StringUtil.lowerCase(name);
  description=StringUtil.lowerCase(description);
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=CustomSQLUtil.get(COUNT_BY_C_G_T_S_N_D);
    if (groupId <= 0) {
      sql=StringUtil.replace(sql,"(groupId = ?) AND","");
    }
    if (structureIdComparator.equals(StringPool.NOT_EQUAL)) {
      String replaceWith="structureId != ? AND structureId IS NOT NULL";
      if (CustomSQLUtil.isVendorOracle()) {
        replaceWith="structureId IS NOT NULL";
      }
      sql=StringUtil.replace(sql,"structureId = ? [$AND_OR_NULL_CHECK$]",replaceWith);
    }
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(HibernateUtil.getCountColumnName(),Hibernate.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    if (groupId > 0) {
      qPos.add(groupId);
    }
    qPos.add(templateId);
    qPos.add(templateId);
    if (structureIdComparator.equals(StringPool.NOT_EQUAL)) {
      if (CustomSQLUtil.isVendorOracle()) {
      }
 else {
        qPos.add(structureId);
      }
    }
 else {
      qPos.add(structureId);
    }
    if (structureIdComparator.equals(StringPool.EQUAL)) {
      qPos.add(structureId);
    }
    qPos.add(name);
    qPos.add(name);
    qPos.add(description);
    qPos.add(description);
    Iterator itr=q.list().iterator();
    if (itr.hasNext()) {
      Long count=(Long)itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

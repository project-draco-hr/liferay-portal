{
  if (isSkeletonClass) {
    if (methodName.equals("getOperationDescByName") || methodName.equals("getOperationDescs"))     return;
  }
  Method[] methods=getMethods(implClass);
  for (int i=0; i < methods.length; i++) {
    Method method=methods[i];
    if (Modifier.isPublic(method.getModifiers()) && method.getName().equals(methodName) && !isServiceLifeCycleMethod(implClass,method)) {
      createOperationForMethod(method);
    }
  }
  Class superClass=implClass.getSuperclass();
  if (superClass != null && !superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) {
    createOperationsForName(superClass,methodName);
  }
}

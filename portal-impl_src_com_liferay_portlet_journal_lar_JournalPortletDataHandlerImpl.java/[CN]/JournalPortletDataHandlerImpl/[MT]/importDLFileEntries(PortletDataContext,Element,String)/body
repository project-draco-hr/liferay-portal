{
  Map<Long,Long> fileEntryPKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(DLFileEntry.class);
  List<Element> dlReferenceEls=parentEl.elements("dl-reference");
  for (  Element dlReferenceEl : dlReferenceEls) {
    String dlReferencePath=dlReferenceEl.attributeValue("path");
    DLFileEntry fileEntry=(DLFileEntry)context.getZipEntryAsObject(dlReferencePath);
    if (fileEntry == null) {
      continue;
    }
    long fileEntryId=MapUtil.getLong(fileEntryPKs,fileEntry.getFileEntryId(),fileEntry.getFileEntryId());
    fileEntry=DLFileEntryUtil.fetchByPrimaryKey(fileEntryId);
    if (fileEntry == null) {
      continue;
    }
    String dlReference="[$dl-reference=" + dlReferencePath + "$]";
    StringBundler sb=new StringBundler(6);
    sb.append("/documents/");
    sb.append(context.getScopeGroupId());
    sb.append(StringPool.SLASH);
    sb.append(fileEntry.getFolderId());
    sb.append(StringPool.SLASH);
    sb.append(HttpUtil.encodeURL(HtmlUtil.unescape(fileEntry.getTitle())));
    content=StringUtil.replace(content,dlReference,sb.toString());
  }
  return content;
}

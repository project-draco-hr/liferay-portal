{
  if (!context.isWithinDateRange(article.getModifiedDate())) {
    return;
  }
  String path=getArticlePath(context,article);
  if (!context.isPathNotProcessed(path)) {
    return;
  }
  Element articleEl=articlesEl.addElement("article");
  articleEl.addAttribute("path",path);
  if (article.isSmallImage()) {
    String smallImagePath=getArticleSmallImagePath(context,article);
    articleEl.addAttribute("small-image-path",smallImagePath);
    Image smallImage=ImageUtil.fetchByPrimaryKey(article.getSmallImageId());
    article.setSmallImageType(smallImage.getType());
    context.addZipEntry(smallImagePath,smallImage.getTextObj());
  }
  if (context.getBooleanParameter(_NAMESPACE,"images")) {
    String imagePath=getArticleImagePath(context,article);
    articleEl.addAttribute("image-path",imagePath);
    List<JournalArticleImage> articleImages=JournalArticleImageUtil.findByG_A_V(context.getGroupId(),article.getArticleId(),article.getVersion());
    for (    JournalArticleImage articleImage : articleImages) {
      try {
        Image image=ImageUtil.findByPrimaryKey(articleImage.getArticleImageId());
        context.addZipEntry(getArticleImagePath(context,article,articleImage,image),image.getTextObj());
      }
 catch (      NoSuchImageException nsie) {
      }
    }
  }
  if (context.getBooleanParameter(_NAMESPACE,"comments")) {
    context.addComments(JournalArticle.class,article.getResourcePrimKey());
  }
  if (context.getBooleanParameter(_NAMESPACE,"ratings")) {
    context.addRatingsEntries(JournalArticle.class,article.getResourcePrimKey());
  }
  if (context.getBooleanParameter(_NAMESPACE,"tags")) {
    context.addTagsEntries(JournalArticle.class,article.getResourcePrimKey());
  }
  try {
    Document doc=SAXReaderUtil.read(article.getContent());
    Element root=doc.getRootElement();
    if (context.getBooleanParameter(_NAMESPACE,"embedded-assets")) {
      List<Element> contentEls=root.elements("static-content");
      for (      Element contentEl : contentEls) {
        String text=contentEl.getText();
        text=exportDLFileEntries(context,dlFoldersEl,dlFileEntriesEl,dlFileRanks,text);
        text=exportIGImages(context,igFoldersEl,igImagesEl,text);
        contentEl.setText(text);
      }
      XPath xpathSelector=SAXReaderUtil.createXPath("//dynamic-content");
      List<Node> contentNodes=xpathSelector.selectNodes(doc);
      for (      Node contentNode : contentNodes) {
        String text=contentNode.getText();
        text=exportDLFileEntries(context,dlFoldersEl,dlFileEntriesEl,dlFileRanks,text);
        text=exportIGImages(context,igFoldersEl,igImagesEl,text);
        contentNode.setText(text);
      }
    }
    article.setContent(doc.formattedString());
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
  article.setUserUuid(article.getUserUuid());
  article.setApprovedByUserUuid(article.getApprovedByUserUuid());
  context.addZipEntry(path,article);
}

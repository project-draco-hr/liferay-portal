{
  boolean importImages=context.getBooleanParameter(_NAMESPACE,_IMAGES);
  boolean importComments=context.getBooleanParameter(_NAMESPACE,_COMMENTS);
  boolean importRatings=context.getBooleanParameter(_NAMESPACE,_RATINGS);
  boolean importTags=context.getBooleanParameter(_NAMESPACE,_TAGS);
  try {
    XStream xStream=new XStream();
    Document doc=PortalUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    Element el=root.element("journal-structures").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map structurePKs=CollectionFactory.getHashMap();
    List structures=(List)xStream.fromXML(tempDoc.asXML());
    Iterator itr=structures.iterator();
    while (itr.hasNext()) {
      JournalStructure structure=(JournalStructure)itr.next();
      importStructure(context,structurePKs,structure);
    }
    el=root.element("journal-templates").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    Map templatePKs=CollectionFactory.getHashMap();
    List templates=(List)xStream.fromXML(tempDoc.asXML());
    itr=templates.iterator();
    while (itr.hasNext()) {
      JournalTemplate template=(JournalTemplate)itr.next();
      importTemplate(context,structurePKs,templatePKs,template);
    }
    el=root.element("journal-articles").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List articles=(List)xStream.fromXML(tempDoc.asXML());
    itr=articles.iterator();
    while (itr.hasNext()) {
      JournalArticle article=(JournalArticle)itr.next();
      importArticle(context,importImages,importComments,importRatings,importTags,structurePKs,templatePKs,article);
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

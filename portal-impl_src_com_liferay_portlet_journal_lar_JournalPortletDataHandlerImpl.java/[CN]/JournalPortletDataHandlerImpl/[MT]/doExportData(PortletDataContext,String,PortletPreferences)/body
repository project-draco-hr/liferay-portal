{
  portletDataContext.addPermissions("com.liferay.portlet.journal",portletDataContext.getScopeGroupId());
  Document document=SAXReaderUtil.createDocument();
  Element rootElement=document.addElement("journal-data");
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  Element articlesElement=rootElement.addElement("articles");
  Element dlFilesElement=rootElement.addElement("dl-file-entries");
  Element dlFileEntryTypesElement=rootElement.addElement("dl-file-entry-types");
  Element dlFileRanksElement=rootElement.addElement("dl-file-ranks");
  Element dlFoldersElement=rootElement.addElement("dl-folders");
  Element feedsElement=rootElement.addElement("feeds");
  Element foldersElement=rootElement.addElement("folders");
  Element structuresElement=rootElement.addElement("structures");
  Element templatesElement=rootElement.addElement("templates");
  List<JournalStructure> structures=JournalStructureUtil.findByGroupId(portletDataContext.getScopeGroupId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,new StructurePKComparator(true));
  for (  JournalStructure structure : structures) {
    if (portletDataContext.isWithinDateRange(structure.getModifiedDate())) {
      exportStructure(portletDataContext,structuresElement,structure);
    }
  }
  List<JournalTemplate> templates=JournalTemplateUtil.findByGroupId(portletDataContext.getScopeGroupId());
  for (  JournalTemplate template : templates) {
    if (portletDataContext.isWithinDateRange(template.getModifiedDate())) {
      exportTemplate(portletDataContext,templatesElement,dlFileEntryTypesElement,dlFoldersElement,dlFilesElement,dlFileRanksElement,template);
    }
  }
  List<JournalFeed> feeds=JournalFeedUtil.findByGroupId(portletDataContext.getScopeGroupId());
  for (  JournalFeed feed : feeds) {
    if (portletDataContext.isWithinDateRange(feed.getModifiedDate())) {
      exportFeed(portletDataContext,feedsElement,feed);
    }
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"web-content")) {
    List<JournalFolder> folders=JournalFolderUtil.findByGroupId(portletDataContext.getScopeGroupId());
    for (    JournalFolder folder : folders) {
      exportFolder(portletDataContext,foldersElement,articlesElement,structuresElement,templatesElement,dlFileEntryTypesElement,dlFoldersElement,dlFilesElement,dlFileRanksElement,folder,true);
    }
    List<JournalArticle> articles=JournalArticleUtil.findByG_F(portletDataContext.getScopeGroupId(),JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new ArticleIDComparator(true));
    for (    JournalArticle article : articles) {
      exportArticle(portletDataContext,articlesElement,structuresElement,templatesElement,dlFileEntryTypesElement,dlFoldersElement,dlFilesElement,dlFileRanksElement,article,null,true);
    }
  }
  return document.formattedString();
}

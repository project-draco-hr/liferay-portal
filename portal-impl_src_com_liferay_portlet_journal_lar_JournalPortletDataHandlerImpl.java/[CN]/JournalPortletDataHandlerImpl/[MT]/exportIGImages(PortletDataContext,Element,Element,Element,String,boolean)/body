{
  Group group=GroupLocalServiceUtil.getGroup(portletDataContext.getGroupId());
  if (group.isStagingGroup()) {
    group=group.getLiveGroup();
  }
  if (group.isStaged() && !group.isStagedRemotely() && !group.isStagedPortlet(PortletKeys.IMAGE_GALLERY)) {
    return content;
  }
  StringBuilder sb=new StringBuilder(content);
  int beginPos=content.length();
  while (true) {
    beginPos=content.lastIndexOf("/image/image_gallery?",beginPos);
    if (beginPos == -1) {
      return sb.toString();
    }
    int endPos1=content.indexOf(CharPool.APOSTROPHE,beginPos);
    int endPos2=content.indexOf(CharPool.CLOSE_BRACKET,beginPos);
    int endPos3=content.indexOf(CharPool.CLOSE_PARENTHESIS,beginPos);
    int endPos4=content.indexOf(CharPool.LESS_THAN,beginPos);
    int endPos5=content.indexOf(CharPool.QUOTE,beginPos);
    int endPos6=content.indexOf(CharPool.SPACE,beginPos);
    int endPos=endPos1;
    if ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {
      endPos=endPos2;
    }
    if ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {
      endPos=endPos3;
    }
    if ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {
      endPos=endPos4;
    }
    if ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {
      endPos=endPos5;
    }
    if ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {
      endPos=endPos6;
    }
    if ((beginPos == -1) || (endPos == -1)) {
      break;
    }
    try {
      String oldParameters=content.substring(beginPos,endPos);
      oldParameters=oldParameters.substring(oldParameters.indexOf(StringPool.QUESTION) + 1);
      while (oldParameters.contains(StringPool.AMPERSAND_ENCODED)) {
        oldParameters=oldParameters.replace(StringPool.AMPERSAND_ENCODED,StringPool.AMPERSAND);
      }
      Map<String,String> map=MapUtil.toLinkedHashMap(oldParameters.split(StringPool.AMPERSAND),StringPool.EQUAL);
      IGImage image=null;
      if (map.containsKey("uuid")) {
        String uuid=map.get("uuid");
        String groupIdString=map.get("groupId");
        long groupId=GetterUtil.getLong(groupIdString);
        if (groupIdString.equals("@group_id@")) {
          groupId=portletDataContext.getScopeGroupId();
        }
        image=IGImageLocalServiceUtil.getImageByUuidAndGroupId(uuid,groupId);
      }
 else       if (map.containsKey("image_id") || map.containsKey("img_id") || map.containsKey("i_id")) {
        long imageId=GetterUtil.getLong(map.get("image_id"));
        if (imageId <= 0) {
          imageId=GetterUtil.getLong(map.get("img_id"));
          if (imageId <= 0) {
            imageId=GetterUtil.getLong(map.get("i_id"));
          }
        }
        try {
          image=IGImageLocalServiceUtil.getImageByLargeImageId(imageId);
        }
 catch (        Exception e) {
          image=IGImageLocalServiceUtil.getImageBySmallImageId(imageId);
        }
      }
      if (image == null) {
        beginPos--;
        continue;
      }
      String path=IGPortletDataHandlerImpl.getImagePath(portletDataContext,image);
      Element igReferenceElement=entityElement.addElement("ig-reference");
      igReferenceElement.addAttribute("path",path);
      IGPortletDataHandlerImpl.exportImage(portletDataContext,igFoldersElement,igImagesElement,image,checkDateRange);
      String igReference="[$ig-reference=" + path + "$]";
      sb.replace(beginPos,endPos,igReference);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e);
      }
    }
    beginPos--;
  }
  return sb.toString();
}

{
  portletDataContext.importPermissions("com.liferay.portlet.journal",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element dlFoldersElement=rootElement.element("dl-folders");
  List<Element> dlFolderElements=dlFoldersElement.elements("folder");
  for (  Element dlFolderElement : dlFolderElements) {
    DLPortletDataHandlerImpl.importFolder(portletDataContext,dlFolderElement);
  }
  Element dlFileEntriesElement=rootElement.element("dl-file-entries");
  List<Element> dlFileEntryElements=dlFileEntriesElement.elements("file-entry");
  for (  Element dlFileEntryElement : dlFileEntryElements) {
    DLPortletDataHandlerImpl.importFileEntry(portletDataContext,dlFileEntryElement);
  }
  Element dlFileRanksElement=rootElement.element("dl-file-ranks");
  List<Element> dlFileRankElements=dlFileRanksElement.elements("file-rank");
  for (  Element dlFileRankElement : dlFileRankElements) {
    DLPortletDataHandlerImpl.importFileRank(portletDataContext,dlFileRankElement);
  }
  Element igFoldersElement=rootElement.element("ig-folders");
  List<Element> igFolderElements=igFoldersElement.elements("folder");
  for (  Element igFolderElement : igFolderElements) {
    IGPortletDataHandlerImpl.importFolder(portletDataContext,igFolderElement);
  }
  Element igImagesElement=rootElement.element("ig-images");
  List<Element> igImageElements=igImagesElement.elements("image");
  for (  Element igImageElement : igImageElements) {
    IGPortletDataHandlerImpl.importImage(portletDataContext,igImageElement);
  }
  Element structuresElement=rootElement.element("structures");
  List<Element> structureElements=structuresElement.elements("structure");
  for (  Element structureElement : structureElements) {
    importStructure(portletDataContext,structureElement);
  }
  Element templatesElement=rootElement.element("templates");
  List<Element> templateElements=templatesElement.elements("template");
  for (  Element templateElement : templateElements) {
    importTemplate(portletDataContext,templateElement);
  }
  Element feedsElement=rootElement.element("feeds");
  List<Element> feedElements=feedsElement.elements("feed");
  for (  Element feedElement : feedElements) {
    importFeed(portletDataContext,feedElement);
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"articles")) {
    Element articlesElement=rootElement.element("articles");
    List<Element> articleElements=articlesElement.elements("article");
    for (    Element articleElement : articleElements) {
      importArticle(portletDataContext,articleElement);
    }
  }
  return portletPreferences;
}

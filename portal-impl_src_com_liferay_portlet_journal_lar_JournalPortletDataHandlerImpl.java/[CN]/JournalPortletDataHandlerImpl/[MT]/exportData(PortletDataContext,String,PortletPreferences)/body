{
  try {
    XStream xStream=new XStream();
    Document doc=DocumentHelper.createDocument();
    Element root=doc.addElement("journal-data");
    root.addAttribute("group-id",String.valueOf(context.getGroupId()));
    List<JournalStructure> structures=JournalStructureUtil.findByGroupId(context.getGroupId());
    Iterator<JournalStructure> structuresItr=structures.iterator();
    while (structuresItr.hasNext()) {
      JournalStructure structure=structuresItr.next();
      if (context.addPrimaryKey(JournalStructure.class,structure.getPrimaryKeyObj())) {
        structuresItr.remove();
      }
 else {
        exportStructure(structure);
      }
    }
    String xml=xStream.toXML(structures);
    Document tempDoc=PortalUtil.readDocumentFromXML(xml);
    Element el=root.addElement("journal-structures");
    el.content().add(tempDoc.getRootElement().createCopy());
    List<JournalTemplate> templates=JournalTemplateUtil.findByGroupId(context.getGroupId());
    Iterator<JournalTemplate> templatesItr=templates.iterator();
    while (templatesItr.hasNext()) {
      JournalTemplate template=templatesItr.next();
      if (context.addPrimaryKey(JournalTemplate.class,template.getPrimaryKeyObj())) {
        templatesItr.remove();
      }
 else {
        exportTemplate(context,template);
      }
    }
    xml=xStream.toXML(templates);
    el=root.addElement("journal-templates");
    tempDoc=PortalUtil.readDocumentFromXML(xml);
    el.content().add(tempDoc.getRootElement().createCopy());
    List<JournalArticle> articles=JournalArticleUtil.findByGroupId(context.getGroupId());
    Iterator<JournalArticle> articlesItr=articles.iterator();
    while (articlesItr.hasNext()) {
      JournalArticle article=articlesItr.next();
      if (context.addPrimaryKey(JournalArticle.class,article.getPrimaryKeyObj())) {
        articlesItr.remove();
      }
 else {
        exportArticle(context,article);
      }
    }
    xml=xStream.toXML(articles);
    el=root.addElement("journal-articles");
    tempDoc=PortalUtil.readDocumentFromXML(xml);
    el.content().add(tempDoc.getRootElement().createCopy());
    return doc.asXML();
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

{
  try {
    Document doc=SAXReaderUtil.createDocument();
    Element root=doc.addElement("journal-data");
    root.addAttribute("group-id",String.valueOf(context.getGroupId()));
    Element structuresEl=root.addElement("structures");
    List<JournalStructure> structures=JournalStructureUtil.findByGroupId(context.getGroupId());
    for (    JournalStructure structure : structures) {
      exportStructure(context,structuresEl,structure);
    }
    Element templatesEl=root.addElement("templates");
    Element dlFoldersEl=root.addElement("dl-folders");
    Element dlFilesEl=root.addElement("dl-file-entries");
    Element dlFileRanksEl=root.addElement("dl-file-ranks");
    Element igFoldersEl=root.addElement("ig-folders");
    Element igImagesEl=root.addElement("ig-images");
    List<JournalTemplate> templates=JournalTemplateUtil.findByGroupId(context.getGroupId());
    for (    JournalTemplate template : templates) {
      exportTemplate(context,templatesEl,dlFoldersEl,dlFilesEl,dlFileRanksEl,igFoldersEl,igImagesEl,template);
    }
    Element feedsEl=root.addElement("feeds");
    List<JournalFeed> feeds=JournalFeedUtil.findByGroupId(context.getGroupId());
    for (    JournalFeed feed : feeds) {
      if (context.isWithinDateRange(feed.getModifiedDate())) {
        exportFeed(context,feedsEl,feed);
      }
    }
    Element articlesEl=root.addElement("articles");
    if (context.getBooleanParameter(_NAMESPACE,"articles")) {
      List<JournalArticle> articles=JournalArticleUtil.findByGroupId(context.getGroupId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,new ArticleIDComparator(true));
      for (      JournalArticle article : articles) {
        exportArticle(context,articlesEl,dlFoldersEl,dlFilesEl,dlFileRanksEl,igFoldersEl,igImagesEl,article);
      }
    }
    context.addPermissions("com.liferay.portlet.journal",context.getGroupId());
    return doc.formattedString();
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

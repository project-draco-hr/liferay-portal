{
  List<String> oldLinksToLayout=new ArrayList<String>();
  List<String> newLinksToLayout=new ArrayList<String>();
  Matcher matcher=_importLinksToLayoutPattern.matcher(content);
  while (matcher.find()) {
    long oldLayoutId=GetterUtil.getLong(matcher.group(1));
    long newLayoutId=oldLayoutId;
    String type=matcher.group(2);
    boolean privateLayout=type.startsWith("private");
    String layoutUuid=matcher.group(3);
    String friendlyURL=matcher.group(4);
    try {
      Layout layout=LayoutUtil.fetchByUUID_G_P(layoutUuid,portletDataContext.getScopeGroupId(),privateLayout);
      if (layout == null) {
        layout=LayoutUtil.fetchByG_P_F(portletDataContext.getScopeGroupId(),privateLayout,friendlyURL);
      }
      if (layout == null) {
        layout=LayoutUtil.fetchByG_P_L(portletDataContext.getScopeGroupId(),privateLayout,oldLayoutId);
      }
      if (layout == null) {
        if (_log.isWarnEnabled()) {
          StringBundler sb=new StringBundler(9);
          sb.append("Unable to get layout with UUID ");
          sb.append(layoutUuid);
          sb.append(", friendly URL ");
          sb.append(friendlyURL);
          sb.append(", or ");
          sb.append("layoutId ");
          sb.append(oldLayoutId);
          sb.append(" in group ");
          sb.append(portletDataContext.getScopeGroupId());
          _log.warn(sb.toString());
        }
      }
 else {
        newLayoutId=layout.getLayoutId();
      }
    }
 catch (    SystemException se) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to get layout in group " + portletDataContext.getScopeGroupId(),se);
      }
    }
    String oldLinkToLayout=matcher.group(0);
    StringBundler sb=new StringBundler(4);
    sb.append(StringPool.AT);
    sb.append(layoutUuid);
    sb.append(StringPool.AT);
    sb.append(friendlyURL);
    String newLinkToLayout=StringUtil.replace(oldLinkToLayout,new String[]{sb.toString(),String.valueOf(oldLayoutId)},new String[]{StringPool.BLANK,String.valueOf(newLayoutId)});
    oldLinksToLayout.add(oldLinkToLayout);
    newLinksToLayout.add(newLinkToLayout);
  }
  content=StringUtil.replace(content,ArrayUtil.toStringArray(oldLinksToLayout.toArray()),ArrayUtil.toStringArray(newLinksToLayout.toArray()));
  return content;
}

{
  Group group=null;
  try {
    group=GroupLocalServiceUtil.getGroup(context.getScopeGroupId());
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e);
    }
    return content;
  }
  StringBuilder sb=new StringBuilder(content);
  String friendlyURLPrivateGroupPath=PropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_GROUP_SERVLET_MAPPING;
  String friendlyURLPrivateUserPath=PropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_USER_SERVLET_MAPPING;
  String friendlyURLPublicPath=PropsValues.LAYOUT_FRIENDLY_URL_PUBLIC_SERVLET_MAPPING;
  String href="href=";
  int beginPos=content.length();
  while (true) {
    int hrefLength=href.length();
    beginPos=content.lastIndexOf(href,beginPos);
    if (beginPos == -1) {
      break;
    }
    char c=content.charAt(beginPos + hrefLength);
    if ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {
      hrefLength++;
    }
    int endPos1=content.indexOf(CharPool.APOSTROPHE,beginPos + hrefLength);
    int endPos2=content.indexOf(CharPool.CLOSE_BRACKET,beginPos + hrefLength);
    int endPos3=content.indexOf(CharPool.CLOSE_PARENTHESIS,beginPos + hrefLength);
    int endPos4=content.indexOf(CharPool.LESS_THAN,beginPos + hrefLength);
    int endPos5=content.indexOf(CharPool.QUOTE,beginPos + hrefLength);
    int endPos6=content.indexOf(CharPool.SPACE,beginPos + hrefLength);
    int endPos=endPos1;
    if ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {
      endPos=endPos2;
    }
    if ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {
      endPos=endPos3;
    }
    if ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {
      endPos=endPos4;
    }
    if ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {
      endPos=endPos5;
    }
    if ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {
      endPos=endPos6;
    }
    if (endPos == -1) {
      beginPos--;
      continue;
    }
    String url=content.substring(beginPos + hrefLength,endPos);
    if (!url.startsWith(friendlyURLPrivateGroupPath) && !url.startsWith(friendlyURLPrivateUserPath) && !url.startsWith(friendlyURLPublicPath)) {
      beginPos--;
      continue;
    }
    int beginGroupPos=content.indexOf(CharPool.SLASH,beginPos + hrefLength + 1);
    if (beginGroupPos == -1) {
      beginPos--;
      continue;
    }
    int endGroupPos=content.indexOf(CharPool.SLASH,beginGroupPos + 1);
    if (endGroupPos == -1) {
      beginPos--;
      continue;
    }
    String groupFriendlyURL=content.substring(beginGroupPos,endGroupPos);
    if (groupFriendlyURL.equals(group.getFriendlyURL())) {
      sb.replace(beginGroupPos,endGroupPos,"@data_handler_group_friendly_url@");
    }
    beginPos--;
  }
  return sb.toString();
}

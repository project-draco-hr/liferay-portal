{
  List<String> paths=portletDataContext.getDeletionEntries(JournalStructure.class.getName());
  for (  String path : paths) {
    if (portletDataContext.isPathNotProcessed(path)) {
      DeletionEntry deletionEntry=(DeletionEntry)portletDataContext.getZipEntryAsObject(path);
      JournalStructure structure=JournalStructureUtil.fetchByUUID_G(deletionEntry.getClassUuid(),portletDataContext.getScopeGroupId());
      if (structure != null) {
        try {
          JournalStructureLocalServiceUtil.deleteStructure(structure.getGroupId(),structure.getStructureId());
        }
 catch (        RequiredStructureException rse) {
          _log.warn("A structure that is still being used was queued " + "for deletion: " + structure.toString());
        }
      }
    }
  }
  paths=portletDataContext.getDeletionEntries(JournalTemplate.class.getName());
  for (  String path : paths) {
    if (portletDataContext.isPathNotProcessed(path)) {
      DeletionEntry deletionEntry=(DeletionEntry)portletDataContext.getZipEntryAsObject(path);
      JournalTemplate template=JournalTemplateUtil.fetchByUUID_G(deletionEntry.getClassUuid(),portletDataContext.getScopeGroupId());
      if (template != null) {
        try {
          JournalTemplateLocalServiceUtil.deleteTemplate(template.getGroupId(),template.getTemplateId());
        }
 catch (        RequiredTemplateException rte) {
          _log.warn("A template that is still being used was queued " + "for deletion: " + template.toString());
        }
      }
    }
  }
  paths=portletDataContext.getDeletionEntries(JournalFeed.class.getName());
  for (  String path : paths) {
    if (portletDataContext.isPathNotProcessed(path)) {
      DeletionEntry deletionEntry=(DeletionEntry)portletDataContext.getZipEntryAsObject(path);
      JournalFeed feed=JournalFeedUtil.fetchByUUID_G(deletionEntry.getClassUuid(),portletDataContext.getScopeGroupId());
      if (feed != null) {
        JournalFeedLocalServiceUtil.deleteFeed(feed.getGroupId(),feed.getFeedId());
      }
    }
  }
  paths=portletDataContext.getDeletionEntries(JournalArticleResource.class.getName());
  for (  String path : paths) {
    if (portletDataContext.isPathNotProcessed(path)) {
      DeletionEntry deletionEntry=(DeletionEntry)portletDataContext.getZipEntryAsObject(path);
      JournalArticleResource articleResource=JournalArticleResourceUtil.fetchByUUID_G(deletionEntry.getClassUuid(),portletDataContext.getScopeGroupId());
      if (articleResource != null) {
        List<JournalArticle> articles=JournalArticleLocalServiceUtil.getArticles(articleResource.getGroupId(),articleResource.getArticleId());
        for (        JournalArticle article : articles) {
          JournalArticleLocalServiceUtil.deleteArticle(article.getGroupId(),article.getArticleId(),null);
        }
      }
    }
  }
}

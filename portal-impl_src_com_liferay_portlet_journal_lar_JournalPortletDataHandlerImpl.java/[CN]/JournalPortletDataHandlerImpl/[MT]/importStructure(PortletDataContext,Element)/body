{
  String path=structureElement.attributeValue("path");
  if (!portletDataContext.isPathNotProcessed(path)) {
    return;
  }
  JournalStructure structure=(JournalStructure)portletDataContext.getZipEntryAsObject(path);
  long userId=portletDataContext.getUserId(structure.getUserUuid());
  String structureId=structure.getStructureId();
  boolean autoStructureId=false;
  if ((Validator.isNumber(structureId)) || (JournalStructureUtil.fetchByG_S(portletDataContext.getScopeGroupId(),structureId) != null)) {
    autoStructureId=true;
  }
  JournalCreationStrategy creationStrategy=JournalCreationStrategyFactory.getInstance();
  long authorId=creationStrategy.getAuthorUserId(portletDataContext,structure);
  if (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {
    userId=authorId;
  }
  Map<String,String> structureIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalStructure.class);
  String parentStructureId=MapUtil.getString(structureIds,structure.getParentStructureId(),structure.getParentStructureId());
  boolean addCommunityPermissions=creationStrategy.addCommunityPermissions(portletDataContext,structure);
  boolean addGuestPermissions=creationStrategy.addGuestPermissions(portletDataContext,structure);
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddCommunityPermissions(addCommunityPermissions);
  serviceContext.setAddGuestPermissions(addGuestPermissions);
  serviceContext.setCreateDate(structure.getCreateDate());
  serviceContext.setModifiedDate(structure.getModifiedDate());
  JournalStructure existingStructure=null;
  if (portletDataContext.isDataStrategyMirror()) {
    existingStructure=JournalStructureUtil.fetchByUUID_G(structure.getUuid(),portletDataContext.getScopeGroupId());
    if (existingStructure == null) {
      serviceContext.setUuid(structure.getUuid());
      existingStructure=JournalStructureLocalServiceUtil.addStructure(userId,portletDataContext.getScopeGroupId(),structureId,autoStructureId,parentStructureId,structure.getName(),structure.getDescription(),structure.getXsd(),serviceContext);
    }
 else {
      existingStructure=JournalStructureLocalServiceUtil.updateStructure(existingStructure.getGroupId(),existingStructure.getStructureId(),parentStructureId,structure.getName(),structure.getDescription(),structure.getXsd(),serviceContext);
    }
  }
 else {
    existingStructure=JournalStructureLocalServiceUtil.addStructure(userId,portletDataContext.getScopeGroupId(),structureId,autoStructureId,parentStructureId,structure.getName(),structure.getDescription(),structure.getXsd(),serviceContext);
  }
  structureIds.put(structureId,existingStructure.getStructureId());
  portletDataContext.importPermissions(JournalStructure.class,structure.getId(),existingStructure.getId());
  if (!structureId.equals(existingStructure.getStructureId())) {
    if (_log.isWarnEnabled()) {
      _log.warn("A structure with the ID " + structureId + " already "+ "exists. The new generated ID is "+ existingStructure.getStructureId());
    }
  }
}

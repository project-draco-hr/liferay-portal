{
  layoutSetPrototype=toUnwrappedModel(layoutSetPrototype);
  boolean isNew=layoutSetPrototype.isNew();
  LayoutSetPrototypeModelImpl layoutSetPrototypeModelImpl=(LayoutSetPrototypeModelImpl)layoutSetPrototype;
  if (Validator.isNull(layoutSetPrototype.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    layoutSetPrototype.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (layoutSetPrototype.getCreateDate() == null)) {
    if (serviceContext == null) {
      layoutSetPrototype.setCreateDate(now);
    }
 else {
      layoutSetPrototype.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!layoutSetPrototypeModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      layoutSetPrototype.setModifiedDate(now);
    }
 else {
      layoutSetPrototype.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (layoutSetPrototype.isNew()) {
      session.save(layoutSetPrototype);
      layoutSetPrototype.setNew(false);
    }
 else {
      layoutSetPrototype=(LayoutSetPrototype)session.merge(layoutSetPrototype);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !LayoutSetPrototypeModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((layoutSetPrototypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutSetPrototypeModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{layoutSetPrototypeModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((layoutSetPrototypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutSetPrototypeModelImpl.getOriginalUuid(),layoutSetPrototypeModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{layoutSetPrototypeModelImpl.getUuid(),layoutSetPrototypeModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((layoutSetPrototypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutSetPrototypeModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{layoutSetPrototypeModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((layoutSetPrototypeModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{layoutSetPrototypeModelImpl.getOriginalCompanyId(),layoutSetPrototypeModelImpl.getOriginalActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A,args);
      args=new Object[]{layoutSetPrototypeModelImpl.getCompanyId(),layoutSetPrototypeModelImpl.getActive()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_A,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_A,args);
    }
  }
  entityCache.putResult(LayoutSetPrototypeModelImpl.ENTITY_CACHE_ENABLED,LayoutSetPrototypeImpl.class,layoutSetPrototype.getPrimaryKey(),layoutSetPrototype,false);
  layoutSetPrototype.resetOriginalValues();
  return layoutSetPrototype;
}

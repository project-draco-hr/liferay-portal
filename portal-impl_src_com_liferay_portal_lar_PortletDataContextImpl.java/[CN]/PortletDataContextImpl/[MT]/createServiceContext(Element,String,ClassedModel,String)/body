{
  Class<?> clazz=classedModel.getModelClass();
  long classPK=getClassPK(classedModel);
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setCompanyId(getCompanyId());
  serviceContext.setScopeGroupId(getScopeGroupId());
  if (classedModel instanceof AuditedModel) {
    AuditedModel auditedModel=(AuditedModel)classedModel;
    serviceContext.setCreateDate(auditedModel.getCreateDate());
    serviceContext.setModifiedDate(auditedModel.getModifiedDate());
  }
  if (!MapUtil.getBoolean(_parameterMap,PortletDataHandlerKeys.PERMISSIONS)) {
    serviceContext.setAddGroupPermissions(true);
    serviceContext.setAddGuestPermissions(true);
  }
  if (isResourceMain(classedModel)) {
    if (getBooleanParameter(namespace,"categories")) {
      long[] assetCategoryIds=getAssetCategoryIds(clazz,classPK);
      serviceContext.setAssetCategoryIds(assetCategoryIds);
    }
    if (getBooleanParameter(namespace,"tags")) {
      String[] assetTagNames=getAssetTagNames(clazz,classPK);
      serviceContext.setAssetTagNames(assetTagNames);
    }
  }
  String expandoPath=null;
  if (element != null) {
    expandoPath=element.attributeValue("expando-path");
  }
 else {
    expandoPath=getExpandoPath(path);
  }
  if (Validator.isNotNull(expandoPath)) {
    try {
      Map<String,Serializable> expandoBridgeAttributes=(Map<String,Serializable>)getZipEntryAsObject(expandoPath);
      serviceContext.setExpandoBridgeAttributes(expandoBridgeAttributes);
    }
 catch (    Exception e) {
      if (_log.isDebugEnabled()) {
        _log.debug(e,e);
      }
    }
  }
  return serviceContext;
}

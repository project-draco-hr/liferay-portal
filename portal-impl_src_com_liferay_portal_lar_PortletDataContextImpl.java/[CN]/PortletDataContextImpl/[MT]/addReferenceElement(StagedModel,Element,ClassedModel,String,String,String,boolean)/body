{
  Element referenceElement=doAddReferenceElement(referrerStagedModel,element,classedModel,className,binPath,referenceType,false);
  String referenceKey=classedModel.getModelClassName();
  referenceKey=referenceKey.concat(StringPool.POUND).concat(String.valueOf(classedModel.getPrimaryKeyObj()));
  if (missing) {
    if (_missingReferences.contains(referenceKey) || _references.contains(referenceKey)) {
      return referenceElement;
    }
    _missingReferences.add(referenceKey);
    doAddReferenceElement(referrerStagedModel,null,classedModel,className,binPath,referenceType,true);
  }
 else {
    _references.add(referenceKey);
    if (_missingReferences.contains(referenceKey)) {
      _missingReferences.remove(referenceKey);
      StringBundler sb=new StringBundler(5);
      sb.append("missing-reference[@class-name='");
      sb.append(classedModel.getModelClassName());
      sb.append("' and @class-pk='");
      sb.append(String.valueOf(classedModel.getPrimaryKeyObj()));
      sb.append("']");
      XPath xPath=SAXReaderUtil.createXPath(sb.toString());
      Element missingReferenceElement=(Element)xPath.selectSingleNode(_missingReferencesElement);
      _missingReferencesElement.remove(missingReferenceElement);
    }
  }
  return referenceElement;
}

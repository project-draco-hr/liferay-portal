{
  AssetEntry assetEntry=AssetEntryLocalServiceUtil.getEntry(clazz.getName(),classPK);
  List<AssetLink> allDirectAssetLinks=AssetLinkLocalServiceUtil.getDirectLinks(assetEntry.getEntryId());
  if (allDirectAssetLinks.isEmpty()) {
    return;
  }
  Map<Integer,List<AssetLink>> assetLinksMap=new HashMap<Integer,List<AssetLink>>();
  for (  AssetLink assetLink : allDirectAssetLinks) {
    List assetLinks=assetLinksMap.get(assetLink.getType());
    if (assetLinks == null) {
      assetLinks=new ArrayList<AssetLink>();
    }
    assetLinks.add(assetLink);
    assetLinksMap.put(assetLink.getType(),assetLinks);
  }
  for (  Map.Entry<Integer,List<AssetLink>> entry : assetLinksMap.entrySet()) {
    int assetLinkType=entry.getKey();
    List<AssetLink> assetLinks=entry.getValue();
    List<String> assetLinkUuids=new ArrayList<String>(allDirectAssetLinks.size());
    for (    AssetLink assetLink : assetLinks) {
      try {
        AssetEntry assetLinkEntry=AssetEntryLocalServiceUtil.getEntry(assetLink.getEntryId2());
        assetLinkUuids.add(assetLinkEntry.getClassUuid());
      }
 catch (      NoSuchEntryException nsee) {
      }
    }
    _assetLinkUuidsMap.put(getPrimaryKeyString(assetEntry.getClassUuid(),String.valueOf(assetLinkType)),assetLinkUuids.toArray(new String[assetLinkUuids.size()]));
  }
}

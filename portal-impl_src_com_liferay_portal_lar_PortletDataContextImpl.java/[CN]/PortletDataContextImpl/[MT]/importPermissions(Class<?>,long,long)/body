{
  if (((PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM != 5) && (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM != 6)) || (!MapUtil.getBoolean(_parameterMap,PortletDataHandlerKeys.PERMISSIONS))) {
    return;
  }
  List<KeyValuePair> permissions=_permissionsMap.get(getPrimaryKeyString(classObj,classPK));
  if (permissions == null) {
    return;
  }
  for (  KeyValuePair permission : permissions) {
    String roleName=permission.getKey();
    Role role=null;
    try {
      role=RoleLocalServiceUtil.getRole(_companyId,roleName);
    }
 catch (    NoSuchRoleException nsre) {
      if (_log.isWarnEnabled()) {
        _log.warn("Role " + roleName + " does not exist");
      }
      continue;
    }
    String[] actionIds=StringUtil.split(permission.getValue());
    if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 5) {
      Resource resource=ResourceLocalServiceUtil.getResource(_companyId,classObj.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(newClassPK));
      PermissionLocalServiceUtil.setRolePermissions(role.getRoleId(),actionIds,resource.getResourceId());
    }
 else     if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
      ResourcePermissionLocalServiceUtil.setResourcePermissions(_companyId,classObj.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(newClassPK),role.getRoleId(),actionIds);
    }
  }
}

{
  Map<Long,Long> messagePKs=new HashMap<Long,Long>();
  Map<Long,Long> threadPKs=new HashMap<Long,Long>();
  List<MBMessage> messages=_commentsMap.get(getPrimaryKeyString(classObj,classPK));
  if (messages == null) {
    return;
  }
  MBDiscussion discussion=null;
  try {
    discussion=MBDiscussionLocalServiceUtil.getDiscussion(classObj.getName(),newClassPK);
  }
 catch (  NoSuchDiscussionException nsde) {
  }
  for (  MBMessage message : messages) {
    long userId=getUserId(message.getUserUuid());
    long parentMessageId=MapUtil.getLong(messagePKs,message.getParentMessageId(),message.getParentMessageId());
    long threadId=MapUtil.getLong(threadPKs,message.getThreadId(),message.getThreadId());
    if ((message.getParentMessageId() == MBMessageImpl.DEFAULT_PARENT_MESSAGE_ID) && (discussion != null)) {
      MBThread thread=MBThreadLocalServiceUtil.getThread(discussion.getThreadId());
      long rootMessageId=thread.getRootMessageId();
      messagePKs.put(message.getMessageId(),rootMessageId);
      threadPKs.put(message.getThreadId(),thread.getThreadId());
    }
 else {
      ServiceContext serviceContext=new ServiceContext();
      serviceContext.setScopeGroupId(groupId);
      MBMessage newMessage=MBMessageLocalServiceUtil.addDiscussionMessage(userId,message.getUserName(),classObj.getName(),newClassPK,threadId,parentMessageId,message.getSubject(),message.getBody(),serviceContext);
      messagePKs.put(message.getMessageId(),newMessage.getMessageId());
      threadPKs.put(message.getThreadId(),newMessage.getThreadId());
    }
  }
}

{
  if (parentElement == null) {
    return Collections.emptyList();
  }
  Element referencesElement=parentElement.element("references");
  if (referencesElement == null) {
    return Collections.emptyList();
  }
  StringBundler sb=new StringBundler(13);
  sb.append("reference[@class-name=");
  sb.append(HtmlUtil.escapeXPathAttribute(clazz.getName()));
  if (groupId > 0) {
    sb.append(" and @group-id='");
    sb.append(groupId);
    sb.append(StringPool.APOSTROPHE);
  }
  if (Validator.isNotNull(uuid)) {
    sb.append(" and @uuid=");
    sb.append(HtmlUtil.escapeXPathAttribute(uuid));
  }
  if (classPK > 0) {
    sb.append(" and @class-pk='");
    sb.append(classPK);
    sb.append(StringPool.APOSTROPHE);
  }
  if (referenceType != null) {
    sb.append(" and @type=");
    sb.append(HtmlUtil.escapeXPathAttribute(referenceType));
  }
  sb.append(StringPool.CLOSE_BRACKET);
  XPath xPath=SAXReaderUtil.createXPath(sb.toString());
  List<Node> nodes=xPath.selectNodes(referencesElement);
  return Arrays.asList(nodes.toArray(new Element[nodes.size()]));
}

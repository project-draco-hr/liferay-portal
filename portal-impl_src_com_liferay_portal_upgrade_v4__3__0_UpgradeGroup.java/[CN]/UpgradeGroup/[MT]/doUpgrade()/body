{
  PKUpgradeColumnImpl upgradePKColumn=new PKUpgradeColumnImpl("groupId",true);
  ClassNameIdUpgradeColumnImpl classNameIdColumn=new ClassNameIdUpgradeColumnImpl();
  Map classPKContainers=CollectionFactory.getHashMap();
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Organization.class.getName())),new ClassPKContainer(AvailableMappersUtil.getOrganizationIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(User.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserIdMapper(),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(UserGroup.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserGroupIdMapper(),true));
  UpgradeColumn upgradeClassPKColumn=new ClassPKUpgradeColumnImpl(classNameIdColumn,classPKContainers);
  UpgradeColumn upgradeNameColumn=new GroupNameUpgradeColumnImpl(upgradePKColumn,upgradeClassPKColumn);
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(GroupImpl.TABLE_NAME,GroupImpl.TABLE_COLUMNS,upgradePKColumn,classNameIdColumn,upgradeClassPKColumn,upgradeNameColumn);
  upgradeTable.setCreateSQL(GroupImpl.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  ValueMapper groupIdMapper=new DefaultPKMapper(upgradePKColumn.getValueMapper());
  AvailableMappersUtil.setGroupIdMapper(groupIdMapper);
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",groupIdMapper);
  UpgradeColumn upgradeLayoutOwnerIdColumn=new TempUpgradeColumnImpl("ownerId");
  LayoutOwnerIdUpgradeColumnImpl upgradeLayoutOwnerIdGroupIdColumn=new LayoutOwnerIdUpgradeColumnImpl("groupId",upgradeLayoutOwnerIdColumn,groupIdMapper);
  LayoutOwnerIdUpgradeColumnImpl upgradeLayoutOwnerIdPrivateLayoutColumn=new LayoutOwnerIdUpgradeColumnImpl("privateLayout",upgradeLayoutOwnerIdColumn,groupIdMapper);
  UpgradeColumn upgradeLayoutIdColumn=new TempUpgradeColumnImpl("layoutId");
  PKUpgradeColumnImpl upgradeLayoutPlidColumn=new LayoutPlidUpgradeColumnImpl(upgradeLayoutOwnerIdColumn,upgradeLayoutOwnerIdGroupIdColumn,upgradeLayoutOwnerIdPrivateLayoutColumn,upgradeLayoutIdColumn);
  Object[][] layoutColumns1={{"ownerId",new Integer(Types.VARCHAR)}};
  Object[][] layoutColumns2=(Object[][])LayoutImpl.TABLE_COLUMNS.clone();
  Object[][] layoutColumns=ArrayUtil.append(layoutColumns1,layoutColumns2);
  upgradeTable=new DefaultUpgradeTableImpl(LayoutImpl.TABLE_NAME,layoutColumns,upgradeLayoutOwnerIdColumn,upgradeLayoutOwnerIdGroupIdColumn,upgradeLayoutOwnerIdPrivateLayoutColumn,upgradeLayoutIdColumn,upgradeLayoutPlidColumn);
  String createSQL=LayoutImpl.TABLE_SQL_CREATE;
  createSQL=createSQL.substring(0,createSQL.length() - 1) + ",ownerId VARCHAR(75) null)";
  upgradeTable.setCreateSQL(createSQL);
  upgradeTable.updateTable();
  ValueMapper layoutPlidMapper=upgradeLayoutPlidColumn.getValueMapper();
  AvailableMappersUtil.setLayoutPlidMapper(layoutPlidMapper);
  Object[][] layoutSetColumns1={{"ownerId",new Integer(Types.VARCHAR)}};
  Object[][] layoutSetColumns2=(Object[][])LayoutSetImpl.TABLE_COLUMNS.clone();
  Object[][] layoutSetColumns=ArrayUtil.append(layoutSetColumns1,layoutSetColumns2);
  upgradeTable=new DefaultUpgradeTableImpl(LayoutSetImpl.TABLE_NAME,layoutSetColumns,new PKUpgradeColumnImpl("layoutSetId",false),upgradeGroupIdColumn);
  createSQL=LayoutSetImpl.TABLE_SQL_CREATE;
  createSQL=createSQL.substring(0,createSQL.length() - 1) + ",ownerId VARCHAR(75) null)";
  upgradeTable.setCreateSQL(createSQL);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(OrgGroupPermissionImpl.TABLE_NAME,OrgGroupPermissionImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.setCreateSQL(OrgGroupPermissionImpl.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(OrgGroupRoleImpl.TABLE_NAME,OrgGroupRoleImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.setCreateSQL(OrgGroupRoleImpl.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  runSQL(_UPGRADE_SCHEMA);
}

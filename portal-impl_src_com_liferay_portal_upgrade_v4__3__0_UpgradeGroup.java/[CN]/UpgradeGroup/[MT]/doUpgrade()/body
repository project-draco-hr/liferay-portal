{
  PKUpgradeColumnImpl pkUpgradeColumn=new PKUpgradeColumnImpl("groupId",true);
  ClassNameIdUpgradeColumnImpl classNameIdColumn=new ClassNameIdUpgradeColumnImpl();
  Map classPKContainers=CollectionFactory.getHashMap();
  classPKContainers.put(new Long(PortalUtil.getClassNameId(Organization.class.getName())),new ClassPKContainer(AvailableMappersUtil.getOrganizationIdMapper(),true));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(User.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserIdMapper(),false));
  classPKContainers.put(new Long(PortalUtil.getClassNameId(UserGroup.class.getName())),new ClassPKContainer(AvailableMappersUtil.getUserGroupIdMapper(),true));
  UpgradeColumn upgradeClassPKColumn=new ClassPKUpgradeColumnImpl(classNameIdColumn,classPKContainers);
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(GroupImpl.TABLE_NAME,GroupImpl.TABLE_COLUMNS,pkUpgradeColumn,classNameIdColumn,upgradeClassPKColumn);
  upgradeTable.updateTable();
  ValueMapper groupIdMapper=new DefaultPKMapper(pkUpgradeColumn.getValueMapper());
  AvailableMappersUtil.setGroupIdMapper(groupIdMapper);
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",groupIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(DLFolderImpl.TABLE_NAME,DLFolderImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(JournalArticleImpl.TABLE_NAME,JournalArticleImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(JournalStructureImpl.TABLE_NAME,JournalStructureImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(JournalTemplateImpl.TABLE_NAME,JournalTemplateImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeLayoutOwnerIdColumn=new TempUpgradeColumnImpl("ownerId");
  LayoutOwnerIdUpgradeColumnImpl upgradeLayoutOwnerIdGroupIdColumn=new LayoutOwnerIdUpgradeColumnImpl("groupId",upgradeLayoutOwnerIdColumn,groupIdMapper);
  LayoutOwnerIdUpgradeColumnImpl upgradeLayoutOwnerIdPrivateLayoutColumn=new LayoutOwnerIdUpgradeColumnImpl("privateLayout",upgradeLayoutOwnerIdColumn,groupIdMapper);
  UpgradeColumn upgradeLayoutIdColumn=new TempUpgradeColumnImpl("layoutId");
  PKUpgradeColumnImpl upgradeLayoutPlidColumn=new LayoutPlidUpgradeColumnImpl(upgradeLayoutOwnerIdColumn,upgradeLayoutOwnerIdGroupIdColumn,upgradeLayoutOwnerIdPrivateLayoutColumn,upgradeLayoutIdColumn);
  Object[][] layoutColumns1={{"ownerId",new Integer(Types.VARCHAR)}};
  Object[][] layoutColumns2=(Object[][])LayoutImpl.TABLE_COLUMNS.clone();
  Object[][] layoutColumns=new Object[layoutColumns1.length + layoutColumns2.length][];
  ArrayUtil.combine(layoutColumns1,layoutColumns2,layoutColumns);
  upgradeTable=new DefaultUpgradeTableImpl(LayoutImpl.TABLE_NAME,layoutColumns,upgradeLayoutOwnerIdColumn,upgradeLayoutOwnerIdGroupIdColumn,upgradeLayoutOwnerIdPrivateLayoutColumn,upgradeLayoutIdColumn,upgradeLayoutPlidColumn);
  upgradeTable.updateTable();
  ValueMapper layoutPlidMapper=upgradeLayoutPlidColumn.getValueMapper();
  AvailableMappersUtil.setLayoutPlidMapper(layoutPlidMapper);
  Object[][] layoutSetColumns1={{"ownerId",new Integer(Types.VARCHAR)}};
  Object[][] layoutSetColumns2=(Object[][])LayoutSetImpl.TABLE_COLUMNS.clone();
  Object[][] layoutSetColumns=new Object[layoutSetColumns1.length + layoutSetColumns2.length][];
  ArrayUtil.combine(layoutSetColumns1,layoutSetColumns2,layoutSetColumns);
  upgradeTable=new DefaultUpgradeTableImpl(LayoutSetImpl.TABLE_NAME,layoutSetColumns,new PKUpgradeColumnImpl("layoutSetId",false),upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBCategoryImpl.TABLE_NAME,MBCategoryImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBStatsUserImpl.TABLE_NAME,MBStatsUserImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(OrgGroupPermissionImpl.TABLE_NAME,OrgGroupPermissionImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(OrgGroupRoleImpl.TABLE_NAME,OrgGroupRoleImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(PollsQuestionImpl.TABLE_NAME,PollsQuestionImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeCartIdColumn=new TempUpgradeColumnImpl("cartId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCartImpl.TABLE_NAME,ShoppingCartImpl.TABLE_COLUMNS,upgradeCartIdColumn,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCategoryImpl.TABLE_NAME,ShoppingCategoryImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeCouponIdColumn=new TempUpgradeColumnImpl("couponId",new Integer(Types.VARCHAR));
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingCouponImpl.TABLE_NAME,ShoppingCouponImpl.TABLE_COLUMNS,upgradeCouponIdColumn,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(ShoppingOrderImpl.TABLE_NAME,ShoppingOrderImpl.TABLE_COLUMNS,upgradeGroupIdColumn);
  upgradeTable.updateTable();
  runSQL(_UPGRADE_SCHEMA);
}

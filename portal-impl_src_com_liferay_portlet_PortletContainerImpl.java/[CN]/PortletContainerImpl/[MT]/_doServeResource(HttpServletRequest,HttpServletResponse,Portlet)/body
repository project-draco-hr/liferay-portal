{
  WindowState windowState=(WindowState)request.getAttribute(WebKeys.WINDOW_STATE);
  PortletMode portletMode=PortletModeFactory.getPortletMode(ParamUtil.getString(request,"p_p_mode"));
  PortletPreferencesIds portletPreferencesIds=PortletPreferencesFactoryUtil.getPortletPreferencesIds(request,portlet.getPortletId());
  PortletPreferences portletPreferences=PortletPreferencesLocalServiceUtil.getStrictPreferences(portletPreferencesIds);
  ServletContext servletContext=(ServletContext)request.getAttribute(WebKeys.CTX);
  InvokerPortlet invokerPortlet=PortletInstanceFactoryUtil.create(portlet,servletContext);
  PortletConfig portletConfig=PortletConfigFactoryUtil.create(portlet,servletContext);
  PortletContext portletContext=portletConfig.getPortletContext();
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  PortletDisplay portletDisplay=themeDisplay.getPortletDisplay();
  Layout layout=(Layout)request.getAttribute(WebKeys.LAYOUT);
  String portletPrimaryKey=PortletPermissionUtil.getPrimaryKey(layout.getPlid(),portlet.getPortletId());
  portletDisplay.setId(portlet.getPortletId());
  portletDisplay.setInstanceId(portlet.getInstanceId());
  portletDisplay.setNamespace(PortalUtil.getPortletNamespace(portlet.getPortletId()));
  portletDisplay.setPortletName(portletConfig.getPortletName());
  portletDisplay.setResourcePK(portletPrimaryKey);
  portletDisplay.setRootPortletId(portlet.getRootPortletId());
  WebDAVStorage webDAVStorage=portlet.getWebDAVStorageInstance();
  if (webDAVStorage != null) {
    portletDisplay.setWebDAVEnabled(true);
  }
 else {
    portletDisplay.setWebDAVEnabled(false);
  }
  ResourceRequestImpl resourceRequestImpl=ResourceRequestFactory.create(request,portlet,invokerPortlet,portletContext,windowState,portletMode,portletPreferences,layout.getPlid());
  long companyId=PortalUtil.getCompanyId(request);
  ResourceResponseImpl resourceResponseImpl=ResourceResponseFactory.create(resourceRequestImpl,response,portlet.getPortletId(),companyId);
  resourceRequestImpl.defineObjects(portletConfig,resourceResponseImpl);
  try {
    ServiceContext serviceContext=ServiceContextFactory.getInstance(resourceRequestImpl);
    ServiceContextThreadLocal.pushServiceContext(serviceContext);
    invokerPortlet.serveResource(resourceRequestImpl,resourceResponseImpl);
    resourceResponseImpl.transferHeaders(response);
  }
  finally {
    ServiceContextThreadLocal.popServiceContext();
  }
}

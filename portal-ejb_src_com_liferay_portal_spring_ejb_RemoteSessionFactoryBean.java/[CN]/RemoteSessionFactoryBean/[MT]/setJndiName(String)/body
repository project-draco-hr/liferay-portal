{
  super.setJndiName(jndiName);
  String applet=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.APPLET);
  String authoritative=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.AUTHORITATIVE);
  String batchsize=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.BATCHSIZE);
  String dnsUrl=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.DNS_URL);
  String initialContextFactory=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.INITIAL_CONTEXT_FACTORY);
  String language=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.LANGUAGE);
  String objectFactories=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.OBJECT_FACTORIES);
  String providerUrl=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.PROVIDER_URL);
  String referral=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.REFERRAL);
  String securityAuthentication=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.SECURITY_AUTHENTICATION);
  String securityCredentials=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.SECURITY_CREDENTIALS);
  String securityPrincipal=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.SECURITY_PRINCIPAL);
  String securityProtocol=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.SECURITY_PROTOCOL);
  String stateFactories=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.STATE_FACTORIES);
  String urlPkgPrefixes=PropsUtil.get(jndiName + StringPool.UNDERLINE + Context.URL_PKG_PREFIXES);
  if (applet != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.APPLET,applet);
  }
  if (authoritative != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.AUTHORITATIVE,authoritative);
  }
  if (batchsize != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.BATCHSIZE,batchsize);
  }
  if (dnsUrl != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.DNS_URL,dnsUrl);
  }
  if (initialContextFactory != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.INITIAL_CONTEXT_FACTORY,initialContextFactory);
  }
  if (language != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.LANGUAGE,language);
  }
  if (objectFactories != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.OBJECT_FACTORIES,objectFactories);
  }
  if (providerUrl != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.PROVIDER_URL,providerUrl);
  }
  if (referral != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.REFERRAL,referral);
  }
  if (securityAuthentication != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.SECURITY_AUTHENTICATION,securityAuthentication);
  }
  if (securityCredentials != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.SECURITY_CREDENTIALS,securityCredentials);
  }
  if (securityPrincipal != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.SECURITY_PRINCIPAL,securityPrincipal);
  }
  if (securityProtocol != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.SECURITY_PROTOCOL,securityProtocol);
  }
  if (stateFactories != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.STATE_FACTORIES,stateFactories);
  }
  if (urlPkgPrefixes != null) {
    if (_props == null) {
      _props=new Properties();
    }
    _props.setProperty(Context.URL_PKG_PREFIXES,urlPkgPrefixes);
  }
  setRefreshHomeOnConnectFailure(true);
}

{
  DDLRecordSet recordSet=record.getRecordSet();
  int scope=recordSet.getScope();
  if ((scope != DDLRecordSetConstants.SCOPE_DYNAMIC_DATA_LISTS) && (scope != DDLRecordSetConstants.SCOPE_FORMS)) {
    return;
  }
  boolean addDraftAssetEntry=false;
  boolean visible=true;
  if ((recordVersion != null) && !recordVersion.isApproved()) {
    String version=recordVersion.getVersion();
    if (!version.equals(DDLRecordConstants.VERSION_DEFAULT)) {
      int approvedRecordVersionsCount=ddlRecordVersionPersistence.countByR_S(record.getRecordId(),WorkflowConstants.STATUS_APPROVED);
      if (approvedRecordVersionsCount > 0) {
        addDraftAssetEntry=true;
      }
    }
    visible=false;
  }
  if (scope == DDLRecordSetConstants.SCOPE_FORMS) {
    visible=false;
  }
  DDMStructure ddmStructure=recordSet.getDDMStructure();
  String ddmStructureName=ddmStructure.getName(locale);
  String recordSetName=recordSet.getName(locale);
  String title=LanguageUtil.format(locale,"new-x-for-list-x",new Object[]{ddmStructureName,recordSetName},false);
  if (addDraftAssetEntry) {
    assetEntryLocalService.updateEntry(userId,record.getGroupId(),record.getCreateDate(),record.getModifiedDate(),DDLRecordConstants.getClassName(scope),recordVersion.getRecordVersionId(),record.getUuid(),0,assetCategoryIds,assetTagNames,true,false,null,null,null,null,ContentTypes.TEXT_HTML,title,null,StringPool.BLANK,null,null,0,0,priority);
  }
 else {
    Date publishDate=null;
    if (visible) {
      publishDate=record.getCreateDate();
    }
    assetEntryLocalService.updateEntry(userId,record.getGroupId(),record.getCreateDate(),record.getModifiedDate(),DDLRecordConstants.getClassName(scope),record.getRecordId(),record.getUuid(),0,assetCategoryIds,assetTagNames,true,visible,null,null,publishDate,null,ContentTypes.TEXT_HTML,title,null,StringPool.BLANK,null,null,0,0,priority);
  }
}

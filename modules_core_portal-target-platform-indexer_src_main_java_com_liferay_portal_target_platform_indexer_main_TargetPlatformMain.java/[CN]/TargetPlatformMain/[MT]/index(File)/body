{
  Path tempPath=Files.createTempDirectory(null);
  File tempDir=tempPath.toFile();
  _config.put("root.url",tempDir.getPath());
  Set<File> jarFiles=new LinkedHashSet<>();
  try {
    _processSystemBundle(tempDir,jarFiles);
    _processSystemPackagesExtra(tempDir,jarFiles);
    String[] moduleDirs=new String[]{_moduleFrameworkBaseDir + "/static/",_moduleFrameworkModulesDir,_moduleFrameworkPortalDir};
    for (    String moduleDir : moduleDirs) {
      File dir=new File(moduleDir);
      if (!dir.isDirectory() || !dir.canRead()) {
        continue;
      }
      File[] childFiles=dir.listFiles(new FilenameFilter(){
        @Override public boolean accept(        File dir,        String name){
          return name.endsWith(".jar");
        }
      }
);
      for (      File childFile : childFiles) {
        _addBundle(jarFiles,childFile,tempDir);
      }
    }
    ResourceIndexer resourceIndexer=new RepoIndex();
    File tempIndexFile=new File(tempDir,"target.platform.index.xml");
    try (FileOutputStream fileOutputStream=new FileOutputStream(tempIndexFile)){
      resourceIndexer.index(jarFiles,fileOutputStream,_config);
    }
     File indexFile=new File(outputFile,tempIndexFile.getName());
    Files.copy(tempIndexFile.toPath(),indexFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
    return indexFile;
  }
  finally {
    PathUtil.deltree(tempPath);
  }
}

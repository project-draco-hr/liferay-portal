{
  Session session=null;
  Properties properties=new Properties();
  String protocol=request.getMailInProtocol();
  Integer portNumber=request.getMailInServerPort();
  if (request.getMailInUseSSL()) {
    if (portNumber == null) {
      if ("imap".equals(protocol)) {
        portNumber=new Integer(993);
      }
 else {
        portNumber=new Integer(995);
      }
    }
    String SSL_FACTORY="javax.net.ssl.SSLSocketFactory";
    properties.setProperty("mail." + protocol + ".socketFactory.class",SSL_FACTORY);
    properties.setProperty("mail." + protocol + ".socketFactory.fallback","false");
    properties.setProperty("mail." + protocol + ".port",portNumber.toString());
    properties.setProperty("mail." + protocol + ".socketFactory.port",portNumber.toString());
  }
 else {
    if (portNumber == null) {
      if ("imap".equals(protocol)) {
        portNumber=new Integer(143);
      }
 else {
        portNumber=new Integer(110);
      }
    }
  }
  session=Session.getInstance(properties,null);
  if (_log.isDebugEnabled()) {
    session.setDebug(true);
    _log.debug("Trying to read a email using the following properties:");
    StringWriter sw=new StringWriter();
    PrintWriter pw=new PrintWriter(sw);
    session.getProperties().list(pw);
    pw.flush();
    _log.debug(sw.toString());
  }
  URLName url=new URLName(protocol,request.getMailInServerName(),portNumber,"",request.getMailInUserName(),request.getMailInPassword());
  Store store=session.getStore(url);
  store.connect();
  Folder defaultFolder=store.getDefaultFolder();
  Folder[] folders=defaultFolder.list();
  if (folders.length == 0) {
    throw new MessagingException("Inbox not found");
  }
 else {
    _inboxFolder=folders[0];
    _inboxFolder.open(Folder.READ_WRITE);
  }
}

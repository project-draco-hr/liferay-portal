{
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
    User user=themeDisplay.getUser();
    String questionId=ParamUtil.getString(req,"questionId");
    String chartType=ParamUtil.getString(req,"chartType","pie");
    CategoryDataset dataset=PollsUtil.getVotesDataset(questionId);
    String chartName=LanguageUtil.get(user,"vote-results");
    String xName=LanguageUtil.get(user,"choice");
    String yName=LanguageUtil.get(user,"votes");
    JFreeChart chart=null;
    if (chartType.equals("area")) {
      chart=ChartFactory.createAreaChart(chartName,xName,yName,dataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else     if (chartType.equals("horizontal_bar")) {
      chart=ChartFactory.createBarChart(chartName,xName,yName,dataset,PlotOrientation.HORIZONTAL,true,false,false);
    }
 else     if (chartType.equals("line")) {
      chart=ChartFactory.createLineChart(chartName,xName,yName,dataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else     if (chartType.equals("vertical_bar")) {
      chart=ChartFactory.createBarChart(chartName,xName,yName,dataset,PlotOrientation.VERTICAL,true,false,false);
    }
 else {
      PieDataset pieData=DatasetUtilities.createPieDatasetForRow(dataset,0);
      chart=ChartFactory.createPieChart(chartName,pieData,true,false,false);
    }
    res.setContentType("image/jpeg");
    OutputStream out=res.getOutputStream();
    ChartUtilities.writeChartAsJPEG(out,chart,400,400);
    return null;
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    return mapping.findForward(Constants.COMMON_ERROR);
  }
}

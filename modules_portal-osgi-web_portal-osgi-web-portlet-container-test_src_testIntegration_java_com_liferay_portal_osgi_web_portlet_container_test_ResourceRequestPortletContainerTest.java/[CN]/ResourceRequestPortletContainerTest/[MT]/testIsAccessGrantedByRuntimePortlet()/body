{
  testPortlet=new TestPortlet(){
    @Override public void serveResource(    ResourceRequest resourceRequest,    ResourceResponse resourceResponse) throws IOException, PortletException {
      PortletContext portletContext=getPortletContext();
      PortletRequestDispatcher portletRequestDispatcher=portletContext.getRequestDispatcher("/runtime_portlet.jsp");
      portletRequestDispatcher.include(resourceRequest,resourceResponse);
    }
  }
;
  setUpPortlet(testPortlet,new HashMapDictionary<String,Object>(),TEST_PORTLET_ID);
  HttpServletRequest httpServletRequest=PortletContainerTestUtil.getHttpServletRequest(group,layout);
  PortletURL portletURL=new PortletURLImpl(httpServletRequest,TEST_PORTLET_ID,layout.getPlid(),PortletRequest.RESOURCE_PHASE);
  TestPortlet testRuntimePortlet=new TestPortlet();
  String testRuntimePortletId="testRuntimePortletId";
  setUpPortlet(testRuntimePortlet,new HashMapDictionary<String,Object>(),testRuntimePortletId,false);
  portletURL.setParameter("testRuntimePortletId",testRuntimePortletId);
  Response response=PortletContainerTestUtil.request(portletURL.toString());
  Assert.assertEquals(200,response.getCode());
  Assert.assertTrue(testRuntimePortlet.isCalledRender());
}

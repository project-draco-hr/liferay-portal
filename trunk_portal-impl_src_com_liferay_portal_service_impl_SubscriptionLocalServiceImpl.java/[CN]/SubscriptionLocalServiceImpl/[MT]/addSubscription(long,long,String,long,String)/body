{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=PortalUtil.getClassNameId(className);
  Date now=new Date();
  long subscriptionId=counterLocalService.increment();
  Subscription subscription=subscriptionPersistence.fetchByC_U_C_C(user.getCompanyId(),userId,classNameId,classPK);
  if (subscription == null) {
    subscription=subscriptionPersistence.create(subscriptionId);
    subscription.setCompanyId(user.getCompanyId());
    subscription.setUserId(user.getUserId());
    subscription.setUserName(user.getFullName());
    subscription.setCreateDate(now);
    subscription.setModifiedDate(now);
    subscription.setClassNameId(classNameId);
    subscription.setClassPK(classPK);
    subscription.setFrequency(frequency);
    subscriptionPersistence.update(subscription,false);
  }
  if (groupId > 0) {
    try {
      assetEntryLocalService.getEntry(className,classPK);
    }
 catch (    Exception e) {
      assetEntryLocalService.updateEntry(userId,groupId,className,classPK,null,null,null,false,null,null,null,null,null,String.valueOf(groupId),null,null,null,null,0,0,null,false);
    }
    socialEquityLogLocalService.addEquityLogs(userId,className,classPK,ActionKeys.SUBSCRIBE,StringPool.BLANK);
  }
  return subscription;
}

{
  ddmDataProvider=toUnwrappedModel(ddmDataProvider);
  boolean isNew=ddmDataProvider.isNew();
  DDMDataProviderModelImpl ddmDataProviderModelImpl=(DDMDataProviderModelImpl)ddmDataProvider;
  if (Validator.isNull(ddmDataProvider.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    ddmDataProvider.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (ddmDataProvider.getCreateDate() == null)) {
    if (serviceContext == null) {
      ddmDataProvider.setCreateDate(now);
    }
 else {
      ddmDataProvider.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!ddmDataProviderModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      ddmDataProvider.setModifiedDate(now);
    }
 else {
      ddmDataProvider.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (ddmDataProvider.isNew()) {
      session.save(ddmDataProvider);
      ddmDataProvider.setNew(false);
    }
 else {
      ddmDataProvider=(DDMDataProvider)session.merge(ddmDataProvider);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DDMDataProviderModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((ddmDataProviderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddmDataProviderModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{ddmDataProviderModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((ddmDataProviderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddmDataProviderModelImpl.getOriginalUuid(),ddmDataProviderModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{ddmDataProviderModelImpl.getUuid(),ddmDataProviderModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((ddmDataProviderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddmDataProviderModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{ddmDataProviderModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((ddmDataProviderModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddmDataProviderModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{ddmDataProviderModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
  }
  entityCache.putResult(DDMDataProviderModelImpl.ENTITY_CACHE_ENABLED,DDMDataProviderImpl.class,ddmDataProvider.getPrimaryKey(),ddmDataProvider,false);
  clearUniqueFindersCache(ddmDataProviderModelImpl);
  cacheUniqueFindersCache(ddmDataProviderModelImpl,isNew);
  ddmDataProvider.resetOriginalValues();
  return ddmDataProvider;
}

{
  long pk=nextLong();
  DDMListEntry newDDMListEntry=_persistence.create(pk);
  newDDMListEntry.setUuid(randomString());
  newDDMListEntry.setGroupId(nextLong());
  newDDMListEntry.setCompanyId(nextLong());
  newDDMListEntry.setUserId(nextLong());
  newDDMListEntry.setUserName(randomString());
  newDDMListEntry.setCreateDate(nextDate());
  newDDMListEntry.setModifiedDate(nextDate());
  newDDMListEntry.setName(randomString());
  newDDMListEntry.setDescription(randomString());
  newDDMListEntry.setStructureId(nextLong());
  _persistence.update(newDDMListEntry,false);
  DDMListEntry existingDDMListEntry=_persistence.findByPrimaryKey(newDDMListEntry.getPrimaryKey());
  assertEquals(existingDDMListEntry.getUuid(),newDDMListEntry.getUuid());
  assertEquals(existingDDMListEntry.getListEntryId(),newDDMListEntry.getListEntryId());
  assertEquals(existingDDMListEntry.getGroupId(),newDDMListEntry.getGroupId());
  assertEquals(existingDDMListEntry.getCompanyId(),newDDMListEntry.getCompanyId());
  assertEquals(existingDDMListEntry.getUserId(),newDDMListEntry.getUserId());
  assertEquals(existingDDMListEntry.getUserName(),newDDMListEntry.getUserName());
  assertEquals(Time.getShortTimestamp(existingDDMListEntry.getCreateDate()),Time.getShortTimestamp(newDDMListEntry.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingDDMListEntry.getModifiedDate()),Time.getShortTimestamp(newDDMListEntry.getModifiedDate()));
  assertEquals(existingDDMListEntry.getName(),newDDMListEntry.getName());
  assertEquals(existingDDMListEntry.getDescription(),newDDMListEntry.getDescription());
  assertEquals(existingDDMListEntry.getStructureId(),newDDMListEntry.getStructureId());
}

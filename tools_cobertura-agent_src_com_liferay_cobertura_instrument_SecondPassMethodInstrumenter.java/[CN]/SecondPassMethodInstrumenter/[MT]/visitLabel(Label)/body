{
  if (_methodStarted) {
    _methodStarted=false;
    _variableIndex=firstStackVariable;
    mv.visitInsn(Opcodes.ICONST_0);
    mv.visitVarInsn(Opcodes.ISTORE,_variableIndex);
    mv.visitIntInsn(Opcodes.SIPUSH,-1);
    mv.visitVarInsn(Opcodes.ISTORE,_variableIndex + 1);
    _startLabel=label;
  }
  _endLabel=label;
  super.visitLabel(label);
  Map<Label,JumpHolder> jumpLables=_firstPassMethodInstrumenter.jumpLabels;
  if (jumpLables.containsKey(label)) {
    if (_lastJump != null) {
      Label label1=instrumentIsLastJump();
      instrumentOwnerClass();
      instrumentPutLineAndBranchNumbers();
      mv.visitInsn(_BOOLEAN_FALSE);
      instrumentInvokeTouchJump();
      Label label2=new Label();
      mv.visitJumpInsn(Opcodes.GOTO,label2);
      mv.visitLabel(label1);
      mv.visitVarInsn(Opcodes.ILOAD,_variableIndex + 1);
      mv.visitJumpInsn(Opcodes.IFLT,label2);
      instrumentOwnerClass();
      instrumentPutLineAndBranchNumbers();
      mv.visitInsn(_BOOLEAN_TRUE);
      instrumentInvokeTouchJump();
      mv.visitLabel(label2);
    }
 else {
      mv.visitVarInsn(Opcodes.ILOAD,_variableIndex + 1);
      Label label1=new Label();
      mv.visitJumpInsn(Opcodes.IFLT,label1);
      instrumentJumpHit(true);
      mv.visitLabel(label1);
    }
  }
 else   if (_lastJump != null) {
    Label label1=instrumentIsLastJump();
    instrumentJumpHit(false);
    mv.visitLabel(label1);
  }
  _lastJump=null;
  Map<Label,SwitchHolder> switchLabels=_firstPassMethodInstrumenter.switchLabels;
  SwitchHolder switchHolder=switchLabels.get(label);
  if (switchHolder != null) {
    instrumentSwitchHit(switchHolder.getLineNumber(),switchHolder.getSwitchNumber(),switchHolder.getBranch());
  }
  Map<Label,Integer> lineLabels=_firstPassMethodInstrumenter.lineLabels;
  Integer line=lineLabels.get(label);
  if (line != null) {
    visitLineNumber(line.intValue(),label);
  }
}

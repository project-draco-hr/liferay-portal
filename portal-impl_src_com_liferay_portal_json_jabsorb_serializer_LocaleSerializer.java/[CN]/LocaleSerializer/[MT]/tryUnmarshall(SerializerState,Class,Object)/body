{
  JSONObject jsonObject=(JSONObject)object;
  String className;
  try {
    className=jsonObject.getString("javaClass");
  }
 catch (  JSONException e) {
    throw new UnmarshallException("could not read javaClass",e);
  }
  if (className == null) {
    throw new UnmarshallException("no javaClass hint");
  }
  try {
    Class javaClass=Class.forName(className);
    Locale.class.isAssignableFrom(javaClass);
  }
 catch (  Exception e) {
    throw new UnmarshallException("error handling javaClass hint " + e.getMessage(),e);
  }
  JSONObject jsonLocale;
  try {
    jsonLocale=jsonObject.getJSONObject("locale");
  }
 catch (  JSONException e) {
    throw new UnmarshallException("could not read locale: " + e.getMessage(),e);
  }
  if (jsonLocale == null) {
    throw new UnmarshallException("locale missing");
  }
  ObjectMatch objectMatch=ObjectMatch.ROUGHLY_SIMILAR;
  if (jsonLocale.has("language")) {
    objectMatch=ObjectMatch.OKAY;
  }
  serializerState.setSerialized(object,objectMatch);
  return objectMatch;
}

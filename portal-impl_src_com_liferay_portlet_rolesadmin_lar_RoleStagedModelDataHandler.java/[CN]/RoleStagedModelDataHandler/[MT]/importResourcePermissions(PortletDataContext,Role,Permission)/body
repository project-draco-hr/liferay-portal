{
  String actionId=permission.getActionId();
  long sourceGroupId=Long.parseLong(permission.getPrimKey());
  int scope=permission.getScope();
  String name=permission.getName();
  if (scope == ResourceConstants.SCOPE_COMPANY) {
    ResourcePermissionServiceUtil.addResourcePermission(portletDataContext.getCompanyGroupId(),portletDataContext.getCompanyId(),name,scope,String.valueOf(portletDataContext.getCompanyGroupId()),importedRole.getRoleId(),actionId);
  }
 else   if (scope == ResourceConstants.SCOPE_GROUP_TEMPLATE) {
    ResourcePermissionServiceUtil.addResourcePermission(GroupConstants.DEFAULT_PARENT_GROUP_ID,portletDataContext.getCompanyId(),name,ResourceConstants.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupConstants.DEFAULT_PARENT_GROUP_ID),importedRole.getRoleId(),actionId);
  }
 else   if (scope == ResourceConstants.SCOPE_GROUP) {
    long groupId=portletDataContext.getCompanyGroupId();
    if (sourceGroupId == portletDataContext.getSourceUserPersonalSiteGroupId()) {
      groupId=portletDataContext.getUserPersonalSiteGroupId();
    }
    ResourcePermissionServiceUtil.addResourcePermission(groupId,portletDataContext.getCompanyId(),name,ResourceConstants.SCOPE_GROUP,String.valueOf(groupId),importedRole.getRoleId(),actionId);
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Individual scoped permission import not supported: " + permission.toString());
    }
  }
}

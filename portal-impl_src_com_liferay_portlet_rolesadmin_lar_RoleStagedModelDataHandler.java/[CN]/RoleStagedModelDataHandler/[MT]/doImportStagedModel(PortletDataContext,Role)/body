{
  long userId=portletDataContext.getUserId(role.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(role,RolesAdminPortletDataHandler.NAMESPACE);
  Role existingRole=RoleLocalServiceUtil.fetchRoleByUuidAndCompanyId(role.getUuid(),portletDataContext.getCompanyId());
  if (existingRole == null) {
    existingRole=RoleLocalServiceUtil.fetchRole(portletDataContext.getCompanyId(),role.getName());
  }
  Role importedRole=null;
  if (existingRole == null) {
    serviceContext.setUuid(role.getUuid());
    importedRole=RoleLocalServiceUtil.addRole(userId,null,0,role.getName(),role.getTitleMap(),role.getDescriptionMap(),role.getType(),role.getSubtype(),serviceContext);
  }
 else {
    importedRole=RoleLocalServiceUtil.updateRole(existingRole.getRoleId(),role.getName(),role.getTitleMap(),role.getDescriptionMap(),role.getSubtype(),serviceContext);
  }
  portletDataContext.importClassedModel(role,importedRole,RolesAdminPortletDataHandler.NAMESPACE);
}

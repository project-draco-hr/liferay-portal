{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(userId)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_U,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(4);
      query.append(_SQL_SELECT_BLOGSSTATSUSER_WHERE);
      query.append(_FINDER_COLUMN_G_U_GROUPID_2);
      query.append(_FINDER_COLUMN_G_U_USERID_2);
      query.append(BlogsStatsUserModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(userId);
      List<BlogsStatsUser> list=q.list();
      result=list;
      BlogsStatsUser blogsStatsUser=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_U,finderArgs,list);
      }
 else {
        blogsStatsUser=list.get(0);
        cacheResult(blogsStatsUser);
        if ((blogsStatsUser.getGroupId() != groupId) || (blogsStatsUser.getUserId() != userId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_U,finderArgs,blogsStatsUser);
        }
      }
      return blogsStatsUser;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_U,finderArgs,new ArrayList<BlogsStatsUser>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (BlogsStatsUser)result;
    }
  }
}

{
  ServiceTrackerList<UserNotificationDefinition> userNotificationDefinitionInstances=getServiceTrackerList(UserNotificationDefinition.class,filter,properties);
  if (Validator.isNull(portlet.getUserNotificationDefinitions())) {
    return userNotificationDefinitionInstances;
  }
  String xml=getContent(portlet.getUserNotificationDefinitions());
  xml=JavaFieldsParser.parse(_classLoader,xml);
  Document document=UnsecureSAXReaderUtil.read(xml);
  Element rootElement=document.getRootElement();
  for (  Element definitionElement : rootElement.elements("definition")) {
    String modelName=definitionElement.elementText("model-name");
    long classNameId=0;
    if (Validator.isNotNull(modelName)) {
      classNameId=PortalUtil.getClassNameId(modelName);
    }
    int notificationType=GetterUtil.getInteger(definitionElement.elementText("notification-type"));
    String description=GetterUtil.getString(definitionElement.elementText("description"));
    UserNotificationDefinition userNotificationDefinition=new UserNotificationDefinition(portlet.getPortletId(),classNameId,notificationType,description);
    for (    Element deliveryTypeElement : definitionElement.elements("delivery-type")) {
      String name=deliveryTypeElement.elementText("name");
      int type=GetterUtil.getInteger(deliveryTypeElement.elementText("type"));
      boolean defaultValue=GetterUtil.getBoolean(deliveryTypeElement.elementText("default"));
      boolean modifiable=GetterUtil.getBoolean(deliveryTypeElement.elementText("modifiable"));
      userNotificationDefinition.addUserNotificationDeliveryType(new UserNotificationDeliveryType(name,type,defaultValue,modifiable));
    }
    userNotificationDefinitionInstances.add(userNotificationDefinition);
  }
  return userNotificationDefinitionInstances;
}

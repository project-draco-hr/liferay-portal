{
  if (!StagingAdvicesThreadLocal.isEnabled()) {
    return methodInvocation.proceed();
  }
  Method method=methodInvocation.getMethod();
  String methodName=method.getName();
  if (!_layoutSetLocalServiceStagingAdviceMethodNames.contains(methodName)) {
    return wrapReturnValue(methodInvocation.proceed());
  }
  Object returnValue=null;
  Object thisObject=methodInvocation.getThis();
  Object[] arguments=methodInvocation.getArguments();
  if (methodName.equals("updateLayoutSetPrototypeLinkEnabled") && (arguments.length == 5)) {
    updateLayoutSetPrototypeLinkEnabled((LayoutSetLocalService)thisObject,(Long)arguments[0],(Boolean)arguments[1],(Boolean)arguments[2],(String)arguments[3]);
  }
 else   if (methodName.equals("updateLogo") && (arguments.length == 4)) {
    returnValue=updateLogo((LayoutSetLocalService)thisObject,(Long)arguments[0],(Boolean)arguments[1],(Boolean)arguments[2],(byte[])arguments[3]);
  }
 else   if (methodName.equals("updateLookAndFeel") && (arguments.length == 6)) {
    returnValue=updateLookAndFeel((LayoutSetLocalService)thisObject,(Long)arguments[0],(Boolean)arguments[1],(String)arguments[2],(String)arguments[3],(String)arguments[4],(Boolean)arguments[5]);
  }
 else   if (methodName.equals("updateSettings")) {
    returnValue=updateSettings((LayoutSetLocalService)thisObject,(Long)arguments[0],(Boolean)arguments[1],(String)arguments[2]);
  }
 else {
    try {
      Class<?> clazz=getClass();
      Class<?>[] parameterTypes=ArrayUtil.append(new Class<?>[]{LayoutSetLocalService.class},method.getParameterTypes());
      Method layoutSetLocalServiceStagingAdviceMethod=clazz.getMethod(methodName,parameterTypes);
      arguments=ArrayUtil.append(new Object[]{thisObject},arguments);
      returnValue=layoutSetLocalServiceStagingAdviceMethod.invoke(this,arguments);
    }
 catch (    InvocationTargetException ite) {
      throw ite.getTargetException();
    }
catch (    NoSuchMethodException nsme) {
      returnValue=methodInvocation.proceed();
    }
  }
  return wrapReturnValue(returnValue);
}

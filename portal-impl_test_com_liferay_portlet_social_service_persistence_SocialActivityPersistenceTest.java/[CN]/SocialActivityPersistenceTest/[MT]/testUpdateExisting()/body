{
  long pk=nextLong();
  SocialActivity newSocialActivity=_persistence.create(pk);
  newSocialActivity.setGroupId(nextLong());
  newSocialActivity.setCompanyId(nextLong());
  newSocialActivity.setUserId(nextLong());
  newSocialActivity.setCreateDate(nextDate());
  newSocialActivity.setMirrorActivityId(nextLong());
  newSocialActivity.setClassNameId(nextLong());
  newSocialActivity.setClassPK(nextLong());
  newSocialActivity.setType(nextInt());
  newSocialActivity.setExtraData(randomString());
  newSocialActivity.setReceiverUserId(nextLong());
  _persistence.update(newSocialActivity,false);
  SocialActivity existingSocialActivity=_persistence.findByPrimaryKey(newSocialActivity.getPrimaryKey());
  assertEquals(existingSocialActivity.getActivityId(),newSocialActivity.getActivityId());
  assertEquals(existingSocialActivity.getGroupId(),newSocialActivity.getGroupId());
  assertEquals(existingSocialActivity.getCompanyId(),newSocialActivity.getCompanyId());
  assertEquals(existingSocialActivity.getUserId(),newSocialActivity.getUserId());
  assertEquals(existingSocialActivity.getCreateDate(),newSocialActivity.getCreateDate());
  assertEquals(existingSocialActivity.getMirrorActivityId(),newSocialActivity.getMirrorActivityId());
  assertEquals(existingSocialActivity.getClassNameId(),newSocialActivity.getClassNameId());
  assertEquals(existingSocialActivity.getClassPK(),newSocialActivity.getClassPK());
  assertEquals(existingSocialActivity.getType(),newSocialActivity.getType());
  assertEquals(existingSocialActivity.getExtraData(),newSocialActivity.getExtraData());
  assertEquals(existingSocialActivity.getReceiverUserId(),newSocialActivity.getReceiverUserId());
}

{
  LinkedHashMap<Long,long[]> scopes=new LinkedHashMap<>();
  if (isCustomizeAnnouncementsDisplayed()) {
    long[] selectedScopeGroupIdsArray=GetterUtil.getLongValues(StringUtil.split(getSelectedScopeGroupIds()));
    long[] selectedScopeOrganizationIdsArray=GetterUtil.getLongValues(StringUtil.split(getSelectedScopeOrganizationIds()));
    long[] selectedScopeRoleIdsArray=GetterUtil.getLongValues(StringUtil.split(getSelectedScopeRoleIds()));
    long[] selectedScopeUserGroupIdsArray=GetterUtil.getLongValues(StringUtil.split(getSelectedScopeUserGroupIds()));
    if (selectedScopeGroupIdsArray.length != 0) {
      scopes.put(PortalUtil.getClassNameId(Group.class.getName()),selectedScopeGroupIdsArray);
    }
    if (selectedScopeOrganizationIdsArray.length != 0) {
      scopes.put(PortalUtil.getClassNameId(Organization.class.getName()),selectedScopeOrganizationIdsArray);
    }
    if (selectedScopeRoleIdsArray.length != 0) {
      scopes.put(PortalUtil.getClassNameId(Role.class.getName()),selectedScopeRoleIdsArray);
    }
    if (selectedScopeUserGroupIdsArray.length != 0) {
      scopes.put(PortalUtil.getClassNameId(UserGroup.class.getName()),selectedScopeUserGroupIdsArray);
    }
  }
 else {
    scopes=AnnouncementsUtil.getAnnouncementScopes(_announcementsRequestHelper.getUserId());
  }
  scopes.put(Long.valueOf(0),new long[]{0});
  return scopes;
}

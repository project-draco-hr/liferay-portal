{
  DDMForm ddmForm=new DDMForm();
  DDMFormField fieldDDMFormField0=new DDMFormField("field0","text");
  fieldDDMFormField0.setDataType(FieldConstants.NUMBER);
  ddmForm.addDDMFormField(fieldDDMFormField0);
  DDMFormField fieldDDMFormField1=new DDMFormField("field1","text");
  fieldDDMFormField1.setDataType(FieldConstants.NUMBER);
  ddmForm.addDDMFormField(fieldDDMFormField1);
  DDMFormField fieldDDMFormField2=new DDMFormField("field2","text");
  fieldDDMFormField2.setDataType(FieldConstants.NUMBER);
  ddmForm.addDDMFormField(fieldDDMFormField2);
  DDMFormValues ddmFormValues=new DDMFormValues(ddmForm);
  DDMFormFieldValue fieldDDMFormFieldValue0=DDMFormValuesTestUtil.createDDMFormFieldValue("field0_instanceId","field0",new UnlocalizedValue("30"));
  List<DDMFormFieldValue> ddmFormFieldValues=new ArrayList<>();
  ddmFormFieldValues.add(fieldDDMFormFieldValue0);
  DDMFormFieldValue fieldDDMFormFieldValue1=DDMFormValuesTestUtil.createDDMFormFieldValue("field1_instanceId","field1",new UnlocalizedValue("15"));
  ddmFormFieldValues.add(fieldDDMFormFieldValue1);
  DDMFormFieldValue fieldDDMFormFieldValue2=DDMFormValuesTestUtil.createDDMFormFieldValue("field2_instanceId","field2",new UnlocalizedValue("10"));
  ddmFormFieldValues.add(fieldDDMFormFieldValue2);
  ddmFormValues.setDDMFormFieldValues(ddmFormFieldValues);
  List<String> actions=ListUtil.fromArray(new String[]{"set(fieldAt(\"field1\", 0), \"visible\", false)","set(fieldAt(\"field2\", 0), \"readOnly\", true)"});
  String condition="get(fieldAt(\"field0\", 0), \"value\") >= 30";
  DDMFormRule ddmFormRule=new DDMFormRule(condition,actions);
  ddmForm.addDDMFormRule(ddmFormRule);
  DDMFormRuleEvaluatorHelper ddmFormRuleEvaluatorHelper=new DDMFormRuleEvaluatorHelper(_ddmExpressionFactory,ddmForm,ddmFormValues,LocaleUtil.US);
  List<DDMFormFieldEvaluationResult> ddmFormFieldEvaluationResults=ddmFormRuleEvaluatorHelper.evaluate();
  Assert.assertEquals(3,ddmFormFieldEvaluationResults.size());
  for (  DDMFormFieldEvaluationResult ddmFormFieldEvaluationResult : ddmFormFieldEvaluationResults) {
    if (ddmFormFieldEvaluationResult.getName().equals("field0")) {
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isVisible());
      Assert.assertEquals(false,ddmFormFieldEvaluationResult.isReadOnly());
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isValid());
      Assert.assertEquals(30.0,ddmFormFieldEvaluationResult.getValue());
    }
 else     if (ddmFormFieldEvaluationResult.getName().equals("field1")) {
      Assert.assertEquals(false,ddmFormFieldEvaluationResult.isVisible());
      Assert.assertEquals(false,ddmFormFieldEvaluationResult.isReadOnly());
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isValid());
      Assert.assertEquals(15.0,ddmFormFieldEvaluationResult.getValue());
    }
 else     if (ddmFormFieldEvaluationResult.getName().equals("field2")) {
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isReadOnly());
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isVisible());
      Assert.assertEquals(true,ddmFormFieldEvaluationResult.isValid());
      Assert.assertEquals(10.0,ddmFormFieldEvaluationResult.getValue());
    }
  }
}

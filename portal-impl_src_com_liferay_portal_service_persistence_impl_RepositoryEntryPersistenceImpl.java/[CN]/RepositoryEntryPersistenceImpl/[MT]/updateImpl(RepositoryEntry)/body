{
  repositoryEntry=toUnwrappedModel(repositoryEntry);
  boolean isNew=repositoryEntry.isNew();
  RepositoryEntryModelImpl repositoryEntryModelImpl=(RepositoryEntryModelImpl)repositoryEntry;
  if (Validator.isNull(repositoryEntry.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    repositoryEntry.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (repositoryEntry.isNew()) {
      session.save(repositoryEntry);
      repositoryEntry.setNew(false);
    }
 else {
      session.merge(repositoryEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !RepositoryEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((repositoryEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryEntryModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{repositoryEntryModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((repositoryEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryEntryModelImpl.getOriginalUuid(),repositoryEntryModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{repositoryEntryModelImpl.getUuid(),repositoryEntryModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((repositoryEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPOSITORYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryEntryModelImpl.getOriginalRepositoryId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_REPOSITORYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPOSITORYID,args);
      args=new Object[]{repositoryEntryModelImpl.getRepositoryId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_REPOSITORYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_REPOSITORYID,args);
    }
  }
  EntityCacheUtil.putResult(RepositoryEntryModelImpl.ENTITY_CACHE_ENABLED,RepositoryEntryImpl.class,repositoryEntry.getPrimaryKey(),repositoryEntry,false);
  clearUniqueFindersCache(repositoryEntry);
  cacheUniqueFindersCache(repositoryEntry);
  repositoryEntry.resetOriginalValues();
  return repositoryEntry;
}

{
  if (in == null) {
    throw new IOException("Stream closed");
  }
  if (n <= 0) {
    return 0;
  }
  long skipped=0;
  long inBufferAvailable=firstInvalidIndex - index;
  if (inBufferAvailable > 0) {
    skipped=(inBufferAvailable < n) ? inBufferAvailable : n;
  }
 else {
    if (markIndex < 0) {
      skipped=in.skip(n);
    }
 else {
      readUnderlyingInputStream();
      inBufferAvailable=firstInvalidIndex - index;
      if (inBufferAvailable > 0) {
        skipped=(inBufferAvailable < n) ? inBufferAvailable : n;
      }
    }
  }
  index+=skipped;
  return skipped;
}

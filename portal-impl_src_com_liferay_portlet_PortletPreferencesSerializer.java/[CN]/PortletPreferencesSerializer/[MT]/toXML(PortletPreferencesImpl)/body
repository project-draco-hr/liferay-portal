{
  try {
    Map<String,Preference> preferences=prefs.getPreferences();
    DocumentFactory docFactory=DocumentFactory.getInstance();
    Element portletPreferences=docFactory.createElement("portlet-preferences");
    Iterator<Map.Entry<String,Preference>> itr=preferences.entrySet().iterator();
    while (itr.hasNext()) {
      Map.Entry<String,Preference> entry=itr.next();
      Preference preference=entry.getValue();
      Element prefEl=docFactory.createElement("preference");
      Element nameEl=docFactory.createElement("name");
      nameEl.addText(preference.getName());
      prefEl.add(nameEl);
      String[] values=preference.getValues();
      for (int i=0; i < values.length; i++) {
        Element valueEl=docFactory.createElement("value");
        valueEl.addText(values[i]);
        prefEl.add(valueEl);
      }
      if (preference.isReadOnly()) {
        Element valueEl=docFactory.createElement("read-only");
        valueEl.addText("true");
        prefEl.add(valueEl);
      }
      portletPreferences.add(prefEl);
    }
    ByteArrayMaker bam=new ByteArrayMaker();
    XMLWriter writer=new XMLWriter(bam,OutputFormat.createCompactFormat());
    ElementImpl portletPreferencesImpl=(ElementImpl)portletPreferences;
    writer.write(portletPreferencesImpl.getElement());
    return bam.toString(StringPool.UTF8);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
}

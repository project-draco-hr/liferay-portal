{
  MBThreadCacheModel mbThreadCacheModel=new MBThreadCacheModel();
  mbThreadCacheModel.uuid=getUuid();
  String uuid=mbThreadCacheModel.uuid;
  if ((uuid != null) && (uuid.length() == 0)) {
    mbThreadCacheModel.uuid=null;
  }
  mbThreadCacheModel.threadId=getThreadId();
  mbThreadCacheModel.groupId=getGroupId();
  mbThreadCacheModel.companyId=getCompanyId();
  mbThreadCacheModel.userId=getUserId();
  mbThreadCacheModel.userName=getUserName();
  String userName=mbThreadCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    mbThreadCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    mbThreadCacheModel.createDate=createDate.getTime();
  }
 else {
    mbThreadCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    mbThreadCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    mbThreadCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  mbThreadCacheModel.categoryId=getCategoryId();
  mbThreadCacheModel.rootMessageId=getRootMessageId();
  mbThreadCacheModel.rootMessageUserId=getRootMessageUserId();
  mbThreadCacheModel.messageCount=getMessageCount();
  mbThreadCacheModel.viewCount=getViewCount();
  mbThreadCacheModel.lastPostByUserId=getLastPostByUserId();
  Date lastPostDate=getLastPostDate();
  if (lastPostDate != null) {
    mbThreadCacheModel.lastPostDate=lastPostDate.getTime();
  }
 else {
    mbThreadCacheModel.lastPostDate=Long.MIN_VALUE;
  }
  mbThreadCacheModel.priority=getPriority();
  mbThreadCacheModel.question=getQuestion();
  mbThreadCacheModel.status=getStatus();
  mbThreadCacheModel.statusByUserId=getStatusByUserId();
  mbThreadCacheModel.statusByUserName=getStatusByUserName();
  String statusByUserName=mbThreadCacheModel.statusByUserName;
  if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
    mbThreadCacheModel.statusByUserName=null;
  }
  Date statusDate=getStatusDate();
  if (statusDate != null) {
    mbThreadCacheModel.statusDate=statusDate.getTime();
  }
 else {
    mbThreadCacheModel.statusDate=Long.MIN_VALUE;
  }
  return mbThreadCacheModel;
}

{
  Class<?> targetClass=target.getClass();
  ClassLoader classLoader=targetClass.getClassLoader();
  List<Class<?>> interfaceClasses=new ArrayList<Class<?>>();
  List<Method> injectionPointMethods=getInjectionPointMethods(target);
  for (  Method injectionPointMethod : injectionPointMethods) {
    Class<?> parameterType=injectionPointMethod.getParameterTypes()[0];
    if (parameterType.isInterface()) {
      interfaceClasses.add(parameterType);
    }
  }
  _unavailableServiceProxy=Proxy.newProxyInstance(classLoader,interfaceClasses.toArray(new Class[0]),_invocationHandler);
  List<InjectionPoint> injectionPoints=new ArrayList<InjectionPoint>();
  for (  Method injectionPointMethod : injectionPointMethods) {
    InjectionPoint injectionPoint=createInjectionPoint(target,injectionPointMethod);
    if (injectionPoint != null) {
      injectionPoints.add(injectionPoint);
    }
  }
  return injectionPoints;
}

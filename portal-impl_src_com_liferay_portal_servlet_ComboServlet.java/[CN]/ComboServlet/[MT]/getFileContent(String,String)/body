{
  String fileContentKey=path.concat(StringPool.QUESTION).concat(minifierType);
  FileContentBag fileContentBag=_fileContents.get(fileContentKey);
  if ((fileContentBag != null) && !PropsValues.COMBO_CHECK_TIMESTAMP) {
    return fileContentBag._fileContent;
  }
  File file=getFile(path);
  long lastModified=file.lastModified();
  if ((fileContentBag != null) && PropsValues.COMBO_CHECK_TIMESTAMP) {
    if (lastModified == fileContentBag._lastModified) {
      return fileContentBag._fileContent;
    }
 else {
      _fileContents.remove(fileContentKey,fileContentBag);
    }
  }
  if (file == null) {
    fileContentBag=_EMPTY_FILE_CONTENT_BAG;
  }
 else {
    String stringFileContent=FileUtil.read(file);
    if (minifierType.equals("css")) {
      stringFileContent=MinifierUtil.minifyCss(stringFileContent);
    }
 else     if (minifierType.equals("js")) {
      stringFileContent=MinifierUtil.minifyJavaScript(stringFileContent);
    }
    fileContentBag=new FileContentBag(stringFileContent.getBytes(StringPool.UTF8),lastModified);
  }
  FileContentBag oldFileContentBag=_fileContents.putIfAbsent(fileContentKey,fileContentBag);
  if (oldFileContentBag != null) {
    fileContentBag=oldFileContentBag;
  }
  return fileContentBag._fileContent;
}

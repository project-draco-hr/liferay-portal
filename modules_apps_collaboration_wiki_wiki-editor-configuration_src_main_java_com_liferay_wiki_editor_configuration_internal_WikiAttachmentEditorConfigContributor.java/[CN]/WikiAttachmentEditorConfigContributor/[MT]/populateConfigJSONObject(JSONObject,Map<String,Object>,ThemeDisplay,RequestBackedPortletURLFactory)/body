{
  boolean allowBrowseDocuments=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:allowBrowseDocuments"));
  if (!allowBrowseDocuments) {
    return;
  }
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  long wikiPageResourcePrimKey=0;
  if (fileBrowserParamsMap != null) {
    wikiPageResourcePrimKey=GetterUtil.getLong(fileBrowserParamsMap.get("wikiPageResourcePrimKey"));
  }
  if (wikiPageResourcePrimKey == 0) {
    return;
  }
  List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(new FileEntryItemSelectorReturnType());
  ItemSelectorCriterion attachmentItemSelectorCriterion=getWikiAttachmentItemSelectorCriterion(wikiPageResourcePrimKey,desiredItemSelectorReturnTypes);
  ItemSelectorCriterion urlItemSelectorCriterion=getURLItemSelectorCriterion();
  ItemSelectorCriterion uploadItemSelectorCriterion=getUploadItemSelectorCriterion(wikiPageResourcePrimKey,themeDisplay,requestBackedPortletURLFactory);
  String name=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  boolean inlineEdit=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:inlineEdit"));
  if (!inlineEdit) {
    String namespace=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:namespace"));
    name=namespace + name;
  }
  String format=StringPool.BLANK;
  try {
    WikiPage wikiPage=_wikiPageLocalService.getPage(wikiPageResourcePrimKey);
    format=wikiPage.getFormat();
  }
 catch (  PortalException pe) {
    _log.error("Unable to get page format for page " + wikiPageResourcePrimKey,pe);
  }
  PortletURL itemSelectorURL=null;
  if (format.equals("html")) {
    ItemSelectorCriterion imageItemSelectorCriterion=getImageItemSelectorCriterion(desiredItemSelectorReturnTypes);
    itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,name + "selectItem",attachmentItemSelectorCriterion,imageItemSelectorCriterion,urlItemSelectorCriterion,uploadItemSelectorCriterion);
  }
 else {
    itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,name + "selectItem",attachmentItemSelectorCriterion,urlItemSelectorCriterion,uploadItemSelectorCriterion);
  }
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL.toString());
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL.toString());
}

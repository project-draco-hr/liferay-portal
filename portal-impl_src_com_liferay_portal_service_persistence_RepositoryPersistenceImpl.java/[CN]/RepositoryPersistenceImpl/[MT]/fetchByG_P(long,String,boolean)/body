{
  Object[] finderArgs=new Object[]{groupId,portletId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P,finderArgs,this);
  }
  if (result instanceof Repository) {
    Repository repository=(Repository)result;
    if ((groupId != repository.getGroupId()) || !Validator.equals(portletId,repository.getPortletId())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_REPOSITORY_WHERE);
    query.append(_FINDER_COLUMN_G_P_GROUPID_2);
    if (portletId == null) {
      query.append(_FINDER_COLUMN_G_P_PORTLETID_1);
    }
 else {
      if (portletId.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_P_PORTLETID_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_P_PORTLETID_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (portletId != null) {
        qPos.add(portletId);
      }
      List<Repository> list=q.list();
      result=list;
      Repository repository=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P,finderArgs,list);
      }
 else {
        repository=list.get(0);
        cacheResult(repository);
        if ((repository.getGroupId() != groupId) || (repository.getPortletId() == null) || !repository.getPortletId().equals(portletId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P,finderArgs,repository);
        }
      }
      return repository;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_P,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Repository)result;
    }
  }
}

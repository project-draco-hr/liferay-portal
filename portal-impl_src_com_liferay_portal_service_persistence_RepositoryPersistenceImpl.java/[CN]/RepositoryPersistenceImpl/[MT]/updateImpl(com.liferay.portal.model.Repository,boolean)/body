{
  repository=toUnwrappedModel(repository);
  boolean isNew=repository.isNew();
  RepositoryModelImpl repositoryModelImpl=(RepositoryModelImpl)repository;
  if (Validator.isNull(repository.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    repository.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,repository,merge);
    repository.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !RepositoryModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((repositoryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{repositoryModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((repositoryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryModelImpl.getOriginalUuid(),Long.valueOf(repositoryModelImpl.getOriginalCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{repositoryModelImpl.getUuid(),Long.valueOf(repositoryModelImpl.getCompanyId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((repositoryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{Long.valueOf(repositoryModelImpl.getOriginalGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{Long.valueOf(repositoryModelImpl.getGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
  }
  EntityCacheUtil.putResult(RepositoryModelImpl.ENTITY_CACHE_ENABLED,RepositoryImpl.class,repository.getPrimaryKey(),repository);
  if (isNew) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{repository.getUuid(),Long.valueOf(repository.getGroupId())},repository);
  }
 else {
    if ((repositoryModelImpl.getColumnBitmask() & FINDER_PATH_FETCH_BY_UUID_G.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{repositoryModelImpl.getOriginalUuid(),Long.valueOf(repositoryModelImpl.getOriginalGroupId())};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_G,args);
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_UUID_G,args);
      FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{repository.getUuid(),Long.valueOf(repository.getGroupId())},repository);
    }
  }
  return repository;
}

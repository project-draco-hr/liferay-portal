{
  JSONArray newFacetsJSONArray=JSONFactoryUtil.createJSONArray();
  for (  SearchFacet searchFacet : _searchFacetTracker.getSearchFacets()) {
    String className=ParamUtil.getString(actionRequest,searchFacet.getClassName() + "className");
    String displayStyle=ParamUtil.getString(actionRequest,searchFacet.getClassName() + "displayStyle");
    String fieldName=ParamUtil.getString(actionRequest,searchFacet.getClassName() + "fieldName");
    String label=ParamUtil.getString(actionRequest,searchFacet.getClassName() + "label");
    String order=ParamUtil.getString(actionRequest,searchFacet.getClassName() + "order");
    boolean isStatic=ParamUtil.getBoolean(actionRequest,searchFacet.getClassName() + "static");
    double weight=ParamUtil.getDouble(actionRequest,searchFacet.getClassName() + "weight");
    JSONObject facetJSONObject=JSONFactoryUtil.createJSONObject();
    facetJSONObject.put("className",className);
    facetJSONObject.put("displayStyle",displayStyle);
    facetJSONObject.put("fieldName",fieldName);
    facetJSONObject.put("label",label);
    facetJSONObject.put("order",order);
    facetJSONObject.put("searchFacetClassName",searchFacet.getClassName());
    facetJSONObject.put("static",isStatic);
    facetJSONObject.put("weight",weight);
    newFacetsJSONArray.put(facetJSONObject);
  }
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  jsonObject.put("facets",newFacetsJSONArray);
  setPreference(actionRequest,"searchConfiguration",jsonObject.toString());
  super.processAction(portletConfig,actionRequest,actionResponse);
}

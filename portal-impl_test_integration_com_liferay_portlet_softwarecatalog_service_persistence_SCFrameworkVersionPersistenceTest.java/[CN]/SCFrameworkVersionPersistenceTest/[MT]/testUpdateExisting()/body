{
  long pk=RandomTestUtil.nextLong();
  SCFrameworkVersion newSCFrameworkVersion=_persistence.create(pk);
  newSCFrameworkVersion.setGroupId(RandomTestUtil.nextLong());
  newSCFrameworkVersion.setCompanyId(RandomTestUtil.nextLong());
  newSCFrameworkVersion.setUserId(RandomTestUtil.nextLong());
  newSCFrameworkVersion.setUserName(RandomTestUtil.randomString());
  newSCFrameworkVersion.setCreateDate(RandomTestUtil.nextDate());
  newSCFrameworkVersion.setModifiedDate(RandomTestUtil.nextDate());
  newSCFrameworkVersion.setName(RandomTestUtil.randomString());
  newSCFrameworkVersion.setUrl(RandomTestUtil.randomString());
  newSCFrameworkVersion.setActive(RandomTestUtil.randomBoolean());
  newSCFrameworkVersion.setPriority(RandomTestUtil.nextInt());
  _scFrameworkVersions.add(_persistence.update(newSCFrameworkVersion));
  SCFrameworkVersion existingSCFrameworkVersion=_persistence.findByPrimaryKey(newSCFrameworkVersion.getPrimaryKey());
  Assert.assertEquals(existingSCFrameworkVersion.getFrameworkVersionId(),newSCFrameworkVersion.getFrameworkVersionId());
  Assert.assertEquals(existingSCFrameworkVersion.getGroupId(),newSCFrameworkVersion.getGroupId());
  Assert.assertEquals(existingSCFrameworkVersion.getCompanyId(),newSCFrameworkVersion.getCompanyId());
  Assert.assertEquals(existingSCFrameworkVersion.getUserId(),newSCFrameworkVersion.getUserId());
  Assert.assertEquals(existingSCFrameworkVersion.getUserName(),newSCFrameworkVersion.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingSCFrameworkVersion.getCreateDate()),Time.getShortTimestamp(newSCFrameworkVersion.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingSCFrameworkVersion.getModifiedDate()),Time.getShortTimestamp(newSCFrameworkVersion.getModifiedDate()));
  Assert.assertEquals(existingSCFrameworkVersion.getName(),newSCFrameworkVersion.getName());
  Assert.assertEquals(existingSCFrameworkVersion.getUrl(),newSCFrameworkVersion.getUrl());
  Assert.assertEquals(existingSCFrameworkVersion.getActive(),newSCFrameworkVersion.getActive());
  Assert.assertEquals(existingSCFrameworkVersion.getPriority(),newSCFrameworkVersion.getPriority());
}

{
  UploadPortletRequest uploadPortletRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long groupId=ParamUtil.getLong(actionRequest,"groupId");
  long liveGroupId=ParamUtil.getLong(actionRequest,"liveGroupId");
  long stagingGroupId=ParamUtil.getLong(actionRequest,"stagingGroupId");
  boolean privateLayout=ParamUtil.getBoolean(actionRequest,"privateLayout");
  long parentLayoutId=ParamUtil.getLong(uploadPortletRequest,"parentLayoutId");
  Map<Locale,String> nameMap=LocalizationUtil.getLocalizationMap(actionRequest,"name");
  Map<Locale,String> titleMap=LocalizationUtil.getLocalizationMap(actionRequest,"title");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(actionRequest,"description");
  Map<Locale,String> keywordsMap=LocalizationUtil.getLocalizationMap(actionRequest,"keywords");
  Map<Locale,String> robotsMap=LocalizationUtil.getLocalizationMap(actionRequest,"robots");
  String type=ParamUtil.getString(uploadPortletRequest,"type");
  boolean hidden=ParamUtil.getBoolean(uploadPortletRequest,"hidden");
  Map<Locale,String> friendlyURLMap=LocalizationUtil.getLocalizationMap(actionRequest,"friendlyURL");
  long layoutPrototypeId=ParamUtil.getLong(uploadPortletRequest,"layoutPrototypeId");
  ServiceContext serviceContext=ServiceContextFactory.getInstance(Layout.class.getName(),actionRequest);
  Layout layout=null;
  boolean inheritFromParentLayoutId=ParamUtil.getBoolean(uploadPortletRequest,"inheritFromParentLayoutId");
  UnicodeProperties typeSettingsProperties=PropertiesParamUtil.getProperties(actionRequest,"TypeSettingsProperties--");
  if (inheritFromParentLayoutId && (parentLayoutId > 0)) {
    Layout parentLayout=layoutLocalService.getLayout(groupId,privateLayout,parentLayoutId);
    layout=layoutService.addLayout(groupId,privateLayout,parentLayoutId,nameMap,titleMap,parentLayout.getDescriptionMap(),parentLayout.getKeywordsMap(),parentLayout.getRobotsMap(),parentLayout.getType(),parentLayout.getTypeSettings(),hidden,friendlyURLMap,serviceContext);
    inheritMobileRuleGroups(layout,serviceContext);
    if (parentLayout.isTypePortlet()) {
      ActionUtil.copyPreferences(actionRequest,layout,parentLayout);
      SitesUtil.copyLookAndFeel(layout,parentLayout);
    }
  }
 else   if (layoutPrototypeId > 0) {
    LayoutPrototype layoutPrototype=layoutPrototypeService.getLayoutPrototype(layoutPrototypeId);
    boolean layoutPrototypeLinkEnabled=ParamUtil.getBoolean(uploadPortletRequest,"layoutPrototypeLinkEnabled" + layoutPrototype.getUuid());
    serviceContext.setAttribute("layoutPrototypeLinkEnabled",layoutPrototypeLinkEnabled);
    serviceContext.setAttribute("layoutPrototypeUuid",layoutPrototype.getUuid());
    layout=layoutService.addLayout(groupId,privateLayout,parentLayoutId,nameMap,titleMap,descriptionMap,keywordsMap,robotsMap,LayoutConstants.TYPE_PORTLET,typeSettingsProperties.toString(),hidden,friendlyURLMap,serviceContext);
    SitesUtil.mergeLayoutPrototypeLayout(layout.getGroup(),layout);
  }
 else {
    long copyLayoutId=ParamUtil.getLong(uploadPortletRequest,"copyLayoutId");
    Layout copyLayout=null;
    String layoutTemplateId=ParamUtil.getString(uploadPortletRequest,"layoutTemplateId",PropsValues.DEFAULT_LAYOUT_TEMPLATE_ID);
    if (copyLayoutId > 0) {
      copyLayout=layoutLocalService.fetchLayout(groupId,privateLayout,copyLayoutId);
      if ((copyLayout != null) && copyLayout.isTypePortlet()) {
        LayoutTypePortlet copyLayoutTypePortlet=(LayoutTypePortlet)copyLayout.getLayoutType();
        layoutTemplateId=copyLayoutTypePortlet.getLayoutTemplateId();
        typeSettingsProperties=copyLayout.getTypeSettingsProperties();
      }
    }
    layout=layoutService.addLayout(groupId,privateLayout,parentLayoutId,nameMap,titleMap,descriptionMap,keywordsMap,robotsMap,type,typeSettingsProperties.toString(),hidden,friendlyURLMap,serviceContext);
    LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
    layoutTypePortlet.setLayoutTemplateId(themeDisplay.getUserId(),layoutTemplateId);
    layoutService.updateLayout(groupId,privateLayout,layout.getLayoutId(),layout.getTypeSettings());
    if ((copyLayout != null) && copyLayout.isTypePortlet()) {
      ActionUtil.copyPreferences(actionRequest,layout,copyLayout);
      SitesUtil.copyLookAndFeel(layout,copyLayout);
    }
  }
  updateLookAndFeel(actionRequest,themeDisplay.getCompanyId(),liveGroupId,stagingGroupId,privateLayout,layout.getLayoutId(),layout.getTypeSettingsProperties());
  String redirect=ParamUtil.getString(actionRequest,"redirect");
  if (Validator.isNull(redirect)) {
    redirect=PortalUtil.getLayoutFullURL(layout,themeDisplay);
    MultiSessionMessages.add(actionRequest,"layoutAdded",layout);
  }
  actionRequest.setAttribute(WebKeys.REDIRECT,redirect);
}

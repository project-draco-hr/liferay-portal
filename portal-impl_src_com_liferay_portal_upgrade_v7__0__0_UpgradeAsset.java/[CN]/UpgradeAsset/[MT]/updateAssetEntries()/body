{
  long classNameId=PortalUtil.getClassNameId(JournalArticle.class);
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    ps=con.prepareStatement("select resourcePrimKey, structureId from JournalArticle " + "where structureId != ''");
    rs=ps.executeQuery();
    while (rs.next()) {
      long resourcePrimKey=rs.getLong("resourcePrimKey");
      String structureId=rs.getString("structureId");
      long ddmStructureId=getDDMStructureId(structureId);
      runSQL("update AssetEntry set classTypeId = " + ddmStructureId + " where classNameId = "+ classNameId+ " and classPK = "+ resourcePrimKey);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    StringBundler sb=new StringBundler(9);
    sb.append("select JournalArticle.resourcePrimKey from (select ");
    sb.append("JournalArticle.resourcePrimkey as primKey, ");
    sb.append("max(JournalArticle.version) as maxVersion from ");
    sb.append("JournalArticle group by ");
    sb.append("JournalArticle.resourcePrimkey) temp_table inner join ");
    sb.append("JournalArticle on (JournalArticle.indexable = ");
    sb.append("[$FALSE$]) and (JournalArticle.status = 0) and ");
    sb.append("(JournalArticle.resourcePrimkey = temp_table.primKey) ");
    sb.append("and (JournalArticle.version = temp_table.maxVersion)");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      long classPK=rs.getLong("resourcePrimKey");
      runSQL("update AssetEntry set listable = [$FALSE$] where " + "classNameId = " + classNameId + " and classPK = "+ classPK);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

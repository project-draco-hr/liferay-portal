{
  try {
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    int start=(startPage * itemsPerPage) - itemsPerPage;
    int end=startPage * itemsPerPage;
    Hits results=getHits(themeDisplay.getCompanyId(),groupId,userId,keywords,start,end);
    String[] queryTerms=results.getQueryTerms();
    int total=results.getLength();
    Object[] values=addSearchResults(queryTerms,keywords,startPage,itemsPerPage,total,start,getTitle(keywords),getSearchPath(),format,themeDisplay);
    com.liferay.portal.kernel.xml.Document doc=(com.liferay.portal.kernel.xml.Document)values[0];
    Element root=(Element)values[1];
    for (int i=0; i < results.getDocs().length; i++) {
      Document result=results.doc(i);
      String portletId=result.get(Field.PORTLET_ID);
      Portlet portlet=PortletLocalServiceUtil.getPortletById(themeDisplay.getCompanyId(),portletId);
      String snippet=results.snippet(i);
      long resultGroupId=GetterUtil.getLong(result.get(Field.GROUP_ID));
      PortletURL portletURL=getPortletURL(request,portletId,resultGroupId);
      Indexer indexer=(Indexer)InstancePool.get(portlet.getIndexerClass());
      DocumentSummary docSummary=indexer.getDocumentSummary(result,snippet,portletURL);
      String title=docSummary.getTitle();
      String url=getURL(themeDisplay,resultGroupId,result,portletURL);
      Date modifedDate=result.getDate(Field.MODIFIED);
      String content=docSummary.getContent();
      String[] tags=new String[0];
      Field assetTagNamesField=result.getFields().get(Field.ASSET_TAG_NAMES);
      if (assetTagNamesField != null) {
        tags=assetTagNamesField.getValues();
      }
      double ratings=0.0;
      String entryClassName=result.get(Field.ENTRY_CLASS_NAME);
      long entryClassPK=GetterUtil.getLong(result.get(Field.ENTRY_CLASS_PK));
      if ((Validator.isNotNull(entryClassName)) && (entryClassPK > 0)) {
        RatingsStats stats=RatingsStatsLocalServiceUtil.getStats(entryClassName,entryClassPK);
        ratings=stats.getTotalScore();
      }
      double score=results.score(i);
      addSearchResult(root,title,url,modifedDate,content,tags,ratings,score,format);
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Return\n" + doc.asXML());
    }
    return doc.asXML();
  }
 catch (  Exception e) {
    throw new SearchException(e);
  }
}

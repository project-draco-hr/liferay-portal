{
  String value="";
  if (userId <= 0 || Validator.isNull(attrId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("userId or attrId is null.");
    }
    return value;
  }
  try {
    User user=UserLocalServiceUtil.getUserById(userId);
    Contact contact=user.getContact();
switch (attrId) {
case 1:
      value=user.getCompanyMx();
    break;
case 2:
  value="" + contact.getAccountId();
break;
case 3:
value="" + contact.getParentContactId();
break;
case 4:
value=user.getFirstName();
break;
case 5:
value=user.getMiddleName();
break;
case 6:
value=user.getLastName();
break;
case 7:
value="" + contact.getPrefixId();
break;
case 8:
value="" + contact.getSuffixId();
break;
case 9:
value="" + user.isMale();
break;
case 10:
value=DateTimeUtil.formatDate(user.getBirthday());
break;
case 11:
value=contact.getSmsSn();
break;
case 12:
value=contact.getAimSn();
break;
case 13:
value=contact.getFacebookSn();
break;
case 14:
value=contact.getIcqSn();
break;
case 15:
value=contact.getJabberSn();
break;
case 16:
value=contact.getMsnSn();
break;
case 17:
value=contact.getMySpaceSn();
break;
case 18:
value=contact.getSkypeSn();
break;
case 19:
value=contact.getTwitterSn();
break;
case 20:
value=contact.getYmSn();
break;
case 21:
value=contact.getEmployeeStatusId();
break;
case 22:
value=contact.getEmployeeNumber();
break;
case 23:
value=contact.getJobTitle();
break;
case 24:
value=contact.getJobClass();
break;
case 25:
value=contact.getHoursOfOperation();
break;
case 26:
value=user.getUuid();
break;
case 27:
value="" + userId;
break;
case 28:
value="" + user.getCompanyId();
break;
case 29:
value=DateTimeUtil.formatDate(user.getCreateDate());
break;
case 30:
value=DateTimeUtil.formatDate(user.getModifiedDate());
break;
case 31:
value="" + contact.getContactId();
break;
case 32:
value="" + user.getPasswordReset();
break;
case 33:
value="" + user.getPasswordModified();
break;
case 34:
value="" + user.getGraceLoginCount();
break;
case 35:
value=user.getScreenName();
break;
case 36:
value=user.getEmailAddress();
break;
case 37:
value=user.getOpenId();
break;
case 38:
value="" + user.getPortraitId();
break;
case 39:
value=user.getLanguageId();
break;
case 40:
value=user.getTimeZoneId();
break;
case 41:
value=user.getGreeting();
break;
case 42:
value=user.getComments();
break;
case 43:
value=DateTimeUtil.formatDate(user.getLoginDate());
break;
case 44:
value=user.getLoginIP();
break;
case 45:
value=DateTimeUtil.formatDate(user.getLastLoginDate());
break;
case 46:
value=user.getLastLoginIP();
break;
case 47:
value=DateTimeUtil.formatDate(user.getLastFailedLoginDate());
break;
case 48:
value="" + user.getFailedLoginAttempts();
break;
case 49:
value="" + user.getAgreedToTermsOfUse();
break;
case 50:
Date dob=user.getBirthday();
Date today=new Date();
TimeZone timeZone=user.getTimeZone();
Calendar ageCal=Calendar.getInstance(timeZone);
Date ageDate=new Date(today.getTime() - dob.getTime());
ageCal.setTime(ageDate);
value=(ageCal.get(Calendar.YEAR) - 1970) + "." + ageCal.get(Calendar.MONTH);
break;
default :
if (_log.isDebugEnabled()) {
_log.debug("No matching attribute, returning empty");
}
value="";
break;
}
}
 catch (PortalException ex) {
_log.error(ex);
}
catch (SystemException ex) {
_log.error(ex);
}
return value;
}

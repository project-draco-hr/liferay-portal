{
  SearchContext searchContext=new SearchContext();
  searchContext.setCompanyId(_fileEntry.getCompanyId());
  searchContext.setFolderIds(new long[]{_fileEntry.getFolderId()});
  searchContext.setGroupIds(new long[]{_fileEntry.getRepositoryId()});
  searchContext.setKeywords(keywords);
  QueryConfig queryConfig=new QueryConfig();
  queryConfig.setHighlightEnabled(false);
  queryConfig.setScoreEnabled(false);
  searchContext.setQueryConfig(queryConfig);
  Indexer indexer=IndexerRegistryUtil.getIndexer(DLFileEntryConstants.getClassName());
  Hits hits=indexer.search(searchContext);
  List<Document> documents=hits.toList();
  boolean found=false;
  for (  Document document : documents) {
    long fileEntryId=GetterUtil.getLong(document.get(Field.ENTRY_CLASS_PK));
    if (fileEntryId == _fileEntry.getFileEntryId()) {
      found=true;
      break;
    }
  }
  String message="Search engine could not find ";
  if (rootFolder) {
    message+="root file entry by " + keywords;
  }
 else {
    message+="file entry by " + keywords;
  }
  message+=" using query " + hits.getQuery();
  if (assertTrue) {
    Assert.assertTrue(message,found);
  }
 else {
    Assert.assertFalse(message,found);
  }
}

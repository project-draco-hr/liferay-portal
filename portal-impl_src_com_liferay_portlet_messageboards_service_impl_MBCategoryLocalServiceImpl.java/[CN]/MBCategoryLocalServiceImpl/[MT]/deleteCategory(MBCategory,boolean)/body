{
  List<MBCategory> categories=mbCategoryPersistence.findByG_P(category.getGroupId(),category.getCategoryId());
  for (  MBCategory curCategory : categories) {
    if (includeTrashedEntries || !curCategory.isInTrashExplicitly()) {
      mbCategoryLocalService.deleteCategory(curCategory,includeTrashedEntries);
    }
  }
  mbThreadLocalService.deleteThreads(category.getGroupId(),category.getCategoryId(),includeTrashedEntries);
  try {
    mbMailingListLocalService.deleteCategoryMailingList(category.getGroupId(),category.getCategoryId());
  }
 catch (  NoSuchMailingListException nsmle) {
  }
  subscriptionLocalService.deleteSubscriptions(category.getCompanyId(),MBCategory.class.getName(),category.getCategoryId());
  expandoRowLocalService.deleteRows(category.getCategoryId());
  resourceLocalService.deleteResource(category.getCompanyId(),MBCategory.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,category.getCategoryId());
  if (category.isInTrashExplicitly()) {
    trashEntryLocalService.deleteEntry(MBCategory.class.getName(),category.getCategoryId());
  }
 else {
    trashVersionLocalService.deleteTrashVersion(MBCategory.class.getName(),category.getCategoryId());
  }
  mbCategoryPersistence.remove(category);
}

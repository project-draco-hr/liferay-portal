{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=serviceContext.getScopeGroupId();
  parentCategoryId=getParentCategoryId(groupId,parentCategoryId);
  Date now=new Date();
  validate(name);
  long categoryId=counterLocalService.increment();
  MBCategory category=mbCategoryPersistence.create(categoryId);
  category.setUuid(serviceContext.getUuid());
  category.setGroupId(groupId);
  category.setCompanyId(user.getCompanyId());
  category.setUserId(user.getUserId());
  category.setUserName(user.getFullName());
  category.setCreateDate(serviceContext.getCreateDate(now));
  category.setModifiedDate(serviceContext.getModifiedDate(now));
  category.setParentCategoryId(parentCategoryId);
  category.setName(name);
  category.setDescription(description);
  category.setDisplayStyle(displayStyle);
  mbCategoryPersistence.update(category,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addCategoryResources(category,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addCategoryResources(category,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  mbMailingListLocalService.addMailingList(userId,groupId,category.getCategoryId(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,allowAnonymousEmail,serviceContext);
  ExpandoBridge expandoBridge=category.getExpandoBridge();
  expandoBridge.setAttributes(serviceContext);
  return category;
}

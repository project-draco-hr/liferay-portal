{
  long companyId=PortalUtil.getCompanyId(request);
  try {
    return UserLocalServiceUtil.getUserByScreenName(companyId,"tck");
  }
 catch (  Exception e) {
    long creatorUserId=0;
    boolean autoPassword=false;
    String password1="password";
    String password2=password1;
    boolean autoScreenName=false;
    String screenName="tck";
    String emailAddress="tck@liferay.com";
    long facebookId=0;
    String openId=StringPool.BLANK;
    Locale locale=LocaleUtil.US;
    String firstName="TCK";
    String middleName=StringPool.BLANK;
    String lastName="User";
    long prefixId=0;
    long suffixId=0;
    boolean male=true;
    int birthdayMonth=Calendar.JANUARY;
    int birthdayDay=1;
    int birthdayYear=1970;
    String jobTitle=StringPool.BLANK;
    long[] groupIds=null;
    long[] organizationIds=null;
    long[] roleIds=null;
    long[] userGroupIds=null;
    boolean sendEmail=false;
    ServiceContext serviceContext=new ServiceContext();
    User user=UserLocalServiceUtil.addUser(creatorUserId,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,facebookId,openId,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,serviceContext);
    long userId=user.getUserId();
    UserLocalServiceUtil.updateAgreedToTermsOfUse(userId,true);
    UserLocalServiceUtil.updatePasswordReset(userId,false);
    UserLocalServiceUtil.updateReminderQuery(userId,"TCK","TCK");
    return user;
  }
}

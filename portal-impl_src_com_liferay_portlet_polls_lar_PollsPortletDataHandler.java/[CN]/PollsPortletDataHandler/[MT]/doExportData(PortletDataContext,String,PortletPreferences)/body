{
  portletDataContext.addPermissions("com.liferay.portlet.polls",portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery questionActionableDynamicQuery=new PollsQuestionActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      PollsQuestion pollsQuestion=(PollsQuestion)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,pollsQuestion);
    }
  }
;
  questionActionableDynamicQuery.setGroupId(portletDataContext.getGroupId());
  questionActionableDynamicQuery.performActions();
  ActionableDynamicQuery choiceActionableDynamicQuery=new PollsChoiceActionableDynamicQuery(){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
    }
    @Override protected void performAction(    Object object) throws PortalException {
      PollsChoice pollsChoice=(PollsChoice)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,pollsChoice);
    }
  }
;
  choiceActionableDynamicQuery.setGroupId(portletDataContext.getGroupId());
  choiceActionableDynamicQuery.performActions();
  if (portletDataContext.getBooleanParameter(PollsPortletDataHandler.NAMESPACE,"votes")) {
    ActionableDynamicQuery voteActionableDynamicQuery=new PollsVoteActionableDynamicQuery(){
      @Override protected void addCriteria(      DynamicQuery dynamicQuery){
        portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
      }
      @Override protected void performAction(      Object object) throws PortalException {
        PollsVote pollsVote=(PollsVote)object;
        StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,pollsVote);
      }
    }
;
    voteActionableDynamicQuery.setGroupId(portletDataContext.getGroupId());
    voteActionableDynamicQuery.performActions();
  }
  return getExportDataRootElementString(rootElement);
}

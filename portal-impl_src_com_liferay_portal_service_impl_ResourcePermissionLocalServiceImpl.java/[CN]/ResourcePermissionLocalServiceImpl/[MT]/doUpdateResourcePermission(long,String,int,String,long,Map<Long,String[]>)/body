{
  boolean flushEnabled=PermissionThreadLocal.isFlushEnabled();
  PermissionThreadLocal.setIndexEnabled(false);
  try {
    Set<Long> roleIds=roleIdsToActionIds.keySet();
    List<ResourcePermission> resourcePermissions=resourcePermissionPersistence.findByC_N_S_P(companyId,name,scope,primKey);
    for (    ResourcePermission resourcePermission : resourcePermissions) {
      long roleId=resourcePermission.getRoleId();
      if (!roleIds.contains(roleId)) {
        continue;
      }
      String[] actionIds=roleIdsToActionIds.remove(roleId);
      doUpdateResourcePermission(companyId,name,scope,primKey,ownerId,roleId,actionIds,ResourcePermissionConstants.OPERATOR_SET,true);
    }
    if (roleIdsToActionIds.isEmpty()) {
      return;
    }
    for (    Map.Entry<Long,String[]> entry : roleIdsToActionIds.entrySet()) {
      long roleId=entry.getKey();
      String[] actionIds=entry.getValue();
      doUpdateResourcePermission(companyId,name,scope,primKey,ownerId,roleId,actionIds,ResourcePermissionConstants.OPERATOR_SET,false);
    }
  }
  finally {
    PermissionThreadLocal.setIndexEnabled(flushEnabled);
    PermissionCacheUtil.clearCache();
    SearchEngineUtil.updatePermissionFields(name,primKey);
  }
}

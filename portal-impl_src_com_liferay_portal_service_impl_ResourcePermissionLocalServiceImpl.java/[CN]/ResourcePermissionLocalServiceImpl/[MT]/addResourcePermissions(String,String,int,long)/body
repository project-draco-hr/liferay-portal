{
  List<Role> roles=rolePersistence.findByName(roleName);
  if (roles.isEmpty()) {
    return;
  }
  Session session=resourcePermissionPersistence.openSession();
  try {
    String sql=CustomSQLUtil.get(_UPDATE_ACTION_IDS);
    sql=StringUtil.replace(sql,"[$ROLE_ID$]",ListUtil.toString(roles,Role.ROLE_ID_ACCESSOR));
    SQLQuery sqlQuery=session.createSynchronizedSQLQuery(sql);
    QueryPos qPos=QueryPos.getInstance(sqlQuery);
    qPos.add(resourceActionBitwiseValue);
    qPos.add(resourceActionBitwiseValue);
    qPos.add(resourceName);
    qPos.add(scope);
    sqlQuery.executeUpdate();
    sql=CustomSQLUtil.get(_FIND_MISSING_RESOURCE_PERMISSIONS);
    sqlQuery=session.createSynchronizedSQLQuery(sql);
    sqlQuery.addScalar("companyId",Type.LONG);
    sqlQuery.addScalar("name",Type.STRING);
    sqlQuery.addScalar("scope",Type.INTEGER);
    sqlQuery.addScalar("primKey",Type.STRING);
    sqlQuery.addScalar("roleId",Type.LONG);
    qPos=QueryPos.getInstance(sqlQuery);
    qPos.add(resourceName);
    qPos.add(scope);
    qPos.add(roleName);
    List<Object[]> resourcePermissionArrays=sqlQuery.list(true);
    if (resourcePermissionArrays.isEmpty()) {
      return;
    }
    for (    Object[] resourcePermissionArray : resourcePermissionArrays) {
      long resourcePermissionId=counterLocalService.increment(ResourcePermission.class.getName());
      ResourcePermission resourcePermission=resourcePermissionPersistence.create(resourcePermissionId);
      resourcePermission.setCompanyId((Long)resourcePermissionArray[0]);
      resourcePermission.setName((String)resourcePermissionArray[1]);
      resourcePermission.setScope((Integer)resourcePermissionArray[2]);
      String primKey=(String)resourcePermissionArray[3];
      resourcePermission.setPrimKey(primKey);
      resourcePermission.setPrimKeyId(GetterUtil.getLong(primKey));
      resourcePermission.setRoleId((Long)resourcePermissionArray[4]);
      resourcePermission.setActionIds(resourceActionBitwiseValue);
      resourcePermission.setViewPermission(resourceActionBitwiseValue % 2 == 1);
      session.save(resourcePermission);
      PermissionCacheUtil.clearResourcePermissionCache(resourcePermission.getScope(),resourcePermission.getName(),resourcePermission.getPrimKey());
    }
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    resourcePermissionPersistence.closeSession(session);
    resourcePermissionPersistence.clearCache();
  }
}

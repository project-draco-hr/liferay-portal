{
  Role toRole=roleLocalService.getRole(toRoleId);
  ResourcePermission resourcePermission=getResourcePermission(resourcePermissionId);
  long fromRoleId=resourcePermission.getRoleId();
  long companyId=resourcePermission.getCompanyId();
  String name=resourcePermission.getName();
  int scope=resourcePermission.getScope();
  String primKey=resourcePermission.getPrimKey();
  String[] actionIds;
  if (toRole.getType() == RoleConstants.TYPE_REGULAR) {
    actionIds=ResourceActionsUtil.getModelResourceActions(name).toArray(new String[0]);
  }
 else {
    actionIds=ResourceActionsUtil.getModelResourceCommunityDefaultActions(name).toArray(new String[0]);
  }
  setResourcePermissions(companyId,name,scope,primKey,toRoleId,actionIds);
  resourcePermissionPersistence.remove(resourcePermissionId);
  if (getRoleResourcePermissions(fromRoleId).isEmpty()) {
    roleLocalService.deleteRole(fromRoleId);
  }
}

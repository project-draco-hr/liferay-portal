{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    CalEvent event=null;
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      event=updateEvent(actionRequest);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteEvent(actionRequest);
    }
    WindowState windowState=actionRequest.getWindowState();
    if (!windowState.equals(LiferayWindowState.POP_UP)) {
      sendRedirect(actionRequest,actionResponse);
    }
 else {
      String redirect=PortalUtil.escapeRedirect(ParamUtil.getString(actionRequest,"redirect"));
      if (Validator.isNotNull(redirect)) {
        if (cmd.equals(Constants.ADD) && (event != null)) {
          redirect=HttpUtil.addParameter(redirect,"className",CalEvent.class.getName());
          redirect=HttpUtil.addParameter(redirect,"classPK",event.getEventId());
        }
        actionResponse.sendRedirect(redirect);
      }
    }
  }
 catch (  Exception e) {
    if (e instanceof NoSuchEventException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portlet.calendar.error");
    }
 else     if (e instanceof EventDurationException || e instanceof EventEndDateException || e instanceof EventStartDateException|| e instanceof EventTitleException|| e instanceof SanitizerException) {
      SessionErrors.add(actionRequest,e.getClass());
    }
 else     if (e instanceof AssetCategoryException || e instanceof AssetTagException) {
      SessionErrors.add(actionRequest,e.getClass(),e);
    }
 else {
      Throwable cause=e.getCause();
      if (cause instanceof SanitizerException) {
        SessionErrors.add(actionRequest,SanitizerException.class);
      }
 else {
        throw e;
      }
    }
  }
}

{
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("link=PublicRenderParameters")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("link=PublicRenderParameters"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("Render in PE1"));
  verifyTrue(selenium.isTextPresent("Render in PE2"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SetRenderinPE']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SetRenderinPE']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("1234567"));
  verifyTrue(selenium.isTextPresent("number4"));
  verifyTrue(selenium.isTextPresent("DefaultNamespace1"));
  verifyTrue(selenium.isTextPresent("DefaultNamespace2"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SendDefaultNamespaceEvent']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SendDefaultNamespaceEvent']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("EventValue:EventingUsesDefaultNamespace"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SetDefaultNameSpaceRender']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SetDefaultNameSpaceRender']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("PublicRenderValue:RenderUsesDefaultNamespace"));
  verifyTrue(selenium.isTextPresent("NoNameSpace1"));
  verifyTrue(selenium.isTextPresent("NoNameSpace2"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SendNoNamespaceEvent']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SendNoNamespaceEvent']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("EventValue:EventUsesNoNameSpace"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SetNoNameSpaceRender']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SetNoNameSpaceRender']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("PublicRenderValue:RenderUsesNoNamespace"));
  verifyTrue(selenium.isTextPresent("RenderAlias1"));
  verifyTrue(selenium.isTextPresent("RenderAlias2"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='RenderQnameAlias']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='RenderQnameAlias']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("RenderAlias : prpAliasValue"));
  verifyTrue(selenium.isTextPresent("QNameURINull1"));
  verifyTrue(selenium.isTextPresent("QNameURINull2"));
  for (int second=0; ; second++) {
    if (second >= 60) {
      fail("timeout");
    }
    try {
      if (selenium.isElementPresent("//a[text()='SetQNameNullNameSpaceRender']")) {
        break;
      }
    }
 catch (    Exception e) {
    }
    Thread.sleep(1000);
  }
  selenium.click(RuntimeVariables.replace("//a[text()='SetQNameNullNameSpaceRender']"));
  selenium.waitForPageToLoad("30000");
  verifyTrue(selenium.isTextPresent("RenderUsesDefaultNamespace"));
}

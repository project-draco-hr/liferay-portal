{
  portletDataContext.addPermissions(DLPermission.RESOURCE_NAME,portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  long rootFolderId=GetterUtil.getLong(portletPreferences.getValue("rootFolderId",null));
  if (rootFolderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    rootElement.addAttribute("root-folder-id",String.valueOf(rootFolderId));
  }
  ActionableDynamicQuery fileEntryTypeActionableDynamicQuery=_getFileEntryTypeQuery(portletDataContext);
  fileEntryTypeActionableDynamicQuery.performActions();
  ActionableDynamicQuery folderActionableDynamicQuery=_getFolderQuery(portletDataContext);
  folderActionableDynamicQuery.performActions();
  ActionableDynamicQuery fileEntryActionableDynamicQuery=_getFileEntryQuery(portletDataContext);
  fileEntryActionableDynamicQuery.performActions();
  if (!portletDataContext.getBooleanParameter(NAMESPACE,"shortcuts")) {
    return getExportDataRootElementString(rootElement);
  }
  ActionableDynamicQuery fileShortcutActionableDynamicQuery=_getFileShortcutQuery(portletDataContext);
  fileShortcutActionableDynamicQuery.performActions();
  return getExportDataRootElementString(rootElement);
}

{
  portletDataContext.addPermissions("com.liferay.portlet.documentlibrary",portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  long rootFolderId=GetterUtil.getLong(portletPreferences.getValue("rootFolderId",null));
  if (rootFolderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    rootElement.addAttribute("root-folder-id",String.valueOf(rootFolderId));
  }
  Element fileEntryTypesElement=rootElement.addElement("file-entry-types");
  Element foldersElement=rootElement.addElement("folders");
  Element fileEntriesElement=rootElement.addElement("file-entries");
  Element fileShortcutsElement=rootElement.addElement("file-shortcuts");
  Element fileRanksElement=rootElement.addElement("file-ranks");
  Element repositoriesElement=rootElement.addElement("repositories");
  Element repositoryEntriesElement=rootElement.addElement("repository-entries");
  Group companyGroup=GroupLocalServiceUtil.getCompanyGroup(portletDataContext.getCompanyId());
  List<DLFileEntryType> dlFileEntryTypes=DLFileEntryTypeServiceUtil.getFileEntryTypes(new long[]{portletDataContext.getScopeGroupId(),companyGroup.getGroupId()});
  for (  DLFileEntryType dlFileEntryType : dlFileEntryTypes) {
    if (!dlFileEntryType.isExportable()) {
      continue;
    }
    exportFileEntryType(portletDataContext,fileEntryTypesElement,dlFileEntryType);
  }
  List<Folder> folders=FolderUtil.findByRepositoryId(portletDataContext.getScopeGroupId());
  for (  Folder folder : folders) {
    exportFolder(portletDataContext,fileEntryTypesElement,foldersElement,fileEntriesElement,fileShortcutsElement,fileRanksElement,repositoriesElement,repositoryEntriesElement,folder,false);
  }
  List<FileEntry> fileEntries=FileEntryUtil.findByR_F(portletDataContext.getScopeGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  for (  FileEntry fileEntry : fileEntries) {
    exportFileEntry(portletDataContext,fileEntryTypesElement,foldersElement,fileEntriesElement,fileRanksElement,repositoriesElement,repositoryEntriesElement,fileEntry,true);
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"shortcuts")) {
    List<DLFileShortcut> fileShortcuts=DLFileShortcutUtil.findByG_F_A(portletDataContext.getScopeGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,true);
    for (    DLFileShortcut fileShortcut : fileShortcuts) {
      exportFileShortcut(portletDataContext,fileEntryTypesElement,foldersElement,fileShortcutsElement,repositoriesElement,repositoryEntriesElement,fileShortcut);
    }
  }
  return getExportDataRootElementString(rootElement);
}

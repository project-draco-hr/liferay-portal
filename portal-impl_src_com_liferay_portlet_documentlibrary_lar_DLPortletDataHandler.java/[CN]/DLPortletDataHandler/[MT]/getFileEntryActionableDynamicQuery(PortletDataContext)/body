{
  return new DLFileEntryExportActionableDynamicQuery(portletDataContext){
    @Override protected void addCriteria(    DynamicQuery dynamicQuery){
      super.addCriteria(dynamicQuery);
      Property repositoryIdProperty=PropertyFactoryUtil.forName("repositoryId");
      dynamicQuery.add(repositoryIdProperty.eq(portletDataContext.getScopeGroupId()));
    }
    @Override protected StagedModelType getStagedModelType(){
      return new StagedModelType(FileEntry.class);
    }
    @Override protected void performAction(    Object object) throws PortalException, SystemException {
      DLFileEntry dlFileEntry=(DLFileEntry)object;
      FileEntry fileEntry=DLAppLocalServiceUtil.getFileEntry(dlFileEntry.getFileEntryId());
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,fileEntry);
    }
  }
;
}

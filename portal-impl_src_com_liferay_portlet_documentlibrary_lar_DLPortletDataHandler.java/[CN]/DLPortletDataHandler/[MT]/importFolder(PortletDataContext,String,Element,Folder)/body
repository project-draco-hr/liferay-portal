{
  long userId=portletDataContext.getUserId(folder.getUserUuid());
  Map<Long,Long> folderIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DLFolder.class);
  long parentFolderId=MapUtil.getLong(folderIds,folder.getParentFolderId(),folder.getParentFolderId());
  ServiceContext serviceContext=portletDataContext.createServiceContext(folderPath,folder,_NAMESPACE);
  if ((parentFolderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) && (parentFolderId == folder.getParentFolderId())) {
    String path=getImportFolderPath(portletDataContext,parentFolderId);
    Folder parentFolder=(Folder)portletDataContext.getZipEntryAsObject(path);
    importFolder(portletDataContext,path,folderElement,parentFolder);
    parentFolderId=MapUtil.getLong(folderIds,folder.getParentFolderId(),folder.getParentFolderId());
  }
  Folder importedFolder=null;
  if (portletDataContext.isDataStrategyMirror()) {
    Folder existingFolder=FolderUtil.fetchByUUID_R(folder.getUuid(),portletDataContext.getScopeGroupId());
    if (existingFolder == null) {
      String name=getFolderName(null,portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
      serviceContext.setUuid(folder.getUuid());
      importedFolder=DLAppLocalServiceUtil.addFolder(userId,portletDataContext.getScopeGroupId(),parentFolderId,name,folder.getDescription(),serviceContext);
    }
 else {
      String name=getFolderName(folder.getUuid(),portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
      importedFolder=DLAppLocalServiceUtil.updateFolder(existingFolder.getFolderId(),parentFolderId,name,folder.getDescription(),serviceContext);
    }
  }
 else {
    String name=getFolderName(null,portletDataContext.getScopeGroupId(),parentFolderId,folder.getName(),2);
    importedFolder=DLAppLocalServiceUtil.addFolder(userId,portletDataContext.getScopeGroupId(),parentFolderId,name,folder.getDescription(),serviceContext);
  }
  folderIds.put(folder.getFolderId(),importedFolder.getFolderId());
  importFolderFileEntryTypes(portletDataContext,folderElement,importedFolder,serviceContext);
  portletDataContext.importClassedModel(folder,importedFolder,_NAMESPACE);
}

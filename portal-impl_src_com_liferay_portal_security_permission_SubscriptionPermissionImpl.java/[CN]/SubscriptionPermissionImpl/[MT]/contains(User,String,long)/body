{
  PermissionChecker permissionChecker=PermissionThreadLocal.getPermissionChecker();
  if (permissionChecker == null) {
    try {
      permissionChecker=PermissionCheckerFactoryUtil.create(user,true);
      PermissionThreadLocal.setPermissionChecker(permissionChecker);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Subscription permission checking failed for user: " + user.getUserId());
      }
      return false;
    }
  }
  if (className == null) {
    return false;
  }
 else   if (className.equals("com.liferay.portlet.blogs.model.BlogsEntry")) {
    return BlogsPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals("com.liferay.portlet.journal.model.JournalArticle")) {
    return JournalPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals("com.liferay.portlet.messageboards.model.MBCategory")) {
    return MBCategoryPermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals("com.liferay.portlet.messageboards.model.MBThread")) {
    return MBMessagePermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals("com.liferay.portlet.wiki.model.WikiNode")) {
    return WikiNodePermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
 else   if (className.equals("com.liferay.portlet.wiki.model.WikiPage")) {
    return WikiPagePermission.contains(permissionChecker,classPK,ActionKeys.SUBSCRIBE);
  }
  return true;
}

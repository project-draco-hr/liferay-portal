{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  Company company=themeDisplay.getCompany();
  if (!company.isStrangers()) {
    throw new PrincipalException();
  }
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD)) {
      if (PropsValues.CAPTCHA_CHECK_PORTAL_CREATE_ACCOUNT) {
        CaptchaUtil.check(actionRequest);
      }
      addUser(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.RESET)) {
      resetUser(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.UPDATE)) {
      updateIncompleteUser(actionRequest,actionResponse);
    }
  }
 catch (  Exception e) {
    if (e instanceof DuplicateUserEmailAddressException || e instanceof DuplicateUserScreenNameException) {
      String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
      try {
        User user=UserLocalServiceUtil.getUserByEmailAddress(themeDisplay.getCompanyId(),emailAddress);
        if (user.getStatus() != WorkflowConstants.STATUS_INCOMPLETE) {
          SessionErrors.add(actionRequest,e.getClass(),e);
        }
 else {
          setForward(actionRequest,"portlet.login.update_account");
        }
      }
 catch (      NoSuchUserException nsue) {
        SessionErrors.add(actionRequest,e.getClass(),e);
      }
    }
 else     if (e instanceof AddressCityException || e instanceof AddressStreetException || e instanceof AddressZipException|| e instanceof CaptchaMaxChallengesException|| e instanceof CaptchaTextException|| e instanceof CompanyMaxUsersException|| e instanceof ContactFirstNameException|| e instanceof ContactFullNameException|| e instanceof ContactLastNameException|| e instanceof EmailAddressException|| e instanceof GroupFriendlyURLException|| e instanceof NoSuchCountryException|| e instanceof NoSuchListTypeException|| e instanceof NoSuchOrganizationException|| e instanceof NoSuchRegionException|| e instanceof OrganizationParentException|| e instanceof PhoneNumberException|| e instanceof RequiredFieldException|| e instanceof RequiredUserException|| e instanceof ReservedUserEmailAddressException|| e instanceof ReservedUserScreenNameException|| e instanceof TermsOfUseException|| e instanceof UserEmailAddressException|| e instanceof UserIdException|| e instanceof UserPasswordException|| e instanceof UserScreenNameException|| e instanceof UserSmsException|| e instanceof WebsiteURLException) {
      SessionErrors.add(actionRequest,e.getClass(),e);
    }
 else     if (e instanceof DuplicateOpenIdException) {
      if (_log.isInfoEnabled()) {
        _log.info("Another user was found with the same OpenId, " + "however there shouldn't be any. (Maybe " + "another thread inserted it?)");
      }
      SessionErrors.add(actionRequest,e.getClass());
    }
 else {
      throw e;
    }
  }
  if (Validator.isNull(PropsValues.COMPANY_SECURITY_STRANGERS_URL)) {
    return;
  }
  try {
    Layout layout=LayoutLocalServiceUtil.getFriendlyURLLayout(themeDisplay.getScopeGroupId(),false,PropsValues.COMPANY_SECURITY_STRANGERS_URL);
    String redirect=PortalUtil.getLayoutURL(layout,themeDisplay);
    sendRedirect(actionRequest,actionResponse,redirect);
  }
 catch (  NoSuchLayoutException nsle) {
  }
}

{
  long companyId=PortalUtil.getCompanyId(request);
  if (PrefsPropsUtil.getBoolean(companyId,PropsKeys.CAS_AUTH_ENABLED,PropsValues.CAS_AUTH_ENABLED)) {
    HttpSession session=request.getSession();
    String pathInfo=request.getPathInfo();
    if (pathInfo.indexOf("/portal/logout") != -1) {
      session.invalidate();
      String logoutUrl=PrefsPropsUtil.getString(companyId,PropsKeys.CAS_LOGOUT_URL,PropsValues.CAS_LOGOUT_URL);
      response.sendRedirect(logoutUrl);
    }
 else {
      Filter casAuthenticationFilter=getCASAuthenticationFilter(companyId);
      casAuthenticationFilter.doFilter(request,response,filterChain);
      Filter casTicketValidationFilter=getCASTicketValidationFilter(companyId);
      casTicketValidationFilter.doFilter(request,response,filterChain);
      Assertion assertion=(Assertion)session.getAttribute(AbstractCasFilter.CONST_CAS_ASSERTION);
      if (assertion != null) {
        AttributePrincipal attributePrincipal=assertion.getPrincipal();
        String login=attributePrincipal.getName();
        session.setAttribute(LOGIN,login);
      }
    }
  }
 else {
    processFilter(CASFilter.class,request,response,filterChain);
  }
}

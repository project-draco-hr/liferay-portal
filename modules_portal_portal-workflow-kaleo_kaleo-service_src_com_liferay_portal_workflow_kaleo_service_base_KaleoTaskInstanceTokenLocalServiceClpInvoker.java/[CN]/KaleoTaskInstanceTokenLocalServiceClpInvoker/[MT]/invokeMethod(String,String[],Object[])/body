{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.addKaleoTaskInstanceToken((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.createKaleoTaskInstanceToken(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.deleteKaleoTaskInstanceToken(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.deleteKaleoTaskInstanceToken((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.fetchKaleoTaskInstanceToken(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceToken(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName14.equals(name) && Arrays.deepEquals(_methodParameterTypes14,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.deletePersistedModel((com.liferay.portal.model.PersistedModel)arguments[0]);
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokensCount();
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.updateKaleoTaskInstanceToken((com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken)arguments[0]);
  }
  if (_methodName105.equals(name) && Arrays.deepEquals(_methodParameterTypes105,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getBeanIdentifier();
  }
  if (_methodName106.equals(name) && Arrays.deepEquals(_methodParameterTypes106,parameterTypes)) {
    KaleoTaskInstanceTokenLocalServiceUtil.setBeanIdentifier((java.lang.String)arguments[0]);
    return null;
  }
  if (_methodName111.equals(name) && Arrays.deepEquals(_methodParameterTypes111,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.addKaleoTaskInstanceToken(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(java.util.Collection<com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignment>)arguments[3],(java.util.Date)arguments[4],(java.util.Map<java.lang.String,java.io.Serializable>)arguments[5],(com.liferay.portal.service.ServiceContext)arguments[6]);
  }
  if (_methodName112.equals(name) && Arrays.deepEquals(_methodParameterTypes112,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.assignKaleoTaskInstanceToken(((Long)arguments[0]).longValue(),(java.lang.String)arguments[1],((Long)arguments[2]).longValue(),(java.util.Map<java.lang.String,java.io.Serializable>)arguments[3],(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName113.equals(name) && Arrays.deepEquals(_methodParameterTypes113,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.completeKaleoTaskInstanceToken(((Long)arguments[0]).longValue(),(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName114.equals(name) && Arrays.deepEquals(_methodParameterTypes114,parameterTypes)) {
    KaleoTaskInstanceTokenLocalServiceUtil.deleteCompanyKaleoTaskInstanceTokens(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName115.equals(name) && Arrays.deepEquals(_methodParameterTypes115,parameterTypes)) {
    KaleoTaskInstanceTokenLocalServiceUtil.deleteKaleoDefinitionKaleoTaskInstanceTokens(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName116.equals(name) && Arrays.deepEquals(_methodParameterTypes116,parameterTypes)) {
    KaleoTaskInstanceTokenLocalServiceUtil.deleteKaleoInstanceKaleoTaskInstanceTokens(((Long)arguments[0]).longValue());
    return null;
  }
  if (_methodName117.equals(name) && Arrays.deepEquals(_methodParameterTypes117,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getCompanyKaleoTaskInstanceTokens(((Long)arguments[0]).longValue(),((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName118.equals(name) && Arrays.deepEquals(_methodParameterTypes118,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getCompanyKaleoTaskInstanceTokensCount(((Long)arguments[0]).longValue());
  }
  if (_methodName119.equals(name) && Arrays.deepEquals(_methodParameterTypes119,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens((java.lang.Boolean)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[3],(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName120.equals(name) && Arrays.deepEquals(_methodParameterTypes120,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens((java.util.List<java.lang.Long>)arguments[0],(java.lang.Boolean)arguments[1],((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[4],(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName121.equals(name) && Arrays.deepEquals(_methodParameterTypes121,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens(((Long)arguments[0]).longValue(),(java.lang.Boolean)arguments[1],((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[4],(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName122.equals(name) && Arrays.deepEquals(_methodParameterTypes122,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
  }
  if (_methodName123.equals(name) && Arrays.deepEquals(_methodParameterTypes123,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokens((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),(java.lang.Boolean)arguments[2],((Integer)arguments[3]).intValue(),((Integer)arguments[4]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[5],(com.liferay.portal.service.ServiceContext)arguments[6]);
  }
  if (_methodName124.equals(name) && Arrays.deepEquals(_methodParameterTypes124,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokensCount((java.lang.Boolean)arguments[0],(com.liferay.portal.service.ServiceContext)arguments[1]);
  }
  if (_methodName125.equals(name) && Arrays.deepEquals(_methodParameterTypes125,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokensCount((java.util.List<java.lang.Long>)arguments[0],(java.lang.Boolean)arguments[1],(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName126.equals(name) && Arrays.deepEquals(_methodParameterTypes126,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokensCount(((Long)arguments[0]).longValue(),(java.lang.Boolean)arguments[1],(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName127.equals(name) && Arrays.deepEquals(_methodParameterTypes127,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getKaleoTaskInstanceTokensCount((java.lang.String)arguments[0],((Long)arguments[1]).longValue(),(java.lang.Boolean)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName128.equals(name) && Arrays.deepEquals(_methodParameterTypes128,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getSubmittingUserKaleoTaskInstanceTokens(((Long)arguments[0]).longValue(),(java.lang.Boolean)arguments[1],((Integer)arguments[2]).intValue(),((Integer)arguments[3]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[4],(com.liferay.portal.service.ServiceContext)arguments[5]);
  }
  if (_methodName129.equals(name) && Arrays.deepEquals(_methodParameterTypes129,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.getSubmittingUserKaleoTaskInstanceTokensCount(((Long)arguments[0]).longValue(),(java.lang.Boolean)arguments[1],(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  if (_methodName130.equals(name) && Arrays.deepEquals(_methodParameterTypes130,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.search((java.lang.String)arguments[0],(java.lang.Boolean)arguments[1],(java.lang.Boolean)arguments[2],((Integer)arguments[3]).intValue(),((Integer)arguments[4]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[5],(com.liferay.portal.service.ServiceContext)arguments[6]);
  }
  if (_methodName131.equals(name) && Arrays.deepEquals(_methodParameterTypes131,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.search((java.lang.String)arguments[0],(java.lang.String)arguments[1],(java.lang.Long[])arguments[2],(java.util.Date)arguments[3],(java.util.Date)arguments[4],(java.lang.Boolean)arguments[5],(java.lang.Boolean)arguments[6],((Boolean)arguments[7]).booleanValue(),((Integer)arguments[8]).intValue(),((Integer)arguments[9]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[10],(com.liferay.portal.service.ServiceContext)arguments[11]);
  }
  if (_methodName132.equals(name) && Arrays.deepEquals(_methodParameterTypes132,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.search((java.lang.String)arguments[0],(java.lang.String[])arguments[1],(java.lang.Boolean)arguments[2],(java.lang.Boolean)arguments[3],((Integer)arguments[4]).intValue(),((Integer)arguments[5]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[6],(com.liferay.portal.service.ServiceContext)arguments[7]);
  }
  if (_methodName133.equals(name) && Arrays.deepEquals(_methodParameterTypes133,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.search((java.lang.String)arguments[0],(java.lang.String[])arguments[1],(java.lang.Long[])arguments[2],(java.util.Date)arguments[3],(java.util.Date)arguments[4],(java.lang.Boolean)arguments[5],(java.lang.Boolean)arguments[6],((Boolean)arguments[7]).booleanValue(),((Integer)arguments[8]).intValue(),((Integer)arguments[9]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken>)arguments[10],(com.liferay.portal.service.ServiceContext)arguments[11]);
  }
  if (_methodName134.equals(name) && Arrays.deepEquals(_methodParameterTypes134,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.searchCount((java.lang.String)arguments[0],(java.lang.Boolean)arguments[1],(java.lang.Boolean)arguments[2],(com.liferay.portal.service.ServiceContext)arguments[3]);
  }
  if (_methodName135.equals(name) && Arrays.deepEquals(_methodParameterTypes135,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.searchCount((java.lang.String)arguments[0],(java.lang.String)arguments[1],(java.lang.Long[])arguments[2],(java.util.Date)arguments[3],(java.util.Date)arguments[4],(java.lang.Boolean)arguments[5],(java.lang.Boolean)arguments[6],((Boolean)arguments[7]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[8]);
  }
  if (_methodName136.equals(name) && Arrays.deepEquals(_methodParameterTypes136,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.searchCount((java.lang.String)arguments[0],(java.lang.String[])arguments[1],(java.lang.Boolean)arguments[2],(java.lang.Boolean)arguments[3],(com.liferay.portal.service.ServiceContext)arguments[4]);
  }
  if (_methodName137.equals(name) && Arrays.deepEquals(_methodParameterTypes137,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.searchCount((java.lang.String)arguments[0],(java.lang.String[])arguments[1],(java.lang.Long[])arguments[2],(java.util.Date)arguments[3],(java.util.Date)arguments[4],(java.lang.Boolean)arguments[5],(java.lang.Boolean)arguments[6],((Boolean)arguments[7]).booleanValue(),(com.liferay.portal.service.ServiceContext)arguments[8]);
  }
  if (_methodName138.equals(name) && Arrays.deepEquals(_methodParameterTypes138,parameterTypes)) {
    return KaleoTaskInstanceTokenLocalServiceUtil.updateDueDate(((Long)arguments[0]).longValue(),(java.util.Date)arguments[1],(com.liferay.portal.service.ServiceContext)arguments[2]);
  }
  throw new UnsupportedOperationException();
}

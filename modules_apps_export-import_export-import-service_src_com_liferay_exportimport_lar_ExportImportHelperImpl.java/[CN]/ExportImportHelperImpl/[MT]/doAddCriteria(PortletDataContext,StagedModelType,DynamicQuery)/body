{
  Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
  Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
  disjunction.add(groupIdProperty.eq(0L));
  disjunction.add(groupIdProperty.eq(portletDataContext.getScopeGroupId()));
  dynamicQuery.add(disjunction);
  Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
  dynamicQuery.add(classNameIdProperty.eq(stagedModelType.getClassNameId()));
  if (stagedModelType.getReferrerClassNameId() >= 0) {
    Property referrerClassNameIdProperty=PropertyFactoryUtil.forName("referrerClassNameId");
    dynamicQuery.add(referrerClassNameIdProperty.eq(stagedModelType.getReferrerClassNameId()));
  }
  Property typeProperty=PropertyFactoryUtil.forName("type");
  dynamicQuery.add(typeProperty.eq(SystemEventConstants.TYPE_DELETE));
  addCreateDateProperty(portletDataContext,dynamicQuery);
}

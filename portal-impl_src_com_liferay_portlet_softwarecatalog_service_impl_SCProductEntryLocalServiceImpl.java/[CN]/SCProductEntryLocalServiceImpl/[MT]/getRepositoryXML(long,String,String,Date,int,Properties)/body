{
  Document doc=DocumentHelper.createDocument();
  doc.setXMLEncoding("UTF-8");
  Element root=doc.addElement("plugin-repository");
  Element settingsEl=root.addElement("settings");
  populateSettingsElement(settingsEl,repoSettings);
  List productEntries=scProductEntryPersistence.findByGroupId(groupId);
  Iterator itr=productEntries.iterator();
  while (itr.hasNext()) {
    SCProductEntry productEntry=(SCProductEntry)itr.next();
    if (Validator.isNull(productEntry.getRepoGroupId()) || Validator.isNull(productEntry.getRepoArtifactId())) {
      continue;
    }
    List productVersions=scProductVersionPersistence.findByProductEntryId(productEntry.getProductEntryId());
    Iterator itr2=productVersions.iterator();
    for (int i=1; itr2.hasNext(); i++) {
      SCProductVersion productVersion=(SCProductVersion)itr2.next();
      if ((maxNumOfVersions > 0) && (maxNumOfVersions < i)) {
        break;
      }
      if (!productVersion.isRepoStoreArtifact()) {
        continue;
      }
      if ((oldestDate != null) && (oldestDate.after(productVersion.getModifiedDate()))) {
        continue;
      }
      if ((Validator.isNotNull(version)) && (!isVersionSupported(version,productVersion.getFrameworkVersions()))) {
        continue;
      }
      Element el=root.addElement("plugin-package");
      populatePluginPackageElement(el,productEntry,productVersion,baseImageURL);
    }
  }
  return doc.asXML();
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=PortalUtil.getPortletGroupId(plid);
  tags=getTags(tags);
  Date now=new Date();
  validate(name,type,shortDescription,pageURL,author,licenseIds,thumbnails,fullImages);
  long productEntryId=counterLocalService.increment();
  SCProductEntry productEntry=scProductEntryPersistence.create(productEntryId);
  productEntry.setGroupId(groupId);
  productEntry.setCompanyId(user.getCompanyId());
  productEntry.setUserId(user.getUserId());
  productEntry.setUserName(user.getFullName());
  productEntry.setCreateDate(now);
  productEntry.setModifiedDate(now);
  productEntry.setName(name);
  productEntry.setType(type);
  productEntry.setTags(tags);
  productEntry.setShortDescription(shortDescription);
  productEntry.setLongDescription(longDescription);
  productEntry.setPageURL(pageURL);
  productEntry.setAuthor(author);
  productEntry.setRepoGroupId(repoGroupId);
  productEntry.setRepoArtifactId(repoArtifactId);
  scProductEntryPersistence.update(productEntry);
  if ((addCommunityPermissions != null) && (addGuestPermissions != null)) {
    addProductEntryResources(productEntry,addCommunityPermissions.booleanValue(),addGuestPermissions.booleanValue());
  }
 else {
    addProductEntryResources(productEntry,communityPermissions,guestPermissions);
  }
  scProductEntryPersistence.setSCLicenses(productEntryId,licenseIds);
  saveProductScreenshots(productEntry,thumbnails,fullImages);
  try {
    Indexer.addProductEntry(productEntry.getCompanyId(),groupId,userId,user.getFullName(),productEntryId,name,now,StringPool.BLANK,type,shortDescription,longDescription,pageURL,repoGroupId,repoArtifactId);
  }
 catch (  IOException ioe) {
    _log.error("Indexing " + productEntryId,ioe);
  }
  return productEntry;
}

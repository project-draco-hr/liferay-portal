{
  if (!PropsValues.HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE) {
    return;
  }
  JournalFolder newJournalFolder=addJournalFolder();
  _persistence.clearCache();
  JournalFolder existingJournalFolder=_persistence.findByPrimaryKey(newJournalFolder.getPrimaryKey());
  Assert.assertTrue(Validator.equals(existingJournalFolder.getUuid(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(existingJournalFolder.getGroupId(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingJournalFolder.getGroupId(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingJournalFolder.getName(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(existingJournalFolder.getGroupId(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(existingJournalFolder.getParentFolderId(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalParentFolderId",new Class<?>[0]));
  Assert.assertTrue(Validator.equals(existingJournalFolder.getName(),ReflectionTestUtil.invoke(existingJournalFolder,"getOriginalName",new Class<?>[0])));
}

{
  CalEvent calEvent=findByPrimaryKey(eventId);
  int count=countByG_R(groupId,repeating);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM com.liferay.portlet.calendar.model.CalEvent WHERE ");
    if (groupId == null) {
      query.append("groupId IS NULL");
    }
 else {
      query.append("groupId = ?");
    }
    query.append(" AND ");
    query.append("repeating = ?");
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("startDate ASC").append(", ");
      query.append("title ASC");
    }
    Query q=session.createQuery(query.toString());
    q.setCacheable(true);
    int queryPos=0;
    if (groupId != null) {
      q.setString(queryPos++,groupId);
    }
    q.setBoolean(queryPos++,repeating);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,calEvent);
    CalEvent[] array=new CalEvent[3];
    array[0]=(CalEvent)objArray[0];
    array[1]=(CalEvent)objArray[1];
    array[2]=(CalEvent)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

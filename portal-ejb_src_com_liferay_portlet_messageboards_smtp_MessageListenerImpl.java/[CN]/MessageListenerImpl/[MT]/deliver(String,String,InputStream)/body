{
  String categoryId=recipient.substring(0,recipient.indexOf('@'));
  String companyId=recipient.substring(recipient.indexOf('@') + "mb.".length() + 1);
  _log.debug("Deliver message from " + from + " to MB category "+ categoryId);
  try {
    Company company=CompanyLocalServiceUtil.getCompany(companyId);
    User user=UserLocalServiceUtil.getUserByEmailAddress(company.getCompanyId(),from);
    MimeMessage message=new MimeMessage(MailEngine.getSession(),data);
    String[] inReplyToHeaders=message.getHeader("In-Reply-To");
    MBMessage prevMessage=null;
    if ((inReplyToHeaders != null) && (inReplyToHeaders.length > 0)) {
      int startIndex=inReplyToHeaders[0].indexOf("<") + 1;
      int endIndex=inReplyToHeaders[0].indexOf("@");
      try {
        if ((startIndex > 0) && (endIndex != -1)) {
          String prevMessageId=inReplyToHeaders[0].substring(startIndex,endIndex);
          prevMessage=MBMessageLocalServiceUtil.getMessage(prevMessageId);
        }
      }
 catch (      NoSuchMessageException ignore) {
      }
    }
    MBMailMessage collector=new MBMailMessage();
    _collectPartContent(message,collector);
    if (prevMessage == null) {
      MBMessageLocalServiceUtil.addMessage(user.getUserId(),categoryId,message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
 else {
      MBMessageLocalServiceUtil.addMessage(user.getUserId(),categoryId,prevMessage.getThreadId(),prevMessage.getMessageId(),message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
  }
 catch (  FileNameException e) {
    throw new MessageListenerException(e);
  }
catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug("MB Message not sent",e);
    }
    throw new MessageListenerException(e);
  }
}

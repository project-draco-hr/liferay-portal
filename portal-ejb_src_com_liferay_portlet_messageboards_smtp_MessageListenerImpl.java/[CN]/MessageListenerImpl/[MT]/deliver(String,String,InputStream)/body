{
  try {
    String companyId=_getCompanyId(recipient);
    String categoryId=_getCategoryId(recipient);
    if (_log.isDebugEnabled()) {
      _log.debug("Deliver message from " + from + " to category "+ categoryId);
    }
    Company company=CompanyLocalServiceUtil.getCompany(companyId);
    User user=UserLocalServiceUtil.getUserByEmailAddress(companyId,from);
    MimeMessage message=new MimeMessage(MailEngine.getSession(),data);
    String[] inReplyToHeaders=message.getHeader("In-Reply-To");
    MBMessage prevMessage=null;
    if ((inReplyToHeaders != null) && (inReplyToHeaders.length > 0)) {
      String prevMessageId=MBUtil.getMessageId(inReplyToHeaders[0]);
      try {
        if (prevMessageId != null) {
          prevMessage=MBMessageLocalServiceUtil.getMessage(prevMessageId);
        }
      }
 catch (      NoSuchMessageException nsme) {
      }
    }
    MBMailMessage collector=new MBMailMessage();
    _collectPartContent(message,collector);
    PrincipalSessionBean.setThreadValues(user);
    if (prevMessage == null) {
      MBMessageServiceUtil.addMessage(categoryId,message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
 else {
      MBMessageServiceUtil.addMessage(categoryId,prevMessage.getThreadId(),prevMessage.getMessageId(),message.getSubject(),collector.getBody(),collector.getFiles(),false,0.0,null,true,true);
    }
  }
 catch (  PrincipalException pe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Prevented unauthorized post from " + from);
    }
    throw new MessageListenerException(pe);
  }
catch (  Exception e) {
    _log.error(StackTraceUtil.getStackTrace(e));
    throw new MessageListenerException(e);
  }
}

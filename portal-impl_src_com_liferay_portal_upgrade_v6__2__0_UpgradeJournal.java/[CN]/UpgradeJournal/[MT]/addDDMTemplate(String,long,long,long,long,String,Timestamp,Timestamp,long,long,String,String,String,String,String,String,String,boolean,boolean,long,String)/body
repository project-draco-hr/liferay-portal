{
  PreparedStatement ps=null;
  try {
    StringBundler sb=new StringBundler(6);
    sb.append("insert into DDMTemplate (uuid_, templateId, groupId, ");
    sb.append("companyId, userId, userName, createDate, modifiedDate,");
    sb.append("classNameId, classPK , templateKey, name, description,");
    sb.append("type_, mode_, language, script, cacheable, smallImage,");
    sb.append("smallImageId, smallImageURL) values (?, ?, ?, ?, ?, ?,");
    sb.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    String sql=sb.toString();
    ps=connection.prepareStatement(sql);
    ps.setString(1,uuid_);
    ps.setLong(2,ddmTemplateId);
    ps.setLong(3,groupId);
    ps.setLong(4,companyId);
    ps.setLong(5,userId);
    ps.setString(6,userName);
    ps.setTimestamp(7,createDate);
    ps.setTimestamp(8,modifiedDate);
    ps.setLong(9,classNameId);
    ps.setLong(10,classPK);
    ps.setString(11,templateKey);
    ps.setString(12,name);
    ps.setString(13,description);
    ps.setString(14,type);
    ps.setString(15,mode);
    ps.setString(16,language);
    ps.setString(17,script);
    ps.setBoolean(18,cacheable);
    ps.setBoolean(19,smallImage);
    ps.setLong(20,smallImageId);
    ps.setString(21,smallImageURL);
    ps.executeUpdate();
  }
 catch (  Exception e) {
    _log.error("Unable to upgrade dynamic data mapping template with UUID " + uuid_);
    throw e;
  }
 finally {
    DataAccess.cleanUp(ps);
  }
}

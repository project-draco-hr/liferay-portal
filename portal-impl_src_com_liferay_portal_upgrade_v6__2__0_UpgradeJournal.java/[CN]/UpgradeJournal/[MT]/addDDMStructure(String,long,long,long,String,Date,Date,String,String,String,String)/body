{
  Connection con=null;
  PreparedStatement ps=null;
  long newStructureId=increment();
  long parentStructureIdValue=0;
  if (Validator.isNotNull(parentStructureId)) {
    parentStructureIdValue=updateJournalStructure(parentStructureId);
  }
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    StringBundler sb=new StringBundler(5);
    sb.append("insert into DDMStructure(uuid_, structureId, groupId, ");
    sb.append("companyId, userId, userName, createDate, modifiedDate,");
    sb.append(" parentStructureId, classNameId, structureKey, name,");
    sb.append(" description, xsd, storageType, type_) values (?, ?, ");
    sb.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    String sql=sb.toString();
    ps=con.prepareStatement(sql);
    long classNameId=PortalUtil.getClassNameId(JournalArticle.class.getName());
    String structureKey=String.valueOf(increment());
    String storageType=PropsValues.JOURNAL_ARTICLE_STORAGE_TYPE;
    int type_=DDMStructureConstants.TYPE_DEFAULT;
    ps.setString(1,uuid_);
    ps.setLong(2,increment());
    ps.setLong(3,groupId);
    ps.setLong(4,companyId);
    ps.setLong(5,userId);
    ps.setString(6,userName);
    ps.setDate(7,createDate);
    ps.setDate(8,modifiedDate);
    ps.setLong(9,parentStructureIdValue);
    ps.setLong(10,classNameId);
    ps.setString(11,structureKey);
    ps.setString(12,name);
    ps.setString(13,description);
    ps.setString(14,xsd);
    ps.setString(15,storageType);
    ps.setInt(16,type_);
    ps.executeUpdate();
  }
  finally {
    DataAccess.cleanUp(con,ps);
  }
  return newStructureId;
}

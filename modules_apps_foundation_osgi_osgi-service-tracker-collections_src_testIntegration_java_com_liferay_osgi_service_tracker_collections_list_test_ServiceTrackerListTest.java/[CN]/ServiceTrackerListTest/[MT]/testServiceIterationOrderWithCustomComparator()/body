{
  ServiceTrackerList<Object,Object> serviceTrackerList=ServiceTrackerListFactory.open(_bundleContext,Object.class,new Comparator<ServiceReference<Object>>(){
    @Override public int compare(    ServiceReference<Object> serviceReference1,    ServiceReference<Object> serviceReference2){
      int serviceRanking1=(Integer)serviceReference1.getProperty("service.ranking");
      int serviceRanking2=(Integer)serviceReference2.getProperty("service.ranking");
      return serviceRanking1 - serviceRanking2;
    }
  }
);
  Object[] services={new Object(),new Object()};
  Collection<ServiceRegistration<Object>> serviceRegistrations=registerServices(Object.class,services,"service.ranking");
  int i=0;
  for (  Object service : serviceTrackerList) {
    Assert.assertSame(services[i],service);
    i++;
  }
  unregister(serviceRegistrations);
}

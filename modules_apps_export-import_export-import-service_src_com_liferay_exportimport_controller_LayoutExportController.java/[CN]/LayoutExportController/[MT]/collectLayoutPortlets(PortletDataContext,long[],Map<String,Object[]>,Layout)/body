{
  if (!ArrayUtil.contains(layoutIds,layout.getLayoutId())) {
    return;
  }
  if (!prepareLayoutStagingHandler(portletDataContext,layout) || !layout.isSupportsEmbeddedPortlets()) {
    return;
  }
  LayoutTypePortlet layoutTypePortlet=(LayoutTypePortlet)layout.getLayoutType();
  for (  Portlet portlet : layoutTypePortlet.getAllPortlets(false)) {
    String portletId=portlet.getPortletId();
    Settings portletInstanceSettings=SettingsFactoryUtil.getSettings(new PortletInstanceSettingsLocator(layout,portletId));
    String scopeType=portletInstanceSettings.getValue("lfrScopeType",null);
    String scopeLayoutUuid=portletInstanceSettings.getValue("lfrScopeLayoutUuid",null);
    long scopeGroupId=portletDataContext.getScopeGroupId();
    if (Validator.isNotNull(scopeType)) {
      Group scopeGroup=null;
      if (scopeType.equals("company")) {
        scopeGroup=GroupLocalServiceUtil.getCompanyGroup(layout.getCompanyId());
      }
 else       if (scopeType.equals("layout")) {
        Layout scopeLayout=null;
        scopeLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(scopeLayoutUuid,portletDataContext.getGroupId(),portletDataContext.isPrivateLayout());
        if (scopeLayout == null) {
          continue;
        }
        scopeGroup=scopeLayout.getScopeGroup();
      }
 else {
        throw new IllegalArgumentException("Scope type " + scopeType + " is invalid");
      }
      if (scopeGroup != null) {
        scopeGroupId=scopeGroup.getGroupId();
      }
    }
    String key=PortletPermissionUtil.getPrimaryKey(layout.getPlid(),portletId);
    portletIds.put(key,new Object[]{portletId,layout.getPlid(),scopeGroupId,scopeType,scopeLayoutUuid});
  }
}

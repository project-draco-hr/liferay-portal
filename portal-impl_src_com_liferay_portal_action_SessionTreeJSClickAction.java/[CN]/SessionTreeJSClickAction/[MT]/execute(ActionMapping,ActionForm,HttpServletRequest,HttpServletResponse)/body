{
  try {
    String cmd=ParamUtil.getString(req,Constants.CMD);
    String treeId=ParamUtil.getString(req,"treeId");
    if (cmd.equals("expand")) {
      String[] nodeIds=StringUtil.split(ParamUtil.getString(req,"nodeIds"));
      SessionTreeJSClicks.openNodes(req,treeId,nodeIds);
    }
 else     if (cmd.equals("collapse")) {
      SessionTreeJSClicks.closeNodes(req,treeId);
    }
 else {
      String nodeId=ParamUtil.getString(req,"nodeId");
      boolean openNode=ParamUtil.getBoolean(req,"openNode");
      if (openNode) {
        SessionTreeJSClicks.openNode(req,treeId,nodeId);
      }
 else {
        SessionTreeJSClicks.closeNode(req,treeId,nodeId);
      }
    }
    return null;
  }
 catch (  Exception e) {
    req.setAttribute(PageContext.EXCEPTION,e);
    return mapping.findForward(ActionConstants.COMMON_ERROR);
  }
}

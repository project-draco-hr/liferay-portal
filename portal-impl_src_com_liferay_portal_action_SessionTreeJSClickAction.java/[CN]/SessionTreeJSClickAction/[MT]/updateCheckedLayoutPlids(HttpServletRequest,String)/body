{
  long groupId=ParamUtil.getLong(request,"groupId");
  boolean privateLayout=ParamUtil.getBoolean(request,"privateLayout");
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  while (true) {
    try {
      PortalPreferences portalPreferences=PortletPreferencesFactoryUtil.getPortalPreferences(request);
      long[] checkedLayoutIds=StringUtil.split(portalPreferences.getValue(SessionTreeJSClicks.class.getName(),treeId),0L);
      for (      long checkedLayoutId : checkedLayoutIds) {
        if (checkedLayoutId == LayoutConstants.DEFAULT_PLID) {
          jsonArray.put(String.valueOf(LayoutConstants.DEFAULT_PLID));
        }
        Layout checkedLayout=LayoutLocalServiceUtil.fetchLayout(groupId,privateLayout,checkedLayoutId);
        if (checkedLayout == null) {
          continue;
        }
        jsonArray.put(String.valueOf(checkedLayout.getPlid()));
      }
      portalPreferences.setValue(SessionTreeJSClicks.class.getName(),treeId + "Plid",jsonArray.toString());
      return;
    }
 catch (    ConcurrentModificationException cme) {
      continue;
    }
  }
}

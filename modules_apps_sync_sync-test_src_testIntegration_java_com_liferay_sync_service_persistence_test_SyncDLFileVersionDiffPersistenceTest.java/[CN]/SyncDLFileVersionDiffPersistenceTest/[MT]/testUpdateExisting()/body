{
  long pk=RandomTestUtil.nextLong();
  SyncDLFileVersionDiff newSyncDLFileVersionDiff=_persistence.create(pk);
  newSyncDLFileVersionDiff.setFileEntryId(RandomTestUtil.nextLong());
  newSyncDLFileVersionDiff.setSourceFileVersionId(RandomTestUtil.nextLong());
  newSyncDLFileVersionDiff.setTargetFileVersionId(RandomTestUtil.nextLong());
  newSyncDLFileVersionDiff.setDataFileEntryId(RandomTestUtil.nextLong());
  newSyncDLFileVersionDiff.setSize(RandomTestUtil.nextLong());
  newSyncDLFileVersionDiff.setExpirationDate(RandomTestUtil.nextDate());
  _syncDLFileVersionDiffs.add(_persistence.update(newSyncDLFileVersionDiff));
  SyncDLFileVersionDiff existingSyncDLFileVersionDiff=_persistence.findByPrimaryKey(newSyncDLFileVersionDiff.getPrimaryKey());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getSyncDLFileVersionDiffId(),newSyncDLFileVersionDiff.getSyncDLFileVersionDiffId());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getFileEntryId(),newSyncDLFileVersionDiff.getFileEntryId());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getSourceFileVersionId(),newSyncDLFileVersionDiff.getSourceFileVersionId());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getTargetFileVersionId(),newSyncDLFileVersionDiff.getTargetFileVersionId());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getDataFileEntryId(),newSyncDLFileVersionDiff.getDataFileEntryId());
  Assert.assertEquals(existingSyncDLFileVersionDiff.getSize(),newSyncDLFileVersionDiff.getSize());
  Assert.assertEquals(Time.getShortTimestamp(existingSyncDLFileVersionDiff.getExpirationDate()),Time.getShortTimestamp(newSyncDLFileVersionDiff.getExpirationDate()));
}

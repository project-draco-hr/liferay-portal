{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    StringBundler sb=new StringBundler(14);
    sb.append("select ug.companyId as companyId,ug.userGroupId ");
    sb.append("as userGroupId,ug.name as userGroupName,");
    sb.append("g.groupId as groupId,g.creatorUserId as creatorUserId,");
    sb.append("ls.layoutSetId as layoutSetId,");
    sb.append("ls.privateLayout as privateLayout, ls.logo as logo,");
    sb.append("ls.logoId as logoId,ls.themeId as themeId,");
    sb.append("ls.colorSchemeId as colorSchemeId,");
    sb.append("ls.wapThemeId as wapThemeId,ls.wapColorSchemeId ");
    sb.append("as wapColorSchemeId ,ls.css as css,");
    sb.append("ls.pageCount as pageCount,ls.settings_ as settings,");
    sb.append("ls.layoutSetPrototypeId as layoutSetPrototypeId ");
    sb.append("from UserGroup ug  inner join Group_ g on ");
    sb.append("ug.userGroupId=g.classPK inner join LayoutSet ls on ");
    sb.append("(g.groupId=ls.groupId AND ls.pageCount > 0)");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      long companyId=rs.getLong("companyId");
      String userGroupName=rs.getString("userGroupName");
      long groupId=rs.getLong("groupId");
      long creatorUserId=rs.getLong("creatorUserId");
      long userGroupId=rs.getLong("userGroupId");
      boolean privateLayout=rs.getBoolean("privateLayout");
      long layoutSetPrototypeId=addLayoutSetPrototype(companyId,userGroupName);
      long layoutSetPrototypeGroupId=addLayoutSetPrototypeGroup(companyId,layoutSetPrototypeId,creatorUserId,userGroupName);
      addPermissionsForLayoutSetPrototype(companyId,creatorUserId,layoutSetPrototypeId);
      UserGroupTemplateInfo userGroupTemplateInfo=createUserGroupsTemplatesInfo(rs);
      boolean originalPrivateLayout=userGroupTemplateInfo.isPrivateLayout();
      userGroupTemplateInfo.setPrivateLayout(true);
      addLayoutSet(companyId,layoutSetPrototypeGroupId,layoutSetPrototypeId,userGroupTemplateInfo);
      updateLayouts(groupId,layoutSetPrototypeGroupId,originalPrivateLayout);
      UserGroupTemplateInfo publicLayoutSet=new UserGroupTemplateInfo();
      publicLayoutSet.setPrivateLayout(false);
      addLayoutSet(companyId,layoutSetPrototypeGroupId,layoutSetPrototypeId,publicLayoutSet);
      String layoutSetPrototypeIdColumnName=privateLayout ? "privateLayoutSetPrototypeId" : "publicLayoutSetPrototypeId";
      updateLayoutSetPrototypeId(companyId,userGroupId,layoutSetPrototypeId,layoutSetPrototypeIdColumnName);
    }
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

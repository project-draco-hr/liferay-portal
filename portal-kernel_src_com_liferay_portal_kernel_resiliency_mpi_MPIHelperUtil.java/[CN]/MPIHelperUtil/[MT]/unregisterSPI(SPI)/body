{
  try {
    if (spi == _unregisteringSPIThreadLocal.get()) {
      _doUnregisterSPI(spi);
      return true;
    }
    MPI mpi=spi.getMPI();
    if (mpi != _mpi) {
      if (_log.isWarnEnabled()) {
        _log.warn("Not unregistering SPI " + spi + " with foreign MPI "+ mpi+ " versus "+ _mpi);
      }
      return false;
    }
    String spiProviderName=spi.getSPIProviderName();
    SPIProviderContainer spiProviderContainer=_spiProviderContainers.get(spiProviderName);
    if (spiProviderContainer == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("Not unregistering SPI " + spi + " with unknown SPI provider "+ spiProviderName);
      }
      return false;
    }
    SPIConfiguration spiConfiguration=spi.getSPIConfiguration();
    if (spiProviderContainer.removeSPI(spiConfiguration.getSPIId(),spi)) {
      _doUnregisterSPI(spi);
      return true;
    }
    if (_log.isWarnEnabled()) {
      _log.warn("Not unregistering unregistered SPI " + spi);
    }
    return false;
  }
 catch (  RemoteException re) {
    throw new RuntimeException(re);
  }
}

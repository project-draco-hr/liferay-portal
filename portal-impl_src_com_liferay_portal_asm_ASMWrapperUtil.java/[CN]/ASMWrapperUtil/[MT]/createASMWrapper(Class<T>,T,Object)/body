{
  if (!wrappedClass.isInterface()) {
    throw new IllegalArgumentException(wrappedClass + " is not an interface");
  }
  ClassLoader classLoader=wrappedClass.getClassLoader();
  String asmWrapperClassName=wrappedClass.getName() + "ASMWrapper";
  Class<?> asmWrapperClass=null;
synchronized (classLoader) {
    try {
      asmWrapperClass=classLoader.loadClass(asmWrapperClassName);
    }
 catch (    ClassNotFoundException cnfe) {
    }
    try {
      if (asmWrapperClass == null) {
        Method defineClassMethod=ReflectionUtil.getDeclaredMethod(ClassLoader.class,"defineClass",String.class,byte[].class,int.class,int.class);
        byte[] classData=_generateASMWrapperClassData(wrappedClass,defaultObject,wrapper);
        asmWrapperClass=(Class<?>)defineClassMethod.invoke(classLoader,asmWrapperClassName,classData,0,classData.length);
      }
      Constructor constructor=asmWrapperClass.getDeclaredConstructor(wrapper.getClass(),defaultObject.getClass());
      constructor.setAccessible(true);
      return (T)constructor.newInstance(wrapper,defaultObject);
    }
 catch (    Throwable t) {
      throw new RuntimeException(t);
    }
  }
}

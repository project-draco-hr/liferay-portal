{
  String interfaceClassBinaryName=_getClassBinaryName(interfaceClass);
  String asmWrapperClassBinaryName=interfaceClassBinaryName + "ASMWrapper";
  Class<?> delegateObjectClass=delegateObject.getClass();
  String delegateObjectClassDescriptor=Type.getDescriptor(delegateObjectClass);
  String defaultObjectClassDescriptor=Type.getDescriptor(defaultObject.getClass());
  ClassWriter classWriter=new ClassWriter(ClassWriter.COMPUTE_MAXS);
  classWriter.visit(Opcodes.V1_7,Opcodes.ACC_PUBLIC | Opcodes.ACC_SUPER,asmWrapperClassBinaryName,null,_getClassBinaryName(Object.class),new String[]{interfaceClassBinaryName});
  FieldVisitor fieldVisitor=classWriter.visitField(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL,"_delegate",delegateObjectClassDescriptor,null,null);
  fieldVisitor.visitEnd();
  fieldVisitor=classWriter.visitField(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL,"_default",defaultObjectClassDescriptor,null,null);
  fieldVisitor.visitEnd();
  MethodVisitor methodVisitor=classWriter.visitMethod(Opcodes.ACC_PRIVATE,"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,Type.getType(delegateObjectClass),Type.getType(defaultObjectClassDescriptor)),null,null);
  methodVisitor.visitCode();
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL,"java/lang/Object","<init>","()V",false);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,1);
  methodVisitor.visitFieldInsn(Opcodes.PUTFIELD,asmWrapperClassBinaryName,"_delegate",delegateObjectClassDescriptor);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,2);
  methodVisitor.visitFieldInsn(Opcodes.PUTFIELD,asmWrapperClassBinaryName,"_default",defaultObjectClassDescriptor);
  methodVisitor.visitInsn(Opcodes.RETURN);
  methodVisitor.visitMaxs(0,0);
  methodVisitor.visitEnd();
  for (  Method method : interfaceClass.getMethods()) {
    try {
      Method delegateMethod=delegateObjectClass.getMethod(method.getName(),method.getParameterTypes());
      _generateMethod(classWriter,delegateMethod,asmWrapperClassBinaryName,"_delegate",delegateObjectClassDescriptor,_getClassBinaryName(delegateObjectClass));
    }
 catch (    NoSuchMethodException nsme) {
      _generateMethod(classWriter,method,asmWrapperClassBinaryName,"_default",defaultObjectClassDescriptor,_getClassBinaryName(defaultObject.getClass()));
    }
  }
  classWriter.visitEnd();
  return classWriter.toByteArray();
}

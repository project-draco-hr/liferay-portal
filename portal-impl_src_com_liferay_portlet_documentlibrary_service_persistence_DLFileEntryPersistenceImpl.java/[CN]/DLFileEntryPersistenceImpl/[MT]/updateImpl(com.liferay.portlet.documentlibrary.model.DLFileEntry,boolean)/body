{
  boolean isNew=dlFileEntry.isNew();
  if (Validator.isNull(dlFileEntry.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    dlFileEntry.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,dlFileEntry,merge);
    dlFileEntry.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  DLFileEntryModelImpl dlFileEntryModelImpl=(DLFileEntryModelImpl)dlFileEntry;
  if (!isNew && ((dlFileEntry.getFolderId() != dlFileEntryModelImpl.getOriginalFolderId()) || !dlFileEntry.getName().equals(dlFileEntryModelImpl.getOriginalName()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_F_N,new Object[]{new Long(dlFileEntryModelImpl.getOriginalFolderId()),dlFileEntryModelImpl.getOriginalName()});
  }
  if (isNew || ((dlFileEntry.getFolderId() != dlFileEntryModelImpl.getOriginalFolderId()) || !dlFileEntry.getName().equals(dlFileEntryModelImpl.getOriginalName()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_F_N,new Object[]{new Long(dlFileEntry.getFolderId()),dlFileEntry.getName()},dlFileEntry);
  }
  EntityCacheUtil.putResult(DLFileEntryModelImpl.ENTITY_CACHE_ENABLED,DLFileEntry.class,dlFileEntry.getPrimaryKey(),dlFileEntry);
  return dlFileEntry;
}

{
  Organization organization=organizationPersistence.findByPrimaryKey(organizationId);
  OrganizationPermissionUtil.check(getPermissionChecker(),organization,ActionKeys.UPDATE);
  if (organization.getParentOrganizationId() != parentOrganizationId) {
    if (parentOrganizationId == OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID) {
      PortalPermissionUtil.check(getPermissionChecker(),ActionKeys.ADD_ORGANIZATION);
    }
 else {
      OrganizationPermissionUtil.check(getPermissionChecker(),parentOrganizationId,ActionKeys.ADD_ORGANIZATION);
    }
  }
  if (addresses != null) {
    UsersAdminUtil.updateAddresses(Organization.class.getName(),organizationId,addresses);
  }
  if (emailAddresses != null) {
    UsersAdminUtil.updateEmailAddresses(Organization.class.getName(),organizationId,emailAddresses);
  }
  if (orgLabors != null) {
    UsersAdminUtil.updateOrgLabors(organizationId,orgLabors);
  }
  if (phones != null) {
    UsersAdminUtil.updatePhones(Organization.class.getName(),organizationId,phones);
  }
  if (websites != null) {
    UsersAdminUtil.updateWebsites(Organization.class.getName(),organizationId,websites);
  }
  User user=getUser();
  Organization oldOrganization=organization;
  List<AssetCategory> oldAssetCategories=assetCategoryLocalService.getCategories(Organization.class.getName(),organizationId);
  List<AssetTag> oldAssetTags=assetTagLocalService.getTags(Organization.class.getName(),organizationId);
  ExpandoBridge oldExpandoBridge=oldOrganization.getExpandoBridge();
  Map<String,Serializable> oldExpandoAttributes=oldExpandoBridge.getAttributes();
  organization=organizationLocalService.updateOrganization(user.getCompanyId(),organizationId,parentOrganizationId,name,type,regionId,countryId,statusId,comments,logo,logoBytes,site,serviceContext);
  OrganizationMembershipPolicyUtil.verifyPolicy(organization,oldOrganization,oldAssetCategories,oldAssetTags,oldExpandoAttributes);
  return organization;
}

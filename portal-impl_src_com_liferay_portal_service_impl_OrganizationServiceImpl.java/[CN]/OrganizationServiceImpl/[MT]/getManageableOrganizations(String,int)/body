{
  PermissionChecker permissionChecker=getPermissionChecker();
  if (permissionChecker.isCompanyAdmin()) {
    return organizationLocalService.search(permissionChecker.getCompanyId(),OrganizationConstants.ANY_PARENT_ORGANIZATION_ID,null,null,null,null,null,0,max);
  }
  LinkedHashMap<String,Object> params=new LinkedHashMap<String,Object>();
  List<Organization> userOrganizations=organizationLocalService.getUserOrganizations(permissionChecker.getUserId());
  params.put("organizationsTree",userOrganizations);
  List<Organization> manageableOrganizations=organizationLocalService.search(permissionChecker.getCompanyId(),OrganizationConstants.ANY_PARENT_ORGANIZATION_ID,null,null,null,null,params,0,max);
  manageableOrganizations=ListUtil.copy(manageableOrganizations);
  Iterator<Organization> itr=manageableOrganizations.iterator();
  while (itr.hasNext()) {
    Organization organization=itr.next();
    if (!OrganizationPermissionUtil.contains(permissionChecker,organization,actionId)) {
      itr.remove();
    }
  }
  return manageableOrganizations;
}

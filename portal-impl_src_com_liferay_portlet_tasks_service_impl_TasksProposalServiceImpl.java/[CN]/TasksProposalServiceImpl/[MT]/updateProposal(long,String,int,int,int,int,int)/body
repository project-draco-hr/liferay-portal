{
  PermissionChecker permissionChecker=getPermissionChecker();
  TasksProposal proposal=tasksProposalPersistence.findByPrimaryKey(proposalId);
  long groupId=proposal.getGroupId();
  if (!GroupPermissionUtil.contains(permissionChecker,groupId,ActionKeys.ASSIGN_REVIEWER) && !GroupPermissionUtil.contains(permissionChecker,groupId,ActionKeys.MANAGE_STAGING) && !GroupPermissionUtil.contains(permissionChecker,groupId,ActionKeys.PUBLISH_STAGING)&& !TasksProposalPermission.contains(permissionChecker,proposalId,ActionKeys.UPDATE)) {
    throw new PrincipalException();
  }
  return tasksProposalLocalService.updateProposal(getUserId(),proposalId,description,dueDateMonth,dueDateDay,dueDateYear,dueDateHour,dueDateMinute);
}

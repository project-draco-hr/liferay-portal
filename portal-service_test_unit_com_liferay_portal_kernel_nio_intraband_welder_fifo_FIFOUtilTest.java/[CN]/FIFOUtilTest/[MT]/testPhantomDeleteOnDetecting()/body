{
  if (!_shouldTest()) {
    return;
  }
  final AtomicInteger checkDeleteCount=new AtomicInteger();
  final AtomicBoolean checkFlag=new AtomicBoolean();
  SecurityManager securityManager=new SecurityManager(){
    @Override public void checkDelete(    String file){
      if (!checkFlag.get() && file.contains("temp-fifo-")) {
        checkFlag.set(true);
        if (checkDeleteCount.getAndIncrement() == 0) {
          Assert.assertTrue(new File(file).delete());
        }
        checkFlag.set(false);
      }
    }
    @Override public void checkRead(    String file){
      if (!checkFlag.get() && file.contains("temp-fifo-")) {
        try {
          checkFlag.set(true);
          new File(file).createNewFile();
          checkFlag.set(false);
        }
 catch (        IOException ioe) {
          Assert.fail(ioe.getMessage());
        }
      }
    }
    @Override public void checkPermission(    Permission permission){
    }
  }
;
  System.setSecurityManager(securityManager);
  try {
    Assert.assertTrue(FIFOUtil.isFIFOSupported());
  }
  finally {
    System.setSecurityManager(null);
  }
  Assert.assertEquals(2,checkDeleteCount.get());
}

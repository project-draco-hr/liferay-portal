{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return findByG_P(groupId,parentCategoryIds,start,end,orderByComparator);
  }
  Session session=null;
  try {
    session=openSession();
    StringBundler query=new StringBundler();
    query.append(_FILTER_SQL_SELECT_MBCATEGORY_WHERE);
    boolean conjunctionable=false;
    if (conjunctionable) {
      query.append(WHERE_AND);
    }
    query.append(_FINDER_COLUMN_G_P_GROUPID_5);
    conjunctionable=true;
    if ((parentCategoryIds == null) || (parentCategoryIds.length > 0)) {
      if (conjunctionable) {
        query.append(WHERE_AND);
      }
      query.append(StringPool.OPEN_PARENTHESIS);
      for (int i=0; i < parentCategoryIds.length; i++) {
        query.append(_FINDER_COLUMN_G_P_PARENTCATEGORYID_5);
        if ((i + 1) < parentCategoryIds.length) {
          query.append(WHERE_OR);
        }
      }
      query.append(StringPool.CLOSE_PARENTHESIS);
      conjunctionable=true;
    }
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      query.append(MBCategoryModelImpl.ORDER_BY_JPQL);
    }
    String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),MBCategory.class.getName(),_FILTER_COLUMN_CATEGORYID,_FILTER_COLUMN_USERID,groupId);
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity(_FILTER_ENTITY_ALIAS,MBCategoryImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (parentCategoryIds != null) {
      qPos.add(parentCategoryIds);
    }
    return (List<MBCategory>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

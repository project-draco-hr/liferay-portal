{
  if (!article.isInTrash()) {
    throw new RestoreEntryException(RestoreEntryException.INVALID_STATUS);
  }
  String trashArticleId=TrashUtil.getOriginalTitle(article.getArticleId());
  List<JournalArticle> articleVersions=journalArticlePersistence.findByG_A(article.getGroupId(),article.getArticleId());
  for (  JournalArticle articleVersion : articleVersions) {
    articleVersion.setArticleId(trashArticleId);
    journalArticlePersistence.update(articleVersion);
  }
  article.setArticleId(trashArticleId);
  journalArticlePersistence.update(article);
  JournalArticleResource articleResource=journalArticleResourcePersistence.fetchByPrimaryKey(article.getResourcePrimKey());
  articleResource.setArticleId(trashArticleId);
  journalArticleResourcePersistence.update(articleResource);
  TrashEntry trashEntry=trashEntryLocalService.getEntry(JournalArticle.class.getName(),article.getResourcePrimKey());
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setScopeGroupId(article.getGroupId());
  updateStatus(userId,article,trashEntry.getStatus(),null,serviceContext,new HashMap<String,Serializable>());
  List<TrashVersion> trashVersions=trashVersionLocalService.getVersions(trashEntry.getEntryId());
  boolean visible=false;
  for (  TrashVersion trashVersion : trashVersions) {
    JournalArticle trashArticleVersion=journalArticlePersistence.findByPrimaryKey(trashVersion.getClassPK());
    trashArticleVersion.setStatus(trashVersion.getStatus());
    if (trashVersion.getStatus() == WorkflowConstants.STATUS_APPROVED) {
      visible=true;
    }
    journalArticlePersistence.update(trashArticleVersion);
  }
  trashEntryLocalService.deleteEntry(JournalArticle.class.getName(),article.getResourcePrimKey());
  if (visible) {
    assetEntryLocalService.updateVisible(JournalArticle.class.getName(),article.getResourcePrimKey(),true);
  }
  if (JournalServiceConfigurationValues.JOURNAL_ARTICLE_COMMENTS_ENABLED) {
    CommentManagerUtil.restoreDiscussionFromTrash(JournalArticle.class.getName(),article.getResourcePrimKey());
  }
  JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
  extraDataJSONObject.put("title",article.getTitle());
  SocialActivityManagerUtil.addActivity(userId,article,SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
  return article;
}

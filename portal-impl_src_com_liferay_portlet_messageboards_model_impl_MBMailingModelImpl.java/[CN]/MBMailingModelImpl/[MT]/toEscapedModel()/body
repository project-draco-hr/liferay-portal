{
  if (isEscapedModel()) {
    return (MBMailing)this;
  }
 else {
    MBMailing model=new MBMailingImpl();
    model.setEscapedModel(true);
    model.setUuid(HtmlUtil.escape(getUuid()));
    model.setMailingId(getMailingId());
    model.setGroupId(getGroupId());
    model.setCompanyId(getCompanyId());
    model.setUserId(getUserId());
    model.setUserName(HtmlUtil.escape(getUserName()));
    model.setCreateDate(getCreateDate());
    model.setModifiedDate(getModifiedDate());
    model.setCategoryId(getCategoryId());
    model.setMailingListAddress(HtmlUtil.escape(getMailingListAddress()));
    model.setMailAddress(HtmlUtil.escape(getMailAddress()));
    model.setMailInProtocol(HtmlUtil.escape(getMailInProtocol()));
    model.setMailInServerName(HtmlUtil.escape(getMailInServerName()));
    model.setMailInUseSSL(getMailInUseSSL());
    model.setMailInServerPort(getMailInServerPort());
    model.setMailInUserName(HtmlUtil.escape(getMailInUserName()));
    model.setMailInPassword(HtmlUtil.escape(getMailInPassword()));
    model.setMailInReadInterval(getMailInReadInterval());
    model.setMailOutConfigured(getMailOutConfigured());
    model.setMailOutServerName(HtmlUtil.escape(getMailOutServerName()));
    model.setMailOutUseSSL(getMailOutUseSSL());
    model.setMailOutServerPort(getMailOutServerPort());
    model.setMailOutUserName(HtmlUtil.escape(getMailOutUserName()));
    model.setMailOutPassword(HtmlUtil.escape(getMailOutPassword()));
    model.setActive(getActive());
    model=(MBMailing)Proxy.newProxyInstance(MBMailing.class.getClassLoader(),new Class[]{MBMailing.class},new ReadOnlyBeanHandler(model));
    return model;
  }
}

{
  long userId=portletDataContext.getUserId(page.getUserUuid());
  Map<Long,Long> nodeIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(WikiNode.class);
  long nodeId=MapUtil.getLong(nodeIds,page.getNodeId(),page.getNodeId());
  String content=ExportImportUtil.importContentReferences(portletDataContext,pageElement,page.getContent());
  page.setContent(content);
  ServiceContext serviceContext=portletDataContext.createServiceContext(pageElement,page,NAMESPACE);
  if (page.getStatus() != WorkflowConstants.STATUS_APPROVED) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  }
  WikiPage importedPage=null;
  WikiPage existingPage=WikiPageUtil.fetchByUUID_G(page.getUuid(),portletDataContext.getScopeGroupId());
  if (existingPage == null) {
    try {
      existingPage=WikiPageLocalServiceUtil.getPage(nodeId,page.getTitle());
    }
 catch (    NoSuchPageException nspe) {
    }
  }
  if (existingPage == null) {
    serviceContext.setUuid(page.getUuid());
    importedPage=WikiPageLocalServiceUtil.addPage(userId,nodeId,page.getTitle(),page.getVersion(),page.getContent(),page.getSummary(),page.isMinorEdit(),page.getFormat(),page.getHead(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
  }
 else {
    importedPage=WikiPageLocalServiceUtil.updatePage(userId,nodeId,existingPage.getTitle(),0,page.getContent(),page.getSummary(),page.isMinorEdit(),page.getFormat(),page.getParentTitle(),page.getRedirectTitle(),serviceContext);
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"attachments") && page.isHead()) {
    for (    Element attachmentElement : pageElement.elements("attachment")) {
      String name=attachmentElement.attributeValue("name");
      String binPath=attachmentElement.attributeValue("bin-path");
      InputStream inputStream=null;
      String mimeType=null;
      try {
        inputStream=portletDataContext.getZipEntryAsInputStream(binPath);
        mimeType=MimeTypesUtil.getContentType(inputStream,name);
      }
  finally {
        StreamUtil.cleanUp(inputStream);
      }
      try {
        inputStream=portletDataContext.getZipEntryAsInputStream(binPath);
        WikiPageLocalServiceUtil.addPageAttachment(userId,importedPage.getNodeId(),importedPage.getTitle(),name,inputStream,mimeType);
      }
  finally {
        StreamUtil.cleanUp(inputStream);
      }
    }
  }
  portletDataContext.importClassedModel(page,importedPage,NAMESPACE);
}

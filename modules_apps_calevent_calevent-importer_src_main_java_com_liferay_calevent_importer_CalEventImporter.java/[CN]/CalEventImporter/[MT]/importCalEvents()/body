{
  if (!hasTable("CalEvent")) {
    return;
  }
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    StringBundler sb=new StringBundler(5);
    sb.append("select uuid_, eventId, groupId, companyId, userId, ");
    sb.append("userName, createDate, modifiedDate, title, ");
    sb.append("description, location, startDate, endDate, ");
    sb.append("durationHour, durationMinute, allDay, type_, ");
    sb.append("repeating, recurrence, firstReminder, secondReminder ");
    sb.append("from CalEvent ");
    try (PreparedStatement ps=connection.prepareStatement(sb.toString())){
      ResultSet rs=ps.executeQuery();
      while (rs.next()) {
        String uuid=rs.getString("uuid_");
        long eventId=rs.getLong("eventId");
        long groupId=rs.getLong("groupId");
        long companyId=rs.getLong("companyId");
        long userId=rs.getLong("userId");
        String userName=rs.getString("userName");
        Timestamp createDate=rs.getTimestamp("createDate");
        Timestamp modifiedDate=rs.getTimestamp("modifiedDate");
        String title=rs.getString("title");
        String description=rs.getString("description");
        String location=rs.getString("location");
        Timestamp startDate=rs.getTimestamp("startDate");
        int durationHour=rs.getInt("durationHour");
        int durationMinute=rs.getInt("durationMinute");
        boolean allDay=rs.getBoolean("allDay");
        String type=rs.getString("type_");
        String recurrence=rs.getString("recurrence");
        int firstReminder=rs.getInt("firstReminder");
        int secondReminder=rs.getInt("secondReminder");
        importCalEvent(uuid,eventId,groupId,companyId,userId,userName,createDate,modifiedDate,title,description,location,startDate,durationHour,durationMinute,allDay,type,recurrence,firstReminder,secondReminder);
      }
    }
   }
 }

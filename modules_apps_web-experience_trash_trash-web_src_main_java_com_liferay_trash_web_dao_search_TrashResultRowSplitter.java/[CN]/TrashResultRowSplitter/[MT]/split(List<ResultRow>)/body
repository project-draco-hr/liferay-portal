{
  List<ResultRowSplitterEntry> resultRowSplitterEntries=new ArrayList<>();
  List<ResultRow> trashContainedResultRows=new ArrayList<>();
  List<ResultRow> trashContainerResultRows=new ArrayList<>();
  String containerModelName=null;
  String containedModelName=null;
  for (  ResultRow resultRow : resultRows) {
    TrashRenderer trashRenderer=(TrashRenderer)resultRow.getObject();
    TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(trashRenderer.getClassName());
    if (Validator.isNull(containerModelName) && Validator.isNull(containedModelName)) {
      containerModelName=trashHandler.getTrashContainerModelName();
      containedModelName=trashHandler.getTrashContainedModelName();
    }
    if (trashHandler.isContainerModel()) {
      trashContainerResultRows.add(resultRow);
    }
 else {
      trashContainedResultRows.add(resultRow);
    }
  }
  if (!trashContainerResultRows.isEmpty()) {
    resultRowSplitterEntries.add(new ResultRowSplitterEntry(containerModelName,trashContainerResultRows));
  }
  if (!trashContainedResultRows.isEmpty()) {
    resultRowSplitterEntries.add(new ResultRowSplitterEntry(containedModelName,trashContainedResultRows));
  }
  return resultRowSplitterEntries;
}

{
  try {
    String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
    UploadException uploadException=(UploadException)actionRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
    if (uploadException != null) {
      if (uploadException.isExceededSizeLimit()) {
        throw new FileSizeException(uploadException.getCause());
      }
      throw new PortalException(uploadException.getCause());
    }
 else     if (cmd.equals(Constants.ADD_TEMP)) {
      addTempImageFile(actionRequest);
    }
 else {
      FileEntry fileEntry=null;
      boolean imageUploaded=ParamUtil.getBoolean(actionRequest,"imageUploaded");
      if (imageUploaded) {
        fileEntry=saveTempImageFile(actionRequest);
      }
      long maxFileSize=ParamUtil.getLong(actionRequest,"maxFileSize");
      if (fileEntry.getSize() > (maxFileSize * 1024)) {
        throw new FileSizeException();
      }
      SessionMessages.add(actionRequest,"imageUploaded",fileEntry);
      sendRedirect(actionRequest,actionResponse);
    }
  }
 catch (  Exception e) {
    if (e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portal.error");
    }
 else     if (e instanceof ImageTypeException) {
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.putException(e);
      writeJSON(actionRequest,actionResponse,jsonObject);
    }
 else     if (e instanceof FileSizeException || e instanceof NoSuchFileException || e instanceof UploadException) {
      SessionErrors.add(actionRequest,e.getClass());
    }
 else {
      throw e;
    }
  }
}

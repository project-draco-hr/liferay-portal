{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  long maxFileSize=ParamUtil.getLong(actionRequest,"maxFileSize");
  try {
    UploadException uploadException=(UploadException)actionRequest.getAttribute(WebKeys.UPLOAD_EXCEPTION);
    if (uploadException != null) {
      if (uploadException.isExceededSizeLimit()) {
        throw new FileSizeException(uploadException.getCause());
      }
      throw new PortalException(uploadException.getCause());
    }
 else     if (cmd.equals(Constants.ADD_TEMP)) {
      FileEntry tempImageFile=addTempImageFile(actionRequest);
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
      jsonObject.put("tempImageFileName",tempImageFile.getTitle());
      writeJSON(actionRequest,actionResponse,jsonObject);
    }
 else {
      FileEntry fileEntry=null;
      boolean imageUploaded=ParamUtil.getBoolean(actionRequest,"imageUploaded");
      if (imageUploaded) {
        fileEntry=saveTempImageFile(actionRequest);
        if (fileEntry.getSize() > maxFileSize) {
          throw new FileSizeException();
        }
      }
      SessionMessages.add(actionRequest,"imageUploaded",fileEntry);
      sendRedirect(actionRequest,actionResponse);
    }
  }
 catch (  Exception e) {
    if (e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      setForward(actionRequest,"portal.error");
    }
 else     if (e instanceof FileExtensionException || e instanceof FileSizeException || e instanceof ImageTypeException|| e instanceof NoSuchFileException|| e instanceof UploadException) {
      if (cmd.equals(Constants.ADD_TEMP)) {
        hideDefaultErrorMessage(actionRequest);
        ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
        String errorMessage=StringPool.BLANK;
        if (e instanceof FileExtensionException) {
          errorMessage=themeDisplay.translate("please-enter-a-file-with-a-valid-extension-x",StringUtil.merge(PropsValues.DL_FILE_EXTENSIONS,StringPool.COMMA));
        }
 else         if (e instanceof FileSizeException) {
          if (maxFileSize == 0) {
            maxFileSize=PrefsPropsUtil.getLong(PropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE);
          }
          errorMessage=themeDisplay.translate("please-enter-a-file-with-a-valid-file-size-no" + "-larger-than-x",TextFormatter.formatStorageSize(maxFileSize,themeDisplay.getLocale()));
        }
 else         if (e instanceof ImageTypeException) {
          errorMessage=themeDisplay.translate("please-enter-a-file-with-a-valid-file-type");
        }
 else         if (e instanceof NoSuchFileException || e instanceof UploadException) {
          errorMessage=themeDisplay.translate("an-unexpected-error-occurred-while-uploading" + "-your-file");
        }
        JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
        jsonObject.put("errorMessage",errorMessage);
        writeJSON(actionRequest,actionResponse,jsonObject);
      }
 else {
        SessionErrors.add(actionRequest,e.getClass());
      }
    }
 else {
      throw e;
    }
  }
}

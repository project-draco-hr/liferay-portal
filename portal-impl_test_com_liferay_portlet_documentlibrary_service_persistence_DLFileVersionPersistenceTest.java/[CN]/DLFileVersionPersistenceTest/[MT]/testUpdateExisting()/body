{
  long pk=nextLong();
  DLFileVersion newDLFileVersion=_persistence.create(pk);
  newDLFileVersion.setGroupId(nextLong());
  newDLFileVersion.setCompanyId(nextLong());
  newDLFileVersion.setUserId(nextLong());
  newDLFileVersion.setUserName(randomString());
  newDLFileVersion.setCreateDate(nextDate());
  newDLFileVersion.setRepositoryId(nextLong());
  newDLFileVersion.setFileEntryId(nextLong());
  newDLFileVersion.setFolderId(nextLong());
  newDLFileVersion.setExtension(randomString());
  newDLFileVersion.setMimeType(randomString());
  newDLFileVersion.setTitle(randomString());
  newDLFileVersion.setDescription(randomString());
  newDLFileVersion.setChangeLog(randomString());
  newDLFileVersion.setExtraSettings(randomString());
  newDLFileVersion.setFileEntryTypeId(nextLong());
  newDLFileVersion.setVersion(randomString());
  newDLFileVersion.setSize(nextLong());
  newDLFileVersion.setStatus(nextInt());
  newDLFileVersion.setStatusByUserId(nextLong());
  newDLFileVersion.setStatusByUserName(randomString());
  newDLFileVersion.setStatusDate(nextDate());
  _persistence.update(newDLFileVersion,false);
  DLFileVersion existingDLFileVersion=_persistence.findByPrimaryKey(newDLFileVersion.getPrimaryKey());
  assertEquals(existingDLFileVersion.getFileVersionId(),newDLFileVersion.getFileVersionId());
  assertEquals(existingDLFileVersion.getGroupId(),newDLFileVersion.getGroupId());
  assertEquals(existingDLFileVersion.getCompanyId(),newDLFileVersion.getCompanyId());
  assertEquals(existingDLFileVersion.getUserId(),newDLFileVersion.getUserId());
  assertEquals(existingDLFileVersion.getUserName(),newDLFileVersion.getUserName());
  assertEquals(Time.getShortTimestamp(existingDLFileVersion.getCreateDate()),Time.getShortTimestamp(newDLFileVersion.getCreateDate()));
  assertEquals(existingDLFileVersion.getRepositoryId(),newDLFileVersion.getRepositoryId());
  assertEquals(existingDLFileVersion.getFileEntryId(),newDLFileVersion.getFileEntryId());
  assertEquals(existingDLFileVersion.getFolderId(),newDLFileVersion.getFolderId());
  assertEquals(existingDLFileVersion.getExtension(),newDLFileVersion.getExtension());
  assertEquals(existingDLFileVersion.getMimeType(),newDLFileVersion.getMimeType());
  assertEquals(existingDLFileVersion.getTitle(),newDLFileVersion.getTitle());
  assertEquals(existingDLFileVersion.getDescription(),newDLFileVersion.getDescription());
  assertEquals(existingDLFileVersion.getChangeLog(),newDLFileVersion.getChangeLog());
  assertEquals(existingDLFileVersion.getExtraSettings(),newDLFileVersion.getExtraSettings());
  assertEquals(existingDLFileVersion.getFileEntryTypeId(),newDLFileVersion.getFileEntryTypeId());
  assertEquals(existingDLFileVersion.getVersion(),newDLFileVersion.getVersion());
  assertEquals(existingDLFileVersion.getSize(),newDLFileVersion.getSize());
  assertEquals(existingDLFileVersion.getStatus(),newDLFileVersion.getStatus());
  assertEquals(existingDLFileVersion.getStatusByUserId(),newDLFileVersion.getStatusByUserId());
  assertEquals(existingDLFileVersion.getStatusByUserName(),newDLFileVersion.getStatusByUserName());
  assertEquals(Time.getShortTimestamp(existingDLFileVersion.getStatusDate()),Time.getShortTimestamp(newDLFileVersion.getStatusDate()));
}

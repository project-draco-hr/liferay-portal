{
  JSONObject jsonObj=JSONFactoryUtil.createJSONObject(message);
  String responseDestination=jsonObj.getString("lfrResponseDestination");
  String responseId=jsonObj.getString("lfrResponseId");
  jsonObj.remove("lfrResponseDestination");
  jsonObj.remove("lfrResponseId");
  SchedulerRequest schedulerRequest=(SchedulerRequest)JSONFactoryUtil.deserialize(jsonObj);
  String command=schedulerRequest.getCommand();
  if (command.equals(SchedulerRequest.COMMAND_REGISTER)) {
    _schedulerEngine.schedule(schedulerRequest.getGroupName(),schedulerRequest.getCronText(),schedulerRequest.getStartDate(),schedulerRequest.getEndDate(),schedulerRequest.getDescription(),schedulerRequest.getDestination(),schedulerRequest.getMessageBody());
  }
 else   if (command.equals(SchedulerRequest.COMMAND_RETRIEVE)) {
    doCommandRetrieve(responseDestination,responseId,schedulerRequest);
  }
 else   if (command.equals(SchedulerRequest.COMMAND_SHUTDOWN)) {
    _schedulerEngine.shutdown();
  }
 else   if (command.equals(SchedulerRequest.COMMAND_STARTUP)) {
    _schedulerEngine.start();
  }
 else   if (command.equals(SchedulerRequest.COMMAND_UNREGISTER)) {
    _schedulerEngine.unschedule(schedulerRequest.getJobName(),schedulerRequest.getGroupName());
  }
}

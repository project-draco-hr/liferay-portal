{
  StringBundler sb=new StringBundler();
  sb.append("SELECT cmis:objectId");
  QueryConfig queryConfig=searchContext.getQueryConfig();
  if (queryConfig.isScoreEnabled()) {
    sb.append(", SCORE() AS HITS");
  }
  sb.append(" FROM cmis:document");
  CMISDisjunction cmisDisjunction=new CMISDisjunction();
  if (_log.isDebugEnabled()) {
    _log.debug("Repository query support: " + queryConfig.getAttribute("capabilityQuery"));
  }
  if (!isSupportsOnlyFullText(queryConfig)) {
    traversePropertiesQuery(cmisDisjunction,query,queryConfig);
  }
  if (isSupportsFullText(queryConfig)) {
    CMISContainsExpression containsExpression=new CMISContainsExpression();
    traverseContentQuery(containsExpression,query,queryConfig);
    if (!containsExpression.isEmpty()) {
      cmisDisjunction.add(containsExpression);
    }
  }
  if (!cmisDisjunction.isEmpty()) {
    sb.append(" WHERE ");
    sb.append(cmisDisjunction.toQueryFragment());
  }
  Sort[] sorts=searchContext.getSorts();
  if (queryConfig.isScoreEnabled() || ArrayUtil.isNotEmpty(sorts)) {
    sb.append(" ORDER BY ");
  }
  if (ArrayUtil.isNotEmpty(sorts)) {
    int i=0;
    for (    Sort sort : sorts) {
      String fieldName=sort.getFieldName();
      if (!isSupportedField(fieldName)) {
        continue;
      }
      if (i > 0) {
        sb.append(", ");
      }
      sb.append(getCmisField(fieldName));
      if (sort.isReverse()) {
        sb.append(" DESC");
      }
 else {
        sb.append(" ASC");
      }
      i++;
    }
  }
 else   if (queryConfig.isScoreEnabled()) {
    sb.append("HITS DESC");
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Returning CMIS query: " + sb);
  }
  return sb.toString();
}

{
  if (query instanceof BooleanQuery) {
    BooleanQuery booleanQuery=(BooleanQuery)query;
    List<BooleanClause> booleanClauses=booleanQuery.clauses();
    CMISFullTextConjunction anyCMISConjunction=new CMISFullTextConjunction();
    CMISFullTextConjunction notCMISConjunction=new CMISFullTextConjunction();
    CMISDisjunction cmisDisjunction=new CMISDisjunction();
    for (    BooleanClause booleanClause : booleanClauses) {
      CMISJunction cmisJunction=cmisDisjunction;
      BooleanClauseOccur booleanClauseOccur=booleanClause.getBooleanClauseOccur();
      if (booleanClauseOccur.equals(BooleanClauseOccur.MUST)) {
        cmisJunction=anyCMISConjunction;
      }
 else       if (booleanClauseOccur.equals(BooleanClauseOccur.MUST_NOT)) {
        cmisJunction=notCMISConjunction;
      }
      Query booleanClauseQuery=booleanClause.getQuery();
      traverseContentQuery(cmisJunction,booleanClauseQuery,queryConfig);
    }
    if (!anyCMISConjunction.isEmpty()) {
      criterion.add(anyCMISConjunction);
    }
    if (!cmisDisjunction.isEmpty()) {
      criterion.add(cmisDisjunction);
    }
    if (!notCMISConjunction.isEmpty()) {
      CMISContainsNotExpression cmisContainsNotExpression=new CMISContainsNotExpression(notCMISConjunction);
      criterion.add(cmisContainsNotExpression);
    }
  }
 else   if (query instanceof TermQuery) {
    TermQuery termQuery=(TermQuery)query;
    QueryTerm queryTerm=termQuery.getQueryTerm();
    if (!_isContentFieldQueryTerm(queryTerm)) {
      return;
    }
    CMISContainsValueExpression cmisContainsValueExpression=new CMISContainsValueExpression(queryTerm.getValue());
    criterion.add(cmisContainsValueExpression);
  }
 else   if (query instanceof WildcardQuery) {
    WildcardQuery wildcardQuery=(WildcardQuery)query;
    QueryTerm queryTerm=wildcardQuery.getQueryTerm();
    if (!_isContentFieldQueryTerm(queryTerm)) {
      return;
    }
    String value=queryTerm.getValue();
    String[] terms=value.split(_STAR_PATTERN);
    CMISConjunction cmisConjunction=new CMISConjunction();
    for (    String term : terms) {
      CMISContainsValueExpression containsValueExpression=new CMISContainsValueExpression(term);
      cmisConjunction.add(containsValueExpression);
    }
    criterion.add(cmisConjunction);
  }
 else   if (query instanceof TermRangeQuery) {
    return;
  }
}

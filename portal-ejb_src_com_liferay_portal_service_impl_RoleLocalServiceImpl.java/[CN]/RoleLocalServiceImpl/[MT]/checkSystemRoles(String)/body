{
  String[] systemRoles=PortalUtil.getSystemRoles();
  for (int i=0; i < systemRoles.length; i++) {
    try {
      RoleFinder.findByC_N(companyId,systemRoles[i]);
    }
 catch (    NoSuchRoleException nsre) {
      addRole(null,companyId,systemRoles[i],RoleImpl.TYPE_REGULAR);
    }
  }
  String[] systemCommunityRoles=PortalUtil.getSystemCommunityRoles();
  for (int i=0; i < systemCommunityRoles.length; i++) {
    try {
      RoleFinder.findByC_N(companyId,systemCommunityRoles[i]);
    }
 catch (    NoSuchRoleException nsre) {
      Role role=addRole(null,companyId,systemCommunityRoles[i],RoleImpl.TYPE_COMMUNITY);
      if (systemCommunityRoles[i].equals(RoleImpl.COMMUNITY_OWNER)) {
        List actions=ResourceActionsUtil.getModelResourceActions(Group.class.getName());
        PermissionLocalServiceUtil.setRolePermissions(role.getRoleId(),role.getCompanyId(),Group.class.getName(),ResourceImpl.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupImpl.DEFAULT_PARENT_GROUP_ID),(String[])actions.toArray(new String[0]));
      }
 else       if (systemCommunityRoles[i].equals(RoleImpl.COMMUNITY_ADMINISTRATOR)) {
        String[] actionIds=new String[]{ActionKeys.ASSIGN_USERS,ActionKeys.MANAGE_LAYOUTS,ActionKeys.UPDATE};
        PermissionLocalServiceUtil.setRolePermissions(role.getRoleId(),role.getCompanyId(),Group.class.getName(),ResourceImpl.SCOPE_GROUP_TEMPLATE,String.valueOf(GroupImpl.DEFAULT_PARENT_GROUP_ID),actionIds);
      }
    }
  }
}

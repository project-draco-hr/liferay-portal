{
  try {
    String requestBody=ServletUtil.readRequestBody(request);
    if (Validator.isNull(requestBody) || !requestBody.startsWith(StringPool.OPEN_CURLY_BRACE) || !requestBody.endsWith(StringPool.CLOSE_CURLY_BRACE)) {
      return null;
    }
    JSONDeserializer<HashMap<Object,Object>> jsonDeserializer=JSONFactoryUtil.createJSONDeserializer();
    jsonDeserializer.use(null,HashMap.class);
    jsonDeserializer.use("parameters",HashMap.class);
    HashMap<Object,Object> requestBodyMap=jsonDeserializer.deserialize(requestBody);
    JSONRPCRequest jsonrpcRequest=new JSONRPCRequest();
    jsonrpcRequest._id=(Integer)requestBodyMap.get("id");
    jsonrpcRequest._jsonrpc=(String)requestBodyMap.get("jsonrpc");
    jsonrpcRequest._method=(String)requestBodyMap.get("method");
    jsonrpcRequest._parameters=(Map<String,?>)requestBodyMap.get("params");
    if (Validator.isNull(jsonrpcRequest._method)) {
      return null;
    }
    return jsonrpcRequest;
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to parse JSON RPC request",e);
    }
    return null;
  }
}

{
  if (_warned) {
    return;
  }
  String dlHookImpl=PropsUtil.get("dl.hook.impl");
  if (Validator.isNull(dlHookImpl)) {
    _warned=true;
    return;
  }
  boolean found=false;
  for (  String key : _storeServiceTrackerMap.keySet()) {
    Store store=getStoreInstance(key);
    Class<?> clazz=store.getClass();
    String className=clazz.getName();
    if (dlHookImpl.equals(className)) {
      PropsValues.DL_STORE_IMPL=className;
      found=true;
      break;
    }
  }
  if (!found) {
    PropsValues.DL_STORE_IMPL=dlHookImpl;
  }
  if (_log.isWarnEnabled()) {
    StringBundler sb=new StringBundler(13);
    sb.append("Liferay is configured with the legacy ");
    sb.append("property \"dl.hook.impl=");
    sb.append(dlHookImpl);
    sb.append("\" ");
    sb.append("in portal-ext.properties. Please reconfigure ");
    sb.append("to use the new property \"");
    sb.append(PropsKeys.DL_STORE_IMPL);
    sb.append("\". Liferay will ");
    sb.append("attempt to temporarily set \"");
    sb.append(PropsKeys.DL_STORE_IMPL);
    sb.append("=");
    sb.append(PropsValues.DL_STORE_IMPL);
    sb.append("\".");
    _log.warn(sb.toString());
  }
  _warned=true;
}

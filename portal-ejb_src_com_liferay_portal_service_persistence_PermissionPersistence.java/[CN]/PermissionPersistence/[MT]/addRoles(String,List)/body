{
  Session session=null;
  try {
    session=openSession();
    PermissionHBM permissionHBM=(PermissionHBM)session.get(PermissionHBM.class,pk);
    if (permissionHBM == null) {
      _log.warn("No Permission exists with the primary key " + pk.toString());
      throw new NoSuchPermissionException("No Permission exists with the primary key " + pk.toString());
    }
    boolean value=false;
    for (int i=0; i < roles.size(); i++) {
      com.liferay.portal.model.Role role=(com.liferay.portal.model.Role)roles.get(i);
      com.liferay.portal.service.persistence.RoleHBM roleHBM=(com.liferay.portal.service.persistence.RoleHBM)session.get(com.liferay.portal.service.persistence.RoleHBM.class,role.getPrimaryKey());
      if (roleHBM == null) {
        _log.warn("No Role exists with the primary key " + role.getPrimaryKey().toString());
        throw new com.liferay.portal.NoSuchRoleException("No Role exists with the primary key " + role.getPrimaryKey().toString());
      }
      if (permissionHBM.getRoles().add(roleHBM)) {
        value=true;
      }
    }
    session.flush();
    return value;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

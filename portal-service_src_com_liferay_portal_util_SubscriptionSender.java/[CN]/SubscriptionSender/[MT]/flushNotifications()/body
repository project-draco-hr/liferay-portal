{
  initialize();
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    if ((_classLoader != null) && (contextClassLoader != _classLoader)) {
      currentThread.setContextClassLoader(_classLoader);
    }
    String inferredClassName=null;
    long inferredClassPK=0;
    if (_persistestedSubscribersOVPs.size() > 1) {
      ObjectValuePair<String,Long> objectValuePair=_persistestedSubscribersOVPs.get(_persistestedSubscribersOVPs.size() - 1);
      inferredClassName=objectValuePair.getKey();
      inferredClassPK=objectValuePair.getValue();
    }
    for (    ObjectValuePair<String,Long> ovp : _persistestedSubscribersOVPs) {
      String className=ovp.getKey();
      long classPK=ovp.getValue();
      List<Subscription> subscriptions=SubscriptionLocalServiceUtil.getSubscriptions(companyId,className,classPK);
      for (      Subscription subscription : subscriptions) {
        try {
          notifySubscriber(subscription,inferredClassName,inferredClassPK);
        }
 catch (        PortalException pe) {
          _log.error("Unable to process subscription: " + subscription);
        }
      }
      if (bulk) {
        Locale locale=LocaleUtil.getDefault();
        InternetAddress to=new InternetAddress(replaceContent(replyToAddress,locale),replaceContent(replyToAddress,locale));
        sendEmail(to,locale);
      }
    }
    _persistestedSubscribersOVPs.clear();
    for (    ObjectValuePair<String,String> ovp : _runtimeSubscribersOVPs) {
      String toAddress=ovp.getKey();
      if (Validator.isNull(toAddress)) {
        continue;
      }
      if (_sentEmailAddresses.contains(toAddress)) {
        if (_log.isDebugEnabled()) {
          _log.debug("Do not send a duplicate email to " + toAddress);
        }
        continue;
      }
      if (_log.isDebugEnabled()) {
        _log.debug("Add " + toAddress + " to the list of users who "+ "have received an email");
      }
      _sentEmailAddresses.add(toAddress);
      String toName=ovp.getValue();
      InternetAddress to=new InternetAddress(toAddress,toName);
      sendEmail(to,LocaleUtil.getDefault());
    }
    _runtimeSubscribersOVPs.clear();
  }
  finally {
    if ((_classLoader != null) && (contextClassLoader != _classLoader)) {
      currentThread.setContextClassLoader(contextClassLoader);
    }
  }
}

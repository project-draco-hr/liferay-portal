{
  String subject=this.subject;
  if (localizedSubjectMap != null) {
    String localizedSubject=localizedSubjectMap.get(locale);
    if (Validator.isNotNull(localizedSubject)) {
      subject=localizedSubject;
    }
  }
  String body=this.body;
  if (localizedBodyMap != null) {
    String localizedBody=localizedBodyMap.get(locale);
    if (Validator.isNotNull(localizedBody)) {
      body=localizedBody;
    }
  }
  MailMessage mailMessage=new MailMessage(from,to,subject,body,htmlFormat);
  if (attachments != null) {
    for (    File attachment : attachments) {
      mailMessage.addAttachment(attachment);
    }
  }
  if (bulk && (_bulkAddresses != null)) {
    mailMessage.setBulkAddresses(_bulkAddresses.toArray(new InternetAddress[_bulkAddresses.size()]));
    _bulkAddresses.clear();
  }
  if (inReplyTo != null) {
    mailMessage.setInReplyTo(inReplyTo);
  }
  mailMessage.setMessageId(mailId);
  if (replyToAddress != null) {
    InternetAddress replyTo=new InternetAddress(replyToAddress,replyToAddress);
    mailMessage.setReplyTo(new InternetAddress[]{replyTo});
  }
  if (smtpAccount != null) {
    mailMessage.setSMTPAccount(smtpAccount);
  }
  processMailMessage(mailMessage,locale);
  MailServiceUtil.sendEmail(mailMessage);
}

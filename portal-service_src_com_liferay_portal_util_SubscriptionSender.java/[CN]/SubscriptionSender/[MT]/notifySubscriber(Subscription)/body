{
  long subscriptionUserId=subscription.getUserId();
  if (sentUserIds.contains(subscriptionUserId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Do not send a duplicate email to user " + subscriptionUserId);
    }
    return;
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Add user " + subscriptionUserId + " to the list of users who have received an email");
    }
    sentUserIds.add(subscriptionUserId);
  }
  User user=null;
  try {
    user=UserLocalServiceUtil.getUserById(subscriptionUserId);
  }
 catch (  NoSuchUserException nsue) {
    if (_log.isInfoEnabled()) {
      _log.info("Subscription " + subscription.getSubscriptionId() + " is stale and will be deleted");
    }
    deleteSubscription(subscription);
    return;
  }
  if (!user.isActive()) {
    if (_log.isDebugEnabled()) {
      _log.debug("Skip inactive user " + subscriptionUserId);
    }
    return;
  }
  Group group=GroupLocalServiceUtil.getGroup(groupId);
  int type=group.getType();
  if (!GroupLocalServiceUtil.hasUserGroup(subscriptionUserId,groupId) && (type != GroupConstants.TYPE_COMMUNITY_OPEN)) {
    if (_log.isInfoEnabled()) {
      _log.info("Subscription " + subscription.getSubscriptionId() + " is stale and will be deleted");
    }
    deleteSubscription(subscription);
    return;
  }
  try {
    if (!hasPermission(subscription,user)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Skip unauthorized user " + subscriptionUserId);
      }
      return;
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    return;
  }
  if (bulk) {
    InternetAddress bulkAddress=new InternetAddress(user.getEmailAddress(),user.getFullName());
    if (bulkAddresses == null) {
      bulkAddresses=new ArrayList<InternetAddress>();
    }
    bulkAddresses.add(bulkAddress);
  }
 else {
    try {
      InternetAddress to=new InternetAddress(user.getEmailAddress(),user.getFullName());
      sendEmail(to,user.getLocale());
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
}

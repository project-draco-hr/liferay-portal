{
  PortalHibernateConfiguration portalHibernateConfiguration=new PortalHibernateConfiguration();
  portalHibernateConfiguration.setDataSource(dataSource);
  portalHibernateConfiguration.afterPropertiesSet();
  SessionFactoryImplementor sessionFactoryImplementor=(SessionFactoryImplementor)portalHibernateConfiguration.getObject();
  SessionFactoryImpl sessionFactoryImpl=(SessionFactoryImpl)PortalBeanLocatorUtil.locate(name);
  sessionFactoryImpl.setSessionFactoryImplementor(sessionFactoryImplementor);
  AbstractPlatformTransactionManager abstractPlatformTransactionManager=(AbstractPlatformTransactionManager)PortalBeanLocatorUtil.locate("liferayTransactionManager");
  if (abstractPlatformTransactionManager instanceof HibernateTransactionManager) {
    HibernateTransactionManager hibernateTransactionManager=(HibernateTransactionManager)abstractPlatformTransactionManager;
    hibernateTransactionManager.setSessionFactory(sessionFactoryImplementor);
  }
 else   if (_log.isWarnEnabled()) {
    _log.warn("Unable to swap to session factory for " + abstractPlatformTransactionManager.getClass() + " which may cause subsequent transaction failures");
  }
}

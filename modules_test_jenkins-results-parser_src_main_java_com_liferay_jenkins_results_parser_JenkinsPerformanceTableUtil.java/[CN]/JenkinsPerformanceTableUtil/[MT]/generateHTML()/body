{
  List<JenkinsPerformanceDataUtil.Result> results=JenkinsPerformanceDataUtil.getSlowestResults();
  if (results == null) {
    return "<p>Performance data is not available.</p>";
  }
  Element divElement=new DefaultElement("div");
  Element pElement=new DefaultElement("p");
  divElement.add(pElement);
  pElement.addText((JenkinsPerformanceDataUtil.getSlaveCount() + 1) + " slaves used.");
  pElement.add(new DefaultElement("br"));
  pElement.addText(JenkinsPerformanceDataUtil.getTestCount() + " tests executed.");
  pElement.add(new DefaultElement("br"));
  pElement.addText(JenkinsPerformanceDataUtil.getTotalDuration() + " seconds of CPU " + "time used.");
  pElement.add(new DefaultElement("br"));
  Element tableElement=new DefaultElement("table");
  divElement.add(tableElement);
  tableElement.addAttribute("border","1");
  tableElement.addAttribute("cellspacing","0");
  tableElement.add(_createRowElement("th","Axis","Class Name","Duration (Seconds)","Job Name","Name","Status",null));
  for (  JenkinsPerformanceDataUtil.Result result : results) {
    tableElement.add(_createRowElement("td",result.getAxis(),result.getClassName(),Float.toString(result.getDuration()),result.getJobName(),result.getName(),result.getStatus(),result.getUrl()));
  }
  JenkinsPerformanceDataUtil.reset();
  System.out.println(JenkinsResultsParserUtil.format(pElement));
  return JenkinsResultsParserUtil.format(divElement);
}

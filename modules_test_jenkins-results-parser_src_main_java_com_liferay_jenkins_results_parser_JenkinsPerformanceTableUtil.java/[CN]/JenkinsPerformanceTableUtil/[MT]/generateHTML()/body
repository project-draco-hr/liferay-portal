{
  List<JenkinsPerformanceDataUtil.Result> results=JenkinsPerformanceDataUtil.getSlowestResults();
  if (results == null) {
    return "<p>Performance data is not available.</p>";
  }
  Element div=new DefaultElement("div");
  Element p=new DefaultElement("p");
  Element table=new DefaultElement("table");
  div.add(p);
  div.add(table);
  table.addAttribute("border","1");
  table.addAttribute("cellspacing","0");
  table.add(_createRowElement("th","Axis","Class Name","Duration (Seconds)","Job Name","Name","Status",null));
  for (  JenkinsPerformanceDataUtil.Result result : results) {
    table.add(_createRowElement("td",result.getAxis(),result.getClassName(),Float.toString(result.getDuration()),result.getJobName(),result.getName(),result.getStatus(),result.getUrl()));
  }
  p.addText((JenkinsPerformanceDataUtil.getSlaveCount() + 1) + " slaves used.");
  p.add(new DefaultElement("br"));
  p.addText(JenkinsPerformanceDataUtil.getTestCount() + " tests executed.");
  p.add(new DefaultElement("br"));
  p.addText(JenkinsPerformanceDataUtil.getTotalDuration() + " seconds of CPU " + "time used.");
  p.add(new DefaultElement("br"));
  JenkinsPerformanceDataUtil.reset();
  System.out.println(JenkinsResultsParserUtil.format(p));
  return JenkinsResultsParserUtil.format(div);
}

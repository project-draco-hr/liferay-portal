{
  try {
    PropsUtil.set(PropsKeys.LAST_MODIFIED_CHECK,"false");
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    if (!themeDisplay.isSignedIn()) {
      return;
    }
    String requestURI=GetterUtil.getString(request.getRequestURI());
    if (!requestURI.endsWith("/portal/layout")) {
      return;
    }
    Layout layout=themeDisplay.getLayout();
    if (layout == null) {
      return;
    }
    Randomizer randomizer=Randomizer.getInstance();
    boolean wapTheme=BrowserSnifferUtil.is_wap(request);
    List<Theme> themes=ThemeLocalServiceUtil.getThemes(themeDisplay.getCompanyId(),themeDisplay.getPortletGroupId(),themeDisplay.getUserId(),wapTheme);
    if (themes.size() > 0) {
      Theme theme=themes.get(randomizer.nextInt(themes.size()));
      List<ColorScheme> colorSchemes=theme.getColorSchemes();
      ColorScheme colorScheme=colorSchemes.get(randomizer.nextInt(colorSchemes.size()));
      LayoutServiceUtil.updateLookAndFeel(layout.getGroupId(),layout.isPrivateLayout(),layout.getPlid(),theme.getThemeId(),colorScheme.getColorSchemeId(),layout.getCss(),wapTheme);
      themeDisplay.setLookAndFeel(theme,colorScheme);
      request.setAttribute(WebKeys.THEME,theme);
      request.setAttribute(WebKeys.COLOR_SCHEME,colorScheme);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
    throw new ActionException(e);
  }
}

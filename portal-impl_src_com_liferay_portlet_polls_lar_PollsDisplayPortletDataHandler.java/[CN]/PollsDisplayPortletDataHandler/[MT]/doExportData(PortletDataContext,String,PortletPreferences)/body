{
  long questionId=GetterUtil.getLong(portletPreferences.getValue("questionId",StringPool.BLANK));
  if (questionId <= 0) {
    if (_log.isWarnEnabled()) {
      _log.warn("No question id found in preferences of portlet " + portletId);
    }
    return StringPool.BLANK;
  }
  PollsQuestion question=null;
  try {
    question=PollsQuestionUtil.findByPrimaryKey(questionId);
  }
 catch (  NoSuchQuestionException nsqe) {
    if (_log.isWarnEnabled()) {
      _log.warn(nsqe,nsqe);
    }
    return StringPool.BLANK;
  }
  portletDataContext.addPortletPermissions(PollsPermission.RESOURCE_NAME);
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,portletId,question);
  for (  PollsChoice choice : question.getChoices()) {
    StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,portletId,choice);
  }
  if (portletDataContext.getBooleanParameter(PollsPortletDataHandler.NAMESPACE,"votes")) {
    for (    PollsVote vote : question.getVotes()) {
      StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,portletId,vote);
    }
  }
  return getExportDataRootElementString(rootElement);
}

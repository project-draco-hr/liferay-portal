{
  portletDataContext.importPermissions("com.liferay.portlet.polls",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element questionsElement=rootElement.element("questions");
  for (  Element questionElement : questionsElement.elements("question")) {
    String path=questionElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    PollsQuestion question=(PollsQuestion)portletDataContext.getZipEntryAsObject(path);
    PollsPortletDataHandler.importQuestion(portletDataContext,questionElement,question);
  }
  Element choicesElement=rootElement.element("choices");
  for (  Element choiceElement : choicesElement.elements("choice")) {
    String path=choiceElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    PollsChoice choice=(PollsChoice)portletDataContext.getZipEntryAsObject(path);
    PollsPortletDataHandler.importChoice(portletDataContext,choice);
  }
  if (portletDataContext.getBooleanParameter(PollsPortletDataHandler.NAMESPACE,"votes")) {
    Element votesElement=rootElement.element("votes");
    for (    Element voteElement : votesElement.elements("vote")) {
      String path=voteElement.attributeValue("path");
      if (!portletDataContext.isPathNotProcessed(path)) {
        continue;
      }
      PollsVote vote=(PollsVote)portletDataContext.getZipEntryAsObject(path);
      PollsPortletDataHandler.importVote(portletDataContext,vote);
    }
  }
  long questionId=GetterUtil.getLong(portletPreferences.getValue("questionId",StringPool.BLANK));
  if (questionId > 0) {
    Map<Long,Long> questionIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(PollsQuestion.class);
    questionId=MapUtil.getLong(questionIds,questionId,questionId);
    portletPreferences.setValue("questionId",String.valueOf(questionId));
  }
  return portletPreferences;
}

{
  portletDataContext.importPortletPermissions(PollsPermission.RESOURCE_NAME);
  Element questionsElement=portletDataContext.getImportDataGroupElement(PollsQuestion.class);
  List<Element> questionElements=questionsElement.elements();
  for (  Element questionElement : questionElements) {
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,questionElement);
  }
  Element choicesElement=portletDataContext.getImportDataGroupElement(PollsChoice.class);
  List<Element> choiceElements=choicesElement.elements();
  for (  Element choiceElement : choiceElements) {
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,choiceElement);
  }
  Element votesElement=portletDataContext.getImportDataGroupElement(PollsVote.class);
  List<Element> voteElements=votesElement.elements();
  for (  Element voteElement : voteElements) {
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,voteElement);
  }
  long questionId=GetterUtil.getLong(portletPreferences.getValue("questionId",StringPool.BLANK));
  if (questionId > 0) {
    Map<Long,Long> questionIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(PollsQuestion.class);
    questionId=MapUtil.getLong(questionIds,questionId,questionId);
    portletPreferences.setValue("questionId",String.valueOf(questionId));
  }
  return portletPreferences;
}

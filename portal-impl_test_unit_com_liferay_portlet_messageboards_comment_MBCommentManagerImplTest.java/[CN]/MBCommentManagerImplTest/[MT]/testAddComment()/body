{
  long mbMessageId=RandomTestUtil.randomLong();
  when(_mbMessage.getMessageId()).thenReturn(mbMessageId);
  long rootMessageId=RandomTestUtil.randomLong();
  when(_mbThread.getRootMessageId()).thenReturn(rootMessageId);
  long threadId=RandomTestUtil.randomLong();
  when(_mbThread.getThreadId()).thenReturn(threadId);
  String body=RandomTestUtil.randomString();
  long classPK=RandomTestUtil.randomLong();
  long groupId=RandomTestUtil.randomLong();
  String subject=RandomTestUtil.randomString();
  long userId=RandomTestUtil.randomLong();
  String userName=RandomTestUtil.randomString();
  Assert.assertEquals(mbMessageId,_mbCommentManagerImpl.addComment(userId,groupId,_CLASS_NAME,classPK,userName,subject,body,_serviceContextFunction));
  Mockito.verify(_mbMessageLocalService).addDiscussionMessage(userId,userName,groupId,_CLASS_NAME,classPK,threadId,rootMessageId,subject,body,_serviceContext);
  Mockito.verify(_mbMessageLocalService).getDiscussionMessageDisplay(userId,groupId,_CLASS_NAME,classPK,WorkflowConstants.STATUS_APPROVED);
}

{
  Object[] finderArgs=new Object[]{groupId,folderId,name,version};
  Long count=(Long)FinderCacheUtil.getResult(FINDER_PATH_COUNT_BY_G_F_N_V,finderArgs,this);
  if (count == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_COUNT_DLFILEVERSION_WHERE);
      query.append(_FINDER_COLUMN_G_F_N_V_GROUPID_2);
      query.append(_FINDER_COLUMN_G_F_N_V_FOLDERID_2);
      if (name == null) {
        query.append(_FINDER_COLUMN_G_F_N_V_NAME_1);
      }
 else {
        if (name.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_G_F_N_V_NAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_G_F_N_V_NAME_2);
        }
      }
      if (version == null) {
        query.append(_FINDER_COLUMN_G_F_N_V_VERSION_1);
      }
 else {
        if (version.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_G_F_N_V_VERSION_3);
        }
 else {
          query.append(_FINDER_COLUMN_G_F_N_V_VERSION_2);
        }
      }
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(folderId);
      if (name != null) {
        qPos.add(name);
      }
      if (version != null) {
        qPos.add(version);
      }
      count=(Long)q.uniqueResult();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (count == null) {
        count=Long.valueOf(0);
      }
      FinderCacheUtil.putResult(FINDER_PATH_COUNT_BY_G_F_N_V,finderArgs,count);
      closeSession(session);
    }
  }
  return count.intValue();
}

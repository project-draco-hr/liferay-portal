{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(folderId),name};
  List<DLFileVersion> list=(List<DLFileVersion>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_G_F_N,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT dlFileVersion FROM DLFileVersion dlFileVersion WHERE ");
      query.append("dlFileVersion.groupId = ?");
      query.append(" AND ");
      query.append("dlFileVersion.folderId = ?");
      query.append(" AND ");
      if (name == null) {
        query.append("dlFileVersion.name IS NULL");
      }
 else {
        if (name.equals(StringPool.BLANK)) {
          query.append("(dlFileVersion.name IS NULL OR ");
        }
        query.append("dlFileVersion.name = ?");
        if (name.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" ");
      query.append("ORDER BY ");
      query.append("dlFileVersion.folderId DESC, ");
      query.append("dlFileVersion.name DESC, ");
      query.append("dlFileVersion.version DESC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(folderId);
      if (name != null) {
        qPos.add(name);
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<DLFileVersion>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_G_F_N,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

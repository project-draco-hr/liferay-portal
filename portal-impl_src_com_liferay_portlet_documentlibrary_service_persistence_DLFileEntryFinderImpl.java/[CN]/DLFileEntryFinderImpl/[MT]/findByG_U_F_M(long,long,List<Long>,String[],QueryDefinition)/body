{
  Session session=null;
  String table=DLFileVersionImpl.TABLE_NAME;
  try {
    session=openSession();
    String sql=null;
    if (userId <= 0) {
      if (queryDefinition.getStatus() == WorkflowConstants.STATUS_ANY) {
        table=DLFileEntryImpl.TABLE_NAME;
        sql=CustomSQLUtil.get(FIND_BY_G_F);
      }
 else {
        sql=CustomSQLUtil.get(FIND_BY_G_F_S);
        sql=replaceExcludeStatus(sql,queryDefinition);
      }
    }
 else {
      if (queryDefinition.getStatus() == WorkflowConstants.STATUS_ANY) {
        table=DLFileEntryImpl.TABLE_NAME;
        sql=CustomSQLUtil.get(FIND_BY_G_U_F);
      }
 else {
        sql=CustomSQLUtil.get(FIND_BY_G_U_F_S);
        sql=replaceExcludeStatus(sql,queryDefinition);
      }
    }
    StringBundler sb=new StringBundler();
    if (folderIds.size() > 0) {
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(getFolderIds(folderIds,table));
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    if ((mimeTypes != null) && (mimeTypes.length > 0)) {
      sb.append(WHERE_AND);
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(getMimeTypes(mimeTypes,table));
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    sql=StringUtil.replace(sql,"[$FOLDER_ID$]",sb.toString());
    sql=CustomSQLUtil.replaceOrderBy(sql,queryDefinition.getOrderByComparator());
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("DLFileEntry",DLFileEntryImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    if (userId > 0) {
      qPos.add(userId);
    }
    if (queryDefinition.getStatus() != WorkflowConstants.STATUS_ANY) {
      qPos.add(queryDefinition.getStatus());
    }
    for (    Long folderId : folderIds) {
      qPos.add(folderId);
    }
    return (List<DLFileEntry>)QueryUtil.list(q,getDialect(),queryDefinition.getStart(),queryDefinition.getEnd());
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

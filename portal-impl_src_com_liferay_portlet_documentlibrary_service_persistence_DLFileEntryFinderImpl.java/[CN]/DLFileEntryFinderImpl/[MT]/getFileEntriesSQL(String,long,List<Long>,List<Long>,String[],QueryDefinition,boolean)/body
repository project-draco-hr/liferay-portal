{
  String tableName=DLFileVersionImpl.TABLE_NAME;
  String sql=CustomSQLUtil.get(id,queryDefinition,tableName);
  if (queryDefinition.getStatus() == WorkflowConstants.STATUS_ANY) {
    sql=StringUtil.replace(sql,"[$JOIN$]",StringPool.BLANK);
    tableName=DLFileEntryImpl.TABLE_NAME;
  }
 else {
    sql=StringUtil.replace(sql,"[$JOIN$]",CustomSQLUtil.get(DLFolderFinderImpl.JOIN_FE_BY_DL_FILE_VERSION));
  }
  if (inlineSQLHelper && InlineSQLHelperUtil.isEnabled()) {
    sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DLFileEntry.class.getName(),"DLFileEntry.fileEntryId",groupId);
  }
  StringBundler sb=new StringBundler(7);
  if (((folderIds != null) && !folderIds.isEmpty()) || ((repositoryIds != null) && !repositoryIds.isEmpty()) || ArrayUtil.isNotEmpty(mimeTypes)) {
    if ((folderIds != null) && !folderIds.isEmpty()) {
      sb.append(WHERE_AND);
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(getFolderIds(folderIds,tableName));
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    if ((repositoryIds != null) && !repositoryIds.isEmpty()) {
      sb.append(WHERE_AND);
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(getRepositoryIds(repositoryIds,tableName));
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    if (ArrayUtil.isNotEmpty(mimeTypes)) {
      sb.append(WHERE_AND);
      sb.append(StringPool.OPEN_PARENTHESIS);
      sb.append(getMimeTypes(mimeTypes,tableName));
      sb.append(StringPool.CLOSE_PARENTHESIS);
    }
    return StringUtil.replace(sql,"[$FOLDER_ID$]",sb.toString());
  }
 else {
    return StringUtil.replace(sql,"[$FOLDER_ID$]",StringPool.BLANK);
  }
}

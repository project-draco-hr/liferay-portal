{
  String cmd=actionRequest.getParameter(Constants.CMD);
  if (cmd.equals("forgot-password-email")) {
    if (PropsValues.USERS_REMINDER_QUERIES_ENABLED) {
      try {
        if (PropsValues.CAPTCHA_CHECK_PORTAL_SEND_PASSWORD) {
          CaptchaUtil.check(actionRequest);
        }
        String emailAddress=ParamUtil.getString(actionRequest,"emailAddress");
        User user=UserLocalServiceUtil.getUserByEmailAddress(PortalUtil.getCompanyId(actionRequest),emailAddress);
        if (Validator.isNull(user.getReminderQueryQuestion())) {
          throw new EmptyUserReminderQueryException();
        }
      }
 catch (      Exception e) {
        if (e instanceof CaptchaTextException || e instanceof EmptyUserReminderQueryException || e instanceof NoSuchUserException|| e instanceof SendPasswordException|| e instanceof UserEmailAddressException) {
          SessionErrors.add(actionRequest,e.getClass().getName());
          setForward(actionRequest,"portlet.login.view");
          return;
        }
 else {
          PortalUtil.sendError(e,actionRequest,actionResponse);
        }
      }
      setForward(actionRequest,"portlet.login.reminder_query");
    }
 else {
      try {
        sendPassword(actionRequest);
        actionResponse.setRenderParameter(Constants.CMD,"already-registered");
      }
 catch (      Exception e) {
        if (e instanceof CaptchaTextException || e instanceof NoSuchUserException || e instanceof SendPasswordException|| e instanceof UserEmailAddressException) {
          SessionErrors.add(actionRequest,e.getClass().getName());
        }
 else {
          PortalUtil.sendError(e,actionRequest,actionResponse);
        }
      }
    }
  }
 else   if (cmd.equals("forgot-password-reminder-query")) {
    try {
      sendPassword(actionRequest);
      setForward(actionRequest,"portlet.login.view");
    }
 catch (    Exception e) {
      if (e instanceof CaptchaTextException || e instanceof NoSuchUserException || e instanceof UserReminderQueryException|| e instanceof SendPasswordException|| e instanceof UserEmailAddressException) {
        SessionErrors.add(actionRequest,e.getClass().getName());
        setForward(actionRequest,"portlet.login.view");
      }
 else {
        PortalUtil.sendError(e,actionRequest,actionResponse);
      }
    }
  }
 else {
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    if (actionRequest.getRemoteUser() != null) {
      actionResponse.sendRedirect(themeDisplay.getPathMain());
    }
 else     if (Validator.isNotNull(cmd)) {
      try {
        login(themeDisplay,actionRequest,actionResponse);
      }
 catch (      Exception e) {
        if (e instanceof AuthException) {
          Throwable cause=e.getCause();
          if (cause instanceof PasswordExpiredException || cause instanceof UserLockoutException) {
            SessionErrors.add(actionRequest,cause.getClass().getName());
          }
 else {
            SessionErrors.add(actionRequest,e.getClass().getName());
          }
        }
 else         if (e instanceof CookieNotSupportedException || e instanceof NoSuchUserException || e instanceof PasswordExpiredException|| e instanceof UserEmailAddressException|| e instanceof UserIdException|| e instanceof UserLockoutException|| e instanceof UserPasswordException|| e instanceof UserScreenNameException) {
          SessionErrors.add(actionRequest,e.getClass().getName());
        }
 else {
          PortalUtil.sendError(e,actionRequest,actionResponse);
        }
      }
    }
  }
}

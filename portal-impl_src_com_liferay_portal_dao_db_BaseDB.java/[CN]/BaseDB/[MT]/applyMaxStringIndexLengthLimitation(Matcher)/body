{
  DBType dbType=getDBType();
  int stringIndexMaxLength=GetterUtil.getInteger(PropsUtil.get(PropsKeys.DATABASE_STRING_INDEX_MAX_LENGTH,new Filter(dbType.getName())),-1);
  String replacement="\\(" + stringIndexMaxLength + "\\)";
  if (stringIndexMaxLength < 0) {
    if (dbType.equals(DBType.SYBASE)) {
      replacement=StringPool.BLANK;
    }
 else {
      return matcher.replaceAll(StringPool.BLANK);
    }
  }
  boolean remove=false;
  StringBuffer sb=new StringBuffer();
  while (matcher.find()) {
    int length=Integer.valueOf(matcher.group(1));
    if (dbType.equals(DBType.SYBASE) && (length > 1250)) {
      matcher.appendReplacement(sb,"%%REMOVE%%");
      remove=true;
    }
 else     if (length > stringIndexMaxLength) {
      matcher.appendReplacement(sb,replacement);
    }
 else {
      matcher.appendReplacement(sb,StringPool.BLANK);
    }
  }
  matcher.appendTail(sb);
  String string=sb.toString();
  if (dbType.equals(DBType.SYBASE) && remove) {
    String[] strings=StringUtil.split(string,StringPool.NEW_LINE);
    for (int i=0; i < strings.length; i++) {
      if (strings[i].contains("%%REMOVE%%")) {
        strings[i]=StringPool.BLANK;
      }
    }
    return StringUtil.merge(strings,StringPool.NEW_LINE);
  }
  return string;
}

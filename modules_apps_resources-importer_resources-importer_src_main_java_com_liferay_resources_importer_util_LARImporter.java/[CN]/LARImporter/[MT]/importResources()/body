{
  if ((_privateLARInputStream == null) && (_publicLARInputStream == null)) {
    return;
  }
  User user=UserLocalServiceUtil.getUser(userId);
  boolean privateLayout=false;
  if ((_privateLARInputStream != null) || targetClassName.equals(LayoutSetPrototype.class.getName())) {
    privateLayout=true;
  }
  long[] layoutIds=ExportImportHelperUtil.getAllLayoutIds(groupId,privateLayout);
  Map<String,Serializable> settingsMap=ExportImportConfigurationSettingsMapFactory.buildImportLayoutSettingsMap(userId,groupId,privateLayout,layoutIds,getParameterMap(),user.getLocale(),user.getTimeZone());
  ExportImportConfiguration exportImportConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(userId,groupId,StringPool.BLANK,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_IMPORT_LAYOUT,settingsMap,new ServiceContext());
  InputStream inputStream=_publicLARInputStream;
  if (_privateLARInputStream != null) {
    inputStream=_privateLARInputStream;
  }
  ExportImportLocalServiceUtil.importLayouts(exportImportConfiguration,inputStream);
}

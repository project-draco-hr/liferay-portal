{
  SocialActivityAchievement newSocialActivityAchievement=addSocialActivityAchievement();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialActivityAchievement.class,SocialActivityAchievement.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("activityAchievementId"));
  Object newActivityAchievementId=newSocialActivityAchievement.getActivityAchievementId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("activityAchievementId",new Object[]{newActivityAchievementId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingActivityAchievementId=result.get(0);
  assertEquals(existingActivityAchievementId,newActivityAchievementId);
}

{
  Session session=null;
  try {
    session=_jcrFactoryUtil.createSession();
    Node rootNode=getRootNode(session,companyId);
    Node repositoryNode=getFolderNode(rootNode,repositoryId);
    if (fileName.contains(StringPool.SLASH)) {
      String path=fileName.substring(0,fileName.lastIndexOf(StringPool.SLASH));
      fileName=fileName.substring(path.length() + 1);
      repositoryNode=getFolderNode(repositoryNode,path);
    }
    Node newRepositoryNode=getFolderNode(rootNode,newRepositoryId);
    if (newRepositoryNode.hasNode(fileName)) {
      throw new DuplicateFileException(companyId,newRepositoryId,fileName);
    }
    Node fileNode=repositoryNode.getNode(fileName);
    Node contentNode=fileNode.getNode(JCRConstants.JCR_CONTENT);
    String contentNodePath=contentNode.getPath();
    Node newFileNode=newRepositoryNode.addNode(fileName,JCRConstants.NT_FILE);
    String newContentNodePath=newFileNode.getPath().concat(StringPool.SLASH).concat(JCRConstants.JCR_CONTENT);
    session.move(contentNodePath,newContentNodePath);
    fileNode.remove();
    session.save();
  }
 catch (  PathNotFoundException pnfe) {
    throw new NoSuchFileException(companyId,repositoryId,fileName,pnfe);
  }
catch (  RepositoryException re) {
    throw new SystemException(re);
  }
 finally {
    _jcrFactoryUtil.closeSession(session);
  }
}

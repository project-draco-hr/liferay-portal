{
  if (!MapUtil.getBoolean(_parameterMap,PortletDataHandlerKeys.PERMISSIONS)) {
    return;
  }
  List<String> actionIds=ResourceActionsUtil.getModelResourceActions(resourceName);
  Map<Long,Set<String>> roleIdsToActionIds=null;
  try {
    roleIdsToActionIds=getActionIds(resourceName,resourcePK,actionIds);
  }
 catch (  PortalException pe) {
    return;
  }
  List<KeyValuePair> permissions=new ArrayList<>();
  for (  Map.Entry<Long,Set<String>> entry : roleIdsToActionIds.entrySet()) {
    long roleId=entry.getKey();
    Set<String> availableActionIds=entry.getValue();
    Role role=RoleLocalServiceUtil.fetchRole(roleId);
    if (role == null) {
      continue;
    }
    String roleName=role.getName();
    if (role.isTeam()) {
      try {
        roleName=PermissionExporter.ROLE_TEAM_PREFIX + role.getDescriptiveName();
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
    KeyValuePair permission=new KeyValuePair(roleName,StringUtil.merge(availableActionIds));
    permissions.add(permission);
  }
  _permissionsMap.put(getPrimaryKeyString(resourceName,resourcePK),permissions);
}

{
  String method=request.getMethod();
  String userAgent=GetterUtil.getString(request.getHeader(HttpHeaders.USER_AGENT));
  if ((userAgent.startsWith("Microsoft Data Access Internet Publishing") || userAgent.startsWith("Microsoft Office Protocol Discovery")) && method.equals(HttpMethods.OPTIONS)) {
    setOptionsHeaders(response);
    return;
  }
  if (!isSharepointRequest(request.getRequestURI())) {
    processFilter(SharepointFilter.class,request,response,filterChain);
    return;
  }
  if (method.equals(HttpMethods.GET) || method.equals(HttpMethods.HEAD)) {
    setGetHeaders(response);
  }
 else   if (method.equals(HttpMethods.POST)) {
    setPostHeaders(response);
  }
  HttpSession session=request.getSession();
  User user=(User)session.getAttribute(WebKeys.USER);
  try {
    if (user == null) {
      user=login(request,response);
      if (user == null) {
        throw new PrincipalException("User is null");
      }
      session.setAttribute(WebKeys.USER,user);
    }
    PrincipalThreadLocal.setName(user.getUserId());
    PermissionChecker permissionChecker=PermissionCheckerFactoryUtil.create(user,false);
    PermissionThreadLocal.setPermissionChecker(permissionChecker);
    processFilter(SharepointFilter.class,request,response,filterChain);
  }
 catch (  Exception e) {
    _log.error(e,e);
    response.setHeader("WWW-Authenticate","BASIC realm=\"Liferay\"");
    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
    response.flushBuffer();
  }
 finally {
    PrincipalThreadLocal.setName(null);
    PermissionThreadLocal.setPermissionChecker(null);
  }
}

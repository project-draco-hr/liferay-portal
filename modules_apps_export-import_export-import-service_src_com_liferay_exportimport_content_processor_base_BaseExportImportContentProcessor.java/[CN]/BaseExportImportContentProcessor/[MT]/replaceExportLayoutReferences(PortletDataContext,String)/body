{
  Group group=GroupLocalServiceUtil.getGroup(portletDataContext.getScopeGroupId());
  StringBuilder sb=new StringBuilder(content);
  String[] patterns={"href=","[["};
  int beginPos=-1;
  int endPos=content.length();
  int offset=0;
  while (true) {
    if (beginPos > -1) {
      endPos=beginPos - 1;
    }
    beginPos=StringUtil.lastIndexOfAny(content,patterns,endPos);
    if (beginPos == -1) {
      break;
    }
    if (content.startsWith("href=",beginPos)) {
      offset=5;
      char c=content.charAt(beginPos + offset);
      if ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {
        offset++;
      }
    }
 else     if (content.charAt(beginPos) == CharPool.OPEN_BRACKET) {
      offset=2;
    }
    endPos=StringUtil.indexOfAny(content,LAYOUT_REFERENCE_STOP_CHARS,beginPos + offset,endPos);
    if (endPos == -1) {
      continue;
    }
    String url=content.substring(beginPos + offset,endPos);
    StringBundler urlSB=new StringBundler(5);
    try {
      url=replaceExportHostname(portletDataContext,url,urlSB);
      if (!url.startsWith(StringPool.SLASH)) {
        continue;
      }
      String pathContext=PortalUtil.getPathContext();
      if (pathContext.length() > 1) {
        if (!url.startsWith(pathContext)) {
          continue;
        }
        urlSB.append(DATA_HANDLER_PATH_CONTEXT);
        url=url.substring(pathContext.length());
      }
      if (!url.startsWith(StringPool.SLASH)) {
        continue;
      }
      int pos=url.indexOf(StringPool.SLASH,1);
      String localePath=StringPool.BLANK;
      Locale locale=null;
      if (pos != -1) {
        localePath=url.substring(0,pos);
        locale=LocaleUtil.fromLanguageId(localePath.substring(1),true,false);
      }
      if (locale != null) {
        String urlWithoutLocale=url.substring(localePath.length());
        if (urlWithoutLocale.startsWith(PRIVATE_GROUP_SERVLET_MAPPING) || urlWithoutLocale.startsWith(PRIVATE_USER_SERVLET_MAPPING) || urlWithoutLocale.startsWith(PUBLIC_GROUP_SERVLET_MAPPING)) {
          urlSB.append(localePath);
          url=urlWithoutLocale;
        }
      }
      boolean privateLayout=false;
      if (url.startsWith(PRIVATE_GROUP_SERVLET_MAPPING)) {
        urlSB.append(DATA_HANDLER_PRIVATE_GROUP_SERVLET_MAPPING);
        url=url.substring(PRIVATE_GROUP_SERVLET_MAPPING.length() - 1);
        privateLayout=true;
      }
 else       if (url.startsWith(PRIVATE_USER_SERVLET_MAPPING)) {
        urlSB.append(DATA_HANDLER_PRIVATE_USER_SERVLET_MAPPING);
        url=url.substring(PRIVATE_USER_SERVLET_MAPPING.length() - 1);
        privateLayout=true;
      }
 else       if (url.startsWith(PUBLIC_GROUP_SERVLET_MAPPING)) {
        urlSB.append(DATA_HANDLER_PUBLIC_SERVLET_MAPPING);
        url=url.substring(PUBLIC_GROUP_SERVLET_MAPPING.length() - 1);
      }
 else {
        String urlSBString=urlSB.toString();
        LayoutSet layoutSet=null;
        if (urlSBString.contains(DATA_HANDLER_PUBLIC_LAYOUT_SET_SECURE_URL) || urlSBString.contains(DATA_HANDLER_PUBLIC_LAYOUT_SET_URL)) {
          layoutSet=group.getPublicLayoutSet();
        }
 else         if (urlSBString.contains(DATA_HANDLER_PRIVATE_LAYOUT_SET_SECURE_URL) || urlSBString.contains(DATA_HANDLER_PRIVATE_LAYOUT_SET_URL)) {
          layoutSet=group.getPrivateLayoutSet();
        }
        if (layoutSet == null) {
          continue;
        }
        privateLayout=layoutSet.isPrivateLayout();
        LayoutFriendlyURL layoutFriendlyUrl=LayoutFriendlyURLLocalServiceUtil.fetchFirstLayoutFriendlyURL(group.getGroupId(),privateLayout,url);
        if (layoutFriendlyUrl == null) {
          continue;
        }
        if (privateLayout) {
          if (group.isUser()) {
            urlSB.append(DATA_HANDLER_PRIVATE_USER_SERVLET_MAPPING);
          }
 else {
            urlSB.append(DATA_HANDLER_PRIVATE_GROUP_SERVLET_MAPPING);
          }
        }
 else {
          urlSB.append(DATA_HANDLER_PUBLIC_SERVLET_MAPPING);
        }
        urlSB.append(DATA_HANDLER_GROUP_FRIENDLY_URL);
        continue;
      }
      String groupFriendlyURL=group.getFriendlyURL();
      if (url.equals(groupFriendlyURL) || url.startsWith(groupFriendlyURL + StringPool.SLASH)) {
        urlSB.append(DATA_HANDLER_GROUP_FRIENDLY_URL);
        url=url.substring(groupFriendlyURL.length());
      }
      Element entityElement=portletDataContext.getExportDataElement(entityStagedModel);
      Layout layout=LayoutLocalServiceUtil.fetchLayoutByFriendlyURL(group.getGroupId(),privateLayout,url);
      portletDataContext.addReferenceElement(entityStagedModel,entityElement,layout,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  finally {
      if (urlSB.length() > 0) {
        urlSB.append(url);
        url=urlSB.toString();
      }
      sb.replace(beginPos + offset,endPos,url);
    }
  }
  return sb.toString();
}

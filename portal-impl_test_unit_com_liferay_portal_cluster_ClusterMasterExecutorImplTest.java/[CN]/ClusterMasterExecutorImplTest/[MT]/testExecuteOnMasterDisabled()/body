{
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(_CLASS_NAME,Level.WARNING);
  try {
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    ClusterMasterExecutorImpl clusterMasterExecutorImpl=new ClusterMasterExecutorImpl();
    ClusterExecutor mockClusterExecutor=new MockClusterExecutor(true);
    clusterMasterExecutorImpl.setClusterExecutor(mockClusterExecutor);
    Assert.assertFalse(clusterMasterExecutorImpl.isEnabled());
    String timeString=String.valueOf(_TEST_TIME);
    MethodHandler methodHandler=new MethodHandler(testMethodMethodKey,timeString);
    NoticeableFuture<String> noticeableFuture=clusterMasterExecutorImpl.executeOnMaster(methodHandler);
    Assert.assertSame(timeString,noticeableFuture.get());
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Executing on the local node because the cluster master " + "executor is disabled",logRecord.getMessage());
    logRecords=captureHandler.resetLogLevel(Level.OFF);
    noticeableFuture=clusterMasterExecutorImpl.executeOnMaster(methodHandler);
    Assert.assertSame(timeString,noticeableFuture.get());
    Assert.assertTrue(logRecords.isEmpty());
  }
  finally {
    captureHandler.close();
  }
}

{
  updateNamespaces();
  if (wsdlTypesElem == null)   return;
  Element schemaElem=null;
  String tns=null;
  NodeList nl=wsdlTypesElem.getChildNodes();
  for (int i=0; i < nl.getLength(); i++) {
    NamedNodeMap attrs=nl.item(i).getAttributes();
    if (attrs == null)     continue;
    for (int n=0; n < attrs.getLength(); n++) {
      Attr a=(Attr)attrs.item(n);
      if (a.getName().equals("targetNamespace")) {
        tns=a.getValue();
        schemaElem=(Element)nl.item(i);
        break;
      }
    }
    if (tns != null && !"".equals(tns.trim())) {
      Iterator it=schemaTypes.keySet().iterator();
      String otherTns;
      Element importElem;
      while (it.hasNext()) {
        if (!tns.equals(otherTns=(String)it.next())) {
          importElem=docHolder.createElement("import");
          importElem.setAttribute("namespace",otherTns);
          schemaElem.insertBefore(importElem,schemaElem.getFirstChild());
        }
      }
    }
    schemaElem=null;
    tns=null;
  }
  org.w3c.dom.Node node=doc.importNode(wsdlTypesElem,true);
  doc.getDocumentElement().insertBefore(node,doc.getDocumentElement().getFirstChild());
}

{
  if (encodedURLString == null) {
    return null;
  }
  int encodedLength=encodedURLString.length();
  if (encodedLength == 0) {
    return StringPool.BLANK;
  }
  StringBuilder sb=new StringBuilder(encodedLength);
  CharsetDecoder charsetDecoder=null;
  boolean changed=false;
  for (int i=0; i < encodedLength; i++) {
    char c=encodedURLString.charAt(i);
switch (c) {
case '+':
      sb.append(CharPool.SPACE);
    changed=true;
  break;
case '%':
ByteBuffer byteBuffer=getEncodedByteBuffer(encodedURLString,i);
if (charsetDecoder == null) {
charsetDecoder=CharsetDecoderUtil.getCharsetDecoder(charsetName);
}
CharBuffer charBuffer=null;
try {
charBuffer=charsetDecoder.decode(byteBuffer);
}
 catch (CharacterCodingException cce) {
_log.error(cce,cce);
return StringPool.BLANK;
}
sb.append(charBuffer);
i+=byteBuffer.capacity() * 3;
break;
default :
sb.append(c);
break;
}
}
if (sb.length() == encodedLength && !changed) {
return encodedURLString;
}
 else {
return sb.toString();
}
}

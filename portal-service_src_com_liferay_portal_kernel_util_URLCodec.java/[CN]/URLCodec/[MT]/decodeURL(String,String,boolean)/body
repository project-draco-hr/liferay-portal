{
  if (encodedURLString == null) {
    return null;
  }
  if (encodedURLString.length() == 0) {
    return StringPool.BLANK;
  }
  StringBuilder sb=null;
  CharsetDecoder charsetDecoder=null;
  for (int i=0; i < encodedURLString.length(); i++) {
    char c=encodedURLString.charAt(i);
switch (c) {
case CharPool.PERCENT:
      ByteBuffer byteBuffer=_getEncodedByteBuffer(encodedURLString,i);
    if (charsetDecoder == null) {
      charsetDecoder=CharsetDecoderUtil.getCharsetDecoder(charsetName);
    }
  CharBuffer charBuffer=null;
try {
  charBuffer=charsetDecoder.decode(byteBuffer);
}
 catch (CharacterCodingException cce) {
  _log.error(cce,cce);
  return StringPool.BLANK;
}
if (sb == null) {
sb=new StringBuilder(encodedURLString.length());
if (i > 0) {
  sb.append(sb,0,i);
}
}
sb.append(charBuffer);
i+=byteBuffer.capacity() * 3 - 1;
break;
case CharPool.PLUS:
if (sb == null) {
sb=new StringBuilder(encodedURLString.length());
if (i > 0) {
sb.append(sb,0,i);
}
}
sb.append(CharPool.SPACE);
break;
default :
if (sb != null) {
sb.append(c);
}
}
}
if (sb == null) {
return encodedURLString;
}
 else {
return sb.toString();
}
}

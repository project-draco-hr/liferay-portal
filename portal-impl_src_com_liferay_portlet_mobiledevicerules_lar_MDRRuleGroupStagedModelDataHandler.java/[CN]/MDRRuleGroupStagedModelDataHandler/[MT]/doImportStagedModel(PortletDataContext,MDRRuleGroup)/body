{
  long userId=portletDataContext.getUserId(ruleGroup.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(ruleGroup,MDRPortletDataHandler.NAMESPACE);
  serviceContext.setUserId(userId);
  MDRRuleGroup importedRuleGroup=null;
  if (portletDataContext.isDataStrategyMirror()) {
    MDRRuleGroup existingRuleGroup=MDRRuleGroupLocalServiceUtil.fetchMDRRuleGroupByUuidAndGroupId(ruleGroup.getUuid(),portletDataContext.getScopeGroupId());
    if (existingRuleGroup == null) {
      serviceContext.setUuid(ruleGroup.getUuid());
      importedRuleGroup=MDRRuleGroupLocalServiceUtil.addRuleGroup(portletDataContext.getScopeGroupId(),ruleGroup.getNameMap(),ruleGroup.getDescriptionMap(),serviceContext);
    }
 else {
      importedRuleGroup=MDRRuleGroupLocalServiceUtil.updateRuleGroup(existingRuleGroup.getRuleGroupId(),ruleGroup.getNameMap(),ruleGroup.getDescriptionMap(),serviceContext);
    }
  }
 else {
    importedRuleGroup=MDRRuleGroupLocalServiceUtil.addRuleGroup(portletDataContext.getScopeGroupId(),ruleGroup.getNameMap(),ruleGroup.getDescriptionMap(),serviceContext);
  }
  portletDataContext.importClassedModel(ruleGroup,importedRuleGroup);
}

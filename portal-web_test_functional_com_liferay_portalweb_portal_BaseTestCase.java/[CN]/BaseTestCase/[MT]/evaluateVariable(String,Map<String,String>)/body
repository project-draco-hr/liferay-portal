{
  String varValue=var;
  String regex="\\$\\{([^}]*?)\\}";
  Pattern pattern=Pattern.compile(regex);
  Matcher matcher=pattern.matcher(varValue);
  while (matcher.find()) {
    String statement=matcher.group(1);
    String statementRegex="(.*)\\?(.*)\\(([^\\(\\)]*?)\\)";
    Pattern statementPattern=Pattern.compile(statementRegex);
    Matcher statementMatcher=statementPattern.matcher(statement);
    if (statementMatcher.find()) {
      String operand=statementMatcher.group(1);
      String method=statementMatcher.group(2);
      if (context.containsKey(operand)) {
        String operandValue=context.get(operand);
        String methodArguments="";
        if (!method.endsWith("()")) {
          methodArguments=statementMatcher.group(3);
        }
        String result="";
        String replaceRegex="\\$\\{([^}]*?)\\}";
        if (method.startsWith("replace")) {
          String[] args=methodArguments.split("'");
          result=operandValue.replace(args[1],args[3]);
          varValue=varValue.replaceFirst(replaceRegex,result);
        }
 else         if (method.startsWith("lowercase")) {
          result=operandValue.toLowerCase();
          varValue=varValue.replaceFirst(replaceRegex,result);
        }
      }
    }
 else {
      String varName=statement;
      if (context.containsKey(varName)) {
        String value=context.get(varName);
        String replaceRegex="\\$\\{([^}]*?)\\}";
        varValue=varValue.replaceFirst(replaceRegex,value);
      }
    }
  }
  return varValue;
}

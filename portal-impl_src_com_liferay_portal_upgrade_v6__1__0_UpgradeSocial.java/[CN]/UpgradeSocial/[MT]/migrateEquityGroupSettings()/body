{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getUpgradeOptimizedConnection();
    ps=con.prepareStatement("select groupId, companyId, classNameId, enabled from " + "SocialEquityGroupSetting where type_ = 1");
    rs=ps.executeQuery();
    while (rs.next()) {
      long groupId=rs.getLong("groupId");
      long companyId=rs.getLong("companyId");
      long classNameId=rs.getLong("classNameId");
      boolean enabled=rs.getBoolean("enabled");
      addActivitySetting(increment(),groupId,companyId,classNameId,0,"enabled",String.valueOf(enabled));
    }
    DataAccess.cleanUp(null,ps,rs);
    StringBundler sb=new StringBundler(12);
    sb.append("select groupId from SocialActivitySetting where ");
    sb.append("activityType = 0 and name = 'enabled' and ");
    sb.append("value = 'true' and classNameId in (");
    long mbMessageClassNameId=PortalUtil.getClassNameId(MBMessage.class);
    sb.append(mbMessageClassNameId);
    sb.append(", ");
    long mbThreadClassNameId=PortalUtil.getClassNameId(MBThread.class);
    sb.append(mbThreadClassNameId);
    sb.append(")");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      long groupId=rs.getLong("groupId");
      sb=new StringBundler(6);
      sb.append("update SocialActivitySetting set value = 'true' ");
      sb.append("where groupId = ");
      sb.append(groupId);
      sb.append(" and activityType = 0 and value = 'enabled' and ");
      sb.append("classNameId = ");
      sb.append(mbThreadClassNameId);
      runSQL(sb.toString());
    }
    runSQL("delete from SocialActivitySetting where classNameId = " + mbThreadClassNameId);
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

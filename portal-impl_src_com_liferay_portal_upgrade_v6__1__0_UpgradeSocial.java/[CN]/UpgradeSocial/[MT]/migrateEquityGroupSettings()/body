{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    try (PreparedStatement ps=connection.prepareStatement("select groupId, companyId, classNameId, enabled from " + "SocialEquityGroupSetting where type_ = 1");ResultSet rs=ps.executeQuery()){
      while (rs.next()) {
        long groupId=rs.getLong("groupId");
        long companyId=rs.getLong("companyId");
        long classNameId=rs.getLong("classNameId");
        boolean enabled=rs.getBoolean("enabled");
        addActivitySetting(increment(),groupId,companyId,classNameId,0,"enabled",String.valueOf(enabled));
      }
    }
     StringBundler sb=new StringBundler(7);
    sb.append("select groupId from SocialActivitySetting where ");
    sb.append("activityType = 0 and name = 'enabled' and ");
    sb.append("value = 'true' and classNameId in (");
    long mbMessageClassNameId=PortalUtil.getClassNameId("com.liferay.portlet.messageboards.model.MBMessage");
    sb.append(mbMessageClassNameId);
    sb.append(", ");
    long mbThreadClassNameId=PortalUtil.getClassNameId("com.liferay.portlet.messageboards.model.MBThread");
    sb.append(mbThreadClassNameId);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    try (PreparedStatement ps=connection.prepareStatement(sb.toString());ResultSet rs=ps.executeQuery()){
      while (rs.next()) {
        long groupId=rs.getLong("groupId");
        sb=new StringBundler(6);
        sb.append("update SocialActivitySetting set value = 'true' ");
        sb.append("where groupId = ");
        sb.append(groupId);
        sb.append(" and activityType = 0 and value = 'enabled' and ");
        sb.append("classNameId = ");
        sb.append(mbThreadClassNameId);
        runSQL(sb.toString());
      }
      runSQL("delete from SocialActivitySetting where classNameId = " + mbThreadClassNameId);
    }
   }
 }

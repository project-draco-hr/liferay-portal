{
  Connection con=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    con=DataAccess.getConnection();
    StringBundler sb=new StringBundler(4);
    sb.append("select AssetEntry.classNameId, AssetEntry.classPK, ");
    sb.append("SocialEquityLog.* from SocialEquityLog, AssetEntry ");
    sb.append("where SocialEquityLog.assetEntryId = ");
    sb.append("AssetEntry.entryId order by actionDate");
    ps=con.prepareStatement(sb.toString());
    rs=ps.executeQuery();
    while (rs.next()) {
      migrateEquityLog(rs);
    }
    sb=new StringBundler(16);
    sb.append("update SocialActivityCounter set endPeriod = ");
    sb.append(SocialActivityCounterConstants.END_PERIOD_UNDEFINED);
    sb.append(" where ");
    sb.append("name in ('");
    sb.append(SocialActivityCounterConstants.NAME_CONTRIBUTION);
    sb.append("', '");
    sb.append(SocialActivityCounterConstants.NAME_PARTICIPATION);
    sb.append("', '");
    sb.append(SocialActivityCounterConstants.NAME_POPULARITY);
    sb.append("') ");
    sb.append("and startPeriod = (select max(startPeriod) from ");
    sb.append("SocialActivityCounter sac where sac.groupId = ");
    sb.append("SocialActivityCounter.groupId  and sac.classNameId = ");
    sb.append("SocialActivityCounter.classNameId and sac.classPK = ");
    sb.append("SocialActivityCounter.classPK and sac.name = ");
    sb.append("SocialActivityCounter.name)");
    runSQL(sb.toString());
  }
  finally {
    DataAccess.cleanUp(con,ps,rs);
  }
}

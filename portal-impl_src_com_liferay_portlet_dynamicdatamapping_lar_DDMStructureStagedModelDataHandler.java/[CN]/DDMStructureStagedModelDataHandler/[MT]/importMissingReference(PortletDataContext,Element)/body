{
  importMissingGroupReference(portletDataContext,referenceElement);
  String uuid=referenceElement.attributeValue("uuid");
  Map<Long,Long> groupIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(Group.class);
  long liveGroupId=GetterUtil.getLong(referenceElement.attributeValue("live-group-id"));
  liveGroupId=MapUtil.getLong(groupIds,liveGroupId,liveGroupId);
  long classNameId=PortalUtil.getClassNameId(referenceElement.attributeValue("referenced-class-name"));
  String structureKey=referenceElement.attributeValue("structure-key");
  boolean preloaded=GetterUtil.getBoolean(referenceElement.attributeValue("preloaded"));
  DDMStructure existingStructure=null;
  try {
    existingStructure=fetchExistingStructure(uuid,liveGroupId,classNameId,structureKey,preloaded);
  }
 catch (  SystemException se) {
    throw new PortletDataException(se);
  }
  Map<Long,Long> structureIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class);
  long structureId=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
  structureIds.put(structureId,existingStructure.getStructureId());
  Map<String,String> structureKeys=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class + ".ddmStructureKey");
  structureKeys.put(structureKey,existingStructure.getStructureKey());
}

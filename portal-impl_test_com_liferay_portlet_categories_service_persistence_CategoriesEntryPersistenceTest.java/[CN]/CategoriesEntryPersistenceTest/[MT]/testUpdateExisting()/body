{
  long pk=nextLong();
  CategoriesEntry newCategoriesEntry=_persistence.create(pk);
  newCategoriesEntry.setGroupId(nextLong());
  newCategoriesEntry.setCompanyId(nextLong());
  newCategoriesEntry.setUserId(nextLong());
  newCategoriesEntry.setUserName(randomString());
  newCategoriesEntry.setCreateDate(nextDate());
  newCategoriesEntry.setModifiedDate(nextDate());
  newCategoriesEntry.setParentEntryId(nextLong());
  newCategoriesEntry.setName(randomString());
  newCategoriesEntry.setVocabularyId(nextLong());
  _persistence.update(newCategoriesEntry,false);
  CategoriesEntry existingCategoriesEntry=_persistence.findByPrimaryKey(newCategoriesEntry.getPrimaryKey());
  assertEquals(existingCategoriesEntry.getEntryId(),newCategoriesEntry.getEntryId());
  assertEquals(existingCategoriesEntry.getGroupId(),newCategoriesEntry.getGroupId());
  assertEquals(existingCategoriesEntry.getCompanyId(),newCategoriesEntry.getCompanyId());
  assertEquals(existingCategoriesEntry.getUserId(),newCategoriesEntry.getUserId());
  assertEquals(existingCategoriesEntry.getUserName(),newCategoriesEntry.getUserName());
  assertEquals(Time.getShortTimestamp(existingCategoriesEntry.getCreateDate()),Time.getShortTimestamp(newCategoriesEntry.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingCategoriesEntry.getModifiedDate()),Time.getShortTimestamp(newCategoriesEntry.getModifiedDate()));
  assertEquals(existingCategoriesEntry.getParentEntryId(),newCategoriesEntry.getParentEntryId());
  assertEquals(existingCategoriesEntry.getName(),newCategoriesEntry.getName());
  assertEquals(existingCategoriesEntry.getVocabularyId(),newCategoriesEntry.getVocabularyId());
}

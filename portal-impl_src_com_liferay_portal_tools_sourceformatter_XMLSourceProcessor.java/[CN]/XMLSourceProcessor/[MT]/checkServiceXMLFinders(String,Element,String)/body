{
  List<String> columnNames=getColumnNames(fileName,entityName);
  List<Element> finderElements=entityElement.elements("finder");
  List<Element> previousFinderColumnElements=null;
  for (  Element finderElement : finderElements) {
    String finderName=finderElement.attributeValue("name");
    List<Element> finderColumnElements=finderElement.elements("finder-column");
    if (previousFinderColumnElements == null) {
      previousFinderColumnElements=finderColumnElements;
      continue;
    }
    int finderColumnCount=finderColumnElements.size();
    int previousFinderColumnCount=previousFinderColumnElements.size();
    if (previousFinderColumnCount > finderColumnCount) {
      processErrorMessage(fileName,"order by number of columms: " + fileName + " "+ entityName+ " "+ finderName);
      return;
    }
    if (previousFinderColumnCount < finderColumnCount) {
      previousFinderColumnElements=finderColumnElements;
      continue;
    }
    for (int i=0; i < finderColumnCount; i++) {
      Element finderColumnElement=finderColumnElements.get(i);
      Element previousFinderColumnElement=previousFinderColumnElements.get(i);
      String finderColumnName=finderColumnElement.attributeValue("name");
      String previousFinderColumnName=previousFinderColumnElement.attributeValue("name");
      int index=columnNames.indexOf(finderColumnName);
      int previousIndex=columnNames.indexOf(previousFinderColumnName);
      if (previousIndex > index) {
        processErrorMessage(fileName,"order by column order in table: " + fileName + " "+ entityName+ " "+ finderName);
        return;
      }
      if (previousIndex < index) {
        break;
      }
    }
    previousFinderColumnElements=finderColumnElements;
  }
}

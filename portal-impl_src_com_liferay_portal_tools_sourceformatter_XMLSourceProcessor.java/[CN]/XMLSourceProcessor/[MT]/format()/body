{
  String[] excludes=new String[]{"**\\.idea\\**","**\\bin\\**","**\\classes\\**"};
  String[] includes=new String[]{"**\\*.xml"};
  List<String> fileNames=getFileNames(excludes,includes);
  for (  String fileName : fileNames) {
    File file=new File(BASEDIR + fileName);
    fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
    String content=fileUtil.read(file);
    String newContent=content;
    if (!fileName.contains("/build")) {
      Properties leadingSpacesExclusions=getExclusionsProperties("source_formatter_xml_leading_spaces_exclusions." + "properties");
      String excluded=null;
      if (leadingSpacesExclusions != null) {
        excluded=leadingSpacesExclusions.getProperty(fileName);
      }
      if (excluded == null) {
        newContent=trimContent(newContent,false);
      }
    }
    if (fileName.contains("/build") && !fileName.contains("/tools/")) {
      newContent=formatAntXML(fileName,newContent);
    }
 else     if (fileName.endsWith("structures.xml")) {
      newContent=formatDDLStructuresXML(newContent);
    }
 else     if (fileName.endsWith("routes.xml")) {
      newContent=formatFriendlyURLRoutesXML(fileName,newContent);
    }
 else     if ((portalSource && fileName.endsWith("/portlet-custom.xml")) || (!portalSource && fileName.endsWith("/portlet.xml"))) {
      newContent=formatPortletXML(newContent);
    }
 else     if (portalSource && fileName.endsWith("/service.xml")) {
      formatServiceXML(fileName,newContent);
    }
 else     if (portalSource && fileName.endsWith("/struts-config.xml")) {
      formatStrutsConfigXML(fileName,content);
    }
 else     if (portalSource && fileName.endsWith("/tiles-defs.xml")) {
      formatTilesDefsXML(fileName,content);
    }
 else     if (portalSource && fileName.endsWith("WEB-INF/web.xml") || !portalSource && fileName.endsWith("/web.xml")) {
      newContent=formatWebXML(fileName,content);
    }
    newContent=formatXML(newContent);
    if (isAutoFix() && (newContent != null) && !content.equals(newContent)) {
      fileUtil.write(file,newContent);
      sourceFormatterHelper.printError(fileName,file);
    }
  }
}

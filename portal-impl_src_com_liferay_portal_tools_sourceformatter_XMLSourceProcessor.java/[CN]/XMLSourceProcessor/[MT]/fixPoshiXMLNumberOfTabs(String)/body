{
  int tabCounter=0;
  Pattern pattern=Pattern.compile("\\n*([ \\t]*)<[^>]*>");
  Matcher matcher=pattern.matcher(content);
  while (matcher.find()) {
    String statement=matcher.group();
    Pattern closingTagPattern=Pattern.compile("</[^>/]*>");
    Matcher closingTagMatcher=closingTagPattern.matcher(matcher.group());
    if (closingTagMatcher.find()) {
      if (!closingTagMatcher.group().contains("</p") && !closingTagMatcher.group().contains("</script")) {
        --tabCounter;
      }
    }
    if (!matcher.group().contains(" < ") && !matcher.group().contains("script")) {
      String newStatement=StringUtil.replace(statement,matcher.group(1),numberOfTabs(tabCounter));
      content=StringUtil.replaceFirst(content,statement,newStatement);
    }
    Pattern openingTagPattern=Pattern.compile("<[^/][^>]*[^/]>");
    Matcher openingTagMatcher=openingTagPattern.matcher(matcher.group());
    if (openingTagMatcher.find()) {
      if (!openingTagMatcher.group().contains("< ") && !openingTagMatcher.group().contains("-->") && !openingTagMatcher.group().contains("<![CDATA")&& !openingTagMatcher.group().contains("<script")&& !openingTagMatcher.group().contains("<]]")&& !openingTagMatcher.group().contains("userea")&& !openingTagMatcher.group().contains("Sites >")) {
        tabCounter++;
      }
    }
  }
  return content;
}

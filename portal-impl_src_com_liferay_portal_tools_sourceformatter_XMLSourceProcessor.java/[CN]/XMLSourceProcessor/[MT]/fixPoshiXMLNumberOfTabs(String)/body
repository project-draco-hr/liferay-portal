{
  int tabCounter=0;
  Pattern pattern=Pattern.compile("\\n*([ \\t]*<).*");
  Matcher matcher=pattern.matcher(content);
  boolean ignoredCdataBlock=false;
  boolean ignoredCommentBlock=false;
  while (matcher.find()) {
    String statement=matcher.group();
    Pattern quoteWithSlashPattern=Pattern.compile("\"[^\"]*\\>[^\"]*\"");
    Matcher quoteWithSlashMatcher=quoteWithSlashPattern.matcher(statement);
    String fixedQuoteStatement=statement;
    if (quoteWithSlashMatcher.find()) {
      fixedQuoteStatement=StringUtil.replace(statement,quoteWithSlashMatcher.group(),"\"\"");
    }
    Pattern closingTagPattern=Pattern.compile("</[^>/]*>");
    Matcher closingTagMatcher=closingTagPattern.matcher(fixedQuoteStatement);
    Pattern openingTagPattern=Pattern.compile("<[^/][^>]*[^/]>");
    Matcher openingTagMatcher=openingTagPattern.matcher(fixedQuoteStatement);
    Pattern wholeTagPattern=Pattern.compile("<[^\\>^/]*\\/>");
    Matcher wholeTagMatcher=wholeTagPattern.matcher(fixedQuoteStatement);
    if (closingTagMatcher.find()) {
      if (!openingTagMatcher.find() && !wholeTagMatcher.find()) {
        if (!statement.contains("<!--") && !statement.contains("-->") && !statement.contains("<![CDATA[")&& !statement.contains("]]>")) {
          tabCounter--;
        }
      }
    }
    if (statement.contains("<![CDATA[")) {
      ignoredCdataBlock=true;
    }
    if (statement.contains("]]>")) {
      ignoredCdataBlock=false;
    }
    if (statement.contains("<!--")) {
      ignoredCommentBlock=true;
    }
    if (statement.contains("-->")) {
      ignoredCommentBlock=false;
    }
    if (!ignoredCommentBlock && !ignoredCdataBlock) {
      StringBundler sb=new StringBundler();
      for (int i=0; i < tabCounter; i++) {
        sb.append("\t");
      }
      sb.append("<");
      String newStatement=StringUtil.replace(statement,matcher.group(1),sb.toString());
      content=StringUtil.replaceFirst(content,statement,newStatement);
    }
    if (openingTagMatcher.find()) {
      if (!closingTagMatcher.find() && !wholeTagMatcher.find()) {
        if (!statement.contains("<!--") && !statement.contains("-->") && !statement.contains("<![CDATA[")&& !statement.contains("]]>")) {
          tabCounter++;
        }
      }
    }
  }
  return content;
}

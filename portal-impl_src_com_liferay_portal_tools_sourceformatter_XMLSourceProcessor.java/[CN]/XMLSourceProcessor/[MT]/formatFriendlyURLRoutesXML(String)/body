{
  Document document=saxReaderUtil.read(content);
  Element rootElement=document.getRootElement();
  List<ComparableRoute> comparableRoutes=new ArrayList<ComparableRoute>();
  for (  Element routeElement : rootElement.elements("route")) {
    String pattern=routeElement.elementText("pattern");
    ComparableRoute comparableRoute=new ComparableRoute(pattern);
    for (    Element generatedParameterElement : routeElement.elements("generated-parameter")) {
      String name=generatedParameterElement.attributeValue("name");
      String value=generatedParameterElement.getText();
      comparableRoute.addGeneratedParameter(name,value);
    }
    for (    Element ignoredParameterElement : routeElement.elements("ignored-parameter")) {
      String name=ignoredParameterElement.attributeValue("name");
      comparableRoute.addIgnoredParameter(name);
    }
    for (    Element implicitParameterElement : routeElement.elements("implicit-parameter")) {
      String name=implicitParameterElement.attributeValue("name");
      String value=implicitParameterElement.getText();
      comparableRoute.addImplicitParameter(name,value);
    }
    for (    Element overriddenParameterElement : routeElement.elements("overridden-parameter")) {
      String name=overriddenParameterElement.attributeValue("name");
      String value=overriddenParameterElement.getText();
      comparableRoute.addOverriddenParameter(name,value);
    }
    comparableRoutes.add(comparableRoute);
  }
  Collections.sort(comparableRoutes);
  StringBundler sb=new StringBundler();
  sb.append("<?xml version=\"1.0\"?>\n");
  sb.append("<!DOCTYPE routes PUBLIC \"-//Liferay//DTD Friendly URL ");
  sb.append("Routes ");
  sb.append(getVersion());
  sb.append("//EN\" \"http://www.liferay.com/dtd/");
  sb.append("liferay-friendly-url-routes_");
  sb.append(StringUtil.replace(getVersion(),StringPool.PERIOD,StringPool.UNDERLINE));
  sb.append(".dtd\">\n\n<routes>\n");
  for (  ComparableRoute comparableRoute : comparableRoutes) {
    sb.append("\t<route>\n");
    sb.append("\t\t<pattern>");
    sb.append(comparableRoute.getPattern());
    sb.append("</pattern>\n");
    Map<String,String> generatedParameters=comparableRoute.getGeneratedParameters();
    for (    Map.Entry<String,String> entry : generatedParameters.entrySet()) {
      sb.append("\t\t<generated-parameter name=\"");
      sb.append(entry.getKey());
      sb.append("\">");
      sb.append(entry.getValue());
      sb.append("</generated-parameter>\n");
    }
    Set<String> ignoredParameters=comparableRoute.getIgnoredParameters();
    for (    String entry : ignoredParameters) {
      sb.append("\t\t<ignored-parameter name=\"");
      sb.append(entry);
      sb.append("\" />\n");
    }
    Map<String,String> implicitParameters=comparableRoute.getImplicitParameters();
    for (    Map.Entry<String,String> entry : implicitParameters.entrySet()) {
      sb.append("\t\t<implicit-parameter name=\"");
      sb.append(entry.getKey());
      sb.append("\">");
      sb.append(entry.getValue());
      sb.append("</implicit-parameter>\n");
    }
    Map<String,String> overriddenParameters=comparableRoute.getOverriddenParameters();
    for (    Map.Entry<String,String> entry : overriddenParameters.entrySet()) {
      sb.append("\t\t<overridden-parameter name=\"");
      sb.append(entry.getKey());
      sb.append("\">");
      sb.append(entry.getValue());
      sb.append("</overridden-parameter>\n");
    }
    sb.append("\t</route>\n");
  }
  sb.append("</routes>");
  return sb.toString();
}

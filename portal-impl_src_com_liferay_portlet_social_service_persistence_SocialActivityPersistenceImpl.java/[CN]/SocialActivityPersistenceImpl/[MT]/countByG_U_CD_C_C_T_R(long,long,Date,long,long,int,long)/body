{
  boolean finderClassNameCacheEnabled=SocialActivityModelImpl.CACHE_ENABLED;
  String finderClassName=SocialActivity.class.getName();
  String finderMethodName="countByG_U_CD_C_C_T_R";
  String[] finderParams=new String[]{Long.class.getName(),Long.class.getName(),Date.class.getName(),Long.class.getName(),Long.class.getName(),Integer.class.getName(),Long.class.getName()};
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(userId),createDate,new Long(classNameId),new Long(classPK),new Integer(type),new Long(receiverUserId)};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("SELECT COUNT(*) ");
      query.append("FROM com.liferay.portlet.social.model.SocialActivity WHERE ");
      query.append("groupId = ?");
      query.append(" AND ");
      query.append("userId = ?");
      query.append(" AND ");
      if (createDate == null) {
        query.append("createDate IS NULL");
      }
 else {
        query.append("createDate = ?");
      }
      query.append(" AND ");
      query.append("classNameId = ?");
      query.append(" AND ");
      query.append("classPK = ?");
      query.append(" AND ");
      query.append("type_ = ?");
      query.append(" AND ");
      query.append("receiverUserId = ?");
      query.append(" ");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(userId);
      if (createDate != null) {
        qPos.add(CalendarUtil.getTimestamp(createDate));
      }
      qPos.add(classNameId);
      qPos.add(classPK);
      qPos.add(type);
      qPos.add(receiverUserId);
      Long count=null;
      Iterator<Long> itr=q.list().iterator();
      if (itr.hasNext()) {
        count=itr.next();
      }
      if (count == null) {
        count=new Long(0);
      }
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,count);
      return count.intValue();
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return ((Long)result).intValue();
  }
}

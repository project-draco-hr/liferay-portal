{
  variables.put("arrayUtil",ArrayUtil_IW.getInstance());
  try {
    variables.put("auditMessageFactoryUtil",AuditMessageFactoryUtil.getAuditMessageFactory());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("auditRouterUtil",AuditRouterUtil.getAuditRouter());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("browserSniffer",BrowserSnifferUtil.getBrowserSniffer());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("calendarFactory",CalendarFactoryUtil.getCalendarFactory());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("dateFormatFactory",FastDateFormatFactoryUtil.getFastDateFormatFactory());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("dateUtil",DateUtil_IW.getInstance());
  try {
    variables.put("ddmUtil",DDMUtil.getDDM());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("dlUtil",DLUtil.getDL());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    ServiceLocator serviceLocator=ServiceLocator.getInstance();
    variables.put("serviceLocator",serviceLocator);
    try {
      variables.put("expandoColumnLocalService",serviceLocator.findService(ExpandoColumnLocalService.class.getName()));
    }
 catch (    SecurityException se) {
      _log.error(se,se);
    }
    try {
      variables.put("expandoRowLocalService",serviceLocator.findService(ExpandoRowLocalService.class.getName()));
    }
 catch (    SecurityException se) {
      _log.error(se,se);
    }
    try {
      variables.put("expandoTableLocalService",serviceLocator.findService(ExpandoTableLocalService.class.getName()));
    }
 catch (    SecurityException se) {
      _log.error(se,se);
    }
    try {
      variables.put("expandoValueLocalService",serviceLocator.findService(ExpandoValueLocalService.class.getName()));
    }
 catch (    SecurityException se) {
      _log.error(se,se);
    }
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("getterUtil",GetterUtil_IW.getInstance());
  try {
    variables.put("htmlUtil",HtmlUtil.getHtml());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("httpUtil",HttpUtil.getHttp());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("journalContentUtil",JournalContentUtil.getJournalContent());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("jsonFactoryUtil",JSONFactoryUtil.getJSONFactory());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("languageUtil",LanguageUtil.getLanguage());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("unicodeLanguageUtil",UnicodeLanguageUtil.getUnicodeLanguage());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("localeUtil",LocaleUtil.getInstance());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("paramUtil",ParamUtil_IW.getInstance());
  try {
    variables.put("portalUtil",PortalUtil.getPortal());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("portal",PortalUtil.getPortal());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("prefsPropsUtil",PrefsPropsUtil.getPrefsProps());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("propsUtil",PropsUtil.getProps());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("portletModeFactory",PortletModeFactory_IW.getInstance());
  try {
    variables.put("portletURLFactory",PortletURLFactoryUtil.getPortletURLFactory());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    UtilLocator utilLocator=UtilLocator.getInstance();
    variables.put("utilLocator",utilLocator);
    try {
      variables.put("saxReaderUtil",utilLocator.findUtil(SAXReader.class.getName()));
    }
 catch (    SecurityException se) {
      _log.error(se,se);
    }
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("sessionClicks",SessionClicks_IW.getInstance());
  variables.put("staticFieldGetter",StaticFieldGetter.getInstance());
  variables.put("stringUtil",StringUtil_IW.getInstance());
  variables.put("timeZoneUtil",TimeZoneUtil_IW.getInstance());
  variables.put("unicodeFormatter",UnicodeFormatter_IW.getInstance());
  variables.put("validator",Validator_IW.getInstance());
  try {
    Class<?> clazz=VelocityTaglibImpl.class;
    Method method=clazz.getMethod("layoutIcon",new Class[]{Layout.class});
    variables.put("velocityTaglib_layoutIcon",method);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  try {
    variables.put("webServerToken",WebServerServletTokenUtil.getWebServerServletToken());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  variables.put("windowStateFactory",WindowStateFactory_IW.getInstance());
  try {
    variables.put("accountPermission",AccountPermissionUtil.getAccountPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("commonPermission",CommonPermissionUtil.getCommonPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("groupPermission",GroupPermissionUtil.getGroupPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("layoutPermission",LayoutPermissionUtil.getLayoutPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("organizationPermission",OrganizationPermissionUtil.getOrganizationPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("passwordPolicyPermission",PasswordPolicyPermissionUtil.getPasswordPolicyPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("portalPermission",PortalPermissionUtil.getPortalPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("portletPermission",PortletPermissionUtil.getPortletPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("rolePermission",RolePermissionUtil.getRolePermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("userGroupPermission",UserGroupPermissionUtil.getUserGroupPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  try {
    variables.put("userPermission",UserPermissionUtil.getUserPermission());
  }
 catch (  SecurityException se) {
    _log.error(se,se);
  }
  populateDeprecatedCommonHelperUtilities(variables);
}

{
  Map<String,String> parameters=new HashMap<>();
  parameters.put(SessionParameter.ATOMPUB_URL,getTypeSettingsValue(CMISRepositoryConstants.CMIS_ATOMPUB_URL_PARAMETER));
  parameters.put(SessionParameter.BINDING_TYPE,BindingType.ATOMPUB.value());
  parameters.put(SessionParameter.COMPRESSION,Boolean.TRUE.toString());
  Locale locale=LocaleUtil.getSiteDefault();
  parameters.put(SessionParameter.LOCALE_ISO3166_COUNTRY,locale.getCountry());
  parameters.put(SessionParameter.LOCALE_ISO639_LANGUAGE,locale.getLanguage());
  String login=getLogin();
  String password=null;
  if (Validator.isNotNull(login)) {
    password=PrincipalThreadLocal.getPassword();
  }
 else {
    login=_DL_REPOSITORY_GUEST_USERNAME;
    password=_DL_REPOSITORY_GUEST_PASSWORD;
  }
  parameters.put(SessionParameter.PASSWORD,password);
  parameters.put(SessionParameter.USER,login);
  Thread thread=Thread.currentThread();
  ClassLoader contextClassLoader=thread.getContextClassLoader();
  ClassLoader classLoader=getClass().getClassLoader();
  thread.setContextClassLoader(classLoader);
  try {
    CMISRepositoryUtil.checkRepository(getRepositoryId(),parameters,getTypeSettingsProperties(),CMISRepositoryConstants.CMIS_ATOMPUB_REPOSITORY_ID_PARAMETER);
    return CMISRepositoryUtil.createSession(parameters);
  }
  finally {
    thread.setContextClassLoader(contextClassLoader);
  }
}

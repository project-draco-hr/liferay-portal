{
  List<Map<String,Object>> imageEditorToolsContext=new ArrayList<Map<String,Object>>();
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<ImageEditorCapabilityInformation> toolImageEditorCapabilityInformations=_imageEditorCapabilityTracker.getImageEditorCapabilityInformations("tool");
  if (toolImageEditorCapabilityInformations == null) {
    return imageEditorToolsContext;
  }
  List<List<ImageEditorCapabilityInformation>> imageEditorCapabilityInformationsList=getImageEditorCapabilityInformationsList(toolImageEditorCapabilityInformations);
  for (  List<ImageEditorCapabilityInformation> imageEditorCapabilityInformations : imageEditorCapabilityInformationsList) {
    Map<String,Object> context=new HashMap<>();
    List<Map<String,Object>> controls=new ArrayList<Map<String,Object>>();
    String icon=StringPool.BLANK;
    for (    ImageEditorCapabilityInformation imageEditorCapabilityInformation : imageEditorCapabilityInformations) {
      Map<String,Object> control=new HashMap<>();
      ImageEditorCapability imageEditorCapability=imageEditorCapabilityInformation.getImageEditorCapability();
      control.put("label",imageEditorCapability.getLabel(themeDisplay.getLocale()));
      ServletContext servletContext=imageEditorCapability.getServletContext();
      control.put("modulePath",servletContext.getContextPath());
      Map<String,Object> properties=imageEditorCapabilityInformation.getProperties();
      String variant=GetterUtil.getString(properties.get("com.liferay.frontend.image.editor.capability." + "controls"));
      control.put("variant",variant);
      HttpServletRequest httpServletRequest=PortalUtil.getHttpServletRequest(renderRequest);
      imageEditorCapability.prepareContext(control,httpServletRequest);
      controls.add(control);
      icon=GetterUtil.getString(properties.get("com.liferay.frontend.image.editor.capability.icon"));
    }
    context.put("controls",controls);
    context.put("icon",icon);
    imageEditorToolsContext.add(context);
  }
  return imageEditorToolsContext;
}

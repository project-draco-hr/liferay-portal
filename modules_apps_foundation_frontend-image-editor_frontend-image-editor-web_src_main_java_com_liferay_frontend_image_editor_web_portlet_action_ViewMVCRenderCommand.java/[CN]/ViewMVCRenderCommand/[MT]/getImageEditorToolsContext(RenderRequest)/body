{
  ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<Map<String,Object>> imageEditorToolsContext=new ArrayList();
  List<ImageEditorCapabilityInformation> imageEditorToolInformations=_imageEditorCapabilityTracker.getCapabilities("tool");
  if (imageEditorToolInformations == null) {
    return imageEditorToolsContext;
  }
  List<List<ImageEditorCapabilityInformation>> toolCategories=groupCapabilities(imageEditorToolInformations);
  for (  List<ImageEditorCapabilityInformation> toolCategory : toolCategories) {
    Map<String,Object> toolContext=new HashMap<>();
    List<Map<String,Object>> categoryControls=new ArrayList();
    String categoryIcon=StringPool.BLANK;
    for (    ImageEditorCapabilityInformation imageEditorCapabilityInformation : toolCategory) {
      Map<String,Object> capabilityProperties=imageEditorCapabilityInformation.getProperties();
      String icon=GetterUtil.getString(capabilityProperties.get("com.liferay.frontend.image.editor.capability." + "icon"));
      categoryIcon=icon;
      ImageEditorCapability imageEditorCapability=imageEditorCapabilityInformation.getImageEditorCapability();
      String label=imageEditorCapability.getLabel(themeDisplay.getLocale());
      ServletContext imageEditorCapabilityServletContext=imageEditorCapability.getServletContext();
      String variant=GetterUtil.getString(capabilityProperties.get("com.liferay.frontend.image.editor.capability." + "controls"));
      Map<String,Object> controlContext=new HashMap<>();
      controlContext.put("label",label);
      controlContext.put("modulePath",imageEditorCapabilityServletContext.getContextPath());
      controlContext.put("variant",variant);
      HttpServletRequest httpServletRequest=PortalUtil.getHttpServletRequest(renderRequest);
      imageEditorCapability.prepareContext(controlContext,httpServletRequest);
      categoryControls.add(controlContext);
    }
    toolContext.put("controls",categoryControls);
    toolContext.put("icon",categoryIcon);
    imageEditorToolsContext.add(toolContext);
  }
  return imageEditorToolsContext;
}

{
  String[] lines=null;
  for (  JavaField javaField : javaClass.getFields()) {
    Type type=javaField.getType();
    String initializationExpression=StringUtil.trim(javaField.getInitializationExpression());
    String fieldTypeName=type.getFullyQualifiedName();
    if (!javaField.isPrivate() || !javaField.isFinal() || javaField.isStatic()|| initializationExpression.isEmpty()|| !_immutableFieldTypes.contains(fieldTypeName)) {
      continue;
    }
    if (lines == null) {
      lines=StringUtil.splitLines(content);
    }
    String line=lines[javaField.getLineNumber() - 1];
    String newLine=StringUtil.replace(line,"private final","private static final");
    content=StringUtil.replace(content,line,newLine);
  }
  return content;
}

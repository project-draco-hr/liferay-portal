{
  if (!portalSource) {
    return content;
  }
  ClassLibrary classLibrary=new ClassLibrary();
  classLibrary.addClassLoader(JavaSourceProcessor.class.getClassLoader());
  JavaDocBuilder javaDocBuilder=new JavaDocBuilder(classLibrary);
  try {
    javaDocBuilder.addSource(new UnsyncStringReader(sanitizeContent(content)));
  }
 catch (  ParseException pe) {
    System.err.println("Unable to parse " + fileName + StringPool.COMMA_AND_SPACE+ pe.getMessage());
    return content;
  }
  com.thoughtworks.qdox.model.JavaClass[] javaClasses=javaDocBuilder.getClasses();
  for (  com.thoughtworks.qdox.model.JavaClass javaClass : javaClasses) {
    for (    JavaField javaField : javaClass.getFields()) {
      if (!javaField.isPrivate()) {
        continue;
      }
      Type javaFieldType=javaField.getType();
      String fieldTypeName=javaFieldType.getFullyQualifiedName();
      Set<String> immutableFieldTypes=getImmutableFieldTypes();
      if (javaField.isFinal() && immutableFieldTypes.contains(fieldTypeName)) {
        content=checkImmutableFieldType(javaField,javaFieldType,content);
        content=checkStaticableFieldType(javaField,javaFieldType,content);
      }
      content=checkFinalableFieldType(javaClass,javaClasses,javaField,content);
    }
  }
  return content;
}

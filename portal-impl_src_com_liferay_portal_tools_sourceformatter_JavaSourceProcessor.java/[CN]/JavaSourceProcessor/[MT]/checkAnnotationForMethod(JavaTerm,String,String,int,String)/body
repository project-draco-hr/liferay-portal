{
  String methodContent=javaTerm.getContent();
  String methodName=javaTerm.getName();
  Pattern pattern=Pattern.compile(requiredMethodNameRegex);
  Matcher matcher=pattern.matcher(methodName);
  if (methodContent.contains(StringPool.TAB + StringPool.AT + annotation+ "\n") || methodContent.contains(StringPool.TAB + StringPool.AT + annotation+ StringPool.OPEN_PARENTHESIS)) {
    if (!matcher.find()) {
      processErrorMessage(fileName,"LPS-36303: Incorrect method name: " + methodName + " "+ fileName);
    }
 else     if (javaTerm.getType() != requiredMethodType) {
      processErrorMessage(fileName,"LPS-36303: Incorrect method type for " + methodName + " "+ fileName);
    }
  }
 else   if (matcher.find() && !methodContent.contains(StringPool.TAB + "@Override")) {
    processErrorMessage(fileName,"Annotation @" + annotation + " required for "+ methodName+ " "+ fileName);
  }
}

{
  Collection<String> fileNames=null;
  if (portalSource) {
    fileNames=getPortalJavaFiles();
    _checkUnprocessedExceptions=GetterUtil.getBoolean(System.getProperty("source.formatter.check.unprocessed.exceptions"));
  }
 else {
    fileNames=getPluginJavaFiles();
  }
  _fitOnSingleLineExclusions=getPropertyList("fit.on.single.line.exludes");
  _hibernateSQLQueryExclusions=getPropertyList("hibernate.sql.query.excludes");
  _javaTermSortExclusions=getPropertyList("javaterm.sort.excludes");
  _lineLengthExclusions=getPropertyList("line.length.excludes");
  _proxyExclusions=getPropertyList("proxy.excludes");
  _secureRandomExclusions=getPropertyList("secure.random.excludes");
  _staticLogVariableExclusions=getPropertyList("static.log.excludes");
  _testAnnotationsExclusions=getPropertyList("test.annotations.excludes");
  _upgradeServiceUtilExclusions=getPropertyList("upgrade.service.util.excludes");
  _immutableFieldTypes=SetUtil.fromArray(new String[]{"boolean","byte","char","double","float","int","long","short","java.lang.Boolean","java.lang.Byte","java.lang.Character","java.lang.Class","java.lang.Double","java.lang.Float","java.lang.Int","java.lang.Long","java.lang.Number","java.lang.Short","java.lang.String","java.lang.reflect.Field","java.lang.reflect.Method"});
  _immutableFieldTypes.addAll(getPropertyList("immutable.field.types"));
  for (  String fileName : fileNames) {
    format(fileName);
  }
}

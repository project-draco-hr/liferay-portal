{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  Company company=themeDisplay.getCompany();
  boolean autoPassword=true;
  String password1=null;
  String password2=null;
  boolean autoScreenName=false;
  String screenName=ParamUtil.getString(req,"screenName");
  String emailAddress=ParamUtil.getString(req,"emailAddress");
  String firstName=ParamUtil.getString(req,"firstName");
  String middleName=ParamUtil.getString(req,"middleName");
  String lastName=ParamUtil.getString(req,"lastName");
  int prefixId=ParamUtil.getInteger(req,"prefixId");
  int suffixId=ParamUtil.getInteger(req,"suffixId");
  boolean male=ParamUtil.get(req,"male",true);
  int birthdayMonth=ParamUtil.getInteger(req,"birthdayMonth");
  int birthdayDay=ParamUtil.getInteger(req,"birthdayDay");
  int birthdayYear=ParamUtil.getInteger(req,"birthdayYear");
  String jobTitle=ParamUtil.getString(req,"jobTitle");
  long[] organizationIds=StringUtil.split(ParamUtil.getString(req,"organizationIds"),0L);
  boolean sendEmail=true;
  if (PropsValues.CAPTCHA_CHECK_PORTAL_CREATE_ACCOUNT) {
    CaptchaUtil.check(req);
  }
  User user=UserServiceUtil.addUser(company.getCompanyId(),autoPassword,password1,password2,autoScreenName,screenName,emailAddress,themeDisplay.getLocale(),firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,organizationIds,sendEmail);
  HttpServletRequest httpReq=PortalUtil.getHttpServletRequest(req);
  SessionMessages.add(httpReq,"user_added",user.getEmailAddress());
  SessionMessages.add(httpReq,"user_added_password",user.getPasswordUnencrypted());
  String login=null;
  if (company.getAuthType().equals(CompanyConstants.AUTH_TYPE_ID)) {
    login=String.valueOf(user.getUserId());
  }
 else   if (company.getAuthType().equals(CompanyConstants.AUTH_TYPE_SN)) {
    login=user.getScreenName();
  }
 else {
    login=user.getEmailAddress();
  }
  String redirect=HttpUtil.addParameter(themeDisplay.getURLSignIn(),"login",login);
  res.sendRedirect(redirect);
}

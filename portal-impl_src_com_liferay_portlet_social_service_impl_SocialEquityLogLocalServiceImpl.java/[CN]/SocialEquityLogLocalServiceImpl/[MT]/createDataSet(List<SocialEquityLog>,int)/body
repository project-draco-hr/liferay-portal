{
  Map<Integer,SocialEquityValue> values=new LinkedHashMap<Integer,SocialEquityValue>();
  SocialEquityValue runningEquityValue=new SocialEquityValue(0,0);
  for (  SocialEquityLog equityLog : equityLogs) {
    if (!values.containsKey(equityLog.getActionDate())) {
      runningEquityValue=runningEquityValue.clone();
      values.put(equityLog.getActionDate(),runningEquityValue);
    }
    runningEquityValue.add(equityLog.getActionDate(),equityLog.getValue(),equityLog.getLifespan());
  }
  SocialEquityDataSet dataSet=new SocialEquityDataSet(type);
  for (  Map.Entry<Integer,SocialEquityValue> entry : values.entrySet()) {
    String dateString=DateUtil.getDate(getNormalDate(entry.getKey()),"yyyy-MM-dd",null);
    dataSet.addValue(entry.getKey(),dateString,Math.round(entry.getValue().getValue(entry.getKey())));
  }
  return dataSet;
}

{
  if (!PropsValues.SOCIAL_EQUITY_EQUITY_LOG_ENABLED) {
    return;
  }
  User user=userPersistence.findByPrimaryKey(userId);
  AssetEntry assetEntry=assetEntryPersistence.findByPrimaryKey(assetEntryId);
  List<SocialEquityLog> equityLogs=socialEquityLogPersistence.findByAEI_AI_A_T(assetEntryId,actionId,true,SocialEquitySettingConstants.TYPE_INFORMATION);
  SocialEquityValue socialEquityValue=new SocialEquityValue(0,0);
  for (  SocialEquityLog equityLog : equityLogs) {
    double k=calculateK(equityLog.getValue(),equityLog.getLifespan());
    double b=calculateB(equityLog.getActionDate(),equityLog.getValue(),equityLog.getLifespan());
    socialEquityValue.subtract(new SocialEquityValue(k,b));
    equityLog.setActive(false);
    socialEquityLogPersistence.remove(equityLog);
  }
  socialEquityLogLocalService.incrementSocialEquityAssetEntry_IQ(assetEntryId,socialEquityValue);
  socialEquityLogLocalService.incrementSocialEquityUser_CQ(assetEntry.getGroupId(),assetEntry.getUserId(),socialEquityValue);
  equityLogs=socialEquityLogPersistence.findByU_AI_A_T(userId,actionId,true,SocialEquitySettingConstants.TYPE_PARTICIPATION);
  socialEquityValue=new SocialEquityValue(0,0);
  for (  SocialEquityLog equityLog : equityLogs) {
    double k=calculateK(equityLog.getValue(),equityLog.getLifespan());
    double b=calculateB(equityLog.getActionDate(),equityLog.getValue(),equityLog.getLifespan());
    socialEquityValue.subtract(new SocialEquityValue(k,b));
    equityLog.setActive(false);
    socialEquityLogPersistence.remove(equityLog);
  }
  socialEquityLogLocalService.incrementSocialEquityUser_PQ(user.getGroup().getGroupId(),userId,socialEquityValue);
}

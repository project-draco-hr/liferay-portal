{
  final AssetEntry assetEntry=equityPayload.getAssetEntry();
  SocialEquityValue equityValue=equityPayload.getEquityValue();
  assetEntry.updateSocialInformationEquity(equityValue.getValue());
  int count=socialEquityAssetEntryPersistence.countByAssetEntryId(assetEntryId);
  if (count == 0) {
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      public Void call() throws Exception {
        socialEquityLogLocalService.addSocialEquityAssetEntry(assetEntry);
        return null;
      }
    }
);
  }
  String sql=CustomSQLUtil.get(_UPDATE_SOCIAL_EQUITY_ASSET_ENTRY_IQ);
  sql=StringUtil.replace(sql,new String[]{"[$ASSET_ENTRY_ID$]","[$INFORMATION_B$]","[$INFORMATION_K$]"},new String[]{String.valueOf(assetEntryId),String.valueOf(equityValue.getB()),String.valueOf(equityValue.getK())});
  runSQL(sql);
}

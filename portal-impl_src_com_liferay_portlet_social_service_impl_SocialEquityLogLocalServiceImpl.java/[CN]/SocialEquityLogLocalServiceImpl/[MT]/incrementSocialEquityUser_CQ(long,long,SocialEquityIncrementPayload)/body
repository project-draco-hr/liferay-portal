{
  final User user=equityPayload.getUser();
  int count=socialEquityUserPersistence.countByG_U(groupId,userId);
  if (count == 0) {
    TransactionCommitCallbackUtil.registerCallback(new Callable<Void>(){
      public Void call() throws Exception {
        socialEquityLogLocalService.addSocialEquityUser(groupId,user);
        return null;
      }
    }
);
  }
  SocialEquityValue equityValue=equityPayload.getEquityValue();
  user.updateSocialContributionEquity(groupId,equityValue.getValue());
  String sql=CustomSQLUtil.get(_UPDATE_SOCIAL_EQUITY_USER_CQ);
  sql=StringUtil.replace(sql,new String[]{"[$CONTRIBUTION_B$]","[$CONTRIBUTION_K$]","[$GROUP_ID$]","[$USER_ID$]"},new String[]{String.valueOf(equityValue.getB()),String.valueOf(equityValue.getK()),String.valueOf(groupId),String.valueOf(userId)});
  runSQL(sql);
}

{
  long groupId=Long.valueOf(StringUtil.extractFirst(id,StringPool.POUND));
  long userId=Long.valueOf(StringUtil.extractLast(id,StringPool.POUND));
  User user=userLocalService.getUser(userId);
  user.getSocialContributionEquity();
  int count=socialEquityUserPersistence.countByG_U(groupId,userId);
  if (count == 0) {
    addSocialEquityUser(groupId,user);
  }
  user.setSocialContributionEquity(calculateEquity(getEquityDate(),k,b));
  SocialEquity userContributionEquity=(SocialEquity)CounterCacheAdvice.getCounterValue("com.liferay.portlet.social.service." + "SocialEquityLogLocalService#updateUser_CQ#none",userId);
  userContributionEquity.subtract(new SocialEquity(k,b));
  String sql=CustomSQLUtil.get(_UPDATE_SOCIAL_EQUITY_USER_CQ);
  sql=StringUtil.replace(sql,new String[]{"[$GROUP_ID$]","[$USER_ID$]","[$CONTRIBUTION_B$]","[$CONTRIBUTION_K$]"},new String[]{String.valueOf(groupId),String.valueOf(userId),String.valueOf(b),String.valueOf(k)});
  runSQL(sql);
  System.out.println("After update CQ");
  System.out.println("USER(" + userId + ") CQ:"+ user.getSocialContributionEquity());
  System.out.println("USER(" + userId + ") PQ:"+ user.getSocialParticipationEquity());
  System.out.println("USER(" + userId + ") PEQ:"+ user.getSocialPersonalEquity());
}

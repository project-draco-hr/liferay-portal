{
  SearchContainerRowTag parentRowTag=(SearchContainerRowTag)findAncestorWithClass(this,SearchContainerRowTag.class);
  if (parentRowTag == null) {
    throw new JspTagException("Requires liferay-ui:search-container-row");
  }
  if (!parentRowTag.isHeaderNamesAssigned()) {
    SearchContainerTag parentSearchContainerTag=(SearchContainerTag)findAncestorWithClass(this,SearchContainerTag.class);
    SearchContainer searchContainer=parentSearchContainerTag.getSearchContainer();
    List<String> headerNames=parentSearchContainerTag.getHeaderNames();
    String name=getName();
    if (Validator.isNull(name) && Validator.isNotNull(_property)) {
      name=_property;
    }
    if (headerNames == null) {
      headerNames=new ArrayList<String>();
      parentSearchContainerTag.setHeaderNames(headerNames);
      searchContainer.setHeaderNames(headerNames);
    }
    headerNames.add(name);
    if (_orderable) {
      Map<String,String> orderableHeaders=searchContainer.getOrderableHeaders();
      if (orderableHeaders == null) {
        orderableHeaders=new LinkedHashMap<String,String>();
        searchContainer.setOrderableHeaders(orderableHeaders);
      }
      if (Validator.isNotNull(_orderableProperty)) {
        orderableHeaders.put(getName(),_orderableProperty);
      }
 else       if (Validator.isNotNull(_property)) {
        orderableHeaders.put(getName(),_property);
      }
    }
  }
  if (Validator.isNotNull(_property)) {
    return SKIP_BODY;
  }
 else   if (Validator.isNotNull(_buffer)) {
    _sb=new StringBuilder();
    pageContext.setAttribute(_buffer,_sb);
    return EVAL_BODY_INCLUDE;
  }
 else   if (Validator.isNull(_value)) {
    return EVAL_BODY_BUFFERED;
  }
 else {
    return SKIP_BODY;
  }
}

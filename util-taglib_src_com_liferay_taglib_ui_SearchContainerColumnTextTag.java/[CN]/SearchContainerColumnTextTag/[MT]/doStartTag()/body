{
  if (_orderable && Validator.isNull(_orderableProperty)) {
    _orderableProperty=name;
  }
  SearchContainerRowTag parentRowTag=(SearchContainerRowTag)findAncestorWithClass(this,SearchContainerRowTag.class);
  if (parentRowTag == null) {
    throw new JspTagException("Requires liferay-ui:search-container-row");
  }
  if (!parentRowTag.isHeaderNamesAssigned()) {
    List<String> headerNames=parentRowTag.getHeaderNames();
    String name=getName();
    if (Validator.isNull(name) && Validator.isNotNull(_property)) {
      name=_property;
    }
    headerNames.add(name);
    if (_orderable) {
      Map<String,String> orderableHeaders=parentRowTag.getOrderableHeaders();
      if (Validator.isNotNull(_orderableProperty)) {
        orderableHeaders.put(name,_orderableProperty);
      }
 else       if (Validator.isNotNull(_property)) {
        orderableHeaders.put(name,_property);
      }
 else       if (Validator.isNotNull(name)) {
        orderableHeaders.put(name,name);
      }
    }
  }
  if (Validator.isNotNull(_property)) {
    return SKIP_BODY;
  }
 else   if (Validator.isNotNull(_buffer)) {
    _sb=new StringBuilder();
    pageContext.setAttribute(_buffer,_sb);
    return EVAL_BODY_INCLUDE;
  }
 else   if (Validator.isNull(_value)) {
    return EVAL_BODY_BUFFERED;
  }
 else {
    return SKIP_BODY;
  }
}

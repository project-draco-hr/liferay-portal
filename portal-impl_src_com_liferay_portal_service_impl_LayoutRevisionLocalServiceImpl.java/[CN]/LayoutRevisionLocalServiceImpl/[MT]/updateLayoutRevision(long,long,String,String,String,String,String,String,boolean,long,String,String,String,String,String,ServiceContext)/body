{
  User user=userPersistence.findByPrimaryKey(userId);
  LayoutRevision layoutRevision=layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId);
  Date now=new Date();
  LayoutRevision newLayoutRevision=layoutRevisionPersistence.create(layoutRevisionId);
  newLayoutRevision.setGroupId(layoutRevision.getGroupId());
  newLayoutRevision.setCompanyId(layoutRevision.getCompanyId());
  newLayoutRevision.setUserId(user.getUserId());
  newLayoutRevision.setUserName(user.getFullName());
  newLayoutRevision.setCreateDate(serviceContext.getCreateDate(now));
  newLayoutRevision.setModifiedDate(serviceContext.getModifiedDate(now));
  newLayoutRevision.setLayoutSetBranchId(layoutRevision.getLayoutSetBranchId());
  newLayoutRevision.setParentLayoutRevisionId(layoutRevision.getLayoutRevisionId());
  newLayoutRevision.setHead(false);
  newLayoutRevision.setPlid(layoutRevision.getPlid());
  newLayoutRevision.setName(name);
  newLayoutRevision.setTitle(title);
  newLayoutRevision.setDescription(description);
  newLayoutRevision.setKeywords(keywords);
  newLayoutRevision.setRobots(robots);
  newLayoutRevision.setTypeSettings(typeSettings);
  if (iconImage) {
    newLayoutRevision.setIconImage(iconImage);
    newLayoutRevision.setIconImageId(iconImageId);
  }
  newLayoutRevision.setThemeId(themeId);
  newLayoutRevision.setColorSchemeId(colorSchemeId);
  newLayoutRevision.setWapThemeId(wapThemeId);
  newLayoutRevision.setWapColorSchemeId(wapColorSchemeId);
  newLayoutRevision.setCss(css);
  layoutRevisionPersistence.update(newLayoutRevision,false);
  copyPortletPreferences(newLayoutRevision,serviceContext);
  WorkflowHandlerRegistryUtil.startWorkflowInstance(newLayoutRevision.getCompanyId(),newLayoutRevision.getGroupId(),userId,LayoutRevision.class.getName(),newLayoutRevision.getLayoutRevisionId(),newLayoutRevision,serviceContext);
  return newLayoutRevision;
}

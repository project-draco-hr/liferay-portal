{
  User user=userPersistence.findByPrimaryKey(userId);
  LayoutSetBranch layoutSetBranch=layoutSetBranchPersistence.findByPrimaryKey(layoutSetBranchId);
  parentLayoutRevisionId=getParentLayoutRevisionId(layoutSetBranchId,parentLayoutRevisionId,plid);
  Date now=new Date();
  long layoutRevisionId=counterLocalService.increment();
  LayoutRevision layoutRevision=layoutRevisionPersistence.create(layoutRevisionId);
  layoutRevision.setGroupId(layoutSetBranch.getGroupId());
  layoutRevision.setCompanyId(user.getCompanyId());
  layoutRevision.setUserId(user.getUserId());
  layoutRevision.setUserName(user.getFullName());
  layoutRevision.setCreateDate(serviceContext.getCreateDate(now));
  layoutRevision.setModifiedDate(serviceContext.getModifiedDate(now));
  layoutRevision.setLayoutSetBranchId(layoutSetBranchId);
  layoutRevision.setLayoutBranchId(layoutBranchId);
  layoutRevision.setParentLayoutRevisionId(parentLayoutRevisionId);
  layoutRevision.setHead(head);
  layoutRevision.setPlid(plid);
  layoutRevision.setPrivateLayout(privateLayout);
  layoutRevision.setName(name);
  layoutRevision.setTitle(title);
  layoutRevision.setDescription(description);
  layoutRevision.setKeywords(keywords);
  layoutRevision.setRobots(robots);
  layoutRevision.setTypeSettings(typeSettings);
  layoutRevision.setIconImageId(iconImageId);
  layoutRevision.setThemeId(themeId);
  layoutRevision.setColorSchemeId(colorSchemeId);
  layoutRevision.setWapThemeId(wapThemeId);
  layoutRevision.setWapColorSchemeId(wapColorSchemeId);
  layoutRevision.setCss(css);
  layoutRevision.setStatus(WorkflowConstants.STATUS_DRAFT);
  layoutRevision.setStatusDate(serviceContext.getModifiedDate(now));
  layoutRevisionPersistence.update(layoutRevision);
  _layoutRevisionId.set(layoutRevision.getLayoutRevisionId());
  if (portletPreferencesPlid == LayoutConstants.DEFAULT_PLID) {
    portletPreferencesPlid=plid;
  }
  copyPortletPreferences(layoutRevision,portletPreferencesPlid);
  if (isWorkflowEnabled(plid)) {
    WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),layoutRevision.getGroupId(),user.getUserId(),LayoutRevision.class.getName(),layoutRevision.getLayoutRevisionId(),layoutRevision,serviceContext);
  }
 else {
    updateMajor(layoutRevision);
    updateStatus(userId,layoutRevisionId,WorkflowConstants.STATUS_APPROVED,serviceContext);
  }
  StagingUtil.setRecentLayoutRevisionId(user,layoutSetBranchId,plid,layoutRevision.getLayoutRevisionId());
  return layoutRevision;
}

{
  User user=userLocalService.getUserById(userId);
  LayoutBranch layoutBranch=layoutBranchPersistence.findByPrimaryKey(layoutBranchId);
  parentLayoutRevisionId=getParentLayoutRevisionId(layoutBranchId,parentLayoutRevisionId,plid);
  Date now=new Date();
  long layoutRevisionId=counterLocalService.increment();
  LayoutRevision layoutRevision=layoutRevisionPersistence.create(layoutRevisionId);
  layoutRevision.setGroupId(layoutBranch.getGroupId());
  layoutRevision.setCompanyId(user.getCompanyId());
  layoutRevision.setUserId(user.getUserId());
  layoutRevision.setUserName(user.getFullName());
  layoutRevision.setCreateDate(serviceContext.getCreateDate(now));
  layoutRevision.setModifiedDate(serviceContext.getModifiedDate(now));
  layoutRevision.setLayoutBranchId(layoutBranchId);
  layoutRevision.setParentLayoutRevisionId(parentLayoutRevisionId);
  layoutRevision.setHead(head);
  layoutRevision.setPlid(plid);
  layoutRevision.setName(name);
  layoutRevision.setTitle(title);
  layoutRevision.setDescription(description);
  layoutRevision.setTypeSettings(typeSettings);
  if (iconImage) {
    layoutRevision.setIconImage(iconImage);
    layoutRevision.setIconImageId(iconImageId);
  }
  layoutRevision.setThemeId(themeId);
  layoutRevision.setColorSchemeId(colorSchemeId);
  layoutRevision.setWapThemeId(wapThemeId);
  layoutRevision.setWapColorSchemeId(wapColorSchemeId);
  layoutRevision.setCss(css);
  layoutRevision.setStatus(WorkflowConstants.STATUS_DRAFT);
  layoutRevisionPersistence.update(layoutRevision,false);
  if (parentLayoutRevisionId != LayoutRevisionConstants.DEFAULT_PARENT_LAYOUT_REVISION_ID) {
    copyPortletPreferences(layoutRevision,serviceContext);
  }
  WorkflowHandlerRegistryUtil.startWorkflowInstance(user.getCompanyId(),layoutRevision.getGroupId(),user.getUserId(),Layout.class.getName(),layoutRevision.getLayoutRevisionId(),layoutRevision,serviceContext);
  return layoutRevision;
}

{
  super.init();
  aboutJSP=getInitParameter("about-jsp");
  configJSP=getInitParameter("config-jsp");
  editJSP=getInitParameter("edit-jsp");
  editDefaultsJSP=getInitParameter("edit-defaults-jsp");
  editGuestJSP=getInitParameter("edit-guest-jsp");
  helpJSP=getInitParameter("help-jsp");
  previewJSP=getInitParameter("preview-jsp");
  printJSP=getInitParameter("print-jsp");
  viewJSP=getInitParameter("view-jsp");
  jspPath=getInitParameter("jsp-path");
  if (Validator.isNull(jspPath)) {
    jspPath=StringPool.SLASH;
  }
 else   if (jspPath.contains(StringPool.BACK_SLASH) || jspPath.contains(StringPool.DOUBLE_SLASH) || jspPath.contains(StringPool.PERIOD)|| jspPath.contains(StringPool.SPACE)) {
    throw new PortletException("jsp-path " + jspPath + " has invalid characters");
  }
 else   if (jspPath.startsWith(StringPool.SLASH) && jspPath.endsWith(StringPool.SLASH)) {
    throw new PortletException("jsp-path " + jspPath + " must start and end with a /");
  }
  clearRequestParameters=GetterUtil.getBoolean(getInitParameter("clear-request-parameters"));
  copyRequestParameters=GetterUtil.getBoolean(getInitParameter("copy-request-parameters"));
  String packagePrefix=getInitParameter(ActionCommandCache.ACTION_PACKAGE_NAME);
  if (Validator.isNotNull(packagePrefix)) {
    _actionCommandCache=new ActionCommandCache(packagePrefix);
  }
}

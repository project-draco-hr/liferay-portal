{
  List structures=JournalStructureLocalServiceUtil.getStructures();
  for (int i=0; i < structures.size(); i++) {
    JournalStructure structure=(JournalStructure)structures.get(i);
    ResourceLocalServiceUtil.addResources(structure.getCompanyId(),0,0,JournalStructure.class.getName(),structure.getId(),false,true,true);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Permissions verified for Journal structures");
  }
  List templates=JournalTemplateLocalServiceUtil.getTemplates();
  for (int i=0; i < templates.size(); i++) {
    JournalTemplate template=(JournalTemplate)templates.get(i);
    ResourceLocalServiceUtil.addResources(template.getCompanyId(),0,0,JournalTemplate.class.getName(),template.getId(),false,true,true);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Permissions verified for Journal templates");
  }
  List articles=JournalArticleLocalServiceUtil.getArticles();
  for (int i=0; i < articles.size(); i++) {
    JournalArticle article=(JournalArticle)articles.get(i);
    if (article.getResourcePrimKey() <= 0) {
      article=JournalArticleLocalServiceUtil.checkArticleResourcePrimKey(article.getGroupId(),article.getArticleId(),article.getVersion());
    }
    ResourceLocalServiceUtil.addResources(article.getCompanyId(),0,0,JournalArticle.class.getName(),article.getResourcePrimKey(),false,true,true);
    try {
      TagsAssetLocalServiceUtil.getAsset(JournalArticle.class.getName(),article.getPrimaryKey());
    }
 catch (    NoSuchAssetException nsae) {
      TagsAssetLocalServiceUtil.updateAsset(article.getUserId(),JournalArticle.class.getName(),article.getResourcePrimKey(),new String[0],null,null,article.getDisplayDate(),article.getExpirationDate(),ContentTypes.TEXT_HTML,article.getTitle(),article.getDescription(),article.getDescription(),null,0,0);
    }
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Permissions and TagsAssets verified for Journal articles");
  }
}

{
  verifyOracleNewLine();
  List<JournalArticle> articles=JournalArticleLocalServiceUtil.getArticles();
  for (  JournalArticle article : articles) {
    long groupId=article.getGroupId();
    String articleId=article.getArticleId();
    double version=article.getVersion();
    String structureId=article.getStructureId();
    if (article.getResourcePrimKey() <= 0) {
      article=JournalArticleLocalServiceUtil.checkArticleResourcePrimKey(groupId,articleId,version);
    }
    ResourceLocalServiceUtil.addResources(article.getCompanyId(),0,0,JournalArticle.class.getName(),article.getResourcePrimKey(),false,false,false);
    try {
      AssetEntry assetEntry=AssetEntryLocalServiceUtil.getEntry(JournalArticle.class.getName(),article.getResourcePrimKey());
      if ((article.getStatus() == WorkflowConstants.STATUS_DRAFT) && (article.getVersion() == JournalArticleConstants.VERSION_DEFAULT)) {
        AssetEntryLocalServiceUtil.updateEntry(assetEntry.getClassName(),assetEntry.getClassPK(),null,assetEntry.isVisible());
      }
    }
 catch (    NoSuchEntryException nsee) {
      try {
        JournalArticleLocalServiceUtil.updateAsset(article.getUserId(),article,null,null,null);
      }
 catch (      Exception e) {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to update asset for article " + article.getId() + ": "+ e.getMessage());
        }
      }
    }
    String content=GetterUtil.getString(article.getContent());
    String newContent=HtmlUtil.replaceMsWordCharacters(content);
    if (Validator.isNotNull(structureId)) {
    }
    if (!content.equals(newContent)) {
      JournalArticleLocalServiceUtil.updateContent(groupId,articleId,version,newContent);
    }
    JournalArticleLocalServiceUtil.checkStructure(groupId,articleId,version);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Permissions and assets verified for articles");
  }
  verifyContentSearch();
}

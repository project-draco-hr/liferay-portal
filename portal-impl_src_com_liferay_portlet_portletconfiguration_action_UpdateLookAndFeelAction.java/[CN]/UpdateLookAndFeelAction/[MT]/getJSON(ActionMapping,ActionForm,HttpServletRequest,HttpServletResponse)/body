{
  HttpSession session=request.getSession();
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  String portletId=ParamUtil.getString(request,"portletId");
  if (!PortletPermissionUtil.contains(permissionChecker,themeDisplay.getPlid(),portletId,ActionKeys.CONFIGURATION)) {
    return null;
  }
  PortletPreferences portletSetup=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletId);
  String css=ParamUtil.getString(request,"css");
  if (_log.isDebugEnabled()) {
    _log.debug("Updating css " + css);
  }
  JSONObject jsonObj=JSONFactoryUtil.createJSONObject(css);
  JSONObject portletData=jsonObj.getJSONObject("portletData");
  jsonObj.remove("portletData");
  css=jsonObj.toString();
  boolean useCustomTitle=portletData.getBoolean("useCustomTitle");
  boolean showBorders=portletData.getBoolean("showBorders");
  long linkToPlid=GetterUtil.getLong(portletData.getString("portletLinksTarget"));
  JSONObject titles=portletData.getJSONObject("titles");
  Locale[] locales=LanguageUtil.getAvailableLocales();
  for (int i=0; i < locales.length; i++) {
    String languageId=LocaleUtil.toLanguageId(locales[i]);
    String title=null;
    if (titles.has(languageId)) {
      title=GetterUtil.getString(titles.getString(languageId));
    }
    if (Validator.isNotNull(title)) {
      portletSetup.setValue("portlet-setup-title-" + languageId,title);
    }
 else {
      portletSetup.reset("portlet-setup-title-" + languageId);
    }
  }
  portletSetup.setValue("portlet-setup-use-custom-title",String.valueOf(useCustomTitle));
  portletSetup.setValue("portlet-setup-show-borders",String.valueOf(showBorders));
  if (linkToPlid > 0) {
    portletSetup.setValue("portlet-setup-link-to-plid",String.valueOf(linkToPlid));
  }
 else {
    portletSetup.reset("portlet-setup-link-to-plid");
  }
  portletSetup.setValue("portlet-setup-css",css);
  JSONObject wapData=jsonObj.getJSONObject("wapData");
  String wapTitle=wapData.getString("title");
  String wapInitialWindowState=wapData.getString("initialWindowState");
  portletSetup.setValue("lfr-wap-title",wapTitle);
  portletSetup.setValue("lfr-wap-initial-window-state",wapInitialWindowState);
  portletSetup.store();
  InvokerPortlet.clearResponse(session,layout.getPrimaryKey(),portletId,LanguageUtil.getLanguageId(request));
  return null;
}

{
  if (Validator.isNull(xml)) {
    return Collections.emptyMap();
  }
  String cacheKey=_encodeCacheKey(xml);
  Map<String,Preference> preferencesMap=_preferencesMapPortalCache.get(cacheKey);
  if (preferencesMap != null) {
    return preferencesMap;
  }
  XMLEventReader xmlEventReader=null;
  try {
    XMLInputFactory xmlInputFactory=StAXReaderUtil.getXMLInputFactory();
    xmlEventReader=xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml));
    while (xmlEventReader.hasNext()) {
      XMLEvent xmlEvent=xmlEventReader.nextEvent();
      if (xmlEvent.isStartElement()) {
        StartElement startElement=xmlEvent.asStartElement();
        String elementName=startElement.getName().getLocalPart();
        if (elementName.equals("preference")) {
          Preference preference=readPreference(xmlEventReader);
          if (preferencesMap == null) {
            preferencesMap=new HashMap<>();
          }
          preferencesMap.put(preference.getName(),preference);
        }
      }
    }
  }
 catch (  XMLStreamException xse) {
    throw new SystemException(xse);
  }
 finally {
    if (xmlEventReader != null) {
      try {
        xmlEventReader.close();
      }
 catch (      XMLStreamException xse) {
        if (_log.isDebugEnabled()) {
          _log.debug(xse,xse);
        }
      }
    }
  }
  if (preferencesMap == null) {
    preferencesMap=Collections.emptyMap();
  }
  _preferencesMapPortalCache.put(cacheKey,preferencesMap);
  return preferencesMap;
}

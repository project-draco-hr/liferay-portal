{
  image_alternativepart_stack.push(new image_alternativepart_scope());
  ASTNode item=null;
  ASTNode t1=null;
  ASTNode t2=null;
  CollectionNode t3=null;
  ((image_alternativepart_scope)image_alternativepart_stack.peek()).elements=new CollectionNode();
  try {
    int alt119=3;
switch (input.LA(1)) {
case STAR:
{
        int LA119_1=input.LA(2);
        if ((LA119_1 == STAR)) {
          alt119=1;
        }
 else         if (((LA119_1 >= FORCED_END_OF_LINE && LA119_1 <= WIKI) || LA119_1 == POUND || (LA119_1 >= EQUAL && LA119_1 <= PIPE) || (LA119_1 >= FORCED_LINEBREAK && LA119_1 <= LINK_CLOSE) || (LA119_1 >= BLANKS && LA119_1 <= 75))) {
          alt119=3;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return item;
          }
          NoViableAltException nvae=new NoViableAltException("570:1: image_alternativepart returns [ASTNode item = null] : ( bold_markup onestar (t1= image_bold_alternativepart onestar )+ bold_markup | ital_markup onestar (t2= image_ital_alternativepart onestar )+ ital_markup | onestar (t3= image_alternativetext onestar )+ );",119,1,input);
          throw nvae;
        }
      }
    break;
case ITAL:
{
    alt119=2;
  }
break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case FORCED_LINEBREAK:
case ESCAPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
alt119=3;
}
break;
default :
if (backtracking > 0) {
failed=true;
return item;
}
NoViableAltException nvae=new NoViableAltException("570:1: image_alternativepart returns [ASTNode item = null] : ( bold_markup onestar (t1= image_bold_alternativepart onestar )+ bold_markup | ital_markup onestar (t2= image_ital_alternativepart onestar )+ ital_markup | onestar (t3= image_alternativetext onestar )+ );",119,0,input);
throw nvae;
}
switch (alt119) {
case 1:
{
pushFollow(FOLLOW_bold_markup_in_image_alternativepart3838);
bold_markup();
_fsp--;
if (failed) return item;
pushFollow(FOLLOW_onestar_in_image_alternativepart3841);
onestar();
_fsp--;
if (failed) return item;
int cnt116=0;
loop116: do {
int alt116=2;
int LA116_0=input.LA(1);
if ((LA116_0 == STAR)) {
int LA116_1=input.LA(2);
if (((LA116_1 >= FORCED_END_OF_LINE && LA116_1 <= WIKI) || LA116_1 == POUND || (LA116_1 >= EQUAL && LA116_1 <= PIPE) || (LA116_1 >= FORCED_LINEBREAK && LA116_1 <= LINK_CLOSE) || (LA116_1 >= BLANKS && LA116_1 <= 75))) {
alt116=1;
}
}
 else if (((LA116_0 >= FORCED_END_OF_LINE && LA116_0 <= WIKI) || LA116_0 == POUND || (LA116_0 >= EQUAL && LA116_0 <= ITAL) || (LA116_0 >= FORCED_LINEBREAK && LA116_0 <= LINK_CLOSE) || (LA116_0 >= BLANKS && LA116_0 <= 75))) {
alt116=1;
}
switch (alt116) {
case 1:
{
pushFollow(FOLLOW_image_bold_alternativepart_in_image_alternativepart3850);
t1=image_bold_alternativepart();
_fsp--;
if (failed) return item;
if (backtracking == 0) {
((image_alternativepart_scope)image_alternativepart_stack.peek()).elements.add(t1);
}
pushFollow(FOLLOW_onestar_in_image_alternativepart3855);
onestar();
_fsp--;
if (failed) return item;
}
break;
default :
if (cnt116 >= 1) break loop116;
if (backtracking > 0) {
failed=true;
return item;
}
EarlyExitException eee=new EarlyExitException(116,input);
throw eee;
}
cnt116++;
}
 while (true);
pushFollow(FOLLOW_bold_markup_in_image_alternativepart3862);
bold_markup();
_fsp--;
if (failed) return item;
if (backtracking == 0) {
item=new BoldTextNode(((image_alternativepart_scope)image_alternativepart_stack.peek()).elements);
}
}
break;
case 2:
{
pushFollow(FOLLOW_ital_markup_in_image_alternativepart3869);
ital_markup();
_fsp--;
if (failed) return item;
pushFollow(FOLLOW_onestar_in_image_alternativepart3872);
onestar();
_fsp--;
if (failed) return item;
int cnt117=0;
loop117: do {
int alt117=2;
int LA117_0=input.LA(1);
if (((LA117_0 >= FORCED_END_OF_LINE && LA117_0 <= WIKI) || (LA117_0 >= POUND && LA117_0 <= PIPE) || (LA117_0 >= FORCED_LINEBREAK && LA117_0 <= LINK_CLOSE)|| (LA117_0 >= BLANKS && LA117_0 <= 75))) {
alt117=1;
}
switch (alt117) {
case 1:
{
pushFollow(FOLLOW_image_ital_alternativepart_in_image_alternativepart3882);
t2=image_ital_alternativepart();
_fsp--;
if (failed) return item;
if (backtracking == 0) {
((image_alternativepart_scope)image_alternativepart_stack.peek()).elements.add(t2);
}
pushFollow(FOLLOW_onestar_in_image_alternativepart3887);
onestar();
_fsp--;
if (failed) return item;
}
break;
default :
if (cnt117 >= 1) break loop117;
if (backtracking > 0) {
failed=true;
return item;
}
EarlyExitException eee=new EarlyExitException(117,input);
throw eee;
}
cnt117++;
}
 while (true);
pushFollow(FOLLOW_ital_markup_in_image_alternativepart3894);
ital_markup();
_fsp--;
if (failed) return item;
if (backtracking == 0) {
item=new ItalicTextNode(((image_alternativepart_scope)image_alternativepart_stack.peek()).elements);
}
}
break;
case 3:
{
pushFollow(FOLLOW_onestar_in_image_alternativepart3901);
onestar();
_fsp--;
if (failed) return item;
int cnt118=0;
loop118: do {
int alt118=2;
int LA118_0=input.LA(1);
if (((LA118_0 >= FORCED_END_OF_LINE && LA118_0 <= WIKI) || LA118_0 == POUND || (LA118_0 >= EQUAL && LA118_0 <= PIPE) || (LA118_0 >= ESCAPE && LA118_0 <= LINK_CLOSE) || (LA118_0 >= BLANKS && LA118_0 <= 75))) {
alt118=1;
}
 else if ((LA118_0 == FORCED_LINEBREAK)) {
alt118=1;
}
switch (alt118) {
case 1:
{
pushFollow(FOLLOW_image_alternativetext_in_image_alternativepart3908);
t3=image_alternativetext();
_fsp--;
if (failed) return item;
if (backtracking == 0) {
for (ASTNode n : t3.getNodes()) {
((image_alternativepart_scope)image_alternativepart_stack.peek()).elements.add(n);
}
}
pushFollow(FOLLOW_onestar_in_image_alternativepart3913);
onestar();
_fsp--;
if (failed) return item;
}
break;
default :
if (cnt118 >= 1) break loop118;
if (backtracking > 0) {
failed=true;
return item;
}
EarlyExitException eee=new EarlyExitException(118,input);
throw eee;
}
cnt118++;
}
 while (true);
if (backtracking == 0) {
item=new UnformattedTextNode(((image_alternativepart_scope)image_alternativepart_stack.peek()).elements);
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
image_alternativepart_stack.pop();
}
return item;
}

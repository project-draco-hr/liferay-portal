{
  CollectionNode items=new CollectionNode();
  String t=null;
  ScapedNode e=null;
  try {
    int alt36=2;
    int LA36_0=input.LA(1);
    if (((LA36_0 >= FORCED_END_OF_LINE && LA36_0 <= WIKI) || (LA36_0 >= NOWIKI_BLOCK_CLOSE && LA36_0 <= 75))) {
      alt36=1;
    }
 else     if (((LA36_0 >= FORCED_LINEBREAK && LA36_0 <= ESCAPE))) {
      alt36=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return items;
      }
      NoViableAltException nvae=new NoViableAltException("200:1: text_first_unformatted returns [CollectionNode items = new CollectionNode()] : (t= text_first_unformmatted_text | ( forced_linebreak | e= escaped )+ );",36,0,input);
      throw nvae;
    }
switch (alt36) {
case 1:
{
        pushFollow(FOLLOW_text_first_unformmatted_text_in_text_first_unformatted932);
        t=text_first_unformmatted_text();
        _fsp--;
        if (failed)         return items;
        if (backtracking == 0) {
          items.add(new UnformattedTextNode(t));
        }
      }
    break;
case 2:
{
    int cnt35=0;
    loop35:     do {
      int alt35=3;
      int LA35_0=input.LA(1);
      if ((LA35_0 == FORCED_LINEBREAK)) {
        alt35=1;
      }
 else       if ((LA35_0 == ESCAPE)) {
        int LA35_3=input.LA(2);
        if ((LA35_3 == STAR)) {
          alt35=2;
        }
 else         if (((LA35_3 >= FORCED_END_OF_LINE && LA35_3 <= POUND) || (LA35_3 >= EQUAL && LA35_3 <= 75))) {
          alt35=2;
        }
      }
switch (alt35) {
case 1:
{
          pushFollow(FOLLOW_forced_linebreak_in_text_first_unformatted941);
          forced_linebreak();
          _fsp--;
          if (failed)           return items;
          if (backtracking == 0) {
            items.add(new ForcedEndOfLineNode());
          }
        }
      break;
case 2:
{
      pushFollow(FOLLOW_escaped_in_text_first_unformatted953);
      e=escaped();
      _fsp--;
      if (failed)       return items;
      if (backtracking == 0) {
        items.add(e);
      }
    }
  break;
default :
if (cnt35 >= 1) break loop35;
if (backtracking > 0) {
failed=true;
return items;
}
EarlyExitException eee=new EarlyExitException(35,input);
throw eee;
}
cnt35++;
}
 while (true);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return items;
}

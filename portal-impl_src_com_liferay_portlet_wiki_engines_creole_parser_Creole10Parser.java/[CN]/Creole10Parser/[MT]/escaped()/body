{
  ScapedNode scaped=new ScapedNode();
  Token c=null;
  try {
    int alt132=2;
    int LA132_0=input.LA(1);
    if ((LA132_0 == ESCAPE)) {
      int LA132_1=input.LA(2);
      if ((LA132_1 == STAR)) {
        int LA132_2=input.LA(3);
        if ((LA132_2 == STAR)) {
          alt132=1;
        }
 else         if ((LA132_2 == EOF || (LA132_2 >= FORCED_END_OF_LINE && LA132_2 <= POUND) || (LA132_2 >= EQUAL && LA132_2 <= 75))) {
          alt132=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return scaped;
          }
          NoViableAltException nvae=new NoViableAltException("660:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",132,2,input);
          throw nvae;
        }
      }
 else       if (((LA132_1 >= FORCED_END_OF_LINE && LA132_1 <= POUND) || (LA132_1 >= EQUAL && LA132_1 <= 75))) {
        alt132=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return scaped;
        }
        NoViableAltException nvae=new NoViableAltException("660:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",132,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return scaped;
      }
      NoViableAltException nvae=new NoViableAltException("660:1: escaped returns [ScapedNode scaped = new ScapedNode()] : ( ESCAPE STAR STAR | ESCAPE c= . );",132,0,input);
      throw nvae;
    }
switch (alt132) {
case 1:
{
        match(input,ESCAPE,FOLLOW_ESCAPE_in_escaped4346);
        if (failed)         return scaped;
        match(input,STAR,FOLLOW_STAR_in_escaped4349);
        if (failed)         return scaped;
        match(input,STAR,FOLLOW_STAR_in_escaped4352);
        if (failed)         return scaped;
        if (backtracking == 0) {
          scaped.setContent("**");
        }
      }
    break;
case 2:
{
    match(input,ESCAPE,FOLLOW_ESCAPE_in_escaped4359);
    if (failed)     return scaped;
    c=(Token)input.LT(1);
    matchAny(input);
    if (failed)     return scaped;
    if (backtracking == 0) {
      scaped.setContent(c.getText());
    }
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return scaped;
}

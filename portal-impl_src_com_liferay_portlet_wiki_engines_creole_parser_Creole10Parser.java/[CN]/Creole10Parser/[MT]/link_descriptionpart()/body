{
  link_descriptionpart_stack.push(new link_descriptionpart_scope());
  ASTNode text=null;
  ASTNode lb=null;
  ASTNode li=null;
  CollectionNode t=null;
  ((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element=new CollectionNode();
  try {
    int alt105=3;
switch (input.LA(1)) {
case STAR:
{
        int LA105_1=input.LA(2);
        if ((LA105_1 == STAR)) {
          alt105=1;
        }
 else         if (((LA105_1 >= FORCED_END_OF_LINE && LA105_1 <= WIKI) || LA105_1 == POUND || (LA105_1 >= EQUAL && LA105_1 <= PIPE) || (LA105_1 >= FORCED_LINEBREAK && LA105_1 <= NOWIKI_CLOSE) || (LA105_1 >= IMAGE_CLOSE && LA105_1 <= 75))) {
          alt105=3;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return text;
          }
          NoViableAltException nvae=new NoViableAltException("509:1: link_descriptionpart returns [ASTNode text = null] : ( bold_markup onestar (lb= link_bold_descriptionpart onestar )+ bold_markup | ital_markup onestar (li= link_ital_descriptionpart onestar )+ ital_markup | onestar (t= link_descriptiontext onestar )+ );",105,1,input);
          throw nvae;
        }
      }
    break;
case ITAL:
{
    alt105=2;
  }
break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case FORCED_LINEBREAK:
case ESCAPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
alt105=3;
}
break;
default :
if (backtracking > 0) {
failed=true;
return text;
}
NoViableAltException nvae=new NoViableAltException("509:1: link_descriptionpart returns [ASTNode text = null] : ( bold_markup onestar (lb= link_bold_descriptionpart onestar )+ bold_markup | ital_markup onestar (li= link_ital_descriptionpart onestar )+ ital_markup | onestar (t= link_descriptiontext onestar )+ );",105,0,input);
throw nvae;
}
switch (alt105) {
case 1:
{
pushFollow(FOLLOW_bold_markup_in_link_descriptionpart3331);
bold_markup();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3334);
onestar();
_fsp--;
if (failed) return text;
int cnt102=0;
loop102: do {
int alt102=2;
int LA102_0=input.LA(1);
if (((LA102_0 >= FORCED_END_OF_LINE && LA102_0 <= WIKI) || LA102_0 == POUND || (LA102_0 >= EQUAL && LA102_0 <= ITAL) || (LA102_0 >= FORCED_LINEBREAK && LA102_0 <= NOWIKI_CLOSE) || (LA102_0 >= IMAGE_CLOSE && LA102_0 <= 75))) {
alt102=1;
}
switch (alt102) {
case 1:
{
pushFollow(FOLLOW_link_bold_descriptionpart_in_link_descriptionpart3342);
lb=link_bold_descriptionpart();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(lb);
}
pushFollow(FOLLOW_onestar_in_link_descriptionpart3347);
onestar();
_fsp--;
if (failed) return text;
}
break;
default :
if (cnt102 >= 1) break loop102;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(102,input);
throw eee;
}
cnt102++;
}
 while (true);
if (backtracking == 0) {
text=new BoldTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
pushFollow(FOLLOW_bold_markup_in_link_descriptionpart3357);
bold_markup();
_fsp--;
if (failed) return text;
}
break;
case 2:
{
pushFollow(FOLLOW_ital_markup_in_link_descriptionpart3362);
ital_markup();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3365);
onestar();
_fsp--;
if (failed) return text;
int cnt103=0;
loop103: do {
int alt103=2;
int LA103_0=input.LA(1);
if (((LA103_0 >= FORCED_END_OF_LINE && LA103_0 <= WIKI) || (LA103_0 >= POUND && LA103_0 <= PIPE) || (LA103_0 >= FORCED_LINEBREAK && LA103_0 <= NOWIKI_CLOSE)|| (LA103_0 >= IMAGE_CLOSE && LA103_0 <= 75))) {
alt103=1;
}
switch (alt103) {
case 1:
{
pushFollow(FOLLOW_link_ital_descriptionpart_in_link_descriptionpart3374);
li=link_ital_descriptionpart();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(li);
}
pushFollow(FOLLOW_onestar_in_link_descriptionpart3379);
onestar();
_fsp--;
if (failed) return text;
}
break;
default :
if (cnt103 >= 1) break loop103;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(103,input);
throw eee;
}
cnt103++;
}
 while (true);
if (backtracking == 0) {
text=new ItalicTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
pushFollow(FOLLOW_ital_markup_in_link_descriptionpart3388);
ital_markup();
_fsp--;
if (failed) return text;
}
break;
case 3:
{
pushFollow(FOLLOW_onestar_in_link_descriptionpart3393);
onestar();
_fsp--;
if (failed) return text;
int cnt104=0;
loop104: do {
int alt104=2;
switch (input.LA(1)) {
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
alt104=1;
}
break;
case FORCED_LINEBREAK:
{
alt104=1;
}
break;
case ESCAPE:
{
alt104=1;
}
break;
}
switch (alt104) {
case 1:
{
pushFollow(FOLLOW_link_descriptiontext_in_link_descriptionpart3402);
t=link_descriptiontext();
_fsp--;
if (failed) return text;
pushFollow(FOLLOW_onestar_in_link_descriptionpart3405);
onestar();
_fsp--;
if (failed) return text;
if (backtracking == 0) {
((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element.add(t);
}
}
break;
default :
if (cnt104 >= 1) break loop104;
if (backtracking > 0) {
failed=true;
return text;
}
EarlyExitException eee=new EarlyExitException(104,input);
throw eee;
}
cnt104++;
}
 while (true);
if (backtracking == 0) {
text=new UnformattedTextNode(((link_descriptionpart_scope)link_descriptionpart_stack.peek()).element);
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
link_descriptionpart_stack.pop();
}
return text;
}

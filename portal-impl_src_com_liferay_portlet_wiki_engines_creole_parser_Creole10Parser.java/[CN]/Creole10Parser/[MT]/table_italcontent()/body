{
  CollectionNode items=new CollectionNode();
  ASTNode ti=null;
  try {
    int alt81=2;
    int LA81_0=input.LA(1);
    if (((LA81_0 >= FORCED_END_OF_LINE && LA81_0 <= WIKI) || (LA81_0 >= POUND && LA81_0 <= EQUAL) || (LA81_0 >= LINK_OPEN && LA81_0 <= 75))) {
      alt81=1;
    }
 else     if ((LA81_0 == EOF)) {
      alt81=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return items;
      }
      NoViableAltException nvae=new NoViableAltException("382:1: table_italcontent returns [CollectionNode items = new CollectionNode()] : ( onestar (ti= table_italcontentpart onestar )+ | EOF );",81,0,input);
      throw nvae;
    }
switch (alt81) {
case 1:
{
        pushFollow(FOLLOW_onestar_in_table_italcontent2202);
        onestar();
        _fsp--;
        if (failed)         return items;
        int cnt80=0;
        loop80:         do {
          int alt80=2;
switch (input.LA(1)) {
case STAR:
{
              alt80=1;
            }
          break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
          alt80=1;
        }
      break;
case FORCED_LINEBREAK:
{
      alt80=1;
    }
  break;
case ESCAPE:
{
  alt80=1;
}
break;
case LINK_OPEN:
{
alt80=1;
}
break;
case IMAGE_OPEN:
{
alt80=1;
}
break;
case EXTENSION:
{
alt80=1;
}
break;
case NOWIKI_OPEN:
{
alt80=1;
}
break;
}
switch (alt80) {
case 1:
{
pushFollow(FOLLOW_table_italcontentpart_in_table_italcontent2211);
ti=table_italcontentpart();
_fsp--;
if (failed) return items;
if (backtracking == 0) {
items.add(ti);
}
pushFollow(FOLLOW_onestar_in_table_italcontent2216);
onestar();
_fsp--;
if (failed) return items;
}
break;
default :
if (cnt80 >= 1) break loop80;
if (backtracking > 0) {
failed=true;
return items;
}
EarlyExitException eee=new EarlyExitException(80,input);
throw eee;
}
cnt80++;
}
 while (true);
}
break;
case 2:
{
match(input,EOF,FOLLOW_EOF_in_table_italcontent2224);
if (failed) return items;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return items;
}

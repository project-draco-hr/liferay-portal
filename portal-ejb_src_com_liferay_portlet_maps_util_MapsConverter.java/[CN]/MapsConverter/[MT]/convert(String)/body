{
  MapsAddress map=null;
  String street="";
  String city="";
  String state="";
  String zip="";
  try {
    street=_street;
    int pos=_csz.indexOf(StringPool.COMMA);
    if (pos != -1) {
      city=_csz.substring(0,pos).trim();
      state=_csz.substring(pos + 1,_csz.length()).trim();
    }
 else {
      zip=_csz;
    }
  }
 catch (  Exception e) {
    return map;
  }
  try {
    StringMaker url=new StringMaker();
    url.append("http://www.mapquest.com/maps/map.adp?country=US");
    url.append("&address=").append(Http.encodeURL(street));
    url.append("&city=").append(Http.encodeURL(city));
    url.append("&state=").append(Http.encodeURL(state));
    url.append("&zipcode=").append(Http.encodeURL(zip));
    String text=Http.URLtoString(url.toString());
    int mapDirectPos=text.indexOf("GetMapDataDirect=");
    if (mapDirectPos != -1) {
      mapDirectPos=mapDirectPos + 17;
    }
 else {
      return map;
    }
    String mapDirect=text.substring(mapDirectPos,text.indexOf("\"",mapDirectPos));
    mapDirect=Http.decodeURL(mapDirect);
    map=new MapsAddress(street,city,state,zip,mapDirect);
  }
 catch (  Exception e) {
    throw new ConverterException(e);
  }
  return map;
}

{
  Layout layout=addPersonalLayoutWithDefaultResource();
  Role powerUserRole=RoleLocalServiceUtil.getRole(TestPropsValues.getCompanyId(),RoleConstants.POWER_USER);
  Role userRole=RoleLocalServiceUtil.getRole(TestPropsValues.getCompanyId(),RoleConstants.USER);
  String primKey=PortletPermissionUtil.getPrimaryKey(layout.getPlid(),PortletKeys.DOCKBAR);
  ResourcePermission resourcePermission=ResourcePermissionLocalServiceUtil.fetchResourcePermission(TestPropsValues.getCompanyId(),PortletKeys.DOCKBAR,ResourceConstants.SCOPE_INDIVIDUAL,primKey,powerUserRole.getRoleId());
  Assert.assertNull(resourcePermission);
  resourcePermission=ResourcePermissionLocalServiceUtil.getResourcePermission(TestPropsValues.getCompanyId(),PortletKeys.DOCKBAR,ResourceConstants.SCOPE_INDIVIDUAL,primKey,userRole.getRoleId());
  Assert.assertTrue(resourcePermission.hasActionId(ActionKeys.VIEW));
  resourcePermission.setRoleId(powerUserRole.getRoleId());
  ResourcePermissionLocalServiceUtil.updateResourcePermission(resourcePermission);
  doVerify();
  resourcePermission=ResourcePermissionLocalServiceUtil.fetchResourcePermission(TestPropsValues.getCompanyId(),PortletKeys.DOCKBAR,ResourceConstants.SCOPE_INDIVIDUAL,primKey,powerUserRole.getRoleId());
  Assert.assertNull(resourcePermission);
  resourcePermission=ResourcePermissionLocalServiceUtil.getResourcePermission(TestPropsValues.getCompanyId(),PortletKeys.DOCKBAR,ResourceConstants.SCOPE_INDIVIDUAL,primKey,userRole.getRoleId());
  Assert.assertTrue(resourcePermission.hasActionId(ActionKeys.VIEW));
}

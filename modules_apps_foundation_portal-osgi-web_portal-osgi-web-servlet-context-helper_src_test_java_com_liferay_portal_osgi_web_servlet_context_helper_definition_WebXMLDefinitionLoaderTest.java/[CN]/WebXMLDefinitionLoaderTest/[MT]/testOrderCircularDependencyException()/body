{
  EntryLoaderMockBundle entryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web.xml");
  WebXMLDefinitionLoader webXMLDefinitionLoader=new WebXMLDefinitionLoader(entryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition webXMLDefinition=webXMLDefinitionLoader.loadWebXML(entryLoaderMockBundle.getEntry());
  EntryLoaderMockBundle circular1EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-circular-1.xml");
  WebXMLDefinitionLoader circular1WebXMLDefinitionLoader=new WebXMLDefinitionLoader(circular1EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition circular1WebXMLDefinition=circular1WebXMLDefinitionLoader.loadWebXML(circular1EntryLoaderMockBundle.getEntry());
  EntryLoaderMockBundle circular2EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-circular-2.xml");
  WebXMLDefinitionLoader circular2WebXMLDefinitionLoader=new WebXMLDefinitionLoader(circular2EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition circular2WebXMLDefinition=circular2WebXMLDefinitionLoader.loadWebXML(circular2EntryLoaderMockBundle.getEntry());
  List<WebXMLDefinition> webXMLDefinitions=new ArrayList<>();
  webXMLDefinitions.add(circular1WebXMLDefinition);
  webXMLDefinitions.add(circular2WebXMLDefinition);
  boolean exceptionThrown=false;
  try {
    OrderUtil.getOrderedWebXMLDefinitions(webXMLDefinitions,webXMLDefinition.getAbsoluteOrderNames());
  }
 catch (  Exception e) {
    if (e instanceof OrderCircularDependencyException) {
      exceptionThrown=true;
    }
  }
  Assert.assertTrue(exceptionThrown);
}

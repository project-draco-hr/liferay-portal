{
  EntryLoaderMockBundle bundle=new EntryLoaderMockBundle("dependencies/custom-web.xml");
  WebXMLDefinitionLoader webXMLDefinitionLoader=new WebXMLDefinitionLoader(bundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition webXMLDefinition=webXMLDefinitionLoader.loadWebXML(bundle.getEntry());
  EntryLoaderMockBundle bundleCircular1=new EntryLoaderMockBundle("dependencies/custom-web-fragment-circular1.xml");
  WebXMLDefinitionLoader fragmentCircular1Loader=new WebXMLDefinitionLoader(bundleCircular1,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragmentCircular1Definition=fragmentCircular1Loader.loadWebXML(bundleCircular1.getEntry());
  EntryLoaderMockBundle bundleCircular2=new EntryLoaderMockBundle("dependencies/custom-web-fragment-circular2.xml");
  WebXMLDefinitionLoader fragmentCircular2Loader=new WebXMLDefinitionLoader(bundleCircular2,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragmentCircular2Definition=fragmentCircular2Loader.loadWebXML(bundleCircular2.getEntry());
  List<WebXMLDefinition> definitions=new ArrayList<>();
  definitions.add(fragmentCircular1Definition);
  definitions.add(fragmentCircular2Definition);
  boolean exceptionThrown=false;
  try {
    OrderUtil.getWebXMLDefinitionOrder(definitions,webXMLDefinition.getAbsoluteOrderNames());
  }
 catch (  Exception e) {
    if (e instanceof OrderCircularDependencyException) {
      exceptionThrown=true;
    }
  }
  Assert.assertTrue(exceptionThrown);
}

{
  List<WebXMLDefinition> webXMLDefinitions=new ArrayList<>();
  EntryLoaderMockBundle fragment5EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-5.xml");
  WebXMLDefinitionLoader fragment5WebXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment5EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment5WebXMLDefinition=fragment5WebXMLDefinitionLoader.loadWebXML(fragment5EntryLoaderMockBundle.getEntry());
  webXMLDefinitions.add(fragment5WebXMLDefinition);
  EntryLoaderMockBundle entryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web.xml");
  WebXMLDefinitionLoader webXMLDefinitionLoader=new WebXMLDefinitionLoader(entryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition webXMLDefinition=webXMLDefinitionLoader.loadWebXML(entryLoaderMockBundle.getEntry());
  boolean threwOrderBeforeAndAfterException=false;
  try {
    OrderUtil.getOrderedWebXMLDefinitions(webXMLDefinitions,webXMLDefinition.getAbsoluteOrderNames());
  }
 catch (  Exception e) {
    if (e instanceof OrderBeforeAndAfterException) {
      threwOrderBeforeAndAfterException=true;
    }
  }
  Assert.assertTrue(threwOrderBeforeAndAfterException);
}

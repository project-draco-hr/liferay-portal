{
  EntryLoaderMockBundle entryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web.xml");
  WebXMLDefinitionLoader webXMLDefinitionLoader=new WebXMLDefinitionLoader(entryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition webXMLDefinition=webXMLDefinitionLoader.loadWebXML(entryLoaderMockBundle.getEntry());
  EntryLoaderMockBundle fragment1EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-1.xml");
  WebXMLDefinitionLoader fragment1WebXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment1EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment1WebXMLDefinition=fragment1WebXMLDefinitionLoader.loadWebXML(fragment1EntryLoaderMockBundle.getEntry());
  EntryLoaderMockBundle fragment2EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-2.xml");
  WebXMLDefinitionLoader fragment2webXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment2EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment2webXMLDefinition=fragment2webXMLDefinitionLoader.loadWebXML(fragment2EntryLoaderMockBundle.getEntry());
  EntryLoaderMockBundle fragment4EntryLoaderMockBundle=new EntryLoaderMockBundle("dependencies/custom-web-fragment-4.xml");
  WebXMLDefinitionLoader fragment4WebXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment4EntryLoaderMockBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment4WebXMLDefinition=fragment4WebXMLDefinitionLoader.loadWebXML(fragment4EntryLoaderMockBundle.getEntry());
  List<WebXMLDefinition> webXMLDefinitions=new ArrayList<>();
  webXMLDefinitions.add(fragment2webXMLDefinition);
  webXMLDefinitions.add(fragment1WebXMLDefinition);
  webXMLDefinitions.add(fragment4WebXMLDefinition);
  List<WebXMLDefinition> sortedDefinitions=OrderUtil.getOrderedWebXMLDefinitions(webXMLDefinitions,webXMLDefinition.getAbsoluteOrderNames());
  Assert.assertEquals(3,sortedDefinitions.size());
  WebXMLDefinition firstDefinition=sortedDefinitions.get(0);
  Assert.assertEquals("fragment4",firstDefinition.getFragmentName());
  WebXMLDefinition secondDefinition=sortedDefinitions.get(1);
  Assert.assertEquals("fragment1",secondDefinition.getFragmentName());
  WebXMLDefinition thirdDefinition=sortedDefinitions.get(2);
  Assert.assertEquals("fragment2",thirdDefinition.getFragmentName());
}

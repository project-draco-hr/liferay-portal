{
  List<WebXMLDefinition> webXMLDefinitions=new ArrayList<>();
  TestBundle fragment1TestBundle=new TestBundle("dependencies/custom-web-fragment-1.xml");
  WebXMLDefinitionLoader fragment1WebXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment1TestBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment1WebXMLDefinition=fragment1WebXMLDefinitionLoader.loadWebXML(fragment1TestBundle.getEntry());
  webXMLDefinitions.add(fragment1WebXMLDefinition);
  TestBundle fragment3TestBundle=new TestBundle("dependencies/custom-web-fragment-3.xml");
  WebXMLDefinitionLoader fragment3WebXMLDefinitionLoader=new WebXMLDefinitionLoader(fragment3TestBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition fragment3WebXMLDefinition=fragment3WebXMLDefinitionLoader.loadWebXML(fragment3TestBundle.getEntry());
  webXMLDefinitions.add(fragment3WebXMLDefinition);
  TestBundle testBundle=new TestBundle("dependencies/custom-web.xml");
  WebXMLDefinitionLoader webXMLDefinitionLoader=new WebXMLDefinitionLoader(testBundle,SAXParserFactory.newInstance(),new Logger(null));
  WebXMLDefinition webXMLDefinition=webXMLDefinitionLoader.loadWebXML(testBundle.getEntry());
  List<WebXMLDefinition> orderedWebXMLDefinitions=OrderUtil.getOrderedWebXMLDefinitions(webXMLDefinitions,webXMLDefinition.getAbsoluteOrderingNames());
  Assert.assertEquals(2,orderedWebXMLDefinitions.size());
  WebXMLDefinition firstWebXMLDefinition=orderedWebXMLDefinitions.get(0);
  Assert.assertEquals("fragment1",firstWebXMLDefinition.getFragmentName());
  WebXMLDefinition secondWebXMLDefinition=orderedWebXMLDefinitions.get(1);
  Assert.assertEquals("fragment3",secondWebXMLDefinition.getFragmentName());
}

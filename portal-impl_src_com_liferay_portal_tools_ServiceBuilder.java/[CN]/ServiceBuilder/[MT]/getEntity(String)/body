{
  int pos=name.lastIndexOf(".");
  if (pos == -1) {
    pos=_ejbList.indexOf(new Entity(name));
    return (Entity)_ejbList.get(pos);
  }
 else {
    String refPackage=name.substring(0,pos);
    String refPackageDir=StringUtil.replace(refPackage,".","/");
    String refEntity=name.substring(pos + 1,name.length());
    String refFileName=_implDir + "/" + refPackageDir+ "/service.xml";
    File refFile=new File(refFileName);
    boolean useTempFile=false;
    if (!refFile.exists()) {
      refFileName=Time.getTimestamp();
      refFile=new File(refFileName);
      ClassLoader classLoader=getClass().getClassLoader();
      FileUtil.write(refFileName,StringUtil.read(classLoader,refPackageDir + "/service.xml"));
      useTempFile=true;
    }
    ServiceBuilder serviceBuilder=new ServiceBuilder(refFileName,_hbmFileName,_modelHintsFileName,_springFileName,_springDataSourceFileName,_apiDir,_implDir,_jsonFileName,_sqlDir,_sqlFileName,_autoNamespaceTables,_baseModelImplPackage,_basePersistencePackage,_beanLocatorUtilPackage,_principalBeanPackage,_propsUtilPackage,_springHibernatePackage,_springUtilPackage,false);
    Entity entity=serviceBuilder.getEntity(refEntity);
    if (useTempFile) {
      refFile.deleteOnExit();
    }
    return entity;
  }
}

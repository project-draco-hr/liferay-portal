{
  List regularColList=entity.getRegularColList();
  StringMaker sm=new StringMaker();
  sm.append("package " + _packagePath + ".service.http;");
  sm.append("import " + _packagePath + ".model."+ entity.getName()+ ";");
  sm.append("import com.liferay.util.JSONUtil;");
  sm.append("import java.util.Date;");
  sm.append("import java.util.List;");
  sm.append("import org.json.JSONArray;");
  sm.append("import org.json.JSONObject;");
  sm.append("public class " + entity.getName() + "JSONSerializer {");
  sm.append("public static JSONObject toJSONObject(" + entity.getName() + " model) {");
  sm.append("JSONObject jsonObj = new JSONObject();");
  for (int i=0; i < regularColList.size(); i++) {
    EntityColumn col=(EntityColumn)regularColList.get(i);
    sm.append("JSONUtil.put(jsonObj, \"" + col.getName() + "\", model.get"+ col.getMethodName()+ "());");
  }
  sm.append("return jsonObj;");
  sm.append("}");
  sm.append("public static JSONArray toJSONArray(List models) {");
  sm.append("JSONArray jsonArray = new JSONArray();");
  sm.append("for (int i = 0; i < models.size(); i++) {");
  sm.append(entity.getName() + " model = (" + entity.getName()+ ")models.get(i);");
  sm.append("jsonArray.put(toJSONObject(model));");
  sm.append("}");
  sm.append("return jsonArray;");
  sm.append("}");
  sm.append("}");
  File ejbFile=new File(_outputPath + "/service/http/" + entity.getName()+ "JSONSerializer.java");
  Map jalopySettings=new HashMap();
  String[] classComments={_DEFAULT_CLASS_COMMENTS,"This class is used by <code>" + _packagePath + ".service.http."+ entity.getName()+ "ServiceJSON</code> to translate objects."};
  String[] see={_packagePath + ".service.http." + entity.getName()+ "ServiceJSON"};
  jalopySettings.put("classComments",classComments);
  jalopySettings.put("see",see);
  writeFile(ejbFile,sm.toString(),jalopySettings);
}

{
  if (!entity.hasFinderClass()) {
    return;
  }
  JavaClass javaClass=_getJavaClass(_outputPath + "/service/persistence/" + entity.getName()+ "FinderImpl.java");
  JavaMethod[] methods=javaClass.getMethods();
  StringMaker sm=new StringMaker();
  sm.append("package " + _packagePath + ".service.persistence;");
  sm.append("public class " + entity.getName() + "FinderUtil {");
  for (int i=0; i < methods.length; i++) {
    JavaMethod javaMethod=methods[i];
    String methodName=javaMethod.getName();
    if (!javaMethod.isConstructor() && javaMethod.isPublic()) {
      sm.append("public static " + javaMethod.getReturns().getValue() + _getDimensions(javaMethod.getReturns())+ " "+ methodName+ "(");
      JavaParameter[] parameters=javaMethod.getParameters();
      String p0Name="";
      if (parameters.length > 0) {
        p0Name=parameters[0].getName();
      }
      for (int j=0; j < parameters.length; j++) {
        JavaParameter javaParameter=parameters[j];
        sm.append(javaParameter.getType().getValue() + _getDimensions(javaParameter.getType()) + " "+ javaParameter.getName());
        if ((j + 1) != parameters.length) {
          sm.append(", ");
        }
      }
      sm.append(")");
      Type[] thrownExceptions=javaMethod.getExceptions();
      if (thrownExceptions.length > 0) {
        sm.append(" throws ");
        for (int j=0; j < thrownExceptions.length; j++) {
          Type thrownException=thrownExceptions[j];
          sm.append(thrownException.getValue());
          if ((j + 1) != thrownExceptions.length) {
            sm.append(", ");
          }
        }
      }
      sm.append(" {");
      if (!javaMethod.getReturns().getValue().equals("void")) {
        sm.append("return ");
      }
      sm.append("getFinder()." + methodName + "(");
      for (int j=0; j < parameters.length; j++) {
        JavaParameter javaParameter=parameters[j];
        sm.append(javaParameter.getName());
        if ((j + 1) != parameters.length) {
          sm.append(", ");
        }
      }
      sm.append(");");
      sm.append("}");
    }
  }
  sm.append("public static " + entity.getName() + "Finder getFinder() {");
  sm.append("return _getUtil()._finder;");
  sm.append("}");
  sm.append("public void setFinder(" + entity.getName() + "Finder finder) {");
  sm.append("_finder = finder;");
  sm.append("}");
  sm.append("private static " + entity.getName() + "FinderUtil _getUtil() {");
  sm.append("if (_util == null) {");
  sm.append("_util = (" + entity.getName() + "FinderUtil)"+ _beanLocatorUtilPackage+ ".BeanLocatorUtil.locate(_UTIL);");
  sm.append("}");
  sm.append("return _util;");
  sm.append("}");
  sm.append("private static final String _UTIL = " + entity.getName() + "FinderUtil.class.getName();");
  sm.append("private static " + entity.getName() + "FinderUtil _util;");
  sm.append("private " + entity.getName() + "Finder _finder;");
  sm.append("}");
  File ejbFile=new File(_serviceOutputPath + "/service/persistence/" + entity.getName()+ "FinderUtil.java");
  writeFile(ejbFile,sm.toString());
}

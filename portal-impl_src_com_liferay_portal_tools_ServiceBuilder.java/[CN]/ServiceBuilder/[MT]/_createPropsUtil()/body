{
  if (_propsUtilPackage.equals("com.liferay.portal.util")) {
    return;
  }
  StringMaker sm=new StringMaker();
  sm.append("package " + _propsUtilPackage + ";");
  sm.append("import com.germinus.easyconf.ComponentProperties;");
  sm.append("import com.liferay.util.ExtPropertiesLoader;");
  sm.append("import java.util.Properties;");
  sm.append("public class PropsUtil {");
  sm.append("public static final String SPRING_CONFIGS = \"spring.configs\";");
  sm.append("public static final String SPRING_HIBERNATE_DATA_SOURCE = \"spring.hibernate.data.source\";");
  sm.append("public static final String SPRING_HIBERNATE_SESSION_FACTORY = \"spring.hibernate.session.factory\";");
  sm.append("public static final String HIBERNATE_CONFIGS = \"hibernate.configs\";");
  sm.append("public static final String VALUE_OBJECT_FINDER_CACHE_ENABLED = \"value.object.finder.cache.enabled\";");
  sm.append("public static final String XSS_ALLOW = \"xss.allow\";");
  sm.append("public static boolean containsKey(String key) {");
  sm.append("return _getInstance().containsKey(key);");
  sm.append("}");
  sm.append("public static String get(String key) {");
  sm.append("return _getInstance().get(key);");
  sm.append("}");
  sm.append("public static void set(String key, String value) {");
  sm.append("_getInstance().set(key, value);");
  sm.append("}");
  sm.append("public static String[] getArray(String key) {");
  sm.append("return _getInstance().getArray(key);");
  sm.append("}");
  sm.append("public static Properties getProperties() {");
  sm.append("return _getInstance().getProperties();");
  sm.append("}");
  sm.append("public static ComponentProperties getComponentProperties() {");
  sm.append("return _getInstance().getComponentProperties();");
  sm.append("}");
  sm.append("private static ExtPropertiesLoader _getInstance() {");
  sm.append("return ExtPropertiesLoader.getInstance(\"portlet-service\");");
  sm.append("}");
  sm.append("}");
  File ejbFile=new File(_implDir + "/" + StringUtil.replace(_propsUtilPackage,".","/")+ "/PropsUtil.java");
  writeFile(ejbFile,sm.toString());
}

{
  List pkList=entity.getPKList();
  StringMaker sm=new StringMaker();
  sm.append("package " + _packagePath + ".service.persistence;");
  sm.append("import com.liferay.portal.kernel.util.DateUtil;");
  sm.append("import com.liferay.portal.kernel.util.StringMaker;");
  sm.append("import com.liferay.portal.kernel.util.StringPool;");
  sm.append("import java.io.Serializable;");
  sm.append("import java.util.Date;");
  sm.append("public class " + entity.getPKClassName() + " implements Comparable, Serializable {");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sm.append("public " + col.getType() + " "+ col.getName()+ ";");
  }
  sm.append("public " + entity.getPKClassName() + "() {}");
  sm.append("public " + entity.getPKClassName() + "(");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sm.append(col.getType() + " " + col.getName());
    if ((i + 1) != pkList.size()) {
      sm.append(", ");
    }
  }
  sm.append(") {");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sm.append("this." + col.getName() + " = "+ col.getName()+ ";");
  }
  sm.append("}");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (!col.isCollection()) {
      sm.append("public " + col.getType() + " get"+ col.getMethodName()+ "() {");
      sm.append("return " + col.getName() + ";");
      sm.append("}");
      sm.append("public void set" + col.getMethodName() + "("+ col.getType()+ " "+ col.getName()+ ") {");
      sm.append("this." + col.getName() + " = "+ col.getName()+ ";");
      sm.append("}");
    }
  }
  sm.append("public int compareTo(Object obj) {");
  sm.append("if (obj == null) {");
  sm.append("return -1;");
  sm.append("}");
  sm.append(entity.getPKClassName() + " pk = (" + entity.getPKClassName()+ ")obj;");
  sm.append("int value = 0;");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    String colType=col.getType();
    if (!col.isPrimitiveType()) {
      if (colType.equals("Date")) {
        sm.append("value = DateUtil.compareTo(" + col.getName() + ", pk."+ col.getName()+ ");");
      }
 else {
        sm.append("value = " + col.getName() + ".compareTo(pk."+ col.getName()+ ");");
      }
    }
 else {
      if (colType.equals("boolean")) {
        sm.append("if (!" + col.getName() + " && pk."+ col.getName()+ ") {");
        sm.append("value = -1;");
        sm.append("}");
        sm.append("else if (" + col.getName() + " && !pk."+ col.getName()+ ") {");
        sm.append("value = 1;");
        sm.append("}");
        sm.append("else {");
        sm.append("value = 0;");
        sm.append("}");
      }
 else {
        sm.append("if (" + col.getName() + " < pk."+ col.getName()+ ") {");
        sm.append("value = -1;");
        sm.append("}");
        sm.append("else if (" + col.getName() + " > pk."+ col.getName()+ ") {");
        sm.append("value = 1;");
        sm.append("}");
        sm.append("else {");
        sm.append("value = 0;");
        sm.append("}");
      }
    }
    sm.append("if (value != 0) {");
    sm.append("return value;");
    sm.append("}");
  }
  sm.append("return 0;");
  sm.append("}");
  sm.append("public boolean equals(Object obj) {");
  sm.append("if (obj == null) {");
  sm.append("return false;");
  sm.append("}");
  sm.append(entity.getPKClassName() + " pk = null;");
  sm.append("try {");
  sm.append("pk = (" + entity.getPKClassName() + ")obj;");
  sm.append("}");
  sm.append("catch (ClassCastException cce) {");
  sm.append("return false;");
  sm.append("}");
  sm.append("if (");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (!col.isPrimitiveType()) {
      sm.append("(" + col.getName() + ".equals(pk."+ col.getName()+ "))");
    }
 else {
      sm.append("(" + col.getName() + " == pk."+ col.getName()+ ")");
    }
    if ((i + 1) != pkList.size()) {
      sm.append(" && ");
    }
  }
  sm.append(") {");
  sm.append("return true;");
  sm.append("} else {");
  sm.append("return false;");
  sm.append("}");
  sm.append("}");
  sm.append("public int hashCode() {");
  sm.append("return (");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    if (i != 0) {
      sm.append(" + ");
    }
    if (!col.isPrimitiveType() && !col.getType().equals("String")) {
      sm.append(col.getName() + ".toString()");
    }
 else {
      sm.append("String.valueOf(" + col.getName() + ")");
    }
  }
  sm.append(").hashCode();");
  sm.append("}");
  sm.append("public String toString() {");
  sm.append("StringMaker sm = new StringMaker();");
  sm.append("sm.append(StringPool.OPEN_CURLY_BRACE);");
  for (int i=0; i < pkList.size(); i++) {
    EntityColumn col=(EntityColumn)pkList.get(i);
    sm.append("sm.append(\"" + col.getName() + "\");");
    sm.append("sm.append(StringPool.EQUAL);");
    sm.append("sm.append(" + col.getName() + ");");
    if ((i + 1) != pkList.size()) {
      sm.append("sm.append(StringPool.COMMA);");
      sm.append("sm.append(StringPool.SPACE);");
    }
  }
  sm.append("sm.append(StringPool.CLOSE_CURLY_BRACE);");
  sm.append("return sm.toString();");
  sm.append("}");
  sm.append("}");
  File ejbFile=new File(_serviceOutputPath + "/service/persistence/" + entity.getPKClassName()+ ".java");
  writeFile(ejbFile,sm.toString());
  if (Validator.isNotNull(_serviceDir)) {
    ejbFile=new File(_outputPath + "/service/persistence/" + entity.getPKClassName()+ ".java");
    if (ejbFile.exists()) {
      System.out.println("Relocating " + ejbFile);
      ejbFile.delete();
    }
  }
}

{
  StringMaker sm=new StringMaker();
  Document doc=PortalUtil.readDocumentFromFile(new File(_springFileName),true);
  Iterator itr=doc.getRootElement().elements("bean").iterator();
  while (itr.hasNext()) {
    Element beanEl=(Element)itr.next();
    String beanId=beanEl.attributeValue("id");
    if (beanId.endsWith("ServiceFactory") && !beanId.endsWith("LocalServiceFactory")) {
      String serviceName=beanId.substring(0,beanId.length() - 7);
      String serviceMapping=serviceName;
      serviceMapping=StringUtil.replace(serviceMapping,".service.",".service.spring.");
      serviceMapping=StringUtil.replace(serviceMapping,".","_");
      Map context=_getContext();
      context.put("serviceName",serviceName);
      context.put("serviceMapping",serviceMapping);
      sm.append(_processTemplate(_tplRemotingXml,context));
    }
  }
  File outputFile=new File(_remotingFileName);
  if (!outputFile.exists()) {
    return;
  }
  String content=FileUtil.read(outputFile);
  String newContent=content;
  int x=content.indexOf("<bean ");
  int y=content.lastIndexOf("</bean>") + 8;
  if (x != -1) {
    newContent=content.substring(0,x - 1) + sm.toString() + content.substring(y,content.length());
  }
 else {
    x=content.indexOf("</beans>");
    newContent=content.substring(0,x) + sm.toString() + content.substring(x,content.length());
  }
  newContent=_formatXML(newContent);
  if (!content.equals(newContent)) {
    FileUtil.write(outputFile,newContent);
    System.out.println(outputFile.toString());
  }
}

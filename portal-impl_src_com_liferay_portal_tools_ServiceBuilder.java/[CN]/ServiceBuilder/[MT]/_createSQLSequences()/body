{
  if (!FileUtil.exists(_sqlDir)) {
    return;
  }
  File sqlFile=new File(_sqlDir + "/sequences.sql");
  if (!sqlFile.exists()) {
    FileUtil.write(sqlFile,"");
  }
  Set sequenceSQLs=new TreeSet();
  BufferedReader br=new BufferedReader(new FileReader(sqlFile));
  while (true) {
    String sequenceSQL=br.readLine();
    if (sequenceSQL == null) {
      break;
    }
    if (Validator.isNotNull(sequenceSQL)) {
      sequenceSQLs.add(sequenceSQL);
    }
  }
  br.close();
  for (int i=0; i < _ejbList.size(); i++) {
    Entity entity=(Entity)_ejbList.get(i);
    List columnList=entity.getColumnList();
    for (int j=0; j < columnList.size(); j++) {
      EntityColumn column=(EntityColumn)columnList.get(j);
      if ("sequence".equals(column.getIdType())) {
        StringMaker sm=new StringMaker();
        String sequenceName=column.getIdParam();
        if (sequenceName.length() > 30) {
          sequenceName=sequenceName.substring(0,30);
        }
        sm.append("create sequence " + sequenceName + ";");
        String sequenceSQL=sm.toString();
        if (!sequenceSQLs.contains(sequenceSQL)) {
          sequenceSQLs.add(sequenceSQL);
        }
      }
    }
  }
  StringMaker sm=new StringMaker();
  Iterator itr=sequenceSQLs.iterator();
  while (itr.hasNext()) {
    String sequenceSQL=(String)itr.next();
    sm.append(sequenceSQL);
    if (itr.hasNext()) {
      sm.append("\n");
    }
  }
  FileUtil.write(sqlFile,sm.toString(),true);
}

{
  long start=0;
  if (_log.isDebugEnabled()) {
    start=System.currentTimeMillis();
  }
  if ((Validator.isNull(actionId)) || (resourceIds == null) || (resourceIds.length == 0)) {
    return false;
  }
  List permissions=PermissionFinder.findByA_R(actionId,resourceIds);
  if (permissions.size() == 0) {
    return false;
  }
  String resourceId=resourceIds[0];
  start=logHasUserPermissions(userId,actionId,resourceId,start,1);
  List userGroups=new ArrayList();
  if (Validator.isNotNull(groupId)) {
    if (permissionCheckerBag.hasGroup(groupId)) {
      userGroups.add(GroupUtil.findByPrimaryKey(groupId));
    }
  }
  List userOrgs=permissionCheckerBag.getUserOrgs();
  List userOrgGroups=permissionCheckerBag.getUserOrgGroups();
  List userUserGroupGroups=permissionCheckerBag.getUserUserGroupGroups();
  List groups=new ArrayList(userGroups.size() + userOrgGroups.size() + userUserGroupGroups.size());
  groups.addAll(userGroups);
  groups.addAll(userOrgGroups);
  groups.addAll(userUserGroupGroups);
  start=logHasUserPermissions(userId,actionId,resourceId,start,3);
  if (checkOrgGroupPermission(userOrgs,userGroups,permissions)) {
    return true;
  }
  start=logHasUserPermissions(userId,actionId,resourceId,start,4);
  if (PermissionFinder.containsPermissions(permissions,userId,groups)) {
    return true;
  }
  start=logHasUserPermissions(userId,actionId,resourceId,start,5);
  return false;
}

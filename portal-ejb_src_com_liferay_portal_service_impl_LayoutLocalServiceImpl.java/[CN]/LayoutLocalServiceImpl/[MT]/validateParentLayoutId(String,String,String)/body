{
  Layout layout=LayoutUtil.findByPrimaryKey(new LayoutPK(layoutId,ownerId));
  if (!parentLayoutId.equals(layout.getParentLayoutId())) {
    if (parentLayoutId.equals(LayoutImpl.DEFAULT_PARENT_LAYOUT_ID)) {
      return;
    }
    Layout parentLayout=LayoutUtil.findByPrimaryKey(new LayoutPK(parentLayoutId,layout.getOwnerId()));
    if (!PortalUtil.isLayoutParentable(parentLayout)) {
      throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.NOT_PARENTABLE);
    }
    if (isDescendant(layout,parentLayoutId)) {
      throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.SELF_DESCENDANT);
    }
    if (layout.getParentLayoutId().equals(LayoutImpl.DEFAULT_PARENT_LAYOUT_ID)) {
      List layouts=LayoutUtil.findByO_P(ownerId,LayoutImpl.DEFAULT_PARENT_LAYOUT_ID);
      String firstLayoutId=((Layout)layouts.get(0)).getLayoutId();
      if (firstLayoutId.equals(layoutId)) {
        Layout secondLayout=(Layout)layouts.get(1);
        try {
          validateFirstLayout(secondLayout.getType(),secondLayout.getHidden());
        }
 catch (        LayoutHiddenException lhe) {
          throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.FIRST_LAYOUT_HIDDEN);
        }
catch (        LayoutTypeException lte) {
          throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.FIRST_LAYOUT_TYPE);
        }
      }
    }
  }
}

{
  Element userPermissionsEl=DocumentHelper.createElement("user-permissions");
  List users=UserLocalServiceUtil.getGroupUsers(groupId);
  for (int i=0; i < users.size(); i++) {
    User user=(User)users.get(i);
    String emailAddress=user.getEmailAddress();
    Element userActionsEl=userPermissionsEl.addElement("user-actions");
    try {
      Resource resource=ResourceLocalServiceUtil.getResource(companyId,resourceName,ResourceImpl.SCOPE_INDIVIDUAL,resourcePrimKey);
      List permissions=PermissionLocalServiceUtil.getUserPermissions(user.getUserId(),resource.getResourceId());
      List actions=ResourceActionsUtil.getActions(permissions);
      for (int j=0; j < actions.size(); j++) {
        String action=(String)actions.get(j);
        Element actionKeyEl=userActionsEl.addElement("action-key");
        actionKeyEl.addText(action);
      }
    }
 catch (    NoSuchResourceException nsre) {
      if (_log.isWarnEnabled()) {
        _log.warn(nsre.getMessage());
      }
    }
    if (userActionsEl.elements().isEmpty()) {
      userPermissionsEl.remove(userActionsEl);
    }
 else {
      userActionsEl.addAttribute("email-address",emailAddress);
    }
  }
  if (!userPermissionsEl.elements().isEmpty()) {
    parentEl.add(userPermissionsEl);
  }
}

{
  Layout layout=LayoutUtil.findByG_P_L(groupId,privateLayout,layoutId);
  if (layout.getPriority() == priority) {
    return layout;
  }
  boolean lessThan=false;
  if (layout.getPriority() < priority) {
    lessThan=true;
  }
  layout.setPriority(priority);
  LayoutUtil.update(layout);
  priority=0;
  List layouts=LayoutUtil.findByG_P_P(groupId,privateLayout,layout.getParentLayoutId());
  Collections.sort(layouts,new LayoutPriorityComparator(layout,lessThan));
  Iterator itr=layouts.iterator();
  while (itr.hasNext()) {
    Layout curLayout=(Layout)itr.next();
    curLayout.setPriority(priority++);
    LayoutUtil.update(curLayout);
    if (curLayout.equals(layout)) {
      layout=curLayout;
    }
  }
  return layout;
}

{
  if (layoutIds == null) {
    return;
  }
  if (parentLayoutId.equals(Layout.DEFAULT_PARENT_LAYOUT_ID)) {
    if (layoutIds.length < 1) {
      throw new RequiredLayoutException(RequiredLayoutException.AT_LEAST_ONE);
    }
    Layout layout=LayoutUtil.findByPrimaryKey(new LayoutPK(layoutIds[0],ownerId));
    if (!layout.getType().equals(Layout.TYPE_PORTLET)) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_TYPE);
    }
    if (layout.isHidden()) {
      throw new RequiredLayoutException(RequiredLayoutException.FIRST_LAYOUT_HIDDEN);
    }
  }
  Set layoutIdsSet=new LinkedHashSet();
  for (int i=0; i < layoutIds.length; i++) {
    layoutIdsSet.add(layoutIds[i]);
  }
  Set newLayoutIdsSet=CollectionFactory.getHashSet();
  Iterator itr=LayoutUtil.findByO_P(ownerId,parentLayoutId).iterator();
  while (itr.hasNext()) {
    Layout layout=(Layout)itr.next();
    if (!layoutIdsSet.contains(layout.getLayoutId())) {
      deleteLayout(layout,true);
    }
 else {
      newLayoutIdsSet.add(layout.getLayoutId());
    }
  }
  int priority=0;
  itr=layoutIdsSet.iterator();
  while (itr.hasNext()) {
    String layoutId=(String)itr.next();
    Layout layout=LayoutUtil.findByPrimaryKey(new LayoutPK(layoutId,ownerId));
    layout.setPriority(priority++);
    LayoutUtil.update(layout);
  }
  LayoutSetLocalServiceUtil.updatePageCount(ownerId);
}

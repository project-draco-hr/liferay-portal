{
  String ownerId=null;
  if (privateLayout) {
    ownerId=LayoutImpl.PRIVATE + groupId;
  }
 else {
    ownerId=LayoutImpl.PUBLIC + groupId;
  }
  String layoutId=getNextLayoutId(ownerId);
  User user=UserUtil.findByPrimaryKey(userId);
  parentLayoutId=getParentLayoutId(ownerId,parentLayoutId);
  int priority=getNextPriority(ownerId,parentLayoutId);
  validate(layoutId,ownerId,parentLayoutId,name,type,hidden,friendlyURL);
  Layout layout=LayoutUtil.create(new LayoutPK(layoutId,ownerId));
  layout.setCompanyId(user.getCompanyId());
  layout.setParentLayoutId(parentLayoutId);
  layout.setName(name,null);
  layout.setTitle(title,null);
  layout.setType(type);
  layout.setHidden(hidden);
  layout.setFriendlyURL(friendlyURL);
  layout.setPriority(priority);
  LayoutUtil.update(layout);
  ResourceLocalServiceUtil.addResources(user.getCompanyId(),groupId,user.getUserId(),Layout.class.getName(),layout.getPrimaryKey().toString(),false,true,true);
  LayoutSetLocalServiceUtil.updatePageCount(ownerId);
  return layout;
}

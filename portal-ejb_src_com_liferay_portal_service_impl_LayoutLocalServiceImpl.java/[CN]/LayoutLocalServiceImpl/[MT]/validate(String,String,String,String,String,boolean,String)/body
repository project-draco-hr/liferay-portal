{
  boolean firstLayout=false;
  if (parentLayoutId.equals(Layout.DEFAULT_PARENT_LAYOUT_ID)) {
    List layouts=LayoutUtil.findByO_P(ownerId,parentLayoutId);
    if (layouts.size() == 0) {
      firstLayout=true;
    }
 else {
      String firstLayoutId=((Layout)layouts.get(0)).getLayoutId();
      if (firstLayoutId.equals(layoutId)) {
        firstLayout=true;
      }
    }
  }
  if (firstLayout) {
    validateFirstLayout(type,hidden);
  }
  if (Validator.isNull(name) || name.endsWith(StringPool.STAR)) {
    throw new LayoutNameException();
  }
  if (!PortalUtil.isLayoutParentable(type)) {
    if (LayoutUtil.countByO_P(ownerId,layoutId) > 0) {
      throw new LayoutTypeException(LayoutTypeException.NOT_PARENTABLE);
    }
  }
  if (Validator.isNotNull(friendlyURL)) {
    int exceptionType=LayoutFriendlyURLException.validate(friendlyURL);
    if (exceptionType != -1) {
      throw new LayoutFriendlyURLException(exceptionType);
    }
    try {
      Layout layout=LayoutUtil.findByO_F(ownerId,friendlyURL);
      if (!layout.getLayoutId().equals(layoutId)) {
        throw new LayoutFriendlyURLException(LayoutFriendlyURLException.DUPLICATE);
      }
    }
 catch (    NoSuchLayoutException nsle) {
    }
    Map portletPlugins=PortletLocalServiceUtil.getFriendlyURLPlugins();
    Iterator itr=portletPlugins.entrySet().iterator();
    while (itr.hasNext()) {
      Map.Entry entry=(Map.Entry)itr.next();
      String className=(String)entry.getValue();
      FriendlyURLPortletPlugin portletPlugin=(FriendlyURLPortletPlugin)InstancePool.get(className);
      if (friendlyURL.indexOf(portletPlugin.getMapping()) != -1) {
        LayoutFriendlyURLException lfurle=new LayoutFriendlyURLException(LayoutFriendlyURLException.PORTLET_CONFLICT);
        lfurle.setPortletConflictMapping(portletPlugin.getMapping());
        throw lfurle;
      }
    }
  }
}

{
  if (errorPageURL != null && !errorPageURL.equals("")) {
    request.setAttribute("javax.servlet.jsp.jspException",t);
    request.setAttribute("javax.servlet.error.status_code",Integer.valueOf(HttpServletResponse.SC_INTERNAL_SERVER_ERROR));
    request.setAttribute("javax.servlet.error.request_uri",((HttpServletRequest)request).getRequestURI());
    request.setAttribute("javax.servlet.error.servlet_name",config.getServletName());
    try {
      forward(errorPageURL);
    }
 catch (    IllegalStateException ise) {
      include(errorPageURL);
    }
    Object newException=request.getAttribute("javax.servlet.error.exception");
    if ((newException != null) && (newException == t)) {
      request.removeAttribute("javax.servlet.error.exception");
      request.setAttribute(Constants.JSP_ERROR_HANDLED,Boolean.TRUE);
    }
    request.removeAttribute("javax.servlet.error.status_code");
    request.removeAttribute("javax.servlet.error.request_uri");
    request.removeAttribute("javax.servlet.jsp.jspException");
  }
 else {
    if (t instanceof IOException)     throw (IOException)t;
    if (t instanceof ServletException)     throw (ServletException)t;
    if (t instanceof RuntimeException)     throw (RuntimeException)t;
    if (t instanceof Error)     throw (Error)t;
    Throwable rootCause=null;
    if (t instanceof JspException) {
      rootCause=((JspException)t).getRootCause();
    }
 else     if (t instanceof ELException) {
      rootCause=t.getCause();
    }
    if (rootCause != null) {
      throw new ServletException(t.getMessage(),rootCause);
    }
    throw new ServletException(t);
  }
}

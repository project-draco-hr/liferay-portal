{
  if (elResolver == null) {
    CompositeELResolver celResolver=new CompositeELResolver();
    celResolver.add(new ImplicitObjectELResolver());
    JspApplicationContextImpl jaContext=getJspApplicationContext();
    Iterator<ELResolver> it=jaContext.getELResolvers();
    while (it.hasNext()) {
      celResolver.add(it.next());
    }
    ELResolver streamELResolver=getExpressionFactory(this).getStreamELResolver();
    if (streamELResolver != null) {
      celResolver.add(streamELResolver);
    }
    celResolver.add(new StaticFieldELResolver());
    celResolver.add(new MapELResolver());
    celResolver.add(new ResourceBundleELResolver());
    celResolver.add(new ListELResolver());
    celResolver.add(new ArrayELResolver());
    celResolver.add(new BeanELResolver());
    celResolver.add(new ScopedAttributeELResolver());
    elResolver=celResolver;
  }
  return elResolver;
}

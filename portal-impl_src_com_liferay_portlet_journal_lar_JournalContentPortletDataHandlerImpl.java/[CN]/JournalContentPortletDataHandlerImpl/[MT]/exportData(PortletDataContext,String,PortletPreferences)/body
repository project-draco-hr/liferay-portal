{
  Map parameterMap=context.getParameterMap();
  boolean exportData=MapUtil.getBoolean(parameterMap,_EXPORT_JOURNAL_CONTENT_DATA,_enableExport.getDefaultState());
  if (_log.isDebugEnabled()) {
    if (exportData) {
      _log.debug("Exporting data is enabled");
    }
 else {
      _log.debug("Exporting data is disabled");
    }
  }
  if (!exportData) {
    return null;
  }
  try {
    String articleId=prefs.getValue("article-id",null);
    if (articleId == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("No article id found in preferences of portlet " + portletId);
      }
      return StringPool.BLANK;
    }
    long articleGroupId=GetterUtil.getLong(prefs.getValue("group-id",StringPool.BLANK));
    if (articleGroupId <= 0) {
      if (_log.isWarnEnabled()) {
        _log.warn("No group id found in preferences of portlet " + portletId);
      }
      return StringPool.BLANK;
    }
    JournalArticle article=null;
    try {
      article=JournalArticleLocalServiceUtil.getLatestArticle(articleGroupId,articleId);
    }
 catch (    NoSuchArticleException nsae) {
      if (_log.isWarnEnabled()) {
        _log.warn("No article found with company id " + context.getCompanyId() + ", group id "+ articleGroupId+ " and article id "+ articleId);
      }
    }
    if (article == null) {
      return StringPool.BLANK;
    }
    String articlePrimaryKey=getPrimaryKey(article.getGroupId(),article.getArticleId());
    if ((article.getGroupId() == context.getGroupId()) && !context.addPrimaryKey(JournalArticle.class,articlePrimaryKey)) {
      XStream xStream=new XStream();
      Document doc=DocumentHelper.createDocument();
      Element root=doc.addElement("journal-content");
      String xml=xStream.toXML(article);
      Document tempDoc=PortalUtil.readDocumentFromXML(xml);
      List content=root.content();
      content.add(tempDoc.getRootElement().createCopy());
      String structureId=article.getStructureId();
      if (Validator.isNotNull(structureId)) {
        String structurePrimaryKey=getPrimaryKey(article.getGroupId(),structureId);
        if (!context.addPrimaryKey(JournalStructure.class,structurePrimaryKey)) {
          JournalStructure structure=JournalStructureUtil.findByG_S(article.getGroupId(),structureId);
          xml=xStream.toXML(structure);
          tempDoc=PortalUtil.readDocumentFromXML(xml);
          content.add(tempDoc.getRootElement().createCopy());
        }
      }
      String templateId=article.getTemplateId();
      if (Validator.isNotNull(templateId)) {
        String templatePrimaryKey=getPrimaryKey(article.getGroupId(),templateId);
        if (!context.addPrimaryKey(JournalTemplate.class,templatePrimaryKey)) {
          JournalTemplate template=JournalTemplateUtil.findByG_T(article.getGroupId(),templateId);
          xml=xStream.toXML(template);
          tempDoc=PortalUtil.readDocumentFromXML(xml);
          content.add(tempDoc.getRootElement().createCopy());
        }
      }
      return XMLFormatter.toString(doc);
    }
 else {
      return StringPool.BLANK;
    }
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

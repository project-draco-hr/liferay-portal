{
  try {
    if (Validator.isNull(data)) {
      return null;
    }
    Document doc=SAXReaderUtil.read(data);
    Element root=doc.getRootElement();
    Element structureEl=root.element("structure");
    Map<String,String> structureIds=(Map<String,String>)context.getNewPrimaryKeysMap(JournalStructure.class);
    if (structureEl != null) {
      JournalPortletDataHandlerImpl.importStructure(context,structureIds,structureEl);
    }
    Element templateEl=root.element("template");
    Map<String,String> templateIds=(Map<String,String>)context.getNewPrimaryKeysMap(JournalTemplate.class);
    if (templateEl != null) {
      JournalPortletDataHandlerImpl.importTemplate(context,structureIds,templateIds,templateEl);
    }
    Element articleEl=root.element("article");
    Map<String,String> articleIds=(Map<String,String>)context.getNewPrimaryKeysMap(JournalArticle.class);
    if (articleEl != null) {
      JournalPortletDataHandlerImpl.importArticle(context,structureIds,templateIds,articleIds,articleEl);
    }
    String articleId=preferences.getValue("article-id",StringPool.BLANK);
    if (Validator.isNotNull(articleId)) {
      articleId=MapUtil.getString(articleIds,articleId,articleId);
      preferences.setValue("group-id",String.valueOf(context.getGroupId()));
      preferences.setValue("article-id",articleId);
    }
    Element dlFoldersEl=root.element("dl-folders");
    List<Element> dlFolderEls=Collections.EMPTY_LIST;
    if (dlFoldersEl != null) {
      dlFolderEls=dlFoldersEl.elements("folder");
    }
    Map<Long,Long> dlFolderPKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(DLFolder.class);
    for (    Element folderEl : dlFolderEls) {
      String path=folderEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      DLFolder folder=(DLFolder)context.getZipEntryAsObject(path);
      DLPortletDataHandlerImpl.importFolder(context,dlFolderPKs,folder);
    }
    Element dlFileEntriesEl=root.element("dl-file-entries");
    List<Element> dlFileEntryEls=Collections.EMPTY_LIST;
    if (dlFileEntriesEl != null) {
      dlFileEntryEls=dlFileEntriesEl.elements("file-entry");
    }
    Map<String,String> fileEntryNames=(Map<String,String>)context.getNewPrimaryKeysMap(DLFileEntry.class);
    for (    Element fileEntryEl : dlFileEntryEls) {
      String path=fileEntryEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      DLFileEntry fileEntry=(DLFileEntry)context.getZipEntryAsObject(path);
      String binPath=fileEntryEl.attributeValue("bin-path");
      DLPortletDataHandlerImpl.importFileEntry(context,dlFolderPKs,fileEntryNames,fileEntry,binPath);
    }
    Element dlFileRanksEl=root.element("dl-file-ranks");
    List<Element> dlFileRankEls=Collections.EMPTY_LIST;
    if (dlFileRanksEl != null) {
      dlFileRankEls=dlFileRanksEl.elements("file-rank");
    }
    for (    Element fileRankEl : dlFileRankEls) {
      String path=fileRankEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      DLFileRank fileRank=(DLFileRank)context.getZipEntryAsObject(path);
      DLPortletDataHandlerImpl.importFileRank(context,dlFolderPKs,fileEntryNames,fileRank);
    }
    Element igFoldersEl=root.element("ig-folders");
    List<Element> igFolderEls=Collections.EMPTY_LIST;
    if (igFoldersEl != null) {
      igFolderEls=igFoldersEl.elements("folder");
    }
    Map<Long,Long> igFolderPKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(IGFolder.class);
    for (    Element folderEl : igFolderEls) {
      String path=folderEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      IGFolder folder=(IGFolder)context.getZipEntryAsObject(path);
      IGPortletDataHandlerImpl.importFolder(context,igFolderPKs,folder);
    }
    Element igImagesEl=root.element("ig-images");
    List<Element> igImageEls=Collections.EMPTY_LIST;
    if (igImagesEl != null) {
      igImageEls=igImagesEl.elements("image");
    }
    for (    Element imageEl : igImageEls) {
      String path=imageEl.attributeValue("path");
      if (!context.isPathNotProcessed(path)) {
        continue;
      }
      IGImage image=(IGImage)context.getZipEntryAsObject(path);
      String binPath=imageEl.attributeValue("bin-path");
      IGPortletDataHandlerImpl.importImage(context,igFolderPKs,image,binPath);
    }
    return preferences;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

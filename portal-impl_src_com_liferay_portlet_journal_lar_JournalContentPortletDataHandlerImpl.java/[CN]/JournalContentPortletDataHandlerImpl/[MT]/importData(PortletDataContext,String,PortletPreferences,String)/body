{
  Map parameterMap=context.getParameterMap();
  boolean importData=MapUtil.getBoolean(parameterMap,_IMPORT_JOURNAL_CONTENT_DATA);
  boolean staging=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.STAGING);
  if (_log.isDebugEnabled()) {
    if (importData) {
      _log.debug("Importing data is enabled");
    }
 else {
      _log.debug("Importing data is disabled");
    }
  }
  if (!importData && !staging) {
    return null;
  }
  boolean mergeData=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.MERGE_DATA);
  if (!mergeData) {
    if (_log.isWarnEnabled()) {
      _log.warn("Merge data option wasn't selected, this can cause " + "duplication of entities because there's no way to " + "check if they already exist.");
    }
  }
  try {
    if (Validator.isNull(data)) {
      return null;
    }
    XStream xStream=new XStream();
    Document doc=PortalUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    Element el=root.element(JournalStructureImpl.class.getName());
    Document tempDoc=DocumentHelper.createDocument();
    Map structurePKs=CollectionFactory.getHashMap();
    if (el != null) {
      tempDoc.content().add(el.createCopy());
      JournalStructure structure=(JournalStructure)xStream.fromXML(tempDoc.asXML());
      JournalPortletDataHandlerImpl.importStructure(context,mergeData,structurePKs,structure);
    }
    el=root.element(JournalTemplateImpl.class.getName());
    Map templatePKs=CollectionFactory.getHashMap();
    if (el != null) {
      tempDoc=DocumentHelper.createDocument();
      tempDoc.content().add(el.createCopy());
      JournalTemplate template=(JournalTemplate)xStream.fromXML(tempDoc.asXML());
      JournalPortletDataHandlerImpl.importTemplate(context,mergeData,structurePKs,templatePKs,template);
    }
    el=root.element(JournalArticleImpl.class.getName());
    if (el != null) {
      tempDoc=DocumentHelper.createDocument();
      tempDoc.content().add(el.createCopy());
      JournalArticle article=(JournalArticle)xStream.fromXML(tempDoc.asXML());
      article=JournalPortletDataHandlerImpl.importArticle(context,mergeData,structurePKs,templatePKs,article);
      prefs.setValue("group-id",String.valueOf(context.getGroupId()));
      prefs.setValue("article-id",article.getArticleId());
    }
    return prefs;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

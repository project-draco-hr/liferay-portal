{
  portletDataContext.importPermissions("com.liferay.portlet.journal",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  if (Validator.isNull(data)) {
    return null;
  }
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element dlFoldersElement=rootElement.element("dl-folders");
  List<Element> dlFolderElements=Collections.EMPTY_LIST;
  if (dlFoldersElement != null) {
    dlFolderElements=dlFoldersElement.elements("folder");
  }
  for (  Element folderElement : dlFolderElements) {
    DLPortletDataHandlerImpl.importFolder(portletDataContext,folderElement);
  }
  Element dlFileEntriesElement=rootElement.element("dl-file-entries");
  List<Element> dlFileEntryElements=Collections.EMPTY_LIST;
  if (dlFileEntriesElement != null) {
    dlFileEntryElements=dlFileEntriesElement.elements("file-entry");
  }
  for (  Element fileEntryElement : dlFileEntryElements) {
    DLPortletDataHandlerImpl.importFileEntry(portletDataContext,fileEntryElement);
  }
  Element dlFileRanksElement=rootElement.element("dl-file-ranks");
  List<Element> dlFileRankElements=Collections.EMPTY_LIST;
  if (dlFileRanksElement != null) {
    dlFileRankElements=dlFileRanksElement.elements("file-rank");
  }
  for (  Element fileRankElement : dlFileRankElements) {
    DLPortletDataHandlerImpl.importFileRank(portletDataContext,fileRankElement);
  }
  Element igFoldersElement=rootElement.element("ig-folders");
  List<Element> igFolderElements=Collections.EMPTY_LIST;
  if (igFoldersElement != null) {
    igFolderElements=igFoldersElement.elements("folder");
  }
  for (  Element folderElement : igFolderElements) {
    IGPortletDataHandlerImpl.importFolder(portletDataContext,folderElement);
  }
  Element igImagesElement=rootElement.element("ig-images");
  List<Element> igImageElements=Collections.EMPTY_LIST;
  if (igImagesElement != null) {
    igImageElements=igImagesElement.elements("image");
  }
  for (  Element imageElement : igImageElements) {
    IGPortletDataHandlerImpl.importImage(portletDataContext,imageElement);
  }
  Element structureElement=rootElement.element("structure");
  if (structureElement != null) {
    JournalPortletDataHandlerImpl.importStructure(portletDataContext,structureElement);
  }
  Element templateElement=rootElement.element("template");
  if (templateElement != null) {
    JournalPortletDataHandlerImpl.importTemplate(portletDataContext,templateElement);
  }
  Element articleElement=rootElement.element("article");
  if (articleElement != null) {
    JournalPortletDataHandlerImpl.importArticle(portletDataContext,articleElement);
  }
  String articleId=portletPreferences.getValue("article-id",null);
  if (Validator.isNotNull(articleId)) {
    Map<String,String> articleIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class);
    articleId=MapUtil.getString(articleIds,articleId,articleId);
    portletPreferences.setValue("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
    portletPreferences.setValue("article-id",articleId);
    Layout layout=LayoutLocalServiceUtil.getLayout(portletDataContext.getPlid());
    JournalContentSearchLocalServiceUtil.updateContentSearch(portletDataContext.getScopeGroupId(),layout.isPrivateLayout(),layout.getLayoutId(),portletId,articleId,true);
  }
  String templateId=portletPreferences.getValue("template-id",null);
  if (Validator.isNotNull(templateId)) {
    Map<String,String> templateIds=(Map<String,String>)portletDataContext.getNewPrimaryKeysMap(JournalTemplate.class);
    templateId=MapUtil.getString(templateIds,templateId,templateId);
    portletPreferences.setValue("template-id",templateId);
  }
  return portletPreferences;
}

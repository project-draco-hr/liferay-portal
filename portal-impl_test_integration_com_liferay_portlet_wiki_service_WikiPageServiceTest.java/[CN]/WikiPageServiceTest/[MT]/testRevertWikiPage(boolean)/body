{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(_group.getGroupId());
  String originalContent=ServiceTestUtil.randomString();
  WikiPage originalPage=WikiTestUtil.addPage(TestPropsValues.getUserId(),_node.getNodeId(),ServiceTestUtil.randomString(),originalContent,true,serviceContext);
  ExpandoTable table=null;
  ExpandoColumn column=null;
  ExpandoValue value=null;
  ExpandoBridge expandoBridge=null;
  if (checkCustomField) {
    table=ExpandoTestUtil.addTable(PortalUtil.getClassNameId(WikiPage.class),ServiceTestUtil.randomString());
    column=ExpandoTestUtil.addColumn(table,ServiceTestUtil.randomString(),ExpandoColumnConstants.STRING);
    value=ExpandoTestUtil.addValue(table,column,originalPage.getPrimaryKey(),ServiceTestUtil.randomString());
    expandoBridge=originalPage.getExpandoBridge();
    expandoBridge.addAttribute(column.getName(),ExpandoColumnConstants.STRING,value.getString());
  }
  StringBuilder sb=new StringBuilder(3);
  sb.append(originalContent);
  sb.append(StringPool.NEW_LINE);
  sb.append("Added second line");
  originalPage.setContent(sb.toString());
  WikiPage updatedWikiPage=WikiTestUtil.updatePage(originalPage,TestPropsValues.getUserId(),sb.toString(),serviceContext);
  sb=new StringBuilder(3);
  sb.append(updatedWikiPage.getContent());
  sb.append(StringPool.NEW_LINE);
  sb.append("Added third line");
  updatedWikiPage.setContent(sb.toString());
  WikiPage updatedWikiPage2=WikiTestUtil.updatePage(updatedWikiPage,TestPropsValues.getUserId(),sb.toString(),serviceContext);
  double originalVersion=originalPage.getVersion();
  WikiPage revertedPage=WikiPageLocalServiceUtil.revertPage(TestPropsValues.getUserId(),_node.getNodeId(),updatedWikiPage2.getTitle(),originalVersion,serviceContext);
  Assert.assertEquals(originalContent,revertedPage.getContent());
  if (checkCustomField) {
    expandoBridge=revertedPage.getExpandoBridge();
    Map<String,Serializable> attributes=expandoBridge.getAttributes();
    if (attributes.isEmpty()) {
      Assert.fail("Expando values have not been reverted with page");
    }
    Assert.assertEquals(value.getString(),attributes.get(column.getName()));
  }
}

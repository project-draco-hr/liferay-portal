{
  List<CharBufferHolder> borrowedCharBufferHolders=_borrowedCharBufferHoldersThreadLocal.get();
  _modifyLock.lock();
  try {
    for (    CharBufferHolder charBufferHolder : borrowedCharBufferHolders) {
      if (charBufferHolder._borrowed) {
        charBufferHolder._borrowed=false;
      }
 else {
        int index=Collections.binarySearch(_pooledCharBufferHolders,charBufferHolder);
        if (index < 0) {
          index=-(index + 1);
        }
        _pooledCharBufferHolders.add(index,charBufferHolder);
      }
    }
  }
  finally {
    _modifyLock.unlock();
  }
  borrowedCharBufferHolders.clear();
  _cleanUpDeadBuffers();
}

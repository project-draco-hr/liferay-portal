{
  if (isEnabled()) {
    _cleanUpDeadBuffers();
    CharBufferHolder keyBufferHolder=new CharBufferHolder(size);
    int poolSize=-1;
    _modifyLock.lock();
    try {
      int index=Collections.binarySearch(_pooledCharBufferHolders,keyBufferHolder);
      if (index < 0) {
        index=-(index + 1);
      }
      poolSize=_pooledCharBufferHolders.size();
      while (index < poolSize) {
        CharBufferHolder charBufferHolder=_pooledCharBufferHolders.get(index);
        if (charBufferHolder._borrowed) {
          index++;
        }
 else {
          char[] charBuffer=charBufferHolder.get();
          if (charBuffer != null) {
            charBufferHolder._borrowed=true;
            _borrowedCharBufferHoldersThreadLocal.get().add(charBufferHolder);
            return charBuffer;
          }
          _pooledCharBufferHolders.remove(index);
        }
      }
    }
  finally {
      _modifyLock.unlock();
    }
    char[] charBuffer=new char[size + (size >> 9)];
    if (poolSize < MAX_POOL_SIZE) {
      CharBufferHolder charBufferHolder=new CharBufferHolder(charBuffer);
      _borrowedCharBufferHoldersThreadLocal.get().add(charBufferHolder);
    }
    return charBuffer;
  }
 else {
    return new char[size];
  }
}

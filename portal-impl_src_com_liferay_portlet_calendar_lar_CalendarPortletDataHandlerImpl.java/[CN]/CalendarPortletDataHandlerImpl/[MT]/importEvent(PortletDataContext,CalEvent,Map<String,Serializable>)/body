{
  long userId=portletDataContext.getUserId(event.getUserUuid());
  Date startDate=event.getStartDate();
  int startDateMonth=0;
  int startDateDay=0;
  int startDateYear=0;
  int startDateHour=0;
  int startDateMinute=0;
  if (startDate != null) {
    Calendar startCal=CalendarFactoryUtil.getCalendar();
    startCal.setTime(startDate);
    startDateMonth=startCal.get(Calendar.MONTH);
    startDateDay=startCal.get(Calendar.DATE);
    startDateYear=startCal.get(Calendar.YEAR);
    startDateHour=startCal.get(Calendar.HOUR);
    startDateMinute=startCal.get(Calendar.MINUTE);
    if (startCal.get(Calendar.AM_PM) == Calendar.PM) {
      startDateHour+=12;
    }
  }
  Date endDate=event.getEndDate();
  int endDateMonth=0;
  int endDateDay=0;
  int endDateYear=0;
  if (endDate != null) {
    Calendar endCal=CalendarFactoryUtil.getCalendar();
    endCal.setTime(endDate);
    endDateMonth=endCal.get(Calendar.MONTH);
    endDateDay=endCal.get(Calendar.DATE);
    endDateYear=endCal.get(Calendar.YEAR);
  }
  long[] assetCategoryIds=null;
  String[] assetTagNames=null;
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"categories")) {
    assetCategoryIds=portletDataContext.getAssetCategoryIds(CalEvent.class,event.getEventId());
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"tags")) {
    assetTagNames=portletDataContext.getAssetTagNames(CalEvent.class,event.getEventId());
  }
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddCommunityPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setAssetCategoryIds(assetCategoryIds);
  serviceContext.setAssetTagNames(assetTagNames);
  serviceContext.setCreateDate(event.getCreateDate());
  serviceContext.setModifiedDate(event.getModifiedDate());
  serviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());
  if ((expandoAttributes != null) && !expandoAttributes.isEmpty()) {
    serviceContext.setExpandoBridgeAttributes(expandoAttributes);
  }
  CalEvent importedEvent=null;
  if (portletDataContext.isDataStrategyMirror()) {
    CalEvent existingEvent=CalEventUtil.fetchByUUID_G(event.getUuid(),portletDataContext.getScopeGroupId());
    if (existingEvent == null) {
      serviceContext.setUuid(event.getUuid());
      importedEvent=CalEventLocalServiceUtil.addEvent(userId,event.getTitle(),event.getDescription(),event.getLocation(),startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,endDateMonth,endDateDay,endDateYear,event.getDurationHour(),event.getDurationMinute(),event.getAllDay(),event.getTimeZoneSensitive(),event.getType(),event.getRepeating(),event.getRecurrenceObj(),event.getRemindBy(),event.getFirstReminder(),event.getSecondReminder(),serviceContext);
    }
 else {
      importedEvent=CalEventLocalServiceUtil.updateEvent(userId,existingEvent.getEventId(),event.getTitle(),event.getDescription(),event.getLocation(),startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,endDateMonth,endDateDay,endDateYear,event.getDurationHour(),event.getDurationMinute(),event.getAllDay(),event.getTimeZoneSensitive(),event.getType(),event.getRepeating(),event.getRecurrenceObj(),event.getRemindBy(),event.getFirstReminder(),event.getSecondReminder(),serviceContext);
    }
  }
 else {
    importedEvent=CalEventLocalServiceUtil.addEvent(userId,event.getTitle(),event.getDescription(),event.getLocation(),startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,endDateMonth,endDateDay,endDateYear,event.getDurationHour(),event.getDurationMinute(),event.getAllDay(),event.getTimeZoneSensitive(),event.getType(),event.getRepeating(),event.getRecurrenceObj(),event.getRemindBy(),event.getFirstReminder(),event.getSecondReminder(),serviceContext);
  }
  portletDataContext.importPermissions(CalEvent.class,event.getEventId(),importedEvent.getEventId());
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"comments")) {
    portletDataContext.importComments(CalEvent.class,event.getEventId(),importedEvent.getEventId(),portletDataContext.getScopeGroupId());
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"ratings")) {
    portletDataContext.importRatingsEntries(CalEvent.class,event.getEventId(),importedEvent.getEventId());
  }
}

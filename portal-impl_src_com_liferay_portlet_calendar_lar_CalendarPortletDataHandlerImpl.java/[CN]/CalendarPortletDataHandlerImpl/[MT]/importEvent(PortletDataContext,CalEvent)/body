{
  Map parameterMap=context.getParameterMap();
  boolean mergeData=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.MERGE_DATA,_enableExport.getDefaultState());
  CalEvent existingEvent=CalEventUtil.fetchByUUID_G(event.getUuid(),context.getGroupId());
  if (existingEvent == null) {
    long plid=context.getPlid();
    Date startDate=event.getStartDate();
    int startDateMonth=0;
    int startDateDay=0;
    int startDateYear=0;
    int startDateHour=0;
    int startDateMinute=0;
    if (startDate != null) {
      Calendar startCal=CalendarFactoryUtil.getCalendar();
      startCal.setTime(startDate);
      startDateMonth=startCal.get(Calendar.MONTH);
      startDateDay=startCal.get(Calendar.DATE);
      startDateYear=startCal.get(Calendar.YEAR);
      startDateHour=startCal.get(Calendar.HOUR);
      startDateMinute=startCal.get(Calendar.MINUTE);
    }
    Date endDate=event.getEndDate();
    int endDateMonth=0;
    int endDateDay=0;
    int endDateYear=0;
    if (endDate != null) {
      Calendar endCal=CalendarFactoryUtil.getCalendar();
      endCal.setTime(endDate);
      endDateMonth=endCal.get(Calendar.MONTH);
      endDateDay=endCal.get(Calendar.DATE);
      endDateYear=endCal.get(Calendar.YEAR);
    }
    boolean addCommunityPermissions=true;
    boolean addGuestPermissions=true;
    if (mergeData) {
      CalEventLocalServiceUtil.addEvent(event.getUuid(),event.getUserId(),plid,event.getTitle(),event.getDescription(),startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,endDateMonth,endDateDay,endDateYear,event.getDurationHour(),event.getDurationMinute(),event.getAllDay(),event.getTimeZoneSensitive(),event.getType(),event.getRepeating(),event.getRecurrenceObj(),event.getRemindBy(),event.getFirstReminder(),event.getSecondReminder(),addCommunityPermissions,addGuestPermissions);
    }
 else {
      CalEventLocalServiceUtil.addEvent(event.getUserId(),plid,event.getTitle(),event.getDescription(),startDateMonth,startDateDay,startDateYear,startDateHour,startDateMinute,endDateMonth,endDateDay,endDateYear,event.getDurationHour(),event.getDurationMinute(),event.getAllDay(),event.getTimeZoneSensitive(),event.getType(),event.getRepeating(),event.getRecurrenceObj(),event.getRemindBy(),event.getFirstReminder(),event.getSecondReminder(),addCommunityPermissions,addGuestPermissions);
    }
  }
 else {
    event.setGroupId(existingEvent.getGroupId());
    event.setPrimaryKey(existingEvent.getPrimaryKey());
    CalEventUtil.update(event,true);
  }
}

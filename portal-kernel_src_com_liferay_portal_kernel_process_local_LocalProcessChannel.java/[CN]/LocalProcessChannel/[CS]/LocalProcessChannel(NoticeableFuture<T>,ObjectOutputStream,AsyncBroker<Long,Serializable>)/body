{
  _noticeableFuture=noticeableFuture;
  _objectOutputStream=objectOutputStream;
  _asyncBroker=asyncBroker;
  _noticeableFuture.addFutureListener(new FutureListener<T>(){
    @Override public void complete(    Future<T> future){
      try {
        _objectOutputStream.close();
      }
 catch (      IOException ioe) {
      }
 finally {
        Map<Long,NoticeableFuture<Serializable>> map=_asyncBroker.getOpenBids();
        for (        NoticeableFuture<Serializable> noticeableFuture : map.values()) {
          noticeableFuture.cancel(true);
        }
      }
    }
  }
);
}

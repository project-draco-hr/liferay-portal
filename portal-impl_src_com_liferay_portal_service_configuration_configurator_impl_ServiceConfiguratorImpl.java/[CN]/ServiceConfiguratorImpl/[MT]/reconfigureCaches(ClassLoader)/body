{
  Configuration configuration=null;
  try {
    configuration=ConfigurationFactoryUtil.getConfiguration(classLoader,"portlet");
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to read portlet.properties");
    }
    return;
  }
  String singleVMConfigurationLocation=configuration.get(PropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION);
  String multiVMConfigurationLocation=configuration.get(PropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION);
  if (Validator.isNull(singleVMConfigurationLocation) && Validator.isNull(multiVMConfigurationLocation)) {
    return;
  }
  if (_serviceRegistrar == null) {
    Registry registry=RegistryUtil.getRegistry();
    _serviceRegistrar=registry.getServiceRegistrar(PortalCacheConfiguratorSettings.class);
  }
  if (Validator.isNotNull(singleVMConfigurationLocation)) {
    Map<String,Object> properties=new HashMap<>();
    properties.put("portal.cache.manager.name",PortalCacheManagerNames.SINGLE_VM);
    _serviceRegistrar.registerService(PortalCacheConfiguratorSettings.class,new PortalCacheConfiguratorSettings(classLoader,singleVMConfigurationLocation),properties);
  }
  if (Validator.isNotNull(multiVMConfigurationLocation)) {
    Map<String,Object> properties=new HashMap<>();
    properties.put("portal.cache.manager.name",PortalCacheManagerNames.MULTI_VM);
    _serviceRegistrar.registerService(PortalCacheConfiguratorSettings.class,new PortalCacheConfiguratorSettings(classLoader,multiVMConfigurationLocation),properties);
  }
}

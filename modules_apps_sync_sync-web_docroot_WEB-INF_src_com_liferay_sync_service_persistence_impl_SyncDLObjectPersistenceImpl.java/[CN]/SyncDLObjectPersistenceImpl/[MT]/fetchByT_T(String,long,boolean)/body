{
  Object[] finderArgs=new Object[]{type,typePK};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_T_T,finderArgs,this);
  }
  if (result instanceof SyncDLObject) {
    SyncDLObject syncDLObject=(SyncDLObject)result;
    if (!Validator.equals(type,syncDLObject.getType()) || (typePK != syncDLObject.getTypePK())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_SYNCDLOBJECT_WHERE);
    boolean bindType=false;
    if (type == null) {
      query.append(_FINDER_COLUMN_T_T_TYPE_1);
    }
 else     if (type.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_T_T_TYPE_3);
    }
 else {
      bindType=true;
      query.append(_FINDER_COLUMN_T_T_TYPE_2);
    }
    query.append(_FINDER_COLUMN_T_T_TYPEPK_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindType) {
        qPos.add(type);
      }
      qPos.add(typePK);
      List<SyncDLObject> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_T_T,finderArgs,list);
      }
 else {
        SyncDLObject syncDLObject=list.get(0);
        result=syncDLObject;
        cacheResult(syncDLObject);
        if ((syncDLObject.getType() == null) || !syncDLObject.getType().equals(type) || (syncDLObject.getTypePK() != typePK)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_T_T,finderArgs,syncDLObject);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_T_T,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (SyncDLObject)result;
  }
}

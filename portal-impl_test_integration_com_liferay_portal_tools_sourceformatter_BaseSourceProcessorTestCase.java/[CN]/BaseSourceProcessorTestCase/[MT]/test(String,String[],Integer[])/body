{
  String fullFileName=_DIR_NAME + StringPool.SLASH + fileName;
  Tuple tuple=sourceFormatter.format(fullFileName);
  if (tuple == null) {
    return;
  }
  List<String> errorMessages=(List<String>)tuple.getObject(1);
  if (!errorMessages.isEmpty() || (expectedErrorMessages.length > 0)) {
    Assert.assertEquals(errorMessages.size(),expectedErrorMessages.length);
    for (int i=0; i < errorMessages.size(); i++) {
      String actualErrorMessage=errorMessages.get(i);
      String expectedErrorMessage=expectedErrorMessages[i];
      StringBundler sb=new StringBundler(5);
      sb.append(expectedErrorMessage);
      sb.append(StringPool.SPACE);
      sb.append(fullFileName);
      if (lineNumbers != null) {
        sb.append(StringPool.SPACE);
        sb.append(lineNumbers[i]);
      }
      Assert.assertEquals(sb.toString(),actualErrorMessage);
    }
  }
 else {
    String actualFormattedContent=(String)tuple.getObject(0);
    try {
      File file=new File(_DIR_NAME + "/expected/" + fileName);
      String expectedFormattedContent=FileUtil.read(file.getPath());
      Assert.assertEquals(expectedFormattedContent,actualFormattedContent);
    }
 catch (    FileNotFoundException fnfe) {
      Assert.fail();
    }
  }
}

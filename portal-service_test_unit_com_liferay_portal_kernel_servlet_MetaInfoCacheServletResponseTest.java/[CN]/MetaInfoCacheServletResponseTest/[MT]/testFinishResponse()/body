{
  final AtomicLong contentLengthReference=new AtomicLong();
  final AtomicReference<String> locationReference=new AtomicReference<>();
  final AtomicReference<String> messageReference=new AtomicReference<>();
  final AtomicInteger statusReference=new AtomicInteger();
  StubHttpServletResponse stubHttpServletResponse=new StubHttpServletResponse(){
    @Override public void addHeader(    String name,    String value){
    }
    @Override public boolean isCommitted(){
      return false;
    }
    @Override public void reset(){
    }
    @Override public void resetBuffer(){
    }
    @Override public void sendError(    int status){
      statusReference.set(status);
    }
    @Override public void sendError(    int status,    String errorMessage){
      statusReference.set(status);
      messageReference.set(errorMessage);
    }
    @Override public void sendRedirect(    String location){
      locationReference.set(location);
    }
    @Override public void setCharacterEncoding(    String characterEncoding){
    }
    @Override public void setContentLength(    int contentLength){
      contentLengthReference.set(contentLength);
    }
    @Override public void setContentType(    String contentType){
    }
    @Override public void setHeader(    String name,    String value){
    }
    @Override public void setLocale(    Locale locale){
    }
    @Override public void setStatus(    int status){
      statusReference.set(status);
    }
    /** 
 * @deprecated As of 7.0.0
 */
    @Deprecated @Override public void setStatus(    int status,    String message){
      statusReference.set(status);
      messageReference.set(message);
    }
  }
;
  MetaInfoCacheServletResponse metaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  metaInfoCacheServletResponse.finishResponse(true);
  MetaInfoCacheServletResponse innerMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  MetaInfoCacheServletResponse outerMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(innerMetaInfoCacheServletResponse);
  innerMetaInfoCacheServletResponse.addHeader("name1","value3");
  innerMetaInfoCacheServletResponse.addHeader("name2","value3");
  outerMetaInfoCacheServletResponse.addHeader("name1","value1");
  outerMetaInfoCacheServletResponse.addHeader("name1","value2");
  outerMetaInfoCacheServletResponse.addHeader("name2","value1");
  outerMetaInfoCacheServletResponse.finishResponse();
  Map<String,Set<Header>> headers=innerMetaInfoCacheServletResponse.getHeaders();
  Assert.assertEquals(2,headers.size());
  Set<Header> headers1=headers.get("name1");
  Assert.assertEquals(3,headers1.size());
  Assert.assertTrue(headers1.contains(new Header("value1")));
  Assert.assertTrue(headers1.contains(new Header("value2")));
  Assert.assertTrue(headers1.contains(new Header("value3")));
  Set<Header> headers2=headers.get("name2");
  Assert.assertEquals(2,headers2.size());
  Assert.assertTrue(headers2.contains(new Header("value1")));
  Assert.assertTrue(headers2.contains(new Header("value3")));
  outerMetaInfoCacheServletResponse.finishResponse(true);
  headers=innerMetaInfoCacheServletResponse.getHeaders();
  Assert.assertEquals(2,headers.size());
  headers1=headers.get("name1");
  Assert.assertEquals(2,headers1.size());
  Assert.assertTrue(headers1.contains(new Header("value1")));
  Assert.assertTrue(headers1.contains(new Header("value2")));
  headers2=headers.get("name2");
  Assert.assertEquals(1,headers2.size());
  Assert.assertTrue(headers2.contains(new Header("value1")));
  MetaInfoCacheServletResponse fromMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.sendRedirect("testURL");
  MetaInfoCacheServletResponse toMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.setResponse(toMetaInfoCacheServletResponse);
  locationReference.set(null);
  fromMetaInfoCacheServletResponse.finishResponse(true);
  Assert.assertEquals("testURL",locationReference.get());
  fromMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.sendError(400,"Bad Page");
  toMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.setResponse(toMetaInfoCacheServletResponse);
  messageReference.set(null);
  statusReference.set(0);
  fromMetaInfoCacheServletResponse.finishResponse(true);
  Assert.assertEquals("Bad Page",messageReference.get());
  Assert.assertEquals(400,statusReference.get());
  fromMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.setContentLength(2048);
  fromMetaInfoCacheServletResponse.setContentType(ContentTypes.TEXT_HTML_UTF8);
  fromMetaInfoCacheServletResponse.setLocale(LocaleUtil.US);
  fromMetaInfoCacheServletResponse.setStatus(302,"moved");
  toMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.setResponse(toMetaInfoCacheServletResponse);
  contentLengthReference.set(0);
  messageReference.set(null);
  statusReference.set(0);
  fromMetaInfoCacheServletResponse.finishResponse(true);
  Assert.assertEquals(StringPool.UTF8,toMetaInfoCacheServletResponse.getCharacterEncoding());
  Assert.assertEquals(ContentTypes.TEXT_HTML,toMetaInfoCacheServletResponse.getContentType());
  Assert.assertEquals(LocaleUtil.US,toMetaInfoCacheServletResponse.getLocale());
  Assert.assertEquals(2048,contentLengthReference.get());
  Assert.assertEquals("moved",messageReference.get());
  Assert.assertEquals(302,statusReference.get());
  fromMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.sendRedirect("testURL");
  toMetaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromMetaInfoCacheServletResponse.setResponse(toMetaInfoCacheServletResponse);
  locationReference.set(null);
  toMetaInfoCacheServletResponse.flushBuffer();
  fromMetaInfoCacheServletResponse.finishResponse(true);
  Assert.assertNull(locationReference.get());
}

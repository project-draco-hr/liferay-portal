{
  final AtomicLong contentLengthReference=new AtomicLong();
  final AtomicReference<String> locationReference=new AtomicReference<String>();
  final AtomicReference<String> messageReference=new AtomicReference<String>();
  final AtomicInteger statusCode=new AtomicInteger();
  StubHttpServletResponse stubHttpServletResponse=new StubHttpServletResponse(){
    @Override public void addHeader(    String name,    String value){
    }
    @Override public boolean isCommitted(){
      return false;
    }
    @Override public void resetBuffer(){
    }
    @Override public void sendError(    int status,    String errorMessage) throws IOException {
      statusCode.set(status);
      messageReference.set(errorMessage);
    }
    @Override public void sendRedirect(    String location) throws IOException {
      locationReference.set(location);
    }
    @Override public void setCharacterEncoding(    String characterEncoding){
    }
    @Override public void setContentLength(    int contentLength){
      contentLengthReference.set(contentLength);
    }
    @Override public void setContentType(    String contentType){
    }
    @Override public void setHeader(    String name,    String value){
    }
    @Override public void setLocale(    Locale locale){
    }
    @Override public void setStatus(    int status,    String message){
      statusCode.set(status);
      messageReference.set(message);
    }
  }
;
  MetaInfoCacheServletResponse metaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  metaInfoCacheServletResponse.finishResponse();
  MetaInfoCacheServletResponse innerResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  MetaInfoCacheServletResponse outterResponse=new MetaInfoCacheServletResponse(innerResponse);
  innerResponse.addHeader("name1","value3");
  innerResponse.addHeader("name2","value3");
  outterResponse.addHeader("name1","value1");
  outterResponse.addHeader("name1","value2");
  outterResponse.addHeader("name2","value1");
  outterResponse.finishResponse();
  Map<String,Set<Header>> headers=innerResponse.getHeaders();
  assertEquals(2,headers.size());
  Set<Header> headers1=headers.get("name1");
  assertEquals(2,headers1.size());
  assertTrue(headers1.contains(new Header("value1")));
  assertTrue(headers1.contains(new Header("value2")));
  Set<Header> headers2=headers.get("name2");
  assertEquals(1,headers2.size());
  assertTrue(headers2.contains(new Header("value1")));
  MetaInfoCacheServletResponse fromResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.sendRedirect("testURL");
  MetaInfoCacheServletResponse toResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.setResponse(toResponse);
  locationReference.set(null);
  fromResponse.finishResponse();
  assertEquals("testURL",locationReference.get());
  fromResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.sendError(400,"Bad Page");
  toResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.setResponse(toResponse);
  statusCode.set(0);
  messageReference.set(null);
  fromResponse.finishResponse();
  assertEquals(400,statusCode.get());
  assertEquals("Bad Page",messageReference.get());
  fromResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.setContentType(ContentTypes.TEXT_HTML_UTF8);
  fromResponse.setLocale(Locale.ENGLISH);
  fromResponse.setContentLength(2048);
  fromResponse.setStatus(302,"moved");
  toResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.setResponse(toResponse);
  contentLengthReference.set(0);
  statusCode.set(0);
  messageReference.set(null);
  fromResponse.finishResponse();
  assertEquals(StringPool.UTF8,toResponse.getCharacterEncoding());
  assertEquals(ContentTypes.TEXT_HTML,toResponse.getContentType());
  assertEquals(Locale.ENGLISH,toResponse.getLocale());
  assertEquals(2048,contentLengthReference.get());
  assertEquals(302,statusCode.get());
  assertEquals("moved",messageReference.get());
  fromResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.sendRedirect("testURL");
  toResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  fromResponse.setResponse(toResponse);
  locationReference.set(null);
  toResponse.flushBuffer();
  fromResponse.finishResponse();
  assertNull(locationReference.get());
}

{
  final AtomicReference<String> messageReference=new AtomicReference<String>();
  final AtomicInteger statusReference=new AtomicInteger();
  StubHttpServletResponse stubHttpServletResponse=new StubHttpServletResponse(){
    @Override public boolean isCommitted(){
      return false;
    }
    @Override public void setStatus(    int status,    String message){
      statusReference.set(status);
      messageReference.set(message);
    }
  }
;
  MetaInfoCacheServletResponse metaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  metaInfoCacheServletResponse.setStatus(400,"Bad Page");
  assertEquals("Bad Page",messageReference.get());
  assertEquals(400,metaInfoCacheServletResponse.getStatus());
  assertEquals(400,statusReference.get());
  messageReference.set(null);
  statusReference.set(0);
  metaInfoCacheServletResponse.setStatus(404);
  assertNull(messageReference.get());
  assertEquals(404,metaInfoCacheServletResponse.getStatus());
  assertEquals(404,statusReference.get());
  messageReference.set(null);
  statusReference.set(0);
  metaInfoCacheServletResponse.flushBuffer();
  metaInfoCacheServletResponse.setStatus(500,"After commit");
  assertNull(messageReference.get());
  assertEquals(404,metaInfoCacheServletResponse.getStatus());
  assertEquals(0,statusReference.get());
}

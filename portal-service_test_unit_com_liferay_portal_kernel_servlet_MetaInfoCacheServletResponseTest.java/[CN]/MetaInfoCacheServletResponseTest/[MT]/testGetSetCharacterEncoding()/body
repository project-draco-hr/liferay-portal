{
  final AtomicReference<String> characterEncodingReference=new AtomicReference<String>();
  StubHttpServletResponse stubHttpServletResponse=new StubHttpServletResponse(){
    @Override public boolean isCommitted(){
      return false;
    }
    @Override public void setCharacterEncoding(    String characterEncoding){
      characterEncodingReference.set(characterEncoding);
    }
    @Override public PrintWriter getWriter() throws IOException {
      return null;
    }
  }
;
  MetaInfoCacheServletResponse metaInfoCacheServletResponse=new MetaInfoCacheServletResponse(stubHttpServletResponse);
  assertEquals(StringPool.DEFAULT_CHARSET_NAME,metaInfoCacheServletResponse.getCharacterEncoding());
  metaInfoCacheServletResponse.setCharacterEncoding(null);
  assertEquals(StringPool.DEFAULT_CHARSET_NAME,metaInfoCacheServletResponse.getCharacterEncoding());
  assertNull(characterEncodingReference.get());
  metaInfoCacheServletResponse.setCharacterEncoding(StringPool.ISO_8859_1);
  assertEquals(StringPool.ISO_8859_1,metaInfoCacheServletResponse.getCharacterEncoding());
  assertEquals(StringPool.ISO_8859_1,characterEncodingReference.get());
  characterEncodingReference.set(null);
  metaInfoCacheServletResponse.getWriter();
  metaInfoCacheServletResponse.setCharacterEncoding(StringPool.UTF8);
  assertEquals(StringPool.ISO_8859_1,metaInfoCacheServletResponse.getCharacterEncoding());
  assertNull(characterEncodingReference.get());
  metaInfoCacheServletResponse.flushBuffer();
  metaInfoCacheServletResponse.setCharacterEncoding(StringPool.UTF8);
  assertEquals(StringPool.ISO_8859_1,metaInfoCacheServletResponse.getCharacterEncoding());
  assertNull(characterEncodingReference.get());
}

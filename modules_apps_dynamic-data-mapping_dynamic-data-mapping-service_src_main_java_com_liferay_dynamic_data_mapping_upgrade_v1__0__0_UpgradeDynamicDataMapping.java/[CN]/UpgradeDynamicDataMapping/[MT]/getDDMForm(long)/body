{
  DDMForm ddmForm=_ddmForms.get(structureId);
  if (ddmForm != null) {
    return ddmForm;
  }
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    ps=connection.prepareStatement("select parentStructureId, definition, storageType from " + "DDMStructure where structureId = ?");
    ps.setLong(1,structureId);
    rs=ps.executeQuery();
    if (rs.next()) {
      long parentStructureId=rs.getLong("parentStructureId");
      String definition=rs.getString("definition");
      String storageType=rs.getString("storageType");
      if (storageType.equals("xml") || storageType.equals("expando")) {
        ddmForm=DDMFormXSDDeserializerUtil.deserialize(definition);
      }
 else {
        ddmForm=DDMFormJSONDeserializerUtil.deserialize(definition);
      }
      if (parentStructureId > 0) {
        DDMForm parentDDMForm=getDDMForm(parentStructureId);
        Set<String> commonDDMFormFieldNames=SetUtil.intersect(getDDMFormFieldsNames(parentDDMForm),getDDMFormFieldsNames(ddmForm));
        if (!commonDDMFormFieldNames.isEmpty()) {
          throw new UpgradeException("Duplicate DDM form field names: " + StringUtil.merge(commonDDMFormFieldNames));
        }
      }
      _ddmForms.put(structureId,ddmForm);
      return ddmForm;
    }
    throw new UpgradeException("Unable to find dynamic data mapping structure with ID " + structureId);
  }
  finally {
    DataAccess.cleanUp(ps,rs);
  }
}

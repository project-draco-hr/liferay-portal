{
  DDMTemplate newDDMTemplate=addDDMTemplate();
  _persistence.clearCache();
  DDMTemplate existingDDMTemplate=_persistence.findByPrimaryKey(newDDMTemplate.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingDDMTemplate.getUuid(),ReflectionTestUtil.invoke(existingDDMTemplate,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingDDMTemplate.getGroupId()),ReflectionTestUtil.<Long>invoke(existingDDMTemplate,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingDDMTemplate.getSmallImageId()),ReflectionTestUtil.<Long>invoke(existingDDMTemplate,"getOriginalSmallImageId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingDDMTemplate.getGroupId()),ReflectionTestUtil.<Long>invoke(existingDDMTemplate,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingDDMTemplate.getClassNameId()),ReflectionTestUtil.<Long>invoke(existingDDMTemplate,"getOriginalClassNameId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingDDMTemplate.getTemplateKey(),ReflectionTestUtil.invoke(existingDDMTemplate,"getOriginalTemplateKey",new Class<?>[0])));
}

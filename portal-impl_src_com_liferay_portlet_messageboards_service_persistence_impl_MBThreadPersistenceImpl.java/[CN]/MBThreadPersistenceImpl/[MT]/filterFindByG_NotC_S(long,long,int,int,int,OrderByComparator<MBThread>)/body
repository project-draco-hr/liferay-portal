{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return findByG_NotC_S(groupId,categoryId,status,start,end,orderByComparator);
  }
  StringBundler query=null;
  if (orderByComparator != null) {
    query=new StringBundler(5 + (orderByComparator.getOrderByFields().length * 2));
  }
 else {
    query=new StringBundler(6);
  }
  if (getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_MBTHREAD_WHERE);
  }
 else {
    query.append(_FILTER_SQL_SELECT_MBTHREAD_NO_INLINE_DISTINCT_WHERE_1);
  }
  query.append(_FINDER_COLUMN_G_NOTC_S_GROUPID_2);
  query.append(_FINDER_COLUMN_G_NOTC_S_CATEGORYID_2);
  query.append(_FINDER_COLUMN_G_NOTC_S_STATUS_2);
  if (!getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_MBTHREAD_NO_INLINE_DISTINCT_WHERE_2);
  }
  if (orderByComparator != null) {
    if (getDB().isSupportsInlineDistinct()) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator,true);
    }
 else {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_TABLE,orderByComparator,true);
    }
  }
 else {
    if (getDB().isSupportsInlineDistinct()) {
      query.append(MBThreadModelImpl.ORDER_BY_JPQL);
    }
 else {
      query.append(MBThreadModelImpl.ORDER_BY_SQL);
    }
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),MBThread.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,groupId);
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    if (getDB().isSupportsInlineDistinct()) {
      q.addEntity(_FILTER_ENTITY_ALIAS,MBThreadImpl.class);
    }
 else {
      q.addEntity(_FILTER_ENTITY_TABLE,MBThreadImpl.class);
    }
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(categoryId);
    qPos.add(status);
    return (List<MBThread>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

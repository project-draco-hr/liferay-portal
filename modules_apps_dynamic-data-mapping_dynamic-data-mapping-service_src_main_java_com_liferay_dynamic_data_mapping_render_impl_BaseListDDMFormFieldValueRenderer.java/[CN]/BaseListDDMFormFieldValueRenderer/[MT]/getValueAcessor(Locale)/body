{
  return new ValueAccessor(locale){
    @Override public String get(    DDMFormFieldValue ddmFormFieldValue){
      Value value=ddmFormFieldValue.getValue();
      JSONArray jsonArray=createJSONArray(value.getString(locale));
      if (jsonArray.length() == 0) {
        return StringPool.BLANK;
      }
      StringBundler sb=new StringBundler(jsonArray.length() * 2);
      for (int i=0; i < jsonArray.length(); i++) {
        LocalizedValue label=getDDMFormFieldOptionLabel(ddmFormFieldValue,jsonArray.getString(i));
        if (label == null) {
          continue;
        }
        sb.append(label.getString(locale));
        sb.append(StringPool.COMMA_AND_SPACE);
      }
      sb.setIndex(sb.index() - 1);
      return sb.toString();
    }
    protected JSONArray createJSONArray(    String json){
      try {
        return JSONFactoryUtil.createJSONArray(json);
      }
 catch (      JSONException jsone) {
        throw new ValueAccessorException(jsone);
      }
    }
    protected LocalizedValue getDDMFormFieldOptionLabel(    DDMFormFieldValue ddmFormFieldValue,    String optionValue){
      DDMFormField ddmFormField=getDDMFormField(ddmFormFieldValue);
      DDMFormFieldOptions ddmFormFieldOptions=ddmFormField.getDDMFormFieldOptions();
      return ddmFormFieldOptions.getOptionLabels(optionValue);
    }
  }
;
}

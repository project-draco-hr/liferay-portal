{
  Dictionary<String,Object> properties=new Hashtable<>();
  properties.put("jaxws",true);
  properties.put("soap.address","/greeter");
  _serviceRegistration=bundleContext.registerService(Greeter.class,new GreeterImpl(),properties);
  _configAdminBundleActivator=new ConfigurationAdminBundleActivator();
  _configAdminBundleActivator.start(bundleContext);
  Filter filter=bundleContext.createFilter("(&(objectClass=" + Bus.class.getName() + ")("+ HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_PATH+ "="+ "/soap-test))");
  ServiceTracker<Bus,Bus> serviceTracker=new ServiceTracker<>(bundleContext,filter,null);
  serviceTracker.open();
  Bus bus=serviceTracker.waitForService(10000L);
  if (bus == null) {
    throw new IllegalStateException("Bus was not registered within 10 seconds");
  }
  ServerRegistry serverRegistry=bus.getExtension(ServerRegistry.class);
  List<Server> servers=null;
  for (int i=0; i <= 100; i++) {
    servers=serverRegistry.getServers();
    if (!servers.isEmpty()) {
      break;
    }
    Thread.sleep(100L);
  }
  if (servers.isEmpty()) {
    cleanUp(bundleContext);
    throw new IllegalStateException("Endpoint was not registered within 10 seconds");
  }
}

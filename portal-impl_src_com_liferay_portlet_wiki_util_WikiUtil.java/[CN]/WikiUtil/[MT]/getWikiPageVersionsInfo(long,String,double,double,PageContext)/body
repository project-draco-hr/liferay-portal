{
  double previousVersion=0;
  double nextVersion=0;
  List<WikiPage> allPages=WikiPageLocalServiceUtil.getPages(nodeId,title,QueryUtil.ALL_POS,QueryUtil.ALL_POS,new PageVersionComparator());
  List<WikiPage> intermediatePages=new ArrayList<WikiPage>();
  for (  WikiPage wikiPage : allPages) {
    if ((wikiPage.getVersion() < sourceVersion) && (wikiPage.getVersion() > previousVersion)) {
      previousVersion=wikiPage.getVersion();
    }
    if ((wikiPage.getVersion() > targetVersion) && ((wikiPage.getVersion() < nextVersion) || (nextVersion == 0))) {
      nextVersion=wikiPage.getVersion();
    }
    if ((wikiPage.getVersion() > sourceVersion) && (wikiPage.getVersion() <= targetVersion)) {
      intermediatePages.add(wikiPage);
    }
  }
  List<Tuple> versionsInfo=new ArrayList<Tuple>();
  for (  WikiPage wikiPage : intermediatePages) {
    String extraInfo=StringPool.BLANK;
    if (wikiPage.isMinorEdit()) {
      extraInfo=LanguageUtil.get(pageContext,"minor-edit");
    }
    Tuple versionInfo=new Tuple(wikiPage.getUserId(),wikiPage.getVersion(),wikiPage.getSummary(),extraInfo);
    versionsInfo.add(versionInfo);
  }
  return new Object[]{versionsInfo,previousVersion,nextVersion};
}

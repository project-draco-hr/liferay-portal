{
  try {
    SystemProperties.set(PropsKeys.DEFAULT_LIFERAY_HOME,_getDefaultLiferayHome());
    String globalSharedLibDir=ClassUtil.getParentPath(Servlet.class.getClassLoader(),Servlet.class.getName());
    int pos=globalSharedLibDir.lastIndexOf(".jar!");
    if (pos == -1) {
      pos=globalSharedLibDir.lastIndexOf(".jar/");
    }
    pos=globalSharedLibDir.lastIndexOf(CharPool.SLASH,pos);
    globalSharedLibDir=globalSharedLibDir.substring(0,pos + 1);
    if (_log.isInfoEnabled()) {
      _log.info("Global shared lib directory " + globalSharedLibDir);
    }
    SystemProperties.set(PropsKeys.LIFERAY_LIB_GLOBAL_SHARED_DIR,globalSharedLibDir);
    String globalLibDir=ClassUtil.getParentPath(ReleaseInfo.class.getClassLoader(),ReleaseInfo.class.getName());
    pos=globalLibDir.lastIndexOf(".jar!");
    if (pos == -1) {
      pos=globalLibDir.lastIndexOf(".jar/");
    }
    pos=globalLibDir.lastIndexOf(CharPool.SLASH,pos);
    globalLibDir=globalLibDir.substring(0,pos + 1);
    if (_log.isInfoEnabled()) {
      _log.info("Global lib directory " + globalLibDir);
    }
    SystemProperties.set(PropsKeys.LIFERAY_LIB_GLOBAL_DIR,globalLibDir);
    ClassLoader classLoader=getClass().getClassLoader();
    String portalLibDir=WebDirDetector.getLibDir(classLoader);
    String portalLibDirProperty=System.getProperty(PropsKeys.LIFERAY_LIB_PORTAL_DIR);
    if (portalLibDirProperty != null) {
      if (!portalLibDirProperty.endsWith(StringPool.SLASH)) {
        portalLibDirProperty+=StringPool.SLASH;
      }
      portalLibDir=portalLibDirProperty;
    }
    if (_log.isInfoEnabled()) {
      _log.info("Portal lib directory " + portalLibDir);
    }
    SystemProperties.set(PropsKeys.LIFERAY_LIB_PORTAL_DIR,portalLibDir);
    String portalWebDir=WebDirDetector.getRootDir(portalLibDir);
    if (_log.isDebugEnabled()) {
      _log.debug("Portal web directory " + portalWebDir);
    }
    SystemProperties.set(PropsKeys.LIFERAY_WEB_PORTAL_DIR,portalWebDir);
    _configuration=new ConfigurationImpl(PropsUtil.class.getClassLoader(),PropsFiles.PORTAL);
    String liferayHome=_get(PropsKeys.LIFERAY_HOME);
    if (_log.isDebugEnabled()) {
      _log.debug("Configured Liferay home " + liferayHome);
    }
    SystemProperties.set(PropsKeys.LIFERAY_HOME,liferayHome);
    SystemProperties.set("ehcache.disk.store.dir",liferayHome + "/data/ehcache");
    if (GetterUtil.getBoolean(SystemProperties.get("company-id-properties"))) {
      _configurations=new HashMap<Long,Configuration>();
    }
  }
 catch (  Exception e) {
    if (_log.isErrorEnabled()) {
      _log.error("Unable to initialize PropsUtil",e);
    }
  }
}

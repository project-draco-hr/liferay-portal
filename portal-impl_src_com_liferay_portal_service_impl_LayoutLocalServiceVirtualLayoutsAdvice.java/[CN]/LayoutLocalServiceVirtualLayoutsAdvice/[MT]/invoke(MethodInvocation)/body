{
  if (MergeLayoutPrototypesThreadLocal.isInProgress()) {
    return methodInvocation.proceed();
  }
  Method method=methodInvocation.getMethod();
  String methodName=method.getName();
  Class<?>[] parameterTypes=method.getParameterTypes();
  Object[] arguments=methodInvocation.getArguments();
  if (methodName.equals("getLayouts") && (Arrays.equals(parameterTypes,_TYPES_L_B_L) || Arrays.equals(parameterTypes,_TYPES_L_B_L_B_I_I))) {
    long groupId=(Long)arguments[0];
    Group group=GroupLocalServiceUtil.getGroup(groupId);
    boolean privateLayout=(Boolean)arguments[1];
    long parentLayoutId=(Long)arguments[2];
    LayoutSet layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(groupId,privateLayout);
    if (!_mergeLayouts(group,layoutSet,arguments)) {
      return methodInvocation.proceed();
    }
    List<Layout> layouts=(List<Layout>)methodInvocation.proceed();
    if (PropsValues.USER_GROUPS_COPY_LAYOUTS_TO_USER_PERSONAL_SITE) {
      return layouts;
    }
    if (group.isUser()) {
      _virtualLayoutTargetGroupId.set(group.getGroupId());
      if (parentLayoutId == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
        return addUserGroupLayouts(group,layoutSet,layouts,parentLayoutId);
      }
      return addChildUserGroupLayouts(group,layouts);
    }
    if (group.isUserGroup() && (parentLayoutId != LayoutConstants.DEFAULT_PARENT_LAYOUT_ID)) {
      long targetGroupId=_virtualLayoutTargetGroupId.get();
      if (targetGroupId != GroupConstants.DEFAULT_LIVE_GROUP_ID) {
        Group targetGroup=GroupLocalServiceUtil.getGroup(targetGroupId);
        return addChildUserGroupLayouts(targetGroup,layouts);
      }
    }
    return layouts;
  }
  return methodInvocation.proceed();
}

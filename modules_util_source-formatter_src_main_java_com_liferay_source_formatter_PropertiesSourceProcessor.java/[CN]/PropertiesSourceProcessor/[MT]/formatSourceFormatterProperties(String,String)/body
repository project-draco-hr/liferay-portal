{
  String path=StringPool.BLANK;
  int pos=fileName.lastIndexOf(CharPool.SLASH);
  if (pos != -1) {
    path=fileName.substring(0,pos + 1);
  }
  boolean hasPrivateAppsDir=false;
  if (portalSource) {
    File privateAppsDir=getFile("modules/private/apps",PORTAL_MAX_DIR_LEVEL);
    if (privateAppsDir != null) {
      hasPrivateAppsDir=true;
    }
  }
  Properties properties=new Properties();
  InputStream inputStream=new FileInputStream(fileName);
  properties.load(inputStream);
  Enumeration<String> enu=(Enumeration<String>)properties.propertyNames();
  while (enu.hasMoreElements()) {
    String key=enu.nextElement();
    if (!key.endsWith("excludes")) {
      continue;
    }
    String value=properties.getProperty(key);
    if (Validator.isNull(value)) {
      continue;
    }
    List<String> propertyFileNames=ListUtil.fromString(value,StringPool.COMMA);
    for (    String propertyFileName : propertyFileNames) {
      if (propertyFileName.startsWith("**") || propertyFileName.endsWith("**")) {
        continue;
      }
      pos=propertyFileName.indexOf(CharPool.AT);
      if (pos != -1) {
        propertyFileName=propertyFileName.substring(0,pos);
      }
      if (portalSource && !hasPrivateAppsDir && propertyFileName.contains("/private/apps/")) {
        continue;
      }
      File file=new File(path + propertyFileName);
      if (!file.exists()) {
        processMessage(fileName,"Incorrect property value: " + propertyFileName);
      }
    }
  }
}

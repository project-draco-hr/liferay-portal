{
  File languagePropertiesFile=new File(getFile("portal-impl",PORTAL_MAX_DIR_LEVEL),"src/content/" + fileName);
  if (!languagePropertiesFile.exists()) {
    return;
  }
  String languagePropertiesContent=FileUtil.read(languagePropertiesFile);
  String newLanguagePropertiesContent=languagePropertiesContent;
  String[][] categoryPrefixAndNameArray=getCategoryPrefixAndNameArray();
  StringBundler sb=new StringBundler();
  if (processMessage) {
    sb.append("The following language keys were used in multiple ");
    sb.append("modules and have been consolidated, or they already ");
    sb.append("existed in ");
    sb.append("portal-impl\\src\\content\\Language.properties:");
    sb.append("\n");
  }
  for (  Map.Entry<String,String> entry : languageKeysMap.entrySet()) {
    String line=entry.getKey() + "=" + entry.getValue();
    if (processMessage) {
      sb.append(line);
      sb.append("\n");
    }
    String categoryName=getCategoryName(line,categoryPrefixAndNameArray);
    int pos=newLanguagePropertiesContent.indexOf("## " + categoryName);
    for (int i=0; i < 3; i++) {
      pos=newLanguagePropertiesContent.indexOf("\n",pos + 1);
    }
    if (!newLanguagePropertiesContent.contains("\n" + line + "\n")) {
      newLanguagePropertiesContent=StringUtil.insert(newLanguagePropertiesContent,line + "\n",pos + 1);
    }
  }
  if (processMessage) {
    processMessage("portal-impl/src/content/" + fileName,sb.toString());
  }
  processFormattedFile(languagePropertiesFile,"portal-impl/src/content/" + fileName,languagePropertiesContent,newLanguagePropertiesContent);
}

{
  JSONObject jsonObject=null;
  JSONObject queueJsonObject=null;
  try {
    jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/computer/api/json?pretty&tree=computer" + "[displayName,idle,offline]"),false,5000);
    queueJsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/queue/api/json?pretty"),false,5000);
  }
 catch (  Exception e) {
    System.out.println("WARNING : Exception occurred while attempting to read: " + url);
    return null;
  }
  JSONArray jsonArray=jsonObject.getJSONArray("computer");
  int idle=0;
  int queueLength=0;
  for (int i=0; i < jsonArray.length(); i++) {
    JSONObject idleJsonObject=jsonArray.getJSONObject(i);
    if (idleJsonObject.getBoolean("idle") && !idleJsonObject.getBoolean("offline")) {
      String displayName=idleJsonObject.getString("displayName");
      if (!displayName.equals("master")) {
        idle++;
      }
    }
  }
  if (queueJsonObject.has("items")) {
    JSONArray itemsJsonArray=queueJsonObject.getJSONArray("items");
    queueLength=itemsJsonArray.length();
  }
  int result=idle - queueLength;
  String message=url + ": " + idle+ " : "+ queueLength+ " : "+ recentJobsCount;
  if (recentJobsCount != null) {
    result-=recentJobsCount;
  }
  message+=" total: " + result;
  System.out.println(message);
  return result;
}

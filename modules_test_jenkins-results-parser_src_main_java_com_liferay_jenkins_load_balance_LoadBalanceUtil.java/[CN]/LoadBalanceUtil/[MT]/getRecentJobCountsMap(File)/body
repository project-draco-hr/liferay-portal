{
  Map<String,Integer> jobCountMap=new HashMap<>();
  if (!dir.exists()) {
    return jobCountMap;
  }
  for (  File file : dir.listFiles()) {
    if ((System.currentTimeMillis() - file.lastModified()) > recentJobsPeriod) {
      file.delete();
      continue;
    }
    try {
      String content=JenkinsResultsParserUtil.read(file);
      if (content.length() == 0) {
        continue;
      }
      int totalJobCount=0;
      StringBuilder sb=new StringBuilder();
      for (      String jobCountData : content.split("\\|")) {
        int x=jobCountData.indexOf("-");
        int jobCount=Integer.parseInt(jobCountData.substring(0,x));
        long timestamp=Long.parseLong(jobCountData.substring(x + 1));
        if ((timestamp + recentJobsPeriod) > System.currentTimeMillis()) {
          if (sb.length() > 0) {
            sb.append("|");
          }
          sb.append(jobCountData);
          totalJobCount+=jobCount;
        }
      }
      jobCountMap.put(file.getName(),totalJobCount);
      if (sb.length() > 0) {
        JenkinsResultsParserUtil.write(file,sb.toString());
      }
 else {
        file.delete();
      }
    }
 catch (    Exception e) {
      file.delete();
    }
  }
  return jobCountMap;
}

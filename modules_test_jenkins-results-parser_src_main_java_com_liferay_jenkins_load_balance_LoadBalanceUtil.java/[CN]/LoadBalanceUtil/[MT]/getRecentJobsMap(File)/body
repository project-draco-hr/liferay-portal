{
  Map<String,Integer> jobsMap=new HashMap<>();
  if (!dir.exists()) {
    return jobsMap;
  }
  for (  File file : dir.listFiles()) {
    if ((System.currentTimeMillis() - file.lastModified()) > recentJobsPeriod) {
      file.delete();
      continue;
    }
    try {
      String jobsData=JenkinsResultsParserUtil.read(file);
      if (jobsData.length() > 0) {
        int totalJobCount=0;
        String newJobsData="";
        for (        String jobData : jobsData.split("\\|")) {
          int x=jobData.indexOf("-");
          int jobCount=Integer.parseInt(jobData.substring(0,x));
          long timestamp=Long.parseLong(jobData.substring(x + 1));
          if ((timestamp + recentJobsPeriod) > System.currentTimeMillis()) {
            if (newJobsData.length() > 0) {
              newJobsData+="|";
            }
            newJobsData+=jobData;
            totalJobCount+=jobCount;
          }
        }
        jobsMap.put(file.getName(),totalJobCount);
        if (newJobsData.length() > 0) {
          JenkinsResultsParserUtil.write(file,newJobsData);
        }
 else {
          file.delete();
        }
      }
    }
 catch (    Exception e) {
      file.delete();
    }
  }
  return jobsMap;
}

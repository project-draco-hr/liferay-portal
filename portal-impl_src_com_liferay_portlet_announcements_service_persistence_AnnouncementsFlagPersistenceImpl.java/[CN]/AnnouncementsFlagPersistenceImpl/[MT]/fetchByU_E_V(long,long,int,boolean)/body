{
  Object[] finderArgs=new Object[]{userId,entryId,value};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_ANNOUNCEMENTSFLAG_WHERE);
    query.append(_FINDER_COLUMN_U_E_V_USERID_2);
    query.append(_FINDER_COLUMN_U_E_V_ENTRYID_2);
    query.append(_FINDER_COLUMN_U_E_V_VALUE_2);
    query.append(AnnouncementsFlagModelImpl.ORDER_BY_JPQL);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(userId);
      qPos.add(entryId);
      qPos.add(value);
      List<AnnouncementsFlag> list=q.list();
      result=list;
      AnnouncementsFlag announcementsFlag=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,list);
      }
 else {
        announcementsFlag=list.get(0);
        cacheResult(announcementsFlag);
        if ((announcementsFlag.getUserId() != userId) || (announcementsFlag.getEntryId() != entryId) || (announcementsFlag.getValue() != value)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs,announcementsFlag);
        }
      }
      return announcementsFlag;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_U_E_V,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (AnnouncementsFlag)result;
    }
  }
}

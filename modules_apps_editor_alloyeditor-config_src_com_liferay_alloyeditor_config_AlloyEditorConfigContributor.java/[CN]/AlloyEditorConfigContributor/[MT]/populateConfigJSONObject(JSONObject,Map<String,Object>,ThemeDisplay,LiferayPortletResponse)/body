{
  String contentsLanguageId=(String)inputEditorTaglibAttributes.get("liferay-ui:input-editor:contentsLanguageId");
  Locale contentsLocale=LocaleUtil.fromLanguageId(contentsLanguageId);
  String contentsLanguageDir=LanguageUtil.get(contentsLocale,"lang.dir");
  contentsLanguageId=LocaleUtil.toLanguageId(contentsLocale);
  jsonObject.put("contentsLangDirection",HtmlUtil.escapeJS(contentsLanguageDir));
  jsonObject.put("contentsLanguage",contentsLanguageId.replace("iw_","he_"));
  LiferayPortletURL documentSelectorURL=liferayPortletResponse.createRenderURL(PortletKeys.DOCUMENT_SELECTOR);
  documentSelectorURL.setParameter("mvcPath","/view.jsp");
  documentSelectorURL.setParameter("groupId",String.valueOf(themeDisplay.getScopeGroupId()));
  String name=liferayPortletResponse.getNamespace() + GetterUtil.getString((String)inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  documentSelectorURL.setParameter("eventName",name + "selectDocument");
  documentSelectorURL.setParameter("showGroupsSelector",Boolean.TRUE.toString());
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  if (fileBrowserParamsMap != null) {
    for (    Map.Entry<String,String> entry : fileBrowserParamsMap.entrySet()) {
      documentSelectorURL.setParameter(entry.getKey(),entry.getValue());
    }
  }
  jsonObject.put("filebrowserBrowseUrl",documentSelectorURL.toString());
  jsonObject.put("filebrowserFlashBrowseUrl",documentSelectorURL.toString() + "&Type=flash");
  jsonObject.put("filebrowserImageBrowseLinkUrl",documentSelectorURL.toString() + "&Type=image");
  jsonObject.put("filebrowserImageBrowseUrl",documentSelectorURL.toString() + "&Type=image");
  String languageId=LocaleUtil.toLanguageId(themeDisplay.getLocale());
  jsonObject.put("language",languageId.replace("iw_","he_"));
  jsonObject.put("srcNode","#" + name);
  JSONObject toolbars=JSONFactoryUtil.createJSONObject();
  try {
    JSONArray toolbarAdd=JSONFactoryUtil.createJSONArray("['imageselector']");
    JSONArray toolbarImage=JSONFactoryUtil.createJSONArray("['left', 'right']");
    JSONArray toolbarStyles=JSONFactoryUtil.createJSONArray("['strong', 'em', 'u', 'h1', 'h2', 'a', 'twitter']");
    toolbars.put("add",toolbarAdd);
    toolbars.put("image",toolbarImage);
    toolbars.put("styles",toolbarStyles);
  }
 catch (  JSONException jsone) {
  }
  jsonObject.put("toolbars",toolbars);
}

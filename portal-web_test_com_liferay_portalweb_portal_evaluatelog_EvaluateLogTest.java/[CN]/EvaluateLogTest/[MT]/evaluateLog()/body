{
  String xml=FileUtil.read("log");
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(xml));
  String line=null;
  while ((line=unsyncBufferedReader.readLine()) != null) {
    if (!line.contains("Exception") && !line.contains("SEVERE")) {
      continue;
    }
    if (line.contains("[antelope:post]")) {
      continue;
    }
    if (line.contains("[junit]")) {
      continue;
    }
    if (line.contains("BasicResourcePool")) {
      continue;
    }
    if (line.contains("Caused by:")) {
      continue;
    }
    if (line.matches(".*The web application \\[.*\\] appears to have started " + "a thread.*")) {
      if (line.contains("[AWT-Windows]")) {
        continue;
      }
      if (line.contains("[com.google.inject.internal.Finalizer]")) {
        continue;
      }
      if (line.contains("[MultiThreadedHttpConnectionManager cleanup]")) {
        continue;
      }
      if (line.contains("[org.python.google.common.base.internal.Finalizer]")) {
        continue;
      }
    }
    if (line.contains("Table 'lportal.lock_' doesn't exist")) {
      continue;
    }
    if (line.contains("Exception sending context destroyed event to listener " + "instance of class com.liferay.portal.spring.context." + "PortalContextLoaderListener")) {
      continue;
    }
    if (line.contains("user lacks privilege or object not found: LOCK_")) {
      continue;
    }
    if (line.contains("JBREM00200: ")) {
      continue;
    }
    if (line.contains("java.nio.channels.ClosedChannelException")) {
      continue;
    }
    System.out.println("\nException Line:\n\n" + line + "\n");
    unsyncBufferedReader.close();
    return false;
  }
  unsyncBufferedReader.close();
  return true;
}

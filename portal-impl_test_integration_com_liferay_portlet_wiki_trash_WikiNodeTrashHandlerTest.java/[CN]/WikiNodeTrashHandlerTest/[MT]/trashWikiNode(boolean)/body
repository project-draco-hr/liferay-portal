{
  Group group=ServiceTestUtil.addGroup();
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setScopeGroupId(group.getGroupId());
  String titleWikiNode=ServiceTestUtil.randomString();
  int initialWikiNodesSearchCount=searchWikiNodesCount(group.getGroupId());
  int initialTrashEntriesSearchCount=searchTrashEntriesCount(titleWikiNode,serviceContext);
  WikiNode wikiNode=addWikiNode(titleWikiNode,serviceContext);
  int initialWikiPagesCount=getWikiPagesNotInTrashCount(wikiNode.getNodeId());
  String titleWikiPage=ServiceTestUtil.randomString();
  WikiPage wikiPage=addWikiPage(wikiNode.getNodeId(),titleWikiPage,serviceContext);
  int oldStatus=wikiPage.getStatus();
  WikiNodeServiceUtil.moveNodeToTrash(wikiNode.getNodeId());
  TrashEntry trashEntry=TrashEntryLocalServiceUtil.getEntry(WikiNode.class.getName(),wikiNode.getNodeId());
  Assert.assertEquals(wikiNode.getNodeId(),trashEntry.getClassPK());
  Assert.assertEquals(WorkflowConstants.STATUS_IN_TRASH,wikiNode.getStatus());
  Assert.assertEquals(initialWikiPagesCount,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
  Assert.assertFalse(isAssetEntryVisible(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
  Assert.assertEquals(initialWikiNodesSearchCount + 1,searchWikiNodesCount(group.getGroupId()));
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(wikiNode.getModelClassName());
  if (delete) {
    trashHandler.deleteTrashEntry(wikiNode.getNodeId());
    Assert.assertEquals(initialWikiPagesCount,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
    Assert.assertEquals(initialWikiNodesSearchCount,searchWikiNodesCount(group.getGroupId()));
    Assert.assertEquals(initialTrashEntriesSearchCount,searchTrashEntriesCount(titleWikiNode,serviceContext));
  }
 else {
    trashHandler.restoreTrashEntry(wikiNode.getNodeId());
    wikiNode=WikiNodeServiceUtil.getNode(wikiNode.getNodeId());
    Assert.assertEquals(oldStatus,wikiNode.getStatus());
    Assert.assertEquals(initialWikiPagesCount + 1,getWikiPagesNotInTrashCount(wikiNode.getNodeId()));
    Assert.assertTrue(isAssetEntryVisible(WikiPage.class.getName(),wikiPage.getResourcePrimKey()));
    Assert.assertEquals(initialTrashEntriesSearchCount,searchTrashEntriesCount(titleWikiNode,serviceContext));
    Assert.assertEquals(initialWikiNodesSearchCount,searchWikiNodesCount(group.getGroupId()));
    trashHandler.deleteTrashEntry(wikiNode.getNodeId());
  }
}

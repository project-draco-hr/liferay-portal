{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext();
  serviceContext.setScopeGroupId(group.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  int initialBaseModelsCount=getBaseModelsNotInTrashCount(parentBaseModel);
  int initialTrashEntriesCount=getTrashEntriesCount(group.getGroupId());
  baseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)baseModel.getPrimaryKeyObj());
  baseModel=getBaseModel((Long)baseModel.getPrimaryKeyObj());
  Assert.assertEquals(initialBaseModelsCount,getBaseModelsNotInTrashCount(parentBaseModel));
  Assert.assertEquals(initialTrashEntriesCount + 1,getTrashEntriesCount(group.getGroupId()));
  Assert.assertTrue(isBaseModelTrashName(baseModel));
  BaseModel<?> duplicateBaseModel=addBaseModel(parentBaseModel,true,serviceContext);
  moveBaseModelToTrash((Long)duplicateBaseModel.getPrimaryKeyObj());
  duplicateBaseModel=getBaseModel((Long)duplicateBaseModel.getPrimaryKeyObj());
  Assert.assertEquals(initialBaseModelsCount,getBaseModelsNotInTrashCount(parentBaseModel));
  Assert.assertEquals(initialTrashEntriesCount + 2,getTrashEntriesCount(group.getGroupId()));
  Assert.assertTrue(isBaseModelTrashName(duplicateBaseModel));
}

{
  long[] deleteFolderIds=null;
  long folderId=ParamUtil.getLong(actionRequest,"folderId");
  if (folderId > 0) {
    deleteFolderIds=new long[]{folderId};
  }
 else {
    deleteFolderIds=StringUtil.split(ParamUtil.getString(actionRequest,"folderIds"),0L);
  }
  for (  long deleteFolderId : deleteFolderIds) {
    if (moveToTrash) {
      DLAppServiceUtil.moveFolderToTrash(deleteFolderId);
    }
 else {
      DLAppServiceUtil.deleteFolder(deleteFolderId);
    }
    AssetPublisherUtil.removeRecentFolderId(actionRequest,DLFileEntry.class.getName(),deleteFolderId);
  }
  if (moveToTrash && (deleteFolderIds.length > 0)) {
    Map<String,String[]> data=new HashMap<String,String[]>();
    data.put("restoreFolderIds",ArrayUtil.toStringArray(deleteFolderIds));
    SessionMessages.add(actionRequest,liferayPortletConfig.getPortletId() + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS_DATA,data);
    hideDefaultSuccessMessage(liferayPortletConfig,actionRequest);
  }
}

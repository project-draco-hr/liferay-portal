{
  long[] deleteFolderIds=null;
  long folderId=ParamUtil.getLong(actionRequest,"folderId");
  if (folderId > 0) {
    deleteFolderIds=new long[]{folderId};
  }
 else {
    deleteFolderIds=StringUtil.split(ParamUtil.getString(actionRequest,"folderIds"),0L);
  }
  for (  long deleteFolderId : deleteFolderIds) {
    if (moveToTrash) {
      DLAppServiceUtil.moveFolderToTrash(deleteFolderId);
    }
 else {
      DLAppServiceUtil.deleteFolder(deleteFolderId);
    }
    AssetPublisherUtil.removeRecentFolderId(actionRequest,DLFileEntry.class.getName(),deleteFolderId);
  }
  if (moveToTrash && Validator.isNotNull(deleteFolderIds)) {
    Map<String,long[]> data=new HashMap<String,long[]>();
    data.put("restoreFolderIds",deleteFolderIds);
    SessionMessages.add(actionRequest,portletConfig.getPortletId() + SessionMessages.KEY_SUFFIX_DELETE_SUCCESS,data);
    SessionMessages.add(actionRequest,portletConfig.getPortletName() + SessionMessages.KEY_SUFFIX_HIDE_DEFAULT_SUCCESS_MESSAGE);
  }
}

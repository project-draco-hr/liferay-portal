{
  ServiceContext serviceContext=ServiceContextFactory.getInstance(DLFileEntry.class.getName(),actionRequest);
  List<Long> fileEntryTypeIds=ListUtil.toList(StringUtil.split(ParamUtil.getString(actionRequest,"fileEntryTypeSearchContainerPrimaryKeys"),0L));
  List<ObjectValuePair<Long,String>> workflowDefinitions=new ArrayList<ObjectValuePair<Long,String>>();
  if (fileEntryTypeIds.isEmpty()) {
    fileEntryTypeIds.add(new Long(0));
  }
 else {
    workflowDefinitions.add(new ObjectValuePair<Long,String>(new Long(0),StringPool.BLANK));
  }
  for (  long fileEntryTypeId : fileEntryTypeIds) {
    String workflowDefinition=ParamUtil.getString(serviceContext,"workflowDefinition" + fileEntryTypeId);
    workflowDefinitions.add(new ObjectValuePair<Long,String>(fileEntryTypeId,workflowDefinition));
  }
  WorkflowDefinitionLinkLocalServiceUtil.updateWorkflowDefinitionLinks(serviceContext.getUserId(),serviceContext.getCompanyId(),serviceContext.getScopeGroupId(),DLFolder.class.getName(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,workflowDefinitions);
}

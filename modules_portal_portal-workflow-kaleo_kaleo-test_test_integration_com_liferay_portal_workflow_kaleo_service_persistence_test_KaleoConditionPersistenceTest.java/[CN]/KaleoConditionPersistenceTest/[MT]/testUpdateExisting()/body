{
  long pk=RandomTestUtil.nextLong();
  KaleoCondition newKaleoCondition=_persistence.create(pk);
  newKaleoCondition.setGroupId(RandomTestUtil.nextLong());
  newKaleoCondition.setCompanyId(RandomTestUtil.nextLong());
  newKaleoCondition.setUserId(RandomTestUtil.nextLong());
  newKaleoCondition.setUserName(RandomTestUtil.randomString());
  newKaleoCondition.setCreateDate(RandomTestUtil.nextDate());
  newKaleoCondition.setModifiedDate(RandomTestUtil.nextDate());
  newKaleoCondition.setKaleoDefinitionId(RandomTestUtil.nextLong());
  newKaleoCondition.setKaleoNodeId(RandomTestUtil.nextLong());
  newKaleoCondition.setScript(RandomTestUtil.randomString());
  newKaleoCondition.setScriptLanguage(RandomTestUtil.randomString());
  newKaleoCondition.setScriptRequiredContexts(RandomTestUtil.randomString());
  _kaleoConditions.add(_persistence.update(newKaleoCondition));
  KaleoCondition existingKaleoCondition=_persistence.findByPrimaryKey(newKaleoCondition.getPrimaryKey());
  Assert.assertEquals(existingKaleoCondition.getKaleoConditionId(),newKaleoCondition.getKaleoConditionId());
  Assert.assertEquals(existingKaleoCondition.getGroupId(),newKaleoCondition.getGroupId());
  Assert.assertEquals(existingKaleoCondition.getCompanyId(),newKaleoCondition.getCompanyId());
  Assert.assertEquals(existingKaleoCondition.getUserId(),newKaleoCondition.getUserId());
  Assert.assertEquals(existingKaleoCondition.getUserName(),newKaleoCondition.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoCondition.getCreateDate()),Time.getShortTimestamp(newKaleoCondition.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKaleoCondition.getModifiedDate()),Time.getShortTimestamp(newKaleoCondition.getModifiedDate()));
  Assert.assertEquals(existingKaleoCondition.getKaleoDefinitionId(),newKaleoCondition.getKaleoDefinitionId());
  Assert.assertEquals(existingKaleoCondition.getKaleoNodeId(),newKaleoCondition.getKaleoNodeId());
  Assert.assertEquals(existingKaleoCondition.getScript(),newKaleoCondition.getScript());
  Assert.assertEquals(existingKaleoCondition.getScriptLanguage(),newKaleoCondition.getScriptLanguage());
  Assert.assertEquals(existingKaleoCondition.getScriptRequiredContexts(),newKaleoCondition.getScriptRequiredContexts());
}

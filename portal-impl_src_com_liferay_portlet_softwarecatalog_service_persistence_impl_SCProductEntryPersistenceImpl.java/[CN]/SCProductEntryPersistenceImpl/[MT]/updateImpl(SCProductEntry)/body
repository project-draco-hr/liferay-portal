{
  scProductEntry=toUnwrappedModel(scProductEntry);
  boolean isNew=scProductEntry.isNew();
  SCProductEntryModelImpl scProductEntryModelImpl=(SCProductEntryModelImpl)scProductEntry;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (scProductEntry.getCreateDate() == null)) {
    if (serviceContext == null) {
      scProductEntry.setCreateDate(now);
    }
 else {
      scProductEntry.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!scProductEntryModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      scProductEntry.setModifiedDate(now);
    }
 else {
      scProductEntry.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (scProductEntry.isNew()) {
      session.save(scProductEntry);
      scProductEntry.setNew(false);
    }
 else {
      scProductEntry=(SCProductEntry)session.merge(scProductEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !SCProductEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((scProductEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scProductEntryModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{scProductEntryModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((scProductEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scProductEntryModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{scProductEntryModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((scProductEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{scProductEntryModelImpl.getOriginalGroupId(),scProductEntryModelImpl.getOriginalUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_U,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U,args);
      args=new Object[]{scProductEntryModelImpl.getGroupId(),scProductEntryModelImpl.getUserId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_U,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U,args);
    }
  }
  entityCache.putResult(SCProductEntryModelImpl.ENTITY_CACHE_ENABLED,SCProductEntryImpl.class,scProductEntry.getPrimaryKey(),scProductEntry,false);
  clearUniqueFindersCache(scProductEntryModelImpl);
  cacheUniqueFindersCache(scProductEntryModelImpl,isNew);
  scProductEntry.resetOriginalValues();
  return scProductEntry;
}

{
  Bundle bundle=mock(Bundle.class);
  Class<?> clazz=getClass();
  when(bundle.getEntry(Matchers.eq("package.json"))).thenReturn(clazz.getResource("dependencies/package.json"));
  SoyPortletHelper soyPortletHelper=new SoyPortletHelper(bundle);
  String portletNamespace=StringUtil.randomString();
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  jsonObject.put("element","#p_p_id" + portletNamespace + " .portlet-content-container");
  jsonObject.put("key 1","value 1");
  String expectedPortletJavaScript=soyPortletHelper.getPortletJavaScript(jsonObject.toJSONString(),"View.soy",portletNamespace);
  Template template=createMockedTemplate();
  template.put(TemplateConstants.NAMESPACE,StringUtil.randomString());
  template.put("key 1","value 1");
  String actualPortletJavaScript=soyPortletHelper.getPortletJavaScript(template,"View",portletNamespace);
  Assert.assertEquals(expectedPortletJavaScript,actualPortletJavaScript);
}

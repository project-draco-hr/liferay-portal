{
  long pk=nextLong();
  MembershipInvitation newMembershipInvitation=_persistence.create(pk);
  newMembershipInvitation.setCompanyId(nextLong());
  newMembershipInvitation.setUserId(nextLong());
  newMembershipInvitation.setCreateDate(nextDate());
  newMembershipInvitation.setAcceptedDate(nextDate());
  newMembershipInvitation.setDeclinedDate(nextDate());
  newMembershipInvitation.setInvitedUserId(nextLong());
  newMembershipInvitation.setGroupId(nextLong());
  newMembershipInvitation.setKey(randomString());
  _persistence.update(newMembershipInvitation,false);
  MembershipInvitation existingMembershipInvitation=_persistence.findByPrimaryKey(newMembershipInvitation.getPrimaryKey());
  assertEquals(existingMembershipInvitation.getMembershipRequestId(),newMembershipInvitation.getMembershipRequestId());
  assertEquals(existingMembershipInvitation.getCompanyId(),newMembershipInvitation.getCompanyId());
  assertEquals(existingMembershipInvitation.getUserId(),newMembershipInvitation.getUserId());
  assertEquals(Time.getShortTimestamp(existingMembershipInvitation.getCreateDate()),Time.getShortTimestamp(newMembershipInvitation.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingMembershipInvitation.getAcceptedDate()),Time.getShortTimestamp(newMembershipInvitation.getAcceptedDate()));
  assertEquals(Time.getShortTimestamp(existingMembershipInvitation.getDeclinedDate()),Time.getShortTimestamp(newMembershipInvitation.getDeclinedDate()));
  assertEquals(existingMembershipInvitation.getInvitedUserId(),newMembershipInvitation.getInvitedUserId());
  assertEquals(existingMembershipInvitation.getGroupId(),newMembershipInvitation.getGroupId());
  assertEquals(existingMembershipInvitation.getKey(),newMembershipInvitation.getKey());
}

{
  double insurance=0.0;
  double subtotal=0.0;
  ShoppingGroupServiceSettings shoppingGroupServiceSettings=null;
  for (  Map.Entry<ShoppingCartItem,Integer> entry : items.entrySet()) {
    ShoppingCartItem cartItem=entry.getKey();
    Integer count=entry.getValue();
    ShoppingItem item=cartItem.getItem();
    if (shoppingGroupServiceSettings == null) {
      ShoppingCategory category=item.getCategory();
      shoppingGroupServiceSettings=ShoppingGroupServiceSettings.getInstance(category.getGroupId());
    }
    ShoppingItemPrice itemPrice=_getItemPrice(item,count.intValue());
    subtotal+=calculateActualPrice(itemPrice) * count.intValue();
  }
  if ((shoppingGroupServiceSettings == null) || (subtotal == 0)) {
    return insurance;
  }
  double insuranceRate=0.0;
  double[] range=ShoppingGroupServiceSettings.INSURANCE_RANGE;
  for (int i=0; i < range.length - 1; i++) {
    if ((subtotal > range[i]) && (subtotal <= range[i + 1])) {
      int rangeId=i / 2;
      if (MathUtil.isOdd(i)) {
        rangeId=(i + 1) / 2;
      }
      insuranceRate=GetterUtil.getDouble(shoppingGroupServiceSettings.getInsurance()[rangeId]);
    }
  }
  String formula=shoppingGroupServiceSettings.getInsuranceFormula();
  if (formula.equals("flat")) {
    insurance+=insuranceRate;
  }
 else   if (formula.equals("percentage")) {
    insurance+=subtotal * insuranceRate;
  }
  return insurance;
}

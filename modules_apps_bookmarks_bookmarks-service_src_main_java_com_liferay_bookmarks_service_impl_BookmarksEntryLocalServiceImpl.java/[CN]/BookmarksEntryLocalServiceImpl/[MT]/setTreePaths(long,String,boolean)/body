{
  if (treePath == null) {
    throw new IllegalArgumentException("Tree path is null");
  }
  final ActionableDynamicQuery actionableDynamicQuery=getActionableDynamicQuery();
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Property folderIdProperty=PropertyFactoryUtil.forName("folderId");
      dynamicQuery.add(folderIdProperty.eq(folderId));
      Property treePathProperty=PropertyFactoryUtil.forName("treePath");
      dynamicQuery.add(RestrictionsFactoryUtil.or(treePathProperty.isNull(),treePathProperty.ne(treePath)));
    }
  }
);
  final Indexer<BookmarksEntry> indexer=IndexerRegistryUtil.getIndexer(BookmarksEntry.class);
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<BookmarksEntry>(){
    @Override public void performAction(    BookmarksEntry entry) throws PortalException {
      entry.setTreePath(treePath);
      updateBookmarksEntry(entry);
      if (!reindex) {
        return;
      }
      Document document=indexer.getDocument(entry);
      actionableDynamicQuery.addDocument(document);
    }
  }
);
  actionableDynamicQuery.performActions();
}

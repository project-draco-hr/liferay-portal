{
  long pk=RandomTestUtil.nextLong();
  Account newAccount=_persistence.create(pk);
  newAccount.setCompanyId(RandomTestUtil.nextLong());
  newAccount.setUserId(RandomTestUtil.nextLong());
  newAccount.setUserName(RandomTestUtil.randomString());
  newAccount.setCreateDate(RandomTestUtil.nextDate());
  newAccount.setModifiedDate(RandomTestUtil.nextDate());
  newAccount.setAddress(RandomTestUtil.randomString());
  newAccount.setPersonalName(RandomTestUtil.randomString());
  newAccount.setProtocol(RandomTestUtil.randomString());
  newAccount.setIncomingHostName(RandomTestUtil.randomString());
  newAccount.setIncomingPort(RandomTestUtil.nextInt());
  newAccount.setIncomingSecure(RandomTestUtil.randomBoolean());
  newAccount.setOutgoingHostName(RandomTestUtil.randomString());
  newAccount.setOutgoingPort(RandomTestUtil.nextInt());
  newAccount.setOutgoingSecure(RandomTestUtil.randomBoolean());
  newAccount.setLogin(RandomTestUtil.randomString());
  newAccount.setPassword(RandomTestUtil.randomString());
  newAccount.setSavePassword(RandomTestUtil.randomBoolean());
  newAccount.setSignature(RandomTestUtil.randomString());
  newAccount.setUseSignature(RandomTestUtil.randomBoolean());
  newAccount.setFolderPrefix(RandomTestUtil.randomString());
  newAccount.setInboxFolderId(RandomTestUtil.nextLong());
  newAccount.setDraftFolderId(RandomTestUtil.nextLong());
  newAccount.setSentFolderId(RandomTestUtil.nextLong());
  newAccount.setTrashFolderId(RandomTestUtil.nextLong());
  newAccount.setDefaultSender(RandomTestUtil.randomBoolean());
  _accounts.add(_persistence.update(newAccount));
  Account existingAccount=_persistence.findByPrimaryKey(newAccount.getPrimaryKey());
  Assert.assertEquals(existingAccount.getAccountId(),newAccount.getAccountId());
  Assert.assertEquals(existingAccount.getCompanyId(),newAccount.getCompanyId());
  Assert.assertEquals(existingAccount.getUserId(),newAccount.getUserId());
  Assert.assertEquals(existingAccount.getUserName(),newAccount.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingAccount.getCreateDate()),Time.getShortTimestamp(newAccount.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAccount.getModifiedDate()),Time.getShortTimestamp(newAccount.getModifiedDate()));
  Assert.assertEquals(existingAccount.getAddress(),newAccount.getAddress());
  Assert.assertEquals(existingAccount.getPersonalName(),newAccount.getPersonalName());
  Assert.assertEquals(existingAccount.getProtocol(),newAccount.getProtocol());
  Assert.assertEquals(existingAccount.getIncomingHostName(),newAccount.getIncomingHostName());
  Assert.assertEquals(existingAccount.getIncomingPort(),newAccount.getIncomingPort());
  Assert.assertEquals(existingAccount.getIncomingSecure(),newAccount.getIncomingSecure());
  Assert.assertEquals(existingAccount.getOutgoingHostName(),newAccount.getOutgoingHostName());
  Assert.assertEquals(existingAccount.getOutgoingPort(),newAccount.getOutgoingPort());
  Assert.assertEquals(existingAccount.getOutgoingSecure(),newAccount.getOutgoingSecure());
  Assert.assertEquals(existingAccount.getLogin(),newAccount.getLogin());
  Assert.assertEquals(existingAccount.getPassword(),newAccount.getPassword());
  Assert.assertEquals(existingAccount.getSavePassword(),newAccount.getSavePassword());
  Assert.assertEquals(existingAccount.getSignature(),newAccount.getSignature());
  Assert.assertEquals(existingAccount.getUseSignature(),newAccount.getUseSignature());
  Assert.assertEquals(existingAccount.getFolderPrefix(),newAccount.getFolderPrefix());
  Assert.assertEquals(existingAccount.getInboxFolderId(),newAccount.getInboxFolderId());
  Assert.assertEquals(existingAccount.getDraftFolderId(),newAccount.getDraftFolderId());
  Assert.assertEquals(existingAccount.getSentFolderId(),newAccount.getSentFolderId());
  Assert.assertEquals(existingAccount.getTrashFolderId(),newAccount.getTrashFolderId());
  Assert.assertEquals(existingAccount.getDefaultSender(),newAccount.getDefaultSender());
}

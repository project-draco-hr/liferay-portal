{
  if (_log.isDebugEnabled()) {
    _log.debug("Process service request");
  }
  if (processShutdownRequest(request,response)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Processed shutdown request");
    }
    return;
  }
  if (processMaintenanceRequest(request,response)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Processed maintenance request");
    }
    return;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Get company id");
  }
  long companyId=getCompanyId(request);
  if (_log.isDebugEnabled()) {
    _log.debug("Set portal port");
  }
  setPortalPort(request);
  if (_log.isDebugEnabled()) {
    _log.debug("Check variables");
  }
  checkServletContext(request);
  checkPortletSessionTracker(request);
  checkPortletRequestProcessor(request);
  checkTilesDefinitionsFactory();
  if (_log.isDebugEnabled()) {
    _log.debug("Encrypt request");
  }
  request=encryptRequest(request,companyId);
  long userId=getUserId(request);
  String remoteUser=getRemoteUser(request,userId);
  if (_log.isDebugEnabled()) {
    _log.debug("Protect request");
  }
  request=protectRequest(request,remoteUser);
  if (_log.isDebugEnabled()) {
    _log.debug("Set principal");
  }
  String password=getPassword(request);
  setPrincipal(userId,remoteUser,password);
  try {
    if (_log.isDebugEnabled()) {
      _log.debug("Authenticate user id " + userId + " and remote user "+ remoteUser);
    }
    userId=loginUser(request,response,userId,remoteUser);
    if (_log.isDebugEnabled()) {
      _log.debug("Authenticated user id " + userId);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Process service pre events");
  }
  if (processServicePre(request,response,userId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Processing service pre events has errors");
    }
    return;
  }
  if (hasAbsoluteRedirect(request)) {
    if (_log.isDebugEnabled()) {
      String currentURL=PortalUtil.getCurrentURL(request);
      _log.debug("Current URL " + currentURL + " has absolute redirect");
    }
    return;
  }
  if (!hasThemeDisplay(request)) {
    if (_log.isDebugEnabled()) {
      String currentURL=PortalUtil.getCurrentURL(request);
      _log.debug("Current URL " + currentURL + " does not have a theme display");
    }
    return;
  }
  try {
    if (_log.isDebugEnabled()) {
      _log.debug("Call parent service");
    }
    callParentService(request,response);
  }
  finally {
    if (_log.isDebugEnabled()) {
      _log.debug("Process service post events");
    }
    processServicePost(request,response);
  }
}

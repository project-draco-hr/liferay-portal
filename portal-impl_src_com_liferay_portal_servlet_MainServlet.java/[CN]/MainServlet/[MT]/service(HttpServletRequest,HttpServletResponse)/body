{
  if (_log.isDebugEnabled()) {
    _log.debug("Process service request");
  }
  if (ShutdownUtil.isShutdown()) {
    response.setContentType(ContentTypes.TEXT_HTML_UTF8);
    String html=ContentUtil.get("com/liferay/portal/dependencies/shutdown.html");
    response.getOutputStream().print(html);
    return;
  }
  HttpSession session=request.getSession();
  long companyId=PortalInstances.getCompanyId(request);
  PortalUtil.setPortalPort(request);
  ServletContext servletContext=getServletContext();
  request.setAttribute(WebKeys.CTX,servletContext);
  ModuleConfig moduleConfig=getModuleConfig(request);
  if (session.getAttribute(WebKeys.PORTLET_SESSION_TRACKER) == null) {
    session.setAttribute(WebKeys.PORTLET_SESSION_TRACKER,PortletSessionTracker.getInstance());
  }
  PortletRequestProcessor portletReqProcessor=(PortletRequestProcessor)servletContext.getAttribute(WebKeys.PORTLET_STRUTS_PROCESSOR);
  if (portletReqProcessor == null) {
    portletReqProcessor=PortletRequestProcessor.getInstance(this,moduleConfig);
    servletContext.setAttribute(WebKeys.PORTLET_STRUTS_PROCESSOR,portletReqProcessor);
  }
  if (servletContext.getAttribute(TilesUtilImpl.DEFINITIONS_FACTORY) == null) {
    servletContext.setAttribute(TilesUtilImpl.DEFINITIONS_FACTORY,servletContext.getAttribute(TilesUtilImpl.DEFINITIONS_FACTORY));
  }
  Object applicationAssociate=servletContext.getAttribute(WebKeys.ASSOCIATE_KEY);
  if (servletContext.getAttribute(WebKeys.ASSOCIATE_KEY) == null) {
    servletContext.setAttribute(WebKeys.ASSOCIATE_KEY,applicationAssociate);
  }
  if (ParamUtil.get(request,WebKeys.ENCRYPT,false)) {
    try {
      Company company=CompanyLocalServiceUtil.getCompanyById(companyId);
      request=new EncryptedServletRequest(request,company.getKeyObj());
    }
 catch (    Exception e) {
    }
  }
  PortalUtil.getCurrentURL(request);
  long userId=PortalUtil.getUserId(request);
  String remoteUser=request.getRemoteUser();
  if (!PropsValues.PORTAL_JAAS_ENABLE) {
    String jRemoteUser=(String)session.getAttribute("j_remoteuser");
    if (jRemoteUser != null) {
      remoteUser=jRemoteUser;
      session.removeAttribute("j_remoteuser");
    }
  }
  if ((userId > 0) && (remoteUser == null)) {
    remoteUser=String.valueOf(userId);
  }
  request=new ProtectedServletRequest(request,remoteUser);
  if ((userId > 0) || (remoteUser != null)) {
    String name=String.valueOf(userId);
    if (remoteUser != null) {
      name=remoteUser;
    }
    PrincipalThreadLocal.setName(name);
  }
  if ((userId <= 0) && (remoteUser != null)) {
    try {
      userId=GetterUtil.getLong(remoteUser);
      EventsProcessor.process(PropsKeys.LOGIN_EVENTS_PRE,PropsValues.LOGIN_EVENTS_PRE,request,response);
      User user=UserLocalServiceUtil.getUserById(userId);
      if (PropsValues.USERS_UPDATE_LAST_LOGIN) {
        UserLocalServiceUtil.updateLastLogin(userId,request.getRemoteAddr());
      }
      session.setAttribute(WebKeys.USER_ID,new Long(userId));
      session.setAttribute(Globals.LOCALE_KEY,user.getLocale());
      EventsProcessor.process(PropsKeys.LOGIN_EVENTS_POST,PropsValues.LOGIN_EVENTS_POST,request,response);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  try {
    EventsProcessor.process(PropsKeys.SERVLET_SERVICE_EVENTS_PRE,PropsValues.SERVLET_SERVICE_EVENTS_PRE,request,response);
  }
 catch (  Exception e) {
    Throwable cause=e.getCause();
    if (cause instanceof NoSuchLayoutException) {
      sendError(HttpServletResponse.SC_NOT_FOUND,(Exception)cause,request,response);
      return;
    }
 else     if (cause instanceof PrincipalException) {
      processServicePrePrincipalException(cause,userId,request,response);
      return;
    }
    _log.error(e,e);
    request.setAttribute(PageContext.EXCEPTION,e);
    StrutsUtil.forward(PropsValues.SERVLET_SERVICE_EVENTS_PRE_ERROR_PAGE,servletContext,request,response);
    return;
  }
  try {
    callParentService(request,response);
  }
  finally {
    try {
      EventsProcessor.process(PropsKeys.SERVLET_SERVICE_EVENTS_POST,PropsValues.SERVLET_SERVICE_EVENTS_POST,request,response);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    response.addHeader(_LIFERAY_PORTAL_REQUEST_HEADER,ReleaseInfo.getReleaseInfo());
    CompanyThreadLocal.setCompanyId(0);
    PrincipalThreadLocal.setName(null);
  }
}

{
  Registry registry=RegistryUtil.getRegistry();
  Map<String,Object> properties=new HashMap<>();
  properties.put("module.service.lifecycle","portal.initialized");
  properties.put("service.vendor",ReleaseInfo.getVendor());
  properties.put("service.version",ReleaseInfo.getVersion());
  _moduleServiceLifecycleServiceRegistration=registry.registerService(ModuleServiceLifecycle.class,new ModuleServiceLifecycle(){
  }
,properties);
  ServletContext servletContext=getServletContext();
  Object serverContainer=servletContext.getAttribute("javax.websocket.server.ServerContainer");
  if (serverContainer != null) {
    properties.put("websocket.active",Boolean.TRUE);
  }
 else {
    if (_log.isInfoEnabled()) {
      _log.info("There is no Websocket Server Container registered");
    }
  }
  properties=new HashMap<>();
  properties.put("bean.id",ServletContext.class.getName());
  properties.put("original.bean",Boolean.TRUE);
  properties.put("service.vendor",ReleaseInfo.getVendor());
  _servletContextServiceRegistration=registry.registerService(ServletContext.class,servletContext,properties);
}

{
  ServiceDependencyManager serviceDependencyManager=new ServiceDependencyManager();
  serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener(){
    @Override public void dependenciesFulfilled(){
      try {
        if (_log.isDebugEnabled()) {
          _log.debug("Initialize layout templates");
        }
        ServletContext servletContext=getServletContext();
        String[] xmls=new String[]{HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-layout-templates.xml")),HttpUtil.URLtoString(servletContext.getResource("/WEB-INF" + "/liferay-layout-templates-ext.xml"))};
        List<LayoutTemplate> layoutTemplates=LayoutTemplateLocalServiceUtil.init(servletContext,xmls,pluginPackage);
        servletContext.setAttribute(WebKeys.PLUGIN_LAYOUT_TEMPLATES,layoutTemplates);
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
    }
    @Override public void destroy(){
    }
  }
);
  Registry registry=RegistryUtil.getRegistry();
  Filter freeMarkerFilter=registry.getFilter("(&(language.type=" + TemplateConstants.LANG_TYPE_FTL + ")(objectClass="+ TemplateManager.class.getName()+ "))");
  Filter velocityFilter=registry.getFilter("(&(language.type=" + TemplateConstants.LANG_TYPE_VM + ")(objectClass="+ TemplateManager.class.getName()+ "))");
  serviceDependencyManager.registerDependencies(freeMarkerFilter,velocityFilter);
}

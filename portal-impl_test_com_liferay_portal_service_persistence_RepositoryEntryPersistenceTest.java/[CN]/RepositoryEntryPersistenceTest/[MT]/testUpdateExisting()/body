{
  long pk=nextLong();
  RepositoryEntry newRepositoryEntry=_persistence.create(pk);
  newRepositoryEntry.setUuid(randomString());
  newRepositoryEntry.setGroupId(nextLong());
  newRepositoryEntry.setRepositoryId(nextLong());
  newRepositoryEntry.setMappedId(randomString());
  _persistence.update(newRepositoryEntry,false);
  RepositoryEntry existingRepositoryEntry=_persistence.findByPrimaryKey(newRepositoryEntry.getPrimaryKey());
  assertEquals(existingRepositoryEntry.getUuid(),newRepositoryEntry.getUuid());
  assertEquals(existingRepositoryEntry.getRepositoryEntryId(),newRepositoryEntry.getRepositoryEntryId());
  assertEquals(existingRepositoryEntry.getGroupId(),newRepositoryEntry.getGroupId());
  assertEquals(existingRepositoryEntry.getRepositoryId(),newRepositoryEntry.getRepositoryId());
  assertEquals(existingRepositoryEntry.getMappedId(),newRepositoryEntry.getMappedId());
}

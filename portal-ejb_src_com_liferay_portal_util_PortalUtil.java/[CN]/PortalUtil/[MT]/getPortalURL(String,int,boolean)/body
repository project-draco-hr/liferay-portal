{
  StringBuffer sb=new StringBuffer();
  String serverProtocol=GetterUtil.getString(PropsUtil.get(PropsUtil.WEB_SERVER_PROTOCOL));
  if (secure || Http.HTTPS.equals(serverProtocol)) {
    sb.append(Http.HTTPS_WITH_SLASH);
  }
 else {
    sb.append(Http.HTTP_WITH_SLASH);
  }
  String serverHost=PropsUtil.get(PropsUtil.WEB_SERVER_HOST);
  if (Validator.isNull(serverHost)) {
    sb.append(serverName);
  }
 else {
    sb.append(serverHost);
  }
  int serverHttpPort=GetterUtil.getInteger(PropsUtil.get(PropsUtil.WEB_SERVER_HTTP_PORT),-1);
  if (serverHttpPort == -1) {
    if (!secure && (serverPort != Http.HTTP_PORT)) {
      sb.append(StringPool.COLON);
      sb.append(serverPort);
    }
  }
 else {
    if (!secure && (serverPort != serverHttpPort)) {
      if (serverHttpPort != Http.HTTP_PORT) {
        sb.append(StringPool.COLON);
        sb.append(serverHttpPort);
      }
    }
  }
  int serverHttpsPort=GetterUtil.getInteger(PropsUtil.get(PropsUtil.WEB_SERVER_HTTPS_PORT),-1);
  if (serverHttpsPort == -1) {
    if (secure && (serverPort != Http.HTTPS_PORT)) {
      sb.append(StringPool.COLON);
      sb.append(serverPort);
    }
  }
 else {
    if (secure && (serverPort != serverHttpsPort)) {
      if (serverHttpsPort != Http.HTTPS_PORT) {
        sb.append(StringPool.COLON);
        sb.append(serverHttpsPort);
      }
    }
  }
  return sb.toString();
}

{
  long trashEntryId=ParamUtil.getLong(actionRequest,"trashEntryId");
  String newName=ParamUtil.getString(actionRequest,"newName");
  TrashEntry entry=_trashEntryLocalService.fetchTrashEntry(trashEntryId);
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(entry.getClassName());
  try {
    trashHandler.checkRestorableEntry(entry,TrashEntryConstants.DEFAULT_CONTAINER_ID,newName);
  }
 catch (  RestoreEntryException ree) {
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    LiferayPortletResponse liferayPortletResponse=(LiferayPortletResponse)actionResponse;
    PortletURL renderURL=liferayPortletResponse.createRenderURL();
    renderURL.setParameter("mvcPath","/restore_entry.jsp");
    renderURL.setParameter("duplicateEntryId",String.valueOf(ree.getDuplicateEntryId()));
    renderURL.setParameter("oldName",ree.getOldName());
    renderURL.setParameter("overridable",String.valueOf(ree.isOverridable()));
    renderURL.setParameter("redirect",redirect);
    renderURL.setParameter("trashEntryId",String.valueOf(ree.getTrashEntryId()));
    actionRequest.setAttribute(WebKeys.REDIRECT,renderURL.toString());
    hideDefaultErrorMessage(actionRequest);
    sendRedirect(actionRequest,actionResponse);
    throw ree;
  }
}

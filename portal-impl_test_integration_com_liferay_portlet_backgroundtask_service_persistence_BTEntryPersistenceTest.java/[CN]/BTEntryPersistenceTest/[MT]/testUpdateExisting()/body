{
  long pk=ServiceTestUtil.nextLong();
  BTEntry newBTEntry=_persistence.create(pk);
  newBTEntry.setGroupId(ServiceTestUtil.nextLong());
  newBTEntry.setCompanyId(ServiceTestUtil.nextLong());
  newBTEntry.setUserId(ServiceTestUtil.nextLong());
  newBTEntry.setUserName(ServiceTestUtil.randomString());
  newBTEntry.setCreateDate(ServiceTestUtil.nextDate());
  newBTEntry.setModifiedDate(ServiceTestUtil.nextDate());
  newBTEntry.setName(ServiceTestUtil.randomString());
  newBTEntry.setServletContextNames(ServiceTestUtil.randomString());
  newBTEntry.setTaskExecutorClassName(ServiceTestUtil.randomString());
  newBTEntry.setTaskContext(ServiceTestUtil.randomString());
  newBTEntry.setCompleted(ServiceTestUtil.randomBoolean());
  newBTEntry.setCompletionDate(ServiceTestUtil.nextDate());
  newBTEntry.setStatus(ServiceTestUtil.nextInt());
  _persistence.update(newBTEntry);
  BTEntry existingBTEntry=_persistence.findByPrimaryKey(newBTEntry.getPrimaryKey());
  Assert.assertEquals(existingBTEntry.getBtEntryId(),newBTEntry.getBtEntryId());
  Assert.assertEquals(existingBTEntry.getGroupId(),newBTEntry.getGroupId());
  Assert.assertEquals(existingBTEntry.getCompanyId(),newBTEntry.getCompanyId());
  Assert.assertEquals(existingBTEntry.getUserId(),newBTEntry.getUserId());
  Assert.assertEquals(existingBTEntry.getUserName(),newBTEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingBTEntry.getCreateDate()),Time.getShortTimestamp(newBTEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingBTEntry.getModifiedDate()),Time.getShortTimestamp(newBTEntry.getModifiedDate()));
  Assert.assertEquals(existingBTEntry.getName(),newBTEntry.getName());
  Assert.assertEquals(existingBTEntry.getServletContextNames(),newBTEntry.getServletContextNames());
  Assert.assertEquals(existingBTEntry.getTaskExecutorClassName(),newBTEntry.getTaskExecutorClassName());
  Assert.assertEquals(existingBTEntry.getTaskContext(),newBTEntry.getTaskContext());
  Assert.assertEquals(existingBTEntry.getCompleted(),newBTEntry.getCompleted());
  Assert.assertEquals(Time.getShortTimestamp(existingBTEntry.getCompletionDate()),Time.getShortTimestamp(newBTEntry.getCompletionDate()));
  Assert.assertEquals(existingBTEntry.getStatus(),newBTEntry.getStatus());
}

{
  DDMForm ddmForm=new DDMForm();
  ddmForm.addAvailableLocale(_enLocale);
  ddmForm.setDefaultLocale(_enLocale);
  DDMFormField integerDDMFormField=DDMFormTestUtil.createDDMFormField("Select","Select",DDMFormFieldType.SELECT,"integer",false,false,false);
  ddmForm.addDDMFormField(integerDDMFormField);
  DDMFormValues ddmFormValues=new DDMFormValues(ddmForm);
  ddmFormValues.addAvailableLocale(_enLocale);
  ddmFormValues.setDefaultLocale(_enLocale);
  ddmFormValues.addDDMFormFieldValue(createDDMFormFieldValue("Select","[\"42\"]",_enLocale));
  ObjectClassDefinition objectClassDefinition=mock(ObjectClassDefinition.class);
  AttributeDefinition attributeDefinition=mock(AttributeDefinition.class);
  Configuration configuration=mock(Configuration.class);
  whenObjectClassDefinitionGetAttributeDefinitions(objectClassDefinition,new AttributeDefinition[]{attributeDefinition});
  whenAttributeDefinitionGetCardinality(attributeDefinition,0);
  whenAttributeDefinitionGetID(attributeDefinition,"Select");
  ConfigurationModel configurationModel=new ConfigurationModel(objectClassDefinition,configuration,null,false);
  DDMFormValuesToPropertiesConverter ddmFormValuesToPropertiesConverter=new DDMFormValuesToPropertiesConverter(configurationModel,ddmFormValues,_jsonFactory,_enLocale);
  Dictionary<String,Object> properties=ddmFormValuesToPropertiesConverter.getProperties();
  Assert.assertEquals(42,properties.get("Select"));
}

{
  Layout layout=_layoutLocalService.fetchLayout(portletPreferencesModel.getPlid());
  if (layout == null) {
    return;
  }
  PortletPreferences portletPreferences=PortletPreferencesFactoryUtil.fromXML(layout.getCompanyId(),portletPreferencesModel.getOwnerId(),portletPreferencesModel.getOwnerType(),portletPreferencesModel.getPlid(),portletPreferencesModel.getPortletId(),portletPreferencesModel.getPreferences());
  if (!getEmailAssetEntryAddedEnabled(portletPreferences)) {
    return;
  }
  List<AssetEntry> assetEntries=getAssetEntries(portletPreferences,layout,layout.getGroupId(),AssetPublisherWebConfigurationValues.DYNAMIC_SUBSCRIPTION_LIMIT,false);
  if (assetEntries.isEmpty()) {
    return;
  }
  String taskExecutorName=AssetPublisherNotificationBackgroundTaskExecutor.class.getName();
  Map<String,Serializable> taskContextMap=new HashMap<>();
  long[] notifiedAssetEntryIds=GetterUtil.getLongValues(portletPreferences.getValues("notifiedAssetEntryIds",null));
  ArrayList<AssetEntry> newAssetEntries=new ArrayList<>();
  for (int i=0; i < assetEntries.size(); i++) {
    AssetEntry assetEntry=assetEntries.get(i);
    if (!ArrayUtil.contains(notifiedAssetEntryIds,assetEntry.getEntryId())) {
      newAssetEntries.add(assetEntry);
    }
  }
  taskContextMap.put("assetEntries",newAssetEntries);
  taskContextMap.put("companyId",layout.getCompanyId());
  taskContextMap.put("portletPreferences",portletPreferencesModel);
  BackgroundTaskManagerUtil.addBackgroundTask(portletPreferencesModel.getOwnerId(),layout.getGroupId(),taskExecutorName,taskExecutorName,taskContextMap,new ServiceContext());
}

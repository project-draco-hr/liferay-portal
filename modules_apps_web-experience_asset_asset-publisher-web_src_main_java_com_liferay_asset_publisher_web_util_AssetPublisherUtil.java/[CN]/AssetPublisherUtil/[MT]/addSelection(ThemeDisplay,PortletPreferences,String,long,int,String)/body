{
  AssetEntry assetEntry=_assetEntryLocalService.getEntry(assetEntryId);
  String[] assetEntryXmls=portletPreferences.getValues("assetEntryXml",new String[0]);
  String assetEntryXml=_getAssetEntryXml(assetEntryType,assetEntry.getClassUuid());
  if (!ArrayUtil.contains(assetEntryXmls,assetEntryXml)) {
    if (assetEntryOrder > -1) {
      assetEntryXmls[assetEntryOrder]=assetEntryXml;
    }
 else {
      assetEntryXmls=ArrayUtil.append(assetEntryXmls,assetEntryXml);
    }
    portletPreferences.setValues("assetEntryXml",assetEntryXmls);
  }
  try {
    portletPreferences.store();
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
catch (  PortletException pe) {
    throw new SystemException(pe);
  }
  long plid=themeDisplay.getRefererPlid();
  if (plid == 0) {
    plid=themeDisplay.getPlid();
  }
  ArrayList<AssetEntry> assetEntries=new ArrayList<>();
  assetEntries.add(assetEntry);
  com.liferay.portal.kernel.model.PortletPreferences portletPreferencesModel=_portletPreferencesLocalService.getPortletPreferences(PortletKeys.PREFS_OWNER_ID_DEFAULT,PortletKeys.PREFS_OWNER_TYPE_LAYOUT,plid,portletId);
  Map<String,Serializable> contextMap=new HashMap<>();
  contextMap.put("assetEntries",assetEntries);
  contextMap.put("companyId",themeDisplay.getCompanyId());
  contextMap.put("portletPreferences",portletPreferencesModel);
  String taskExecutorName=AssetPublisherNotificationBackgroundTaskExecutor.class.getName();
  BackgroundTask backgroundTask=BackgroundTaskManagerUtil.addBackgroundTask(themeDisplay.getUserId(),themeDisplay.getScopeGroupId(),taskExecutorName,taskExecutorName,contextMap,new ServiceContext());
}

{
  portlet=toUnwrappedModel(portlet);
  boolean isNew=portlet.isNew();
  PortletModelImpl portletModelImpl=(PortletModelImpl)portlet;
  Session session=null;
  try {
    session=openSession();
    if (portlet.isNew()) {
      session.save(portlet);
      portlet.setNew(false);
    }
 else {
      portlet=(Portlet)session.merge(portlet);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !PortletModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((portletModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{portletModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{portletModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
  }
  entityCache.putResult(PortletModelImpl.ENTITY_CACHE_ENABLED,PortletImpl.class,portlet.getPrimaryKey(),portlet,false);
  clearUniqueFindersCache(portletModelImpl);
  cacheUniqueFindersCache(portletModelImpl,isNew);
  portlet.resetOriginalValues();
  return portlet;
}

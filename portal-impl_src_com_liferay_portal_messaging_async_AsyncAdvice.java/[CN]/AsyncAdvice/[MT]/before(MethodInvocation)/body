{
  MethodTargetClassKey methodTargetClassKey=buildMethodTargetClassKey(methodInvocation);
  Async async=findAnnotation(methodTargetClassKey);
  if (async == _nullAsync) {
    return null;
  }
  Method method=methodTargetClassKey.getMethod();
  if (method.getReturnType() != void.class) {
    if (_log.isWarnEnabled()) {
      _log.warn("Async annotation on method " + method.getName() + " does not return void");
    }
    annotations.put(methodTargetClassKey,_nullAsync);
    return null;
  }
  String destinationName=null;
  if ((_destinationNames != null) && !_destinationNames.isEmpty()) {
    destinationName=_destinationNames.get(methodTargetClassKey.getTargetClass());
  }
  if (destinationName == null) {
    destinationName=_defaultDestinationName;
  }
  MessageBusUtil.sendMessage(destinationName,new Runnable(){
    public void run(){
      try {
        nextMethodInterceptor.invoke(methodInvocation);
      }
 catch (      Throwable t) {
        throw new RuntimeException(t);
      }
    }
    public String toString(){
      return methodInvocation.toString();
    }
  }
);
  return nullResult;
}

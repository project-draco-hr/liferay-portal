{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  SearchContext searchContext=ServiceTestUtil.getSearchContext(group.getGroupId());
  int initialBaseModelsCount=searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.0",searchContext);
  BaseModel<?> parentBaseModel=getParentBaseModel(group,serviceContext);
  baseModel=addBaseModel(parentBaseModel,false,"Version 1.0",serviceContext);
  Assert.assertEquals(initialBaseModelsCount,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),searchContext));
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  baseModel=updateBaseModel(baseModel,"Version 1.1",serviceContext);
  Assert.assertEquals(initialBaseModelsCount,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.0",searchContext));
  Assert.assertEquals(initialBaseModelsCount + 1,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.1",searchContext));
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  baseModel=updateBaseModel(baseModel,"Version 1.2",serviceContext);
  Assert.assertEquals(initialBaseModelsCount + 1,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.1",searchContext));
  Assert.assertEquals(initialBaseModelsCount,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.2",searchContext));
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  baseModel=updateBaseModel(baseModel,"Version 1.3",serviceContext);
  Assert.assertEquals(initialBaseModelsCount,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.2",searchContext));
  Assert.assertEquals(initialBaseModelsCount + 1,searchBaseModelsCount(getBaseModelClass(),group.getGroupId(),"1.3",searchContext));
}

{
  Layout layout=layoutPersistence.findByG_P_L(groupId,privateLayout,layoutId);
  if (parentLayoutId == layout.getParentLayoutId()) {
    return;
  }
  if (parentLayoutId == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
    return;
  }
  Layout parentLayout=layoutPersistence.findByG_P_L(groupId,privateLayout,parentLayoutId);
  LayoutType parentLayoutType=parentLayout.getLayoutType();
  if (!parentLayoutType.isParentable()) {
    throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.NOT_PARENTABLE);
  }
  checkIfParentLayoutIsPrototype(parentLayout);
  if (PortalUtil.isLayoutDescendant(layout,parentLayoutId)) {
    throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.SELF_DESCENDANT);
  }
  if (layout.getParentLayoutId() == LayoutConstants.DEFAULT_PARENT_LAYOUT_ID) {
    List<Layout> layouts=layoutPersistence.findByG_P_P(groupId,privateLayout,LayoutConstants.DEFAULT_PARENT_LAYOUT_ID,0,2);
    long firstLayoutId=layouts.get(0).getLayoutId();
    if (firstLayoutId == layoutId) {
      Layout secondLayout=layouts.get(1);
      LayoutType layoutType=secondLayout.getLayoutType();
      if (Validator.isNull(secondLayout.getType()) || !layoutType.isFirstPageable()) {
        throw new LayoutParentLayoutIdException(LayoutParentLayoutIdException.FIRST_LAYOUT_TYPE);
      }
    }
  }
}

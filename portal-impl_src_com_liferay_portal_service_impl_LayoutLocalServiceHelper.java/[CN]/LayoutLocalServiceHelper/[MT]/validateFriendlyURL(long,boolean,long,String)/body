{
  if (Validator.isNull(friendlyURL)) {
    return;
  }
  int exceptionType=LayoutImpl.validateFriendlyURL(friendlyURL);
  if (exceptionType != -1) {
    throw new LayoutFriendlyURLException(exceptionType);
  }
  List<LayoutFriendlyURL> layoutFriendlyURLs=layoutFriendlyURLPersistence.findByG_P_F(groupId,privateLayout,friendlyURL);
  for (  LayoutFriendlyURL layoutFriendlyURL : layoutFriendlyURLs) {
    Layout layout=layoutPersistence.findByPrimaryKey(layoutFriendlyURL.getPlid());
    if (layout.getLayoutId() != layoutId) {
      LayoutFriendlyURLException lfurle=new LayoutFriendlyURLException(LayoutFriendlyURLException.DUPLICATE);
      lfurle.setDuplicateClassPK(layout.getPlid());
      lfurle.setDuplicateClassName(Layout.class.getName());
      throw lfurle;
    }
  }
  LayoutImpl.validateFriendlyURLKeyword(friendlyURL);
  if (friendlyURL.contains(Portal.FRIENDLY_URL_SEPARATOR)) {
    LayoutFriendlyURLException lfurle=new LayoutFriendlyURLException(LayoutFriendlyURLException.KEYWORD_CONFLICT);
    lfurle.setKeywordConflict(Portal.FRIENDLY_URL_SEPARATOR);
    throw lfurle;
  }
  List<FriendlyURLMapper> friendlyURLMappers=PortletLocalServiceUtil.getFriendlyURLMappers();
  for (  FriendlyURLMapper friendlyURLMapper : friendlyURLMappers) {
    if (friendlyURLMapper.isCheckMappingWithPrefix()) {
      continue;
    }
    String mapping=StringPool.SLASH + friendlyURLMapper.getMapping();
    if (friendlyURL.contains(mapping + StringPool.SLASH) || friendlyURL.endsWith(mapping)) {
      LayoutFriendlyURLException lfurle=new LayoutFriendlyURLException(LayoutFriendlyURLException.KEYWORD_CONFLICT);
      lfurle.setKeywordConflict(friendlyURLMapper.getMapping());
      throw lfurle;
    }
  }
  String layoutIdFriendlyURL=friendlyURL.substring(1);
  if (Validator.isNumber(layoutIdFriendlyURL) && !layoutIdFriendlyURL.equals(String.valueOf(layoutId))) {
    LayoutFriendlyURLException lfurle=new LayoutFriendlyURLException(LayoutFriendlyURLException.POSSIBLE_DUPLICATE);
    lfurle.setKeywordConflict(layoutIdFriendlyURL);
    throw lfurle;
  }
}

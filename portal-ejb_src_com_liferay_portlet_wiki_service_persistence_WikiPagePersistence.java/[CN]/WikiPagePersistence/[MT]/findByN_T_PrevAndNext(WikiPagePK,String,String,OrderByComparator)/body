{
  com.liferay.portlet.wiki.model.WikiPage wikiPage=findByPrimaryKey(wikiPagePK);
  int count=countByN_T(nodeId,title);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM WikiPage IN CLASS com.liferay.portlet.wiki.service.persistence.WikiPageHBM WHERE ");
    if (nodeId == null) {
      query.append("nodeId is null");
    }
 else {
      query.append("nodeId = ?");
    }
    query.append(" AND ");
    if (title == null) {
      query.append("title is null");
    }
 else {
      query.append("title = ?");
    }
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("nodeId ASC").append(", ");
      query.append("title ASC").append(", ");
      query.append("version ASC");
    }
    Query q=session.createQuery(query.toString());
    int queryPos=0;
    if (nodeId != null) {
      q.setString(queryPos++,nodeId);
    }
    if (title != null) {
      q.setString(queryPos++,title);
    }
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,wikiPage,WikiPageHBMUtil.getInstance());
    com.liferay.portlet.wiki.model.WikiPage[] array=new com.liferay.portlet.wiki.model.WikiPage[3];
    array[0]=(com.liferay.portlet.wiki.model.WikiPage)objArray[0];
    array[1]=(com.liferay.portlet.wiki.model.WikiPage)objArray[1];
    array[2]=(com.liferay.portlet.wiki.model.WikiPage)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

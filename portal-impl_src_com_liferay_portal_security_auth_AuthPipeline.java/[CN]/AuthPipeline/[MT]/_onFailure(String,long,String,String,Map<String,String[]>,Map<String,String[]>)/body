{
  List<AuthFailure> authFailures=_authFailures.getService(key);
  if (authFailures.isEmpty()) {
    return;
  }
  for (  AuthFailure authFailure : authFailures) {
    try {
      if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) {
        authFailure.onFailureByEmailAddress(companyId,login,headerMap,parameterMap);
      }
 else       if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) {
        authFailure.onFailureByScreenName(companyId,login,headerMap,parameterMap);
      }
 else       if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) {
        long userId=GetterUtil.getLong(login);
        authFailure.onFailureByUserId(companyId,userId,headerMap,parameterMap);
      }
    }
 catch (    AuthException ae) {
      throw ae;
    }
catch (    Exception e) {
      throw new AuthException(e);
    }
  }
}

{
  DDMForm ddmForm=createDDMForm(createAvailableLocales(LocaleUtil.BRAZIL,LocaleUtil.US),LocaleUtil.US);
  DDMFormField ddmFormField=new DDMFormField("Integer",DDMFormFieldType.INTEGER);
  ddmFormField.setDataType("integer");
  LocalizedValue label=new LocalizedValue(LocaleUtil.US);
  label.addString(LocaleUtil.BRAZIL,"Inteiro");
  label.addString(LocaleUtil.US,"Integer");
  ddmFormField.setLabel(label);
  ddmForm.addDDMFormField(ddmFormField);
  DDMStructure ddmStructure=createStructure("Test Structure",ddmForm);
  DDMFormValues ddmFormValues=createDDMFormValues(ddmForm,_availableLocales,LocaleUtil.US);
  DDMFormFieldValue integerDDMFormFieldValue=createDDMFormFieldValue("rztm","Integer",createLocalizedValue(StringPool.BLANK,StringPool.BLANK,LocaleUtil.US));
  ddmFormValues.addDDMFormFieldValue(integerDDMFormFieldValue);
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(LocaleUtil.class.getName(),Level.WARNING)){
    Fields fields=_ddmFormValuesToFieldsConverter.convert(ddmStructure,ddmFormValues);
    Assert.assertNotNull(fields);
    Field integerField=fields.get("Integer");
    testField(integerField,createValuesList(""),createValuesList(""),_availableLocales,LocaleUtil.US);
    Field fieldsDisplayField=fields.get(DDMImpl.FIELDS_DISPLAY_NAME);
    Assert.assertEquals("Integer_INSTANCE_rztm",fieldsDisplayField.getValue());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(5,logRecords.size());
    String[] expectedValues={"pt_BR","en_US","en_US","pt_BR","en_US"};
    for (int i=0; i < logRecords.size(); i++) {
      LogRecord logRecord=logRecords.get(i);
      Assert.assertEquals(expectedValues[i] + " is not a valid language id",logRecord.getMessage());
    }
  }
 }

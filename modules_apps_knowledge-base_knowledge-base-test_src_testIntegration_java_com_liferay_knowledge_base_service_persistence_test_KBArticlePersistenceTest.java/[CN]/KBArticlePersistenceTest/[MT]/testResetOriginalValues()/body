{
  KBArticle newKBArticle=addKBArticle();
  _persistence.clearCache();
  KBArticle existingKBArticle=_persistence.findByPrimaryKey(newKBArticle.getPrimaryKey());
  Assert.assertTrue(Validator.equals(existingKBArticle.getUuid(),ReflectionTestUtil.invoke(existingKBArticle,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingKBArticle.getGroupId()),ReflectionTestUtil.<Long>invoke(existingKBArticle,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBArticle.getResourcePrimKey()),ReflectionTestUtil.<Long>invoke(existingKBArticle,"getOriginalResourcePrimKey",new Class<?>[0]));
  Assert.assertEquals(Integer.valueOf(existingKBArticle.getVersion()),ReflectionTestUtil.<Integer>invoke(existingKBArticle,"getOriginalVersion",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBArticle.getResourcePrimKey()),ReflectionTestUtil.<Long>invoke(existingKBArticle,"getOriginalResourcePrimKey",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBArticle.getGroupId()),ReflectionTestUtil.<Long>invoke(existingKBArticle,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Integer.valueOf(existingKBArticle.getVersion()),ReflectionTestUtil.<Integer>invoke(existingKBArticle,"getOriginalVersion",new Class<?>[0]));
}

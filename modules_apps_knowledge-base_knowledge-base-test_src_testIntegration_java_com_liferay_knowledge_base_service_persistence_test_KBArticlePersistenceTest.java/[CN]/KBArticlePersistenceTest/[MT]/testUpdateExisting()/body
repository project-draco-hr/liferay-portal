{
  long pk=RandomTestUtil.nextLong();
  KBArticle newKBArticle=_persistence.create(pk);
  newKBArticle.setUuid(RandomTestUtil.randomString());
  newKBArticle.setResourcePrimKey(RandomTestUtil.nextLong());
  newKBArticle.setGroupId(RandomTestUtil.nextLong());
  newKBArticle.setCompanyId(RandomTestUtil.nextLong());
  newKBArticle.setUserId(RandomTestUtil.nextLong());
  newKBArticle.setUserName(RandomTestUtil.randomString());
  newKBArticle.setCreateDate(RandomTestUtil.nextDate());
  newKBArticle.setModifiedDate(RandomTestUtil.nextDate());
  newKBArticle.setRootResourcePrimKey(RandomTestUtil.nextLong());
  newKBArticle.setParentResourceClassNameId(RandomTestUtil.nextLong());
  newKBArticle.setParentResourcePrimKey(RandomTestUtil.nextLong());
  newKBArticle.setKbFolderId(RandomTestUtil.nextLong());
  newKBArticle.setVersion(RandomTestUtil.nextInt());
  newKBArticle.setTitle(RandomTestUtil.randomString());
  newKBArticle.setUrlTitle(RandomTestUtil.randomString());
  newKBArticle.setContent(RandomTestUtil.randomString());
  newKBArticle.setDescription(RandomTestUtil.randomString());
  newKBArticle.setPriority(RandomTestUtil.nextDouble());
  newKBArticle.setSections(RandomTestUtil.randomString());
  newKBArticle.setViewCount(RandomTestUtil.nextInt());
  newKBArticle.setLatest(RandomTestUtil.randomBoolean());
  newKBArticle.setMain(RandomTestUtil.randomBoolean());
  newKBArticle.setSourceURL(RandomTestUtil.randomString());
  newKBArticle.setLastPublishDate(RandomTestUtil.nextDate());
  newKBArticle.setStatus(RandomTestUtil.nextInt());
  newKBArticle.setStatusByUserId(RandomTestUtil.nextLong());
  newKBArticle.setStatusByUserName(RandomTestUtil.randomString());
  newKBArticle.setStatusDate(RandomTestUtil.nextDate());
  _kbArticles.add(_persistence.update(newKBArticle));
  KBArticle existingKBArticle=_persistence.findByPrimaryKey(newKBArticle.getPrimaryKey());
  Assert.assertEquals(existingKBArticle.getUuid(),newKBArticle.getUuid());
  Assert.assertEquals(existingKBArticle.getKbArticleId(),newKBArticle.getKbArticleId());
  Assert.assertEquals(existingKBArticle.getResourcePrimKey(),newKBArticle.getResourcePrimKey());
  Assert.assertEquals(existingKBArticle.getGroupId(),newKBArticle.getGroupId());
  Assert.assertEquals(existingKBArticle.getCompanyId(),newKBArticle.getCompanyId());
  Assert.assertEquals(existingKBArticle.getUserId(),newKBArticle.getUserId());
  Assert.assertEquals(existingKBArticle.getUserName(),newKBArticle.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKBArticle.getCreateDate()),Time.getShortTimestamp(newKBArticle.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKBArticle.getModifiedDate()),Time.getShortTimestamp(newKBArticle.getModifiedDate()));
  Assert.assertEquals(existingKBArticle.getRootResourcePrimKey(),newKBArticle.getRootResourcePrimKey());
  Assert.assertEquals(existingKBArticle.getParentResourceClassNameId(),newKBArticle.getParentResourceClassNameId());
  Assert.assertEquals(existingKBArticle.getParentResourcePrimKey(),newKBArticle.getParentResourcePrimKey());
  Assert.assertEquals(existingKBArticle.getKbFolderId(),newKBArticle.getKbFolderId());
  Assert.assertEquals(existingKBArticle.getVersion(),newKBArticle.getVersion());
  Assert.assertEquals(existingKBArticle.getTitle(),newKBArticle.getTitle());
  Assert.assertEquals(existingKBArticle.getUrlTitle(),newKBArticle.getUrlTitle());
  Assert.assertEquals(existingKBArticle.getContent(),newKBArticle.getContent());
  Assert.assertEquals(existingKBArticle.getDescription(),newKBArticle.getDescription());
  AssertUtils.assertEquals(existingKBArticle.getPriority(),newKBArticle.getPriority());
  Assert.assertEquals(existingKBArticle.getSections(),newKBArticle.getSections());
  Assert.assertEquals(existingKBArticle.getViewCount(),newKBArticle.getViewCount());
  Assert.assertEquals(existingKBArticle.getLatest(),newKBArticle.getLatest());
  Assert.assertEquals(existingKBArticle.getMain(),newKBArticle.getMain());
  Assert.assertEquals(existingKBArticle.getSourceURL(),newKBArticle.getSourceURL());
  Assert.assertEquals(Time.getShortTimestamp(existingKBArticle.getLastPublishDate()),Time.getShortTimestamp(newKBArticle.getLastPublishDate()));
  Assert.assertEquals(existingKBArticle.getStatus(),newKBArticle.getStatus());
  Assert.assertEquals(existingKBArticle.getStatusByUserId(),newKBArticle.getStatusByUserId());
  Assert.assertEquals(existingKBArticle.getStatusByUserName(),newKBArticle.getStatusByUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKBArticle.getStatusDate()),Time.getShortTimestamp(newKBArticle.getStatusDate()));
}

{
  long pk=nextLong();
  DLFileEntryMetadata newDLFileEntryMetadata=_persistence.create(pk);
  newDLFileEntryMetadata.setUuid(randomString());
  newDLFileEntryMetadata.setClassNameId(nextLong());
  newDLFileEntryMetadata.setClassPK(nextLong());
  newDLFileEntryMetadata.setDDMStructureId(nextLong());
  newDLFileEntryMetadata.setFileEntryTypeId(nextLong());
  newDLFileEntryMetadata.setFileEntryId(nextLong());
  newDLFileEntryMetadata.setFileVersionId(nextLong());
  _persistence.update(newDLFileEntryMetadata,false);
  DLFileEntryMetadata existingDLFileEntryMetadata=_persistence.findByPrimaryKey(newDLFileEntryMetadata.getPrimaryKey());
  assertEquals(existingDLFileEntryMetadata.getUuid(),newDLFileEntryMetadata.getUuid());
  assertEquals(existingDLFileEntryMetadata.getFileEntryMetadataId(),newDLFileEntryMetadata.getFileEntryMetadataId());
  assertEquals(existingDLFileEntryMetadata.getClassNameId(),newDLFileEntryMetadata.getClassNameId());
  assertEquals(existingDLFileEntryMetadata.getClassPK(),newDLFileEntryMetadata.getClassPK());
  assertEquals(existingDLFileEntryMetadata.getDDMStructureId(),newDLFileEntryMetadata.getDDMStructureId());
  assertEquals(existingDLFileEntryMetadata.getFileEntryTypeId(),newDLFileEntryMetadata.getFileEntryTypeId());
  assertEquals(existingDLFileEntryMetadata.getFileEntryId(),newDLFileEntryMetadata.getFileEntryId());
  assertEquals(existingDLFileEntryMetadata.getFileVersionId(),newDLFileEntryMetadata.getFileVersionId());
}

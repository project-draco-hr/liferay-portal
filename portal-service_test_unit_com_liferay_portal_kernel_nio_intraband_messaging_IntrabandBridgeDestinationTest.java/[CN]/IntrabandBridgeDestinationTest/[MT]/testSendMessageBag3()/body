{
  ConcurrentMap<String,Object> attributes=ProcessExecutor.ProcessContext.getAttributes();
  MockSPI mockSPI1=_createMockSPI("SPIProvider","SPI1");
  attributes.put(SPI.SPI_INSTANCE_PUBLICATION_KEY,mockSPI1);
  MessageRoutingBag messageRoutingBag=_createMessageRoutingBag();
  messageRoutingBag.setRoutingDowncast(true);
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  Assert.assertTrue(messageRoutingBag.isVisited(_toRoutingId(mockSPI1)));
  Message message=messageRoutingBag.getMessage();
  Assert.assertNull(message.get(_RECEIVE_KEY));
  IOException ioException=new IOException();
  _mockIntraband.setIOException(ioException);
  try {
    messageRoutingBag=_createMessageRoutingBag();
    _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
    Assert.fail();
  }
 catch (  RuntimeException re) {
    Throwable throwable=re.getCause();
    Assert.assertEquals(RuntimeException.class,throwable.getClass());
    Assert.assertSame(ioException,throwable.getCause());
  }
 finally {
    _mockIntraband.setIOException(null);
  }
  Assert.assertTrue(messageRoutingBag.isVisited(_toRoutingId(mockSPI1)));
  messageRoutingBag=_createMessageRoutingBag();
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  Assert.assertTrue(messageRoutingBag.isVisited(_toRoutingId(mockSPI1)));
  message=messageRoutingBag.getMessage();
  Assert.assertEquals(_RECEIVE_VALUE,message.get(_RECEIVE_KEY));
  MockSPI mockSPI2=_createMockSPI("SPIProvider","SPI2");
  _installSPIs(mockSPI2);
  messageRoutingBag=_createMessageRoutingBag();
  messageRoutingBag.setRoutingDowncast(true);
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  Assert.assertTrue(messageRoutingBag.isVisited(_toRoutingId(mockSPI1)));
  message=messageRoutingBag.getMessage();
  Assert.assertEquals(_RECEIVE_VALUE,message.get(_RECEIVE_KEY));
  messageRoutingBag=_createMessageRoutingBag();
  messageRoutingBag.appendRoutingId(_toRoutingId(mockSPI2));
  messageRoutingBag.setRoutingDowncast(true);
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  Assert.assertTrue(messageRoutingBag.isVisited(_toRoutingId(mockSPI1)));
  message=messageRoutingBag.getMessage();
  Assert.assertNull(message.get(_RECEIVE_KEY));
}

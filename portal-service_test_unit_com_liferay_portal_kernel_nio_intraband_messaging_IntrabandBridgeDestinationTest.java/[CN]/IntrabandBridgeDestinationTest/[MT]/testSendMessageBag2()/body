{
  MockSPI mockSPI=_createMockSPI("SPIProvider","SPI1");
  _installSPIs(mockSPI);
  IOException ioException=new IOException();
  _mockIntraband.setIOException(ioException);
  try {
    MessageRoutingBag messageRoutingBag=_createMessageRoutingBag();
    _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
    Assert.fail();
  }
 catch (  RuntimeException re) {
    Throwable throwable=re.getCause();
    Assert.assertEquals(RuntimeException.class,throwable.getClass());
    Assert.assertSame(ioException,throwable.getCause());
  }
 finally {
    _mockIntraband.setIOException(null);
  }
  MessageRoutingBag messageRoutingBag=_createMessageRoutingBag();
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  Message message=messageRoutingBag.getMessage();
  Assert.assertEquals(_RECEIVE_VALUE,message.get(_RECEIVE_KEY));
  messageRoutingBag=_createMessageRoutingBag();
  messageRoutingBag.appendRoutingId(_toRoutingId(mockSPI));
  _intrabandBridgeDestination.sendMessageRoutingBag(messageRoutingBag);
  message=messageRoutingBag.getMessage();
  Assert.assertNull(message.get(_RECEIVE_KEY));
}

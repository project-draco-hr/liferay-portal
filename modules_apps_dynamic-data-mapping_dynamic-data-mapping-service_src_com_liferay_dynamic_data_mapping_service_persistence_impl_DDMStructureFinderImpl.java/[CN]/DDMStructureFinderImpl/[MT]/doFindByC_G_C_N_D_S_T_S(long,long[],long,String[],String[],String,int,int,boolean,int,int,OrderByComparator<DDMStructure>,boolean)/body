{
  names=CustomSQLUtil.keywords(names);
  descriptions=CustomSQLUtil.keywords(descriptions,false);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_C_G_C_N_D_S_T_R);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,DDMStructurePermission.getStructureModelResourceName(classNameId),"DDMStructure.structureId",groupIds);
    }
    sql=StringUtil.replace(sql,"[$GROUP_ID$]",getGroupIds(groupIds));
    sql=StringUtil.replace(sql,"[$STATUS$]",getStatus(status));
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(CAST_TEXT(name))",StringPool.LIKE,false,names);
    sql=CustomSQLUtil.replaceKeywords(sql,"description",StringPool.LIKE,true,descriptions);
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    if (orderByComparator != null) {
      sql=CustomSQLUtil.replaceOrderBy(sql,orderByComparator);
    }
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addEntity("DDMStructure",DDMStructureImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(companyId);
    if (groupIds != null) {
      qPos.add(groupIds);
    }
    qPos.add(classNameId);
    qPos.add(names,2);
    qPos.add(descriptions,2);
    qPos.add(storageType);
    qPos.add(storageType);
    qPos.add(type);
    if (status != WorkflowConstants.STATUS_ANY) {
      qPos.add(status);
    }
    return (List<DDMStructure>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

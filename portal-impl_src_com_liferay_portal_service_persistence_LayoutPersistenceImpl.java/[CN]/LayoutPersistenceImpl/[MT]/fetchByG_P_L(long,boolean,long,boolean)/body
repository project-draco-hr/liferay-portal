{
  Object[] finderArgs=new Object[]{new Long(groupId),Boolean.valueOf(privateLayout),new Long(layoutId)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P_L,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(10);
      query.append("SELECT layout FROM Layout layout WHERE ");
      query.append("layout.groupId = ?");
      query.append(" AND ");
      query.append("layout.privateLayout = ?");
      query.append(" AND ");
      query.append("layout.layoutId = ?");
      query.append(" ");
      query.append("ORDER BY ");
      query.append("layout.parentLayoutId ASC, ");
      query.append("layout.priority ASC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(privateLayout);
      qPos.add(layoutId);
      List<Layout> list=q.list();
      result=list;
      Layout layout=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L,finderArgs,list);
      }
 else {
        layout=list.get(0);
        cacheResult(layout);
        if ((layout.getGroupId() != groupId) || (layout.getPrivateLayout() != privateLayout) || (layout.getLayoutId() != layoutId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L,finderArgs,layout);
        }
      }
      return layout;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L,finderArgs,new ArrayList<Layout>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (Layout)result;
    }
  }
}

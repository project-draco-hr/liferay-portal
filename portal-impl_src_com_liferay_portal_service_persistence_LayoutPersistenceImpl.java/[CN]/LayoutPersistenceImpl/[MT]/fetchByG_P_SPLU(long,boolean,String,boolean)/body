{
  Object[] finderArgs=new Object[]{groupId,privateLayout,sourcePrototypeLayoutUuid};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P_SPLU,finderArgs,this);
  }
  if (result instanceof Layout) {
    Layout layout=(Layout)result;
    if ((groupId != layout.getGroupId()) || (privateLayout != layout.getPrivateLayout()) || !Validator.equals(sourcePrototypeLayoutUuid,layout.getSourcePrototypeLayoutUuid())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_LAYOUT_WHERE);
    query.append(_FINDER_COLUMN_G_P_SPLU_GROUPID_2);
    query.append(_FINDER_COLUMN_G_P_SPLU_PRIVATELAYOUT_2);
    if (sourcePrototypeLayoutUuid == null) {
      query.append(_FINDER_COLUMN_G_P_SPLU_SOURCEPROTOTYPELAYOUTUUID_1);
    }
 else {
      if (sourcePrototypeLayoutUuid.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_P_SPLU_SOURCEPROTOTYPELAYOUTUUID_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_P_SPLU_SOURCEPROTOTYPELAYOUTUUID_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(privateLayout);
      if (sourcePrototypeLayoutUuid != null) {
        qPos.add(sourcePrototypeLayoutUuid);
      }
      List<Layout> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_SPLU,finderArgs,list);
      }
 else {
        if ((list.size() > 1) && _log.isWarnEnabled()) {
          _log.warn("LayoutPersistenceImpl.fetchByG_P_SPLU(long, boolean, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
        }
        Layout layout=list.get(0);
        result=layout;
        cacheResult(layout);
        if ((layout.getGroupId() != groupId) || (layout.getPrivateLayout() != privateLayout) || (layout.getSourcePrototypeLayoutUuid() == null)|| !layout.getSourcePrototypeLayoutUuid().equals(sourcePrototypeLayoutUuid)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_SPLU,finderArgs,layout);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_P_SPLU,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (Layout)result;
  }
}

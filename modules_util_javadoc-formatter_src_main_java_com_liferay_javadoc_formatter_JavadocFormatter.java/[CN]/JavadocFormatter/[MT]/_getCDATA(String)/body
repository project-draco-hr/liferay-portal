{
  StringBundler sb=new StringBundler();
  if ((cdata == null) || cdata.isEmpty()) {
    return StringPool.BLANK;
  }
  int cdataBeginIndex=0;
  while (!cdata.isEmpty()) {
    int preTagIndex=cdata.indexOf("<pre>");
    int tableTagIndex=cdata.indexOf("<table>");
    boolean hasPreTag=false;
    if (preTagIndex != -1) {
      hasPreTag=true;
    }
    boolean hasTableTag=false;
    if (tableTagIndex != -1) {
      hasTableTag=true;
    }
    if (!hasPreTag && !hasTableTag) {
      sb.append(_formatCDATA(cdata));
      break;
    }
    boolean startsWithPreTag=false;
    if (preTagIndex == 0) {
      startsWithPreTag=true;
    }
    boolean startsWithTableTag=false;
    if (tableTagIndex == 0) {
      startsWithTableTag=true;
    }
    if (startsWithPreTag || startsWithTableTag) {
      sb.append("\n");
      String tagName=null;
      if (preTagIndex == 0) {
        tagName="pre";
      }
 else {
        tagName="table";
      }
      String startTag="<" + tagName + ">";
      String endTag="</" + tagName + ">";
      int startTagLength=startTag.length();
      int endTagLength=endTag.length();
      int endTagIndex=cdata.indexOf(endTag,startTagLength - 1);
      sb.append(cdata.substring(0,endTagIndex + endTagLength));
      sb.append("\n");
      cdataBeginIndex=endTagIndex + endTagLength;
    }
 else {
      int startTagIndex=0;
      if (hasPreTag && hasTableTag) {
        if (preTagIndex < tableTagIndex) {
          startTagIndex=preTagIndex;
        }
 else {
          startTagIndex=tableTagIndex;
        }
      }
 else       if (hasPreTag && !hasTableTag) {
        startTagIndex=preTagIndex;
      }
 else {
        startTagIndex=tableTagIndex;
      }
      sb.append(_formatCDATA(cdata.substring(0,startTagIndex)));
      cdataBeginIndex=startTagIndex;
    }
    cdata=cdata.substring(cdataBeginIndex);
  }
  cdata=sb.toString();
  return cdata.trim();
}

{
  String cmd=ParamUtil.getString(req,Constants.CMD);
  try {
    if (cmd.equals(Constants.SEND) || cmd.equals(Constants.SAVE)) {
      long draftId=ParamUtil.getLong(req,"draftId");
      HttpSession ses=((ActionRequestImpl)req).getHttpServletRequest().getSession();
      User user=PortalUtil.getUser(req);
      Address from=new InternetAddress(user.getEmailAddress(),user.getFullName());
      MailMessage mm=new MailMessage();
      mm.setFrom(from);
      mm.setTo(ParamUtil.getString(req,"tos"));
      mm.setCc(ParamUtil.getString(req,"ccs"));
      mm.setBcc(ParamUtil.getString(req,"bccs"));
      mm.setSubject(ParamUtil.getString(req,"subject"));
      mm.setHtmlBody(ParamUtil.getString(req,"body"));
      Map attachments=_getAttachments(PortalUtil.getUploadPortletRequest(req));
      Set filenames=attachments.keySet();
      for (Iterator itr=filenames.iterator(); itr.hasNext(); ) {
        String filename=(String)itr.next();
        byte[] attachment=(byte[])attachments.get(filename);
        MailAttachment ma=new MailAttachment();
        ma.setFilename(filename);
        ma.setContentType(ContentTypeUtil.getContentType(filename));
        ma.setContent(attachment);
        mm.appendAttachment(ma);
      }
      mm.setRemoteAttachments(_getRemoteAttachments(req));
      ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
      String url=themeDisplay.getPathMain() + "/mail/get_attachment?";
      MailUtil.completeMessage(ses,mm,cmd.equals(Constants.SEND),draftId,url);
      setForward(req,"portlet.mail.view");
    }
  }
 catch (  Exception e) {
    if (e instanceof RecipientException) {
      SessionErrors.add(req,e.getClass().getName());
      setForward(req,"portlet.mail.edit_message");
    }
    _log.error(StackTraceUtil.getStackTrace(e));
  }
}

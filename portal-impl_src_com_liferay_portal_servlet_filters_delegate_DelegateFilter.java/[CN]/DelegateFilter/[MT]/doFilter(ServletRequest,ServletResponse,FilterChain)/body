{
  String errorRequestURI=(String)servletRequest.getAttribute(JavaConstants.JAVAX_SERVLET_ERROR_REQUEST_URI);
  String forwardRequestURI=(String)servletRequest.getAttribute(JavaConstants.JAVAX_SERVLET_FORWARD_REQUEST_URI);
  String includeRequestURI=(String)servletRequest.getAttribute(JavaConstants.JAVAX_SERVLET_INCLUDE_REQUEST_URI);
  String requestURI=((HttpServletRequest)servletRequest).getRequestURI();
  int dispatcherType=FilterMapping.REQUEST;
  String uri=requestURI;
  if (Validator.isNotNull(errorRequestURI)) {
    dispatcherType=FilterMapping.ERROR;
    uri=errorRequestURI;
  }
 else   if (Validator.isNotNull(forwardRequestURI)) {
    dispatcherType=FilterMapping.FORWARD;
    uri=requestURI;
  }
 else   if (Validator.isNotNull(includeRequestURI)) {
    dispatcherType=FilterMapping.INCLUDE;
    uri=includeRequestURI;
  }
  LiferayFilterChain liferayFilterChain=new LiferayFilterChain(filterChain);
  for (  FilterMapping filterMapping : FilterRegistry.getFilterMappings()) {
    if (!filterMapping.isDispatcherEnabled(dispatcherType)) {
      continue;
    }
 else     if (filterMapping.matchesURI(uri)) {
      Filter filter=FilterRegistry.getFilter(filterMapping.getFilterName());
      liferayFilterChain.addFilter(filter);
    }
  }
  liferayFilterChain.doFilter(servletRequest,servletResponse);
}

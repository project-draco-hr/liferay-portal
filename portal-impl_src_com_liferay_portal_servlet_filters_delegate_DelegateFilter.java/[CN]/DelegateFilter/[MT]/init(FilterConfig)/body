{
  try {
    ServletContext servletContext=filterConfig.getServletContext();
    InputStream inputStream=servletContext.getResourceAsStream("/WEB-INF/liferay-filter-web.xml");
    Document doc=SAXReaderUtil.read(inputStream,true);
    Element rootElement=doc.getRootElement();
    List<Element> filterElements=rootElement.elements("filter");
    for (    Element filterElement : filterElements) {
      String filterName=filterElement.elementText("filter-name");
      String filterClassName=filterElement.elementText("filter-class");
      Map<String,String> initParams=new HashMap<String,String>();
      List<Element> initParamElements=filterElement.elements("init-param");
      for (      Element initParamElement : initParamElements) {
        String name=initParamElement.elementText("param-name");
        String value=initParamElement.elementText("param-value");
        initParams.put(name,value);
      }
      try {
        initFilter(servletContext,filterName,filterClassName,initParams);
      }
 catch (      Exception e) {
        _log.error("Filter " + filterName + " initialization failed",e);
      }
    }
    List<Element> filterMappingElements=rootElement.elements("filter-mapping");
    for (    Element filterMappingElement : filterMappingElements) {
      String filterName=filterMappingElement.elementText("filter-name");
      String servletName=filterMappingElement.elementText("servlet-name");
      List<String> urlPatterns=new ArrayList<String>();
      List<Element> urlPatternElements=filterMappingElement.elements("url-pattern");
      for (      Element urlPatternElement : urlPatternElements) {
        urlPatterns.add(urlPatternElement.getTextTrim());
      }
      List<String> dispatchers=new ArrayList<String>(4);
      List<Element> dispatcherElements=filterMappingElement.elements("dispatcher");
      for (      Element dispatcherElement : dispatcherElements) {
        String dispatcher=dispatcherElement.getTextTrim().toUpperCase();
        dispatchers.add(dispatcher);
      }
      initFilterMapping(filterName,urlPatterns,dispatchers);
    }
  }
 catch (  DocumentException de) {
    throw new ServletException(de);
  }
}

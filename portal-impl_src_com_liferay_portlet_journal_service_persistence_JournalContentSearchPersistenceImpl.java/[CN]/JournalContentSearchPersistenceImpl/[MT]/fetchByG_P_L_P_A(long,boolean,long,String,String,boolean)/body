{
  Object[] finderArgs=new Object[]{new Long(groupId),Boolean.valueOf(privateLayout),new Long(layoutId),portletId,articleId};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P_L_P_A,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler();
      query.append(_SQL_SELECT_JOURNALCONTENTSEARCH_WHERE);
      query.append("journalContentSearch.groupId = ?");
      query.append(" AND ");
      query.append("journalContentSearch.privateLayout = ?");
      query.append(" AND ");
      query.append("journalContentSearch.layoutId = ?");
      query.append(" AND ");
      if (portletId == null) {
        query.append("journalContentSearch.portletId IS NULL");
      }
 else {
        if (portletId.equals(StringPool.BLANK)) {
          query.append("(journalContentSearch.portletId IS NULL OR ");
        }
        query.append("journalContentSearch.portletId = ?");
        if (portletId.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      query.append(" AND ");
      if (articleId == null) {
        query.append("journalContentSearch.articleId IS NULL");
      }
 else {
        if (articleId.equals(StringPool.BLANK)) {
          query.append("(journalContentSearch.articleId IS NULL OR ");
        }
        query.append("journalContentSearch.articleId = ?");
        if (articleId.equals(StringPool.BLANK)) {
          query.append(")");
        }
      }
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(privateLayout);
      qPos.add(layoutId);
      if (portletId != null) {
        qPos.add(portletId);
      }
      if (articleId != null) {
        qPos.add(articleId);
      }
      List<JournalContentSearch> list=q.list();
      result=list;
      JournalContentSearch journalContentSearch=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L_P_A,finderArgs,list);
      }
 else {
        journalContentSearch=list.get(0);
        cacheResult(journalContentSearch);
        if ((journalContentSearch.getGroupId() != groupId) || (journalContentSearch.getPrivateLayout() != privateLayout) || (journalContentSearch.getLayoutId() != layoutId)|| (journalContentSearch.getPortletId() == null)|| !journalContentSearch.getPortletId().equals(portletId)|| (journalContentSearch.getArticleId() == null)|| !journalContentSearch.getArticleId().equals(articleId)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L_P_A,finderArgs,journalContentSearch);
        }
      }
      return journalContentSearch;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_L_P_A,finderArgs,new ArrayList<JournalContentSearch>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (JournalContentSearch)result;
    }
  }
}

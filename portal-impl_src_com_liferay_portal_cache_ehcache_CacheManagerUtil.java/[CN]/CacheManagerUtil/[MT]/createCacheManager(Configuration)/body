{
  CacheManager cacheManager=new CacheManager(configuration);
  try {
    ScheduledThreadPoolExecutor scheduledThreadPoolExecutor=(ScheduledThreadPoolExecutor)_statisticsExecutorField.get(cacheManager);
    BlockingQueue<Runnable> blockingQueue=null;
    if (JavaDetector.isJDK6()) {
      blockingQueue=(BlockingQueue<Runnable>)_workQueueField.get(scheduledThreadPoolExecutor);
      ;
      _workQueueField.set(scheduledThreadPoolExecutor,new DelayQueue<RunnableScheduledFuture<?>>(){
        @Override public int remainingCapacity(){
          return 0;
        }
      }
);
    }
    scheduledThreadPoolExecutor.setCorePoolSize(PropsValues.EHCACHE_CACHE_MANAGER_STATISTICS_THREAD_POOL_SIZE);
    if (JavaDetector.isJDK6()) {
      while (scheduledThreadPoolExecutor.getPoolSize() > PropsValues.EHCACHE_CACHE_MANAGER_STATISTICS_THREAD_POOL_SIZE)       ;
      _workQueueField.set(scheduledThreadPoolExecutor,blockingQueue);
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return cacheManager;
}

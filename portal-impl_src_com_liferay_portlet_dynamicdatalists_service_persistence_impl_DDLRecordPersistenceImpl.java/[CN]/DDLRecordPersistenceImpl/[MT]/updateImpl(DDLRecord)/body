{
  ddlRecord=toUnwrappedModel(ddlRecord);
  boolean isNew=ddlRecord.isNew();
  DDLRecordModelImpl ddlRecordModelImpl=(DDLRecordModelImpl)ddlRecord;
  if (Validator.isNull(ddlRecord.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    ddlRecord.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    if (ddlRecord.isNew()) {
      session.save(ddlRecord);
      ddlRecord.setNew(false);
    }
 else {
      session.merge(ddlRecord);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !DDLRecordModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((ddlRecordModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddlRecordModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{ddlRecordModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((ddlRecordModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddlRecordModelImpl.getOriginalUuid(),ddlRecordModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{ddlRecordModelImpl.getUuid(),ddlRecordModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((ddlRecordModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddlRecordModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{ddlRecordModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((ddlRecordModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RECORDSETID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddlRecordModelImpl.getOriginalRecordSetId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_RECORDSETID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RECORDSETID,args);
      args=new Object[]{ddlRecordModelImpl.getRecordSetId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_RECORDSETID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RECORDSETID,args);
    }
    if ((ddlRecordModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_U.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{ddlRecordModelImpl.getOriginalRecordSetId(),ddlRecordModelImpl.getOriginalUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_U,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_U,args);
      args=new Object[]{ddlRecordModelImpl.getRecordSetId(),ddlRecordModelImpl.getUserId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_R_U,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_U,args);
    }
  }
  EntityCacheUtil.putResult(DDLRecordModelImpl.ENTITY_CACHE_ENABLED,DDLRecordImpl.class,ddlRecord.getPrimaryKey(),ddlRecord,false);
  clearUniqueFindersCache(ddlRecord);
  cacheUniqueFindersCache(ddlRecord);
  ddlRecord.resetOriginalValues();
  return ddlRecord;
}

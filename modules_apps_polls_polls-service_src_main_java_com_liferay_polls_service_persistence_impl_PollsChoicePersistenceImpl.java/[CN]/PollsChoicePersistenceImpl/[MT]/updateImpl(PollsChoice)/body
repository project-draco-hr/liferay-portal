{
  pollsChoice=toUnwrappedModel(pollsChoice);
  boolean isNew=pollsChoice.isNew();
  PollsChoiceModelImpl pollsChoiceModelImpl=(PollsChoiceModelImpl)pollsChoice;
  if (Validator.isNull(pollsChoice.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    pollsChoice.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (pollsChoice.getCreateDate() == null)) {
    if (serviceContext == null) {
      pollsChoice.setCreateDate(now);
    }
 else {
      pollsChoice.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!pollsChoiceModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      pollsChoice.setModifiedDate(now);
    }
 else {
      pollsChoice.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (pollsChoice.isNew()) {
      session.save(pollsChoice);
      pollsChoice.setNew(false);
    }
 else {
      pollsChoice=(PollsChoice)session.merge(pollsChoice);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !PollsChoiceModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((pollsChoiceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsChoiceModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{pollsChoiceModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((pollsChoiceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsChoiceModelImpl.getOriginalUuid(),pollsChoiceModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{pollsChoiceModelImpl.getUuid(),pollsChoiceModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((pollsChoiceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{pollsChoiceModelImpl.getOriginalQuestionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_QUESTIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID,args);
      args=new Object[]{pollsChoiceModelImpl.getQuestionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_QUESTIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_QUESTIONID,args);
    }
  }
  entityCache.putResult(PollsChoiceModelImpl.ENTITY_CACHE_ENABLED,PollsChoiceImpl.class,pollsChoice.getPrimaryKey(),pollsChoice,false);
  clearUniqueFindersCache(pollsChoiceModelImpl);
  cacheUniqueFindersCache(pollsChoiceModelImpl,isNew);
  pollsChoice.resetOriginalValues();
  return pollsChoice;
}

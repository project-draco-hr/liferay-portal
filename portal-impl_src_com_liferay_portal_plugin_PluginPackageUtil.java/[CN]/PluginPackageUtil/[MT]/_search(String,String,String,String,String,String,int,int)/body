{
  _checkRepositories(repositoryURL);
  try {
    BooleanQuery contextQuery=BooleanQueryFactoryUtil.create();
    contextQuery.addRequiredTerm(Field.PORTLET_ID,PluginPackageIndexer.PORTLET_ID);
    BooleanQuery fullQuery=BooleanQueryFactoryUtil.create();
    fullQuery.add(contextQuery,BooleanClauseOccur.MUST);
    if (Validator.isNotNull(keywords)) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      searchQuery.addTerm(Field.TITLE,keywords);
      searchQuery.addTerm(Field.CONTENT,keywords);
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    if (Validator.isNotNull(type)) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      searchQuery.addExactTerm("type",type);
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    if (Validator.isNotNull(tag)) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      searchQuery.addExactTerm("tag",tag);
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    if (Validator.isNotNull(repositoryURL)) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      Query query=TermQueryFactoryUtil.create("repositoryURL",repositoryURL);
      searchQuery.add(query,BooleanClauseOccur.SHOULD);
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    if (Validator.isNotNull(license)) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      searchQuery.addExactTerm("license",license);
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    if (Validator.isNotNull(status) && !status.equals("all")) {
      BooleanQuery searchQuery=BooleanQueryFactoryUtil.create();
      if (status.equals(PluginPackageImpl.STATUS_NOT_INSTALLED_OR_OLDER_VERSION_INSTALLED)) {
        searchQuery.addExactTerm("status",PluginPackageImpl.STATUS_NOT_INSTALLED);
        searchQuery.addExactTerm("status",PluginPackageImpl.STATUS_OLDER_VERSION_INSTALLED);
      }
 else {
        searchQuery.addExactTerm("status",status);
      }
      fullQuery.add(searchQuery,BooleanClauseOccur.MUST);
    }
    return SearchEngineUtil.search(CompanyConstants.SYSTEM,fullQuery,start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
}

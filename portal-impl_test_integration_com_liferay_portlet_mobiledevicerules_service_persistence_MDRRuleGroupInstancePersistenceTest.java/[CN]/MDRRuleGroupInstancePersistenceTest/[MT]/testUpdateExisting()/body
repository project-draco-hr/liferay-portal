{
  long pk=ServiceTestUtil.nextLong();
  MDRRuleGroupInstance newMDRRuleGroupInstance=_persistence.create(pk);
  newMDRRuleGroupInstance.setUuid(ServiceTestUtil.randomString());
  newMDRRuleGroupInstance.setGroupId(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setCompanyId(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setUserId(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setUserName(ServiceTestUtil.randomString());
  newMDRRuleGroupInstance.setCreateDate(ServiceTestUtil.nextDate());
  newMDRRuleGroupInstance.setModifiedDate(ServiceTestUtil.nextDate());
  newMDRRuleGroupInstance.setClassNameId(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setClassPK(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setRuleGroupId(ServiceTestUtil.nextLong());
  newMDRRuleGroupInstance.setPriority(ServiceTestUtil.nextInt());
  _persistence.update(newMDRRuleGroupInstance);
  MDRRuleGroupInstance existingMDRRuleGroupInstance=_persistence.findByPrimaryKey(newMDRRuleGroupInstance.getPrimaryKey());
  Assert.assertEquals(existingMDRRuleGroupInstance.getUuid(),newMDRRuleGroupInstance.getUuid());
  Assert.assertEquals(existingMDRRuleGroupInstance.getRuleGroupInstanceId(),newMDRRuleGroupInstance.getRuleGroupInstanceId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getGroupId(),newMDRRuleGroupInstance.getGroupId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getCompanyId(),newMDRRuleGroupInstance.getCompanyId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getUserId(),newMDRRuleGroupInstance.getUserId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getUserName(),newMDRRuleGroupInstance.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingMDRRuleGroupInstance.getCreateDate()),Time.getShortTimestamp(newMDRRuleGroupInstance.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingMDRRuleGroupInstance.getModifiedDate()),Time.getShortTimestamp(newMDRRuleGroupInstance.getModifiedDate()));
  Assert.assertEquals(existingMDRRuleGroupInstance.getClassNameId(),newMDRRuleGroupInstance.getClassNameId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getClassPK(),newMDRRuleGroupInstance.getClassPK());
  Assert.assertEquals(existingMDRRuleGroupInstance.getRuleGroupId(),newMDRRuleGroupInstance.getRuleGroupId());
  Assert.assertEquals(existingMDRRuleGroupInstance.getPriority(),newMDRRuleGroupInstance.getPriority());
}

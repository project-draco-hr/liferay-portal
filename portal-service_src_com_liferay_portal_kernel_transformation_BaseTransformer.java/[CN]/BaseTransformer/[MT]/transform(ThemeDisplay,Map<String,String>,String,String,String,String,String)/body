{
  if (_log.isDebugEnabled()) {
    _log.debug("Language " + languageId);
  }
  if (Validator.isNull(viewMode)) {
    viewMode=Constants.VIEW;
  }
  if (_logTokens.isDebugEnabled()) {
    String tokensString=PropertiesUtil.list(tokens);
    _logTokens.debug(tokensString);
  }
  if (_logTransformBefore.isDebugEnabled()) {
    _logTransformBefore.debug(xml);
  }
  List<TransformerListener> listenersList=new ArrayList<TransformerListener>();
  String[] listeners=getTransformerListenersClassNames();
  if (listeners != null) {
    ClassLoader portalClassLoader=PortalClassLoaderUtil.getClassLoader();
    for (int i=0; i < listeners.length; i++) {
      TransformerListener listener=null;
      try {
        if (_log.isDebugEnabled()) {
          _log.debug("Instantiate listener " + listeners[i]);
        }
        boolean templateDriven=Validator.isNotNull(langType);
        Class<?> clazz=portalClassLoader.loadClass(listeners[i]);
        listener=(TransformerListener)clazz.newInstance();
        listener.setTemplateDriven(templateDriven);
        listener.setLanguageId(languageId);
        listener.setTokens(tokens);
        listenersList.add(listener);
      }
 catch (      Exception e) {
        _log.error(e,e);
      }
      if (_logXmlBeforeListener.isDebugEnabled()) {
        _logXmlBeforeListener.debug(xml);
      }
      if (listener != null) {
        xml=listener.onXml(xml);
        if (_logXmlAfterListener.isDebugEnabled()) {
          _logXmlAfterListener.debug(xml);
        }
      }
      if (_logScriptBeforeListener.isDebugEnabled()) {
        _logScriptBeforeListener.debug(script);
      }
      if (listener != null) {
        script=listener.onScript(script);
        if (_logScriptAfterListener.isDebugEnabled()) {
          _logScriptAfterListener.debug(script);
        }
      }
    }
  }
  String output=null;
  if (Validator.isNull(langType)) {
    output=LocalizationUtil.getLocalization(xml,languageId);
  }
 else {
    String templateParserClassName=getTemplateParserClassName(langType);
    if (_log.isDebugEnabled()) {
      _log.debug("Template parser class name " + templateParserClassName);
    }
    if (Validator.isNotNull(templateParserClassName)) {
      TemplateParser templateParser=(TemplateParser)InstancePool.get(templateParserClassName);
      if (templateParser == null) {
        throw new TransformException("No template parser found for " + templateParserClassName);
      }
      output=templateParser.transform(themeDisplay,tokens,viewMode,languageId,xml,script);
    }
  }
  for (int i=0; i < listenersList.size(); i++) {
    TransformerListener listener=listenersList.get(i);
    if (_logOutputBeforeListener.isDebugEnabled()) {
      _logOutputBeforeListener.debug(output);
    }
    output=listener.onOutput(output);
    if (_logOutputAfterListener.isDebugEnabled()) {
      _logOutputAfterListener.debug(output);
    }
  }
  if (_logTransfromAfter.isDebugEnabled()) {
    _logTransfromAfter.debug(output);
  }
  return output;
}

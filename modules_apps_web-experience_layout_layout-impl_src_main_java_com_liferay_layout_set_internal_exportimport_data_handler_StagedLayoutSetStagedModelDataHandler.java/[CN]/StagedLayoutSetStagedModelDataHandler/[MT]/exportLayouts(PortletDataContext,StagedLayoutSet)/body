{
  portletDataContext.getExportDataGroupElement(Layout.class);
  long[] layoutIds=portletDataContext.getLayoutIds();
  List<StagedModel> stagedModels=_stagedLayoutSetStagedModelRepository.fetchChildrenStagedModels(portletDataContext,stagedLayoutSet);
  for (  StagedModel stagedModel : stagedModels) {
    Layout layout=(Layout)stagedModel;
    if (!ArrayUtil.contains(layoutIds,layout.getLayoutId())) {
      Element layoutElement=portletDataContext.getExportDataElement(layout);
      layoutElement.addAttribute(Constants.ACTION,Constants.SKIP);
      continue;
    }
    try {
      if (!LayoutStagingUtil.prepareLayoutStagingHandler(portletDataContext,layout)) {
        return;
      }
      StagedModelDataHandlerUtil.exportReferenceStagedModel(portletDataContext,stagedLayoutSet,layout,PortletDataContext.REFERENCE_TYPE_CHILD);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to export layout " + layout.getName(),e);
      }
    }
  }
}

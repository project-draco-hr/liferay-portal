{
  Optional<StagedLayoutSet> existingLayoutSetOptional=_stagedLayoutSetStagedModelRepository.fetchExistingLayoutSet(portletDataContext.getScopeGroupId(),stagedLayoutSet.isPrivateLayout());
  StagedLayoutSet importedStagedLayoutSet=(StagedLayoutSet)stagedLayoutSet.clone();
  importedStagedLayoutSet.setGroupId(portletDataContext.getScopeGroupId());
  if (existingLayoutSetOptional.isPresent()) {
    StagedLayoutSet existingLayoutSet=existingLayoutSetOptional.get();
    importedStagedLayoutSet.setLayoutSetId(existingLayoutSet.getLayoutSetId());
    importedStagedLayoutSet=_stagedLayoutSetStagedModelRepository.updateStagedModel(portletDataContext,importedStagedLayoutSet);
  }
  importLogo(portletDataContext);
  importTheme(portletDataContext,stagedLayoutSet);
  portletDataContext.importClassedModel(stagedLayoutSet,importedStagedLayoutSet);
  Element layoutsElement=portletDataContext.getImportDataGroupElement(Layout.class);
  List<Element> layoutElements=layoutsElement.elements();
  updateLayoutPriorities(portletDataContext,layoutElements,portletDataContext.isPrivateLayout());
  _layoutSetLocalService.updatePageCount(portletDataContext.getGroupId(),portletDataContext.isPrivateLayout());
}

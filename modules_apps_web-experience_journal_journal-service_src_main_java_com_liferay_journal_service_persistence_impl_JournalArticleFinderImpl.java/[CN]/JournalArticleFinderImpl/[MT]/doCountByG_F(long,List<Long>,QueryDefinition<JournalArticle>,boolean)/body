{
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(getClass(),COUNT_BY_G_F,queryDefinition,"JournalArticle");
    sql=replaceStatusJoin(sql,queryDefinition);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,JournalArticle.class.getName(),"JournalArticle.resourcePrimKey",groupId);
    }
    sql=StringUtil.replace(sql,"[$FOLDER_ID$]",getFolderIds(folderIds,JournalArticleImpl.TABLE_NAME));
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(queryDefinition.getStatus());
    for (int i=0; i < folderIds.size(); i++) {
      Long folderId=folderIds.get(i);
      qPos.add(folderId);
    }
    Iterator<Long> itr=q.iterate();
    if (itr.hasNext()) {
      Long count=itr.next();
      if (count != null) {
        return count.intValue();
      }
    }
    return 0;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

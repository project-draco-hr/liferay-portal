{
  Class<?> declaringClass=ReflectionUtil.getAnnotationDeclaringClass(ExecutionTestListeners.class,clazz);
  Set<Class<? extends ExecutionTestListener>> executionTestListenerClasses=new LinkedHashSet<Class<? extends ExecutionTestListener>>();
  while (declaringClass != null) {
    ExecutionTestListeners executionTestListeners=declaringClass.getAnnotation(ExecutionTestListeners.class);
    executionTestListenerClasses.addAll(ListUtil.toList(executionTestListeners.listeners()));
    declaringClass=ReflectionUtil.getAnnotationDeclaringClass(ExecutionTestListeners.class,declaringClass.getSuperclass());
  }
  int i=0;
  ExecutionTestListener[] executionTestListeners=new ExecutionTestListener[executionTestListenerClasses.size()];
  for (  Class<? extends ExecutionTestListener> executionTestListenerClass : executionTestListenerClasses) {
    try {
      executionTestListeners[i++]=executionTestListenerClass.newInstance();
    }
 catch (    Exception e) {
      _log.error("Unable to instantiate " + executionTestListenerClass,e);
    }
  }
  return executionTestListeners;
}

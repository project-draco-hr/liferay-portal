{
  if (!isAutocompleteEnabled(language)) {
    return Collections.emptyList();
  }
  Set<TemplateVariableDefinition> templateVariableDefinitions=new LinkedHashSet<>();
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  DDMTemplate ddmTemplate=(DDMTemplate)request.getAttribute(WebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE);
  long classPK=BeanParamUtil.getLong(ddmTemplate,request,"classPK");
  long classNameId=BeanParamUtil.getLong(ddmTemplate,request,"classNameId");
  if (classPK > 0) {
    DDMStructure ddmStructure=DDMStructureServiceUtil.getStructure(classPK);
    classNameId=ddmStructure.getClassNameId();
  }
 else   if (ddmTemplate != null) {
    classNameId=ddmTemplate.getClassNameId();
  }
  Map<String,TemplateVariableGroup> templateVariableGroups=TemplateContextHelper.getTemplateVariableGroups(classNameId,classPK,language,themeDisplay.getLocale());
  for (  TemplateVariableGroup templateVariableGroup : templateVariableGroups.values()) {
    if (!templateVariableGroup.isAutocompleteEnabled()) {
      continue;
    }
    templateVariableDefinitions.addAll(templateVariableGroup.getTemplateVariableDefinitions());
  }
  TemplateResource templateResource=new StringTemplateResource(_TEMPLATE_ID,_TEMPLATE_CONTENT);
  Template template=TemplateManagerUtil.getTemplate(language,templateResource,false);
  for (  String key : template.getKeys()) {
    Object value=template.get(key);
    if (value == null) {
      continue;
    }
    TemplateVariableDefinition variableDefinition=new TemplateVariableDefinition(key,value.getClass(),key,(String)null);
    templateVariableDefinitions.add(variableDefinition);
  }
  return new ArrayList<>(templateVariableDefinitions);
}

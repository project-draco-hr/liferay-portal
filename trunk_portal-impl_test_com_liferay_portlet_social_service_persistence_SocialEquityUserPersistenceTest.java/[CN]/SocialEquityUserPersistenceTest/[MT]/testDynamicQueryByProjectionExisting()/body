{
  SocialEquityUser newSocialEquityUser=addSocialEquityUser();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialEquityUser.class,SocialEquityUser.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("equityUserId"));
  Object newEquityUserId=newSocialEquityUser.getEquityUserId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("equityUserId",new Object[]{newEquityUserId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingEquityUserId=result.get(0);
  assertEquals(existingEquityUserId,newEquityUserId);
}

{
  String[] orderByFields=orderByComparator.getOrderByFields();
  if (orderByFields.length > 0) {
    query.append(WHERE_AND);
  }
  for (int i=0; i < orderByFields.length; i++) {
    query.append(entityAlias);
    query.append(orderByFields[i]);
    if ((i + 1) < orderByFields.length) {
      if (orderByComparator.isAscending() ^ reverse) {
        query.append(WHERE_BIGGER_THAN_HAS_NEXT);
      }
 else {
        query.append(WHERE_LESSER_THAN_HAS_NEXT);
      }
    }
 else {
      if (orderByComparator.isAscending() ^ reverse) {
        query.append(WHERE_BIGGER_THAN);
      }
 else {
        query.append(WHERE_LESSER_THAN);
      }
    }
  }
  query.append(ORDER_BY_CLAUSE);
  for (int i=0; i < orderByFields.length; i++) {
    query.append(entityAlias);
    query.append(orderByFields[i]);
    if ((i + 1) < orderByFields.length) {
      if (orderByComparator.isAscending() ^ reverse) {
        query.append(ORDER_BY_ASC_HAS_NEXT);
      }
 else {
        query.append(ORDER_BY_DESC_HAS_NEXT);
      }
    }
 else {
      if (orderByComparator.isAscending() ^ reverse) {
        query.append(ORDER_BY_ASC);
      }
 else {
        query.append(ORDER_BY_DESC);
      }
    }
  }
  query.append(WHERE_LIMIT_2);
}

{
  ReflectionUtilAdvice.setThrowException(true);
  try {
    ConstantsBeanFactoryImpl.createConstantsBean(Constants.class);
    Assert.fail();
  }
 catch (  RuntimeException re) {
    Throwable throwable=re.getCause();
    Assert.assertEquals(Exception.class,throwable.getClass());
    Assert.assertEquals("Force failure",throwable.getMessage());
  }
  ReflectionUtilAdvice.setThrowException(false);
  Object constantsBean=ConstantsBeanFactoryImpl.createConstantsBean(Constants.class);
  Class<?> constantsBeanClass=constantsBean.getClass();
  Assert.assertEquals(Modifier.PUBLIC,constantsBeanClass.getModifiers());
  Assert.assertEquals(Constants.class.getName() + "Bean",constantsBeanClass.getName());
  Assert.assertSame(Object.class,constantsBeanClass.getSuperclass());
  Method[] methods=constantsBeanClass.getDeclaredMethods();
  Assert.assertEquals(9,methods.length);
  Arrays.sort(methods,new Comparator<Method>(){
    public int compare(    Method method1,    Method method2){
      String name1=method1.getName();
      String name2=method2.getName();
      return name1.compareTo(name2);
    }
  }
);
  Method method=methods[0];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Boolean.TYPE,method.getReturnType());
  Assert.assertEquals("getBOOLEAN_VALUE",method.getName());
  Class<?>[] parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[1];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Byte.TYPE,method.getReturnType());
  Assert.assertEquals("getBYTE_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[2];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Character.TYPE,method.getReturnType());
  Assert.assertEquals("getCHAR_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[3];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Double.TYPE,method.getReturnType());
  Assert.assertEquals("getDOUBLE_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[4];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Float.TYPE,method.getReturnType());
  Assert.assertEquals("getFLOAT_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[5];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Integer.TYPE,method.getReturnType());
  Assert.assertEquals("getINT_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[6];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Long.TYPE,method.getReturnType());
  Assert.assertEquals("getLONG_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[7];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Object.class,method.getReturnType());
  Assert.assertEquals("getOBJECT_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  method=methods[8];
  Assert.assertEquals(Modifier.PUBLIC,method.getModifiers());
  Assert.assertEquals(Short.TYPE,method.getReturnType());
  Assert.assertEquals("getSHORT_VALUE",method.getName());
  parameterTypes=method.getParameterTypes();
  Assert.assertEquals(0,parameterTypes.length);
  Object testConstantsBean2=ConstantsBeanFactoryImpl.createConstantsBean(Constants.class);
  Assert.assertSame(constantsBeanClass,testConstantsBean2.getClass());
}

{
  int pos=key.indexOf(CharPool.COLON);
  if (key.startsWith(StringPool.DASH)) {
    key=key.substring(1);
    value=null;
  }
 else   if (key.startsWith(StringPool.PLUS)) {
    key=key.substring(1);
    String typeName=null;
    if (pos != -1) {
      typeName=key.substring(pos);
      key=key.substring(0,pos - 1);
    }
 else {
      if (value != null) {
        typeName=value.toString();
        value=Void.TYPE;
      }
    }
    if (typeName != null) {
      if (_parameterTypes == null) {
        _parameterTypes=new HashMap<>();
      }
      _parameterTypes.put(key,typeName);
    }
    if (Validator.isNull(GetterUtil.getString(value))) {
      value=Void.TYPE;
    }
  }
 else   if (pos != -1) {
    String typeName=key.substring(pos + 1);
    key=key.substring(0,pos);
    if (_parameterTypes == null) {
      _parameterTypes=new HashMap<>();
    }
    _parameterTypes.put(key,typeName);
    if (Validator.isNull(GetterUtil.getString(value))) {
      value=Void.TYPE;
    }
  }
  pos=key.indexOf(CharPool.PERIOD);
  if (pos != -1) {
    String baseName=key.substring(0,pos);
    String innerName=key.substring(pos + 1);
    if (_innerParameters == null) {
      _innerParameters=new HashMap<>();
    }
    List<NameValue<String,Object>> values=_innerParameters.get(baseName);
    if (values == null) {
      values=new ArrayList<>();
      _innerParameters.put(baseName,values);
    }
    values.add(new NameValue<String,Object>(innerName,value));
    return value;
  }
  return super.put(key,value);
}

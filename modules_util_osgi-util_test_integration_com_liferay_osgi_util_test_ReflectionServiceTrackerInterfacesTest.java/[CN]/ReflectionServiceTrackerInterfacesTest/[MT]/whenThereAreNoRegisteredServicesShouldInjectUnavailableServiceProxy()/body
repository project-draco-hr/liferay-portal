{
  TestInterface testInterface=new TestInterface();
  ReflectionServiceTracker reflectionServiceTracker=new ReflectionServiceTracker(testInterface);
  Assert.assertNotNull(testInterface.getTrackedOne());
  Assert.assertNotNull(testInterface.getTrackedTwo());
  try {
    testInterface.getTrackedOne().noop();
    Assert.fail("Should throw UnavailableServiceException");
  }
 catch (  UnavailableServiceException sue) {
    Assert.assertEquals(InterfaceOne.class,sue.getUnavailableServiceClass());
  }
  try {
    testInterface.getTrackedTwo().noop2();
    Assert.fail("Should throw UnavailableServiceException");
  }
 catch (  UnavailableServiceException sue) {
    Assert.assertEquals(InterfaceTwo.class,sue.getUnavailableServiceClass());
  }
  reflectionServiceTracker.close();
}

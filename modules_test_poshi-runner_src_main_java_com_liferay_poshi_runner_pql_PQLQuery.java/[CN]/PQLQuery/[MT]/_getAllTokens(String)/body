{
  List<String> tokens=new ArrayList<>();
  query=fixPQL(query);
  while (true) {
    if (query.startsWith("(") && query.contains(")")) {
      int parenthesisCount=0;
      for (int i=0; i < query.length(); i++) {
        char c=query.charAt(i);
        if (c == '(') {
          parenthesisCount++;
        }
        if (c == ')') {
          parenthesisCount--;
        }
        if (parenthesisCount < 0) {
          return null;
        }
        if (parenthesisCount == 0) {
          int x=i + 1;
          String token=query.substring(0,x);
          tokens.add(token.trim());
          query=query.substring(x);
          query=query.trim();
          break;
        }
      }
      if (parenthesisCount > 0) {
        return null;
      }
    }
 else     if (_startsWithReservedToken(query)) {
      String reservedToken=_getStartingReservedToken(query);
      tokens.add(reservedToken);
      query=query.substring(reservedToken.length());
      query=query.trim();
    }
 else     if (query.startsWith("\"") || query.startsWith("'")) {
      int quotationTokenEndIndex=_getQuotationTokenEndIndex(query);
      if (quotationTokenEndIndex == -1) {
        return null;
      }
      String token=query.substring(0,quotationTokenEndIndex);
      tokens.add(token.trim());
      query=query.substring(quotationTokenEndIndex);
      query=query.trim();
    }
 else     if (query.contains(" ")) {
      int x=query.indexOf(" ");
      String token=query.substring(0,x);
      tokens.add(token.trim());
      query=query.substring(x);
      query=query.trim();
    }
 else {
      tokens.add(query.trim());
      break;
    }
  }
  return tokens;
}

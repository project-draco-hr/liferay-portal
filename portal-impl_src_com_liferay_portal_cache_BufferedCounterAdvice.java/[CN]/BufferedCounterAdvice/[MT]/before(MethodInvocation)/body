{
  MethodTargetClassKey methodTargetClassKey=buildMethodTargetClassKey(methodInvocation);
  BufferedCounter annotation=findAnnotation(methodTargetClassKey);
  if (annotation == _nullBufferedCounter) {
    return null;
  }
  Method method=methodTargetClassKey.getMethod();
  Object[] args=methodInvocation.getArguments();
  if (args == null || args.length != 2) {
    if (_log.isWarnEnabled()) {
      _log.warn("BufferedCounter annotation on method " + method.getName() + " with invalid number of parameters (requires 2).");
    }
    annotations.put(methodTargetClassKey,_nullBufferedCounter);
    return null;
  }
  if (!(args[1] instanceof Counter<?>)) {
    if (_log.isWarnEnabled()) {
      _log.warn("BufferedCounter annotation on method " + method.getName() + " without a second parameter of type Counter.");
    }
    annotations.put(methodTargetClassKey,_nullBufferedCounter);
    return null;
  }
  IncreasableCounterEntry entry=new IncreasableCounterEntry(_getService(methodInvocation),_getUpdateMethod(methodInvocation,annotation),args[0],(Counter<?>)args[1]);
  _pipe.put(entry);
  _invokeUpdate();
  return null;
}

{
  KaleoLogCacheModel kaleoLogCacheModel=new KaleoLogCacheModel();
  kaleoLogCacheModel.kaleoLogId=getKaleoLogId();
  kaleoLogCacheModel.groupId=getGroupId();
  kaleoLogCacheModel.companyId=getCompanyId();
  kaleoLogCacheModel.userId=getUserId();
  kaleoLogCacheModel.userName=getUserName();
  String userName=kaleoLogCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    kaleoLogCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    kaleoLogCacheModel.createDate=createDate.getTime();
  }
 else {
    kaleoLogCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    kaleoLogCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    kaleoLogCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  kaleoLogCacheModel.kaleoClassName=getKaleoClassName();
  String kaleoClassName=kaleoLogCacheModel.kaleoClassName;
  if ((kaleoClassName != null) && (kaleoClassName.length() == 0)) {
    kaleoLogCacheModel.kaleoClassName=null;
  }
  kaleoLogCacheModel.kaleoClassPK=getKaleoClassPK();
  kaleoLogCacheModel.kaleoDefinitionId=getKaleoDefinitionId();
  kaleoLogCacheModel.kaleoInstanceId=getKaleoInstanceId();
  kaleoLogCacheModel.kaleoInstanceTokenId=getKaleoInstanceTokenId();
  kaleoLogCacheModel.kaleoTaskInstanceTokenId=getKaleoTaskInstanceTokenId();
  kaleoLogCacheModel.kaleoNodeName=getKaleoNodeName();
  String kaleoNodeName=kaleoLogCacheModel.kaleoNodeName;
  if ((kaleoNodeName != null) && (kaleoNodeName.length() == 0)) {
    kaleoLogCacheModel.kaleoNodeName=null;
  }
  kaleoLogCacheModel.terminalKaleoNode=getTerminalKaleoNode();
  kaleoLogCacheModel.kaleoActionId=getKaleoActionId();
  kaleoLogCacheModel.kaleoActionName=getKaleoActionName();
  String kaleoActionName=kaleoLogCacheModel.kaleoActionName;
  if ((kaleoActionName != null) && (kaleoActionName.length() == 0)) {
    kaleoLogCacheModel.kaleoActionName=null;
  }
  kaleoLogCacheModel.kaleoActionDescription=getKaleoActionDescription();
  String kaleoActionDescription=kaleoLogCacheModel.kaleoActionDescription;
  if ((kaleoActionDescription != null) && (kaleoActionDescription.length() == 0)) {
    kaleoLogCacheModel.kaleoActionDescription=null;
  }
  kaleoLogCacheModel.previousKaleoNodeId=getPreviousKaleoNodeId();
  kaleoLogCacheModel.previousKaleoNodeName=getPreviousKaleoNodeName();
  String previousKaleoNodeName=kaleoLogCacheModel.previousKaleoNodeName;
  if ((previousKaleoNodeName != null) && (previousKaleoNodeName.length() == 0)) {
    kaleoLogCacheModel.previousKaleoNodeName=null;
  }
  kaleoLogCacheModel.previousAssigneeClassName=getPreviousAssigneeClassName();
  String previousAssigneeClassName=kaleoLogCacheModel.previousAssigneeClassName;
  if ((previousAssigneeClassName != null) && (previousAssigneeClassName.length() == 0)) {
    kaleoLogCacheModel.previousAssigneeClassName=null;
  }
  kaleoLogCacheModel.previousAssigneeClassPK=getPreviousAssigneeClassPK();
  kaleoLogCacheModel.currentAssigneeClassName=getCurrentAssigneeClassName();
  String currentAssigneeClassName=kaleoLogCacheModel.currentAssigneeClassName;
  if ((currentAssigneeClassName != null) && (currentAssigneeClassName.length() == 0)) {
    kaleoLogCacheModel.currentAssigneeClassName=null;
  }
  kaleoLogCacheModel.currentAssigneeClassPK=getCurrentAssigneeClassPK();
  kaleoLogCacheModel.type=getType();
  String type=kaleoLogCacheModel.type;
  if ((type != null) && (type.length() == 0)) {
    kaleoLogCacheModel.type=null;
  }
  kaleoLogCacheModel.comment=getComment();
  String comment=kaleoLogCacheModel.comment;
  if ((comment != null) && (comment.length() == 0)) {
    kaleoLogCacheModel.comment=null;
  }
  Date startDate=getStartDate();
  if (startDate != null) {
    kaleoLogCacheModel.startDate=startDate.getTime();
  }
 else {
    kaleoLogCacheModel.startDate=Long.MIN_VALUE;
  }
  Date endDate=getEndDate();
  if (endDate != null) {
    kaleoLogCacheModel.endDate=endDate.getTime();
  }
 else {
    kaleoLogCacheModel.endDate=Long.MIN_VALUE;
  }
  kaleoLogCacheModel.duration=getDuration();
  kaleoLogCacheModel.workflowContext=getWorkflowContext();
  String workflowContext=kaleoLogCacheModel.workflowContext;
  if ((workflowContext != null) && (workflowContext.length() == 0)) {
    kaleoLogCacheModel.workflowContext=null;
  }
  return kaleoLogCacheModel;
}

{
  MBMessageImpl mbMessageImpl=new MBMessageImpl();
  if (uuid == null) {
    mbMessageImpl.setUuid(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setUuid(uuid);
  }
  mbMessageImpl.setMessageId(messageId);
  mbMessageImpl.setGroupId(groupId);
  mbMessageImpl.setCompanyId(companyId);
  mbMessageImpl.setUserId(userId);
  if (userName == null) {
    mbMessageImpl.setUserName(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setUserName(userName);
  }
  if (createDate == Long.MIN_VALUE) {
    mbMessageImpl.setCreateDate(null);
  }
 else {
    mbMessageImpl.setCreateDate(new Date(createDate));
  }
  if (modifiedDate == Long.MIN_VALUE) {
    mbMessageImpl.setModifiedDate(null);
  }
 else {
    mbMessageImpl.setModifiedDate(new Date(modifiedDate));
  }
  mbMessageImpl.setClassNameId(classNameId);
  mbMessageImpl.setClassPK(classPK);
  mbMessageImpl.setCategoryId(categoryId);
  mbMessageImpl.setThreadId(threadId);
  mbMessageImpl.setRootMessageId(rootMessageId);
  mbMessageImpl.setParentMessageId(parentMessageId);
  if (subject == null) {
    mbMessageImpl.setSubject(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setSubject(subject);
  }
  if (body == null) {
    mbMessageImpl.setBody(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setBody(body);
  }
  if (format == null) {
    mbMessageImpl.setFormat(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setFormat(format);
  }
  mbMessageImpl.setAnonymous(anonymous);
  mbMessageImpl.setPriority(priority);
  mbMessageImpl.setAllowPingbacks(allowPingbacks);
  mbMessageImpl.setAnswer(answer);
  mbMessageImpl.setStatus(status);
  mbMessageImpl.setStatusByUserId(statusByUserId);
  if (statusByUserName == null) {
    mbMessageImpl.setStatusByUserName(StringPool.BLANK);
  }
 else {
    mbMessageImpl.setStatusByUserName(statusByUserName);
  }
  if (statusDate == Long.MIN_VALUE) {
    mbMessageImpl.setStatusDate(null);
  }
 else {
    mbMessageImpl.setStatusDate(new Date(statusDate));
  }
  mbMessageImpl.resetOriginalValues();
  return mbMessageImpl;
}

{
  String moduleFrameworkBaseDirName=System.getProperty("module.framework.base.dir");
  if (moduleFrameworkBaseDirName == null) {
    System.err.println("== -Dmodule.framework.base.dir must point to a valid " + "directory");
    return;
  }
  String moduleFrameworkModulesDirName=System.getProperty("module.framework.modules.dir");
  if (moduleFrameworkModulesDirName == null) {
    moduleFrameworkModulesDirName=moduleFrameworkBaseDirName + "/modules/";
  }
  String moduleFrameworkPortalDirName=System.getProperty("module.framework.portal.dir");
  if (moduleFrameworkPortalDirName == null) {
    moduleFrameworkPortalDirName=moduleFrameworkBaseDirName + "/portal/";
  }
  Path targetPlatformPath=Paths.get(moduleFrameworkBaseDirName,TargetPlatformIndexer.DIR_NAME_TARGET_PLATFORM);
  Files.createDirectories(targetPlatformPath);
  Framework framework=null;
  Path tempPath=Files.createTempDirectory(null);
  try {
    ServiceLoader<FrameworkFactory> serviceLoader=ServiceLoader.load(FrameworkFactory.class);
    FrameworkFactory frameworkFactory=serviceLoader.iterator().next();
    Map<String,String> properties=new HashMap<>();
    properties.put(org.osgi.framework.Constants.FRAMEWORK_STORAGE,tempPath.toString());
    framework=frameworkFactory.newFramework(properties);
    framework.init();
    BundleContext bundleContext=framework.getBundleContext();
    Bundle systemBundle=bundleContext.getBundle(0);
    TargetPlatformIndexer targetPlatformIndexer=new TargetPlatformIndexer(systemBundle,moduleFrameworkBaseDirName + "/static",moduleFrameworkModulesDirName,moduleFrameworkPortalDirName);
    ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();
    targetPlatformIndexer.index(byteArrayOutputStream);
    Path indexFilePath=targetPlatformPath.resolve("target.platform.index.xml");
    Files.write(indexFilePath,byteArrayOutputStream.toByteArray());
    System.out.println("== Wrote index file " + indexFilePath);
  }
  finally {
    framework.stop();
    PathUtil.deltree(tempPath);
  }
}

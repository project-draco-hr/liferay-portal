{
  String moduleFrameworkBaseDirName=System.getProperty("module.framework.base.dir");
  if (moduleFrameworkBaseDirName == null) {
    System.err.println("== -Dmodule.framework.base.dir must point to a valid " + "directory");
    return;
  }
  String moduleFrameworkModulesDirName=System.getProperty("module.framework.modules.dir");
  if (moduleFrameworkModulesDirName == null) {
    moduleFrameworkModulesDirName=moduleFrameworkBaseDirName + "/modules/";
  }
  String moduleFrameworkPortalDirName=System.getProperty("module.framework.portal.dir");
  if (moduleFrameworkPortalDirName == null) {
    moduleFrameworkPortalDirName=moduleFrameworkBaseDirName + "/portal/";
  }
  Path tempPath=Files.createTempDirectory(null);
  File targetPlatformDir=new File(moduleFrameworkBaseDirName,TargetPlatformIndexer.DIR_NAME_TARGET_PLATFORM);
  if (!targetPlatformDir.exists() && !targetPlatformDir.mkdirs()) {
    System.err.printf("== Unable to create directory %s\n",targetPlatformDir);
    return;
  }
  TargetPlatformIndexer targetPlatformIndexer=new TargetPlatformIndexer(moduleFrameworkBaseDirName,moduleFrameworkModulesDirName,moduleFrameworkPortalDirName);
  try {
    File indexFile=targetPlatformIndexer.index(targetPlatformDir);
    System.out.println("== Wrote index file " + indexFile);
  }
  finally {
    PathUtil.deltree(tempPath);
  }
}

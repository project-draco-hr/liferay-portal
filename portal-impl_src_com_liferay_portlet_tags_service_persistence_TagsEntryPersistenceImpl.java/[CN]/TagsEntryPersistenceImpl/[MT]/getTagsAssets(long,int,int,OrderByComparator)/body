{
  boolean finderClassNameCacheEnabled=TagsEntryModelImpl.CACHE_ENABLED_TAGSASSETS_TAGSENTRIES;
  String finderClassName="TagsAssets_TagsEntries";
  String finderMethodName="getTagsAssets";
  String[] finderParams=new String[]{Long.class.getName(),"java.lang.Integer","java.lang.Integer","com.liferay.portal.kernel.util.OrderByComparator"};
  Object[] finderArgs=new Object[]{new Long(pk),String.valueOf(begin),String.valueOf(end),String.valueOf(obc)};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=HibernateUtil.openSession();
      StringMaker sm=new StringMaker();
      sm.append(_SQL_GETTAGSASSETS);
      if (obc != null) {
        sm.append("ORDER BY ");
        sm.append(obc.getOrderBy());
      }
      String sql=sm.toString();
      SQLQuery q=session.createSQLQuery(sql);
      q.addEntity("TagsAsset",com.liferay.portlet.tags.model.impl.TagsAssetImpl.class);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(pk);
      List<com.liferay.portlet.tags.model.TagsAsset> list=(List<com.liferay.portlet.tags.model.TagsAsset>)QueryUtil.list(q,getDialect(),begin,end);
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      return list;
    }
 catch (    Exception e) {
      throw new SystemException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (List<com.liferay.portlet.tags.model.TagsAsset>)result;
  }
}

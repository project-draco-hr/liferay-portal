{
  long companyId=serviceContext.getCompanyId();
  Company company=companyPersistence.findByPrimaryKey(serviceContext.getCompanyId());
  Layout layout=layoutPersistence.findByPrimaryKey(serviceContext.getPlid());
  Group group=layout.getGroup();
  String groupName=group.getDescriptiveName();
  String reporterUserName=null;
  User reporterUser=getUser();
  Locale locale=LocaleUtil.getDefault();
  if (reporterUser.isDefaultUser()) {
    reporterUserName=LanguageUtil.get(locale,"anonymous");
  }
 else {
    reporterUserName=reporterUser.getFullName();
    reporterEmailAddress=reporterUser.getEmailAddress();
  }
  String reportedUserName=StringPool.BLANK;
  String reportedEmailAddress=StringPool.BLANK;
  String reportedURL=StringPool.BLANK;
  User reportedUser=userPersistence.findByPrimaryKey(reportedUserId);
  if (reportedUser.isDefaultUser()) {
    reportedUserName=group.getDescriptiveName();
  }
 else {
    reportedUserName=reportedUser.getFullName();
    reportedEmailAddress=reportedUser.getEmailAddress();
    reportedURL=reportedUser.getDisplayURL(serviceContext.getPortalURL(),serviceContext.getPathMain());
  }
  String contentType=LanguageUtil.get(locale,"model.resource." + className);
  reason=LanguageUtil.get(locale,reason);
  String fromName=PrefsPropsUtil.getString(companyId,PropsKeys.FLAGS_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(companyId,PropsKeys.FLAGS_EMAIL_FROM_ADDRESS);
  String subject=PrefsPropsUtil.getContent(companyId,PropsKeys.FLAGS_EMAIL_SUBJECT);
  String body=PrefsPropsUtil.getContent(companyId,PropsKeys.FLAGS_EMAIL_BODY);
  List<User> recipients=getRecipients(companyId,serviceContext.getScopeGroupId());
  for (  User recipient : recipients) {
    try {
      notify(company,groupName,reporterEmailAddress,reporterUserName,reportedEmailAddress,reportedUserName,reportedURL,classPK,contentTitle,contentType,contentURL,reason,fromName,fromAddress,recipient.getFullName(),recipient.getEmailAddress(),subject,body,serviceContext);
    }
 catch (    IOException ioe) {
      if (_log.isWarnEnabled()) {
        _log.warn(ioe);
      }
    }
  }
}

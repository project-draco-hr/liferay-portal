{
  long companyId=serviceContext.getCompanyId();
  Company company=companyPersistence.findByPrimaryKey(serviceContext.getCompanyId());
  Layout layout=layoutPersistence.findByPrimaryKey(serviceContext.getPlid());
  Group group=layout.getGroup();
  String reporterUserName=null;
  String reporterUserEmailAddress=null;
  User reporterUser=userPersistence.findByPrimaryKey(serviceContext.getUserId());
  Locale locale=LocaleUtil.getDefault();
  if (reporterUser == null || reporterUser.isDefaultUser()) {
    reporterUserName=LanguageUtil.get(locale,"an-anonymous-user");
    if (Validator.isNotNull(emailAddress)) {
      reporterUserEmailAddress=emailAddress;
    }
 else {
      reporterUserEmailAddress=LanguageUtil.get(locale,"no-email-address-provided");
    }
  }
 else {
    reporterUserName=reporterUser.getFullName();
    reporterUserEmailAddress=reporterUser.getEmailAddress();
  }
  String reportedUserName=StringPool.BLANK;
  String reportedUserEmailAddress=StringPool.BLANK;
  String reportedUserURL=StringPool.BLANK;
  User reportedUser=userPersistence.findByPrimaryKey(reportedUserId);
  if (reportedUser.isDefaultUser()) {
    reportedUserName=group.getDescriptiveName();
  }
 else {
    reportedUserName=reportedUser.getFullName();
    reportedUserEmailAddress=reportedUser.getEmailAddress();
    reportedUserURL=reportedUser.getDisplayURL(serviceContext.getPortalURL(),serviceContext.getPathMain());
  }
  String fromName=PrefsPropsUtil.getString(companyId,PropsKeys.FLAGS_EMAIL_FROM_NAME);
  String fromAddress=PrefsPropsUtil.getString(companyId,PropsKeys.FLAGS_EMAIL_FROM_ADDRESS);
  String subject=PrefsPropsUtil.getContent(companyId,PropsKeys.FLAGS_EMAIL_SUBJECT);
  String body=PrefsPropsUtil.getContent(companyId,PropsKeys.FLAGS_EMAIL_BODY);
  List<User> receivers=getAdministrators(companyId,serviceContext.getScopeGroupId());
  String localizedReason=LanguageUtil.get(locale,reason);
  String contentType=LanguageUtil.get(locale,"model.resource." + className);
  for (  User receiver : receivers) {
    notify(fromAddress,fromName,receiver.getEmailAddress(),receiver.getFullName(),companyId,company.getMx(),company.getName(),company.getVirtualHost(),group.getDescriptiveName(),reporterUserEmailAddress,reporterUserName,reportedUserEmailAddress,reportedUserName,reportedUserURL,contentTitle,contentType,contentURL,classPK,localizedReason,subject,body);
  }
}

{
  try {
    HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
    RenderResponse renderResponse=(RenderResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    Layout layout=themeDisplay.getLayout();
    Group group=themeDisplay.getScopeGroup();
    Group parentGroup=GroupLocalServiceUtil.getGroup(themeDisplay.getParentGroupId());
    Group layoutGroup=layout.getGroup();
    Role communityRole=ResourceLocalServiceUtil.getRole(parentGroup.getGroupId());
    List<String> supportedActions=ResourceActionsUtil.getModelResourceActions(modelName);
    List<String> communityDefaultActions=ResourceActionsUtil.getModelResourceCommunityDefaultActions(modelName);
    List<String> guestDefaultActions=ResourceActionsUtil.getModelResourceGuestDefaultActions(modelName);
    List<String> guestUnsupportedActions=ResourceActionsUtil.getModelResourceGuestUnsupportedActions(modelName);
    StringBundler sb=new StringBundler();
    for (int i=0; i < supportedActions.size(); i++) {
      String action=supportedActions.get(i);
      boolean communityChecked=communityDefaultActions.contains(action);
      boolean guestChecked=guestDefaultActions.contains(action);
      boolean guestDisabled=guestUnsupportedActions.contains(action);
      if (guestDisabled) {
        guestChecked=false;
      }
      if (group.isCommunity() || group.isOrganization()) {
        if (communityChecked) {
          sb.append(StringPool.AMPERSAND);
          sb.append(renderResponse.getNamespace());
          sb.append("communityPermissions=");
          sb.append(action);
        }
      }
      if (guestChecked) {
        sb.append(StringPool.AMPERSAND);
        sb.append(renderResponse.getNamespace());
        sb.append("guestPermissions=");
        sb.append(action);
      }
    }
    String inputPermissionsViewRole=null;
    if (layoutGroup.getName().equals(GroupConstants.CONTROL_PANEL)) {
      if (!group.hasPrivateLayouts() && guestDefaultActions.contains(ActionKeys.VIEW)) {
        inputPermissionsViewRole=RoleConstants.GUEST;
      }
    }
 else     if (layout.isPublicLayout() && guestDefaultActions.contains(ActionKeys.VIEW)) {
      inputPermissionsViewRole=RoleConstants.GUEST;
      ;
    }
 else {
      inputPermissionsViewRole=communityRole.getName();
    }
    sb.append(StringPool.AMPERSAND);
    sb.append(renderResponse.getNamespace());
    sb.append("inputPermissionsViewRole=");
    sb.append(inputPermissionsViewRole);
    pageContext.getOut().print(sb.toString());
  }
 catch (  Exception e) {
    throw new JspException(e);
  }
}

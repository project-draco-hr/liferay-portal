{
  _fileEntry=addFileEntry(parentFolder.getFolderId(),_VERSION_1_0);
  long fileEntryId=_fileEntry.getFileEntryId();
  if (versioned) {
    ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId(),TestPropsValues.getUserId());
    DLAppServiceUtil.updateFileEntry(fileEntryId,null,ContentTypes.TEXT_PLAIN,_VERSION_1_1,StringPool.BLANK,StringPool.BLANK,false,(byte[])null,serviceContext);
  }
  if (leaveCheckedOut) {
    DLAppServiceUtil.checkOutFileEntry(fileEntryId,new ServiceContext());
    ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(group.getGroupId(),TestPropsValues.getUserId());
    DLAppServiceUtil.updateFileEntry(fileEntryId,null,ContentTypes.TEXT_PLAIN,_VERSION_PWC,StringPool.BLANK,StringPool.BLANK,false,(byte[])null,serviceContext);
  }
  if (versioned && leaveCheckedOut) {
    Assert.assertEquals(3,getFileVersionsCount());
    failRevertFileVersion("PWC");
    revertFileVersion("1.1",_VERSION_1_1);
    revertFileVersion("1.0",_VERSION_1_0);
    Assert.assertEquals(3,getFileVersionsCount());
  }
 else   if (versioned) {
    Assert.assertEquals(2,getFileVersionsCount());
    failRevertFileVersion("1.1");
    revertFileVersion("1.0",_VERSION_1_0);
    Assert.assertEquals(3,getFileVersionsCount());
  }
 else   if (leaveCheckedOut) {
    Assert.assertEquals(2,getFileVersionsCount());
    failRevertFileVersion("PWC");
    revertFileVersion("1.0",_VERSION_1_0);
    Assert.assertEquals(2,getFileVersionsCount());
  }
 else {
    Assert.assertEquals(1,getFileVersionsCount());
    failRevertFileVersion("1.0");
    Assert.assertEquals(1,getFileVersionsCount());
  }
}

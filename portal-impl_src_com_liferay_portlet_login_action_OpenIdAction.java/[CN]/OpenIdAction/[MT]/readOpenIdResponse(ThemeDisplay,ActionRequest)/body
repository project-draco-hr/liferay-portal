{
  HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
  HttpSession session=request.getSession();
  ConsumerManager manager=OpenIdUtil.getConsumerManager();
  ParameterList params=new ParameterList(request.getParameterMap());
  DiscoveryInformation discovered=(DiscoveryInformation)session.getAttribute(WebKeys.OPEN_ID_DISCO);
  if (discovered == null) {
    return null;
  }
  StringBuffer receivingURL=request.getRequestURL();
  String queryString=request.getQueryString();
  if ((queryString != null) && (queryString.length() > 0)) {
    receivingURL.append(StringPool.QUESTION);
    receivingURL.append(request.getQueryString());
  }
  VerificationResult verification=manager.verify(receivingURL.toString(),params,discovered);
  Identifier verified=verification.getVerifiedId();
  if (verified == null) {
    return null;
  }
  AuthSuccess authSuccess=(AuthSuccess)verification.getAuthResponse();
  String firstName=null;
  String lastName=null;
  String emailAddress=null;
  if (authSuccess.hasExtension(SRegMessage.OPENID_NS_SREG)) {
    MessageExtension ext=authSuccess.getExtension(SRegMessage.OPENID_NS_SREG);
    if (ext instanceof SRegResponse) {
      SRegResponse sregResp=(SRegResponse)ext;
      String fullName=GetterUtil.getString(sregResp.getAttributeValue("fullname"));
      int pos=fullName.indexOf(StringPool.SPACE);
      if ((pos != -1) && ((pos + 1) < fullName.length())) {
        firstName=fullName.substring(0,pos);
        lastName=fullName.substring(pos + 1);
      }
      emailAddress=sregResp.getAttributeValue("email");
    }
  }
  if (authSuccess.hasExtension(AxMessage.OPENID_NS_AX)) {
    MessageExtension ext=authSuccess.getExtension(AxMessage.OPENID_NS_AX);
    if (ext instanceof FetchResponse) {
      FetchResponse fetchResp=(FetchResponse)ext;
      if (Validator.isNull(firstName)) {
        firstName=getFirstValue(fetchResp.getAttributeValues("firstName"));
      }
      if (Validator.isNull(lastName)) {
        lastName=getFirstValue(fetchResp.getAttributeValues("lastName"));
      }
      if (Validator.isNull(emailAddress)) {
        emailAddress=getFirstValue(fetchResp.getAttributeValues("email"));
      }
    }
  }
  String openId=OpenIdUtil.normalize(authSuccess.getIdentity());
  User user=null;
  try {
    user=UserLocalServiceUtil.getUserByOpenId(openId);
  }
 catch (  NoSuchUserException nsue) {
    if (Validator.isNull(firstName) || Validator.isNull(lastName) || Validator.isNull(emailAddress)) {
      SessionMessages.add(request,"missingOpenIdUserInformation");
      if (_log.isInfoEnabled()) {
        _log.info("The OpenID provider did not send the required " + "attributes to create an account");
      }
      PortletURL createAccountURL=themeDisplay.getURLCreateAccount();
      createAccountURL.setParameter("openId",openId);
      session.setAttribute(WebKeys.OPEN_ID_LOGIN_PENDING,Boolean.TRUE);
      return createAccountURL.toString();
    }
    long creatorUserId=0;
    long companyId=themeDisplay.getCompanyId();
    boolean autoPassword=false;
    String password1=PwdGenerator.getPassword();
    String password2=password1;
    boolean autoScreenName=true;
    String screenName=StringPool.BLANK;
    Locale locale=themeDisplay.getLocale();
    String middleName=StringPool.BLANK;
    int prefixId=0;
    int suffixId=0;
    boolean male=true;
    int birthdayMonth=Calendar.JANUARY;
    int birthdayDay=1;
    int birthdayYear=1970;
    String jobTitle=StringPool.BLANK;
    long[] groupIds=null;
    long[] organizationIds=null;
    long[] roleIds=null;
    long[] userGroupIds=null;
    boolean sendEmail=false;
    ServiceContext serviceContext=new ServiceContext();
    user=UserLocalServiceUtil.addUser(creatorUserId,companyId,autoPassword,password1,password2,autoScreenName,screenName,emailAddress,openId,locale,firstName,middleName,lastName,prefixId,suffixId,male,birthdayMonth,birthdayDay,birthdayYear,jobTitle,groupIds,organizationIds,roleIds,userGroupIds,sendEmail,serviceContext);
  }
  session.setAttribute(WebKeys.OPEN_ID_LOGIN,new Long(user.getUserId()));
  return null;
}

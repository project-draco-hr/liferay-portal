{
  HttpServletRequest request=PortalUtil.getHttpServletRequest(actionRequest);
  HttpServletResponse response=PortalUtil.getHttpServletResponse(actionResponse);
  HttpSession session=request.getSession();
  ActionResponseImpl actionResponseImpl=(ActionResponseImpl)actionResponse;
  String openId=ParamUtil.getString(actionRequest,"openId");
  PortletURL portletURL=actionResponseImpl.createActionURL();
  portletURL.setParameter("saveLastPath",Boolean.FALSE.toString());
  portletURL.setParameter(Constants.CMD,Constants.READ);
  portletURL.setParameter("struts_action","/login/open_id");
  List<DiscoveryInformation> discoveries=_manager.discover(openId);
  DiscoveryInformation discovered=_manager.associate(discoveries);
  session.setAttribute(WebKeys.OPEN_ID_DISCO,discovered);
  AuthRequest authRequest=_manager.authenticate(discovered,portletURL.toString(),themeDisplay.getPortalURL());
  if (UserLocalServiceUtil.fetchUserByOpenId(themeDisplay.getCompanyId(),openId) != null) {
    response.sendRedirect(authRequest.getDestinationUrl(true));
    return;
  }
  String screenName=getScreenName(openId);
  User user=UserLocalServiceUtil.fetchUserByScreenName(themeDisplay.getCompanyId(),screenName);
  if (user != null) {
    UserLocalServiceUtil.updateOpenId(user.getUserId(),openId);
    response.sendRedirect(authRequest.getDestinationUrl(true));
    return;
  }
  FetchRequest fetchRequest=FetchRequest.createFetchRequest();
  String openIdProvider=getOpenIdProvider(discovered.getOPEndpoint());
  String[] openIdAXTypes=PropsUtil.getArray(PropsKeys.OPEN_ID_AX_SCHEMA,new Filter(openIdProvider));
  for (  String openIdAXType : openIdAXTypes) {
    fetchRequest.addAttribute(openIdAXType,PropsUtil.get(_OPEN_ID_AX_TYPE.concat(openIdAXType),new Filter(openIdProvider)),true);
  }
  authRequest.addExtension(fetchRequest);
  SRegRequest sRegRequest=SRegRequest.createFetchRequest();
  sRegRequest.addAttribute(_OPEN_ID_SREG_ATTR_EMAIL,true);
  sRegRequest.addAttribute(_OPEN_ID_SREG_ATTR_FULLNAME,true);
  authRequest.addExtension(sRegRequest);
  response.sendRedirect(authRequest.getDestinationUrl(true));
}

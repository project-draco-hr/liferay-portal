{
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    StringBundler sb=new StringBundler(10);
    sb.append("select JournalArticle.resourcePrimKey, ");
    sb.append("JournalArticle.type_ from JournalArticle ");
    sb.append("left join JournalArticle tempJournalArticle on ");
    sb.append("(JournalArticle.groupId = tempJournalArticle.groupId) ");
    sb.append("and (JournalArticle.articleId = ");
    sb.append("tempJournalArticle.articleId) and ");
    sb.append(" (JournalArticle.version < ");
    sb.append("tempJournalArticle.version) where ");
    sb.append("JournalArticle.companyId = ? and ");
    sb.append("tempJournalArticle.id_ is null");
    ps=connection.prepareStatement(sb.toString());
    ps.setLong(1,companyId);
    rs=ps.executeQuery();
    while (rs.next()) {
      long resourcePrimKey=rs.getLong("resourcePrimKey");
      AssetEntry assetEntry=_assetEntryLocalService.fetchEntry(JournalArticle.class.getName(),resourcePrimKey);
      if (assetEntry == null) {
        continue;
      }
      String type=rs.getString("type_");
      long assetCategoryId=journalArticleTypesToAssetCategoryIds.get(type);
      _assetEntryLocalService.addAssetCategoryAssetEntry(assetCategoryId,assetEntry);
    }
  }
  finally {
    DataAccess.cleanUp(null,ps,rs);
  }
}

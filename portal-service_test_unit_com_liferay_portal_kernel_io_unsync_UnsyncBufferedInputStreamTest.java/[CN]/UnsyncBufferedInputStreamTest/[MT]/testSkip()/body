{
  ByteArrayInputStream byteArrayInputStream=new ByteArrayInputStream(_BUFFER);
  int size=10;
  UnsyncBufferedInputStream unsyncBufferedInputStream=new UnsyncBufferedInputStream(byteArrayInputStream,size);
  Assert.assertEquals(0,unsyncBufferedInputStream.skip(0));
  Assert.assertEquals(_SIZE,byteArrayInputStream.available());
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.available());
  Assert.assertEquals(0,unsyncBufferedInputStream.skip(-1));
  Assert.assertEquals(_SIZE,byteArrayInputStream.available());
  Assert.assertEquals(_SIZE,unsyncBufferedInputStream.available());
  Assert.assertEquals(0,unsyncBufferedInputStream.read());
  Assert.assertEquals(_SIZE - size,byteArrayInputStream.available());
  Assert.assertEquals(_SIZE - 1,unsyncBufferedInputStream.available());
  Assert.assertEquals(size - 1,unsyncBufferedInputStream.skip(size * 2));
  Assert.assertEquals(10,unsyncBufferedInputStream.read());
  Assert.assertEquals(size - 1,unsyncBufferedInputStream.skip(size * 2));
  Assert.assertEquals(size * 2,unsyncBufferedInputStream.skip(size * 2));
  Assert.assertEquals(40,unsyncBufferedInputStream.read());
  Assert.assertEquals(size - 1,unsyncBufferedInputStream.skip(size));
  unsyncBufferedInputStream.mark(size * 2);
  Assert.assertEquals(size,unsyncBufferedInputStream.skip(size * 2));
  Assert.assertEquals(size / 2,unsyncBufferedInputStream.skip(size / 2));
  unsyncBufferedInputStream.reset();
  Assert.assertEquals(50,unsyncBufferedInputStream.read());
  Assert.assertEquals(size * 2 - 1,unsyncBufferedInputStream.skip(size * 2));
  unsyncBufferedInputStream.mark(_SIZE);
  while (unsyncBufferedInputStream.read() != -1)   ;
  Assert.assertEquals(0,unsyncBufferedInputStream.skip(1));
}

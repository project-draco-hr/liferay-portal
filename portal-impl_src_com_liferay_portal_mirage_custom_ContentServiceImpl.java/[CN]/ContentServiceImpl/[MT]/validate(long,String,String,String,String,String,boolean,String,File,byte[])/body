{
  if (Validator.isNull(title)) {
    throw new ArticleTitleException();
  }
 else   if (Validator.isNull(content)) {
    throw new ArticleContentException();
  }
 else   if (Validator.isNull(type)) {
    throw new ArticleTypeException();
  }
  if (Validator.isNotNull(structureId)) {
    _journalStructurePersistence.findByG_S(groupId,structureId);
    JournalTemplate template=_journalTemplatePersistence.findByG_T(groupId,templateId);
    if (!template.getStructureId().equals(structureId)) {
      throw new NoSuchTemplateException();
    }
  }
  String[] imageExtensions=PropsUtil.getArray(PropsKeys.JOURNAL_IMAGE_EXTENSIONS);
  if (smallImage && Validator.isNull(smallImageURL) && smallFile != null && smallBytes != null) {
    String smallImageName=smallFile.getName();
    if (smallImageName != null) {
      boolean validSmallImageExtension=false;
      for (int i=0; i < imageExtensions.length; i++) {
        if (StringPool.STAR.equals(imageExtensions[i]) || StringUtil.endsWith(smallImageName,imageExtensions[i])) {
          validSmallImageExtension=true;
          break;
        }
      }
      if (!validSmallImageExtension) {
        throw new ArticleSmallImageNameException(smallImageName);
      }
    }
    long smallImageMaxSize=GetterUtil.getLong(PropsUtil.get(PropsKeys.JOURNAL_IMAGE_SMALL_MAX_SIZE));
    if ((smallImageMaxSize > 0) && ((smallBytes == null) || (smallBytes.length > smallImageMaxSize))) {
      throw new ArticleSmallImageSizeException();
    }
  }
}

{
  long passwordPolicyId=ParamUtil.getLong(actionRequest,"passwordPolicyId");
  String name=ParamUtil.getString(actionRequest,"name");
  String description=ParamUtil.getString(actionRequest,"description");
  boolean changeable=ParamUtil.getBoolean(actionRequest,"changeable");
  boolean changeRequired=ParamUtil.getBoolean(actionRequest,"changeRequired");
  long minAge=ParamUtil.getLong(actionRequest,"minAge");
  boolean checkSyntax=ParamUtil.getBoolean(actionRequest,"checkSyntax");
  boolean allowDictionaryWords=ParamUtil.getBoolean(actionRequest,"allowDictionaryWords");
  int minLength=ParamUtil.getInteger(actionRequest,"minLength");
  boolean history=ParamUtil.getBoolean(actionRequest,"history");
  int historyCount=ParamUtil.getInteger(actionRequest,"historyCount");
  boolean expireable=ParamUtil.getBoolean(actionRequest,"expireable");
  long maxAge=ParamUtil.getLong(actionRequest,"maxAge");
  long warningTime=ParamUtil.getLong(actionRequest,"warningTime");
  int graceLimit=ParamUtil.getInteger(actionRequest,"graceLimit");
  boolean lockout=ParamUtil.getBoolean(actionRequest,"lockout");
  int maxFailure=ParamUtil.getInteger(actionRequest,"maxFailure");
  long lockoutDuration=ParamUtil.getLong(actionRequest,"lockoutDuration");
  long resetFailureCount=ParamUtil.getLong(actionRequest,"resetFailureCount");
  long resetTicketMaxAge=ParamUtil.getLong(actionRequest,"resetTicketMaxAge");
  if (passwordPolicyId <= 0) {
    PasswordPolicyServiceUtil.addPasswordPolicy(name,description,changeable,changeRequired,minAge,checkSyntax,allowDictionaryWords,minLength,history,historyCount,expireable,maxAge,warningTime,graceLimit,lockout,maxFailure,lockoutDuration,resetFailureCount,resetTicketMaxAge);
  }
 else {
    PasswordPolicyServiceUtil.updatePasswordPolicy(passwordPolicyId,name,description,changeable,changeRequired,minAge,checkSyntax,allowDictionaryWords,minLength,history,historyCount,expireable,maxAge,warningTime,graceLimit,lockout,maxFailure,lockoutDuration,resetFailureCount,resetTicketMaxAge);
  }
}

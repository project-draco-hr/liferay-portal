{
  final AtomicBoolean flushedFlag=new AtomicBoolean();
  UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream(){
    @Override public void flush() throws IOException {
      flushedFlag.set(true);
    }
  }
;
  OutputStreamWriter outputStreamWriter=new OutputStreamWriter(unsyncByteArrayOutputStream,"US-ASCII",4,autoFlush);
  outputStreamWriter.write("abcdefg".toCharArray(),1,5);
  Assert.assertFalse(flushedFlag.get());
  if (!autoFlush) {
    outputStreamWriter.flush();
    Assert.assertTrue(flushedFlag.get());
    flushedFlag.set(false);
  }
  Assert.assertArrayEquals(new byte[]{'b','c','d','e','f'},unsyncByteArrayOutputStream.toByteArray());
  unsyncByteArrayOutputStream.reset();
  outputStreamWriter=new OutputStreamWriter(unsyncByteArrayOutputStream,"US-ASCII",autoFlush);
  outputStreamWriter.write("abc".toCharArray());
  Assert.assertFalse(flushedFlag.get());
  if (!autoFlush) {
    outputStreamWriter.flush();
    Assert.assertTrue(flushedFlag.get());
    flushedFlag.set(false);
  }
  Assert.assertArrayEquals(new byte[]{'a','b','c'},unsyncByteArrayOutputStream.toByteArray());
}

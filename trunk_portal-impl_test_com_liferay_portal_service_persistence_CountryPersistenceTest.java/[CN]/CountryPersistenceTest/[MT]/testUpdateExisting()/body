{
  long pk=nextLong();
  Country newCountry=_persistence.create(pk);
  newCountry.setName(randomString());
  newCountry.setA2(randomString());
  newCountry.setA3(randomString());
  newCountry.setNumber(randomString());
  newCountry.setIdd(randomString());
  newCountry.setActive(randomBoolean());
  _persistence.update(newCountry,false);
  Country existingCountry=_persistence.findByPrimaryKey(newCountry.getPrimaryKey());
  assertEquals(existingCountry.getCountryId(),newCountry.getCountryId());
  assertEquals(existingCountry.getName(),newCountry.getName());
  assertEquals(existingCountry.getA2(),newCountry.getA2());
  assertEquals(existingCountry.getA3(),newCountry.getA3());
  assertEquals(existingCountry.getNumber(),newCountry.getNumber());
  assertEquals(existingCountry.getIdd(),newCountry.getIdd());
  assertEquals(existingCountry.getActive(),newCountry.getActive());
}

{
  User user=userPersistence.findByPrimaryKey(order.getUserId());
  Currency currency=Currency.getInstance(shoppingGroupServiceOverriddenConfiguration.getCurrencyId());
  StringBundler sb=new StringBundler(18);
  sb.append(order.getBillingFirstName());
  sb.append(StringPool.SPACE);
  sb.append(order.getBillingLastName());
  sb.append("<br>");
  sb.append(order.getBillingEmailAddress());
  sb.append("<br>");
  sb.append(order.getBillingStreet());
  sb.append("<br>");
  sb.append(order.getBillingCity());
  sb.append("<br>");
  sb.append(order.getBillingState());
  sb.append("<br>");
  sb.append(order.getBillingZip());
  sb.append("<br>");
  sb.append(order.getBillingCountry());
  sb.append("<br>");
  sb.append(order.getBillingPhone());
  sb.append("<br>");
  String billingAddress=sb.toString();
  sb=new StringBundler(18);
  sb.append(order.getShippingFirstName());
  sb.append(StringPool.SPACE);
  sb.append(order.getShippingLastName());
  sb.append("<br>");
  sb.append(order.getShippingEmailAddress());
  sb.append("<br>");
  sb.append(order.getShippingStreet());
  sb.append("<br>");
  sb.append(order.getShippingCity());
  sb.append("<br>");
  sb.append(order.getShippingState());
  sb.append("<br>");
  sb.append(order.getShippingZip());
  sb.append("<br>");
  sb.append(order.getShippingCountry());
  sb.append("<br>");
  sb.append(order.getShippingPhone());
  sb.append("<br>");
  String shippingAddress=sb.toString();
  double total=ShoppingUtil.calculateTotal(order);
  String fromName=shoppingGroupServiceOverriddenConfiguration.getEmailFromName();
  String fromAddress=shoppingGroupServiceOverriddenConfiguration.getEmailFromAddress();
  String toName=user.getFullName();
  String toAddress=user.getEmailAddress();
  LocalizedValuesMap subjectLocalizedValuesMap=null;
  LocalizedValuesMap bodyLocalizedValuesMap=null;
  if (emailType.equals("confirmation")) {
    subjectLocalizedValuesMap=shoppingGroupServiceOverriddenConfiguration.getEmailOrderConfirmationSubject();
    bodyLocalizedValuesMap=shoppingGroupServiceOverriddenConfiguration.getEmailOrderConfirmationBody();
  }
 else   if (emailType.equals("shipping")) {
    subjectLocalizedValuesMap=shoppingGroupServiceOverriddenConfiguration.getEmailOrderShippingSubject();
    bodyLocalizedValuesMap=shoppingGroupServiceOverriddenConfiguration.getEmailOrderShippingBody();
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setCompanyId(order.getCompanyId());
  subscriptionSender.setContextAttributes("[$ORDER_BILLING_ADDRESS$]",billingAddress,"[$ORDER_CURRENCY$]",currency.getSymbol(),"[$ORDER_NUMBER$]",order.getNumber(),"[$ORDER_SHIPPING_ADDRESS$]",shippingAddress,"[$ORDER_TOTAL$]",total);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  if (bodyLocalizedValuesMap != null) {
    subscriptionSender.setLocalizedBodyMap(LocalizationUtil.getMap(bodyLocalizedValuesMap));
  }
  if (subjectLocalizedValuesMap != null) {
    subscriptionSender.setLocalizedSubjectMap(LocalizationUtil.getMap(subjectLocalizedValuesMap));
  }
  subscriptionSender.setMailId("shopping_order",order.getOrderId());
  subscriptionSender.setPortletId(ShoppingPortletKeys.SHOPPING);
  subscriptionSender.setScopeGroupId(order.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.addRuntimeSubscribers(toAddress,toName);
  subscriptionSender.flushNotificationsAsync();
}

{
  String cmd=ParamUtil.getString(request,Constants.CMD);
  try {
    String redirect=PortalUtil.escapeRedirect(ParamUtil.getString(request,"redirect"));
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      long commentId=updateComment(request);
      boolean ajax=ParamUtil.getBoolean(request,"ajax");
      if (ajax) {
        String randomNamespace=ParamUtil.getString(request,"randomNamespace");
        JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
        jsonObject.put("commentId",commentId);
        jsonObject.put("randomNamespace",randomNamespace);
        writeJSON(request,response,jsonObject);
        return null;
      }
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteComment(request);
    }
 else     if (cmd.equals(Constants.SUBSCRIBE_TO_COMMENTS)) {
      subscribeToComments(request,true);
    }
 else     if (cmd.equals(Constants.UNSUBSCRIBE_FROM_COMMENTS)) {
      subscribeToComments(request,false);
    }
    sendRedirect(request,response,redirect);
  }
 catch (  DiscussionMaxCommentsException|MessageBodyException|NoSuchMessageException|PrincipalException|RequiredMessageException e) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.putException(e);
    writeJSON(request,response,jsonObject);
  }
  return null;
}

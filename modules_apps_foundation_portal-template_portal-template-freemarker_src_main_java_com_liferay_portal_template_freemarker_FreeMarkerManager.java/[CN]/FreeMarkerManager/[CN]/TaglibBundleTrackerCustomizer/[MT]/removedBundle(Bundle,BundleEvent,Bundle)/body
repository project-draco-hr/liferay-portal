{
  Bundle[] bundles=_classLoader.getBundles();
  if (ArrayUtil.contains(bundles,trackedBundle)) {
    bundles=ArrayUtil.remove(bundles,trackedBundle);
    _classLoader=new FreeMarkerBundleClassloader(bundles);
  }
  Enumeration<URL> enumeration=trackedBundle.findEntries("/","*taglib-mapping.properties",false);
  if (enumeration == null) {
    return;
  }
  while (enumeration.hasMoreElements()) {
    URL url=enumeration.nextElement();
    try (InputStream inputStream=url.openStream()){
      Properties properties=PropertiesUtil.load(inputStream,StringPool.UTF8);
      for (      Object keyObject : properties.keySet()) {
        _taglibMappings.remove(keyObject);
      }
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
}

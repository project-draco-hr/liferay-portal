{
  if (beanClass == null) {
    return;
  }
  String className=beanClass.getName();
  if (!className.startsWith("com.liferay")) {
    return;
  }
  AutoInject autoInject=beanClass.getAnnotation(AutoInject.class);
  if (autoInject == null) {
    autoInject(targetBean,targetBeanName,beanClass.getSuperclass());
  }
 else   if (autoInject.enable()) {
    Field[] fields=beanClass.getDeclaredFields();
    for (    Field field : fields) {
      BeanReference beanReference=field.getAnnotation(BeanReference.class);
      if (beanReference != null) {
        String referredBeanName=beanReference.name();
        Object referredBean=_localBeanCache.get(referredBeanName);
        if (referredBean == null) {
          referredBean=_beanFactory.getBean(referredBeanName);
          _localBeanCache.put(referredBeanName,referredBean);
        }
        ReflectionUtils.makeAccessible(field);
        try {
          field.set(targetBean,referredBean);
        }
 catch (        Throwable t) {
          throw new BeanCreationException(targetBeanName,"Injection of BeanReference fields failed",t);
        }
      }
    }
  }
  return;
}

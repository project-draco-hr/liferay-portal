{
  File testFile=new File(_testFilePath);
  byte[] buffer=new byte[5];
  int offset=0;
  int length=1;
  FileOutputStream fileOutputStream=new FileOutputStream(testFile);
  byte[] bytes={CharPool.LOWER_CASE_A,CharPool.LOWER_CASE_B,CharPool.LOWER_CASE_C,CharPool.LOWER_CASE_D,CharPool.LOWER_CASE_A,CharPool.LOWER_CASE_B,CharPool.LOWER_CASE_C,CharPool.LOWER_CASE_D,CharPool.LOWER_CASE_E,CharPool.LOWER_CASE_F,CharPool.LOWER_CASE_G,CharPool.EQUAL};
  fileOutputStream.write(bytes);
  fileOutputStream.close();
  Base64InputStream base64InputStream=new Base64InputStream(new FileInputStream(testFile));
  int returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(1,returnValue);
  length=2;
  returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(2,returnValue);
  length=6;
  returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(5,returnValue);
  length=3;
  returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(-1,returnValue);
  length=1;
  returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(-1,returnValue);
  length=0;
  returnValue=base64InputStream.read(buffer,offset,length);
  assertEquals(-1,returnValue);
  base64InputStream.close();
  testFile.delete();
}

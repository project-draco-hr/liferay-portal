{
  long pk=RandomTestUtil.nextLong();
  WSRPProducer newWSRPProducer=_persistence.create(pk);
  newWSRPProducer.setUuid(RandomTestUtil.randomString());
  newWSRPProducer.setGroupId(RandomTestUtil.nextLong());
  newWSRPProducer.setCompanyId(RandomTestUtil.nextLong());
  newWSRPProducer.setCreateDate(RandomTestUtil.nextDate());
  newWSRPProducer.setModifiedDate(RandomTestUtil.nextDate());
  newWSRPProducer.setName(RandomTestUtil.randomString());
  newWSRPProducer.setVersion(RandomTestUtil.randomString());
  newWSRPProducer.setPortletIds(RandomTestUtil.randomString());
  newWSRPProducer.setLastPublishDate(RandomTestUtil.nextDate());
  _wsrpProducers.add(_persistence.update(newWSRPProducer));
  WSRPProducer existingWSRPProducer=_persistence.findByPrimaryKey(newWSRPProducer.getPrimaryKey());
  Assert.assertEquals(existingWSRPProducer.getUuid(),newWSRPProducer.getUuid());
  Assert.assertEquals(existingWSRPProducer.getWsrpProducerId(),newWSRPProducer.getWsrpProducerId());
  Assert.assertEquals(existingWSRPProducer.getGroupId(),newWSRPProducer.getGroupId());
  Assert.assertEquals(existingWSRPProducer.getCompanyId(),newWSRPProducer.getCompanyId());
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPProducer.getCreateDate()),Time.getShortTimestamp(newWSRPProducer.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPProducer.getModifiedDate()),Time.getShortTimestamp(newWSRPProducer.getModifiedDate()));
  Assert.assertEquals(existingWSRPProducer.getName(),newWSRPProducer.getName());
  Assert.assertEquals(existingWSRPProducer.getVersion(),newWSRPProducer.getVersion());
  Assert.assertEquals(existingWSRPProducer.getPortletIds(),newWSRPProducer.getPortletIds());
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPProducer.getLastPublishDate()),Time.getShortTimestamp(newWSRPProducer.getLastPublishDate()));
}

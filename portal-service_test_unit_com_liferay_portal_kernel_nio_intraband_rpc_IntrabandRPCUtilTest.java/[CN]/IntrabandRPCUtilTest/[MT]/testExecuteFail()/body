{
  PortalClassLoaderUtil.setClassLoader(getClass().getClassLoader());
  MockIntraband mockIntraBand=new MockIntraband(){
    @Override protected void doSendDatagram(    RegistrationReference registrationReference,    Datagram datagram){
      throw new RuntimeException();
    }
  }
;
  try {
    IntrabandRPCUtil.execute(new MockRegistrationReference(mockIntraBand),new TestProcessCallable());
    Assert.fail();
  }
 catch (  IntrabandRPCException ibrpce) {
    Throwable throwable=ibrpce.getCause();
    Assert.assertSame(RuntimeException.class,throwable.getClass());
  }
  try {
    IntrabandRPCUtil.execute(new MockRegistrationReference(mockIntraBand),new TestProcessCallable(),1,TimeUnit.MILLISECONDS);
    Assert.fail();
  }
 catch (  IntrabandRPCException ibrpce) {
    Throwable throwable=ibrpce.getCause();
    Assert.assertSame(RuntimeException.class,throwable.getClass());
  }
}

{
  ModelListener[] scFrameworkVersionListeners=scFrameworkVersionPersistence.getListeners();
  List<com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion> scFrameworkVersions=null;
  if ((listeners.length > 0) || (scFrameworkVersionListeners.length > 0)) {
    scFrameworkVersions=getSCFrameworkVersions(productVersionId);
    for (    com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion scFrameworkVersion : scFrameworkVersions) {
      for (      ModelListener listener : listeners) {
        listener.onBeforeRemoveAssociation(productVersionId,com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion.class.getName(),scFrameworkVersion.getPrimaryKey());
      }
      for (      ModelListener listener : scFrameworkVersionListeners) {
        listener.onBeforeRemoveAssociation(scFrameworkVersion.getPrimaryKey(),SCProductVersion.class.getName(),productVersionId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(productVersionId)});
  if ((listeners.length > 0) || (scFrameworkVersionListeners.length > 0)) {
    for (    com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion scFrameworkVersion : scFrameworkVersions) {
      for (      ModelListener listener : listeners) {
        listener.onAfterRemoveAssociation(productVersionId,com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion.class.getName(),scFrameworkVersion.getPrimaryKey());
      }
      for (      ModelListener listener : scFrameworkVersionListeners) {
        listener.onBeforeRemoveAssociation(scFrameworkVersion.getPrimaryKey(),SCProductVersion.class.getName(),productVersionId);
      }
    }
  }
}

{
  Package pkg=type.getPackage();
  String packageName=pkg.getName();
  if (packageName.startsWith("java.")) {
    return null;
  }
  if (type.isInterface()) {
    try {
      Class<?> clazz=getClass();
      ClassLoader classLoader=clazz.getClassLoader();
      String modelImplClassName=type.getName();
      modelImplClassName=StringUtil.replace(modelImplClassName,".model.",".model.impl.");
      modelImplClassName+="ModelImpl";
      type=classLoader.loadClass(modelImplClassName);
    }
 catch (    ClassNotFoundException cnfe) {
    }
  }
  try {
    JSONContext jsonContext=JSONContext.get();
    List<PathExpression> pathExpressions=new ArrayList<PathExpression>();
    jsonContext.setPathExpressions(pathExpressions);
    FlexjsonBeanAnalyzerTransformer flexjsonBeanAnalyzerTransformer=new FlexjsonBeanAnalyzerTransformer(pathExpressions){
      @Override protected String getTypeName(      Class<?> type){
        return _formatType(type,null,false);
      }
    }
;
    flexjsonBeanAnalyzerTransformer.transform(type);
    Map<String,Map<String,String>> propertiesMap=flexjsonBeanAnalyzerTransformer.getPropertiesMap();
    return propertiesMap;
  }
 catch (  Exception e) {
    return null;
  }
}

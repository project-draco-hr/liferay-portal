{
  if (type.getPackage().getName().startsWith("java.")) {
    return null;
  }
  if (type.isInterface()) {
    try {
      String modelImplClassName=type.getName();
      modelImplClassName=StringUtil.replace(modelImplClassName,".model.",".model.impl.");
      modelImplClassName+="ModelImpl";
      ClassLoader classLoader=this.getClass().getClassLoader();
      type=classLoader.loadClass(modelImplClassName);
    }
 catch (    ClassNotFoundException e) {
    }
  }
  try {
    final JSONContext context=JSONContext.get();
    final List<PathExpression> pathExpressions=new ArrayList<PathExpression>();
    context.setPathExpressions(pathExpressions);
    FlexjsonBeanAnalyzerTransformer flexjsonBeanAnalyzerTransformer=new FlexjsonBeanAnalyzerTransformer(pathExpressions){
      @Override protected String getTypeName(      Class<?> type){
        return _formatType(type,null);
      }
    }
;
    flexjsonBeanAnalyzerTransformer.transform(type);
    Map<String,Map> propertiesMap=flexjsonBeanAnalyzerTransformer.getPropertiesMap();
    return propertiesMap;
  }
 catch (  Exception e) {
    return null;
  }
}

{
  SearchContext searchContext=ServiceTestUtil.getSearchContext(_group.getGroupId());
  searchContext.setKeywords("Architectural");
  JournalFolder folder=JournalTestUtil.addFolder(_group.getGroupId(),ServiceTestUtil.randomString());
  int initialBaseModelsSearchCount=searchCount(_group.getGroupId(),searchContext);
  JournalArticle article=JournalTestUtil.addArticleWithWorkflow(_group.getGroupId(),folder.getFolderId(),"title","Liferay Architectural Approach",true);
  Assert.assertEquals(initialBaseModelsSearchCount + 1,searchCount(_group.getGroupId(),searchContext));
  JournalArticleLocalServiceUtil.moveArticleToTrash(TestPropsValues.getUserId(),article);
  Assert.assertEquals(initialBaseModelsSearchCount,searchCount(_group.getGroupId(),searchContext));
  Assert.assertEquals(initialBaseModelsSearchCount + 1,searchCount(_group.getGroupId(),true,WorkflowConstants.STATUS_IN_TRASH,searchContext));
  JournalArticleLocalServiceUtil.restoreArticleFromTrash(TestPropsValues.getUserId(),article);
  Assert.assertEquals(initialBaseModelsSearchCount + 1,searchCount(_group.getGroupId(),searchContext));
  Assert.assertEquals(initialBaseModelsSearchCount,searchCount(_group.getGroupId(),true,WorkflowConstants.STATUS_IN_TRASH,searchContext));
}

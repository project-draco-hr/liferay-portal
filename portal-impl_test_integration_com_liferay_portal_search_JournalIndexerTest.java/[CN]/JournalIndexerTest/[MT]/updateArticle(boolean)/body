{
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(_group.getGroupId());
  SearchContext searchContext1=ServiceTestUtil.getSearchContext(_group.getGroupId());
  searchContext1.setKeywords("Architectural");
  SearchContext searchContext2=ServiceTestUtil.getSearchContext(_group.getGroupId());
  searchContext2.setKeywords("Apple");
  int initialBaseModelsSearchCountKeywords1=searchCount(_group.getGroupId(),searchContext1);
  int initialBaseModelsSearchCountKeywords2=searchCount(_group.getGroupId(),searchContext2);
  JournalFolder folder=JournalTestUtil.addFolder(_group.getGroupId(),ServiceTestUtil.randomString());
  JournalArticle article=JournalTestUtil.addArticleWithWorkflow(_group.getGroupId(),folder.getFolderId(),"title","Liferay Architectural Approach",true);
  Assert.assertEquals(initialBaseModelsSearchCountKeywords1 + 1,searchCount(_group.getGroupId(),searchContext1));
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  if (!approve) {
    serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  }
  JournalTestUtil.updateArticle(article,article.getTitle(),"Apple tablet",serviceContext);
  if (approve) {
    Assert.assertEquals(initialBaseModelsSearchCountKeywords1,searchCount(_group.getGroupId(),searchContext1));
    Assert.assertEquals(initialBaseModelsSearchCountKeywords2 + 1,searchCount(_group.getGroupId(),searchContext2));
  }
 else {
    Assert.assertEquals(initialBaseModelsSearchCountKeywords1 + 1,searchCount(_group.getGroupId(),searchContext1));
    Assert.assertEquals(initialBaseModelsSearchCountKeywords2,searchCount(_group.getGroupId(),searchContext2));
  }
}

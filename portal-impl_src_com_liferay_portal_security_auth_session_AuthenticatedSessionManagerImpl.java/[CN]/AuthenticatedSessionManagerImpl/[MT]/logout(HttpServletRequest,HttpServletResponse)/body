{
  HttpSession session=request.getSession();
  EventsProcessorUtil.process(PropsKeys.LOGOUT_EVENTS_PRE,PropsValues.LOGOUT_EVENTS_PRE,request,response);
  String domain=CookieKeys.getDomain(request);
  Cookie companyIdCookie=new Cookie(CookieKeys.COMPANY_ID,StringPool.BLANK);
  if (Validator.isNotNull(domain)) {
    companyIdCookie.setDomain(domain);
  }
  companyIdCookie.setMaxAge(0);
  companyIdCookie.setPath(StringPool.SLASH);
  Cookie idCookie=new Cookie(CookieKeys.ID,StringPool.BLANK);
  if (Validator.isNotNull(domain)) {
    idCookie.setDomain(domain);
  }
  idCookie.setMaxAge(0);
  idCookie.setPath(StringPool.SLASH);
  Cookie passwordCookie=new Cookie(CookieKeys.PASSWORD,StringPool.BLANK);
  if (Validator.isNotNull(domain)) {
    passwordCookie.setDomain(domain);
  }
  passwordCookie.setMaxAge(0);
  passwordCookie.setPath(StringPool.SLASH);
  boolean rememberMe=GetterUtil.getBoolean(CookieKeys.getCookie(request,CookieKeys.REMEMBER_ME));
  if (!rememberMe) {
    Cookie loginCookie=new Cookie(CookieKeys.LOGIN,StringPool.BLANK);
    if (Validator.isNotNull(domain)) {
      loginCookie.setDomain(domain);
    }
    loginCookie.setMaxAge(0);
    loginCookie.setPath(StringPool.SLASH);
    CookieKeys.addCookie(request,response,loginCookie);
  }
  Cookie rememberMeCookie=new Cookie(CookieKeys.REMEMBER_ME,StringPool.BLANK);
  if (Validator.isNotNull(domain)) {
    rememberMeCookie.setDomain(domain);
  }
  rememberMeCookie.setMaxAge(0);
  rememberMeCookie.setPath(StringPool.SLASH);
  CookieKeys.addCookie(request,response,companyIdCookie);
  CookieKeys.addCookie(request,response,idCookie);
  CookieKeys.addCookie(request,response,passwordCookie);
  CookieKeys.addCookie(request,response,rememberMeCookie);
  try {
    session.invalidate();
  }
 catch (  Exception e) {
  }
  EventsProcessorUtil.process(PropsKeys.LOGOUT_EVENTS_POST,PropsValues.LOGOUT_EVENTS_POST,request,response);
}

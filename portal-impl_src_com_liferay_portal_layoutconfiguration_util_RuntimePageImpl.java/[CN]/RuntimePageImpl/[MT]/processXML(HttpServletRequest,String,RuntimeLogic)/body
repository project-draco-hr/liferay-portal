{
  if (Validator.isNull(content)) {
    return StringPool.BLANK;
  }
  int index=content.indexOf(runtimeLogic.getOpenTag());
  if (index == -1) {
    return content;
  }
  Portlet renderPortlet=(Portlet)request.getAttribute(WebKeys.RENDER_PORTLET);
  Boolean renderPortletResource=(Boolean)request.getAttribute(WebKeys.RENDER_PORTLET_RESOURCE);
  String outerPortletId=(String)request.getAttribute(WebKeys.OUTER_PORTLET_ID);
  if (outerPortletId == null) {
    request.setAttribute(WebKeys.OUTER_PORTLET_ID,renderPortlet.getPortletId());
  }
  try {
    request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE,Boolean.TRUE);
    StringBundler sb=new StringBundler();
    int x=0;
    int y=index;
    while (y != -1) {
      sb.append(content.substring(x,y));
      int close1=content.indexOf(runtimeLogic.getClose1Tag(),y);
      int close2=content.indexOf(runtimeLogic.getClose2Tag(),y);
      if ((close2 == -1) || ((close1 != -1) && (close1 < close2))) {
        x=close1 + runtimeLogic.getClose1Tag().length();
      }
 else {
        x=close2 + runtimeLogic.getClose2Tag().length();
      }
      String runtimePortletTag=content.substring(y,x);
      if ((renderPortlet != null) && runtimePortletTag.contains(renderPortlet.getPortletId())) {
        return StringPool.BLANK;
      }
      sb.append(runtimeLogic.processXML(runtimePortletTag));
      y=content.indexOf(runtimeLogic.getOpenTag(),x);
    }
    if (y == -1) {
      sb.append(content.substring(x));
    }
    return sb.toString();
  }
  finally {
    if (outerPortletId == null) {
      request.removeAttribute(WebKeys.OUTER_PORTLET_ID);
    }
    request.setAttribute(WebKeys.RENDER_PORTLET,renderPortlet);
    if (renderPortletResource == null) {
      request.removeAttribute(WebKeys.RENDER_PORTLET_RESOURCE);
    }
 else {
      request.setAttribute(WebKeys.RENDER_PORTLET_RESOURCE,renderPortletResource);
    }
  }
}

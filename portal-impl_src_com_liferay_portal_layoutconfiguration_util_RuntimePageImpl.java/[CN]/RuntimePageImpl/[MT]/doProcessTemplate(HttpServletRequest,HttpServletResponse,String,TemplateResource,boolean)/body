{
  TemplateProcessor processor=new TemplateProcessor(request,response,portletId);
  TemplateManager templateManager=TemplateManagerUtil.getTemplateManager(TemplateConstants.LANG_TYPE_VM);
  Template template=TemplateManagerUtil.getTemplate(TemplateConstants.LANG_TYPE_VM,templateResource,restricted);
  template.put("processor",processor);
  template.prepare(request);
  UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
  templateManager.addTaglibTheme(template,"taglibLiferay",request,new PipingServletResponse(response,unsyncStringWriter));
  try {
    template.processTemplate(unsyncStringWriter);
  }
 catch (  Exception e) {
    _log.error(e,e);
    throw e;
  }
  Map<String,StringBundler> contentsMap=new HashMap<>();
  Map<Integer,List<PortletRenderer>> portletRenderersMap=processor.getPortletRenderers();
  for (  Map.Entry<Integer,List<PortletRenderer>> entry : portletRenderersMap.entrySet()) {
    if (_log.isDebugEnabled()) {
      _log.debug("Processing portlets with render weight " + entry.getKey());
    }
    List<PortletRenderer> portletRenderers=entry.getValue();
    StopWatch stopWatch=new StopWatch();
    stopWatch.start();
    if (_log.isDebugEnabled()) {
      _log.debug("Start serial rendering");
    }
    for (    PortletRenderer portletRenderer : portletRenderers) {
      Portlet portlet=portletRenderer.getPortlet();
      contentsMap.put(portlet.getPortletId(),portletRenderer.render(request,response));
      if (_log.isDebugEnabled()) {
        _log.debug("Serially rendered portlet " + portlet.getPortletId() + " in "+ stopWatch.getTime()+ " ms");
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Finished serial rendering in " + stopWatch.getTime() + " ms");
    }
  }
  StringBundler sb=StringUtil.replaceWithStringBundler(unsyncStringWriter.toString(),"[$TEMPLATE_PORTLET_","$]",contentsMap);
  return sb;
}

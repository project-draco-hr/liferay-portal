{
  long pk=RandomTestUtil.nextLong();
  WSRPConsumerPortlet newWSRPConsumerPortlet=_persistence.create(pk);
  newWSRPConsumerPortlet.setUuid(RandomTestUtil.randomString());
  newWSRPConsumerPortlet.setCompanyId(RandomTestUtil.nextLong());
  newWSRPConsumerPortlet.setCreateDate(RandomTestUtil.nextDate());
  newWSRPConsumerPortlet.setModifiedDate(RandomTestUtil.nextDate());
  newWSRPConsumerPortlet.setWsrpConsumerId(RandomTestUtil.nextLong());
  newWSRPConsumerPortlet.setName(RandomTestUtil.randomString());
  newWSRPConsumerPortlet.setPortletHandle(RandomTestUtil.randomString());
  newWSRPConsumerPortlet.setLastPublishDate(RandomTestUtil.nextDate());
  _wsrpConsumerPortlets.add(_persistence.update(newWSRPConsumerPortlet));
  WSRPConsumerPortlet existingWSRPConsumerPortlet=_persistence.findByPrimaryKey(newWSRPConsumerPortlet.getPrimaryKey());
  Assert.assertEquals(existingWSRPConsumerPortlet.getUuid(),newWSRPConsumerPortlet.getUuid());
  Assert.assertEquals(existingWSRPConsumerPortlet.getWsrpConsumerPortletId(),newWSRPConsumerPortlet.getWsrpConsumerPortletId());
  Assert.assertEquals(existingWSRPConsumerPortlet.getCompanyId(),newWSRPConsumerPortlet.getCompanyId());
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPConsumerPortlet.getCreateDate()),Time.getShortTimestamp(newWSRPConsumerPortlet.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPConsumerPortlet.getModifiedDate()),Time.getShortTimestamp(newWSRPConsumerPortlet.getModifiedDate()));
  Assert.assertEquals(existingWSRPConsumerPortlet.getWsrpConsumerId(),newWSRPConsumerPortlet.getWsrpConsumerId());
  Assert.assertEquals(existingWSRPConsumerPortlet.getName(),newWSRPConsumerPortlet.getName());
  Assert.assertEquals(existingWSRPConsumerPortlet.getPortletHandle(),newWSRPConsumerPortlet.getPortletHandle());
  Assert.assertEquals(Time.getShortTimestamp(existingWSRPConsumerPortlet.getLastPublishDate()),Time.getShortTimestamp(newWSRPConsumerPortlet.getLastPublishDate()));
}

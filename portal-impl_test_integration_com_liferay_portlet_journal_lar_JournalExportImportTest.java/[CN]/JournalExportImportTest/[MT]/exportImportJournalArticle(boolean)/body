{
  JournalArticle article=null;
  DDMStructure ddmStructure=null;
  DDMTemplate ddmTemplate=null;
  if (structuredContent) {
    ddmStructure=DDMStructureTestUtil.addStructure(group.getGroupId(),JournalArticle.class.getName());
    ddmTemplate=DDMTemplateTestUtil.addTemplate(group.getGroupId(),ddmStructure.getStructureId());
    String content=DDMStructureTestUtil.getSampleStructuredContent();
    article=JournalTestUtil.addArticleWithXMLContent(group.getGroupId(),content,ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey());
  }
 else {
    article=JournalTestUtil.addArticle(group.getGroupId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  }
  String exportedResourceUuid=article.getArticleResourceUuid();
  doExportImportPortlet(PortletKeys.JOURNAL);
  int articlesCount=JournalArticleLocalServiceUtil.getArticlesCount(importedGroup.getGroupId());
  Assert.assertEquals(1,articlesCount);
  JournalArticleResource importedJournalArticleResource=JournalArticleResourceLocalServiceUtil.fetchArticleResource(exportedResourceUuid,importedGroup.getGroupId());
  Assert.assertNotNull(importedJournalArticleResource);
  if (!structuredContent) {
    return;
  }
  DDMStructure importedDDMStructure=DDMStructureLocalServiceUtil.fetchDDMStructureByUuidAndGroupId(ddmStructure.getUuid(),importedGroup.getGroupId());
  Assert.assertNotNull(importedDDMStructure);
  DDMTemplate importedDDMTemplate=DDMTemplateLocalServiceUtil.fetchDDMTemplateByUuidAndGroupId(ddmTemplate.getUuid(),importedGroup.getGroupId());
  Assert.assertNotNull(importedDDMTemplate);
  Assert.assertEquals(article.getStructureId(),importedDDMStructure.getStructureKey());
  Assert.assertEquals(article.getTemplateId(),importedDDMTemplate.getTemplateKey());
  Assert.assertEquals(importedDDMTemplate.getClassPK(),importedDDMStructure.getStructureId());
}

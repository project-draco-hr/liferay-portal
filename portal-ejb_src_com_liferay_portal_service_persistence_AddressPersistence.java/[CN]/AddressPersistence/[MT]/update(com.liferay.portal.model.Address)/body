{
  Session session=null;
  try {
    if (address.isNew() || address.isModified()) {
      session=openSession();
      if (address.isNew()) {
        AddressHBM addressHBM=new AddressHBM();
        addressHBM.setAddressId(address.getAddressId());
        addressHBM.setCompanyId(address.getCompanyId());
        addressHBM.setUserId(address.getUserId());
        addressHBM.setUserName(address.getUserName());
        addressHBM.setCreateDate(address.getCreateDate());
        addressHBM.setModifiedDate(address.getModifiedDate());
        addressHBM.setClassName(address.getClassName());
        addressHBM.setClassPK(address.getClassPK());
        addressHBM.setStreet1(address.getStreet1());
        addressHBM.setStreet2(address.getStreet2());
        addressHBM.setStreet3(address.getStreet3());
        addressHBM.setCity(address.getCity());
        addressHBM.setZip(address.getZip());
        addressHBM.setRegionId(address.getRegionId());
        addressHBM.setCountryId(address.getCountryId());
        addressHBM.setTypeId(address.getTypeId());
        addressHBM.setMailing(address.getMailing());
        addressHBM.setPrimary(address.getPrimary());
        session.save(addressHBM);
        session.flush();
      }
 else {
        AddressHBM addressHBM=(AddressHBM)session.get(AddressHBM.class,address.getPrimaryKey());
        if (addressHBM != null) {
          addressHBM.setCompanyId(address.getCompanyId());
          addressHBM.setUserId(address.getUserId());
          addressHBM.setUserName(address.getUserName());
          addressHBM.setCreateDate(address.getCreateDate());
          addressHBM.setModifiedDate(address.getModifiedDate());
          addressHBM.setClassName(address.getClassName());
          addressHBM.setClassPK(address.getClassPK());
          addressHBM.setStreet1(address.getStreet1());
          addressHBM.setStreet2(address.getStreet2());
          addressHBM.setStreet3(address.getStreet3());
          addressHBM.setCity(address.getCity());
          addressHBM.setZip(address.getZip());
          addressHBM.setRegionId(address.getRegionId());
          addressHBM.setCountryId(address.getCountryId());
          addressHBM.setTypeId(address.getTypeId());
          addressHBM.setMailing(address.getMailing());
          addressHBM.setPrimary(address.getPrimary());
          session.flush();
        }
 else {
          addressHBM=new AddressHBM();
          addressHBM.setAddressId(address.getAddressId());
          addressHBM.setCompanyId(address.getCompanyId());
          addressHBM.setUserId(address.getUserId());
          addressHBM.setUserName(address.getUserName());
          addressHBM.setCreateDate(address.getCreateDate());
          addressHBM.setModifiedDate(address.getModifiedDate());
          addressHBM.setClassName(address.getClassName());
          addressHBM.setClassPK(address.getClassPK());
          addressHBM.setStreet1(address.getStreet1());
          addressHBM.setStreet2(address.getStreet2());
          addressHBM.setStreet3(address.getStreet3());
          addressHBM.setCity(address.getCity());
          addressHBM.setZip(address.getZip());
          addressHBM.setRegionId(address.getRegionId());
          addressHBM.setCountryId(address.getCountryId());
          addressHBM.setTypeId(address.getTypeId());
          addressHBM.setMailing(address.getMailing());
          addressHBM.setPrimary(address.getPrimary());
          session.save(addressHBM);
          session.flush();
        }
      }
      address.setNew(false);
      address.setModified(false);
    }
    return address;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

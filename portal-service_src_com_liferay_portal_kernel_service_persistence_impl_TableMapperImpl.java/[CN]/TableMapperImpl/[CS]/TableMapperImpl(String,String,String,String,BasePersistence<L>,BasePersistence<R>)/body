{
  this.leftColumnName=leftColumnName;
  this.rightColumnName=rightColumnName;
  this.leftBasePersistence=leftBasePersistence;
  this.rightBasePersistence=rightBasePersistence;
  DataSource dataSource=leftBasePersistence.getDataSource();
  addTableMappingSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"INSERT INTO " + tableName + " ("+ companyColumnName+ ", "+ leftColumnName+ ", "+ rightColumnName+ ") VALUES (?, ?, ?)",new int[]{Types.BIGINT,Types.BIGINT,Types.BIGINT});
  deleteLeftPrimaryKeyTableMappingsSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + tableName + " WHERE "+ leftColumnName+ " = ?",new int[]{Types.BIGINT});
  deleteRightPrimaryKeyTableMappingsSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + tableName + " WHERE "+ rightColumnName+ " = ?",new int[]{Types.BIGINT});
  deleteTableMappingSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + tableName + " WHERE "+ leftColumnName+ " = ? AND "+ rightColumnName+ " = ?",new int[]{Types.BIGINT,Types.BIGINT});
  getLeftPrimaryKeysSqlQuery=MappingSqlQueryFactoryUtil.getMappingSqlQuery(dataSource,"SELECT " + leftColumnName + " FROM "+ tableName+ " WHERE "+ rightColumnName+ " = ?",new int[]{Types.BIGINT},RowMapper.PRIMARY_KEY);
  getRightPrimaryKeysSqlQuery=MappingSqlQueryFactoryUtil.getMappingSqlQuery(dataSource,"SELECT " + rightColumnName + " FROM "+ tableName+ " WHERE "+ leftColumnName+ " = ?",new int[]{Types.BIGINT},RowMapper.PRIMARY_KEY);
  leftToRightPortalCache=MultiVMPoolUtil.getPortalCache(TableMapper.class.getName() + "-" + tableName+ "-LeftToRight");
  rightToLeftPortalCache=MultiVMPoolUtil.getPortalCache(TableMapper.class.getName() + "-" + tableName+ "-RightToLeft");
}

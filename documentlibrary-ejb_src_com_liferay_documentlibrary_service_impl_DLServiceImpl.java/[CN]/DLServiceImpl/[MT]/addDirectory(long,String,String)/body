{
  if ((dirName == null || dirName.equals("/")) || (dirName.indexOf("\\\\") != -1) || (dirName.indexOf("//") != -1)|| (dirName.indexOf(":") != -1)|| (dirName.indexOf("*") != -1)|| (dirName.indexOf("?") != -1)|| (dirName.indexOf("\"") != -1)|| (dirName.indexOf("<") != -1)|| (dirName.indexOf(">") != -1)|| (dirName.indexOf("|") != -1)|| (dirName.indexOf("&") != -1)|| (dirName.indexOf("[") != -1)|| (dirName.indexOf("]") != -1)|| (dirName.indexOf("'") != -1)) {
    throw new DirectoryNameException(dirName);
  }
  Session session=null;
  try {
    session=JCRFactoryUtil.createSession();
    Node rootNode=DLUtil.getRootNode(session,companyId);
    Node repositoryNode=DLUtil.getFolderNode(rootNode,repositoryId);
    if (repositoryNode.hasNode(dirName)) {
      throw new DuplicateDirectoryException(dirName);
    }
 else {
      String[] dirNameArray=StringUtil.split(dirName,"/");
      Node dirNode=repositoryNode;
      for (int i=0; i < dirNameArray.length; i++) {
        if (Validator.isNotNull(dirNameArray[i])) {
          if (dirNode.hasNode(dirNameArray[i])) {
            dirNode=dirNode.getNode(dirNameArray[i]);
          }
 else {
            dirNode=dirNode.addNode(dirNameArray[i],JCRConstants.NT_FOLDER);
          }
        }
      }
      session.save();
    }
  }
 catch (  RepositoryException re) {
    throw new SystemException(re);
  }
 finally {
    if (session != null) {
      session.logout();
    }
  }
}

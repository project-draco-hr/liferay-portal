{
  long userId=portletDataContext.getUserId(node.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(node);
  WikiNode importedNode=null;
  WikiServiceComponentProvider wikiServiceComponentProvider=WikiServiceComponentProvider.getWikiServiceComponentProvider();
  WikiGroupServiceConfiguration wikiGroupServiceConfiguration=wikiServiceComponentProvider.getWikiGroupServiceConfiguration();
  WikiNode existingNode=fetchStagedModelByUuidAndGroupId(node.getUuid(),portletDataContext.getScopeGroupId());
  if (portletDataContext.isDataStrategyMirror()) {
    if (existingNode == null) {
      serviceContext.setUuid(node.getUuid());
      importedNode=WikiNodeLocalServiceUtil.addNode(userId,node.getName(),node.getDescription(),serviceContext);
    }
 else {
      importedNode=WikiNodeLocalServiceUtil.updateNode(existingNode.getNodeId(),node.getName(),node.getDescription(),serviceContext);
    }
  }
 else {
    String initialNodeName=wikiGroupServiceConfiguration.initialNodeName();
    if ((existingNode != null) && initialNodeName.equals(existingNode.getName())) {
      importedNode=WikiNodeLocalServiceUtil.updateNode(existingNode.getNodeId(),node.getName(),node.getDescription(),serviceContext);
    }
 else {
      String nodeName=getNodeName(portletDataContext,node,node.getName(),2);
      importedNode=WikiNodeLocalServiceUtil.addNode(userId,nodeName,node.getDescription(),serviceContext);
    }
  }
  portletDataContext.importClassedModel(node,importedNode);
}

{
  long pk=RandomTestUtil.nextLong();
  AnnouncementsEntry newAnnouncementsEntry=_persistence.create(pk);
  newAnnouncementsEntry.setUuid(RandomTestUtil.randomString());
  newAnnouncementsEntry.setCompanyId(RandomTestUtil.nextLong());
  newAnnouncementsEntry.setUserId(RandomTestUtil.nextLong());
  newAnnouncementsEntry.setUserName(RandomTestUtil.randomString());
  newAnnouncementsEntry.setCreateDate(RandomTestUtil.nextDate());
  newAnnouncementsEntry.setModifiedDate(RandomTestUtil.nextDate());
  newAnnouncementsEntry.setClassNameId(RandomTestUtil.nextLong());
  newAnnouncementsEntry.setClassPK(RandomTestUtil.nextLong());
  newAnnouncementsEntry.setTitle(RandomTestUtil.randomString());
  newAnnouncementsEntry.setContent(RandomTestUtil.randomString());
  newAnnouncementsEntry.setUrl(RandomTestUtil.randomString());
  newAnnouncementsEntry.setType(RandomTestUtil.randomString());
  newAnnouncementsEntry.setDisplayDate(RandomTestUtil.nextDate());
  newAnnouncementsEntry.setExpirationDate(RandomTestUtil.nextDate());
  newAnnouncementsEntry.setPriority(RandomTestUtil.nextInt());
  newAnnouncementsEntry.setAlert(RandomTestUtil.randomBoolean());
  _announcementsEntries.add(_persistence.update(newAnnouncementsEntry));
  AnnouncementsEntry existingAnnouncementsEntry=_persistence.findByPrimaryKey(newAnnouncementsEntry.getPrimaryKey());
  Assert.assertEquals(existingAnnouncementsEntry.getUuid(),newAnnouncementsEntry.getUuid());
  Assert.assertEquals(existingAnnouncementsEntry.getEntryId(),newAnnouncementsEntry.getEntryId());
  Assert.assertEquals(existingAnnouncementsEntry.getCompanyId(),newAnnouncementsEntry.getCompanyId());
  Assert.assertEquals(existingAnnouncementsEntry.getUserId(),newAnnouncementsEntry.getUserId());
  Assert.assertEquals(existingAnnouncementsEntry.getUserName(),newAnnouncementsEntry.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingAnnouncementsEntry.getCreateDate()),Time.getShortTimestamp(newAnnouncementsEntry.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAnnouncementsEntry.getModifiedDate()),Time.getShortTimestamp(newAnnouncementsEntry.getModifiedDate()));
  Assert.assertEquals(existingAnnouncementsEntry.getClassNameId(),newAnnouncementsEntry.getClassNameId());
  Assert.assertEquals(existingAnnouncementsEntry.getClassPK(),newAnnouncementsEntry.getClassPK());
  Assert.assertEquals(existingAnnouncementsEntry.getTitle(),newAnnouncementsEntry.getTitle());
  Assert.assertEquals(existingAnnouncementsEntry.getContent(),newAnnouncementsEntry.getContent());
  Assert.assertEquals(existingAnnouncementsEntry.getUrl(),newAnnouncementsEntry.getUrl());
  Assert.assertEquals(existingAnnouncementsEntry.getType(),newAnnouncementsEntry.getType());
  Assert.assertEquals(Time.getShortTimestamp(existingAnnouncementsEntry.getDisplayDate()),Time.getShortTimestamp(newAnnouncementsEntry.getDisplayDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingAnnouncementsEntry.getExpirationDate()),Time.getShortTimestamp(newAnnouncementsEntry.getExpirationDate()));
  Assert.assertEquals(existingAnnouncementsEntry.getPriority(),newAnnouncementsEntry.getPriority());
  Assert.assertEquals(existingAnnouncementsEntry.getAlert(),newAnnouncementsEntry.getAlert());
}

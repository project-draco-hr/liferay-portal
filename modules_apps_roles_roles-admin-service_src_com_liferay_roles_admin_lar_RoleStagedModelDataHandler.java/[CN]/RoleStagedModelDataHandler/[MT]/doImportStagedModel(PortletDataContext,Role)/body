{
  long userId=portletDataContext.getUserId(role.getUserUuid());
  ServiceContext serviceContext=portletDataContext.createServiceContext(role);
  Role existingRole=RoleLocalServiceUtil.fetchRoleByUuidAndCompanyId(role.getUuid(),portletDataContext.getCompanyId());
  if (existingRole == null) {
    existingRole=RoleLocalServiceUtil.fetchRole(portletDataContext.getCompanyId(),role.getName());
  }
  Role importedRole=null;
  if (existingRole == null) {
    serviceContext.setUuid(role.getUuid());
    importedRole=RoleLocalServiceUtil.addRole(userId,null,0,role.getName(),role.getTitleMap(),role.getDescriptionMap(),role.getType(),role.getSubtype(),serviceContext);
  }
 else {
    importedRole=RoleLocalServiceUtil.updateRole(existingRole.getRoleId(),role.getName(),role.getTitleMap(),role.getDescriptionMap(),role.getSubtype(),serviceContext);
    deleteRolePermissions(portletDataContext,importedRole);
  }
  String permissionsPath=ExportImportPathUtil.getModelPath(role,"permissions.xml");
  List<Permission> permissions=(List<Permission>)portletDataContext.getZipEntryAsObject(permissionsPath);
  for (  Permission permission : permissions) {
    try {
      if (ResourceBlockLocalServiceUtil.isSupported(permission.getName())) {
        importResourceBlock(portletDataContext,importedRole,permission);
      }
 else {
        importResourcePermissions(portletDataContext,importedRole,permission);
      }
    }
 catch (    NoSuchResourceActionException nsrae) {
      if (_log.isDebugEnabled()) {
        _log.debug("Not importing individually scoped permissions");
      }
    }
  }
  portletDataContext.importClassedModel(role,importedRole);
}

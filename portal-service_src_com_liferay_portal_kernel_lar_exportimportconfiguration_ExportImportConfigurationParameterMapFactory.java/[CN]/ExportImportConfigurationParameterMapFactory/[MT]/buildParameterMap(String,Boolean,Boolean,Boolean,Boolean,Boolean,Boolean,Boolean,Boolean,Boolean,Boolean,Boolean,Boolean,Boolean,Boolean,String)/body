{
  Map<String,String[]> parameterMap=new LinkedHashMap<>();
  if (Validator.isNull(dataStrategy)) {
    dataStrategy=PortletDataHandlerKeys.DATA_STRATEGY_MIRROR_OVERWRITE;
  }
  parameterMap.put(PortletDataHandlerKeys.DATA_STRATEGY,new String[]{dataStrategy});
  if (deleteMissingLayouts == null) {
    deleteMissingLayouts=Boolean.TRUE;
  }
  parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,new String[]{deleteMissingLayouts.toString()});
  if (deletePortletData == null) {
    deletePortletData=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.DELETE_PORTLET_DATA,new String[]{deletePortletData.toString()});
  if (layoutSetPrototypeLinkEnabled == null) {
    layoutSetPrototypeLinkEnabled=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.LAYOUT_SET_PROTOTYPE_LINK_ENABLED,new String[]{layoutSetPrototypeLinkEnabled.toString()});
  if (layoutSetSettings == null) {
    layoutSetSettings=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.LAYOUT_SET_SETTINGS,new String[]{layoutSetSettings.toString()});
  if (logo == null) {
    logo=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.LOGO,new String[]{logo.toString()});
  if (portletConfiguration == null) {
    portletConfiguration=Boolean.TRUE;
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_CONFIGURATION,new String[]{portletConfiguration.toString()});
  if (portletData == null) {
    portletData=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA,new String[]{portletData.toString()});
  if (portletDataAll) {
    portletDataAll=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL,new String[]{portletDataAll.toString()});
  if (themeReference == null) {
    themeReference=Boolean.FALSE;
  }
  parameterMap.put(PortletDataHandlerKeys.THEME_REFERENCE,new String[]{themeReference.toString()});
  if (updateLastPublishDate) {
    updateLastPublishDate=Boolean.TRUE;
  }
  parameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE,new String[]{updateLastPublishDate.toString()});
  if (Validator.isNull(userIdStrategy)) {
    userIdStrategy=UserIdStrategy.CURRENT_USER_ID;
  }
  parameterMap.put(PortletDataHandlerKeys.USER_ID_STRATEGY,new String[]{userIdStrategy});
  return parameterMap;
}

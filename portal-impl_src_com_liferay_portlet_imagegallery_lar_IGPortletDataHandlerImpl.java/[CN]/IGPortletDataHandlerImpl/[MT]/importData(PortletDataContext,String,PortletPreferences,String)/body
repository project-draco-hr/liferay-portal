{
  Map parameterMap=context.getParameterMap();
  boolean importData=MapUtil.getBoolean(parameterMap,_IMPORT_IG_DATA,_enableImport.getDefaultState());
  if (_log.isDebugEnabled()) {
    if (importData) {
      _log.debug("Importing data is enabled");
    }
 else {
      _log.debug("Importing data is disabled");
    }
  }
  if (!importData) {
    return null;
  }
  try {
    SAXReader reader=SAXReaderFactory.getInstance();
    XStream xStream=new XStream();
    Document doc=reader.read(new StringReader(data));
    Element root=doc.getRootElement();
    Element el=root.element("ig-folders").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List folders=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    Iterator itr=folders.iterator();
    while (itr.hasNext()) {
      IGFolder folder=(IGFolder)itr.next();
      folder.setGroupId(context.getGroupId());
      IGFolderUtil.update(folder,true);
    }
    el=root.element("ig-images").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List igImages=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=igImages.iterator();
    while (itr.hasNext()) {
      IGImage igImage=(IGImage)itr.next();
      IGImageUtil.update(igImage,true);
    }
    el=root.element("images").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List images=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=images.iterator();
    while (itr.hasNext()) {
      Image image=(Image)itr.next();
      ImageUtil.update(image,true);
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

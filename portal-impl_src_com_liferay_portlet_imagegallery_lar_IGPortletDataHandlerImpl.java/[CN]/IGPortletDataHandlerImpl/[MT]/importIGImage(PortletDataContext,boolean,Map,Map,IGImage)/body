{
  long userId=context.getUserId(igImage.getUserUuid());
  Long folderId=(Long)folderPKs.get(new Long(igImage.getFolderId()));
  if (folderId == null) {
    folderId=new Long(igImage.getFolderId());
  }
  Image image=(Image)imagesPKs.get(new Long(igImage.getLargeImageId()));
  File imageFile=null;
  if (image == null) {
    _log.error("Could not find image for IG image " + igImage.getImageId());
    return;
  }
 else {
    imageFile=new File(igImage.getDescription() + "." + image.getType());
    FileUtil.write(imageFile,image.getTextObj());
  }
  String[] tagsEntries=context.getTagsEntries(IGImage.class,igImage.getPrimaryKeyObj());
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  IGImage existingImage=null;
  try {
    IGFolderUtil.findByPrimaryKey(folderId.longValue());
    if (mergeData) {
      existingImage=IGImageFinderUtil.findByUuid_G(igImage.getUuid(),context.getGroupId());
      if (existingImage == null) {
        IGImageLocalServiceUtil.addImage(igImage.getUuid(),userId,folderId.longValue(),igImage.getDescription(),imageFile,image.getType(),tagsEntries,addCommunityPermissions,addGuestPermissions);
      }
 else {
        IGImageLocalServiceUtil.updateImage(userId,existingImage.getImageId(),folderId.longValue(),igImage.getDescription(),imageFile,image.getType(),tagsEntries);
      }
    }
 else {
      IGImageLocalServiceUtil.addImage(userId,folderId.longValue(),igImage.getDescription(),imageFile,image.getType(),tagsEntries,addCommunityPermissions,addGuestPermissions);
    }
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for IG image " + igImage.getImageId());
  }
}

{
  long userId=context.getUserId(image.getUserUuid());
  long folderId=MapUtil.getLong(folderPKs,image.getFolderId(),image.getFolderId());
  File imageFile=null;
  byte[] bytes=context.getZipEntryAsByteArray(binPath);
  if (bytes == null) {
    _log.error("Could not find image file for image " + image.getImageId());
    return;
  }
 else {
    imageFile=File.createTempFile(String.valueOf(image.getPrimaryKey()),StringPool.PERIOD + image.getImageType());
    FileUtil.write(imageFile,bytes);
  }
  String[] tagsEntries=null;
  if (context.getBooleanParameter(_NAMESPACE,"tags")) {
    tagsEntries=context.getTagsEntries(IGImage.class,image.getImageId());
  }
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setAddCommunityPermissions(true);
  serviceContext.setAddGuestPermissions(true);
  serviceContext.setTagsEntries(tagsEntries);
  serviceContext.setUserId(userId);
  if ((folderId != IGFolderImpl.DEFAULT_PARENT_FOLDER_ID) && (folderId == image.getFolderId())) {
    String path=getImportFolderPath(context,folderId);
    IGFolder folder=(IGFolder)context.getZipEntryAsObject(path);
    importFolder(context,folderPKs,folder);
    folderId=MapUtil.getLong(folderPKs,image.getFolderId(),image.getFolderId());
  }
  IGImage existingImage=null;
  try {
    IGFolderUtil.findByPrimaryKey(folderId);
    if (context.getDataStrategy().equals(PortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {
      try {
        existingImage=IGImageFinderUtil.findByUuid_G(image.getUuid(),context.getGroupId());
        IGImageLocalServiceUtil.updateImage(existingImage.getImageId(),folderId,image.getName(),image.getDescription(),imageFile,image.getImageType(),serviceContext);
      }
 catch (      NoSuchImageException nsie) {
        IGImageLocalServiceUtil.addImage(image.getUuid(),folderId,image.getName(),image.getDescription(),imageFile,image.getImageType(),serviceContext);
      }
    }
 else {
      IGImageLocalServiceUtil.addImage(folderId,image.getName(),image.getDescription(),imageFile,image.getImageType(),serviceContext);
    }
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for image " + image.getImageId());
  }
}

{
  long userId=context.getUserId(igImage.getUserUuid());
  long folderId=MapUtil.getLong(folderPKs,igImage.getFolderId(),igImage.getFolderId());
  File imageFile=null;
  byte[] byteArray=context.getZipEntryAsByteArray(binPath);
  if (byteArray == null) {
    _log.error("Could not find image for IG image " + igImage.getImageId());
    return;
  }
 else {
    imageFile=File.createTempFile(String.valueOf(igImage.getPrimaryKey()),StringPool.PERIOD + igImage.getImageType());
    FileUtil.write(imageFile,byteArray);
  }
  String[] tagsEntries=null;
  if (context.getBooleanParameter(_NAMESPACE,"tags")) {
    tagsEntries=context.getTagsEntries(IGImage.class,igImage.getPrimaryKeyObj());
  }
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  IGImage existingImage=null;
  try {
    IGFolderUtil.findByPrimaryKey(folderId);
    if (context.getDataStrategy().equals(PortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {
      try {
        existingImage=IGImageFinderUtil.findByUuid_G(igImage.getUuid(),context.getGroupId());
        IGImageLocalServiceUtil.updateImage(userId,existingImage.getImageId(),folderId,igImage.getName(),igImage.getDescription(),imageFile,igImage.getImageType(),tagsEntries);
      }
 catch (      NoSuchImageException nsie) {
        IGImageLocalServiceUtil.addImage(igImage.getUuid(),userId,folderId,igImage.getName(),igImage.getDescription(),imageFile,igImage.getImageType(),tagsEntries,addCommunityPermissions,addGuestPermissions);
      }
    }
 else {
      IGImageLocalServiceUtil.addImage(userId,folderId,igImage.getName(),igImage.getDescription(),imageFile,igImage.getImageType(),tagsEntries,addCommunityPermissions,addGuestPermissions);
    }
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for IG image " + igImage.getImageId());
  }
}

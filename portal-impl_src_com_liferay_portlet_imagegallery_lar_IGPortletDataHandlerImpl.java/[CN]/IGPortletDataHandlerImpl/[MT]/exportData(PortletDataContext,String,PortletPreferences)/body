{
  Map parameterMap=context.getParameterMap();
  boolean exportData=MapUtil.getBoolean(parameterMap,_EXPORT_IG_DATA);
  boolean staging=MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.STAGING);
  if (_log.isDebugEnabled()) {
    if (exportData) {
      _log.debug("Exporting data is enabled");
    }
 else {
      _log.debug("Exporting data is disabled");
    }
  }
  if (!exportData && !staging) {
    return null;
  }
  try {
    XStream xStream=new XStream();
    Document doc=DocumentHelper.createDocument();
    Element root=doc.addElement("image-gallery");
    root.addAttribute("group-id",String.valueOf(context.getGroupId()));
    List folders=IGFolderUtil.findByGroupId(context.getGroupId());
    List igImages=new ArrayList();
    Iterator itr=folders.iterator();
    while (itr.hasNext()) {
      IGFolder folder=(IGFolder)itr.next();
      if (context.addPrimaryKey(IGFolder.class,folder.getPrimaryKeyObj())) {
        itr.remove();
      }
 else {
        folder.setUserUuid(folder.getUserUuid());
        List folderIGImages=IGImageUtil.findByFolderId(folder.getFolderId());
        igImages.addAll(folderIGImages);
      }
    }
    String xml=xStream.toXML(folders);
    Element el=root.addElement("ig-folders");
    Document tempDoc=PortalUtil.readDocumentFromXML(xml);
    el.content().add(tempDoc.getRootElement().createCopy());
    itr=igImages.iterator();
    while (itr.hasNext()) {
      IGImage igImage=(IGImage)itr.next();
      if (context.addPrimaryKey(IGImage.class,igImage.getPrimaryKeyObj())) {
        itr.remove();
      }
 else {
        igImage.setUserUuid(igImage.getUserUuid());
        context.addTagsEntries(IGImage.class,igImage.getPrimaryKeyObj());
        try {
          Image largeImage=ImageUtil.findByPrimaryKey(igImage.getLargeImageId());
          igImage.setImageType(largeImage.getType());
          context.getZipWriter().addEntry(getIGImageDir(igImage),largeImage.getTextObj());
        }
 catch (        NoSuchImageException nsie) {
        }
      }
    }
    xml=xStream.toXML(igImages);
    el=root.addElement("ig-images");
    tempDoc=PortalUtil.readDocumentFromXML(xml);
    el.content().add(tempDoc.getRootElement().createCopy());
    return doc.asXML();
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

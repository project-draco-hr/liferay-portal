{
  final Registry registry=RegistryUtil.getRegistry();
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("a.property","G");
  Filter filter=registry.getFilter("(a.property=G)");
  ServiceTrackerList<InterfaceOne> serviceTrackerList=ServiceTrackerCollections.list(InterfaceOne.class,filter);
  Assert.assertEquals(0,serviceTrackerList.size());
  InterfaceOne a=getInstance();
  InterfaceOne b=getInstance();
  ServiceRegistration<InterfaceOne> serviceRegistrationA=registry.registerService(InterfaceOne.class,a,properties);
  Assert.assertNotNull(serviceRegistrationA);
  boolean added=serviceTrackerList.add(b);
  Assert.assertFalse(added);
  Assert.assertEquals(1,serviceTrackerList.size());
  for (  InterfaceOne interfaceOne : serviceTrackerList) {
    Assert.assertNotNull(interfaceOne);
  }
  Collection<InterfaceOne> services=registry.getServices(InterfaceOne.class,"(a.property=G)");
  Assert.assertEquals(1,services.size());
  serviceRegistrationA.unregister();
  Assert.assertEquals(0,serviceTrackerList.size());
  services=registry.getServices(InterfaceOne.class,"(a.property=G)");
  Assert.assertEquals(0,services.size());
  serviceTrackerList.remove(b);
  services=registry.getServices(InterfaceOne.class,"(a.property=G)");
  Assert.assertEquals(0,services.size());
  Assert.assertEquals(0,serviceTrackerList.size());
}

{
  long companyId=GetterUtil.getLong(ids[0]);
  String portletId=ids[1];
  long groupId=GetterUtil.getLong(ids[2]);
  long repositoryId=GetterUtil.getLong(ids[3]);
  Map<String,Document> documents=new HashMap<String,Document>();
  try {
    S3Object[] searchObjects=_s3Service.listObjects(_s3Bucket,getKey(companyId,repositoryId),null);
    Set<String> fileNameSet=new HashSet<String>();
    for (int i=0; i < searchObjects.length; i++) {
      S3Object currentObject=searchObjects[i];
      String fileName=getFileName(currentObject.getKey());
      fileNameSet.add(fileName);
    }
    Iterator<String> itr=fileNameSet.iterator();
    while (itr.hasNext()) {
      String fileName=itr.next();
      try {
        Indexer indexer=IndexerRegistryUtil.getIndexer(FileModel.class);
        FileModel fileModel=new FileModel();
        fileModel.setCompanyId(companyId);
        fileModel.setFileName(fileName);
        fileModel.setGroupId(groupId);
        fileModel.setPortletId(portletId);
        fileModel.setRepositoryId(repositoryId);
        Document document=indexer.getDocument(fileModel);
        if (document == null) {
          continue;
        }
        documents.put(document.get(Field.UID),document);
      }
 catch (      Exception e) {
        _log.error("Reindexing " + fileName,e);
      }
    }
  }
 catch (  S3ServiceException s3se) {
    throw new SearchException(s3se);
  }
  SearchEngineUtil.updateDocuments(companyId,documents);
}

{
  try {
    S3Object[] s3Objects=_s3Service.listObjects(_s3Bucket,getKey(companyId,repositoryId,fileName),null);
    for (int i=0; i < s3Objects.length; i++) {
      S3Object oldS3Object=s3Objects[i];
      String oldKey=oldS3Object.getKey();
      oldS3Object=_s3Service.getObject(_s3Bucket,oldKey);
      File tempFile=new File(SystemProperties.get(SystemProperties.TMP_DIR) + File.separator + PortalUUIDUtil.generate());
      FileUtil.write(tempFile,oldS3Object.getDataInputStream());
      InputStream is=new FileInputStream(tempFile);
      String newPrefix=getKey(companyId,newRepositoryId);
      int x=oldKey.indexOf(CharPool.SLASH);
      x=oldKey.indexOf(CharPool.SLASH,x + 1);
      String newKey=newPrefix + oldKey.substring(x + 1,oldKey.length());
      S3Object newS3Object=new S3Object(_s3Bucket,newKey);
      newS3Object.setDataInputStream(is);
      _s3Service.putObject(_s3Bucket,newS3Object);
      _s3Service.deleteObject(_s3Bucket,oldKey);
      FileUtil.delete(tempFile);
    }
    Indexer indexer=IndexerRegistryUtil.getIndexer(FileModel.class);
    FileModel fileModel=new FileModel();
    fileModel.setCompanyId(companyId);
    fileModel.setFileName(fileName);
    fileModel.setPortletId(portletId);
    fileModel.setRepositoryId(repositoryId);
    indexer.delete(fileModel);
    fileModel.setRepositoryId(newRepositoryId);
    fileModel.setGroupId(groupId);
    indexer.reindex(fileModel);
  }
 catch (  IOException ioe) {
    throw new SystemException(ioe);
  }
catch (  S3ServiceException s3se) {
    throw new SystemException(s3se);
  }
}

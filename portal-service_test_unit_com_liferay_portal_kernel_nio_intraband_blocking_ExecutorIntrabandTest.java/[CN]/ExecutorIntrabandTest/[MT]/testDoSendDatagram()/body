{
  Queue<Datagram> sendingQueue=new LinkedList<>();
  FutureRegistrationReference futureRegistrationReference=new FutureRegistrationReference(_executorIntraband,new ChannelContext(sendingQueue),null,null){
    @Override public boolean isValid(){
      return true;
    }
  }
;
  Datagram datagram1=Datagram.createRequestDatagram(_type,_data);
  _executorIntraband.sendDatagram(futureRegistrationReference,datagram1);
  Datagram datagram2=Datagram.createRequestDatagram(_type,_data);
  _executorIntraband.sendDatagram(futureRegistrationReference,datagram2);
  Datagram datagram3=Datagram.createRequestDatagram(_type,_data);
  _executorIntraband.sendDatagram(futureRegistrationReference,datagram3);
  Assert.assertEquals(3,sendingQueue.size());
  Assert.assertSame(datagram1,sendingQueue.poll());
  Assert.assertSame(datagram2,sendingQueue.poll());
  Assert.assertSame(datagram3,sendingQueue.poll());
}

{
  long companyId=contact.getCompanyId();
  if (!isAuthEnabled(companyId) || !isExportEnabled(companyId)) {
    return;
  }
  LdapContext ctx=getContext(companyId);
  try {
    if (ctx == null) {
      return;
    }
    User user=UserLocalServiceUtil.getUserByContactId(contact.getContactId());
    Properties userMappings=getUserMappings(companyId);
    Binding binding=getUser(contact.getCompanyId(),user.getScreenName());
    Name name=new CompositeName();
    if (binding == null) {
      StringBuilder sb=new StringBuilder();
      sb.append(userMappings.getProperty("screenName"));
      sb.append(StringPool.EQUAL);
      sb.append(user.getScreenName());
      sb.append(StringPool.COMMA);
      sb.append(getUsersDN(companyId));
      name.add(sb.toString());
      LDAPUser ldapUser=(LDAPUser)Class.forName(PropsValues.LDAP_USER_IMPL).newInstance();
      ldapUser.setUser(user);
      ctx.bind(name,ldapUser);
    }
 else {
      name.add(getNameInNamespace(companyId,binding));
      Modifications mods=Modifications.getInstance();
      mods.addItem(userMappings.getProperty("firstName"),contact.getFirstName());
      mods.addItem(userMappings.getProperty("lastName"),contact.getLastName());
      String fullNameMapping=userMappings.getProperty("fullName");
      if (Validator.isNotNull(fullNameMapping)) {
        mods.addItem(fullNameMapping,contact.getFullName());
      }
      String jobTitleMapping=userMappings.getProperty("jobTitle");
      if (Validator.isNotNull(jobTitleMapping)) {
        mods.addItem(jobTitleMapping,contact.getJobTitle());
      }
      ModificationItem[] modItems=mods.getItems();
      ctx.modifyAttributes(name,modItems);
    }
  }
 catch (  Exception e) {
    throw e;
  }
 finally {
    if (ctx != null) {
      ctx.close();
    }
  }
}

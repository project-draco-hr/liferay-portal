{
  long companyId=user.getCompanyId();
  if (!isAuthEnabled(companyId) || !isExportEnabled(companyId)) {
    return;
  }
  LdapContext ctx=getContext(companyId);
  if (ctx == null) {
    return;
  }
  Properties userMappings=getUserMappings(companyId);
  String name=userMappings.getProperty(PortalLDAPUtil.USER_MAPPING_SCREEN_NAME) + StringPool.EQUAL + user.getScreenName()+ StringPool.COMMA+ getUsersDN(companyId);
  if (!hasUser(companyId,user.getScreenName())) {
    LDAPUser ldapUser=(LDAPUser)Class.forName(PropsUtil.get(PropsUtil.LDAP_USER_IMPL)).newInstance();
    ldapUser.setUser(user);
    ctx.bind(name,ldapUser);
  }
 else {
    Modifications mods=Modifications.getInstance();
    if (user.isPasswordModified() && Validator.isNotNull(user.getPasswordUnencrypted())) {
      mods.addItem(userMappings.getProperty(PortalLDAPUtil.USER_MAPPING_PASSWORD),user.getPasswordUnencrypted());
    }
    mods.addItem(userMappings.getProperty(PortalLDAPUtil.USER_MAPPING_EMAIL_ADDRESS),user.getEmailAddress());
    ModificationItem[] modItems=mods.getItems();
    ctx.modifyAttributes(name,modItems);
  }
}

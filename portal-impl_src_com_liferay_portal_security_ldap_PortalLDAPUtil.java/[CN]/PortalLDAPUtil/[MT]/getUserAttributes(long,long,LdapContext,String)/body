{
  Properties userMappings=LDAPSettingsUtil.getUserMappings(ldapServerId,companyId);
  Properties userExpandoMappings=LDAPSettingsUtil.getUserExpandoMappings(ldapServerId,companyId);
  PropertiesUtil.merge(userMappings,userExpandoMappings);
  Properties contactMappings=LDAPSettingsUtil.getContactMappings(ldapServerId,companyId);
  Properties contactExpandoMappings=LDAPSettingsUtil.getContactExpandoMappings(ldapServerId,companyId);
  PropertiesUtil.merge(contactMappings,contactExpandoMappings);
  PropertiesUtil.merge(userMappings,contactMappings);
  String[] mappedUserAttributeIds=ArrayUtil.toStringArray(userMappings.values().toArray(new Object[userMappings.size()]));
  if (_log.isDebugEnabled()) {
    Attributes attributes=_getAttributes(ldapContext,fullDistinguishedName,mappedUserAttributeIds);
    for (    String attributeId : mappedUserAttributeIds) {
      Attribute attribute=attributes.get(attributeId);
      if (Validator.isNull(attribute)) {
        continue;
      }
      _log.debug("LDAP user attribute " + attribute.toString());
    }
    return attributes;
  }
  return _getAttributes(ldapContext,fullDistinguishedName,mappedUserAttributeIds);
}

{
  AttributesTransformer attributesTransformer=AttributesTransformerFactory.getInstance();
  attributes=attributesTransformer.transformGroup(attributes);
  Properties groupMappings=getGroupMappings(companyId);
  LogUtil.debug(_log,groupMappings);
  String groupName=LDAPUtil.getAttributeValue(attributes,groupMappings.getProperty("groupName")).toLowerCase();
  String description=LDAPUtil.getAttributeValue(attributes,groupMappings.getProperty("description"));
  UserGroup userGroup=null;
  try {
    userGroup=UserGroupLocalServiceUtil.getUserGroup(companyId,groupName);
    UserGroupLocalServiceUtil.updateUserGroup(companyId,userGroup.getUserGroupId(),groupName,description);
  }
 catch (  NoSuchUserGroupException nsuge) {
    if (_log.isDebugEnabled()) {
      _log.debug("Adding user group to portal " + groupName);
    }
    long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
    try {
      userGroup=UserGroupLocalServiceUtil.addUserGroup(defaultUserId,companyId,groupName,description);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Could not create user group " + groupName);
      }
      if (_log.isDebugEnabled()) {
        _log.debug(e,e);
      }
    }
  }
  if (importGroupMembership && (userGroup != null)) {
    Attribute attribute=attributes.get(groupMappings.getProperty("user"));
    if (attribute != null) {
      String baseDN=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_DN);
      StringBuilder sb=new StringBuilder();
      sb.append("(&");
      sb.append(PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_IMPORT_GROUP_SEARCH_FILTER));
      sb.append("(");
      sb.append(groupMappings.getProperty("groupName"));
      sb.append("=");
      sb.append(LDAPUtil.getAttributeValue(attributes,groupMappings.getProperty("groupName")));
      sb.append("))");
      attribute=getMultiValuedAttribute(companyId,ctx,baseDN,sb.toString(),attribute);
      _importUsersAndMembershipFromLDAPGroup(companyId,ctx,userGroup.getUserGroupId(),attribute);
    }
  }
  return userGroup;
}

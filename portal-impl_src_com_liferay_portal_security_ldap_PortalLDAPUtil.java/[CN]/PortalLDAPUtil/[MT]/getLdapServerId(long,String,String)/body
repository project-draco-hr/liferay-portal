{
  try {
    long preferredLDAPServerId=LDAPSettingsUtil.getPreferredLDAPServerId(companyId,screenName);
    if ((preferredLDAPServerId >= 0) && hasUser(preferredLDAPServerId,companyId,screenName,emailAddress)) {
      return preferredLDAPServerId;
    }
  }
 catch (  NoSuchUserException nsue) {
  }
  long[] ldapServerIds=StringUtil.split(PrefsPropsUtil.getString(companyId,"ldap.server.ids"),0L);
  for (  long ldapServerId : ldapServerIds) {
    if (hasUser(ldapServerId,companyId,screenName,emailAddress)) {
      return ldapServerId;
    }
  }
  boolean hasProperties=false;
  for (int ldapServerId=0; ; ldapServerId++) {
    String postfix=LDAPSettingsUtil.getPropertyPostfix(ldapServerId);
    String providerUrl=PrefsPropsUtil.getString(companyId,PropsKeys.LDAP_BASE_PROVIDER_URL + postfix);
    if (Validator.isNull(providerUrl)) {
      break;
    }
    hasProperties=true;
    if (hasUser(ldapServerId,companyId,screenName,emailAddress)) {
      return ldapServerId;
    }
  }
  if (hasProperties || (ldapServerIds.length <= 0)) {
    return 0;
  }
  return ldapServerIds[0];
}

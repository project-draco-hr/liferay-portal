{
  Properties groupMappings=getGroupMappings(companyId);
  UserGroupLocalServiceUtil.clearUserUserGroups(userId);
  long defaultUserId=UserLocalServiceUtil.getDefaultUserId(companyId);
  for (int i=0; i < attr.size(); i++) {
    String groupDN=(String)attr.get(i);
    Attributes groupAttrs=null;
    try {
      groupAttrs=ctx.getAttributes(groupDN);
    }
 catch (    NameNotFoundException nnfe) {
      if (_log.isErrorEnabled()) {
        _log.error("Trying to import non-existant LDAP group that was " + "referenced from LDAP user with groupDN " + groupDN);
        _log.error(nnfe,nnfe);
      }
      continue;
    }
    UserGroup userGroup=null;
    String groupName=LDAPUtil.getAttributeValue(groupAttrs,groupMappings.getProperty("groupName"));
    String description=LDAPUtil.getAttributeValue(groupAttrs,groupMappings.getProperty("description"));
    try {
      userGroup=UserGroupLocalServiceUtil.getUserGroup(companyId,groupName);
    }
 catch (    NoSuchUserGroupException nsuge) {
      try {
        if (_log.isDebugEnabled()) {
          _log.debug("Adding user group" + groupName + " at "+ groupDN);
        }
        userGroup=UserGroupLocalServiceUtil.addUserGroup(defaultUserId,companyId,groupName,description);
      }
 catch (      Exception e) {
        if (_log.isWarnEnabled()) {
          _log.warn("Could not create user group " + groupName);
        }
        if (_log.isDebugEnabled()) {
          _log.debug(e);
        }
      }
    }
    if (userGroup != null) {
      if (_log.isDebugEnabled()) {
        _log.debug("Adding " + userId + " to group "+ groupName);
      }
      UserLocalServiceUtil.addUserGroupUsers(userGroup.getUserGroupId(),new long[]{userId});
    }
  }
}

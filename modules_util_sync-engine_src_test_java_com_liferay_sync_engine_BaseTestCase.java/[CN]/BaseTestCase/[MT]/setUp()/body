{
  PropsUtil.set(PropsKeys.SYNC_DATABASE_NAME,"sync-test");
  PropsUtil.set(PropsKeys.SYNC_LOGGER_CONFIGURATION_FILE,"sync-test-logback.xml");
  LoggerUtil.init();
  UpgradeUtil.upgrade();
  filePathName=FileUtil.getFilePathName(System.getProperty("user.home"),"liferay-sync-test");
  syncAccount=SyncAccountService.addSyncAccount(filePathName,"test@liferay.com",1,"test",5,null,null,false,"http://localhost:8080");
  syncAccount.setActive(true);
  syncAccount.setState(SyncAccount.STATE_CONNECTED);
  SyncAccountService.update(syncAccount);
  WatchEventListener watchEventListener=new SyncSiteWatchEventListener(syncAccount.getSyncAccountId());
  Watcher watcher=null;
  if (OSDetector.isApple()) {
    watcher=new BarbaryWatcher(Paths.get(syncAccount.getFilePathName()),watchEventListener);
  }
 else {
    watcher=new JPathWatcher(Paths.get(syncAccount.getFilePathName()),watchEventListener);
  }
  WatcherRegistry.register(syncAccount.getSyncAccountId(),watcher);
  PowerMockito.stub(PowerMockito.method(SyncEngine.class,"getExecutorService")).toReturn(Executors.newCachedThreadPool());
  PowerMockito.stub(PowerMockito.method(SyncEngine.class,"isRunning")).toReturn(true);
}

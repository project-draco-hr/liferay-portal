{
  if (interval < 0) {
    if (_log.isWarnEnabled()) {
      _log.warn("Not scheduling " + jobName + " because interval is "+ "less than 0");
    }
    return null;
  }
  ScheduleBuilder<?> scheduleBuilder=null;
  if (interval > 0) {
    if (timeUnit == TimeUnit.MILLISECOND) {
      SimpleScheduleBuilder simpleScheduleBuilder=SimpleScheduleBuilder.simpleSchedule();
      simpleScheduleBuilder.withIntervalInMilliseconds(interval);
      simpleScheduleBuilder.withRepeatCount(SimpleTrigger.REPEAT_INDEFINITELY);
      scheduleBuilder=simpleScheduleBuilder;
    }
 else {
      CalendarIntervalScheduleBuilder calendarIntervalScheduleBuilder=CalendarIntervalScheduleBuilder.calendarIntervalSchedule();
      calendarIntervalScheduleBuilder.withInterval(interval,IntervalUnit.valueOf(timeUnit.name()));
      scheduleBuilder=calendarIntervalScheduleBuilder;
    }
  }
  return createTrigger(jobName,groupName,startDate,endDate,scheduleBuilder);
}

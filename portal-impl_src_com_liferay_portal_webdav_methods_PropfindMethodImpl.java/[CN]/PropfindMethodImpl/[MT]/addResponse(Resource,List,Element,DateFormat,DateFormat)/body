{
  Element response=multistatus.addElement("D:response");
  DocUtil.add(response,"D:href",resource.getHREF());
  Element propstat=response.addElement("D:propstat");
  Element prop=propstat.addElement("D:prop");
  DocUtil.add(prop,"D:displayname",resource.getDisplayName());
  DocUtil.add(prop,"D:creationdate",createDateFormat.format(resource.getCreateDate()));
  DocUtil.add(prop,"D:getlastmodified",modifiedDateFormat.format(resource.getModifiedDate()));
  if (resource.isCollection()) {
    DocUtil.add(prop,"D:getcontenttype","httpd/unix-directory");
  }
 else {
    DocUtil.add(prop,"D:getcontentlength",String.valueOf(resource.getSize()));
  }
  Element resourcetype=prop.addElement("D:resourcetype");
  if (resource.isCollection()) {
    resourcetype.addElement("D:collection");
  }
  if (props.size() == 0) {
    DocUtil.add(prop,"D:getetag","\"19504-0-a4075c30\"");
    Element supportedlock=prop.addElement("D:supportedlock");
    Element lockentry=supportedlock.addElement("D:lockentry");
    Element lockscope=lockentry.addElement("D:lockscope");
    lockscope.addElement("D:exclusive");
    Element locktype=lockentry.addElement("D:locktype");
    locktype.addElement("D:write");
    lockentry=supportedlock.addElement("D:lockentry");
    lockscope=lockentry.addElement("D:lockscope");
    lockscope.addElement("D:shared");
    locktype=lockentry.addElement("D:locktype");
    locktype.addElement("D:write");
    prop.addElement("D:lockdiscovery");
  }
  DocUtil.add(propstat,"D:status","HTTP/1.1 200 OK");
  if (props.size() > 0) {
    propstat=response.addElement("D:propstat");
    prop=propstat.addElement("D:prop");
    for (int i=0; i < props.size(); i++) {
      String propName=(String)props.get(i);
      prop.addElement("D:" + propName);
    }
    DocUtil.add(propstat,"D:status","HTTP/1.1 404 Not Found");
  }
}

{
  final ExportActionableDynamicQuery exportActionableDynamicQuery=new ExportActionableDynamicQuery(){
    @Override public long performCount() throws PortalException {
      ManifestSummary manifestSummary=portletDataContext.getManifestSummary();
      StagedModelType stagedModelType=getStagedModelType();
      long modelAdditionCount=super.performCount();
      manifestSummary.addModelAdditionCount(stagedModelType.toString(),modelAdditionCount);
      long modelDeletionCount=ExportImportHelperUtil.getModelDeletionCount(portletDataContext,stagedModelType);
      manifestSummary.addModelDeletionCount(stagedModelType.toString(),modelDeletionCount);
      return modelAdditionCount;
    }
  }
;
  initActionableDynamicQuery(exportActionableDynamicQuery);
  exportActionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      Criterion modifiedDateCriterion=portletDataContext.getDateRangeCriteria(dynamicQuery,"modifiedDate");
      Criterion statusDateCriterion=portletDataContext.getDateRangeCriteria(dynamicQuery,"statusDate");
      if ((modifiedDateCriterion != null) && (statusDateCriterion != null)) {
        Disjunction disjunction=RestrictionsFactoryUtil.disjunction();
        disjunction.add(modifiedDateCriterion);
        disjunction.add(statusDateCriterion);
        dynamicQuery.add(disjunction);
      }
      StagedModelDataHandler<?> stagedModelDataHandler=StagedModelDataHandlerRegistryUtil.getStagedModelDataHandler(JournalFolder.class.getName());
      Property workflowStatusProperty=PropertyFactoryUtil.forName("status");
      dynamicQuery.add(workflowStatusProperty.in(stagedModelDataHandler.getExportableStatuses()));
    }
  }
);
  exportActionableDynamicQuery.setCompanyId(portletDataContext.getCompanyId());
  exportActionableDynamicQuery.setGroupId(portletDataContext.getScopeGroupId());
  exportActionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod(){
    @Override public void performAction(    Object object) throws PortalException {
      JournalFolder stagedModel=(JournalFolder)object;
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedModel);
    }
  }
);
  exportActionableDynamicQuery.setStagedModelType(new StagedModelType(PortalUtil.getClassNameId(JournalFolder.class.getName())));
  return exportActionableDynamicQuery;
}

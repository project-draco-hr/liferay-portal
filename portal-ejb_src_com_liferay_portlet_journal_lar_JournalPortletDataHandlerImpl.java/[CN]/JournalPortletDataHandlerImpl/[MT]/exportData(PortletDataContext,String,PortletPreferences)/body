{
  try {
    SAXReader reader=SAXReaderFactory.getInstance();
    XStream xStream=new XStream();
    Document doc=DocumentHelper.createDocument();
    Element root=doc.addElement("journal-data");
    root.addAttribute("group-id",String.valueOf(context.getGroupId()));
    List obj=JournalArticleUtil.findByGroupId(context.getGroupId());
    Iterator itr=obj.iterator();
    while (itr.hasNext()) {
      JournalArticle article=(JournalArticle)itr.next();
      if (context.checkPrimaryKey(JournalArticle.class,article.getPrimaryKey())) {
        itr.remove();
      }
    }
    String xml=xStream.toXML(obj);
    Element el=root.addElement("articles");
    Document tempDoc=reader.read(new StringReader(xml));
    el.content().add(tempDoc.getRootElement().createCopy());
    obj=JournalStructureUtil.findByGroupId(context.getGroupId());
    itr=obj.iterator();
    while (itr.hasNext()) {
      JournalStructure structure=(JournalStructure)itr.next();
      if (context.checkPrimaryKey(JournalStructure.class,structure.getPrimaryKey())) {
        itr.remove();
      }
    }
    xml=xStream.toXML(obj);
    tempDoc=reader.read(new StringReader(xml));
    el=root.addElement("structures");
    el.content().add(tempDoc.getRootElement().createCopy());
    obj=JournalTemplateUtil.findByGroupId(context.getGroupId());
    itr=obj.iterator();
    while (itr.hasNext()) {
      JournalTemplate template=(JournalTemplate)itr.next();
      if (context.checkPrimaryKey(JournalTemplate.class,template.getPrimaryKey())) {
        itr.remove();
      }
    }
    xml=xStream.toXML(obj);
    el=root.addElement("templates");
    tempDoc=reader.read(new StringReader(xml));
    el.content().add(tempDoc.getRootElement().createCopy());
    return XMLFormatter.toString(doc);
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

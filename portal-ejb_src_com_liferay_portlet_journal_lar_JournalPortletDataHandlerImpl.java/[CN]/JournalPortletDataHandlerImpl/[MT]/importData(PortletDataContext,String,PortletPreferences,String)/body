{
  try {
    JournalCreationStrategy creationStrategy=JournalCreationStrategyFactory.getInstance();
    SAXReader reader=SAXReaderFactory.getInstance();
    XStream xStream=new XStream();
    Document doc=reader.read(new StringReader(data));
    Element root=doc.getRootElement();
    Element el=root.element("articles").element("list");
    Document tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List articles=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    Iterator itr=articles.iterator();
    while (itr.hasNext()) {
      JournalArticle article=(JournalArticle)itr.next();
      article.setGroupId(context.getGroupId());
      if (JournalArticleUtil.fetchByPrimaryKey(article.getPrimaryKey()) == null) {
        article.setNew(true);
        String authorId=creationStrategy.getAuthorUserId(context.getCompanyId(),context.getGroupId(),article);
        if (authorId != null) {
          article.setUserId(authorId);
          article.setUserName(creationStrategy.getAuthorUserName(context.getCompanyId(),context.getGroupId(),article));
        }
        String approvedById=creationStrategy.getApprovalUserId(context.getCompanyId(),context.getGroupId(),article);
        if (approvedById != null) {
          article.setApprovedByUserId(approvedById);
          article.setApprovedByUserName(creationStrategy.getApprovalUserName(context.getCompanyId(),context.getGroupId(),article));
          article.setApproved(true);
        }
 else {
          article.setApprovedByUserId(null);
          article.setApprovedByUserName(null);
          article.setApproved(false);
        }
        article=JournalArticleUtil.update(article);
        boolean addCommunityPermissions=creationStrategy.addCommunityPermissions(context.getCompanyId(),context.getGroupId(),article);
        boolean addGuestPermissions=creationStrategy.addGuestPermissions(context.getCompanyId(),context.getGroupId(),article);
        JournalArticleLocalServiceUtil.addArticleResources(article,addCommunityPermissions,addGuestPermissions);
      }
 else {
        JournalArticleUtil.update(article,true);
      }
    }
    el=root.element("structures").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List structures=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=structures.iterator();
    while (itr.hasNext()) {
      JournalStructure structure=(JournalStructure)itr.next();
      structure.setGroupId(context.getGroupId());
      if (JournalStructureUtil.fetchByPrimaryKey(structure.getPrimaryKey()) == null) {
        structure.setNew(true);
        String authorId=creationStrategy.getAuthorUserId(context.getCompanyId(),context.getGroupId(),structure);
        if (authorId != null) {
          structure.setUserId(authorId);
          structure.setUserName(creationStrategy.getAuthorUserName(context.getCompanyId(),context.getGroupId(),structure));
        }
        structure=JournalStructureUtil.update(structure);
        boolean addCommunityPermissions=creationStrategy.addCommunityPermissions(context.getCompanyId(),context.getGroupId(),structure);
        boolean addGuestPermissions=creationStrategy.addGuestPermissions(context.getCompanyId(),context.getGroupId(),structure);
        JournalStructureLocalServiceUtil.addStructureResources(structure,addCommunityPermissions,addGuestPermissions);
      }
 else {
        JournalStructureUtil.update(structure,true);
      }
    }
    el=root.element("templates").element("list");
    tempDoc=DocumentHelper.createDocument();
    tempDoc.content().add(el.createCopy());
    List templates=(List)xStream.fromXML(XMLFormatter.toString(tempDoc));
    itr=templates.iterator();
    while (itr.hasNext()) {
      JournalTemplate template=(JournalTemplate)itr.next();
      template.setGroupId(context.getGroupId());
      if (JournalTemplateUtil.fetchByPrimaryKey(template.getPrimaryKey()) == null) {
        template.setNew(true);
        String authorId=creationStrategy.getAuthorUserId(context.getCompanyId(),context.getGroupId(),template);
        if (authorId != null) {
          template.setUserId(authorId);
          template.setUserName(creationStrategy.getAuthorUserName(context.getCompanyId(),context.getGroupId(),template));
        }
        template=JournalTemplateUtil.update(template);
        boolean addCommunityPermissions=creationStrategy.addCommunityPermissions(context.getCompanyId(),context.getGroupId(),template);
        boolean addGuestPermissions=creationStrategy.addGuestPermissions(context.getCompanyId(),context.getGroupId(),template);
        JournalTemplateLocalServiceUtil.addTemplateResources(template,addCommunityPermissions,addGuestPermissions);
      }
 else {
        JournalTemplateUtil.update(template,true);
      }
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

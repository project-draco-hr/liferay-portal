{
  kaleoTaskInstanceToken=toUnwrappedModel(kaleoTaskInstanceToken);
  boolean isNew=kaleoTaskInstanceToken.isNew();
  KaleoTaskInstanceTokenModelImpl kaleoTaskInstanceTokenModelImpl=(KaleoTaskInstanceTokenModelImpl)kaleoTaskInstanceToken;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoTaskInstanceToken.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoTaskInstanceToken.setCreateDate(now);
    }
 else {
      kaleoTaskInstanceToken.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoTaskInstanceTokenModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoTaskInstanceToken.setModifiedDate(now);
    }
 else {
      kaleoTaskInstanceToken.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoTaskInstanceToken.isNew()) {
      session.save(kaleoTaskInstanceToken);
      kaleoTaskInstanceToken.setNew(false);
    }
 else {
      kaleoTaskInstanceToken=(KaleoTaskInstanceToken)session.merge(kaleoTaskInstanceToken);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoTaskInstanceTokenModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoTaskInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskInstanceTokenModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{kaleoTaskInstanceTokenModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoTaskInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskInstanceTokenModelImpl.getOriginalKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
      args=new Object[]{kaleoTaskInstanceTokenModelImpl.getKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
    }
    if ((kaleoTaskInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskInstanceTokenModelImpl.getOriginalKaleoInstanceId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
      args=new Object[]{kaleoTaskInstanceTokenModelImpl.getKaleoInstanceId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEOINSTANCEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEOINSTANCEID,args);
    }
    if ((kaleoTaskInstanceTokenModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CN_CPK.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskInstanceTokenModelImpl.getOriginalClassName(),kaleoTaskInstanceTokenModelImpl.getOriginalClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CN_CPK,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CN_CPK,args);
      args=new Object[]{kaleoTaskInstanceTokenModelImpl.getClassName(),kaleoTaskInstanceTokenModelImpl.getClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_CN_CPK,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CN_CPK,args);
    }
  }
  entityCache.putResult(KaleoTaskInstanceTokenModelImpl.ENTITY_CACHE_ENABLED,KaleoTaskInstanceTokenImpl.class,kaleoTaskInstanceToken.getPrimaryKey(),kaleoTaskInstanceToken,false);
  clearUniqueFindersCache(kaleoTaskInstanceTokenModelImpl);
  cacheUniqueFindersCache(kaleoTaskInstanceTokenModelImpl,isNew);
  kaleoTaskInstanceToken.resetOriginalValues();
  return kaleoTaskInstanceToken;
}

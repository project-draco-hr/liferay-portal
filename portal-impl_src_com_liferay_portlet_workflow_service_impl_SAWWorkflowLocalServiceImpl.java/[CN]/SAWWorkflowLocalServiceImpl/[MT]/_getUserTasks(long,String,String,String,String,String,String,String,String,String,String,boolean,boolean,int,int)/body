{
  List<TaskVO> taskVOList=null;
  if (Validator.isNull(taskName) && Validator.isNull(definitionName) && Validator.isNull(assignedTo)&& Validator.isNull(createDateGT)&& Validator.isNull(createDateLT)&& Validator.isNull(startDateGT)&& Validator.isNull(startDateLT)&& Validator.isNull(endDateGT)&& Validator.isNull(endDateLT)) {
    taskVOList=_getUserTasks(userId,instanceId);
  }
 else {
    Workflow workflow=null;
    try {
      workflow=_getWorkflowImpl();
    }
 catch (    WorkflowException e) {
      throw new WorkflowComponentException(e);
    }
    Class[] paramTypeArray=new Class[]{String.class,String.class,String.class,String.class,String.class,String.class,String.class,String.class,String.class,boolean.class,boolean.class,int.class,int.class};
    Object[] paramValueArray=new Object[]{taskName,definitionName,assignedTo,createDateGT,createDateLT,startDateGT,startDateLT,endDateGT,endDateLT,hideEndedTasks,andOperator,begin,end};
    Map resultsMap=_invokeMethod(com.sun.lifray.saw.ext.SAWJbpmGraphSession.class,"findTaskInstancesBySearchTerms",paramTypeArray,paramValueArray,workflow);
    taskVOList=(ArrayList<TaskVO>)resultsMap.get("invokeMethodResult");
  }
  return taskVOList;
}

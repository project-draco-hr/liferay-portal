{
  List<TaskVO> userTasks=_getUserTasks(instanceId,null,null,null,null,null,null,null,null,null,userId,false,false,0,0);
  List<TaskVO> currentTasks=new ArrayList<TaskVO>();
  FilterTaskVO filter=new FilterTaskVO();
  TokenVO token=new TokenVO();
  token.setId(String.valueOf(tokenId));
  filter.setToken(token);
  Workflow workflow=null;
  OutputVO outputVO=null;
  try {
    workflow=_getWorkflowImpl();
    outputVO=workflow.getTasks(filter);
  }
 catch (  WorkflowException e) {
    throw new WorkflowComponentException(e);
  }
  List<TaskVO> tokenTasks=outputVO.getTaskVOList();
  if (tokenTasks.size() == 0) {
    currentTasks=null;
  }
 else {
    Iterator<TaskVO> itr=tokenTasks.iterator();
    Set<Long> tokenTaskIds=new HashSet<Long>();
    while (itr.hasNext()) {
      TaskVO task=itr.next();
      tokenTaskIds.add(new Long(task.getId()));
    }
    itr=userTasks.iterator();
    while (itr.hasNext()) {
      TaskVO task=itr.next();
      if (tokenTaskIds.contains(new Long(task.getId()))) {
        currentTasks.add(task);
      }
    }
  }
  return currentTasks;
}

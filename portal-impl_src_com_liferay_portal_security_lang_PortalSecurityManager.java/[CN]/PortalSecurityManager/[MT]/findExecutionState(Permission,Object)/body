{
  if (((permission instanceof RuntimePermission) && permission.getName().equals("getClassLoader")) || ((permission instanceof FilePermission) && permission.getActions().equals("read"))) {
    return ExecutionState.PASS_THROUGH;
  }
  return AccessController.doPrivileged(new PrivilegedAction<ExecutionState>(){
    public ExecutionState run(){
      try {
        _inProcessCheck.set(Boolean.TRUE);
        Class<?>[] classContext=getClassContext();
        ClassLoader foreignClassLoader=null;
        for (        Class<?> clazz : classContext) {
          ClassLoader classLoader=clazz.getClassLoader();
          if ((classLoader != null) && (classLoader != _portalClassLoader) && (classLoader != _commonClassLoader)&& (classLoader != _systemClassLoader)) {
            foreignClassLoader=classLoader;
            break;
          }
        }
        if (foreignClassLoader == null) {
          return ExecutionState.PORTAL;
        }
        return ExecutionState.FOREIGN;
      }
  finally {
        _inProcessCheck.set(Boolean.FALSE);
      }
    }
  }
,_portalContext);
}

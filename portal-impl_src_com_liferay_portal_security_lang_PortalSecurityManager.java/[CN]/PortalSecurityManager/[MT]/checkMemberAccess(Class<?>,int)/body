{
  if (clazz == null) {
    throw new NullPointerException();
  }
  if (which == Member.PUBLIC) {
    return;
  }
  ClassLoader classClassLoader=PACLClassLoaderUtil.getClassLoader(clazz);
  if (classClassLoader == null) {
    return;
  }
  Class<?> callerClass=Reflection.getCallerClass(4);
  ClassLoader callerClassLoader=PACLClassLoaderUtil.getClassLoader(callerClass);
  if (callerClassLoader == null) {
    for (int i=5; ; i++) {
      callerClass=Reflection.getCallerClass(i);
      if (callerClass == null) {
        break;
      }
      String className=callerClass.getName();
      if (!className.startsWith("java.lang") && !className.startsWith("java.security") && !className.startsWith("sun.reflect")) {
        callerClassLoader=PACLClassLoaderUtil.getClassLoader(callerClass);
        break;
      }
    }
  }
  if (classClassLoader == callerClassLoader) {
    return;
  }
  Permission permission=new CheckMemberAccessPermission(PACLConstants.RUNTIME_PERMISSION_ACCESS_DECLARED_MEMBERS,callerClass,callerClassLoader,clazz,classClassLoader);
  checkPermission(permission);
}

{
  boolean enabled=PortalSecurityManagerThreadLocal.isEnabled();
  if (!enabled) {
    if (_parentSecurityManager != null) {
      _parentSecurityManager.checkPermission(permission,context);
    }
    return;
  }
  PACLPolicy paclPolicy=null;
  try {
    PortalSecurityManagerThreadLocal.setEnabled(false);
    paclPolicy=getPACLPolicy(_log.isDebugEnabled());
  }
  finally {
    PortalSecurityManagerThreadLocal.setEnabled(enabled);
  }
  if ((paclPolicy != null) && paclPolicy.isActive()) {
    if (_parentSecurityManager != null) {
      _parentSecurityManager.checkPermission(permission,context);
    }
    return;
  }
  if (permission instanceof AllPermission) {
  }
 else   if (permission instanceof AuthPermission) {
    checkAuthPermission(paclPolicy,(AuthPermission)permission,context);
  }
 else   if (permission instanceof AWTPermission) {
  }
 else   if (permission instanceof DelegationPermission) {
  }
 else   if (permission instanceof FilePermission) {
    checkFilePermission(paclPolicy,(FilePermission)permission,context);
  }
 else   if (permission instanceof LoggingPermission) {
    checkLoggingPermission(paclPolicy,(LoggingPermission)permission,context);
  }
 else   if (permission instanceof ManagementPermission) {
    checkManagementPermission(paclPolicy,(ManagementPermission)permission,context);
  }
 else   if (permission instanceof MBeanPermission) {
    checkMBeanPermission(paclPolicy,(MBeanPermission)permission,context);
  }
 else   if (permission instanceof MBeanServerPermission) {
    checkMBeanServerPermission(paclPolicy,(MBeanServerPermission)permission,context);
  }
 else   if (permission instanceof MBeanTrustPermission) {
    checkMBeanTrustPermission(paclPolicy,(MBeanTrustPermission)permission,context);
  }
 else   if (permission instanceof NetPermission) {
    checkNetPermission(paclPolicy,(NetPermission)permission,context);
  }
 else   if (permission instanceof PrivateCredentialPermission) {
  }
 else   if (permission instanceof PropertyPermission) {
    checkPropertyPermission(paclPolicy,(PropertyPermission)permission,context);
  }
 else   if (permission instanceof ReflectPermission) {
    checkReflectPermission(paclPolicy,(ReflectPermission)permission,context);
  }
 else   if (permission instanceof RuntimePermission) {
    checkRuntimePermission(paclPolicy,(RuntimePermission)permission,context);
  }
 else   if (permission instanceof SecurityPermission) {
    checkSecurityPermission(paclPolicy,(SecurityPermission)permission,context);
  }
 else   if (permission instanceof SerializablePermission) {
  }
 else   if (permission instanceof ServicePermission) {
  }
 else   if (permission instanceof SocketPermission) {
    checkSocketPermission(paclPolicy,(SocketPermission)permission,context);
  }
 else   if (permission instanceof SQLPermission) {
  }
 else   if (permission instanceof SSLPermission) {
  }
 else   if (permission instanceof SubjectDelegationPermission) {
  }
 else   if (permission instanceof UnresolvedPermission) {
    checkUnresolvedPermission(paclPolicy,(UnresolvedPermission)permission,context);
  }
  if (_parentSecurityManager != null) {
    _parentSecurityManager.checkPermission(permission,context);
  }
}

{
  try {
    HttpSession ses=req.getSession();
    EventsProcessor.process(PropsUtil.LOGOUT_EVENTS_PRE,PropsValues.LOGOUT_EVENTS_PRE,req,res);
    String domain=CookieKeys.getDomain(req);
    Cookie companyIdCookie=new Cookie(CookieKeys.COMPANY_ID,StringPool.BLANK);
    if (Validator.isNotNull(domain)) {
      companyIdCookie.setDomain(domain);
    }
    companyIdCookie.setMaxAge(0);
    companyIdCookie.setPath(StringPool.SLASH);
    Cookie idCookie=new Cookie(CookieKeys.ID,StringPool.BLANK);
    if (Validator.isNotNull(domain)) {
      idCookie.setDomain(domain);
    }
    idCookie.setMaxAge(0);
    idCookie.setPath(StringPool.SLASH);
    Cookie passwordCookie=new Cookie(CookieKeys.PASSWORD,StringPool.BLANK);
    if (Validator.isNotNull(domain)) {
      passwordCookie.setDomain(domain);
    }
    passwordCookie.setMaxAge(0);
    passwordCookie.setPath(StringPool.SLASH);
    CookieKeys.addCookie(res,companyIdCookie);
    CookieKeys.addCookie(res,idCookie);
    CookieKeys.addCookie(res,passwordCookie);
    try {
      ses.invalidate();
    }
 catch (    Exception e) {
    }
    EventsProcessor.process(PropsUtil.LOGOUT_EVENTS_POST,PropsValues.LOGOUT_EVENTS_POST,req,res);
    return mapping.findForward(ActionConstants.COMMON_REFERER);
  }
 catch (  Exception e) {
    PortalUtil.sendError(e,req,res);
    return null;
  }
}

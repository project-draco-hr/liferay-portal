{
  portletDataContext.addPermissions(MBPermission.RESOURCE_NAME,portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  if (portletDataContext.getBooleanParameter(NAMESPACE,"messages")) {
    ActionableDynamicQuery categoryActionableDynamicQuery=new MBCategoryExportActionableDynamicQuery(portletDataContext);
    categoryActionableDynamicQuery.performActions();
    ActionableDynamicQuery messageActionableDynamicQuery=new MBMessageExportActionableDynamicQuery(portletDataContext);
    messageActionableDynamicQuery.performActions();
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"thread-flags")) {
    ActionableDynamicQuery threadFlagActionableDynamicQuery=new MBThreadFlagExportActionableDynamicQuery(portletDataContext);
    threadFlagActionableDynamicQuery.performActions();
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"user-bans")) {
    ActionableDynamicQuery banActionableDynamicQuery=new MBBanExportActionableDynamicQuery(portletDataContext);
    banActionableDynamicQuery.performActions();
  }
  return getExportDataRootElementString(rootElement);
}

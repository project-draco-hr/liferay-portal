{
  portletDataContext.addPermissions(_RESOURCE_NAME,portletDataContext.getScopeGroupId());
  Element rootElement=addExportDataRootElement(portletDataContext);
  rootElement.addAttribute("group-id",String.valueOf(portletDataContext.getScopeGroupId()));
  ActionableDynamicQuery categoriesActionableDynamicQuery=new MBCategoryExportActionableDynamicQuery(portletDataContext);
  categoriesActionableDynamicQuery.performActions();
  ActionableDynamicQuery messagesActionableDynamicQuery=new MBMessageExportActionableDynamicQuery(portletDataContext);
  messagesActionableDynamicQuery.performActions();
  if (portletDataContext.getBooleanParameter(NAMESPACE,"thread-flags")) {
    ActionableDynamicQuery threadFlagsActionableDynamicQuery=new MBThreadFlagExportActionableDynamicQuery(portletDataContext);
    threadFlagsActionableDynamicQuery.performActions();
  }
  if (portletDataContext.getBooleanParameter(NAMESPACE,"user-bans")) {
    ActionableDynamicQuery userBansActionableDynamicQuery=new MBBanExportActionableDynamicQuery(portletDataContext);
    userBansActionableDynamicQuery.performActions();
  }
  return getExportDataRootElementString(rootElement);
}

{
  ServletRequest servletRequest=getRequest();
  Lock mergeLock=(Lock)servletRequest.getAttribute(WebKeys.PARALLEL_RENDERRING_MERGE_LOCK);
  if (mergeLock != null) {
    mergeLock.lock();
  }
  try {
    for (    Map.Entry<String,Object> entry : _attributes.entrySet()) {
      String name=entry.getKey();
      Object value=entry.getValue();
      if (name.startsWith("LIFERAY_SHARED_")) {
        if (value == _nullValue) {
          servletRequest.removeAttribute(name);
          if (_log.isInfoEnabled()) {
            _log.info("Remove shared attribute " + name);
          }
        }
 else {
          Object masterValue=servletRequest.getAttribute(name);
          if ((masterValue == null) || !(value instanceof Mergeable)) {
            servletRequest.setAttribute(name,value);
            if (_log.isInfoEnabled()) {
              _log.info("Set shared attribute " + name);
            }
          }
 else {
            Mergeable<Object> masterMergeable=(Mergeable<Object>)value;
            Mergeable<Object> slaveMergeable=(Mergeable<Object>)value;
            masterMergeable.merge(slaveMergeable);
            if (_log.isInfoEnabled()) {
              _log.info("Merge shared attribute " + name);
            }
          }
        }
      }
 else {
        if ((value != _nullValue) && _log.isDebugEnabled()) {
          _log.debug("Ignore setting restricted attribute " + name);
        }
      }
    }
  }
  finally {
    if (mergeLock != null) {
      mergeLock.unlock();
    }
  }
}

{
  System.setProperty(_THREAD_ENABLED_KEY,"true");
  Object testObject=new Object();
  MarkFinalizeAction markFinalizeAction=new MarkFinalizeAction();
  FinalizeManager.register(testObject,markFinalizeAction);
  Assert.assertFalse(markFinalizeAction.isMarked());
  testObject=null;
  long startTime=System.currentTimeMillis();
  while ((System.currentTimeMillis() - startTime) < 100) {
    System.gc();
    Thread.sleep(1);
    if (markFinalizeAction.isMarked()) {
      break;
    }
  }
  Assert.assertTrue(markFinalizeAction.isMarked());
  Thread finializeThread=null;
  for (  Thread thread : ThreadUtil.getThreads()) {
    if (thread.getName().equals("Finalize Thread")) {
      finializeThread=thread;
      break;
    }
  }
  Assert.assertNotNull(finializeThread);
  startTime=System.currentTimeMillis();
  while (finializeThread.getState() != Thread.State.WAITING) {
    if ((System.currentTimeMillis() - startTime) > 10000) {
      Assert.fail("Timeout on waiting finialize thread to enter waiting " + "state.");
    }
  }
  finializeThread.interrupt();
  while (finializeThread.getState() != Thread.State.WAITING) {
    if ((System.currentTimeMillis() - startTime) > 10000) {
      Assert.fail("Timeout on waiting finialize thread to enter waiting " + "state.");
    }
  }
}

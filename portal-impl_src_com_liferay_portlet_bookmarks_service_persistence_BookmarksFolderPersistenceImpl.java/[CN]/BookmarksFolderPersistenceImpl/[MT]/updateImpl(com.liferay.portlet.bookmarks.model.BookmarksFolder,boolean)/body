{
  boolean isNew=bookmarksFolder.isNew();
  if (Validator.isNull(bookmarksFolder.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    bookmarksFolder.setUuid(uuid);
  }
  Session session=null;
  try {
    session=openSession();
    BatchSessionUtil.update(session,bookmarksFolder,merge);
    bookmarksFolder.setNew(false);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST);
  BookmarksFolderModelImpl bookmarksFolderModelImpl=(BookmarksFolderModelImpl)bookmarksFolder;
  if (!isNew && (!bookmarksFolder.getUuid().equals(bookmarksFolderModelImpl.getOriginalUuid()) || (bookmarksFolder.getGroupId() != bookmarksFolderModelImpl.getOriginalGroupId()))) {
    FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{bookmarksFolderModelImpl.getOriginalUuid(),new Long(bookmarksFolderModelImpl.getOriginalGroupId())});
  }
  if (isNew || (!bookmarksFolder.getUuid().equals(bookmarksFolderModelImpl.getOriginalUuid()) || (bookmarksFolder.getGroupId() != bookmarksFolderModelImpl.getOriginalGroupId()))) {
    FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_UUID_G,new Object[]{bookmarksFolder.getUuid(),new Long(bookmarksFolder.getGroupId())},bookmarksFolder);
  }
  EntityCacheUtil.putResult(BookmarksFolderModelImpl.ENTITY_CACHE_ENABLED,BookmarksFolder.class,bookmarksFolder.getPrimaryKey(),bookmarksFolder);
  return bookmarksFolder;
}

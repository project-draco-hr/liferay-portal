{
  long pk=nextLong();
  MDRAction newMDRAction=_persistence.create(pk);
  newMDRAction.setUuid(randomString());
  newMDRAction.setGroupId(nextLong());
  newMDRAction.setCompanyId(nextLong());
  newMDRAction.setUserId(nextLong());
  newMDRAction.setUserName(randomString());
  newMDRAction.setCreateDate(nextDate());
  newMDRAction.setModifiedDate(nextDate());
  newMDRAction.setClassNameId(nextLong());
  newMDRAction.setClassPK(nextLong());
  newMDRAction.setRuleGroupId(nextLong());
  newMDRAction.setName(randomString());
  newMDRAction.setDescription(randomString());
  newMDRAction.setType(randomString());
  newMDRAction.setTypeSettings(randomString());
  _persistence.update(newMDRAction,false);
  MDRAction existingMDRAction=_persistence.findByPrimaryKey(newMDRAction.getPrimaryKey());
  assertEquals(existingMDRAction.getUuid(),newMDRAction.getUuid());
  assertEquals(existingMDRAction.getActionId(),newMDRAction.getActionId());
  assertEquals(existingMDRAction.getGroupId(),newMDRAction.getGroupId());
  assertEquals(existingMDRAction.getCompanyId(),newMDRAction.getCompanyId());
  assertEquals(existingMDRAction.getUserId(),newMDRAction.getUserId());
  assertEquals(existingMDRAction.getUserName(),newMDRAction.getUserName());
  assertEquals(Time.getShortTimestamp(existingMDRAction.getCreateDate()),Time.getShortTimestamp(newMDRAction.getCreateDate()));
  assertEquals(Time.getShortTimestamp(existingMDRAction.getModifiedDate()),Time.getShortTimestamp(newMDRAction.getModifiedDate()));
  assertEquals(existingMDRAction.getClassNameId(),newMDRAction.getClassNameId());
  assertEquals(existingMDRAction.getClassPK(),newMDRAction.getClassPK());
  assertEquals(existingMDRAction.getRuleGroupId(),newMDRAction.getRuleGroupId());
  assertEquals(existingMDRAction.getName(),newMDRAction.getName());
  assertEquals(existingMDRAction.getDescription(),newMDRAction.getDescription());
  assertEquals(existingMDRAction.getType(),newMDRAction.getType());
  assertEquals(existingMDRAction.getTypeSettings(),newMDRAction.getTypeSettings());
}

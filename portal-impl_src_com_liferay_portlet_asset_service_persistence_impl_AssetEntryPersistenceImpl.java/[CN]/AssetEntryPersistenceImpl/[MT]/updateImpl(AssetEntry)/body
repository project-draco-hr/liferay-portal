{
  assetEntry=toUnwrappedModel(assetEntry);
  boolean isNew=assetEntry.isNew();
  AssetEntryModelImpl assetEntryModelImpl=(AssetEntryModelImpl)assetEntry;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (assetEntry.getCreateDate() == null)) {
    if (serviceContext == null) {
      assetEntry.setCreateDate(now);
    }
 else {
      assetEntry.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!assetEntryModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      assetEntry.setModifiedDate(now);
    }
 else {
      assetEntry.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (assetEntry.isNew()) {
      session.save(assetEntry);
      assetEntry.setNew(false);
    }
 else {
      assetEntry=(AssetEntry)session.merge(assetEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !AssetEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{assetEntryModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{assetEntryModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_VISIBLE.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalVisible()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_VISIBLE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_VISIBLE,args);
      args=new Object[]{assetEntryModelImpl.getVisible()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_VISIBLE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_VISIBLE,args);
    }
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PUBLISHDATE.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalPublishDate()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PUBLISHDATE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PUBLISHDATE,args);
      args=new Object[]{assetEntryModelImpl.getPublishDate()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_PUBLISHDATE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PUBLISHDATE,args);
    }
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_EXPIRATIONDATE.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalExpirationDate()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_EXPIRATIONDATE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_EXPIRATIONDATE,args);
      args=new Object[]{assetEntryModelImpl.getExpirationDate()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_EXPIRATIONDATE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_EXPIRATIONDATE,args);
    }
    if ((assetEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTUUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{assetEntryModelImpl.getOriginalLayoutUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTUUID,args);
      args=new Object[]{assetEntryModelImpl.getLayoutUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_LAYOUTUUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_LAYOUTUUID,args);
    }
  }
  entityCache.putResult(AssetEntryModelImpl.ENTITY_CACHE_ENABLED,AssetEntryImpl.class,assetEntry.getPrimaryKey(),assetEntry,false);
  clearUniqueFindersCache(assetEntryModelImpl);
  cacheUniqueFindersCache(assetEntryModelImpl,isNew);
  assetEntry.resetOriginalValues();
  return assetEntry;
}

{
  ICodec iCodec=getAudioEncodingICodec(outputIContainer);
  if (iCodec == null) {
    iCodec=ICodec.guessEncodingCodec(null,null,outputURL,null,inputICodecType);
  }
  if (iCodec == null) {
    throw new RuntimeException("Unable to determine " + inputICodecType + " encoder for "+ outputURL);
  }
  IStream outputIStream=outputIContainer.addNewStream(iCodec);
  outputIStreams[index]=outputIStream;
  IStreamCoder outputIStreamCoder=outputIStream.getStreamCoder();
  outputIStreamCoders[index]=outputIStreamCoder;
  Format sampleFormat=inputIStreamCoder.getSampleFormat();
  if (_log.isInfoEnabled()) {
    _log.info("Original audio sample format " + sampleFormat.toString());
  }
  sampleFormat=getAudioSampleFormat(iCodec,sampleFormat);
  if (_log.isInfoEnabled()) {
    _log.info("Modified audio sample format " + sampleFormat.toString());
  }
  outputIStreamCoder.setSampleFormat(sampleFormat);
  int bitRate=inputIStreamCoder.getBitRate();
  if (_log.isInfoEnabled()) {
    _log.info("Original audio bitrate " + bitRate);
  }
  bitRate=getAudioBitRate(iCodec,bitRate);
  if (_log.isInfoEnabled()) {
    _log.info("Modified audio bitrate " + bitRate);
  }
  outputIStreamCoder.setBitRate(bitRate);
  int channels=getAudioEncodingChannels(outputIContainer,inputIStreamCoder.getChannels());
  outputIStreamCoder.setChannels(channels);
  outputIStreamCoder.setGlobalQuality(0);
  outputIStreamCoder.setSampleRate(getAudioSampleRate());
  iAudioResamplers[index]=createIAudioResampler(inputIStreamCoder,outputIStreamCoder);
  inputIAudioSamples[index]=IAudioSamples.make(1024,inputIStreamCoder.getChannels(),inputIStreamCoder.getSampleFormat());
  outputIAudioSamples[index]=IAudioSamples.make(1024,outputIStreamCoder.getChannels(),outputIStreamCoder.getSampleFormat());
}

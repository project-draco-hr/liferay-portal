{
  String cmd=ParamUtil.getString(req,Constants.CMD);
  try {
    if (cmd.equals(Constants.SEND)) {
      Address[] tos=_getAddresses(ParamUtil.getString(req,"tos"));
      Address[] ccs=_getAddresses(ParamUtil.getString(req,"ccs"));
      Address[] bccs=_getAddresses(ParamUtil.getString(req,"bccs"));
      String subject=ParamUtil.getString(req,"subject");
      String body=ParamUtil.getString(req,"body");
      Map attachments=_getAttachments(PortalUtil.getUploadPortletRequest(req));
      User user=PortalUtil.getUser(req);
      Address from=new InternetAddress(user.getEmailAddress(),user.getFullName());
      MailMessage mm=new MailMessage();
      mm.setFrom(from);
      mm.setTo(tos);
      mm.setCc(ccs);
      mm.setBcc(bccs);
      mm.setSubject(subject);
      mm.setHtmlBody(body);
      Set filenames=attachments.keySet();
      for (Iterator itr=filenames.iterator(); itr.hasNext(); ) {
        String filename=(String)itr.next();
        byte[] attachment=(byte[])attachments.get(filename);
        MailAttachment ma=new MailAttachment();
        ma.setFilename(filename);
        ma.setContentType(ContentTypeUtil.getContentType(filename));
        ma.setContent(attachment);
        mm.appendAttachment(ma);
      }
      HttpSession ses=((ActionRequestImpl)req).getHttpServletRequest().getSession();
      MailUtil.sendMessage(ses,mm);
    }
 else {
      if (Validator.isNotNull(cmd)) {
      }
    }
  }
 catch (  Exception e) {
    _log.error("Unable to send message");
  }
}

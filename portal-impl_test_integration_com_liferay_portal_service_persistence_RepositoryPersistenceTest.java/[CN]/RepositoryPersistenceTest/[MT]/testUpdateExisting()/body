{
  long pk=RandomTestUtil.nextLong();
  Repository newRepository=_persistence.create(pk);
  newRepository.setMvccVersion(RandomTestUtil.nextLong());
  newRepository.setUuid(RandomTestUtil.randomString());
  newRepository.setGroupId(RandomTestUtil.nextLong());
  newRepository.setCompanyId(RandomTestUtil.nextLong());
  newRepository.setUserId(RandomTestUtil.nextLong());
  newRepository.setUserName(RandomTestUtil.randomString());
  newRepository.setCreateDate(RandomTestUtil.nextDate());
  newRepository.setModifiedDate(RandomTestUtil.nextDate());
  newRepository.setClassNameId(RandomTestUtil.nextLong());
  newRepository.setName(RandomTestUtil.randomString());
  newRepository.setDescription(RandomTestUtil.randomString());
  newRepository.setPortletId(RandomTestUtil.randomString());
  newRepository.setTypeSettings(RandomTestUtil.randomString());
  newRepository.setDlFolderId(RandomTestUtil.nextLong());
  _persistence.update(newRepository);
  Repository existingRepository=_persistence.findByPrimaryKey(newRepository.getPrimaryKey());
  Assert.assertEquals(existingRepository.getMvccVersion(),newRepository.getMvccVersion());
  Assert.assertEquals(existingRepository.getUuid(),newRepository.getUuid());
  Assert.assertEquals(existingRepository.getRepositoryId(),newRepository.getRepositoryId());
  Assert.assertEquals(existingRepository.getGroupId(),newRepository.getGroupId());
  Assert.assertEquals(existingRepository.getCompanyId(),newRepository.getCompanyId());
  Assert.assertEquals(existingRepository.getUserId(),newRepository.getUserId());
  Assert.assertEquals(existingRepository.getUserName(),newRepository.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingRepository.getCreateDate()),Time.getShortTimestamp(newRepository.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingRepository.getModifiedDate()),Time.getShortTimestamp(newRepository.getModifiedDate()));
  Assert.assertEquals(existingRepository.getClassNameId(),newRepository.getClassNameId());
  Assert.assertEquals(existingRepository.getName(),newRepository.getName());
  Assert.assertEquals(existingRepository.getDescription(),newRepository.getDescription());
  Assert.assertEquals(existingRepository.getPortletId(),newRepository.getPortletId());
  Assert.assertEquals(existingRepository.getTypeSettings(),newRepository.getTypeSettings());
  Assert.assertEquals(existingRepository.getDlFolderId(),newRepository.getDlFolderId());
}

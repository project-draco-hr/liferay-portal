{
  KaleoTransition newKaleoTransition=addKaleoTransition();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(KaleoTransition.class,_dynamicQueryClassLoader);
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("kaleoTransitionId"));
  Object newKaleoTransitionId=newKaleoTransition.getKaleoTransitionId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("kaleoTransitionId",new Object[]{newKaleoTransitionId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingKaleoTransitionId=result.get(0);
  Assert.assertEquals(existingKaleoTransitionId,newKaleoTransitionId);
}

{
  Map<String,String[]> properties=new HashMap<>();
  properties.put(_PREFIX + ItemSelectorCriterionSerializer.JSON,new String[]{"{\"tags\":[\"tag1\",\"tag2\",\"tag3\"],\"user\":" + "\"Joe Bloggs\"," + "\"desiredReturnTypes\":[\"" + URL.class.getName() + "\"]}"});
  _itemSelectorCriterionSerializer.setProperties(properties);
  Assert.assertEquals("Joe Bloggs",_flickrItemSelectorCriterion.getUser());
  Assert.assertArrayEquals(new String[]{"tag1","tag2","tag3"},_flickrItemSelectorCriterion.getTags());
  Assert.assertEquals(1,_flickrItemSelectorCriterion.getDesiredReturnTypes().size());
  for (  Class<?> desiredReturnType : _flickrItemSelectorCriterion.getDesiredReturnTypes()) {
    Assert.assertEquals(URL.class,desiredReturnType);
  }
}

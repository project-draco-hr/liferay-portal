{
  FabricAgentRegistry fabricAgentRegistry=new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()));
  Path repositoryParentPath=FileServerTestUtil.registerForCleanUp(Files.createFile(Paths.get("RepositoryParentPath")));
  EmbeddedChannel embeddedChannel=new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry,repositoryParentPath,new DefaultEventExecutorGroup(1),0,0));
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(NettyFabricAgentRegistrationChannelHandler.class.getName(),Level.INFO);
  try {
    String embeddedChannelToString=embeddedChannel.toString();
    embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")));
    Assert.assertFalse(embeddedChannel.isOpen());
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(2,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Closing " + embeddedChannelToString + " due to:",logRecord.getMessage());
    Throwable throwable=logRecord.getThrown();
    Assert.assertTrue(throwable instanceof IOException);
    logRecord=logRecords.get(1);
    Assert.assertEquals(embeddedChannel + " is closed",logRecord.getMessage());
  }
  finally {
    captureHandler.close();
  }
}

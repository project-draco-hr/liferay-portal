{
  FabricAgentRegistry fabricAgentRegistry=new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()));
  Path repositoryParentPath=FileServerTestUtil.registerForCleanUp(Files.createDirectory(Paths.get("RepositoryParentPath")));
  EmbeddedChannel embeddedChannel=new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry,repositoryParentPath,new DefaultEventExecutorGroup(1),0,0));
  embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")));
  List<FabricAgent> fabricAgents=fabricAgentRegistry.getFabricAgents();
  Assert.assertEquals(1,fabricAgents.size());
  Assert.assertSame(fabricAgents.get(0),NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel));
  CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(NettyFabricAgentRegistrationChannelHandler.class.getName(),Level.OFF);
  try {
    embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")));
    fabricAgents=fabricAgentRegistry.getFabricAgents();
    Assert.assertEquals(1,fabricAgents.size());
    Assert.assertSame(fabricAgents.get(0),NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel));
  }
  finally {
    captureHandler.close();
  }
  captureHandler=JDKLoggerTestUtil.configureJDKLogger(NettyFabricAgentRegistrationChannelHandler.class.getName(),Level.WARNING);
  try {
    embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")));
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(1,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("Rejected duplicated fabric agent on " + embeddedChannel,logRecord.getMessage());
    fabricAgents=fabricAgentRegistry.getFabricAgents();
    Assert.assertEquals(1,fabricAgents.size());
    Assert.assertSame(fabricAgents.get(0),NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel));
  }
  finally {
    captureHandler.close();
  }
}

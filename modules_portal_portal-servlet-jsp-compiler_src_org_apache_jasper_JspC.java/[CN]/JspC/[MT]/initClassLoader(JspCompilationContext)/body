{
  classPath=getClassPath();
  ClassLoader jspcLoader=getClass().getClassLoader();
  ArrayList urls=new ArrayList();
  StringTokenizer tokenizer=new StringTokenizer(classPath,File.pathSeparator);
  while (tokenizer.hasMoreTokens()) {
    String path=tokenizer.nextToken();
    try {
      File libFile=new File(path);
      urls.add(libFile.toURL());
    }
 catch (    IOException ioe) {
      throw new RuntimeException(ioe.toString());
    }
  }
  File webappBase=new File(uriRoot);
  if (webappBase.exists()) {
    File classes=new File(webappBase,"/WEB-INF/classes");
    try {
      if (classes.exists()) {
        classPath=classPath + File.pathSeparator + classes.getCanonicalPath();
        urls.add(classes.getCanonicalFile().toURL());
      }
    }
 catch (    IOException ioe) {
      throw new RuntimeException(ioe.toString());
    }
    File lib=new File(webappBase,"/WEB-INF/lib");
    if (lib.exists() && lib.isDirectory()) {
      String[] libs=lib.list();
      for (int i=0; i < libs.length; i++) {
        if (libs[i].length() < 5)         continue;
        String ext=libs[i].substring(libs[i].length() - 4);
        if (!".jar".equalsIgnoreCase(ext)) {
          if (".tld".equalsIgnoreCase(ext)) {
            log.warning("TLD files should not be placed in /WEB-INF/lib");
          }
          continue;
        }
        try {
          File libFile=new File(lib,libs[i]);
          classPath=classPath + File.pathSeparator + libFile.getCanonicalPath();
          urls.add(libFile.getCanonicalFile().toURL());
        }
 catch (        IOException ioe) {
          throw new RuntimeException(ioe.toString());
        }
      }
    }
  }
  urls.add(new File(clctxt.getRealPath("/")).getCanonicalFile().toURL());
  URL urlsA[]=new URL[urls.size()];
  urls.toArray(urlsA);
  ClassLoader sysClassLoader=initSystemClassLoader();
  if (sysClassLoader != null) {
    loader=new URLClassLoader(urlsA,sysClassLoader);
  }
 else {
    loader=new URLClassLoader(urlsA,this.getClass().getClassLoader());
  }
}

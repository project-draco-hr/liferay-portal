{
  jspErrors.clear();
  dependents.clear();
  try {
    if (uriRoot == null) {
      if (pages.size() == 0) {
        throw new JasperException(Localizer.getMessage("jsp.error.jspc.missingTarget"));
      }
      String firstJsp=(String)pages.elementAt(0);
      File firstJspF=new File(firstJsp);
      if (!firstJspF.exists()) {
        throw new JasperException(Localizer.getMessage("jspc.error.fileDoesNotExist",firstJsp));
      }
      locateUriRoot(firstJspF);
    }
    if (uriRoot == null) {
      throw new JasperException(Localizer.getMessage("jsp.error.jspc.no_uriroot"));
    }
    if (context == null)     initServletContext();
    if (pages.size() == 0) {
      scanFiles(new File(uriRoot));
    }
    File uriRootF=new File(uriRoot);
    if (!uriRootF.exists() || !uriRootF.isDirectory()) {
      throw new JasperException(Localizer.getMessage("jsp.error.jspc.uriroot_not_dir"));
    }
    initWebXml();
    Enumeration e=pages.elements();
    while (e.hasMoreElements()) {
      String nextjsp=e.nextElement().toString();
      File fjsp=new File(nextjsp);
      if (!fjsp.isAbsolute()) {
        fjsp=new File(uriRootF,nextjsp);
      }
      if (!fjsp.exists()) {
        if (log.isLoggable(Level.WARNING)) {
          log.warning(Localizer.getMessage("jspc.error.fileDoesNotExist",fjsp.toString()));
        }
        continue;
      }
      String s=fjsp.getAbsolutePath();
      if (s.startsWith(uriRoot)) {
        nextjsp=s.substring(uriRoot.length());
      }
      if (nextjsp.startsWith("." + File.separatorChar)) {
        nextjsp=nextjsp.substring(2);
      }
      processFile(nextjsp);
    }
    if (ignoreJspFragmentErrors) {
      purgeJspFragmentErrors();
    }
    if (getFailOnError() && !jspErrors.isEmpty()) {
      throw (JasperException)jspErrors.values().iterator().next();
    }
    completeWebXml();
    if (addWebXmlMappings) {
      mergeIntoWebXml();
    }
  }
 catch (  IOException ioe) {
    throw new JasperException(ioe);
  }
catch (  JasperException je) {
    Throwable rootCause=je;
    while (rootCause instanceof JasperException && ((JasperException)rootCause).getRootCause() != null) {
      rootCause=((JasperException)rootCause).getRootCause();
    }
    if (rootCause != je) {
      rootCause.printStackTrace();
    }
    throw je;
  }
 finally {
    if (loader != null) {
    }
    if (rctxt != null) {
      rctxt.destroy();
    }
    if (taglibs != null) {
      taglibs.clear();
    }
    if (tagFileJarUrls != null) {
      tagFileJarUrls.clear();
    }
  }
}

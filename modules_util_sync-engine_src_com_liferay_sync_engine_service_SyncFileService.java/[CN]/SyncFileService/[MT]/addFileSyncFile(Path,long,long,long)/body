{
  if (Files.notExists(filePath)) {
    return null;
  }
  String checksum=FileUtil.getChecksum(filePath);
  String name=String.valueOf(filePath.getFileName());
  String mimeType=Files.probeContentType(filePath);
  SyncFile syncFile=addSyncFile(null,checksum,null,filePath.toString(),mimeType,name,folderId,repositoryId,syncAccountId,SyncFile.TYPE_FILE);
  Map<String,Object> parameters=new HashMap<String,Object>();
  parameters.put("changeLog","");
  parameters.put("checksum",checksum);
  parameters.put("description","");
  parameters.put("filePath",filePath);
  parameters.put("folderId",folderId);
  parameters.put("mimeType",mimeType);
  parameters.put("repositoryId",repositoryId);
  SyncSite syncSite=SyncSiteService.fetchSyncSite(repositoryId,syncAccountId);
  if (syncSite.getType() != SyncSite.TYPE_SYSTEM) {
    parameters.put("serviceContext.addGroupPermissions",true);
  }
  if (syncSite.getType() == SyncSite.TYPE_OPEN) {
    parameters.put("serviceContext.addGuestPermissions",true);
  }
  parameters.put("serviceContext.attributes.overwrite",true);
  parameters.put("sourceFileName",name);
  parameters.put("syncFile",syncFile);
  parameters.put("title",name);
  AddFileEntryEvent addFileEntryEvent=new AddFileEntryEvent(syncAccountId,parameters);
  addFileEntryEvent.run();
  return syncFile;
}

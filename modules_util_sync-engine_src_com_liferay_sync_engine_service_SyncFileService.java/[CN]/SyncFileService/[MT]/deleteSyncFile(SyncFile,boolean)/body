{
  try {
    if (syncFile.isFile()) {
      final Path filePath=IODeltaUtil.getChecksumsFilePath(syncFile);
      Runnable runnable=new Runnable(){
        @Override public void run(){
          try {
            Files.deleteIfExists(filePath);
          }
 catch (          IOException ioe) {
            _logger.error(ioe.getMessage(),ioe);
          }
        }
      }
;
      ExecutorService executorService=SyncEngine.getExecutorService();
      executorService.execute(runnable);
    }
    _syncFilePersistence.delete(syncFile,notify);
    if (!syncFile.isFolder() || (syncFile.getTypePK() == 0)) {
      return;
    }
    List<SyncFile> childSyncFiles=findSyncFiles(syncFile.getTypePK(),syncFile.getSyncAccountId());
    for (    SyncFile childSyncFile : childSyncFiles) {
      if (childSyncFile.isFolder()) {
        deleteSyncFile(childSyncFile,notify);
      }
 else {
        if (notify) {
          childSyncFile.setUiEvent(syncFile.getUiEvent());
        }
        deleteSyncFile(childSyncFile,notify);
      }
    }
  }
 catch (  SQLException sqle) {
    if (_logger.isDebugEnabled()) {
      _logger.debug(sqle.getMessage(),sqle);
    }
  }
}

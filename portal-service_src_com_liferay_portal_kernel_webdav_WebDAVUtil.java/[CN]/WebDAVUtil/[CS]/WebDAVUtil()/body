{
  ServiceTrackerMapFactory serviceTrackerMapFactory=ServiceTrackerMapFactoryUtil.getServiceTrackerMapFactory();
  _storages=serviceTrackerMapFactory.singleValueMap(WebDAVStorage.class,"token",new ServiceTrackerCustomizer<WebDAVStorage,WebDAVStorage>(){
    @Override public WebDAVStorage addingService(    ServiceReference<WebDAVStorage> serviceReference){
      Registry registry=RegistryUtil.getRegistry();
      WebDAVStorage webDAVStorage=registry.getService(serviceReference);
      _setToken(serviceReference,webDAVStorage);
      return webDAVStorage;
    }
    @Override public void modifiedService(    ServiceReference<WebDAVStorage> serviceReference,    WebDAVStorage webDAVStorage){
      _setToken(serviceReference,webDAVStorage);
    }
    @Override public void removedService(    ServiceReference<WebDAVStorage> serviceReference,    WebDAVStorage webDAVStorage){
    }
    private void _setToken(    ServiceReference<WebDAVStorage> serviceReference,    WebDAVStorage webDAVStorage){
      String token=(String)serviceReference.getProperty("token");
      webDAVStorage.setToken(token);
    }
  }
);
  _storages.open();
}

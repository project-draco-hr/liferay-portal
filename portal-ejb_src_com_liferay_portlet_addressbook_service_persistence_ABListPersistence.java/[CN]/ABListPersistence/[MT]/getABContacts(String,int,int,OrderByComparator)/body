{
  Session session=null;
  try {
    session=openSession();
    ABListHBM abListHBM=(ABListHBM)session.get(ABListHBM.class,pk);
    if (abListHBM == null) {
      _log.warn("No ABList exists with the primary key " + pk.toString());
      throw new NoSuchListException("No ABList exists with the primary key " + pk.toString());
    }
    StringBuffer query=new StringBuffer();
    query.append("SELECT abContactHBM FROM ");
    query.append(com.liferay.portlet.addressbook.service.persistence.ABListHBM.class.getName());
    query.append(" abListHBM ");
    query.append("JOIN abListHBM.contacts AS abContactHBM ");
    query.append("WHERE abListHBM.listId = ? ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("abContactHBM.firstName ASC").append(", ");
      query.append("abContactHBM.lastName ASC").append(", ");
      query.append("abContactHBM.emailAddress ASC");
    }
    Query q=session.createQuery(query.toString());
    q.setString(0,pk);
    List list=new ArrayList();
    Iterator itr=QueryUtil.iterate(q,getDialect(),begin,end);
    while (itr.hasNext()) {
      com.liferay.portlet.addressbook.service.persistence.ABContactHBM abContactHBM=(com.liferay.portlet.addressbook.service.persistence.ABContactHBM)itr.next();
      list.add(com.liferay.portlet.addressbook.service.persistence.ABContactHBMUtil.model(abContactHBM));
    }
    return list;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

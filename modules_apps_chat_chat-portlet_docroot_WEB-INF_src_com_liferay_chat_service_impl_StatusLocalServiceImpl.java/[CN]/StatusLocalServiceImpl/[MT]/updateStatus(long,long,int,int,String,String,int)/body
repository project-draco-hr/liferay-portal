{
  Status status=statusPersistence.fetchByUserId(userId);
  if (status == null) {
    long statusId=counterLocalService.increment();
    status=statusPersistence.create(statusId);
    status.setUserId(userId);
  }
  if (modifiedDate != -1) {
    status.setModifiedDate(modifiedDate);
  }
  if (online != -1) {
    status.setOnline((online == 1) ? true : false);
  }
  if (awake != -1) {
    status.setAwake((awake == 1) ? true : false);
  }
  if (Validator.isNotNull(activePanelIds)) {
    try {
      JSONObject activePanelIdsJSONObject=JSONFactoryUtil.createJSONObject(activePanelIds);
      long openPanelId=activePanelIdsJSONObject.getLong("open");
      List<Entry> entries=entryPersistence.findByF_T(openPanelId,userId);
      for (      Entry entry : entries) {
        entry.setFlag(EntryConstants.FLAG_READ);
        entryPersistence.update(entry);
      }
    }
 catch (    JSONException jsone) {
      _log.error("Unable to create a JSON object from " + activePanelIds);
    }
    status.setActivePanelIds(activePanelIds);
  }
  if (message != null) {
    status.setMessage(message);
  }
  if (playSound != -1) {
    status.setPlaySound((playSound == 1) ? true : false);
  }
  try {
    statusPersistence.update(status);
  }
 catch (  SystemException se) {
    if (_log.isWarnEnabled()) {
      _log.warn("Add failed, fetch {userId=" + userId + "}");
    }
    status=statusPersistence.fetchByUserId(userId);
    if (status == null) {
      throw se;
    }
  }
  JabberUtil.updateStatus(userId,online);
  return status;
}

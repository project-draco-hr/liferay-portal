{
  String preferencesXML=portletPreferences.getPreferences();
  if (Validator.isNull(preferencesXML)) {
    preferencesXML=PortletConstants.DEFAULT_PREFERENCES;
  }
  javax.portlet.PortletPreferences jxPortletPreferences=PortletPreferencesFactoryUtil.fromDefaultXML(preferencesXML);
  Portlet portlet=_portletLocalService.getPortletById(portletDataContext.getCompanyId(),portletId);
  Element portletPreferencesElement=parentElement.addElement("portlet-preferences");
  if ((portlet != null) && (portlet.getPortletDataHandlerInstance() != null)) {
    Element exportDataRootElement=portletDataContext.getExportDataRootElement();
    try {
      portletDataContext.clearScopedPrimaryKeys();
      Element preferenceDataElement=portletPreferencesElement.addElement("preference-data");
      portletDataContext.setExportDataRootElement(preferenceDataElement);
      ExportImportPortletPreferencesProcessor exportImportPortletPreferencesProcessor=ExportImportPortletPreferencesProcessorRegistryUtil.getExportImportPortletPreferencesProcessor(portlet.getRootPortletId());
      if (exportImportPortletPreferencesProcessor != null) {
        List<Capability> exportCapabilities=exportImportPortletPreferencesProcessor.getExportCapabilities();
        if (ListUtil.isNotEmpty(exportCapabilities)) {
          for (          Capability exportCapability : exportCapabilities) {
            exportCapability.process(portletDataContext,jxPortletPreferences);
          }
        }
        exportImportPortletPreferencesProcessor.processExportPortletPreferences(portletDataContext,jxPortletPreferences);
      }
 else {
        PortletDataHandler portletDataHandler=portlet.getPortletDataHandlerInstance();
        jxPortletPreferences=portletDataHandler.processExportPortletPreferences(portletDataContext,portletId,jxPortletPreferences);
      }
    }
  finally {
      portletDataContext.setExportDataRootElement(exportDataRootElement);
    }
  }
  Document document=SAXReaderUtil.read(PortletPreferencesFactoryUtil.toXML(jxPortletPreferences));
  Element rootElement=document.getRootElement();
  rootElement.addAttribute("owner-id",String.valueOf(ownerId));
  rootElement.addAttribute("owner-type",String.valueOf(ownerType));
  rootElement.addAttribute("default-user",String.valueOf(defaultUser));
  rootElement.addAttribute("plid",String.valueOf(plid));
  rootElement.addAttribute("portlet-id",portletId);
  if (ownerType == PortletKeys.PREFS_OWNER_TYPE_ARCHIVED) {
    PortletItem portletItem=_portletItemLocalService.getPortletItem(ownerId);
    rootElement.addAttribute("archive-user-uuid",portletItem.getUserUuid());
    rootElement.addAttribute("archive-name",portletItem.getName());
  }
 else   if (ownerType == PortletKeys.PREFS_OWNER_TYPE_USER) {
    User user=_userLocalService.fetchUserById(ownerId);
    if (user == null) {
      return;
    }
    rootElement.addAttribute("user-uuid",user.getUserUuid());
  }
  List<Node> nodes=document.selectNodes("/portlet-preferences/preference[name/text() = " + "'last-publish-date']");
  for (  Node node : nodes) {
    document.remove(node);
  }
  String path=ExportImportPathUtil.getPortletPreferencesPath(portletDataContext,portletId,ownerId,ownerType,plid);
  portletPreferencesElement.addAttribute("path",path);
  portletDataContext.addZipEntry(path,document.formattedString(StringPool.TAB,false,false));
}

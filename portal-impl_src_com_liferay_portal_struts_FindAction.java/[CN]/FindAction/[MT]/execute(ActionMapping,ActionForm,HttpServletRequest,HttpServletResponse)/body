{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  try {
    long plid=ParamUtil.getLong(request,"p_l_id");
    long primaryKey=ParamUtil.getLong(request,getPrimaryKeyParameterName());
    long groupId=ParamUtil.getLong(request,"groupId",themeDisplay.getScopeGroupId());
    if (primaryKey > 0) {
      try {
        long overrideGroupId=getGroupId(primaryKey);
        if (overrideGroupId > 0) {
          groupId=overrideGroupId;
        }
      }
 catch (      Exception e) {
        if (_log.isDebugEnabled()) {
          _log.debug(e,e);
        }
      }
    }
    GroupPermissionUtil.check(themeDisplay.getPermissionChecker(),groupId,ActionKeys.VIEW);
    LayoutPermissionUtil.check(themeDisplay.getPermissionChecker(),plid,ActionKeys.VIEW);
    Object[] plidAndPortletId=getPlidAndPortletId(themeDisplay,groupId,plid,_portletIds);
    plid=(Long)plidAndPortletId[0];
    setTargetGroup(request,groupId,plid);
    String portletId=(String)plidAndPortletId[1];
    PortletURL portletURL=PortletURLFactoryUtil.create(request,portletId,plid,PortletRequest.RENDER_PHASE);
    portletURL.setParameter("struts_action",getStrutsAction(request,portletId));
    boolean inheritRedirect=ParamUtil.getBoolean(request,"inheritRedirect");
    String redirect=null;
    if (inheritRedirect) {
      String noSuchEntryRedirect=ParamUtil.getString(request,"noSuchEntryRedirect");
      redirect=HttpUtil.getParameter(noSuchEntryRedirect,"redirect",false);
      redirect=HttpUtil.decodeURL(redirect);
    }
 else {
      redirect=ParamUtil.getString(request,"redirect");
    }
    if (Validator.isNotNull(redirect)) {
      portletURL.setParameter("redirect",redirect);
    }
    setPrimaryKeyParameter(portletURL,primaryKey);
    portletURL.setPortletMode(PortletMode.VIEW);
    portletURL.setWindowState(WindowState.NORMAL);
    portletURL=processPortletURL(request,portletURL);
    response.sendRedirect(portletURL.toString());
    return null;
  }
 catch (  Exception e) {
    String noSuchEntryRedirect=ParamUtil.getString(request,"noSuchEntryRedirect");
    noSuchEntryRedirect=PortalUtil.escapeRedirect(noSuchEntryRedirect);
    if (Validator.isNotNull(noSuchEntryRedirect) && (e instanceof NoSuchLayoutException || e instanceof PrincipalException)) {
      response.sendRedirect(noSuchEntryRedirect);
    }
 else {
      PortalUtil.sendError(e,request,response);
    }
    return null;
  }
}

{
  String databasePlatform=null;
  String packageName=null;
  boolean eclipseLink=false;
  if (StringUtil.equalsIgnoreCase(PropsValues.JPA_PROVIDER,"eclipselink")) {
    packageName="org.eclipse.persistence.platform.database.";
    eclipseLink=true;
  }
 else {
    packageName="oracle.toplink.essentials.platform.database.";
  }
  if (database.equals(Database.DB2)) {
    databasePlatform=packageName + "DB2Platform";
  }
 else   if (database.equals(Database.DERBY)) {
    databasePlatform=packageName + "DerbyPlatform";
  }
 else   if (database.equals(Database.HSQL)) {
    databasePlatform=packageName + "HSQLPlatform";
  }
 else   if (database.equals(Database.INFORMIX)) {
    databasePlatform=packageName + "InformixPlatform";
  }
 else   if (database.equals(Database.MYSQL)) {
    if (eclipseLink) {
      databasePlatform=packageName + "MySQLPlatform";
    }
 else {
      databasePlatform=packageName + "MySQL4Platform";
    }
  }
 else   if (database.equals(Database.ORACLE)) {
    if (eclipseLink) {
      databasePlatform=packageName + "OraclePlatform";
    }
 else {
      databasePlatform=packageName + "oracle.OraclePlatform";
    }
  }
 else   if (database.equals(Database.POSTGRESQL)) {
    databasePlatform=packageName + "PostgreSQLPlatform";
  }
 else   if (database.equals(Database.SQL_SERVER)) {
    databasePlatform=packageName + "SQLServerPlatform";
  }
 else   if (database.equals(Database.SYBASE)) {
    databasePlatform=packageName + "SybasePlatform";
  }
 else {
    _log.error("Unable to detect database platform for \"" + database.toString() + "\". Override by configuring the "+ "\"jpa.database.platform\" property.");
  }
  return databasePlatform;
}

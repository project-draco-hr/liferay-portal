{
  if (_log.isDebugEnabled()) {
    _log.debug("Language " + languageId);
  }
  if (Validator.isNull(viewMode)) {
    viewMode=Constants.VIEW;
  }
  if (_logTokens.isDebugEnabled()) {
    String tokensString=PropertiesUtil.list(tokens);
    _logTokens.debug(tokensString);
  }
  if (_logTransformBefore.isDebugEnabled()) {
    _logTransformBefore.debug(xml);
  }
  List<TransformerListener> transformerListeners=new ArrayList<TransformerListener>();
  String[] transformerListenersClassNames=getTransformerListenersClassNames();
  for (  String transformerListenersClassName : transformerListenersClassNames) {
    TransformerListener transformerListener=null;
    try {
      if (_log.isDebugEnabled()) {
        _log.debug("Instantiate listener " + transformerListenersClassName);
      }
      ClassLoader classLoader=PortalClassLoaderUtil.getClassLoader();
      transformerListener=(TransformerListener)InstanceFactory.newInstance(classLoader,transformerListenersClassName);
      transformerListeners.add(transformerListener);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    if (_logXmlBeforeListener.isDebugEnabled()) {
      _logXmlBeforeListener.debug(xml);
    }
    if (transformerListener != null) {
      xml=transformerListener.onXml(xml,languageId,tokens);
      if (_logXmlAfterListener.isDebugEnabled()) {
        _logXmlAfterListener.debug(xml);
      }
    }
    if (_logScriptBeforeListener.isDebugEnabled()) {
      _logScriptBeforeListener.debug(script);
    }
    if (transformerListener != null) {
      script=transformerListener.onScript(script,xml,languageId,tokens);
      if (_logScriptAfterListener.isDebugEnabled()) {
        _logScriptAfterListener.debug(script);
      }
    }
  }
  String output=null;
  if (Validator.isNull(langType)) {
    output=LocalizationUtil.getLocalization(xml,languageId);
  }
 else {
    String templateParserClassName=getTemplateParserClassName(langType);
    if (_log.isDebugEnabled()) {
      _log.debug("Template parser class name " + templateParserClassName);
    }
    if (Validator.isNotNull(templateParserClassName)) {
      TemplateParser templateParser=null;
      try {
        templateParser=(TemplateParser)InstanceFactory.newInstance(PortalClassLoaderUtil.getClassLoader(),templateParserClassName);
      }
 catch (      Exception e) {
        throw new TransformException(e);
      }
      templateParser.setLanguageId(languageId);
      templateParser.setScript(script);
      templateParser.setThemeDisplay(themeDisplay);
      templateParser.setTokens(tokens);
      templateParser.setViewMode(viewMode);
      templateParser.setXML(xml);
      output=templateParser.transform();
    }
  }
  for (  TransformerListener transformerListener : transformerListeners) {
    if (_logOutputBeforeListener.isDebugEnabled()) {
      _logOutputBeforeListener.debug(output);
    }
    output=transformerListener.onOutput(output,languageId,tokens);
    if (_logOutputAfterListener.isDebugEnabled()) {
      _logOutputAfterListener.debug(output);
    }
  }
  if (_logTransfromAfter.isDebugEnabled()) {
    _logTransfromAfter.debug(output);
  }
  return output;
}

{
  Task task=taskCache.getTask();
  Logger logger=task.getLogger();
  boolean upToDate=false;
  String currentDigest=getCurrentDigest(taskCache);
  if (logger.isInfoEnabled()) {
    logger.info("Current digest is " + currentDigest);
  }
  if (cacheExtension.isForcedCache()) {
    File cacheDir=taskCache.getCacheDir();
    if (!cacheDir.exists()) {
      throw new GradleException("Unable to find " + cacheDir);
    }
    upToDate=true;
  }
 else   if (taskCache.isDisabled()) {
    if (logger.isLifecycleEnabled()) {
      logger.lifecycle("Cache for " + task + " is disabled");
    }
  }
 else {
    String cachedDigest=getCachedDigest(taskCache);
    if (logger.isInfoEnabled()) {
      if (Validator.isNull(cachedDigest)) {
        logger.info("No cached digest has been found");
      }
 else {
        logger.info("Cached digest is " + cachedDigest);
      }
    }
    if (cachedDigest.equals(currentDigest)) {
      upToDate=true;
    }
  }
  if (upToDate) {
    applyUpToDate(taskCache,task);
  }
 else {
    applyOutOfDate(taskCache,task,currentDigest);
  }
  createRefreshDigestTask(taskCache);
}

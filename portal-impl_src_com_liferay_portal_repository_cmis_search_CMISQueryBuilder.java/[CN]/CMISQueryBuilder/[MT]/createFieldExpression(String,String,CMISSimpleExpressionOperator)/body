{
  CMISCriterion criterion=null;
  boolean wildcard=CMISSimpleExpressionOperator.LIKE == op;
  if (Field.CONTENT.equals(field)) {
    value=CMISParameterValueUtil.formatParameterValue(field,value);
    criterion=new CMISContainsExpression(value);
  }
 else   if (Field.FOLDER_ID.equals(field)) {
    long folderId=Long.valueOf(value);
    try {
      RepositoryEntry repositoryEntry=RepositoryEntryUtil.fetchByPrimaryKey(folderId);
      if (repositoryEntry != null) {
        String objectId=repositoryEntry.getMappedId();
        objectId=CMISParameterValueUtil.formatParameterValue(field,objectId,wildcard);
        criterion=new CMISInFolderExpression(objectId);
      }
    }
 catch (    SystemException e) {
    }
  }
 else   if (Field.TITLE.equals(field)) {
    value=CMISParameterValueUtil.formatParameterValue(field,value,wildcard);
    criterion=new CMISSimpleExpression(PropertyIds.NAME,value,op);
  }
 else   if (Field.USER_ID.equals(field)) {
    try {
      User user=UserLocalServiceUtil.getUserById(Long.valueOf(value));
      String screenName=user.getScreenName();
      screenName=CMISParameterValueUtil.formatParameterValue(field,screenName,wildcard);
      criterion=new CMISSimpleExpression(PropertyIds.CREATED_BY,screenName,op);
    }
 catch (    Exception e) {
    }
  }
 else   if (Field.USER_NAME.equals(field)) {
    value=CMISParameterValueUtil.formatParameterValue(field,value,wildcard);
    criterion=new CMISSimpleExpression(PropertyIds.CREATED_BY,value,op);
  }
  return criterion;
}

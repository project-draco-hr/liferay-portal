{
  final ReentrantLock takeLock=this.takeLock;
  try {
    takeLock.lockInterruptibly();
    try {
      Node<E> current=this.head.next;
      if (coalesceComparator != null) {
        while (current != null) {
          if (coalesceComparator.compare(current.item,e) == 0) {
            coalescedCount.incrementAndGet();
            return true;
          }
 else {
            current=current.next;
          }
        }
      }
 else {
        while (current != null) {
          if (current.item.equals(e)) {
            coalescedCount.incrementAndGet();
            return true;
          }
 else {
            current=current.next;
          }
        }
      }
    }
  finally {
      takeLock.unlock();
    }
  }
 catch (  InterruptedException ignore) {
  }
  return false;
}

{
  Map<String,String> arguments=ArgumentsUtil.parseArguments(args);
  List<String> dirNames=new ArrayList<>();
  String dirName=GetterUtil.getString(arguments.get("sass.dir"),CSSBuilderArgs.DIR_NAME);
  if (Validator.isNotNull(dirName)) {
    dirNames.add(dirName);
  }
 else {
    for (int i=0; ; i++) {
      dirName=arguments.get("sass.dir." + i);
      if (Validator.isNotNull(dirName)) {
        dirNames.add(dirName);
      }
 else {
        break;
      }
    }
  }
  String docrootDirName=GetterUtil.getString(arguments.get("sass.docroot.dir"),CSSBuilderArgs.DOCROOT_DIR_NAME);
  boolean generateSourceMap=GetterUtil.getBoolean(arguments.get("sass.generate.source.map"));
  String portalCommonDirName=arguments.get("sass.portal.common.dir");
  int precision=GetterUtil.getInteger(arguments.get("sass.precision"),CSSBuilderArgs.PRECISION);
  String[] rtlExcludedPathRegexps=StringUtil.split(arguments.get("sass.rtl.excluded.path.regexps"));
  String sassCompilerClassName=arguments.get("sass.compiler.class.name");
  try {
    CSSBuilder cssBuilder=new CSSBuilder(docrootDirName,generateSourceMap,portalCommonDirName,precision,rtlExcludedPathRegexps,sassCompilerClassName);
    cssBuilder.execute(dirNames);
  }
 catch (  Exception e) {
    ArgumentsUtil.processMainException(arguments,e);
  }
}

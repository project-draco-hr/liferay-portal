{
  if (serviceContext.getWorkflowAction() != WorkflowConstants.ACTION_PUBLISH) {
    return;
  }
  WorkflowHandler workflowHandler=getWorkflowHandler(className);
  if (workflowHandler == null) {
    throw new WorkflowException("No workflow handler found for " + className);
  }
  int status=WorkflowConstants.STATUS_PENDING;
  if (!WorkflowThreadLocal.isEnabled() || !WorkflowEngineManagerUtil.isDeployed()) {
    status=WorkflowConstants.STATUS_APPROVED;
  }
  Map<String,Serializable> workflowContext=new HashMap<String,Serializable>(workflowContextParameters);
  workflowContext.put(WorkflowConstants.CONTEXT_COMPANY_ID,String.valueOf(companyId));
  workflowContext.put(WorkflowConstants.CONTEXT_GROUP_ID,String.valueOf(groupId));
  workflowContext.put(WorkflowConstants.CONTEXT_USER_ID,String.valueOf(userId));
  workflowContext.put(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME,className);
  workflowContext.put(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK,String.valueOf(classPK));
  workflowContext.put(WorkflowConstants.CONTEXT_ENTRY_TYPE,workflowHandler.getType(LocaleUtil.getDefault()));
  workflowContext.put(WorkflowConstants.CONTEXT_SERVICE_CONTEXT,serviceContext);
  workflowHandler.updateStatus(status,workflowContext);
  if (WorkflowThreadLocal.isEnabled() && WorkflowEngineManagerUtil.isDeployed()) {
    try {
      workflowHandler.startWorkflowInstance(companyId,groupId,userId,classPK,model,workflowContext);
    }
 catch (    NoSuchWorkflowDefinitionLinkException nswdle) {
      workflowHandler.updateStatus(WorkflowConstants.STATUS_APPROVED,workflowContext);
    }
  }
}

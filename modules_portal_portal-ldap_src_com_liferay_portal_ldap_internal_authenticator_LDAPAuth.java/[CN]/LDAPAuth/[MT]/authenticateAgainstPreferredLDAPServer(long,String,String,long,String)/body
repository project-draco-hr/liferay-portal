{
  int result=DNE;
  User user=null;
  try {
    if (userId > 0) {
      user=_userLocalService.getUserById(companyId,userId);
    }
 else     if (Validator.isNotNull(emailAddress)) {
      user=_userLocalService.getUserByEmailAddress(companyId,emailAddress);
    }
 else     if (Validator.isNotNull(screenName)) {
      user=_userLocalService.getUserByScreenName(companyId,screenName);
    }
 else {
      if (_log.isDebugEnabled()) {
        _log.debug("Unable to get preferred LDAP server");
      }
      return result;
    }
  }
 catch (  NoSuchUserException nsue) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to get preferred LDAP server",nsue);
    }
    return result;
  }
  long ldapServerId=user.getLdapServerId();
  if (ldapServerId < 0) {
    return result;
  }
  LDAPServerConfiguration ldapServerConfiguration=_ldapServerConfigurationProvider.getConfiguration(companyId,ldapServerId);
  String providerUrl=ldapServerConfiguration.baseProviderURL();
  if (Validator.isNull(providerUrl)) {
    return result;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Using LDAP server ID " + ldapServerId + " to authenticate user "+ user.getUserId());
  }
  result=authenticate(ldapServerId,companyId,emailAddress,screenName,userId,password);
  return result;
}

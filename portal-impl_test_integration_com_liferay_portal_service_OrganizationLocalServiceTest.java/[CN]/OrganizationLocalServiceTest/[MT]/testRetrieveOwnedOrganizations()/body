{
  User user=ServiceTestUtil.addUser("test1",false,null);
  long userId=user.getUserId();
  Organization organization=OrganizationLocalServiceUtil.addOrganization(userId,OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,"testRetrieveOwnedOrganizations",OrganizationConstants.TYPE_REGULAR_ORGANIZATION,false,0,0,ListTypeConstants.ORGANIZATION_STATUS_DEFAULT,StringPool.BLANK,false,null);
  try {
    List<Organization> organizations=user.getOrganizations(true);
    boolean found=false;
    for (    Organization curOrganization : organizations) {
      if (curOrganization.getOrganizationId() == organization.getOrganizationId()) {
        found=true;
      }
    }
    Assert.assertTrue("The organization created and owned by the user has not been " + "returned as one of his organizations",found);
  }
  finally {
    OrganizationLocalServiceUtil.deleteOrganization(organization.getOrganizationId());
  }
}

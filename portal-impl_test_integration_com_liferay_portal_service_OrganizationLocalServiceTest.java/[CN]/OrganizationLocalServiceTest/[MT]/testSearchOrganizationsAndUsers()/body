{
  Organization organization=OrganizationTestUtil.addOrganization();
  Organization subOrganization=OrganizationTestUtil.addOrganization(organization.getOrganizationId(),"Organization1",false);
  _organizations.add(subOrganization);
  _organizations.add(organization);
  _user=UserTestUtil.addUser("user1",TestPropsValues.getGroupId());
  UserLocalServiceUtil.addOrganizationUsers(organization.getOrganizationId(),new long[]{_user.getUserId()});
  Hits hits=searchOrganizationsAndUsers(organization,null);
  Assert.assertEquals(2,hits.getLength());
  hits=searchOrganizationsAndUsers(organization,"Organization1");
  Assert.assertEquals(String.valueOf(subOrganization.getOrganizationId()),hits.doc(0).get(Field.ORGANIZATION_ID));
  hits=searchOrganizationsAndUsers(organization,"user1");
  Assert.assertEquals(String.valueOf(_user.getUserId()),hits.doc(0).get(Field.USER_ID));
}

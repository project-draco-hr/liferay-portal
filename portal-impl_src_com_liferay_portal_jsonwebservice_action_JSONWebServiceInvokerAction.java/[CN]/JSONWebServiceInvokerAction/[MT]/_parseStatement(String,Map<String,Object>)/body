{
  Statement statement=new Statement();
  statements.add(statement);
  int index=assignment.indexOf('=');
  if (index == -1) {
    statement.method=assignment.trim();
  }
 else {
    String name=assignment.substring(0,index).trim();
    int bracketIndex=name.indexOf('[');
    if (bracketIndex != -1) {
      String whiteSpaceList=name.substring(bracketIndex + 1,name.length() - 1);
      statement.whitelist=StringUtil.split(whiteSpaceList);
      name=name.substring(0,bracketIndex);
    }
    statement.name=name;
    statement.method=assignment.substring(index + 1).trim();
  }
  statement.parameters=value;
  Iterator<String> iterator=statement.parameters.keySet().iterator();
  while (iterator.hasNext()) {
    String key=iterator.next();
    if (key.startsWith(StringPool.DOLLAR)) {
      Map<String,Object> innerMap=(Map<String,Object>)statement.parameters.get(key);
      iterator.remove();
      if (statement.variables == null) {
        statement.variables=new ArrayList<Statement>();
      }
      Statement variableStatement=_parseStatement(key,innerMap);
      statement.variables.add(variableStatement);
      continue;
    }
    if (key.startsWith(StringPool.AT)) {
      String innerValue=(String)statement.parameters.get(key);
      iterator.remove();
      KeyValue<String,String> flag=new KeyValue<String,String>();
      flag.setKey(key.substring(1));
      flag.setValue(innerValue);
      if (statement.flags == null) {
        statement.flags=new ArrayList<KeyValue<String,String>>();
      }
      statement.flags.add(flag);
      continue;
    }
  }
  return statement;
}

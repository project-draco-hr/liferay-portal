{
  Statement statement=variableStatement.getParentStatement();
  result=_populateFlags(statement,result);
  String name=variableStatement.getName();
  Object variableResult=_executeStatement(variableStatement);
  Map<String,Object> map=_convertObjectToMap(statement,result,null);
  if (variableStatement.isInner()) {
    int index=name.indexOf(".$");
    String innerBeanName=name.substring(0,index);
    if (innerBeanName.contains(StringPool.PERIOD)) {
      throw new IllegalArgumentException("Only 1-level inner properties are supported!");
    }
    Object innerObject=map.get(innerBeanName);
    String innerPropertyName=name.substring(index + 2);
    if (innerObject instanceof List) {
      List<Object> innerList=(List)innerObject;
      List<Object> newInnerList=new ArrayList<Object>(innerList.size());
      for (      Object innerListElement : innerList) {
        Map<String,Object> newInnerListElement=_convertObjectToMap(statement,innerListElement,innerBeanName);
        newInnerListElement.put(innerPropertyName,variableResult);
        newInnerList.add(newInnerListElement);
      }
      map.put(innerBeanName,newInnerList);
    }
 else {
      Map<String,Object> innerMap=_convertObjectToMap(statement,innerObject,innerBeanName);
      innerMap.put(innerPropertyName,variableResult);
      map.put(innerBeanName,innerMap);
    }
  }
 else {
    map.put(name.substring(1),variableResult);
  }
  return map;
}

{
  Object deserializedCommand=JSONFactoryUtil.looseDeserialize(_command);
  boolean batchMode=false;
  List list=null;
  if (deserializedCommand instanceof List) {
    list=(List)deserializedCommand;
    batchMode=true;
  }
 else   if (deserializedCommand instanceof Map) {
    list=new ArrayList(1);
    list.add(deserializedCommand);
    batchMode=false;
  }
 else {
    throw new IllegalArgumentException("Invalid argument type");
  }
  for (int i=0; i < list.size(); i++) {
    Map<String,Map<String,Object>> map=(Map<String,Map<String,Object>>)list.get(i);
    if (map.isEmpty()) {
      throw new IllegalArgumentException("Invalid input");
    }
    Map.Entry<String,Map<String,Object>> entry=map.entrySet().iterator().next();
    Statement statement=_parseStatement(entry.getKey(),entry.getValue());
    Object result=_executeStatement(statement);
    list.set(i,result);
  }
  if (batchMode == false) {
    return list.get(0);
  }
  return list;
}

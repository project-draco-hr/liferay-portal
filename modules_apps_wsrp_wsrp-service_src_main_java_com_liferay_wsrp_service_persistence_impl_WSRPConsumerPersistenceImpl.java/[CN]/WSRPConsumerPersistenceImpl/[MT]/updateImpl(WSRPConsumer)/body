{
  wsrpConsumer=toUnwrappedModel(wsrpConsumer);
  boolean isNew=wsrpConsumer.isNew();
  WSRPConsumerModelImpl wsrpConsumerModelImpl=(WSRPConsumerModelImpl)wsrpConsumer;
  if (Validator.isNull(wsrpConsumer.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wsrpConsumer.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (wsrpConsumer.getCreateDate() == null)) {
    if (serviceContext == null) {
      wsrpConsumer.setCreateDate(now);
    }
 else {
      wsrpConsumer.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!wsrpConsumerModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      wsrpConsumer.setModifiedDate(now);
    }
 else {
      wsrpConsumer.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (wsrpConsumer.isNew()) {
      session.save(wsrpConsumer);
      wsrpConsumer.setNew(false);
    }
 else {
      wsrpConsumer=(WSRPConsumer)session.merge(wsrpConsumer);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WSRPConsumerModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((wsrpConsumerModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wsrpConsumerModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{wsrpConsumerModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((wsrpConsumerModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wsrpConsumerModelImpl.getOriginalUuid(),wsrpConsumerModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{wsrpConsumerModelImpl.getUuid(),wsrpConsumerModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((wsrpConsumerModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wsrpConsumerModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{wsrpConsumerModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
  }
  entityCache.putResult(WSRPConsumerModelImpl.ENTITY_CACHE_ENABLED,WSRPConsumerImpl.class,wsrpConsumer.getPrimaryKey(),wsrpConsumer,false);
  wsrpConsumer.resetOriginalValues();
  return wsrpConsumer;
}

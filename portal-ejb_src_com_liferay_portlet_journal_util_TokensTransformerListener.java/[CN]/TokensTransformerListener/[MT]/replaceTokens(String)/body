{
  Map tokens=getTokens();
  Set tokensSet=tokens.entrySet();
  if (tokensSet.size() == 0) {
    return s;
  }
  List escapedKeysList=new ArrayList();
  List escapedValuesList=new ArrayList();
  List keysList=new ArrayList();
  List valuesList=new ArrayList();
  List tempEscapedKeysList=new ArrayList();
  List tempEscapedValuesList=new ArrayList();
  Iterator itr=tokensSet.iterator();
  while (itr.hasNext()) {
    Map.Entry entry=(Map.Entry)itr.next();
    String key=(String)entry.getKey();
    String value=GetterUtil.getString((String)entry.getValue());
    if (Validator.isNotNull(key)) {
      String escapedKey=StringPool.AT + StringPool.AT + key+ StringPool.AT+ StringPool.AT;
      String actualKey=StringPool.AT + key + StringPool.AT;
      String tempEscapedKey=TEMP_ESCAPED_AT_OPEN + key + TEMP_ESCAPED_AT_CLOSE;
      escapedKeysList.add(escapedKey);
      escapedValuesList.add(tempEscapedKey);
      keysList.add(actualKey);
      valuesList.add(value);
      tempEscapedKeysList.add(tempEscapedKey);
      tempEscapedValuesList.add(actualKey);
    }
  }
  s=StringUtil.replace(s,(String[])escapedKeysList.toArray(new String[0]),(String[])escapedValuesList.toArray(new String[0]));
  s=StringUtil.replace(s,(String[])keysList.toArray(new String[0]),(String[])valuesList.toArray(new String[0]));
  s=StringUtil.replace(s,(String[])tempEscapedKeysList.toArray(new String[0]),(String[])tempEscapedValuesList.toArray(new String[0]));
  return s;
}

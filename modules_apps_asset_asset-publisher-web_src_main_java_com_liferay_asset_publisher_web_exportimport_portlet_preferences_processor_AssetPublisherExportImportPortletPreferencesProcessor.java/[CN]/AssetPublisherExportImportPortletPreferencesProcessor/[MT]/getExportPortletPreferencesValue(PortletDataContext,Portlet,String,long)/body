{
  String uuid=null;
  long groupId=0L;
  Element rootElement=portletDataContext.getExportDataRootElement();
  if (className.equals(AssetCategory.class.getName())) {
    AssetCategory assetCategory=_assetCategoryLocalService.fetchCategory(primaryKeyLong);
    if (assetCategory != null) {
      uuid=assetCategory.getUuid();
      groupId=assetCategory.getGroupId();
      portletDataContext.addReferenceElement(portlet,rootElement,assetCategory,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  }
 else   if (className.equals(AssetVocabulary.class.getName())) {
    AssetVocabulary assetVocabulary=_assetVocabularyLocalService.fetchAssetVocabulary(primaryKeyLong);
    if (assetVocabulary != null) {
      uuid=assetVocabulary.getUuid();
      groupId=assetVocabulary.getGroupId();
      portletDataContext.addReferenceElement(portlet,rootElement,assetVocabulary,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  }
 else   if (className.equals(DDMStructure.class.getName())) {
    DDMStructure ddmStructure=_ddmStructureLocalService.fetchStructure(primaryKeyLong);
    if (ddmStructure != null) {
      uuid=ddmStructure.getUuid();
      groupId=ddmStructure.getGroupId();
      portletDataContext.addReferenceElement(portlet,rootElement,ddmStructure,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  }
 else   if (className.equals(DLFileEntryType.class.getName())) {
    DLFileEntryType dlFileEntryType=_dlFileEntryTypeLocalService.fetchFileEntryType(primaryKeyLong);
    if (dlFileEntryType != null) {
      uuid=dlFileEntryType.getUuid();
      groupId=dlFileEntryType.getGroupId();
      portletDataContext.addReferenceElement(portlet,rootElement,dlFileEntryType,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  }
 else   if (className.equals(Organization.class.getName())) {
    Organization organization=_organizationLocalService.fetchOrganization(primaryKeyLong);
    if (organization != null) {
      uuid=organization.getUuid();
      portletDataContext.addReferenceElement(portlet,rootElement,organization,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true);
    }
  }
  if (Validator.isNull(uuid)) {
    return null;
  }
  return StringUtil.merge(new Object[]{uuid,groupId},StringPool.POUND);
}

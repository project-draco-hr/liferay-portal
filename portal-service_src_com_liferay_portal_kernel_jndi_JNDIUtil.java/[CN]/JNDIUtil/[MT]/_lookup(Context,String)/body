{
  PortalRuntimePermission.checkGetBeanProperty(JNDIUtil.class);
  if (_log.isDebugEnabled()) {
    _log.debug("Lookup " + location);
  }
  Object obj=null;
  try {
    obj=context.lookup(location);
  }
 catch (  NamingException ne1) {
    if (location.indexOf("java:comp/env/") != -1) {
      try {
        String newLocation=StringUtil.replace(location,"java:comp/env/","");
        if (_log.isDebugEnabled()) {
          _log.debug(ne1.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
 catch (      NamingException ne2) {
        String newLocation=StringUtil.replace(location,"comp/env/","");
        if (_log.isDebugEnabled()) {
          _log.debug(ne2.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
    }
 else     if (location.indexOf("java:") != -1) {
      try {
        String newLocation=StringUtil.replace(location,"java:","");
        if (_log.isDebugEnabled()) {
          _log.debug(ne1.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
 catch (      NamingException ne2) {
        String newLocation=StringUtil.replace(location,"java:","java:comp/env/");
        if (_log.isDebugEnabled()) {
          _log.debug(ne2.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
    }
 else     if (location.indexOf("java:") == -1) {
      try {
        String newLocation="java:" + location;
        if (_log.isDebugEnabled()) {
          _log.debug(ne1.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
 catch (      NamingException ne2) {
        String newLocation="java:comp/env/" + location;
        if (_log.isDebugEnabled()) {
          _log.debug(ne2.getMessage());
          _log.debug("Attempt " + newLocation);
        }
        obj=context.lookup(newLocation);
      }
    }
 else {
      throw new NamingException();
    }
  }
  return obj;
}

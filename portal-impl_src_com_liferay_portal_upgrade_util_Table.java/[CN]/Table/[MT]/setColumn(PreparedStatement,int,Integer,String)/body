{
  int t=type.intValue();
  int paramIndex=index + 1;
  if (t == Types.BIGINT) {
    ps.setLong(paramIndex,GetterUtil.getLong(value));
  }
 else   if (t == Types.BOOLEAN) {
    ps.setBoolean(paramIndex,GetterUtil.getBoolean(value));
  }
 else   if ((t == Types.CLOB) || (t == Types.LONGVARCHAR) || (t == Types.VARCHAR)) {
    value=StringUtil.replace(value,_SAFE_TABLE_CHARS[1],_SAFE_TABLE_CHARS[0]);
    ps.setString(paramIndex,value);
  }
 else   if (t == Types.DOUBLE) {
    ps.setDouble(paramIndex,GetterUtil.getDouble(value));
  }
 else   if (t == Types.FLOAT) {
    ps.setFloat(paramIndex,GetterUtil.getFloat(value));
  }
 else   if (t == Types.INTEGER) {
    ps.setInt(paramIndex,GetterUtil.getInteger(value));
  }
 else   if (t == Types.LONGVARBINARY) {
    ps.setBytes(paramIndex,Base64.decode(value));
  }
 else   if (t == Types.SMALLINT) {
    ps.setShort(paramIndex,GetterUtil.getShort(value));
  }
 else   if (t == Types.TIMESTAMP) {
    if (StringPool.NULL.equals(value)) {
      ps.setTimestamp(paramIndex,null);
    }
 else {
      DateFormat df=DateUtil.getISOFormat();
      ps.setTimestamp(paramIndex,new Timestamp(df.parse(value).getTime()));
    }
  }
 else   if (t == Types.TINYINT) {
    ps.setShort(paramIndex,GetterUtil.getShort(value));
  }
 else {
    throw new UpgradeException("Upgrade code using unsupported class type " + type);
  }
}

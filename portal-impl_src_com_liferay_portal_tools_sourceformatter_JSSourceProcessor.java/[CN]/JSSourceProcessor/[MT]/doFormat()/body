{
  String basedir="./";
  DirectoryScanner directoryScanner=new DirectoryScanner();
  directoryScanner.setBasedir(basedir);
  String[] excludes={"**\\js\\aui\\**","**\\js\\editor\\**","**\\js\\misc\\**","**\\tools\\**","**\\VAADIN\\**"};
  excludes=ArrayUtil.append(excludes,getExcludes());
  directoryScanner.setExcludes(excludes);
  directoryScanner.setIncludes(new String[]{"**\\*.js"});
  List<String> fileNames=getSourceFormatterHelper().scanForFiles(directoryScanner);
  for (  String fileName : fileNames) {
    File file=new File(basedir + fileName);
    fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
    String content=getFileUtil().read(file);
    String newContent=trimContent(content,false);
    newContent=StringUtil.replace(newContent,new String[]{"else{","for(","function (","if(","while(","){\n","= new Array();","= new Object();"},new String[]{"else {","for (","function(","if (","while (",") {\n","= [];","= {};"});
    Pattern pattern=Pattern.compile("\t+var \\w+\\, ");
    for (; ; ) {
      Matcher matcher=pattern.matcher(newContent);
      if (!matcher.find()) {
        break;
      }
      String match=matcher.group();
      int pos=match.indexOf("var ");
      StringBundler sb=new StringBundler(4);
      sb.append(match.substring(0,match.length() - 2));
      sb.append(StringPool.SEMICOLON);
      sb.append("\n");
      sb.append(match.substring(0,pos + 4));
      newContent=StringUtil.replace(newContent,match,sb.toString());
    }
    if (newContent.endsWith("\n")) {
      newContent=newContent.substring(0,newContent.length() - 1);
    }
    checkLanguageKeys(fileName,newContent,getLanguageKeyPattern());
    if ((newContent != null) && !content.equals(newContent)) {
      getFileUtil().write(file,newContent);
      getSourceFormatterHelper().printError(fileName,file);
    }
  }
}

{
  File file=new File(BASEDIR + fileName);
  fileName=StringUtil.replace(fileName,StringPool.BACK_SLASH,StringPool.SLASH);
  String content=fileUtil.read(file);
  String newContent=trimContent(content,false);
  newContent=StringUtil.replace(newContent,new String[]{"else{","for(","function (","if(","while(","){\n","= new Array();","= new Object();"},new String[]{"else {","for (","function(","if (","while (",") {\n","= [];","= {};"});
  while (true) {
    Matcher matcher=_multipleVarsOnSingleLinePattern.matcher(newContent);
    if (!matcher.find()) {
      break;
    }
    String match=matcher.group();
    int pos=match.indexOf("var ");
    StringBundler sb=new StringBundler(4);
    sb.append(match.substring(0,match.length() - 2));
    sb.append(StringPool.SEMICOLON);
    sb.append("\n");
    sb.append(match.substring(0,pos + 4));
    newContent=StringUtil.replace(newContent,match,sb.toString());
  }
  if (newContent.endsWith("\n")) {
    newContent=newContent.substring(0,newContent.length() - 1);
  }
  checkLanguageKeys(fileName,newContent,languageKeyPattern);
  if (newContent.contains("debugger.")) {
    processErrorMessage(fileName,"debugger " + fileName);
  }
  compareAndAutoFixContent(file,fileName,content,newContent);
  return newContent;
}

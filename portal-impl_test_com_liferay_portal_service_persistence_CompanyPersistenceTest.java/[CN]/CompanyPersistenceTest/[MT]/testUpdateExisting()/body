{
  long pk=nextLong();
  Company newCompany=_persistence.create(pk);
  newCompany.setAccountId(nextLong());
  newCompany.setWebId(randomString());
  newCompany.setKey(randomString());
  newCompany.setVirtualHost(randomString());
  newCompany.setAllowWildcard(randomBoolean());
  newCompany.setAliases(randomString());
  newCompany.setMx(randomString());
  newCompany.setLogoId(nextLong());
  _persistence.update(newCompany,false);
  Company existingCompany=_persistence.findByPrimaryKey(newCompany.getPrimaryKey());
  assertEquals(existingCompany.getCompanyId(),newCompany.getCompanyId());
  assertEquals(existingCompany.getAccountId(),newCompany.getAccountId());
  assertEquals(existingCompany.getWebId(),newCompany.getWebId());
  assertEquals(existingCompany.getKey(),newCompany.getKey());
  assertEquals(existingCompany.getVirtualHost(),newCompany.getVirtualHost());
  assertEquals(existingCompany.getAllowWildcard(),newCompany.getAllowWildcard());
  assertEquals(existingCompany.getAliases(),newCompany.getAliases());
  assertEquals(existingCompany.getMx(),newCompany.getMx());
  assertEquals(existingCompany.getLogoId(),newCompany.getLogoId());
}

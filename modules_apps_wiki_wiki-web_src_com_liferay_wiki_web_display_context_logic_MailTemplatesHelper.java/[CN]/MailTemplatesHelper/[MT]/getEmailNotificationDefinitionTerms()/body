{
  Map<String,String> definitionTerms=new LinkedHashMap<>();
  ResourceBundle resourceBundle=getResourceBundle();
  definitionTerms.put("[$COMPANY_ID$]",LanguageUtil.get(resourceBundle,"the-company-id-associated-with-the-wiki"));
  definitionTerms.put("[$COMPANY_MX$]",LanguageUtil.get(resourceBundle,"the-company-mx-associated-with-the-wiki"));
  definitionTerms.put("[$COMPANY_NAME$]",LanguageUtil.get(resourceBundle,"the-company-name-associated-with-the-wiki"));
  definitionTerms.put("[$DIFFS_URL$]",LanguageUtil.get(resourceBundle,"the-url-of-the-page-comparing-this-page-content-with-the-" + "previous-version"));
  definitionTerms.put("[$FROM_ADDRESS$]",HtmlUtil.escape(_wikiGroupServiceOverriddenConfiguration.emailFromAddress()));
  definitionTerms.put("[$FROM_NAME$]",HtmlUtil.escape(_wikiGroupServiceOverriddenConfiguration.emailFromName()));
  definitionTerms.put("[$NODE_NAME$]",LanguageUtil.get(resourceBundle,"the-node-in-which-the-page-was-added"));
  definitionTerms.put("[$PAGE_CONTENT$]",LanguageUtil.get(resourceBundle,"the-page-content"));
  definitionTerms.put("[$PAGE_DATE_UPDATE$]",LanguageUtil.get(resourceBundle,"the-date-of-the-modifications"));
  definitionTerms.put("[$PAGE_DIFFS$]",LanguageUtil.get(resourceBundle,"the-page-content-compared-with-the-previous-version-page-" + "content"));
  definitionTerms.put("[$PAGE_ID$]",LanguageUtil.get(resourceBundle,"the-page-id"));
  definitionTerms.put("[$PAGE_SUMMARY$]",LanguageUtil.get(resourceBundle,"the-summary-of-the-page-or-the-modifications"));
  definitionTerms.put("[$PAGE_TITLE$]",LanguageUtil.get(resourceBundle,"the-page-title"));
  definitionTerms.put("[$PAGE_URL$]",LanguageUtil.get(resourceBundle,"the-page-url"));
  definitionTerms.put("[$PAGE_USER_ADDRESS$]",LanguageUtil.get(resourceBundle,"the-email-address-of-the-user-who-added-the-page"));
  definitionTerms.put("[$PAGE_USER_NAME$]",LanguageUtil.get(resourceBundle,"the-user-who-added-the-page"));
  Company company=_wikiRequestHelper.getCompany();
  definitionTerms.put("[$PORTAL_URL$]",company.getVirtualHostname());
  definitionTerms.put("[$PORTLET_NAME$]",_wikiRequestHelper.getPortletTitle());
  definitionTerms.put("[$SITE_NAME$]",LanguageUtil.get(resourceBundle,"the-site-name-associated-with-the-wiki"));
  definitionTerms.put("[$TO_ADDRESS$]",LanguageUtil.get(resourceBundle,"the-address-of-the-email-recipient"));
  definitionTerms.put("[$TO_NAME$]",LanguageUtil.get(resourceBundle,"the-name-of-the-email-recipient"));
  return definitionTerms;
}

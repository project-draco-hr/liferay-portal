{
  long pk=RandomTestUtil.nextLong();
  KBComment newKBComment=_persistence.create(pk);
  newKBComment.setUuid(RandomTestUtil.randomString());
  newKBComment.setGroupId(RandomTestUtil.nextLong());
  newKBComment.setCompanyId(RandomTestUtil.nextLong());
  newKBComment.setUserId(RandomTestUtil.nextLong());
  newKBComment.setUserName(RandomTestUtil.randomString());
  newKBComment.setCreateDate(RandomTestUtil.nextDate());
  newKBComment.setModifiedDate(RandomTestUtil.nextDate());
  newKBComment.setClassNameId(RandomTestUtil.nextLong());
  newKBComment.setClassPK(RandomTestUtil.nextLong());
  newKBComment.setContent(RandomTestUtil.randomString());
  newKBComment.setUserRating(RandomTestUtil.nextInt());
  newKBComment.setLastPublishDate(RandomTestUtil.nextDate());
  newKBComment.setStatus(RandomTestUtil.nextInt());
  _kbComments.add(_persistence.update(newKBComment));
  KBComment existingKBComment=_persistence.findByPrimaryKey(newKBComment.getPrimaryKey());
  Assert.assertEquals(existingKBComment.getUuid(),newKBComment.getUuid());
  Assert.assertEquals(existingKBComment.getKbCommentId(),newKBComment.getKbCommentId());
  Assert.assertEquals(existingKBComment.getGroupId(),newKBComment.getGroupId());
  Assert.assertEquals(existingKBComment.getCompanyId(),newKBComment.getCompanyId());
  Assert.assertEquals(existingKBComment.getUserId(),newKBComment.getUserId());
  Assert.assertEquals(existingKBComment.getUserName(),newKBComment.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingKBComment.getCreateDate()),Time.getShortTimestamp(newKBComment.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingKBComment.getModifiedDate()),Time.getShortTimestamp(newKBComment.getModifiedDate()));
  Assert.assertEquals(existingKBComment.getClassNameId(),newKBComment.getClassNameId());
  Assert.assertEquals(existingKBComment.getClassPK(),newKBComment.getClassPK());
  Assert.assertEquals(existingKBComment.getContent(),newKBComment.getContent());
  Assert.assertEquals(existingKBComment.getUserRating(),newKBComment.getUserRating());
  Assert.assertEquals(Time.getShortTimestamp(existingKBComment.getLastPublishDate()),Time.getShortTimestamp(newKBComment.getLastPublishDate()));
  Assert.assertEquals(existingKBComment.getStatus(),newKBComment.getStatus());
}

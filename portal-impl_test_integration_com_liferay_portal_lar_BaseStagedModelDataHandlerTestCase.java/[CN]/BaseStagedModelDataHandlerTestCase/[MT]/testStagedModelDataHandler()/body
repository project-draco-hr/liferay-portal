{
  initExport();
  Map<String,List<StagedModel>> dependentStagedModelsMap=addDependentStagedModelsMap(stagingGroup);
  StagedModel stagedModel=addStagedModel(stagingGroup,dependentStagedModelsMap);
  StagedModelAssets stagedModelAssets=updateAssetEntry(stagedModel);
  StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,stagedModel);
  validateExport(portletDataContext,stagedModel,dependentStagedModelsMap);
  PortletExporter portletExporter=new PortletExporter();
  portletExporter.exportAssetCategories(portletDataContext);
  portletExporter.exportAssetTags(portletDataContext);
  portletDataContext.addDeletionSystemEventStagedModelTypes(getDeletionSystemEventStagedModelTypes());
  deleteStagedModel(stagedModel,dependentStagedModelsMap,stagingGroup);
  portletDataContext.setEndDate(new Date());
  DeletionSystemEventExporter deletionSystemEventExporter=new DeletionSystemEventExporter();
  deletionSystemEventExporter.exportDeletionSystemEvents(portletDataContext);
  initImport();
  StagedModel exportedStagedModel=readExportedStagedModel(stagedModel);
  Assert.assertNotNull(exportedStagedModel);
  StagedModelDataHandlerUtil.importStagedModel(portletDataContext,exportedStagedModel);
  validateImport(stagedModel,stagedModelAssets,dependentStagedModelsMap,liveGroup);
  portletDataContext.addDeletionSystemEventStagedModelTypes(getDeletionSystemEventStagedModelTypes());
  DeletionSystemEventImporter deletionSystemEventImporter=new DeletionSystemEventImporter();
  deletionSystemEventImporter.importDeletionSystemEvents(portletDataContext);
  validateDeletion(stagedModel,dependentStagedModelsMap,liveGroup);
}

{
  if (!autoUserId) {
    if (Validator.isNull(userId)) {
      throw new UserIdException();
    }
    UserIdValidator userIdValidator=(UserIdValidator)InstancePool.get(PropsUtil.get(PropsUtil.USERS_ID_VALIDATOR));
    if (userIdValidator != null) {
      if (!userIdValidator.validate(userId,companyId)) {
        throw new UserIdException();
      }
    }
    String[] anonymousNames=PrincipalSessionBean.ANONYMOUS_NAMES;
    for (int i=0; i < anonymousNames.length; i++) {
      if (userId.equalsIgnoreCase(anonymousNames[i])) {
        throw new UserIdException();
      }
    }
    String[] companyIds=PortalInstances.getCompanyIds();
    for (int i=0; i < companyIds.length; i++) {
      if (userId.indexOf(companyIds[i]) != -1) {
        throw new UserIdException();
      }
    }
    try {
      User user=UserUtil.findByPrimaryKey(userId);
      if (user != null) {
        throw new DuplicateUserIdException();
      }
    }
 catch (    NoSuchUserException nsue) {
    }
    String[] reservedUserIds=AdminUtil.getReservedUserIds(companyId);
    for (int i=0; i < reservedUserIds.length; i++) {
      if (userId.equalsIgnoreCase(reservedUserIds[i])) {
        throw new ReservedUserIdException();
      }
    }
  }
  if (!autoPassword) {
    if (!password1.equals(password2)) {
      throw new UserPasswordException(UserPasswordException.PASSWORDS_DO_NOT_MATCH);
    }
 else     if (!PwdToolkitUtil.validate(password1) || !PwdToolkitUtil.validate(password2)) {
      throw new UserPasswordException(UserPasswordException.PASSWORD_INVALID);
    }
  }
  if (!Validator.isEmailAddress(emailAddress)) {
    throw new UserEmailAddressException();
  }
 else {
    try {
      User user=UserUtil.findByC_EA(companyId,emailAddress);
      if (user != null) {
        throw new DuplicateUserEmailAddressException();
      }
    }
 catch (    NoSuchUserException nsue) {
    }
    String[] reservedEmailAddresses=AdminUtil.getReservedEmailAddresses(companyId);
    for (int i=0; i < reservedEmailAddresses.length; i++) {
      if (emailAddress.equalsIgnoreCase(reservedEmailAddresses[i])) {
        throw new ReservedUserEmailAddressException();
      }
    }
  }
  if (Validator.isNull(firstName)) {
    throw new ContactFirstNameException();
  }
 else   if (Validator.isNull(lastName)) {
    throw new ContactLastNameException();
  }
}

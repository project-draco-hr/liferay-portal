{
  long pk=RandomTestUtil.nextLong();
  KaleoTaskInstanceToken kaleoTaskInstanceToken=_persistence.create(pk);
  kaleoTaskInstanceToken.setGroupId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setCompanyId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setUserId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setUserName(RandomTestUtil.randomString());
  kaleoTaskInstanceToken.setCreateDate(RandomTestUtil.nextDate());
  kaleoTaskInstanceToken.setModifiedDate(RandomTestUtil.nextDate());
  kaleoTaskInstanceToken.setKaleoDefinitionId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setKaleoInstanceId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setKaleoInstanceTokenId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setKaleoTaskId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setKaleoTaskName(RandomTestUtil.randomString());
  kaleoTaskInstanceToken.setClassName(RandomTestUtil.randomString());
  kaleoTaskInstanceToken.setClassPK(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setCompletionUserId(RandomTestUtil.nextLong());
  kaleoTaskInstanceToken.setCompleted(RandomTestUtil.randomBoolean());
  kaleoTaskInstanceToken.setCompletionDate(RandomTestUtil.nextDate());
  kaleoTaskInstanceToken.setDueDate(RandomTestUtil.nextDate());
  kaleoTaskInstanceToken.setWorkflowContext(RandomTestUtil.randomString());
  _kaleoTaskInstanceTokens.add(_persistence.update(kaleoTaskInstanceToken));
  return kaleoTaskInstanceToken;
}

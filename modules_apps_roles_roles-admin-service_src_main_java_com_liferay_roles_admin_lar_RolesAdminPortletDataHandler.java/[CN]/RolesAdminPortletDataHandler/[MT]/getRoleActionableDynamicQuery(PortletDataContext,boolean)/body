{
  ActionableDynamicQuery actionableDynamicQuery=_roleLocalService.getExportActionableDynamicQuery(portletDataContext);
  actionableDynamicQuery.setAddCriteriaMethod(new ActionableDynamicQuery.AddCriteriaMethod(){
    @Override public void addCriteria(    DynamicQuery dynamicQuery){
      portletDataContext.addDateRangeCriteria(dynamicQuery,"modifiedDate");
      long classNameId=PortalUtil.getClassNameId(Team.class);
      Property classNameIdProperty=PropertyFactoryUtil.forName("classNameId");
      dynamicQuery.add(classNameIdProperty.ne(classNameId));
    }
  }
);
  @SuppressWarnings("unchecked") final ActionableDynamicQuery.PerformActionMethod<Role> performActionMethod=(ActionableDynamicQuery.PerformActionMethod<Role>)actionableDynamicQuery.getPerformActionMethod();
  actionableDynamicQuery.setPerformActionMethod(new ActionableDynamicQuery.PerformActionMethod<Role>(){
    @Override public void performAction(    Role role) throws PortalException {
      if (!export) {
        return;
      }
      long defaultUserId=_userLocalService.getDefaultUserId(portletDataContext.getCompanyId());
      if (!portletDataContext.getBooleanParameter(NAMESPACE,"system-roles") && (role.getUserId() == defaultUserId)) {
        return;
      }
      performActionMethod.performAction(role);
    }
  }
);
  return actionableDynamicQuery;
}

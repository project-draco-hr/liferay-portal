{
  Object[] finderArgs=new Object[]{groupId,classNameId,classPK,name,type,endPeriod};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_C_C_N_T_E,finderArgs,this);
  }
  if (result == null) {
    StringBundler query=new StringBundler(7);
    query.append(_SQL_SELECT_SOCIALACTIVITYCOUNTER_WHERE);
    query.append(_FINDER_COLUMN_G_C_C_N_T_E_GROUPID_2);
    query.append(_FINDER_COLUMN_G_C_C_N_T_E_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_G_C_C_N_T_E_CLASSPK_2);
    if (name == null) {
      query.append(_FINDER_COLUMN_G_C_C_N_T_E_NAME_1);
    }
 else {
      if (name.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_C_C_N_T_E_NAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_C_C_N_T_E_NAME_2);
      }
    }
    query.append(_FINDER_COLUMN_G_C_C_N_T_E_TYPE_2);
    query.append(_FINDER_COLUMN_G_C_C_N_T_E_ENDPERIOD_2);
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(classNameId);
      qPos.add(classPK);
      if (name != null) {
        qPos.add(name);
      }
      qPos.add(type);
      qPos.add(endPeriod);
      List<SocialActivityCounter> list=q.list();
      result=list;
      SocialActivityCounter socialActivityCounter=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_N_T_E,finderArgs,list);
      }
 else {
        socialActivityCounter=list.get(0);
        cacheResult(socialActivityCounter);
        if ((socialActivityCounter.getGroupId() != groupId) || (socialActivityCounter.getClassNameId() != classNameId) || (socialActivityCounter.getClassPK() != classPK)|| (socialActivityCounter.getName() == null)|| !socialActivityCounter.getName().equals(name)|| (socialActivityCounter.getType() != type)|| (socialActivityCounter.getEndPeriod() != endPeriod)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_C_C_N_T_E,finderArgs,socialActivityCounter);
        }
      }
      return socialActivityCounter;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_C_C_N_T_E,finderArgs);
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (SocialActivityCounter)result;
    }
  }
}

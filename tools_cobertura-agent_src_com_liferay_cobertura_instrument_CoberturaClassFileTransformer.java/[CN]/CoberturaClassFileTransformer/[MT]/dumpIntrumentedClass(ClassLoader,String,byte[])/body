{
  if (!Boolean.getBoolean("junit.code.coverage.dump")) {
    return;
  }
  File logFile=new File(_dumpDir,"instrument.log");
  File dumpDir=_dumpDir;
  int index=className.lastIndexOf(CharPool.SLASH);
  if (index != -1) {
    dumpDir=new File(dumpDir + "/" + classLoader.toString(),className.substring(0,index));
    className=className.substring(index + 1);
  }
  dumpDir.mkdirs();
  File classFile=new File(dumpDir,className + ".class");
  OutputStream outputStream=null;
  try {
    outputStream=new FileOutputStream(classFile);
    outputStream.write(data);
  }
  finally {
    if (outputStream != null) {
      outputStream.close();
    }
  }
  FileWriter fileWriter=null;
  try {
    fileWriter=new FileWriter(logFile,true);
    fileWriter.write("Instrumented " + className + " sourced "+ classLoader+ ", dumped to "+ classFile.getAbsolutePath()+ "\n");
  }
  finally {
    if (fileWriter != null) {
      fileWriter.close();
    }
  }
}

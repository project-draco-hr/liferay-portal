{
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  if (!CalEventPermission.contains(permissionChecker,activity.getClassPK(),ActionKeys.VIEW)) {
    return null;
  }
  String groupName=StringPool.BLANK;
  if (activity.getGroupId() != themeDisplay.getScopeGroupId()) {
    groupName=getGroupName(activity.getGroupId(),themeDisplay);
  }
  String creatorUserName=getUserName(activity.getUserId(),themeDisplay);
  int activityType=activity.getType();
  CalEvent event=CalEventLocalServiceUtil.getEvent(activity.getClassPK());
  String link=themeDisplay.getPortalURL() + themeDisplay.getPathMain() + "/calendar/find_event?redirect="+ HtmlUtil.escapeURL(themeDisplay.getURLCurrent())+ "&eventId="+ activity.getClassPK();
  String titlePattern=null;
  if (activityType == CalendarActivityKeys.ADD_EVENT) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-calendar-add-event";
    }
 else {
      titlePattern="activity-calendar-add-event-in";
    }
  }
 else   if (activityType == CalendarActivityKeys.UPDATE_EVENT) {
    if (Validator.isNull(groupName)) {
      titlePattern="activity-calendar-update-event";
    }
 else {
      titlePattern="activity-calendar-update-event-in";
    }
  }
  String eventTitle=wrapLink(link,HtmlUtil.escape(event.getTitle()));
  Object[] titleArguments=new Object[]{groupName,creatorUserName,eventTitle};
  String title=themeDisplay.translate(titlePattern,titleArguments);
  String body=StringPool.BLANK;
  return new SocialActivityFeedEntry(link,title,body);
}

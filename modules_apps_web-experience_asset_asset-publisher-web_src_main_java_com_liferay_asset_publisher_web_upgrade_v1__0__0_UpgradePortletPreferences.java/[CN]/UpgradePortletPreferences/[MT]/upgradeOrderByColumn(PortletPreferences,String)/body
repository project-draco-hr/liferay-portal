{
  String value=GetterUtil.getString(portletPreferences.getValue(column,null));
  if (Validator.isNotNull(value) && (value.startsWith(DDM_FIELD_OLD_PREFIX) || value.startsWith(DDM_FIELD_PREFIX))) {
    String[] values=new String[0];
    boolean isOldFormat=false;
    if (value.startsWith(DDM_FIELD_OLD_PREFIX)) {
      isOldFormat=true;
      values=StringUtil.split(value,DDM_FIELD_OLD_SEPARATOR);
    }
 else {
      values=StringUtil.split(value,DDM_FIELD_SEPARATOR);
    }
    if (values.length == 4 && isOldFormat) {
      value=StringUtil.replace(value,DDM_FIELD_OLD_SEPARATOR,DDM_FIELD_SEPARATOR);
    }
 else     if (values.length == 3) {
      long structureId=GetterUtil.getLong(values[1]);
      JSONObject ddmStructureJSONObject=getDDMStructureJSONObject(structureId);
      JSONArray fieldsJSONArray=ddmStructureJSONObject.getJSONArray("fields");
      JSONObject fieldJSONObject=getFieldJSONObject(fieldsJSONArray,values[2]);
      if (fieldJSONObject != null && Validator.isNotNull(fieldJSONObject.getString("indexType"))) {
        StringBundler sb=new StringBundler(7);
        sb.append(values[0]);
        sb.append(DDM_FIELD_SEPARATOR);
        sb.append(fieldJSONObject.getString("indexType"));
        sb.append(DDM_FIELD_SEPARATOR);
        sb.append(values[1]);
        sb.append(DDM_FIELD_SEPARATOR);
        sb.append(values[2]);
        value=sb.toString();
      }
    }
    portletPreferences.setValue(column,value);
  }
}

{
  PropsUtil.addProperties(portalProperties);
  if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {
    _log.debug("Portlet locales " + portalProperties.getProperty(LOCALES));
    _log.debug("Merged locales " + PropsUtil.get(LOCALES));
    _log.debug("Merged locales array length " + PropsUtil.getArray(LOCALES).length);
  }
  resetPortalProperties(servletContextName,portalProperties,true);
  if (portalProperties.containsKey(PropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {
    String controlPanelEntryClassName=portalProperties.getProperty(PropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);
    ControlPanelEntry controlPanelEntry=(ControlPanelEntry)newInstance(portletClassLoader,ControlPanelEntry.class,controlPanelEntryClassName);
    DefaultControlPanelEntryFactory.setInstance(controlPanelEntry);
  }
  if (portalProperties.containsKey(PropsKeys.DL_HOOK_IMPL)) {
    String dlHookClassName=portalProperties.getProperty(PropsKeys.DL_HOOK_IMPL);
    com.liferay.documentlibrary.util.Hook dlHook=(com.liferay.documentlibrary.util.Hook)newInstance(portletClassLoader,com.liferay.documentlibrary.util.Hook.class,dlHookClassName);
    com.liferay.documentlibrary.util.HookFactory.setInstance(dlHook);
  }
  if (portalProperties.containsKey(PropsKeys.IMAGE_HOOK_IMPL)) {
    String imageHookClassName=portalProperties.getProperty(PropsKeys.IMAGE_HOOK_IMPL);
    com.liferay.portal.image.Hook imageHook=(com.liferay.portal.image.Hook)newInstance(portletClassLoader,com.liferay.portal.image.Hook.class,imageHookClassName);
    com.liferay.portal.image.HookFactory.setInstance(imageHook);
  }
  if (portalProperties.containsKey(PropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {
    String attributesTransformerClassName=portalProperties.getProperty(PropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL);
    AttributesTransformer attributesTransformer=(AttributesTransformer)newInstance(portletClassLoader,AttributesTransformer.class,attributesTransformerClassName);
    AttributesTransformerFactory.setInstance(attributesTransformer);
  }
  if (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {
    String mailHookClassName=portalProperties.getProperty(PropsKeys.MAIL_HOOK_IMPL);
    com.liferay.mail.util.Hook mailHook=(com.liferay.mail.util.Hook)newInstance(portletClassLoader,com.liferay.mail.util.Hook.class,mailHookClassName);
    com.liferay.mail.util.HookFactory.setInstance(mailHook);
  }
  if (portalProperties.containsKey(PropsKeys.SANITIZER_IMPL)) {
    String sanitizerClassName=portalProperties.getProperty(PropsKeys.SANITIZER_IMPL);
    Sanitizer sanitizer=(Sanitizer)newInstance(portletClassLoader,Sanitizer.class,sanitizerClassName);
    SanitizerWrapper sanitizerWrapper=(SanitizerWrapper)SanitizerUtil.getSanitizer();
    sanitizerWrapper.setSanitizer(sanitizer);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_EMAIL_ADDRESS_GENERATOR)) {
    String emailAddressGeneratorClassName=portalProperties.getProperty(PropsKeys.USERS_EMAIL_ADDRESS_GENERATOR);
    EmailAddressGenerator emailAddressGenerator=(EmailAddressGenerator)newInstance(portletClassLoader,EmailAddressGenerator.class,emailAddressGeneratorClassName);
    EmailAddressGeneratorFactory.setInstance(emailAddressGenerator);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_GENERATOR)) {
    String fullNameGeneratorClassName=portalProperties.getProperty(PropsKeys.USERS_FULL_NAME_GENERATOR);
    FullNameGenerator fullNameGenerator=(FullNameGenerator)newInstance(portletClassLoader,FullNameGenerator.class,fullNameGeneratorClassName);
    FullNameGeneratorFactory.setInstance(fullNameGenerator);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_FULL_NAME_VALIDATOR)) {
    String fullNameValidatorClassName=portalProperties.getProperty(PropsKeys.USERS_FULL_NAME_VALIDATOR);
    FullNameValidator fullNameValidator=(FullNameValidator)newInstance(portletClassLoader,FullNameValidator.class,fullNameValidatorClassName);
    FullNameValidatorFactory.setInstance(fullNameValidator);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_SCREEN_NAME_GENERATOR)) {
    String screenNameGeneratorClassName=portalProperties.getProperty(PropsKeys.USERS_SCREEN_NAME_GENERATOR);
    ScreenNameGenerator screenNameGenerator=(ScreenNameGenerator)newInstance(portletClassLoader,ScreenNameGenerator.class,screenNameGeneratorClassName);
    ScreenNameGeneratorFactory.setInstance(screenNameGenerator);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {
    String screenNameValidatorClassName=portalProperties.getProperty(PropsKeys.USERS_SCREEN_NAME_VALIDATOR);
    ScreenNameValidator screenNameValidator=(ScreenNameValidator)newInstance(portletClassLoader,ScreenNameValidator.class,screenNameValidatorClassName);
    ScreenNameValidatorFactory.setInstance(screenNameValidator);
  }
  if (portalProperties.containsKey(PropsKeys.RELEASE_INFO_BUILD_NUMBER) || portalProperties.containsKey(PropsKeys.UPGRADE_PROCESSES)) {
    updateRelease(servletContextName,portletClassLoader,portalProperties);
  }
}

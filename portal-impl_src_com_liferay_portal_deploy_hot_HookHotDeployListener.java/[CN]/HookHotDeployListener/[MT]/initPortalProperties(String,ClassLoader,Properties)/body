{
  PropsUtil.addProperties(portalProperties);
  if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {
    _log.debug("Portlet locales " + portalProperties.getProperty(LOCALES));
    _log.debug("Merged locales " + PropsUtil.get(LOCALES));
    _log.debug("Merged locales array length " + PropsUtil.getArray(LOCALES).length);
  }
  resetPortalProperties(servletContextName,portalProperties,true);
  if (portalProperties.containsKey(PropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS)) {
    String controlPanelEntryClassName=portalProperties.getProperty(PropsKeys.CONTROL_PANEL_DEFAULT_ENTRY_CLASS);
    ControlPanelEntry controlPanelEntry=(ControlPanelEntry)portletClassLoader.loadClass(controlPanelEntryClassName).newInstance();
    controlPanelEntry=(ControlPanelEntry)Proxy.newProxyInstance(portletClassLoader,new Class[]{ControlPanelEntry.class},new ContextClassLoaderBeanHandler(controlPanelEntry,portletClassLoader));
    DefaultControlPanelEntryFactory.setInstance(controlPanelEntry);
  }
  if (portalProperties.containsKey(PropsKeys.DL_HOOK_IMPL)) {
    String dlHookClassName=portalProperties.getProperty(PropsKeys.DL_HOOK_IMPL);
    com.liferay.documentlibrary.util.Hook dlHook=(com.liferay.documentlibrary.util.Hook)portletClassLoader.loadClass(dlHookClassName).newInstance();
    dlHook=(com.liferay.documentlibrary.util.Hook)Proxy.newProxyInstance(portletClassLoader,new Class[]{com.liferay.documentlibrary.util.Hook.class},new ContextClassLoaderBeanHandler(dlHook,portletClassLoader));
    com.liferay.documentlibrary.util.HookFactory.setInstance(dlHook);
  }
  if (portalProperties.containsKey(PropsKeys.IMAGE_HOOK_IMPL)) {
    String imageHookClassName=portalProperties.getProperty(PropsKeys.IMAGE_HOOK_IMPL);
    com.liferay.portal.image.Hook imageHook=(com.liferay.portal.image.Hook)portletClassLoader.loadClass(imageHookClassName).newInstance();
    imageHook=(com.liferay.portal.image.Hook)Proxy.newProxyInstance(portletClassLoader,new Class[]{com.liferay.portal.image.Hook.class},new ContextClassLoaderBeanHandler(imageHook,portletClassLoader));
    com.liferay.portal.image.HookFactory.setInstance(imageHook);
  }
  if (portalProperties.containsKey(PropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL)) {
    String attributesTransformerClassName=portalProperties.getProperty(PropsKeys.LDAP_ATTRS_TRANSFORMER_IMPL);
    AttributesTransformer attributesTransformer=(AttributesTransformer)portletClassLoader.loadClass(attributesTransformerClassName).newInstance();
    attributesTransformer=(AttributesTransformer)Proxy.newProxyInstance(portletClassLoader,new Class[]{AttributesTransformer.class},new ContextClassLoaderBeanHandler(attributesTransformer,portletClassLoader));
    AttributesTransformerFactory.setInstance(attributesTransformer);
  }
  if (portalProperties.containsKey(PropsKeys.MAIL_HOOK_IMPL)) {
    String mailHookClassName=portalProperties.getProperty(PropsKeys.MAIL_HOOK_IMPL);
    com.liferay.mail.util.Hook mailHook=(com.liferay.mail.util.Hook)portletClassLoader.loadClass(mailHookClassName).newInstance();
    mailHook=(com.liferay.mail.util.Hook)Proxy.newProxyInstance(portletClassLoader,new Class[]{com.liferay.mail.util.Hook.class},new ContextClassLoaderBeanHandler(mailHook,portletClassLoader));
    com.liferay.mail.util.HookFactory.setInstance(mailHook);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_SCREEN_NAME_GENERATOR)) {
    String screenNameGeneratorClassName=portalProperties.getProperty(PropsKeys.USERS_SCREEN_NAME_GENERATOR);
    ScreenNameGenerator screenNameGenerator=(ScreenNameGenerator)portletClassLoader.loadClass(screenNameGeneratorClassName).newInstance();
    screenNameGenerator=(ScreenNameGenerator)Proxy.newProxyInstance(portletClassLoader,new Class[]{ScreenNameGenerator.class},new ContextClassLoaderBeanHandler(screenNameGenerator,portletClassLoader));
    ScreenNameGeneratorFactory.setInstance(screenNameGenerator);
  }
  if (portalProperties.containsKey(PropsKeys.USERS_SCREEN_NAME_VALIDATOR)) {
    String screenNameValidatorClassName=portalProperties.getProperty(PropsKeys.USERS_SCREEN_NAME_VALIDATOR);
    ScreenNameValidator screenNameValidator=(ScreenNameValidator)portletClassLoader.loadClass(screenNameValidatorClassName).newInstance();
    screenNameValidator=(ScreenNameValidator)Proxy.newProxyInstance(portletClassLoader,new Class[]{ScreenNameValidator.class},new ContextClassLoaderBeanHandler(screenNameValidator,portletClassLoader));
    ScreenNameValidatorFactory.setInstance(screenNameValidator);
  }
  if (portalProperties.containsKey(PropsKeys.RELEASE_INFO_BUILD_NUMBER) || portalProperties.containsKey(PropsKeys.UPGRADE_PROCESSES)) {
    updateRelease(servletContextName,portletClassLoader,portalProperties);
  }
}

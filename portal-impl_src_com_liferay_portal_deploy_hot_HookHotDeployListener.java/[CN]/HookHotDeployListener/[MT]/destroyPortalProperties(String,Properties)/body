{
  PropsUtil.removeProperties(portalProperties);
  if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) {
    _log.debug("Portlet locales " + portalProperties.getProperty(LOCALES));
    _log.debug("Original locales " + PropsUtil.get(LOCALES));
    _log.debug("Original locales array length " + PropsUtil.getArray(LOCALES).length);
  }
  resetPortalProperties(servletContextName,portalProperties,false);
  if (portalProperties.containsKey(PropsKeys.ASSET_PUBLISHER_ASSET_ENTRY_QUERY_PROCESSORS)) {
    String[] assetQueryProcessorClassNames=StringUtil.split(portalProperties.getProperty(PropsKeys.ASSET_PUBLISHER_ASSET_ENTRY_QUERY_PROCESSORS));
    for (    String assetQueryProcessorClassName : assetQueryProcessorClassNames) {
      AssetPublisherUtil.unregisterAssetQueryProcessor(assetQueryProcessorClassName);
      if (_log.isDebugEnabled()) {
        _log.debug("Unregistered asset query processor " + assetQueryProcessorClassName);
      }
    }
  }
  if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) {
    CaptchaImpl captchaImpl=null;
    Captcha captcha=CaptchaUtil.getCaptcha();
    if (captcha instanceof DoPrivilegedBean) {
      DoPrivilegedBean doPrivilegedBean=(DoPrivilegedBean)captcha;
      captchaImpl=(CaptchaImpl)doPrivilegedBean.getActualBean();
    }
 else {
      captchaImpl=(CaptchaImpl)captcha;
    }
    captchaImpl.setCaptcha(null);
  }
  if (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) {
    DLFileEntryProcessorContainer dlFileEntryProcessorContainer=_dlFileEntryProcessorContainerMap.remove(servletContextName);
    dlFileEntryProcessorContainer.unregisterDLProcessors();
  }
  if (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) {
    DLRepositoryContainer dlRepositoryContainer=_dlRepositoryContainerMap.remove(servletContextName);
    dlRepositoryContainer.unregisterRepositoryFactories();
  }
  if (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) {
    AntivirusScannerWrapper antivirusScannerWrapper=(AntivirusScannerWrapper)AntivirusScannerUtil.getAntivirusScanner();
    antivirusScannerWrapper.setAntivirusScanner(null);
  }
  if (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) {
    StoreFactory.setInstance(null);
  }
  Set<String> liferayFilterClassNames=LiferayFilterTracker.getClassNames();
  for (  String liferayFilterClassName : liferayFilterClassNames) {
    if (!portalProperties.containsKey(liferayFilterClassName)) {
      continue;
    }
    boolean filterEnabled=GetterUtil.getBoolean(PropsUtil.get(liferayFilterClassName));
    Set<LiferayFilter> liferayFilters=LiferayFilterTracker.getLiferayFilters(liferayFilterClassName);
    for (    LiferayFilter liferayFilter : liferayFilters) {
      liferayFilter.setFilterEnabled(filterEnabled);
    }
  }
}

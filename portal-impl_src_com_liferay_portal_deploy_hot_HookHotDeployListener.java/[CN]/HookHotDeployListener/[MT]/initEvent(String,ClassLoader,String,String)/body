{
  if (eventName.equals(APPLICATION_STARTUP_EVENTS)) {
    Class<?> clazz=portletClassLoader.loadClass(eventClassName);
    SimpleAction simpleAction=(SimpleAction)clazz.newInstance();
    simpleAction=new InvokerSimpleAction(simpleAction,portletClassLoader);
    Long companyId=CompanyThreadLocal.getCompanyId();
    try {
      long[] companyIds=PortalInstances.getCompanyIds();
      for (      long curCompanyId : companyIds) {
        CompanyThreadLocal.setCompanyId(curCompanyId);
        simpleAction.run(new String[]{String.valueOf(curCompanyId)});
      }
    }
  finally {
      CompanyThreadLocal.setCompanyId(companyId);
    }
  }
  Registry registry=RegistryUtil.getRegistry();
  Map<Object,ServiceRegistration<?>> serviceRegistrations=getServiceRegistrations(servletContextName);
  if (_propsKeysEvents.contains(eventName)) {
    Class<?> clazz=portletClassLoader.loadClass(eventClassName);
    Action action=(Action)clazz.newInstance();
    action=new InvokerAction(action,portletClassLoader);
    Map<String,Object> properties=new HashMap<String,Object>();
    properties.put("key",eventName);
    ServiceRegistration<LifecycleAction> serviceRegistration=registry.registerService(LifecycleAction.class,action,properties);
    serviceRegistrations.put(eventClassName,serviceRegistration);
  }
  if (_propsKeysSessionEvents.contains(eventName)) {
    Class<?> clazz=portletClassLoader.loadClass(eventClassName);
    SessionAction sessionAction=(SessionAction)clazz.newInstance();
    sessionAction=new InvokerSessionAction(sessionAction,portletClassLoader);
    Map<String,Object> properties=new HashMap<String,Object>();
    properties.put("key",eventName);
    ServiceRegistration<LifecycleAction> serviceRegistration=registry.registerService(LifecycleAction.class,sessionAction,properties);
    serviceRegistrations.put(eventClassName,serviceRegistration);
  }
}

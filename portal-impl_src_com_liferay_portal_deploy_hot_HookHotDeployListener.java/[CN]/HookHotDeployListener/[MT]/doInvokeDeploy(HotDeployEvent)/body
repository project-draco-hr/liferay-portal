{
  ServletContext servletContext=hotDeployEvent.getServletContext();
  String servletContextName=servletContext.getServletContextName();
  if (_log.isDebugEnabled()) {
    _log.debug("Invoking deploy for " + servletContextName);
  }
  String xml=HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-hook.xml"));
  if (xml == null) {
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Registering hook for " + servletContextName);
  }
  _servletContextNames.add(servletContextName);
  Document document=SAXReaderUtil.read(xml,true);
  Element rootElement=document.getRootElement();
  ClassLoader portletClassLoader=hotDeployEvent.getContextClassLoader();
  initPortalProperties(servletContextName,portletClassLoader,rootElement);
  initLanguageProperties(servletContextName,portletClassLoader,rootElement);
  initCustomJspDir(servletContext,servletContextName,portletClassLoader,hotDeployEvent.getPluginPackage(),rootElement);
  initIndexerPostProcessors(servletContextName,portletClassLoader,rootElement);
  initServices(servletContextName,portletClassLoader,rootElement);
  initServletFilters(servletContext,servletContextName,portletClassLoader,rootElement);
  initStrutsActions(servletContextName,portletClassLoader,rootElement);
  List<Element> modelListenerElements=rootElement.elements("model-listener");
  for (  Element modelListenerElement : modelListenerElements) {
    String modelName=modelListenerElement.elementText("model-name");
    String modelListenerClassName=modelListenerElement.elementText("model-listener-class");
    initModelListener(servletContextName,portletClassLoader,modelName,modelListenerClassName);
  }
  List<Element> eventElements=rootElement.elements("event");
  for (  Element eventElement : eventElements) {
    String eventName=eventElement.elementText("event-type");
    String eventClassName=eventElement.elementText("event-class");
    initEvent(servletContextName,portletClassLoader,eventName,eventClassName);
  }
  registerClpMessageListeners(servletContext,portletClassLoader);
  DirectServletRegistryUtil.clearServlets();
  FileAvailabilityUtil.reset();
  if (_log.isInfoEnabled()) {
    _log.info("Hook for " + servletContextName + " is available for use");
  }
}

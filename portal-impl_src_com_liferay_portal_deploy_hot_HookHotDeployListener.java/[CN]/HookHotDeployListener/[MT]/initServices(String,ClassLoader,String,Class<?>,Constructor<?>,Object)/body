{
  AdvisedSupport advisedSupport=ServiceBeanAopProxy.getAdvisedSupport(serviceProxy);
  TargetSource targetSource=advisedSupport.getTargetSource();
  Object previousService=targetSource.getTarget();
  if (ProxyUtil.isProxyClass(previousService.getClass())) {
    InvocationHandler invocationHandler=ProxyUtil.getInvocationHandler(previousService);
    if (invocationHandler instanceof ClassLoaderBeanHandler) {
      ClassLoaderBeanHandler classLoaderBeanHandler=(ClassLoaderBeanHandler)invocationHandler;
      previousService=classLoaderBeanHandler.getBean();
    }
  }
  Object nextService=serviceImplConstructor.newInstance(previousService);
  Object nextTarget=ProxyUtil.newProxyInstance(portletClassLoader,new Class<?>[]{serviceTypeClass},new ClassLoaderBeanHandler(nextService,portletClassLoader));
  TargetSource nextTargetSource=new SingletonTargetSource(nextTarget);
  advisedSupport.setTargetSource(nextTargetSource);
  _servicesContainer.addServiceBag(servletContextName,portletClassLoader,serviceType,serviceTypeClass,serviceImplConstructor,previousService);
  ServiceBeanAopCacheManagerUtil.reset();
}

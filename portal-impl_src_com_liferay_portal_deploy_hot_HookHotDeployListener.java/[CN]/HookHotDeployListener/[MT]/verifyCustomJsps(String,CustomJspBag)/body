{
  if (_customJspBagsMap.isEmpty() || _customJspBagsMap.containsKey(currentServletContextName) || !currentCustomJspBag.isCustomJspGlobal()) {
    return;
  }
  String currentCustomJspDir=currentCustomJspBag.getCustomJspDir();
  Set<String> currentCustomJsps=new HashSet<>();
  for (  String currentCustomJsp : currentCustomJspBag.getCustomJsps()) {
    String portalJsp=getPortalJspName(currentCustomJsp,currentCustomJspDir);
    currentCustomJsps.add(portalJsp);
  }
  Map<String,String> collidingCustomJsps=new HashMap<>();
  for (  Map.Entry<String,CustomJspBag> entry : _customJspBagsMap.entrySet()) {
    CustomJspBag customJspBag=(CustomJspBag)entry.getValue();
    if (!customJspBag.isCustomJspGlobal()) {
      continue;
    }
    String servletContextName=(String)entry.getKey();
    String customJspDir=customJspBag.getCustomJspDir();
    List<String> customJsps=customJspBag.getCustomJsps();
    for (    String customJsp : customJsps) {
      String portalJsp=getPortalJspName(customJsp,customJspDir);
      if (currentCustomJsps.contains(portalJsp)) {
        collidingCustomJsps.put(portalJsp,servletContextName);
      }
    }
  }
  if ((collidingCustomJsps != null) && !collidingCustomJsps.isEmpty()) {
    _log.error(currentServletContextName + " is colliding with the " + "currently installed hooks");
    if (_log.isDebugEnabled()) {
      Log log=SanitizerLogWrapper.allowCRLF(_log);
      StringBundler sb=new StringBundler(collidingCustomJsps.size() * 4 + 3);
      sb.append("Colliding JSP files in ");
      sb.append(currentServletContextName);
      sb.append(StringPool.NEW_LINE);
      for (      Map.Entry<String,String> entry : collidingCustomJsps.entrySet()) {
        sb.append((String)entry.getKey());
        sb.append(" with ");
        sb.append((String)entry.getValue());
        sb.append(StringPool.NEW_LINE);
      }
      sb.setIndex(sb.index() - 1);
      log.debug(sb.toString());
    }
    throw new DuplicateCustomJspException();
  }
}

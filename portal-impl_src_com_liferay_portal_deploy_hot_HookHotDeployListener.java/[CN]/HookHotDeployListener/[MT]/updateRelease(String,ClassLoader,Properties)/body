{
  int buildNumber=GetterUtil.getInteger(unfilteredPortalProperties.getProperty(PropsKeys.RELEASE_INFO_BUILD_NUMBER));
  if (buildNumber <= 0) {
    _log.error("Skipping upgrade processes for " + servletContextName + " because \"release.info.build.number\" is not specified");
    return;
  }
  Release release=null;
  try {
    release=ReleaseLocalServiceUtil.getRelease(servletContextName,buildNumber);
  }
 catch (  PortalException pe) {
    int previousBuildNumber=GetterUtil.getInteger(unfilteredPortalProperties.getProperty(PropsKeys.RELEASE_INFO_PREVIOUS_BUILD_NUMBER),buildNumber);
    release=ReleaseLocalServiceUtil.addRelease(servletContextName,previousBuildNumber);
  }
  if (buildNumber == release.getBuildNumber()) {
    if (_log.isDebugEnabled()) {
      _log.debug("Skipping upgrade processes for " + servletContextName + " because it is already up to date");
    }
  }
 else   if (buildNumber < release.getBuildNumber()) {
    throw new UpgradeException("Skipping upgrade processes for " + servletContextName + " because you are trying to upgrade with an older version");
  }
 else {
    String[] upgradeProcessClassNames=StringUtil.split(unfilteredPortalProperties.getProperty(PropsKeys.UPGRADE_PROCESSES));
    UpgradeProcessUtil.upgradeProcess(release.getBuildNumber(),upgradeProcessClassNames,portletClassLoader);
  }
  ReleaseLocalServiceUtil.updateRelease(release.getReleaseId(),buildNumber,null,true);
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  String treeId=ParamUtil.getString(request,"treeId");
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  List<Layout> layouts=getLayouts(request);
  List<String> checkedLayoutsIds=getCheckedLayouts(request,treeId);
  List<String> openLayoutsIds=getOpenLayouts(request,treeId);
  for (  Layout layout : layouts) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("uuid",layout.getUuid());
    jsonObject.put("contentDisplayPage",layout.isContentDisplayPage());
    jsonObject.put("hasChildren",layout.hasChildren());
    jsonObject.put("layoutId",layout.getLayoutId());
    jsonObject.put("name",layout.getName(themeDisplay.getLocale()));
    jsonObject.put("parentLayoutId",layout.getParentLayoutId());
    jsonObject.put("plid",layout.getPlid());
    jsonObject.put("priority",layout.getPriority());
    jsonObject.put("privateLayout",layout.isPrivateLayout());
    jsonObject.put("type",layout.getType());
    if (Validator.isNotNull(treeId)) {
      jsonObject.put("checked",checkedLayoutsIds.contains(String.valueOf(layout.getLayoutId())));
      jsonObject.put("expanded",openLayoutsIds.contains(String.valueOf(layout.getLayoutId())));
    }
    LayoutRevision layoutRevision=LayoutStagingUtil.getLayoutRevision(layout);
    if (layoutRevision != null) {
      long layoutSetBranchId=layoutRevision.getLayoutSetBranchId();
      LayoutSetBranch layoutSetBranch=LayoutSetBranchLocalServiceUtil.getLayoutSetBranch(layoutSetBranchId);
      jsonObject.put("layoutSetBranchId",layoutSetBranchId);
      jsonObject.put("layoutSetBranchName",layoutSetBranch.getName());
      jsonObject.put("layoutRevisionId",layoutRevision.getLayoutRevisionId());
    }
    jsonArray.put(jsonObject);
  }
  return jsonArray.toString();
}

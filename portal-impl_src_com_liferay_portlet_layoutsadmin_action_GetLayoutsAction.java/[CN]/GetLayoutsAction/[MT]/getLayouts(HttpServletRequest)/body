{
  String treeId=ParamUtil.getString(request,"treeId");
  long groupId=ParamUtil.getLong(request,"groupId");
  boolean privateLayout=ParamUtil.getBoolean(request,"privateLayout");
  long layoutId=ParamUtil.getLong(request,"layoutId");
  int start=ParamUtil.getInteger(request,"start");
  int end=start + PropsValues.LAYOUT_MANAGE_PAGES_INITIAL_CHILDREN;
  List<Layout> results=new ArrayList<Layout>();
  List<Layout> layouts=LayoutLocalServiceUtil.getLayouts(groupId,privateLayout,layoutId,start,end);
  results.addAll(layouts);
  List<String> openLayoutsIds=getOpenLayouts(request,treeId);
  if (!openLayoutsIds.isEmpty()) {
    for (    Layout layout : layouts) {
      for (      String openLayoutId : openLayoutsIds) {
        if (PortalUtil.isLayoutDescendant(layout,Long.valueOf(openLayoutId))) {
          List<Layout> openLayouts=LayoutLocalServiceUtil.getLayouts(groupId,privateLayout,Long.valueOf(openLayoutId),start,end);
          results.addAll(openLayouts);
        }
      }
    }
  }
  return results;
}

{
  String name=roleElement.attributeValue("name");
  Role role=null;
  if (name.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) {
    name=name.substring(PermissionExporter.ROLE_TEAM_PREFIX.length());
    String description=roleElement.attributeValue("description");
    Team team=null;
    try {
      team=TeamLocalServiceUtil.getTeam(groupId,name);
    }
 catch (    NoSuchTeamException nste) {
      team=TeamLocalServiceUtil.addTeam(userId,groupId,name,description,new ServiceContext());
    }
    role=RoleLocalServiceUtil.getTeamRole(companyId,team.getTeamId());
    return role;
  }
  String uuid=roleElement.attributeValue("uuid");
  role=layoutCache.getUuidRole(companyId,uuid);
  if (role == null) {
    role=layoutCache.getNameRole(companyId,name);
  }
  if ((role != null) || MergeLayoutPrototypesThreadLocal.isInProgress()) {
    return role;
  }
  String title=roleElement.attributeValue("title");
  Map<Locale,String> titleMap=LocalizationUtil.getLocalizationMap(title);
  String description=roleElement.attributeValue("description");
  Map<Locale,String> descriptionMap=LocalizationUtil.getLocalizationMap(description);
  int type=GetterUtil.getInteger(roleElement.attributeValue("type"));
  String subtype=roleElement.attributeValue("subtype");
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setUuid(uuid);
  role=RoleLocalServiceUtil.addRole(userId,null,0,name,titleMap,descriptionMap,type,subtype,serviceContext);
  return role;
}

{
  long pk=ServiceTestUtil.nextLong();
  LayoutFriendlyURL newLayoutFriendlyURL=_persistence.create(pk);
  newLayoutFriendlyURL.setUuid(ServiceTestUtil.randomString());
  newLayoutFriendlyURL.setGroupId(ServiceTestUtil.nextLong());
  newLayoutFriendlyURL.setCompanyId(ServiceTestUtil.nextLong());
  newLayoutFriendlyURL.setPlid(ServiceTestUtil.nextLong());
  newLayoutFriendlyURL.setPrivateLayout(ServiceTestUtil.randomBoolean());
  newLayoutFriendlyURL.setFriendlyURL(ServiceTestUtil.randomString());
  newLayoutFriendlyURL.setLanguageId(ServiceTestUtil.randomString());
  _persistence.update(newLayoutFriendlyURL);
  LayoutFriendlyURL existingLayoutFriendlyURL=_persistence.findByPrimaryKey(newLayoutFriendlyURL.getPrimaryKey());
  Assert.assertEquals(existingLayoutFriendlyURL.getUuid(),newLayoutFriendlyURL.getUuid());
  Assert.assertEquals(existingLayoutFriendlyURL.getLayoutFriendlyURLId(),newLayoutFriendlyURL.getLayoutFriendlyURLId());
  Assert.assertEquals(existingLayoutFriendlyURL.getGroupId(),newLayoutFriendlyURL.getGroupId());
  Assert.assertEquals(existingLayoutFriendlyURL.getCompanyId(),newLayoutFriendlyURL.getCompanyId());
  Assert.assertEquals(existingLayoutFriendlyURL.getPlid(),newLayoutFriendlyURL.getPlid());
  Assert.assertEquals(existingLayoutFriendlyURL.getPrivateLayout(),newLayoutFriendlyURL.getPrivateLayout());
  Assert.assertEquals(existingLayoutFriendlyURL.getFriendlyURL(),newLayoutFriendlyURL.getFriendlyURL());
  Assert.assertEquals(existingLayoutFriendlyURL.getLanguageId(),newLayoutFriendlyURL.getLanguageId());
}

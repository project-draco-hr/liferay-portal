{
  String articleId=null;
  String title=null;
  String description=null;
  String content=null;
  boolean andOperator=false;
  if (Validator.isNotNull(keywords)) {
    articleId=keywords;
    title=keywords;
    description=keywords;
    content=keywords;
  }
 else {
    andOperator=true;
  }
  if (params != null) {
    params.put("keywords",keywords);
  }
  SearchContext searchContext=new SearchContext();
  searchContext.setAndSearch(andOperator);
  Map<String,Serializable> attributes=new HashMap<>();
  attributes.put(Field.ARTICLE_ID,articleId);
  attributes.put(Field.CLASS_NAME_ID,classNameId);
  attributes.put(Field.CONTENT,content);
  attributes.put(Field.DESCRIPTION,description);
  attributes.put(Field.STATUS,getStatus());
  attributes.put(Field.TITLE,title);
  attributes.put("ddmStructureKey",ddmStructureKey);
  attributes.put("ddmTemplateKey",ddmTemplateKey);
  attributes.put("params",params);
  searchContext.setAttributes(attributes);
  searchContext.setCompanyId(companyId);
  searchContext.setEnd(end);
  searchContext.setFolderIds(folderIds);
  searchContext.setGroupIds(new long[]{groupId});
  searchContext.setIncludeDiscussions(GetterUtil.getBoolean(params.get("includeDiscussions"),true));
  if (params != null) {
    keywords=(String)params.remove("keywords");
    if (Validator.isNotNull(keywords)) {
      searchContext.setKeywords(keywords);
    }
  }
  searchContext.setAttribute("head",Boolean.FALSE.toString());
  searchContext.setAttribute("params",params);
  searchContext.setEnd(end);
  searchContext.setFolderIds(folderIds);
  searchContext.setStart(start);
  QueryConfig queryConfig=new QueryConfig();
  queryConfig.setHighlightEnabled(false);
  queryConfig.setScoreEnabled(false);
  searchContext.setQueryConfig(queryConfig);
  if (sort != null) {
    searchContext.setSorts(sort);
  }
  searchContext.setStart(start);
  return searchContext;
}

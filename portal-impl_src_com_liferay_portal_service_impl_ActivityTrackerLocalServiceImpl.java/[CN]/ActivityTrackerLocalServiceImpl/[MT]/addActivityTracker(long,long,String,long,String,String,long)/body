{
  User user=userPersistence.findByPrimaryKey(userId);
  long classNameId=PortalUtil.getClassNameId(className);
  String receiverUserName=StringPool.BLANK;
  if (receiverUserId > 0) {
    try {
      User receiverUser=userPersistence.findByPrimaryKey(receiverUserId);
      receiverUserName=receiverUser.getFullName();
    }
 catch (    NoSuchUserException nsue) {
      if (_log.isWarnEnabled()) {
        _log.warn(nsue);
      }
    }
  }
  long activityTrackerId=counterLocalService.increment(ActivityTracker.class.getName());
  ActivityTracker activityTracker=activityTrackerPersistence.create(activityTrackerId);
  activityTracker.setGroupId(groupId);
  activityTracker.setCompanyId(user.getCompanyId());
  activityTracker.setUserId(user.getUserId());
  activityTracker.setUserName(user.getFullName());
  activityTracker.setCreateDate(new Date());
  activityTracker.setClassNameId(classNameId);
  activityTracker.setClassPK(classPK);
  activityTracker.setActivity(activity);
  activityTracker.setExtraData(extraData);
  activityTracker.setReceiverUserId(receiverUserId);
  activityTracker.setReceiverUserName(receiverUserName);
  activityTrackerPersistence.update(activityTracker,false);
  return activityTracker;
}

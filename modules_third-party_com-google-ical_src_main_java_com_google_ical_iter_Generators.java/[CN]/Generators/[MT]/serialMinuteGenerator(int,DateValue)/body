{
  return new Generator(){
    int minute=(dtStart instanceof TimeValue ? ((TimeValue)dtStart).minute() : 0) - interval;
    int hour=dtStart instanceof TimeValue ? ((TimeValue)dtStart).hour() : 0;
    int day=dtStart.day();
    int month=dtStart.month();
    int year=dtStart.year();
    @Override boolean generate(    DTBuilder builder){
      int nminute;
      if (hour != builder.hour || day != builder.day || month != builder.month || year != builder.year) {
        int minutesBetween=(daysBetween(builder,year,month,day) * 24 + builder.hour - hour) * 60 - minute;
        nminute=((interval - (minutesBetween % interval)) % interval);
        if (nminute > 59) {
          return false;
        }
        hour=builder.hour;
        day=builder.day;
        month=builder.month;
        year=builder.year;
      }
 else {
        nminute=minute + interval;
        if (nminute > 59) {
          return false;
        }
      }
      minute=builder.minute=nminute;
      return true;
    }
    @Override public String toString(){
      return "serialMinuteGenerator:" + interval;
    }
  }
;
}

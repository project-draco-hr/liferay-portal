{
  int startHour=dtStart instanceof TimeValue ? ((TimeValue)dtStart).hour() : 0;
  hours=Util.uniquify(hours);
  if (hours.length == 0) {
    hours=new int[]{startHour};
  }
  final int[] uhours=hours;
  if (uhours.length == 1) {
    final int hour=uhours[0];
    return new SingleValueGenerator(){
      int year;
      int month;
      int day;
      @Override boolean generate(      DTBuilder builder){
        if ((year != builder.year) || (month != builder.month) || (day != builder.day)) {
          year=builder.year;
          month=builder.month;
          day=builder.day;
          builder.hour=hour;
          return true;
        }
        return false;
      }
      @Override int getValue(){
        return hour;
      }
      @Override public String toString(){
        return "byHourGenerator:" + hour;
      }
    }
;
  }
  return new Generator(){
    int i;
    int year=dtStart.year();
    int month=dtStart.month();
    int day=dtStart.day();
{
      int hour=dtStart instanceof TimeValue ? ((TimeValue)dtStart).hour() : 0;
      while (i < uhours.length && uhours[i] < hour) {
        ++i;
      }
    }
    @Override boolean generate(    DTBuilder builder){
      if ((year != builder.year) || (month != builder.month) || (day != builder.day)) {
        i=0;
        year=builder.year;
        month=builder.month;
        day=builder.day;
      }
      if (i >= uhours.length) {
        return false;
      }
      builder.hour=uhours[i++];
      return true;
    }
    @Override public String toString(){
      return "byHourGenerator:" + Arrays.toString(uhours);
    }
  }
;
}

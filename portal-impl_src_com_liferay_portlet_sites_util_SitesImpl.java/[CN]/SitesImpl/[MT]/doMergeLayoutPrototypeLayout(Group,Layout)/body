{
  if (!layout.isLayoutPrototypeLinkActive() || group.isLayoutPrototype() || group.hasStagingGroup()) {
    return;
  }
  long lastMergeTime=GetterUtil.getLong(layout.getTypeSettingsProperty(LAST_MERGE_TIME));
  LayoutPrototype layoutPrototype=LayoutPrototypeLocalServiceUtil.getLayoutPrototypeByUuidAndCompanyId(layout.getLayoutPrototypeUuid(),layout.getCompanyId());
  Layout layoutPrototypeLayout=layoutPrototype.getLayout();
  Date modifiedDate=layoutPrototypeLayout.getModifiedDate();
  if (lastMergeTime >= modifiedDate.getTime()) {
    return;
  }
  UnicodeProperties prototypeTypeSettingsProperties=layoutPrototypeLayout.getTypeSettingsProperties();
  int mergeFailCount=GetterUtil.getInteger(prototypeTypeSettingsProperties.getProperty(MERGE_FAIL_COUNT));
  if (mergeFailCount > PropsValues.LAYOUT_PROTOTYPE_MERGE_FAIL_THRESHOLD) {
    if (_log.isWarnEnabled()) {
      StringBundler sb=new StringBundler(6);
      sb.append("Merge not performed because the fail threshold ");
      sb.append("was reached for layoutPrototypeId ");
      sb.append(layoutPrototype.getLayoutPrototypeId());
      sb.append(" and layoutId ");
      sb.append(layoutPrototypeLayout.getLayoutId());
      sb.append(". Update the count in the database to try again.");
      _log.warn(sb.toString());
    }
    return;
  }
  String owner=PortalUUIDUtil.generate();
  try {
    Lock lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layout.getPlid()),owner);
    if (!owner.equals(lock.getOwner())) {
      Date createDate=lock.getCreateDate();
      if ((System.currentTimeMillis() - createDate.getTime()) >= PropsValues.LAYOUT_PROTOTYPE_MERGE_LOCK_MAX_TIME) {
        lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layout.getPlid()),lock.getOwner(),owner);
        if (!owner.equals(lock.getOwner())) {
          return;
        }
      }
 else {
        return;
      }
    }
  }
 catch (  Exception e) {
    return;
  }
  try {
    applyLayoutPrototype(layoutPrototype,layout,true);
  }
 catch (  Exception e) {
    _log.error(e,e);
    prototypeTypeSettingsProperties.setProperty(MERGE_FAIL_COUNT,String.valueOf(++mergeFailCount));
    LayoutUtil.updateImpl(layoutPrototypeLayout);
  }
 finally {
    LockLocalServiceUtil.unlock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layout.getPlid()),owner);
  }
}

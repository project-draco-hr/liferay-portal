{
  User user=UserLocalServiceUtil.getUser(userId);
  Map<String,String[]> parameterMap=getLayoutSetPrototypeParameters(serviceContext);
  parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS,new String[]{Boolean.FALSE.toString()});
  Map<String,Serializable> exportSettingsMap=ExportImportConfigurationSettingsMapFactory.buildSettingsMap(user.getUserId(),sourceLayout.getGroupId(),sourceLayout.isPrivateLayout(),new long[]{sourceLayout.getLayoutId()},parameterMap,user.getLocale(),user.getTimeZone());
  ExportImportConfiguration exportConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(user.getUserId(),sourceLayout.getGroupId(),StringPool.BLANK,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT,exportSettingsMap,WorkflowConstants.STATUS_DRAFT,new ServiceContext());
  File file=ExportImportLocalServiceUtil.exportLayoutsAsFile(exportConfiguration);
  try {
    Map<String,Serializable> importSettingsMap=ExportImportConfigurationSettingsMapFactory.buildImportSettingsMap(userId,targetLayout.getGroupId(),targetLayout.isPrivateLayout(),null,parameterMap,user.getLocale(),user.getTimeZone(),file.getName());
    ExportImportConfiguration importConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(userId,targetLayout.getGroupId(),StringPool.BLANK,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_IMPORT_LAYOUT,importSettingsMap,WorkflowConstants.STATUS_DRAFT,new ServiceContext());
    ExportImportLocalServiceUtil.importLayouts(importConfiguration,file);
  }
  finally {
    file.delete();
  }
}

{
  File file=null;
  StringBundler sb=new StringBundler(importData ? 4 : 3);
  sb.append(_TEMP_DIR);
  sb.append(layoutSetPrototype.getUuid());
  if (importData) {
    sb.append("-data");
  }
  sb.append(".lar");
  File cacheFile=new File(sb.toString());
  if (cacheFile.exists() && !importData) {
    Date modifiedDate=layoutSetPrototype.getModifiedDate();
    if (cacheFile.lastModified() >= modifiedDate.getTime()) {
      if (_log.isDebugEnabled()) {
        _log.debug("Using cached layout set prototype LAR file " + cacheFile.getAbsolutePath());
      }
      file=cacheFile;
    }
  }
  User user=UserLocalServiceUtil.getDefaultUser(layoutSetPrototype.getCompanyId());
  boolean newFile=false;
  if (file == null) {
    List<Layout> layoutSetPrototypeLayouts=LayoutLocalServiceUtil.getLayouts(layoutSetPrototype.getGroupId(),true);
    Map<String,Serializable> settingsMap=ExportImportConfigurationSettingsMapFactory.buildSettingsMap(user.getUserId(),layoutSetPrototype.getGroupId(),true,ExportImportHelperUtil.getLayoutIds(layoutSetPrototypeLayouts),parameterMap,user.getLocale(),user.getTimeZone());
    ExportImportConfiguration exportImportConfiguration=ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(user.getUserId(),layoutSetPrototype.getGroupId(),StringPool.BLANK,StringPool.BLANK,ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT,settingsMap,WorkflowConstants.STATUS_DRAFT,new ServiceContext());
    file=LayoutLocalServiceUtil.exportLayoutsAsFile(exportImportConfiguration);
    newFile=true;
  }
  LayoutLocalServiceUtil.importLayouts(user.getUserId(),groupId,privateLayout,parameterMap,file);
  if (newFile) {
    try {
      FileUtil.copyFile(file,cacheFile);
      if (_log.isDebugEnabled()) {
        _log.debug("Copied " + file.getAbsolutePath() + " to "+ cacheFile.getAbsolutePath());
      }
    }
 catch (    Exception e) {
      _log.error("Unable to copy file " + file.getAbsolutePath() + " to "+ cacheFile.getAbsolutePath(),e);
    }
  }
}

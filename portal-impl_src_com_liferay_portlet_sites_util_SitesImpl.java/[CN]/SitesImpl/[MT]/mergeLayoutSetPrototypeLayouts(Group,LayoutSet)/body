{
  if (!isLayoutSetMergeable(group,layoutSet)) {
    return;
  }
  UnicodeProperties settingsProperties=layoutSet.getSettingsProperties();
  long lastMergeTime=GetterUtil.getLong(settingsProperties.getProperty(LAST_MERGE_TIME));
  LayoutSetPrototype layoutSetPrototype=LayoutSetPrototypeLocalServiceUtil.getLayoutSetPrototypeByUuidAndCompanyId(layoutSet.getLayoutSetPrototypeUuid(),layoutSet.getCompanyId());
  LayoutSet layoutSetPrototypeLayoutSet=layoutSetPrototype.getLayoutSet();
  UnicodeProperties layoutSetPrototypeSettingsProperties=layoutSetPrototypeLayoutSet.getSettingsProperties();
  int mergeFailCount=GetterUtil.getInteger(layoutSetPrototypeSettingsProperties.getProperty(MERGE_FAIL_COUNT));
  String owner=PortalUUIDUtil.generate();
  try {
    Lock lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),owner);
    if (!owner.equals(lock.getOwner())) {
      Date createDate=lock.getCreateDate();
      if ((System.currentTimeMillis() - createDate.getTime()) >= PropsValues.LAYOUT_SET_PROTOTYPE_MERGE_LOCK_MAX_TIME) {
        lock=LockLocalServiceUtil.lock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),lock.getOwner(),owner);
        if (!owner.equals(lock.getOwner())) {
          return;
        }
      }
 else {
        return;
      }
    }
  }
 catch (  Exception e) {
    return;
  }
  try {
    boolean importData=true;
    long lastResetTime=GetterUtil.getLong(settingsProperties.getProperty(LAST_RESET_TIME));
    if ((lastMergeTime > 0) || (lastResetTime > 0)) {
      importData=false;
    }
    Map<String,String[]> parameterMap=getLayoutSetPrototypesParameters(importData);
    layoutSet=LayoutSetLocalServiceUtil.getLayoutSet(layoutSet.getLayoutSetId());
    removeMergeFailFriendlyURLLayouts(layoutSet);
    importLayoutSetPrototype(layoutSetPrototype,layoutSet.getGroupId(),layoutSet.isPrivateLayout(),parameterMap,importData);
  }
 catch (  Exception e) {
    _log.error(e,e);
    layoutSetPrototypeSettingsProperties.setProperty(MERGE_FAIL_COUNT,String.valueOf(++mergeFailCount));
    LayoutSetUtil.updateImpl(layoutSetPrototypeLayoutSet);
  }
 finally {
    LockLocalServiceUtil.unlock(LayoutLocalServiceVirtualLayoutsAdvice.class.getName(),String.valueOf(layoutSet.getLayoutSetId()),owner);
  }
}

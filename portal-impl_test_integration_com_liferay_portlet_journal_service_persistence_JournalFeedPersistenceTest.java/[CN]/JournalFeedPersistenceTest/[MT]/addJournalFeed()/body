{
  long pk=ServiceTestUtil.nextLong();
  JournalFeed journalFeed=_persistence.create(pk);
  journalFeed.setUuid(ServiceTestUtil.randomString());
  journalFeed.setGroupId(ServiceTestUtil.nextLong());
  journalFeed.setCompanyId(ServiceTestUtil.nextLong());
  journalFeed.setUserId(ServiceTestUtil.nextLong());
  journalFeed.setUserName(ServiceTestUtil.randomString());
  journalFeed.setCreateDate(ServiceTestUtil.nextDate());
  journalFeed.setModifiedDate(ServiceTestUtil.nextDate());
  journalFeed.setFeedId(ServiceTestUtil.randomString());
  journalFeed.setName(ServiceTestUtil.randomString());
  journalFeed.setDescription(ServiceTestUtil.randomString());
  journalFeed.setType(ServiceTestUtil.randomString());
  journalFeed.setStructureId(ServiceTestUtil.randomString());
  journalFeed.setTemplateId(ServiceTestUtil.randomString());
  journalFeed.setRendererTemplateId(ServiceTestUtil.randomString());
  journalFeed.setDelta(ServiceTestUtil.nextInt());
  journalFeed.setOrderByCol(ServiceTestUtil.randomString());
  journalFeed.setOrderByType(ServiceTestUtil.randomString());
  journalFeed.setTargetLayoutFriendlyUrl(ServiceTestUtil.randomString());
  journalFeed.setTargetPortletId(ServiceTestUtil.randomString());
  journalFeed.setContentField(ServiceTestUtil.randomString());
  journalFeed.setFeedFormat(ServiceTestUtil.randomString());
  journalFeed.setFeedVersion(ServiceTestUtil.nextDouble());
  _persistence.update(journalFeed);
  return journalFeed;
}

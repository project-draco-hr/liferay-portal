{
  long pk=ServiceTestUtil.nextLong();
  JournalFeed newJournalFeed=_persistence.create(pk);
  newJournalFeed.setUuid(ServiceTestUtil.randomString());
  newJournalFeed.setGroupId(ServiceTestUtil.nextLong());
  newJournalFeed.setCompanyId(ServiceTestUtil.nextLong());
  newJournalFeed.setUserId(ServiceTestUtil.nextLong());
  newJournalFeed.setUserName(ServiceTestUtil.randomString());
  newJournalFeed.setCreateDate(ServiceTestUtil.nextDate());
  newJournalFeed.setModifiedDate(ServiceTestUtil.nextDate());
  newJournalFeed.setFeedId(ServiceTestUtil.randomString());
  newJournalFeed.setName(ServiceTestUtil.randomString());
  newJournalFeed.setDescription(ServiceTestUtil.randomString());
  newJournalFeed.setType(ServiceTestUtil.randomString());
  newJournalFeed.setStructureId(ServiceTestUtil.randomString());
  newJournalFeed.setTemplateId(ServiceTestUtil.randomString());
  newJournalFeed.setRendererTemplateId(ServiceTestUtil.randomString());
  newJournalFeed.setDelta(ServiceTestUtil.nextInt());
  newJournalFeed.setOrderByCol(ServiceTestUtil.randomString());
  newJournalFeed.setOrderByType(ServiceTestUtil.randomString());
  newJournalFeed.setTargetLayoutFriendlyUrl(ServiceTestUtil.randomString());
  newJournalFeed.setTargetPortletId(ServiceTestUtil.randomString());
  newJournalFeed.setContentField(ServiceTestUtil.randomString());
  newJournalFeed.setFeedType(ServiceTestUtil.randomString());
  newJournalFeed.setFeedVersion(ServiceTestUtil.nextDouble());
  _persistence.update(newJournalFeed,false);
  JournalFeed existingJournalFeed=_persistence.findByPrimaryKey(newJournalFeed.getPrimaryKey());
  Assert.assertEquals(existingJournalFeed.getUuid(),newJournalFeed.getUuid());
  Assert.assertEquals(existingJournalFeed.getId(),newJournalFeed.getId());
  Assert.assertEquals(existingJournalFeed.getGroupId(),newJournalFeed.getGroupId());
  Assert.assertEquals(existingJournalFeed.getCompanyId(),newJournalFeed.getCompanyId());
  Assert.assertEquals(existingJournalFeed.getUserId(),newJournalFeed.getUserId());
  Assert.assertEquals(existingJournalFeed.getUserName(),newJournalFeed.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingJournalFeed.getCreateDate()),Time.getShortTimestamp(newJournalFeed.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingJournalFeed.getModifiedDate()),Time.getShortTimestamp(newJournalFeed.getModifiedDate()));
  Assert.assertEquals(existingJournalFeed.getFeedId(),newJournalFeed.getFeedId());
  Assert.assertEquals(existingJournalFeed.getName(),newJournalFeed.getName());
  Assert.assertEquals(existingJournalFeed.getDescription(),newJournalFeed.getDescription());
  Assert.assertEquals(existingJournalFeed.getType(),newJournalFeed.getType());
  Assert.assertEquals(existingJournalFeed.getStructureId(),newJournalFeed.getStructureId());
  Assert.assertEquals(existingJournalFeed.getTemplateId(),newJournalFeed.getTemplateId());
  Assert.assertEquals(existingJournalFeed.getRendererTemplateId(),newJournalFeed.getRendererTemplateId());
  Assert.assertEquals(existingJournalFeed.getDelta(),newJournalFeed.getDelta());
  Assert.assertEquals(existingJournalFeed.getOrderByCol(),newJournalFeed.getOrderByCol());
  Assert.assertEquals(existingJournalFeed.getOrderByType(),newJournalFeed.getOrderByType());
  Assert.assertEquals(existingJournalFeed.getTargetLayoutFriendlyUrl(),newJournalFeed.getTargetLayoutFriendlyUrl());
  Assert.assertEquals(existingJournalFeed.getTargetPortletId(),newJournalFeed.getTargetPortletId());
  Assert.assertEquals(existingJournalFeed.getContentField(),newJournalFeed.getContentField());
  Assert.assertEquals(existingJournalFeed.getFeedType(),newJournalFeed.getFeedType());
  AssertUtils.assertEquals(existingJournalFeed.getFeedVersion(),newJournalFeed.getFeedVersion());
}

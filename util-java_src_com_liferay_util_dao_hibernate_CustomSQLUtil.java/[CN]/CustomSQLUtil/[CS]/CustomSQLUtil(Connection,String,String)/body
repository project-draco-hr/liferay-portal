{
  try {
    if (Validator.isNotNull(functionIsNull) && Validator.isNotNull(functionIsNotNull)) {
      _functionIsNull=functionIsNull;
      _functionIsNotNull=functionIsNotNull;
      if (_log.isDebugEnabled()) {
        _log.info("functionIsNull is manually set to " + functionIsNull);
        _log.info("functionIsNotNull is manually set to " + functionIsNotNull);
      }
    }
 else     if (con != null) {
      DatabaseMetaData metaData=con.getMetaData();
      String dbName=GetterUtil.getString(metaData.getDatabaseProductName());
      if (_log.isInfoEnabled()) {
        _log.info("Database name " + dbName);
      }
      if (dbName.startsWith(DB2)) {
        _vendorDB2=true;
        _functionIsNull=DB2_FUNCTION_IS_NULL;
        _functionIsNotNull=DB2_FUNCTION_IS_NOT_NULL;
        if (_log.isInfoEnabled()) {
          _log.info("Detected DB2 with database name " + dbName);
        }
      }
 else       if (dbName.startsWith(INFORMIX)) {
        _vendorInformix=true;
        _functionIsNull=INFORMIX_FUNCTION_IS_NULL;
        _functionIsNotNull=INFORMIX_FUNCTION_IS_NOT_NULL;
        if (_log.isInfoEnabled()) {
          _log.info("Detected Informix with database name " + dbName);
        }
      }
 else       if (dbName.startsWith(MYSQL)) {
        _vendorMySQL=true;
        if (_log.isInfoEnabled()) {
          _log.info("Detected MySQL with database name " + dbName);
        }
      }
 else       if (dbName.startsWith(SYBASE_1) || dbName.equals(SYBASE_2)) {
        _vendorSybase=true;
        _functionIsNull=SYBASE_FUNCTION_IS_NULL;
        _functionIsNotNull=SYBASE_FUNCTION_IS_NOT_NULL;
        if (_log.isInfoEnabled()) {
          _log.info("Detected Sybase with database name " + dbName);
        }
      }
 else       if (dbName.startsWith(ORACLE)) {
        _vendorOracle=true;
        if (_log.isInfoEnabled()) {
          _log.info("Detected Oracle with database name " + dbName);
        }
      }
 else {
        if (_log.isWarnEnabled()) {
          _log.warn("Unable to detect database with name " + dbName);
        }
      }
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
 finally {
    DataAccess.cleanUp(con);
  }
  _sqlPool=CollectionFactory.getHashMap();
  try {
    ClassLoader classLoader=getClass().getClassLoader();
    String[] configs=getConfigs();
    for (int i=0; i < configs.length; i++) {
      read(classLoader,configs[i]);
    }
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

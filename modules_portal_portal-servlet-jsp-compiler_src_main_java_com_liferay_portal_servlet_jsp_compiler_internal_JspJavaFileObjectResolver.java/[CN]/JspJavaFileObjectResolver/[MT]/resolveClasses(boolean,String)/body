{
  List<JavaFileObject> javaFileObjects=new ArrayList<>();
  int options=0;
  if (recurse) {
    options=BundleWiring.LISTRESOURCES_RECURSE;
  }
  javaFileObjects.addAll(toJavaFileObjects(_jspBundleWiring.getBundle(),_jspBundleWiring.listResources(packagePath,"*.class",options)));
  String packageName=packagePath.replace(CharPool.SLASH,CharPool.PERIOD);
  for (  Entry<BundleWiring,Set<String>> entry : _bundleWiringPackageNames.entrySet()) {
    Set<String> packageNames=entry.getValue();
    if (packageNames.contains(packageName)) {
      javaFileObjects.addAll(doResolveClasses(entry.getKey(),packagePath,options));
    }
  }
  if (javaFileObjects.isEmpty()) {
    return toJavaFileObjects(_bundleWiring.getBundle(),_bundleWiring.listResources(packagePath,"*.class",options));
  }
  return javaFileObjects;
}

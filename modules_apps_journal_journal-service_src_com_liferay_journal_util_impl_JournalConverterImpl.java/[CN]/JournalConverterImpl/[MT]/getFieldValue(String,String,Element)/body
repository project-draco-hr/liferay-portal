{
  Serializable serializable=null;
  if (DDMImpl.TYPE_DDM_DOCUMENTLIBRARY.equals(type)) {
    serializable=getDocumentLibraryValue(dynamicContentElement.getText());
  }
 else   if (DDMImpl.TYPE_DDM_IMAGE.equals(type)) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    jsonObject.put("alt",dynamicContentElement.attributeValue("alt"));
    jsonObject.put("data",dynamicContentElement.getText());
    jsonObject.put("name",dynamicContentElement.attributeValue("name"));
    jsonObject.put("title",dynamicContentElement.attributeValue("title"));
    serializable=jsonObject.toString();
  }
 else   if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(type)) {
    String[] values=StringUtil.split(dynamicContentElement.getText(),CharPool.AT);
    if (ArrayUtil.isEmpty(values)) {
      return StringPool.BLANK;
    }
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    if (values.length > 2) {
      jsonObject.put("groupId",values[2]);
    }
    jsonObject.put("layoutId",values[0]);
    if (values[1].equals("public")) {
      jsonObject.put("privateLayout",false);
    }
 else {
      jsonObject.put("privateLayout",true);
    }
    serializable=jsonObject.toString();
  }
 else   if (DDMImpl.TYPE_SELECT.equals(type)) {
    JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
    List<Element> optionElements=dynamicContentElement.elements("option");
    if (!optionElements.isEmpty()) {
      for (      Element optionElement : optionElements) {
        jsonArray.put(optionElement.getText());
      }
    }
 else {
      jsonArray.put(dynamicContentElement.getText());
    }
    serializable=jsonArray.toString();
  }
 else {
    serializable=FieldConstants.getSerializable(dataType,dynamicContentElement.getText());
  }
  return serializable;
}

{
  if (!context.isWithinDateRange(message.getModifiedDate())) {
    return;
  }
  if (message.getStatus() != WorkflowConstants.STATUS_APPROVED) {
    return;
  }
  exportParentCategory(context,categoriesElement,message.getCategoryId());
  String path=getMessagePath(context,message);
  if (context.isPathNotProcessed(path)) {
    Element messageElement=messagesElement.addElement("message");
    messageElement.addAttribute("path",path);
    message.setUserUuid(message.getUserUuid());
    message.setPriority(message.getPriority());
    context.addPermissions(MBMessage.class,message.getMessageId());
    context.addLocks(MBThread.class,String.valueOf(message.getThreadId()));
    if (context.getBooleanParameter(_NAMESPACE,"ratings")) {
      context.addRatingsEntries(MBMessage.class,message.getMessageId());
    }
    if (context.getBooleanParameter(_NAMESPACE,"tags")) {
      context.addAssetTags(MBMessage.class,message.getMessageId());
    }
    if (context.getBooleanParameter(_NAMESPACE,"attachments") && message.isAttachments()) {
      for (      String attachment : message.getAttachmentsFiles()) {
        int pos=attachment.lastIndexOf(CharPool.FORWARD_SLASH);
        String name=attachment.substring(pos + 1);
        String binPath=getMessageAttachementBinPath(context,message,name);
        Element attachmentElement=messageElement.addElement("attachment");
        attachmentElement.addAttribute("name",name);
        attachmentElement.addAttribute("bin-path",binPath);
        byte[] bytes=DLServiceUtil.getFile(context.getCompanyId(),CompanyConstants.SYSTEM,attachment);
        context.addZipEntry(binPath,bytes);
      }
      message.setAttachmentsDir(message.getAttachmentsDir());
    }
    if (context.getBooleanParameter(_NAMESPACE,"message-flags")) {
      List<MBMessageFlag> messageFlags=MBMessageFlagUtil.findByMessageId(message.getMessageId());
      for (      MBMessageFlag messageFlag : messageFlags) {
        exportMessageFlag(context,messageFlagsElement,messageFlag);
      }
    }
    context.addZipEntry(path,message);
  }
}

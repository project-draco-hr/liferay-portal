{
  portletDataContext.importPermissions("com.liferay.portlet.messageboards",portletDataContext.getSourceGroupId(),portletDataContext.getScopeGroupId());
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element categoriesElement=rootElement.element("categories");
  for (  Element categoryElement : categoriesElement.elements("category")) {
    String path=categoryElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    MBCategory category=(MBCategory)portletDataContext.getZipEntryAsObject(path);
    Map<String,Serializable> expandoAttributes=getExpandoAttributes(portletDataContext,categoryElement);
    importCategory(portletDataContext,category,expandoAttributes);
  }
  Element messagesElement=rootElement.element("messages");
  for (  Element messageElement : messagesElement.elements("message")) {
    String path=messageElement.attributeValue("path");
    if (!portletDataContext.isPathNotProcessed(path)) {
      continue;
    }
    MBMessage message=(MBMessage)portletDataContext.getZipEntryAsObject(path);
    Map<String,Serializable> expandoAttributes=getExpandoAttributes(portletDataContext,messageElement);
    importMessage(portletDataContext,messageElement,message,expandoAttributes);
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"message-flags")) {
    Element messageFlagsElement=rootElement.element("message-flags");
    for (    Element messageFlagElement : messageFlagsElement.elements("message-flag")) {
      String path=messageFlagElement.attributeValue("path");
      if (!portletDataContext.isPathNotProcessed(path)) {
        continue;
      }
      MBMessageFlag messageFlag=(MBMessageFlag)portletDataContext.getZipEntryAsObject(path);
      importMessageFlag(portletDataContext,messageFlag);
    }
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"user-bans")) {
    Element userBansElement=rootElement.element("user-bans");
    for (    Element userBanElement : userBansElement.elements("user-ban")) {
      String path=userBanElement.attributeValue("path");
      if (!portletDataContext.isPathNotProcessed(path)) {
        continue;
      }
      MBBan ban=(MBBan)portletDataContext.getZipEntryAsObject(path);
      importBan(portletDataContext,ban);
    }
  }
  return null;
}

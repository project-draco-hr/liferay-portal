{
  long userId=context.getUserId(category.getUserUuid());
  long plid=context.getPlid();
  long parentCategoryId=MapUtil.getLong(categoryPKs,category.getParentCategoryId(),category.getParentCategoryId());
  String emailAddress=null;
  String inProtocol=null;
  String inServerName=null;
  int inServerPort=0;
  boolean inUseSSL=false;
  String inUserName=null;
  String inPassword=null;
  int inReadInterval=0;
  String outEmailAddress=null;
  boolean outCustom=false;
  String outServerName=null;
  int outServerPort=0;
  boolean outUseSSL=false;
  String outUserName=null;
  String outPassword=null;
  boolean mailingListActive=false;
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  if ((parentCategoryId != MBCategoryImpl.DEFAULT_PARENT_CATEGORY_ID) && (parentCategoryId == category.getParentCategoryId())) {
    String path=getImportCategoryPath(context,parentCategoryId);
    MBCategory parentCategory=(MBCategory)context.getZipEntryAsObject(path);
    importCategory(context,categoryPKs,parentCategory);
    parentCategoryId=MapUtil.getLong(categoryPKs,category.getParentCategoryId(),category.getParentCategoryId());
  }
  MBCategory existingCategory=null;
  try {
    if (parentCategoryId != MBCategoryImpl.DEFAULT_PARENT_CATEGORY_ID) {
      MBCategoryUtil.findByPrimaryKey(parentCategoryId);
    }
    if (context.getDataStrategy().equals(PortletDataHandlerKeys.DATA_STRATEGY_MIRROR)) {
      existingCategory=MBCategoryUtil.fetchByUUID_G(category.getUuid(),context.getGroupId());
      if (existingCategory == null) {
        existingCategory=MBCategoryLocalServiceUtil.addCategory(category.getUuid(),userId,plid,parentCategoryId,category.getName(),category.getDescription(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,addCommunityPermissions,addGuestPermissions);
      }
 else {
        existingCategory=MBCategoryLocalServiceUtil.updateCategory(existingCategory.getCategoryId(),parentCategoryId,category.getName(),category.getDescription(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,false);
      }
    }
 else {
      existingCategory=MBCategoryLocalServiceUtil.addCategory(userId,plid,parentCategoryId,category.getName(),category.getDescription(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,mailingListActive,addCommunityPermissions,addGuestPermissions);
    }
    categoryPKs.put(category.getCategoryId(),existingCategory.getCategoryId());
  }
 catch (  NoSuchCategoryException nsce) {
    _log.error("Could not find the parent category for category " + category.getCategoryId());
  }
}

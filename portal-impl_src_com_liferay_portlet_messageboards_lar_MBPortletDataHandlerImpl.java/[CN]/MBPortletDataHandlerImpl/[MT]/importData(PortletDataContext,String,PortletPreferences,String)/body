{
  try {
    Document doc=DocumentUtil.readDocumentFromXML(data);
    Element root=doc.getRootElement();
    List<Element> categoryEls=root.element("categories").elements("category");
    Map<Long,Long> categoryPKs=context.getNewPrimaryKeysMap(MBCategory.class);
    for (    Element el : categoryEls) {
      String path=el.attributeValue("path");
      if (context.isPathNotProcessed(path)) {
        MBCategory category=(MBCategory)context.getZipEntryAsObject(path);
        importCategory(context,categoryPKs,category);
      }
    }
    List<Element> messageEls=root.element("messages").elements("message");
    Map<Long,Long> threadPKs=context.getNewPrimaryKeysMap(MBThread.class);
    Map<Long,Long> messagePKs=context.getNewPrimaryKeysMap(MBMessage.class);
    for (    Element el : messageEls) {
      String path=el.attributeValue("path");
      if (context.isPathNotProcessed(path)) {
        MBMessage message=(MBMessage)context.getZipEntryAsObject(path);
        importMessage(context,categoryPKs,threadPKs,messagePKs,el,message);
      }
    }
    if (context.getBooleanParameter(_NAMESPACE,"flags")) {
      List<Element> flagEls=root.element("message-flags").elements("flag");
      for (      Element el : flagEls) {
        String path=el.attributeValue("path");
        if (context.isPathNotProcessed(path)) {
          MBMessageFlag flag=(MBMessageFlag)context.getZipEntryAsObject(path);
          importFlag(context,messagePKs,flag);
        }
      }
    }
    if (context.getBooleanParameter(_NAMESPACE,"user-bans")) {
      List<Element> banEls=root.element("user-bans").elements("ban");
      for (      Element el : banEls) {
        String path=el.attributeValue("path");
        if (context.isPathNotProcessed(path)) {
          MBBan ban=(MBBan)context.getZipEntryAsObject(path);
          importBan(context,ban);
        }
      }
    }
    return null;
  }
 catch (  Exception e) {
    throw new PortletDataException(e);
  }
}

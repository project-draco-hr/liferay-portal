{
  User user=userPersistence.findByPrimaryKey(userId);
  if (Validator.isNull(name)) {
    name=url;
  }
  Date now=new Date();
  validate(url);
  long entryId=counterLocalService.increment();
  BookmarksEntry entry=bookmarksEntryPersistence.create(entryId);
  entry.setUuid(uuid);
  entry.setGroupId(groupId);
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setCreateDate(now);
  entry.setModifiedDate(now);
  entry.setFolderId(folderId);
  entry.setName(name);
  entry.setUrl(url);
  entry.setComments(comments);
  entry.setExpandoBridgeAttributes(serviceContext);
  bookmarksEntryPersistence.update(entry,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addEntryResources(entry,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addEntryResources(entry,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  updateAsset(userId,entry,serviceContext.getAssetCategoryIds(),serviceContext.getAssetTagNames());
  Indexer indexer=IndexerRegistryUtil.getIndexer(BookmarksEntry.class);
  indexer.reindex(entry);
  return entry;
}

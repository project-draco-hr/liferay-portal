{
  try {
    AuthVerifierResult authVerifierResult=new AuthVerifierResult();
    HttpServletRequest request=accessControlContext.getRequest();
    long userId=PortalUtil.getDigestAuthUserId(request);
    if (userId == 0) {
      boolean forcedDigestAuth=MapUtil.getBoolean(accessControlContext.getSettings(),"digest_auth");
      if (forcedDigestAuth) {
        HttpServletResponse response=accessControlContext.getResponse();
        long companyId=PortalInstances.getCompanyId(request);
        String remoteAddress=request.getRemoteAddr();
        String nonce=NonceUtil.generate(companyId,remoteAddress);
        StringBundler sb=new StringBundler(4);
        sb.append(_DIGEST_REALM);
        sb.append(", nonce=\"");
        sb.append(nonce);
        sb.append("\"");
        response.setHeader(HttpHeaders.WWW_AUTHENTICATE,sb.toString());
        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
        authVerifierResult.setState(AuthVerifierResult.State.INVALID_CREDENTIALS);
      }
      return authVerifierResult;
    }
    authVerifierResult.setState(AuthVerifierResult.State.SUCCESS);
    authVerifierResult.setUserId(userId);
    return authVerifierResult;
  }
 catch (  PortalException pe) {
    throw new AuthException(pe);
  }
catch (  SystemException se) {
    throw new AuthException(se);
  }
}

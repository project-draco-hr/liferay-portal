{
  if (_methodName0.equals(name) && Arrays.deepEquals(_methodParameterTypes0,parameterTypes)) {
    return AttachmentLocalServiceUtil.addAttachment((com.liferay.mail.model.Attachment)arguments[0]);
  }
  if (_methodName1.equals(name) && Arrays.deepEquals(_methodParameterTypes1,parameterTypes)) {
    return AttachmentLocalServiceUtil.createAttachment(((Long)arguments[0]).longValue());
  }
  if (_methodName2.equals(name) && Arrays.deepEquals(_methodParameterTypes2,parameterTypes)) {
    return AttachmentLocalServiceUtil.deleteAttachment(((Long)arguments[0]).longValue());
  }
  if (_methodName3.equals(name) && Arrays.deepEquals(_methodParameterTypes3,parameterTypes)) {
    return AttachmentLocalServiceUtil.deleteAttachment((com.liferay.mail.model.Attachment)arguments[0]);
  }
  if (_methodName4.equals(name) && Arrays.deepEquals(_methodParameterTypes4,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQuery();
  }
  if (_methodName5.equals(name) && Arrays.deepEquals(_methodParameterTypes5,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName6.equals(name) && Arrays.deepEquals(_methodParameterTypes6,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue());
  }
  if (_methodName7.equals(name) && Arrays.deepEquals(_methodParameterTypes7,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQuery((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],((Integer)arguments[1]).intValue(),((Integer)arguments[2]).intValue(),(com.liferay.portal.kernel.util.OrderByComparator<?>)arguments[3]);
  }
  if (_methodName8.equals(name) && Arrays.deepEquals(_methodParameterTypes8,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0]);
  }
  if (_methodName9.equals(name) && Arrays.deepEquals(_methodParameterTypes9,parameterTypes)) {
    return AttachmentLocalServiceUtil.dynamicQueryCount((com.liferay.portal.kernel.dao.orm.DynamicQuery)arguments[0],(com.liferay.portal.kernel.dao.orm.Projection)arguments[1]);
  }
  if (_methodName10.equals(name) && Arrays.deepEquals(_methodParameterTypes10,parameterTypes)) {
    return AttachmentLocalServiceUtil.fetchAttachment(((Long)arguments[0]).longValue());
  }
  if (_methodName11.equals(name) && Arrays.deepEquals(_methodParameterTypes11,parameterTypes)) {
    return AttachmentLocalServiceUtil.getAttachment(((Long)arguments[0]).longValue());
  }
  if (_methodName12.equals(name) && Arrays.deepEquals(_methodParameterTypes12,parameterTypes)) {
    return AttachmentLocalServiceUtil.getActionableDynamicQuery();
  }
  if (_methodName13.equals(name) && Arrays.deepEquals(_methodParameterTypes13,parameterTypes)) {
    return AttachmentLocalServiceUtil.getIndexableActionableDynamicQuery();
  }
  if (_methodName15.equals(name) && Arrays.deepEquals(_methodParameterTypes15,parameterTypes)) {
    return AttachmentLocalServiceUtil.deletePersistedModel((com.liferay.portal.kernel.model.PersistedModel)arguments[0]);
  }
  if (_methodName16.equals(name) && Arrays.deepEquals(_methodParameterTypes16,parameterTypes)) {
    return AttachmentLocalServiceUtil.getPersistedModel((java.io.Serializable)arguments[0]);
  }
  if (_methodName17.equals(name) && Arrays.deepEquals(_methodParameterTypes17,parameterTypes)) {
    return AttachmentLocalServiceUtil.getAttachments(((Integer)arguments[0]).intValue(),((Integer)arguments[1]).intValue());
  }
  if (_methodName18.equals(name) && Arrays.deepEquals(_methodParameterTypes18,parameterTypes)) {
    return AttachmentLocalServiceUtil.getAttachmentsCount();
  }
  if (_methodName19.equals(name) && Arrays.deepEquals(_methodParameterTypes19,parameterTypes)) {
    return AttachmentLocalServiceUtil.updateAttachment((com.liferay.mail.model.Attachment)arguments[0]);
  }
  if (_methodName50.equals(name) && Arrays.deepEquals(_methodParameterTypes50,parameterTypes)) {
    return AttachmentLocalServiceUtil.getOSGiServiceIdentifier();
  }
  if (_methodName55.equals(name) && Arrays.deepEquals(_methodParameterTypes55,parameterTypes)) {
    return AttachmentLocalServiceUtil.addAttachment(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue(),(java.lang.String)arguments[2],(java.lang.String)arguments[3],((Long)arguments[4]).longValue(),(java.io.File)arguments[5]);
  }
  if (_methodName56.equals(name) && Arrays.deepEquals(_methodParameterTypes56,parameterTypes)) {
    return AttachmentLocalServiceUtil.deleteAttachment(((Long)arguments[0]).longValue());
  }
  if (_methodName57.equals(name) && Arrays.deepEquals(_methodParameterTypes57,parameterTypes)) {
    AttachmentLocalServiceUtil.deleteAttachments(((Long)arguments[0]).longValue(),((Long)arguments[1]).longValue());
    return null;
  }
  if (_methodName58.equals(name) && Arrays.deepEquals(_methodParameterTypes58,parameterTypes)) {
    return AttachmentLocalServiceUtil.getAttachments(((Long)arguments[0]).longValue());
  }
  if (_methodName59.equals(name) && Arrays.deepEquals(_methodParameterTypes59,parameterTypes)) {
    return AttachmentLocalServiceUtil.getFile(((Long)arguments[0]).longValue());
  }
  if (_methodName60.equals(name) && Arrays.deepEquals(_methodParameterTypes60,parameterTypes)) {
    return AttachmentLocalServiceUtil.getInputStream(((Long)arguments[0]).longValue());
  }
  throw new UnsupportedOperationException();
}

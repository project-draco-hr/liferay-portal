{
  ThreadLocalDistributor threadLocalDistributor=new ThreadLocalDistributor();
  threadLocalDistributor.setClassLoader(getClassLoader());
  threadLocalDistributor.setThreadLocalSources(_keyValuePairs);
  try (CaptureHandler captureHandler=JDKLoggerTestUtil.configureJDKLogger(ThreadLocalDistributor.class.getName(),Level.WARNING)){
    threadLocalDistributor.afterPropertiesSet();
    List<LogRecord> logRecords=captureHandler.getLogRecords();
    Assert.assertEquals(3,logRecords.size());
    LogRecord logRecord=logRecords.get(0);
    Assert.assertEquals("_nonStatic is not a static ThreadLocal",logRecord.getMessage());
    logRecord=logRecords.get(1);
    Assert.assertEquals("_nullValue is not initialized",logRecord.getMessage());
    logRecord=logRecords.get(2);
    Assert.assertEquals("_object is not of type ThreadLocal",logRecord.getMessage());
  }
   String testValue="testValue";
  TestClass._threadLocal.set(testValue);
  threadLocalDistributor.capture();
  Serializable[] threadLocalValues=ReflectionTestUtil.getFieldValue(threadLocalDistributor,"_threadLocalValues");
  Assert.assertEquals(1,threadLocalValues.length);
  Assert.assertSame(testValue,threadLocalValues[0]);
  UnsyncByteArrayOutputStream unsyncByteArrayOutputStream=new UnsyncByteArrayOutputStream();
  try (ObjectOutputStream objectOutputStream=new ObjectOutputStream(unsyncByteArrayOutputStream)){
    threadLocalDistributor.writeExternal(objectOutputStream);
  }
   byte[] data=unsyncByteArrayOutputStream.toByteArray();
  UnsyncByteArrayInputStream unsyncByteArrayInputStream=new UnsyncByteArrayInputStream(data);
  ObjectInputStream objectInputStream=new ObjectInputStream(unsyncByteArrayInputStream);
  Assert.assertEquals(0,objectInputStream.readInt());
  Assert.assertArrayEquals(threadLocalValues,(Serializable[])objectInputStream.readObject());
  TestClass._threadLocal.remove();
  unsyncByteArrayInputStream=new UnsyncByteArrayInputStream(data);
  objectInputStream=new ObjectInputStream(unsyncByteArrayInputStream);
  ThreadLocalDistributor newThreadLocalDistributor=new ThreadLocalDistributor();
  newThreadLocalDistributor.readExternal(objectInputStream);
  newThreadLocalDistributor.restore();
  Assert.assertEquals(testValue,TestClass._threadLocal.get());
}

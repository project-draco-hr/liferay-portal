{
  Task task=project.task(CREATE_LIFERAY_THEME_JSON_TASK_NAME);
  final File liferayThemeJsonFile=project.file("liferay-theme.json");
  task.doLast(new Action<Task>(){
    @Override public void execute(    Task task){
      Project project=task.getProject();
      Map<String,Object> map=new HashMap<>();
      map.put("appServerPath",FileUtil.getAbsolutePath(liferayExtension.getAppServerDir()));
      File appServerThemeDir=new File(liferayExtension.getAppServerDeployDir(),project.getName());
      map.put("appServerPathTheme",FileUtil.getAbsolutePath(appServerThemeDir));
      map.put("deployed",false);
      map.put("deployPath",FileUtil.getAbsolutePath(liferayExtension.getDeployDir()));
      map.put("themeName",project.getName());
      String json=JsonOutput.toJson(Collections.singletonMap("LiferayTheme",map));
      try {
        Files.write(liferayThemeJsonFile.toPath(),json.getBytes(StandardCharsets.UTF_8));
      }
 catch (      IOException ioe) {
        throw new GradleException("Unable to write " + liferayThemeJsonFile,ioe);
      }
    }
  }
);
  task.setDescription("Generates the " + liferayThemeJsonFile.getName() + " file for this project.");
  return task;
}

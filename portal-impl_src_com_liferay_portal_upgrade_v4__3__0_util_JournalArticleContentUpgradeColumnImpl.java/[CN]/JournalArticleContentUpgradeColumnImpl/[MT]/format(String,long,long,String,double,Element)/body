{
  Iterator<Element> itr=root.elements().iterator();
  while (itr.hasNext()) {
    Element el=itr.next();
    Element dynamicContent=el.element("dynamic-content");
    String elName=el.attributeValue("name",StringPool.BLANK);
    String elType=el.attributeValue("type",StringPool.BLANK);
    String elLanguage="";
    if (dynamicContent != null) {
      elLanguage=dynamicContent.attributeValue("language-id",StringPool.BLANK);
      if (!elLanguage.equals(StringPool.BLANK)) {
        elLanguage="_" + elLanguage;
      }
    }
    if (elType.equals("image") || elType.equals("text")) {
      String oldImageId=dynamicContent.getText();
      if (oldImageId.startsWith(_IMG_ID_PATH) || oldImageId.startsWith("@portal_url@" + _IMG_ID_PATH) || oldImageId.startsWith("http://@portal_url@" + _IMG_ID_PATH)|| oldImageId.startsWith("https://@portal_url@" + _IMG_ID_PATH)) {
        int pos=oldImageId.indexOf(_IMG_ID_PATH);
        String preOldImageId=oldImageId.substring(0,pos);
        oldImageId=oldImageId.substring(pos + _IMG_ID_PATH.length(),oldImageId.length());
        String newImageId=getNewImageId(oldCompanyId,oldImageId);
        dynamicContent.setText(preOldImageId + _IMG_ID_PATH + newImageId);
        if (elType.equals("image")) {
          dynamicContent.addAttribute("id",newImageId);
          long articleImageId=GetterUtil.getLong(newImageId);
          JournalArticleImageLocalServiceUtil.addArticleImageId(articleImageId,groupId,articleId,version,elName,elLanguage);
        }
      }
    }
    format(oldCompanyId,newCompanyId,groupId,articleId,version,el);
  }
}

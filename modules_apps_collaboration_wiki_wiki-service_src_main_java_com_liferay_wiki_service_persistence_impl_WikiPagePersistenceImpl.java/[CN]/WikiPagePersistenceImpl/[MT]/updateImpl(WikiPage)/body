{
  wikiPage=toUnwrappedModel(wikiPage);
  boolean isNew=wikiPage.isNew();
  WikiPageModelImpl wikiPageModelImpl=(WikiPageModelImpl)wikiPage;
  if (Validator.isNull(wikiPage.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    wikiPage.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (wikiPage.getCreateDate() == null)) {
    if (serviceContext == null) {
      wikiPage.setCreateDate(now);
    }
 else {
      wikiPage.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!wikiPageModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      wikiPage.setModifiedDate(now);
    }
 else {
      wikiPage.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  long userId=GetterUtil.getLong(PrincipalThreadLocal.getName());
  if (userId > 0) {
    long companyId=wikiPage.getCompanyId();
    long groupId=wikiPage.getGroupId();
    long pageId=0;
    if (!isNew) {
      pageId=wikiPage.getPrimaryKey();
    }
    try {
      wikiPage.setTitle(SanitizerUtil.sanitize(companyId,groupId,userId,WikiPage.class.getName(),pageId,ContentTypes.TEXT_PLAIN,Sanitizer.MODE_ALL,wikiPage.getTitle(),null));
    }
 catch (    SanitizerException se) {
      throw new SystemException(se);
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (wikiPage.isNew()) {
      session.save(wikiPage);
      wikiPage.setNew(false);
    }
 else {
      wikiPage=(WikiPage)session.merge(wikiPage);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !WikiPageModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{wikiPageModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUuid(),wikiPageModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{wikiPageModelImpl.getUuid(),wikiPageModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEPRIMKEY.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalResourcePrimKey()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RESOURCEPRIMKEY,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEPRIMKEY,args);
      args=new Object[]{wikiPageModelImpl.getResourcePrimKey()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RESOURCEPRIMKEY,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEPRIMKEY,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_NODEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID,args);
      args=new Object[]{wikiPageModelImpl.getNodeId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_NODEID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_NODEID,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalFormat()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FORMAT,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT,args);
      args=new Object[]{wikiPageModelImpl.getFormat()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_FORMAT,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_FORMAT,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalResourcePrimKey(),wikiPageModelImpl.getOriginalNodeId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N,args);
      args=new Object[]{wikiPageModelImpl.getResourcePrimKey(),wikiPageModelImpl.getNodeId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalResourcePrimKey(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_S,args);
      args=new Object[]{wikiPageModelImpl.getResourcePrimKey(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalParentTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getParentTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_P,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalRedirectTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_R,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getRedirectTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_R,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_R,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalResourcePrimKey(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_H,args);
      args=new Object[]{wikiPageModelImpl.getResourcePrimKey(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalResourcePrimKey(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S,args);
      args=new Object[]{wikiPageModelImpl.getResourcePrimKey(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_R_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_R_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_S,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalUserId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S,args);
      args=new Object[]{wikiPageModelImpl.getUserId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_U_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_U_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalTitle(),wikiPageModelImpl.getOriginalHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getTitle(),wikiPageModelImpl.getHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalTitle(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getTitle(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_T_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_T_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalParentTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getParentTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_P,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalRedirectTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_R,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getRedirectTitle()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_R,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U_N_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalUserId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_U_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U_N_S,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getUserId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_U_N_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_U_N_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_T_H.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalTitle(),wikiPageModelImpl.getOriginalHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_T_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_T_H,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getTitle(),wikiPageModelImpl.getHead()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_T_H,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_T_H,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_S,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalParentTitle(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_P_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getParentTitle(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_P_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_P_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalRedirectTitle(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_R_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R_S,args);
      args=new Object[]{wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getRedirectTitle(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_N_H_R_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_N_H_R_S,args);
    }
    if ((wikiPageModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_P_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{wikiPageModelImpl.getOriginalGroupId(),wikiPageModelImpl.getOriginalNodeId(),wikiPageModelImpl.getOriginalHead(),wikiPageModelImpl.getOriginalParentTitle(),wikiPageModelImpl.getOriginalStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H_P_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_P_S,args);
      args=new Object[]{wikiPageModelImpl.getGroupId(),wikiPageModelImpl.getNodeId(),wikiPageModelImpl.getHead(),wikiPageModelImpl.getParentTitle(),wikiPageModelImpl.getStatus()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_N_H_P_S,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_N_H_P_S,args);
    }
  }
  entityCache.putResult(WikiPageModelImpl.ENTITY_CACHE_ENABLED,WikiPageImpl.class,wikiPage.getPrimaryKey(),wikiPage,false);
  clearUniqueFindersCache(wikiPageModelImpl);
  cacheUniqueFindersCache(wikiPageModelImpl,isNew);
  wikiPage.resetOriginalValues();
  return wikiPage;
}

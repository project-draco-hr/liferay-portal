{
  long groupId=serviceContext.getScopeGroupId();
  long folderId=DLFolderConstants.DEFAULT_PARENT_FOLDER_ID;
  DLFolder dlFolder=dlFolderPersistence.fetchByPrimaryKey(dlFileEntry.getFolderId());
  if (dlFolder != null) {
    groupId=dlFolder.getGroupId();
    folderId=dlFolder.getFolderId();
  }
  List<DLFileEntryType> dlFileEntryTypes=getFolderFileEntryTypes(PortalUtil.getCurrentAndAncestorSiteGroupIds(groupId),folderId,true);
  List<Long> fileEntryTypeIds=getFileEntryTypeIds(dlFileEntryTypes);
  if (fileEntryTypeIds.contains(dlFileEntry.getFileEntryTypeId())) {
    return dlFileEntry;
  }
  long defaultFileEntryTypeId=getDefaultFileEntryTypeId(folderId);
  DLFileVersion dlFileVersion=dlFileVersionLocalService.getLatestFileVersion(dlFileEntry.getFileEntryId(),true);
  if (dlFileVersion.isPending()) {
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(dlFileVersion.getCompanyId(),dlFileEntry.getGroupId(),DLFileEntry.class.getName(),dlFileVersion.getFileVersionId());
  }
  return dlFileEntryLocalService.updateFileEntry(serviceContext.getUserId(),dlFileEntry.getFileEntryId(),null,null,null,null,null,false,defaultFileEntryTypeId,null,null,null,0,serviceContext);
}

{
  List<DLFileEntry> dlFileEntries=dlFileEntryPersistence.findByG_F(groupId,folderId);
  for (  DLFileEntry dlFileEntry : dlFileEntries) {
    Long fileEntryTypeId=dlFileEntry.getFileEntryTypeId();
    if (fileEntryTypeIds.contains(fileEntryTypeId)) {
      continue;
    }
    DLFileVersion dlFileVersion=dlFileVersionLocalService.getLatestFileVersion(dlFileEntry.getFileEntryId(),true);
    if (dlFileVersion.isPending()) {
      workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(dlFileVersion.getCompanyId(),groupId,DLFileEntry.class.getName(),dlFileVersion.getFileVersionId());
    }
    dlFileEntryService.updateFileEntry(dlFileEntry.getFileEntryId(),null,null,null,null,null,false,defaultFileEntryTypeId,null,null,null,0,serviceContext);
  }
  List<DLFolder> subFolders=dlFolderPersistence.findByG_M_P_H(groupId,false,folderId,false);
  for (  DLFolder subFolder : subFolders) {
    long subFolderId=subFolder.getFolderId();
    if (subFolder.isOverrideFileEntryTypes()) {
      continue;
    }
    cascadeFileEntryTypes(groupId,subFolderId,defaultFileEntryTypeId,fileEntryTypeIds,serviceContext);
  }
}

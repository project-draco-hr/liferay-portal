{
  try {
    PublishToLiveEvent event=(PublishToLiveEvent)JSONUtil.deserialize(message);
    PrincipalThreadLocal.setName(event.getUserId());
    User user=UserLocalServiceUtil.getUserById(event.getUserId());
    PermissionCheckerImpl _permissionChecker=PermissionCheckerFactory.create(user,false);
    PermissionThreadLocal.setPermissionChecker(_permissionChecker);
    if (event.getScope().equals("all-pages")) {
      StagingUtil.copyLayouts(event.getStagingGroupId(),event.getLiveGroupId(),event.isPrivateLayout(),event.getParameterMap());
    }
 else {
      StagingUtil.publishLayouts(event.getLayoutIdMap(),event.getStagingGroupId(),event.getLiveGroupId(),event.isPrivateLayout(),event.getParameterMap());
    }
  }
 catch (  NoSuchUserException nsue) {
    _log.error("User that created the scheduled publishing doesn't " + "exist anymore");
  }
catch (  Exception e) {
    e.printStackTrace();
  }
}

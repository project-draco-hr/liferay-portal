{
  String name=permission.getName();
  if (name.startsWith(RUNTIME_PERMISSION_ACCESS_CLASS_IN_PACKAGE)) {
    int pos=name.indexOf(StringPool.PERIOD);
    String pkg=name.substring(pos + 1);
    if (!hasAccessClassInPackage(pkg)) {
      logSecurityException(_log,"Attempted to access package " + pkg);
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_ACCESS_DECLARED_MEMBERS)) {
    if (!hasReflect(permission)) {
      logSecurityException(_log,"Attempted to access declared members");
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_CREATE_CLASS_LOADER)) {
    if (!hasCreateClassLoader(permission)) {
      logSecurityException(_log,"Attempted to create a class loader");
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_CREATE_SECURITY_MANAGER)) {
    if (!hasCreateSecurityManager(permission)) {
      logSecurityException(_log,"Attempted to create a security manager");
      return false;
    }
  }
 else   if (name.startsWith(RUNTIME_PERMISSION_GET_CLASSLOADER)) {
    if (!hasGetClassLoader(permission)) {
      logSecurityException(_log,"Attempted to get class loader");
      return false;
    }
  }
 else   if (name.startsWith(RUNTIME_PERMISSION_GET_PROTECTION_DOMAIN)) {
    if (!hasGetProtectionDomain(permission)) {
      logSecurityException(_log,"Attempted to get protection domain");
      return false;
    }
  }
 else   if (name.startsWith(RUNTIME_PERMISSION_GET_ENV)) {
    int pos=name.indexOf(StringPool.PERIOD);
    String envName=name.substring(pos + 1);
    if (!hasGetEnv(envName,permission)) {
      logSecurityException(_log,"Attempted to get environment name " + envName);
      return false;
    }
  }
 else   if (name.startsWith(RUNTIME_PERMISSION_LOAD_LIBRARY)) {
    if (!hasLoadLibrary(permission)) {
      logSecurityException(_log,"Attempted to load library");
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_READ_FILE_DESCRIPTOR)) {
    if (!hasReadFileDescriptor(permission)) {
      logSecurityException(_log,"Attempted to read file descriptor");
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_SET_CONTEXT_CLASS_LOADER)) {
    if (!hasSetContextClassLoader(permission)) {
      logSecurityException(_log,"Attempted to set the context class loader");
      return false;
    }
  }
 else   if (name.equals(RUNTIME_PERMISSION_SET_SECURITY_MANAGER)) {
    logSecurityException(_log,"Attempted to set another security manager");
    return false;
  }
 else   if (name.equals(RUNTIME_PERMISSION_WRITE_FILE_DESCRIPTOR)) {
    if (!hasWriteFileDescriptor(permission)) {
      logSecurityException(_log,"Attempted to write file descriptor");
      return false;
    }
  }
 else {
    if (_log.isDebugEnabled()) {
      Thread.dumpStack();
    }
    logSecurityException(_log,"Attempted to " + permission.getName() + " on "+ permission.getActions());
    return false;
  }
  return true;
}

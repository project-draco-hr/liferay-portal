{
  PasswordPolicyCacheModel passwordPolicyCacheModel=new PasswordPolicyCacheModel();
  passwordPolicyCacheModel.uuid=getUuid();
  String uuid=passwordPolicyCacheModel.uuid;
  if ((uuid != null) && (uuid.length() == 0)) {
    passwordPolicyCacheModel.uuid=null;
  }
  passwordPolicyCacheModel.passwordPolicyId=getPasswordPolicyId();
  passwordPolicyCacheModel.companyId=getCompanyId();
  passwordPolicyCacheModel.userId=getUserId();
  passwordPolicyCacheModel.userName=getUserName();
  String userName=passwordPolicyCacheModel.userName;
  if ((userName != null) && (userName.length() == 0)) {
    passwordPolicyCacheModel.userName=null;
  }
  Date createDate=getCreateDate();
  if (createDate != null) {
    passwordPolicyCacheModel.createDate=createDate.getTime();
  }
 else {
    passwordPolicyCacheModel.createDate=Long.MIN_VALUE;
  }
  Date modifiedDate=getModifiedDate();
  if (modifiedDate != null) {
    passwordPolicyCacheModel.modifiedDate=modifiedDate.getTime();
  }
 else {
    passwordPolicyCacheModel.modifiedDate=Long.MIN_VALUE;
  }
  passwordPolicyCacheModel.defaultPolicy=getDefaultPolicy();
  passwordPolicyCacheModel.name=getName();
  String name=passwordPolicyCacheModel.name;
  if ((name != null) && (name.length() == 0)) {
    passwordPolicyCacheModel.name=null;
  }
  passwordPolicyCacheModel.description=getDescription();
  String description=passwordPolicyCacheModel.description;
  if ((description != null) && (description.length() == 0)) {
    passwordPolicyCacheModel.description=null;
  }
  passwordPolicyCacheModel.changeable=getChangeable();
  passwordPolicyCacheModel.changeRequired=getChangeRequired();
  passwordPolicyCacheModel.minAge=getMinAge();
  passwordPolicyCacheModel.checkSyntax=getCheckSyntax();
  passwordPolicyCacheModel.allowDictionaryWords=getAllowDictionaryWords();
  passwordPolicyCacheModel.minAlphanumeric=getMinAlphanumeric();
  passwordPolicyCacheModel.minLength=getMinLength();
  passwordPolicyCacheModel.minLowerCase=getMinLowerCase();
  passwordPolicyCacheModel.minNumbers=getMinNumbers();
  passwordPolicyCacheModel.minSymbols=getMinSymbols();
  passwordPolicyCacheModel.minUpperCase=getMinUpperCase();
  passwordPolicyCacheModel.regex=getRegex();
  String regex=passwordPolicyCacheModel.regex;
  if ((regex != null) && (regex.length() == 0)) {
    passwordPolicyCacheModel.regex=null;
  }
  passwordPolicyCacheModel.history=getHistory();
  passwordPolicyCacheModel.historyCount=getHistoryCount();
  passwordPolicyCacheModel.expireable=getExpireable();
  passwordPolicyCacheModel.maxAge=getMaxAge();
  passwordPolicyCacheModel.warningTime=getWarningTime();
  passwordPolicyCacheModel.graceLimit=getGraceLimit();
  passwordPolicyCacheModel.lockout=getLockout();
  passwordPolicyCacheModel.maxFailure=getMaxFailure();
  passwordPolicyCacheModel.lockoutDuration=getLockoutDuration();
  passwordPolicyCacheModel.requireUnlock=getRequireUnlock();
  passwordPolicyCacheModel.resetFailureCount=getResetFailureCount();
  passwordPolicyCacheModel.resetTicketMaxAge=getResetTicketMaxAge();
  return passwordPolicyCacheModel;
}

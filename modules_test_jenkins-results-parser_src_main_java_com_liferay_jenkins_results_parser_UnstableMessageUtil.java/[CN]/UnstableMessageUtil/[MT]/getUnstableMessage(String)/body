{
  StringBuilder sb=new StringBuilder();
  JSONObject testReportJSONObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "testReport/api/json"));
  int failCount=testReportJSONObject.getInt("failCount");
  int totalCount=testReportJSONObject.getInt("totalCount");
  int passCount=totalCount - failCount;
  sb.append("<h6>Job Results:</h6><p>");
  sb.append(passCount);
  sb.append(" Test");
  if (passCount != 1) {
    sb.append("s");
  }
  sb.append(" Passed.<br />");
  sb.append(failCount);
  sb.append(" Test");
  if (failCount != 1) {
    sb.append("s");
  }
  sb.append(" Failed.</p><ol>");
  List<String> runBuildURLs=new ArrayList<>();
  JSONObject jsonObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"));
  if (jsonObject.has("runs")) {
    JSONArray runsJSONArray=jsonObject.getJSONArray("runs");
    for (int i=0; i < runsJSONArray.length(); i++) {
      JSONObject runJSONObject=runsJSONArray.getJSONObject(i);
      String runBuildURL=runJSONObject.getString("url");
      if (!runBuildURL.endsWith("/" + jsonObject.getInt("number") + "/")) {
        continue;
      }
      JSONObject runBuildURLJSONObject=JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(runBuildURL + "api/json"));
      String result=runBuildURLJSONObject.getString("result");
      if (!result.equals("SUCCESS")) {
        runBuildURLs.add(runBuildURL);
      }
    }
  }
 else {
    runBuildURLs.add(buildURL);
  }
  int failureCount=_getUnstableMessage(runBuildURLs,sb);
  sb.append("</ol>");
  if (failureCount > 3) {
    sb.append("<p><strong>Click <a href=\"");
    sb.append(buildURL);
    sb.append("/testReport/\">here</a> for more failures.</strong>");
    sb.append("</p>");
  }
  return sb.toString();
}

{
  ArchetypeGenerationRequest archetypeGenerationRequest=new ArchetypeGenerationRequest();
  String artifactId=projectTemplatesArgs.getName();
  String className=projectTemplatesArgs.getClassName();
  String hostBundleSymbolicName=projectTemplatesArgs.getHostBundleSymbolicName();
  String hostBundleVersion=projectTemplatesArgs.getHostBundleVersion();
  String packageName=projectTemplatesArgs.getPackageName();
  String projectType=projectTemplatesArgs.getWorkspaceDir() != null ? "workspace" : "standalone";
  String service=projectTemplatesArgs.getService();
  String templateName=projectTemplatesArgs.getTemplate();
  archetypeGenerationRequest.setArchetypeArtifactId("com.liferay.project.templates." + templateName);
  archetypeGenerationRequest.setArchetypeGroupId("com.liferay");
  archetypeGenerationRequest.setArchetypeVersion("0");
  archetypeGenerationRequest.setArtifactId(artifactId);
  archetypeGenerationRequest.setGroupId(packageName);
  archetypeGenerationRequest.setInteractiveMode(false);
  archetypeGenerationRequest.setVersion("1.0.0");
  archetypeGenerationRequest.setOutputDirectory(outputDirectory);
  archetypeGenerationRequest.setPackage(packageName);
  Properties additionalProperties=new Properties();
  _safePut(additionalProperties,"className",className);
  _safePut(additionalProperties,"hostBundleSymbolicName",hostBundleSymbolicName);
  _safePut(additionalProperties,"hostBundleVersion",hostBundleVersion);
  _safePut(additionalProperties,"package",packageName);
  _safePut(additionalProperties,"projectType",projectType);
  _safePut(additionalProperties,"serviceClass",service);
  archetypeGenerationRequest.setProperties(additionalProperties);
  ArchetypeGenerationResult result=_getArchetypeManager().generateProjectFromArchetype(archetypeGenerationRequest);
  return result;
}

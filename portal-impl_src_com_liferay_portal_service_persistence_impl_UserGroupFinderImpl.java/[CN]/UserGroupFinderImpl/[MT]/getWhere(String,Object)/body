{
  String join=StringPool.BLANK;
  if (key.equals("userGroupGroupRole")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUP_GROUP_ROLE);
  }
 else   if (key.equals("userGroupsGroups")) {
    if (value instanceof Long) {
      join=CustomSQLUtil.get(JOIN_BY_USER_GROUPS_GROUPS);
    }
 else     if (value instanceof Long[]) {
      Long[] userGroupIds=(Long[])value;
      if (userGroupIds.length == 0) {
        join="WHERE (Groups_UserGroups.groupId = -1)";
      }
 else {
        StringBundler sb=new StringBundler(userGroupIds.length * 2 + 1);
        sb.append("WHERE (");
        for (int i=0; i < userGroupIds.length; i++) {
          sb.append("(Groups_UserGroups.groupId = ?) ");
          if ((i + 1) < userGroupIds.length) {
            sb.append("OR ");
          }
        }
        sb.append(StringPool.CLOSE_PARENTHESIS);
        join=sb.toString();
      }
    }
  }
 else   if (key.equals("userGroupsRoles")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUPS_ROLES);
  }
 else   if (key.equals("userGroupsTeams")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUPS_TEAMS);
  }
 else   if (key.equals("userGroupsUsers")) {
    join=CustomSQLUtil.get(JOIN_BY_USER_GROUPS_USERS);
  }
  if (Validator.isNotNull(join)) {
    int pos=join.indexOf("WHERE");
    if (pos != -1) {
      join=join.substring(pos + 5,join.length()).concat(" AND ");
    }
 else {
      join=StringPool.BLANK;
    }
  }
  return join;
}

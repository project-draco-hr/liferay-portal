{
  names=CustomSQLUtil.keywords(names);
  descriptions=CustomSQLUtil.keywords(descriptions);
  Session session=null;
  try {
    session=openSession();
    String sql=CustomSQLUtil.get(FIND_BY_C_N_D);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(UserGroup.name)",StringPool.LIKE,false,names);
    sql=CustomSQLUtil.replaceKeywords(sql,"lower(UserGroup.description)",StringPool.LIKE,true,descriptions);
    sql=StringUtil.replace(sql,"[$JOIN$]",getJoin(params));
    sql=StringUtil.replace(sql,"[$WHERE$]",getWhere(params));
    sql=CustomSQLUtil.replaceAndOperator(sql,andOperator);
    sql=CustomSQLUtil.replaceOrderBy(sql,obc);
    if (inlineSQLHelper) {
      sql=InlineSQLHelperUtil.replacePermissionCheck(sql,UserGroup.class.getName(),"UserGroup.userGroupId",null,null,new long[]{0},null);
    }
    SQLQuery q=session.createSynchronizedSQLQuery(sql);
    q.addEntity("UserGroup",UserGroupImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    setJoin(qPos,params);
    qPos.add(companyId);
    qPos.add(names,2);
    qPos.add(descriptions,2);
    return (List<UserGroup>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    closeSession(session);
  }
}

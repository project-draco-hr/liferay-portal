{
  when(_comment.getCommentId()).thenReturn(SearchTestUtil.ENTRY_CLASS_PK);
  stub(method(CommentManagerUtil.class,"fetchComment",long.class)).toReturn(_comment);
  mockStatic(IndexerRegistryUtil.class,new ThrowsExceptionClass(IllegalStateException.class));
  when(_mbMessage.getMessageId()).thenReturn(SearchTestUtil.ENTRY_CLASS_PK);
  when(mbMessageLocalService.getMessage(SearchTestUtil.ENTRY_CLASS_PK)).thenReturn(_mbMessage);
  SearchResult searchResult=assertOneSearchResult(SearchTestUtil.createAttachmentDocument(_MB_MESSAGE_CLASS_NAME));
  Assert.assertEquals(SearchTestUtil.ATTACHMENT_OWNER_CLASS_NAME,searchResult.getClassName());
  Assert.assertEquals(SearchTestUtil.ATTACHMENT_OWNER_CLASS_PK,searchResult.getClassPK());
  List<RelatedSearchResult<Comment>> relatedSearchResults=searchResult.getCommentRelatedSearchResults();
  RelatedSearchResult<Comment> relatedSearchResult=relatedSearchResults.get(0);
  Comment comment=relatedSearchResult.getModel();
  Assert.assertEquals(_mbMessage.getMessageId(),comment.getCommentId());
  Assert.assertEquals(1,relatedSearchResults.size());
  Assert.assertNull(searchResult.getSummary());
  assertEmptyFileEntryRelatedSearchResults(searchResult);
  assertEmptyVersions(searchResult);
}

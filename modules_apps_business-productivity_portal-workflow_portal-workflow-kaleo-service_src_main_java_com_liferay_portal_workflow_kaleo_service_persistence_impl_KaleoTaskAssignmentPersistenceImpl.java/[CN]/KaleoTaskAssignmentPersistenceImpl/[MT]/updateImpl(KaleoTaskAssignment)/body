{
  kaleoTaskAssignment=toUnwrappedModel(kaleoTaskAssignment);
  boolean isNew=kaleoTaskAssignment.isNew();
  KaleoTaskAssignmentModelImpl kaleoTaskAssignmentModelImpl=(KaleoTaskAssignmentModelImpl)kaleoTaskAssignment;
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (kaleoTaskAssignment.getCreateDate() == null)) {
    if (serviceContext == null) {
      kaleoTaskAssignment.setCreateDate(now);
    }
 else {
      kaleoTaskAssignment.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!kaleoTaskAssignmentModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      kaleoTaskAssignment.setModifiedDate(now);
    }
 else {
      kaleoTaskAssignment.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (kaleoTaskAssignment.isNew()) {
      session.save(kaleoTaskAssignment);
      kaleoTaskAssignment.setNew(false);
    }
 else {
      kaleoTaskAssignment=(KaleoTaskAssignment)session.merge(kaleoTaskAssignment);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !KaleoTaskAssignmentModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((kaleoTaskAssignmentModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskAssignmentModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{kaleoTaskAssignmentModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
    if ((kaleoTaskAssignmentModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskAssignmentModelImpl.getOriginalKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
      args=new Object[]{kaleoTaskAssignmentModelImpl.getKaleoDefinitionId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KALEODEFINITIONID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KALEODEFINITIONID,args);
    }
    if ((kaleoTaskAssignmentModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskAssignmentModelImpl.getOriginalKaleoClassName(),kaleoTaskAssignmentModelImpl.getOriginalKaleoClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK,args);
      args=new Object[]{kaleoTaskAssignmentModelImpl.getKaleoClassName(),kaleoTaskAssignmentModelImpl.getKaleoClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK,args);
    }
    if ((kaleoTaskAssignmentModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_ACN.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{kaleoTaskAssignmentModelImpl.getOriginalKaleoClassName(),kaleoTaskAssignmentModelImpl.getOriginalKaleoClassPK(),kaleoTaskAssignmentModelImpl.getOriginalAssigneeClassName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK_ACN,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_ACN,args);
      args=new Object[]{kaleoTaskAssignmentModelImpl.getKaleoClassName(),kaleoTaskAssignmentModelImpl.getKaleoClassPK(),kaleoTaskAssignmentModelImpl.getAssigneeClassName()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_KCN_KCPK_ACN,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_KCN_KCPK_ACN,args);
    }
  }
  entityCache.putResult(KaleoTaskAssignmentModelImpl.ENTITY_CACHE_ENABLED,KaleoTaskAssignmentImpl.class,kaleoTaskAssignment.getPrimaryKey(),kaleoTaskAssignment,false);
  kaleoTaskAssignment.resetOriginalValues();
  return kaleoTaskAssignment;
}

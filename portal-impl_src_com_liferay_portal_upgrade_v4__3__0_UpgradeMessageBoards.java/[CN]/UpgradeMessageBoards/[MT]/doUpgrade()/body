{
  UpgradeColumn upgradeCompanyIdColumn=new SwapUpgradeColumnImpl("companyId",new Integer(Types.VARCHAR),AvailableMappersUtil.getCompanyIdMapper());
  UpgradeColumn upgradeGroupIdColumn=new SwapUpgradeColumnImpl("groupId",AvailableMappersUtil.getGroupIdMapper());
  UpgradeColumn upgradeUserIdColumn=new SwapUpgradeColumnImpl("userId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  PKUpgradeColumnImpl upgradePKColumn=new MBCategoryIdUpgradeColumnImpl();
  UpgradeTable upgradeTable=new DefaultUpgradeTableImpl(MBCategoryTable.TABLE_NAME,MBCategoryTable.TABLE_COLUMNS,upgradePKColumn,upgradeGroupIdColumn,upgradeUserIdColumn);
  upgradeTable.setCreateSQL(MBCategoryTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  ValueMapper categoryIdMapper=new DefaultPKMapper(upgradePKColumn.getValueMapper());
  AvailableMappersUtil.setMBCategoryIdMapper(categoryIdMapper);
  UpgradeColumn upgradeParentCategoryIdColumn=new SwapUpgradeColumnImpl("parentCategoryId",categoryIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(MBCategoryTable.TABLE_NAME,MBCategoryTable.TABLE_COLUMNS,upgradeParentCategoryIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeCategoryIdColumn=new SwapUpgradeColumnImpl("categoryId",categoryIdMapper);
  upgradePKColumn=new PKUpgradeColumnImpl("messageId",true);
  PKUpgradeColumnImpl upgradeThreadIdPKColumn=new LazyPKUpgradeColumnImpl("threadId");
  UpgradeColumn upgradeAttachmentsColumn=new MBMessageAttachmentsUpgradeColumnImpl(upgradePKColumn,upgradeCompanyIdColumn,upgradeThreadIdPKColumn);
  upgradeTable=new DefaultUpgradeTableImpl(MBMessageTable.TABLE_NAME,MBMessageTable.TABLE_COLUMNS,upgradePKColumn,upgradeCompanyIdColumn,upgradeUserIdColumn,upgradeCategoryIdColumn,upgradeThreadIdPKColumn,upgradeAttachmentsColumn);
  upgradeTable.setCreateSQL(MBMessageTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  ValueMapper messageIdMapper=new DefaultPKMapper(upgradePKColumn.getValueMapper());
  AvailableMappersUtil.setMBMessageIdMapper(messageIdMapper);
  ValueMapper threadIdMapper=upgradeThreadIdPKColumn.getValueMapper();
  AvailableMappersUtil.setMBThreadIdMapper(threadIdMapper);
  UpgradeColumn upgradeParentMessageIdColumn=new SwapUpgradeColumnImpl("parentMessageId",messageIdMapper);
  upgradeTable=new DefaultUpgradeTableImpl(MBMessageTable.TABLE_NAME,MBMessageTable.TABLE_COLUMNS,upgradeParentMessageIdColumn);
  upgradeTable.updateTable();
  UpgradeColumn upgradeMessageIdColumn=new SwapUpgradeColumnImpl("messageId",messageIdMapper);
  UpgradeColumn upgradeRootMessageIdColumn=new SwapUpgradeColumnImpl("rootMessageId",messageIdMapper);
  upgradePKColumn=new PKUpgradeColumnImpl("messageFlagId",true);
  upgradeTable=new DefaultUpgradeTableImpl(MBMessageFlagTable.TABLE_NAME,MBMessageFlagTable.TABLE_COLUMNS,upgradePKColumn,upgradeUserIdColumn,upgradeMessageIdColumn);
  upgradeTable.setCreateSQL(MBMessageFlagTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  upgradeTable=new DefaultUpgradeTableImpl(MBStatsUserTable.TABLE_NAME,MBStatsUserTable.TABLE_COLUMNS,new PKUpgradeColumnImpl("statsUserId",false),upgradeGroupIdColumn,upgradeUserIdColumn);
  upgradeTable.setCreateSQL(MBStatsUserTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  UpgradeColumn upgradeThreadIdColumn=new SwapUpgradeColumnImpl("threadId",threadIdMapper);
  UpgradeColumn upgradeLastPostByUserIdColumn=new SwapUpgradeColumnImpl("lastPostByUserId",new Integer(Types.VARCHAR),AvailableMappersUtil.getUserIdMapper());
  upgradeTable=new DefaultUpgradeTableImpl(MBThreadTable.TABLE_NAME,MBThreadTable.TABLE_COLUMNS,upgradeThreadIdColumn,upgradeCategoryIdColumn,upgradeRootMessageIdColumn,upgradeLastPostByUserIdColumn);
  upgradeTable.setCreateSQL(MBThreadTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
  ClassNameIdUpgradeColumnImpl classNameIdColumn=new ClassNameIdUpgradeColumnImpl();
  Map<Long,ClassPKContainer> classPKContainers=new HashMap<Long,ClassPKContainer>();
  classPKContainers.put(new Long(PortalUtil.getClassNameId(BlogsEntry.class.getName())),new ClassPKContainer(AvailableMappersUtil.getBlogsEntryIdMapper(),true));
  UpgradeColumn upgradeClassPKColumn=new ClassPKUpgradeColumnImpl(classNameIdColumn,classPKContainers);
  upgradeTable=new DefaultUpgradeTableImpl(MBDiscussionTable.TABLE_NAME,MBDiscussionTable.TABLE_COLUMNS,new PKUpgradeColumnImpl("discussionId",false),classNameIdColumn,upgradeClassPKColumn,upgradeThreadIdColumn);
  upgradeTable.setCreateSQL(MBDiscussionTable.TABLE_SQL_CREATE);
  upgradeTable.updateTable();
}

{
  User user=userPersistence.findByPrimaryKey(serviceContext.getUserId());
  Revision oldRevision=revisionPersistence.fetchByPrimaryKey(revisionId);
  Date now=new Date();
  Revision revision=revisionPersistence.create(revisionId);
  revision.setGroupId(oldRevision.getGroupId());
  revision.setCompanyId(oldRevision.getCompanyId());
  revision.setUserId(user.getUserId());
  revision.setUserName(user.getFullName());
  revision.setCreateDate(serviceContext.getCreateDate(now));
  revision.setModifiedDate(serviceContext.getModifiedDate(now));
  revision.setBranchId(oldRevision.getBranchId());
  revision.setPlid(oldRevision.getPlid());
  revision.setParentRevisionId(oldRevision.getRevisionId());
  revision.setHead(false);
  revision.setName(name);
  revision.setTitle(title);
  revision.setDescription(description);
  revision.setTypeSettings(typeSettings);
  if (iconImage) {
    revision.setIconImage(iconImage);
    revision.setIconImageId(iconImageId);
  }
  revision.setThemeId(themeId);
  revision.setColorSchemeId(colorSchemeId);
  revision.setWapThemeId(wapThemeId);
  revision.setWapColorSchemeId(wapColorSchemeId);
  revision.setCss(css);
  revisionPersistence.update(revision,false);
  copyPreferences(user.getCompanyId(),revision.getParentRevisionId(),revision.getRevisionId(),serviceContext);
  WorkflowHandlerRegistryUtil.startWorkflowInstance(revision.getCompanyId(),revision.getGroupId(),serviceContext.getUserId(),Layout.class.getName(),revision.getRevisionId(),revision,serviceContext);
  return revision;
}

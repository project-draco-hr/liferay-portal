{
  long pk=nextLong();
  Ticket newTicket=_persistence.create(pk);
  newTicket.setCompanyId(nextLong());
  newTicket.setCreateDate(nextDate());
  newTicket.setClassNameId(nextLong());
  newTicket.setClassPK(nextLong());
  newTicket.setKey(randomString());
  newTicket.setType(nextInt());
  newTicket.setExtraInfo(randomString());
  newTicket.setExpirationDate(nextDate());
  _persistence.update(newTicket,false);
  Ticket existingTicket=_persistence.findByPrimaryKey(newTicket.getPrimaryKey());
  assertEquals(existingTicket.getTicketId(),newTicket.getTicketId());
  assertEquals(existingTicket.getCompanyId(),newTicket.getCompanyId());
  assertEquals(Time.getShortTimestamp(existingTicket.getCreateDate()),Time.getShortTimestamp(newTicket.getCreateDate()));
  assertEquals(existingTicket.getClassNameId(),newTicket.getClassNameId());
  assertEquals(existingTicket.getClassPK(),newTicket.getClassPK());
  assertEquals(existingTicket.getKey(),newTicket.getKey());
  assertEquals(existingTicket.getType(),newTicket.getType());
  assertEquals(existingTicket.getExtraInfo(),newTicket.getExtraInfo());
  assertEquals(Time.getShortTimestamp(existingTicket.getExpirationDate()),Time.getShortTimestamp(newTicket.getExpirationDate()));
}

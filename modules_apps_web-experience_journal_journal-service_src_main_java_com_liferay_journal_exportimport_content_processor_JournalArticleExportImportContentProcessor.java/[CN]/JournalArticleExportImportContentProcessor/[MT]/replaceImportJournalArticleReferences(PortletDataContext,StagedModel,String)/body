{
  List<Element> referenceElements=portletDataContext.getReferenceElements(stagedModel,JournalArticle.class);
  for (  Element referenceElement : referenceElements) {
    long classPK=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
    Map<Long,Long> articlePrimaryKeys=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(JournalArticle.class + ".primaryKey");
    long articlePrimaryKey=MapUtil.getLong(articlePrimaryKeys,classPK,classPK);
    JournalArticle journalArticle=_journalArticleLocalService.fetchJournalArticle(articlePrimaryKey);
    if (journalArticle == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to fetch article with id: " + articlePrimaryKey);
      }
      throw new NoSuchArticleException("id = " + articlePrimaryKey);
    }
 else {
      String journalArticleReference="[$ja-reference=" + classPK + "$]";
      JSONObject jsonObject=_jsonFactory.createJSONObject();
      jsonObject.put("className",JournalArticle.class.getName());
      jsonObject.put("classPK",journalArticle.getResourcePrimKey());
      content=StringUtil.replace(content,journalArticleReference,jsonObject.toString());
    }
  }
  return content;
}

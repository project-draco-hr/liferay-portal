{
  HttpSession ses=req.getSession();
  ReverseAjax reverseAjax=(ReverseAjax)ses.getAttribute(WebKeys.REVERSE_AJAX);
  JSONObject jo=new JSONObject();
  boolean release=ParamUtil.getBoolean(req,"release");
  if (release) {
    release(reverseAjax);
  }
 else {
    try {
      RequestWait reqWait=reverseAjax.getRequestWait();
      boolean missedEvents=true;
      if (reqWait != null) {
        reverseAjax.setRequestWait(null);
        reqWait.expire();
      }
      if (!reverseAjax.pendingEvents()) {
        missedEvents=false;
        reqWait=new RequestWait();
        reqWait.setSessionId(ses.getId());
        reverseAjax.setRequestWait(reqWait);
        reqWait.waitForRequest();
      }
      if (missedEvents || (reverseAjax.pendingEvents() && !reqWait.isExpired())) {
        if (reverseAjax.isPendingChatMessage()) {
          jo.put("chatMessages",MessagingUtil.getChatMessages(req.getSession()));
          reverseAjax.setPendingChatMessage(false);
        }
        if (reverseAjax.isPendingChatRoster()) {
          jo.put("chatRoster",MessagingUtil.getRosterEntries(req.getSession()));
          reverseAjax.setPendingChatRoster(false);
        }
        jo.put("status","success");
      }
 else       if (reqWait.isTimedOut()) {
        jo.put("status","timedOut");
      }
 else {
        jo.put("status","failure");
      }
    }
 catch (    Exception e) {
      jo.put("status","failure");
    }
 finally {
      reverseAjax.setRequestWait(null);
    }
  }
  return jo.toString();
}

{
  UploadPortletRequest uploadRequest=PortalUtil.getUploadPortletRequest(actionRequest);
  Layout layout=(Layout)actionRequest.getAttribute(WebKeys.LAYOUT);
  long productEntryId=ParamUtil.getLong(actionRequest,"productEntryId");
  String name=ParamUtil.getString(actionRequest,"name");
  String type=ParamUtil.getString(actionRequest,"type");
  String tags=ParamUtil.getString(actionRequest,"tags");
  String shortDescription=ParamUtil.getString(actionRequest,"shortDescription");
  String longDescription=ParamUtil.getString(actionRequest,"longDescription");
  String pageURL=ParamUtil.getString(actionRequest,"pageURL");
  String author=ParamUtil.getString(actionRequest,"author");
  String repoGroupId=ParamUtil.getString(actionRequest,"repoGroupId");
  String repoArtifactId=ParamUtil.getString(actionRequest,"repoArtifactId");
  long[] licenseIds=ParamUtil.getLongValues(actionRequest,"licenses");
  List<byte[]> thumbnails=getThumbnails(uploadRequest);
  List<byte[]> fullImages=getFullImages(uploadRequest);
  ServiceContext serviceContext=ServiceContextFactory.getInstance(SCProductEntry.class.getName(),actionRequest);
  if (productEntryId <= 0) {
    SCProductEntryServiceUtil.addProductEntry(name,type,tags,shortDescription,longDescription,pageURL,author,repoGroupId,repoArtifactId,licenseIds,thumbnails,fullImages,serviceContext);
  }
 else {
    SCProductEntryServiceUtil.updateProductEntry(productEntryId,name,type,tags,shortDescription,longDescription,pageURL,author,repoGroupId,repoArtifactId,licenseIds,thumbnails,fullImages);
  }
}

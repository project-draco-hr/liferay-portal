{
  List<byte[]> images=new ArrayList<byte[]>();
  for (  String name : getSortedParameterNames(uploadPortletRequest,imagePrefix)) {
    String contentType=uploadPortletRequest.getContentType(name);
    if (!MimeTypesUtil.isWebImage(contentType)) {
      throw new ProductEntryScreenshotsException();
    }
    int priority=GetterUtil.getInteger(name.substring(imagePrefix.length()));
    boolean preserveScreenshot=ParamUtil.getBoolean(uploadPortletRequest,"preserveScreenshot" + priority);
    byte[] bytes=null;
    if (preserveScreenshot) {
      SCProductScreenshot productScreenshot=getProductScreenshot(uploadPortletRequest,priority);
      Image image=null;
      if (imagePrefix.equals("fullImage")) {
        image=ImageLocalServiceUtil.getImage(productScreenshot.getFullImageId());
      }
 else {
        image=ImageLocalServiceUtil.getImage(productScreenshot.getThumbnailId());
      }
      bytes=image.getTextObj();
    }
 else {
      InputStream inputStream=uploadPortletRequest.getFileAsStream(name);
      if (inputStream != null) {
        bytes=FileUtil.getBytes(inputStream);
      }
    }
    if (ArrayUtil.isNotEmpty(bytes)) {
      images.add(bytes);
    }
 else {
      throw new ProductEntryScreenshotsException();
    }
  }
  return images;
}

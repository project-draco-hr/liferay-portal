{
  Folder folder=fromRepository.getFolder(folderId);
  Folder newFolder=toRepository.addFolder(parentFolderId,folder.getName(),folder.getDescription(),serviceContext);
  long newFolderId=newFolder.getFolderId();
  List<Object> foldersAndFiles=getFoldersAndFileEntriesAndFileShortcuts(fromRepository.getRepositoryId(),folderId,WorkflowConstants.STATUS_ANY,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  try {
    for (    Object item : foldersAndFiles) {
      if (item instanceof FileEntry) {
        FileEntry fileEntry=(FileEntry)item;
        FileEntry destinationFileEntry=deepCopyFileEntry(toRepository,fileEntry,newFolderId,serviceContext);
        registerDLProcessorCallback(destinationFileEntry);
      }
 else       if (item instanceof Folder) {
        Folder currentFolder=(Folder)item;
        moveFolderBetweenDifferentRepos(currentFolder.getFolderId(),newFolderId,fromRepository,toRepository,serviceContext);
      }
 else       if (item instanceof DLFileShortcut) {
        if (newFolder.isSupportsShortcuts()) {
          DLFileShortcut fileShorcut=(DLFileShortcut)item;
          dlFileShortcutService.addFileShortcut(fileShorcut.getGroupId(),newFolderId,fileShorcut.getToFileEntryId(),serviceContext);
        }
      }
    }
  }
 catch (  PortalException pe) {
    toRepository.deleteFolder(newFolderId);
    throw pe;
  }
  try {
    fromRepository.deleteFolder(folderId);
  }
 catch (  PortalException pe) {
    toRepository.deleteFolder(newFolderId);
    throw pe;
  }
  return newFolder;
}

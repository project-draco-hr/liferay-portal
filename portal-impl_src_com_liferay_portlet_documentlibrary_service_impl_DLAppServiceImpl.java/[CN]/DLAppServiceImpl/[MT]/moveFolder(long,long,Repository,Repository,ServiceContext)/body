{
  Folder folder=fromRepository.getFolder(folderId);
  Folder newFolder=toRepository.addFolder(getUserId(),parentFolderId,folder.getName(),folder.getDescription(),serviceContext);
  dlAppHelperLocalService.addFolder(getUserId(),newFolder,serviceContext);
  List<RepositoryEntry> repositoryEntries=fromRepository.getFoldersAndFileEntriesAndFileShortcuts(folderId,WorkflowConstants.STATUS_ANY,true,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null);
  try {
    for (    RepositoryEntry repositoryEntry : repositoryEntries) {
      if (repositoryEntry instanceof FileEntry) {
        FileEntry fileEntry=(FileEntry)repositoryEntry;
        moveFileEntry(fileEntry.getFileEntryId(),newFolder.getFolderId(),serviceContext);
      }
 else       if (repositoryEntry instanceof Folder) {
        Folder currentFolder=(Folder)repositoryEntry;
        moveFolder(currentFolder.getFolderId(),newFolder.getFolderId(),fromRepository,toRepository,serviceContext);
      }
 else       if (repositoryEntry instanceof FileShortcut) {
        if (newFolder.isSupportsShortcuts()) {
          FileShortcut fileShortcut=(FileShortcut)repositoryEntry;
          toRepository.addFileShortcut(getUserId(),newFolder.getFolderId(),fileShortcut.getToFileEntryId(),serviceContext);
        }
      }
    }
  }
 catch (  PortalException pe) {
    int foldersAndFileEntriesAndFileShortcutsCount=getFoldersAndFileEntriesAndFileShortcutsCount(newFolder.getRepositoryId(),newFolder.getFolderId(),WorkflowConstants.STATUS_ANY,true);
    if (foldersAndFileEntriesAndFileShortcutsCount == 0) {
      toRepository.deleteFolder(newFolder.getFolderId());
    }
    throw pe;
  }
  try {
    fromRepository.deleteFolder(folderId);
  }
 catch (  PortalException pe) {
    toRepository.deleteFolder(newFolder.getFolderId());
    throw pe;
  }
  return newFolder;
}

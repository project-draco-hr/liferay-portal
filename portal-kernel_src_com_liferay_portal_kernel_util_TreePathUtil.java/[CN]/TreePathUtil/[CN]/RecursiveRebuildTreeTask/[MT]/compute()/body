{
  try {
    _treeModelTasks.rebuildDependentModelsTreePaths(_parentPrimaryKey,_parentTreePath);
  }
 catch (  Exception e) {
    _log.error(e,e);
    return;
  }
  List<? extends TreeModel> treeModels=_treeModelTasks.findTreeModels(_previousPrimaryKey,_companyId,_parentPrimaryKey,_MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE);
  if (treeModels.isEmpty()) {
    return;
  }
  if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) {
    TreeModel treeModel=treeModels.get(treeModels.size() - 1);
    RecursiveRebuildTreeTask recursiveRebuildTreeTask=new RecursiveRebuildTreeTask(_treeModelTasks,_companyId,_parentPrimaryKey,_parentTreePath,(long)treeModel.getPrimaryKeyObj());
    recursiveRebuildTreeTask.fork();
  }
  for (  TreeModel treeModel : treeModels) {
    String treePath=_parentTreePath.concat(String.valueOf(treeModel.getPrimaryKeyObj())).concat(StringPool.SLASH);
    if (!treePath.equals(treeModel.getTreePath())) {
      treeModel.updateTreePath(treePath);
    }
    RecursiveRebuildTreeTask recursiveRebuildTreeTask=new RecursiveRebuildTreeTask(_treeModelTasks,_companyId,(long)treeModel.getPrimaryKeyObj(),treePath,0L);
    recursiveRebuildTreeTask.fork();
  }
}

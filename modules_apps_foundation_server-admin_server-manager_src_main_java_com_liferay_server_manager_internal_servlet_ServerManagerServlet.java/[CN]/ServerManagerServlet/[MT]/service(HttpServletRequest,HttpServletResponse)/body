{
  if (!isValidUser(request)) {
    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
    return;
  }
  JSONObject responseJSONObject=JSONFactoryUtil.createJSONObject();
  responseJSONObject.put(JSONKeys.ERROR,StringPool.BLANK);
  responseJSONObject.put(JSONKeys.OUTPUT,StringPool.BLANK);
  responseJSONObject.put(JSONKeys.STATUS,0);
  try {
    Queue<String> arguments=new LinkedList<>();
    String path=request.getPathInfo();
    path=StringUtil.toLowerCase(path);
    if (path.startsWith(StringPool.SLASH)) {
      path=path.substring(1);
    }
    String[] pathParts=StringUtil.split(path,StringPool.SLASH);
    for (    String pathPart : pathParts) {
      arguments.add(pathPart);
    }
    execute(request,responseJSONObject,arguments);
  }
 catch (  Exception e) {
    responseJSONObject.put(JSONKeys.ERROR,StackTraceUtil.getStackTrace(e));
    responseJSONObject.put(JSONKeys.STATUS,1);
  }
  String format=ParamUtil.getString(request,"format");
  if (format.equals("raw")) {
    response.setContentType(ContentTypes.TEXT_PLAIN);
    String outputStream=responseJSONObject.getString(JSONKeys.OUTPUT);
    ServletResponseUtil.write(response,outputStream);
  }
 else {
    response.setContentType(ContentTypes.APPLICATION_JSON);
    ServletResponseUtil.write(response,responseJSONObject.toString());
  }
}

{
  g.setColor(new Color(128,64,0));
  g.fillRect(10,HANG_HEIGHT * 2 + 10,HANG_WIDTH + 3,3);
  g.fillRect(HANG_WIDTH / 2 + 10,10,3,HANG_HEIGHT * 2);
  g.fillRect(HANG_WIDTH / 2 + 10,10,HANG_WIDTH / 2 + HANG_WIDTH / 2,3);
  g.fillRect(HANG_WIDTH * 3 / 2 + 9,10,3,HANG_HEIGHT / 3 + 1);
  if (_wrongGuess.length() != 0) {
    g.drawImage(_hangImages[_wrongGuess.length() - 1],HANG_WIDTH + 10,HANG_HEIGHT / 3,this);
    g.setColor(Color.RED);
    g.setFont(_wrongFont);
    g.drawChars(_wrongGuess.toUpperCase().toCharArray(),0,_wrongGuess.length(),HANG_WIDTH * 2,_wrongMetrics.getHeight() + 1);
  }
  g.setColor(Color.BLACK);
  g.setFont(_rightFont);
  int width=_rightMetrics.charWidth(' ');
  char[] wordChars=_getWord().toCharArray();
  for (int i=0; i < wordChars.length; i++) {
    if (wordChars[i] != ' ') {
      g.drawLine(HANG_WIDTH * 2 + 2 * i * width + 1,HANG_HEIGHT * 2 + 1,HANG_WIDTH * 2 + 2 * (i + 1) * width - 1,HANG_HEIGHT * 2 + 1);
      if (_gameOver() || _rightGuess.indexOf(wordChars[i]) != -1) {
        g.drawChars(_getWord().toUpperCase().toCharArray(),i,1,HANG_WIDTH * 2 + 2 * i * width + width / 2,HANG_HEIGHT * 2);
      }
    }
  }
  g.clearRect(_danceX,_danceY,DANCE_WIDTH,DANCE_HEIGHT);
  if (_danceIndex != -1) {
    _danceX+=DANCE_STEP[_danceIndex % DANCE_STEP.length];
    _danceX=Math.max(_danceX,_danceXLo);
    _danceX=Math.min(_danceX,_danceXHi);
    g.drawImage(_danceImages[_danceIndex % TOTAL_IMAGES_DANCE],_danceX,_danceY,this);
  }
}

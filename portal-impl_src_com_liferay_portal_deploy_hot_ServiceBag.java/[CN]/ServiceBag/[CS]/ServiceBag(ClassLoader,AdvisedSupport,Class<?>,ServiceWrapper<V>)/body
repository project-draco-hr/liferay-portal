{
  _advisedSupport=advisedSupport;
  Object previousService=serviceWrapper.getWrappedService();
  if (!(previousService instanceof ServiceWrapper)) {
    Class<?> previousServiceClass=previousService.getClass();
    AggregateClassLoader previousServiceClassLoader=new AggregateClassLoader(previousServiceClass.getClassLoader());
    previousServiceClassLoader.addClassLoader(IdentifiableOSGiService.class.getClassLoader());
    previousService=ProxyUtil.newProxyInstance(previousServiceClassLoader,new Class<?>[]{serviceTypeClass,IdentifiableOSGiService.class},new ClassLoaderBeanHandler(previousService,previousServiceClassLoader));
    serviceWrapper.setWrappedService((V)previousService);
  }
  AggregateClassLoader newServiceClassLoader=new AggregateClassLoader(serviceTypeClass.getClassLoader());
  newServiceClassLoader.addClassLoader(IdentifiableOSGiService.class.getClassLoader());
  Object nextTarget=ProxyUtil.newProxyInstance(newServiceClassLoader,new Class<?>[]{serviceTypeClass,ServiceWrapper.class,IdentifiableOSGiService.class},new ClassLoaderBeanHandler(serviceWrapper,classLoader));
  TargetSource nextTargetSource=new SingletonTargetSource(nextTarget){
    @Override public Class<?> getTargetClass(){
      return serviceWrapper.getClass();
    }
  }
;
  _advisedSupport.setTargetSource(nextTargetSource);
  _serviceWrapper=(ServiceWrapper<?>)nextTarget;
}

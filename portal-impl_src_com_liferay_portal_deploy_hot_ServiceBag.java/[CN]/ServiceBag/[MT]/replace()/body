{
  TargetSource targetSource=_advisedSupport.getTargetSource();
  Object currentService=targetSource.getTarget();
  ServiceWrapper<T> previousService=null;
  while (true) {
    if (currentService == _serviceWrapper) {
      Object wrappedService=_serviceWrapper.getWrappedService();
      if (previousService == null) {
        if (!(wrappedService instanceof ServiceWrapper) && ProxyUtil.isProxyClass(wrappedService.getClass())) {
          InvocationHandler invocationHandler=ProxyUtil.getInvocationHandler(wrappedService);
          if (invocationHandler instanceof ClassLoaderBeanHandler) {
            ClassLoaderBeanHandler classLoaderBeanHandler=(ClassLoaderBeanHandler)invocationHandler;
            wrappedService=classLoaderBeanHandler.getBean();
          }
        }
        TargetSource previousTargetSource=new SingletonTargetSource(wrappedService);
        _advisedSupport.setTargetSource(previousTargetSource);
      }
 else {
        previousService.setWrappedService((T)wrappedService);
      }
      break;
    }
    if (!(currentService instanceof ServiceWrapper)) {
      break;
    }
    previousService=(ServiceWrapper<T>)currentService;
    currentService=previousService.getWrappedService();
  }
}

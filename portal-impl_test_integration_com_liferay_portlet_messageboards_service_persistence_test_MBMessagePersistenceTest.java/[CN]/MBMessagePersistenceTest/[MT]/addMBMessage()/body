{
  long pk=RandomTestUtil.nextLong();
  MBMessage mbMessage=_persistence.create(pk);
  mbMessage.setUuid(RandomTestUtil.randomString());
  mbMessage.setGroupId(RandomTestUtil.nextLong());
  mbMessage.setCompanyId(RandomTestUtil.nextLong());
  mbMessage.setUserId(RandomTestUtil.nextLong());
  mbMessage.setUserName(RandomTestUtil.randomString());
  mbMessage.setCreateDate(RandomTestUtil.nextDate());
  mbMessage.setModifiedDate(RandomTestUtil.nextDate());
  mbMessage.setClassNameId(RandomTestUtil.nextLong());
  mbMessage.setClassPK(RandomTestUtil.nextLong());
  mbMessage.setCategoryId(RandomTestUtil.nextLong());
  mbMessage.setThreadId(RandomTestUtil.nextLong());
  mbMessage.setRootMessageId(RandomTestUtil.nextLong());
  mbMessage.setParentMessageId(RandomTestUtil.nextLong());
  mbMessage.setSubject(RandomTestUtil.randomString());
  mbMessage.setBody(RandomTestUtil.randomString());
  mbMessage.setFormat(RandomTestUtil.randomString());
  mbMessage.setAnonymous(RandomTestUtil.randomBoolean());
  mbMessage.setPriority(RandomTestUtil.nextDouble());
  mbMessage.setAllowPingbacks(RandomTestUtil.randomBoolean());
  mbMessage.setAnswer(RandomTestUtil.randomBoolean());
  mbMessage.setLastPublishDate(RandomTestUtil.nextDate());
  mbMessage.setStatus(RandomTestUtil.nextInt());
  mbMessage.setStatusByUserId(RandomTestUtil.nextLong());
  mbMessage.setStatusByUserName(RandomTestUtil.randomString());
  mbMessage.setStatusDate(RandomTestUtil.nextDate());
  _mbMessages.add(_persistence.update(mbMessage));
  return mbMessage;
}

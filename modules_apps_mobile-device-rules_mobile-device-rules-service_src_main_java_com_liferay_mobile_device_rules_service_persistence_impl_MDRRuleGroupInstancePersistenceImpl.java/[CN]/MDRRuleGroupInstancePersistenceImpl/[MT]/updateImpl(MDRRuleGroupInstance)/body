{
  mdrRuleGroupInstance=toUnwrappedModel(mdrRuleGroupInstance);
  boolean isNew=mdrRuleGroupInstance.isNew();
  MDRRuleGroupInstanceModelImpl mdrRuleGroupInstanceModelImpl=(MDRRuleGroupInstanceModelImpl)mdrRuleGroupInstance;
  if (Validator.isNull(mdrRuleGroupInstance.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    mdrRuleGroupInstance.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (mdrRuleGroupInstance.getCreateDate() == null)) {
    if (serviceContext == null) {
      mdrRuleGroupInstance.setCreateDate(now);
    }
 else {
      mdrRuleGroupInstance.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!mdrRuleGroupInstanceModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      mdrRuleGroupInstance.setModifiedDate(now);
    }
 else {
      mdrRuleGroupInstance.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (mdrRuleGroupInstance.isNew()) {
      session.save(mdrRuleGroupInstance);
      mdrRuleGroupInstance.setNew(false);
    }
 else {
      mdrRuleGroupInstance=(MDRRuleGroupInstance)session.merge(mdrRuleGroupInstance);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !MDRRuleGroupInstanceModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getUuid()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalUuid(),mdrRuleGroupInstanceModelImpl.getOriginalCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getUuid(),mdrRuleGroupInstanceModelImpl.getCompanyId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_GROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_GROUPID,args);
    }
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalRuleGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RULEGROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getRuleGroupId()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_RULEGROUPID,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RULEGROUPID,args);
    }
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalClassNameId(),mdrRuleGroupInstanceModelImpl.getOriginalClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getClassNameId(),mdrRuleGroupInstanceModelImpl.getClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_C,args);
    }
    if ((mdrRuleGroupInstanceModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{mdrRuleGroupInstanceModelImpl.getOriginalGroupId(),mdrRuleGroupInstanceModelImpl.getOriginalClassNameId(),mdrRuleGroupInstanceModelImpl.getOriginalClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C,args);
      args=new Object[]{mdrRuleGroupInstanceModelImpl.getGroupId(),mdrRuleGroupInstanceModelImpl.getClassNameId(),mdrRuleGroupInstanceModelImpl.getClassPK()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_G_C_C,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_G_C_C,args);
    }
  }
  entityCache.putResult(MDRRuleGroupInstanceModelImpl.ENTITY_CACHE_ENABLED,MDRRuleGroupInstanceImpl.class,mdrRuleGroupInstance.getPrimaryKey(),mdrRuleGroupInstance,false);
  clearUniqueFindersCache(mdrRuleGroupInstanceModelImpl);
  cacheUniqueFindersCache(mdrRuleGroupInstanceModelImpl,isNew);
  mdrRuleGroupInstance.resetOriginalValues();
  return mdrRuleGroupInstance;
}

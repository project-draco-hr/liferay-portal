{
  String pathInfo=null;
  String queryString=null;
  String requestURI=null;
  String servletPath=null;
  RenderRequestImpl portletReq=(RenderRequestImpl)req.getAttribute(WebKeys.JAVAX_PORTLET_REQUEST);
  PortletResponse portletRes=(PortletResponse)req.getAttribute(WebKeys.JAVAX_PORTLET_RESPONSE);
  if (_path != null) {
    String pathNoQueryString=_path;
    int pos=_path.indexOf(StringPool.QUESTION);
    if (pos != -1) {
      pathNoQueryString=_path.substring(0,pos);
      queryString=_path.substring(pos + 1,_path.length());
    }
    List servletURLPatterns=portletReq.getPortlet().getServletURLPatterns();
    Iterator itr=servletURLPatterns.iterator();
    while (itr.hasNext()) {
      String urlPattern=(String)itr.next();
      if (urlPattern.endsWith("/*")) {
        pos=urlPattern.indexOf("/*");
        urlPattern=urlPattern.substring(0,pos);
        if (pathNoQueryString.startsWith(urlPattern)) {
          pathInfo=pathNoQueryString.substring(urlPattern.length());
          servletPath=urlPattern;
          break;
        }
      }
    }
    if ((pathInfo == null) && (servletPath == null)) {
      pathInfo=StringPool.BLANK;
      servletPath=pathNoQueryString;
    }
    requestURI=portletReq.getContextPath() + pathNoQueryString;
  }
  PortletServletRequest portletServletReq=new PortletServletRequest((HttpServletRequest)req,portletReq,pathInfo,queryString,requestURI,servletPath,portletReq.getSharedSessionAttributes());
  PortletServletResponse portletServletRes=new PortletServletResponse((HttpServletResponse)res,portletRes);
  if (include) {
    _rd.include(portletServletReq,portletServletRes);
  }
 else {
    _rd.forward(portletServletReq,portletServletRes);
  }
}

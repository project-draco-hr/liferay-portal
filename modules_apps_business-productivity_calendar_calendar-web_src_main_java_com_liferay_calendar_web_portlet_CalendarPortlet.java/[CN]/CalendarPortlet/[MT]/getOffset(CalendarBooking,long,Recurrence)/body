{
  Frequency frequency=null;
  if (recurrence != null) {
    frequency=recurrence.getFrequency();
  }
  long oldStartTime=editedCalendarBookingInstance.getStartTime();
  TimeZone timeZone=editedCalendarBookingInstance.getTimeZone();
  if (frequency == Frequency.WEEKLY) {
    CalendarBooking firstInstance=_calendarBookingService.getCalendarBookingInstance(editedCalendarBookingInstance.getCalendarBookingId(),0);
    java.util.Calendar oldStartTimeJCalendar=CalendarFactoryUtil.getCalendar(oldStartTime,timeZone);
    java.util.Calendar firstInstanceJCalendar=CalendarFactoryUtil.getCalendar(firstInstance.getStartTime(),timeZone);
    if (!JCalendarUtil.isSameDayOfWeek(oldStartTimeJCalendar,firstInstanceJCalendar)) {
      java.util.Calendar newStartTimeJCalendar=CalendarFactoryUtil.getCalendar(newStartTime,timeZone);
      newStartTimeJCalendar=JCalendarUtil.mergeJCalendar(oldStartTimeJCalendar,newStartTimeJCalendar,timeZone);
      newStartTime=newStartTimeJCalendar.getTimeInMillis();
    }
  }
  return newStartTime - oldStartTime;
}

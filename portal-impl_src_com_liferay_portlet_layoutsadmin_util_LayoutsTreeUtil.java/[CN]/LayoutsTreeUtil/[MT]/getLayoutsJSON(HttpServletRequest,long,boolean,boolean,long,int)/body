{
  Layout includedLayout=LayoutLocalServiceUtil.getLayout(groupId,privateLayout,includedLayoutId);
  long parentLayoutId=includedLayout.getParentLayoutId();
  long includedLayoutIndex=LayoutServiceUtil.getLayoutsCount(groupId,privateLayout,parentLayoutId,includedLayout.getPriority());
  int total=LayoutServiceUtil.getLayoutsCount(groupId,privateLayout,parentLayoutId);
  int start=(int)includedLayoutIndex - 1;
  int end=(int)includedLayoutIndex + quantity;
  if (end > total) {
    start=total - quantity;
    end=total;
    if (start < 0) {
      start=0;
    }
  }
  List<Layout> ancestorLayouts=LayoutServiceUtil.getAncestorLayouts(includedLayout.getPlid());
  long[] ancestorLayoutsIds=new long[ancestorLayouts.size()];
  String[] ancestorLayoutsNames=new String[ancestorLayouts.size()];
  Locale locale=PortalUtil.getLocale(request);
  for (int i=0; i < ancestorLayouts.size(); i++) {
    ancestorLayoutsIds[i]=ancestorLayouts.get(i).getLayoutId();
    ancestorLayoutsNames[i]=ancestorLayouts.get(i).getName(locale);
  }
  List<Layout> layouts=LayoutServiceUtil.getLayouts(groupId,privateLayout,parentLayoutId,incomplete,start,end);
  JSONObject response=_convertListLayoutToJSONObject(layouts,request,groupId,total);
  response.put("ancestorIds",ancestorLayoutsIds);
  response.put("ancestorNames",ancestorLayoutsNames);
  response.put("startIndex",start);
  return response.toString();
}

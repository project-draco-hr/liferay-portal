{
  if (_log.isDebugEnabled()) {
    StringBundler sb=new StringBundler(5);
    sb.append("_toJSON(groupId=");
    sb.append(groupId);
    sb.append(", layoutTreeNodes=");
    sb.append(layoutTreeNodes);
    sb.append(StringPool.CLOSE_PARENTHESIS);
    _log.debug(sb.toString());
  }
  ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  boolean hasManageLayoutsPermission=GroupPermissionUtil.contains(themeDisplay.getPermissionChecker(),groupId,ActionKeys.MANAGE_LAYOUTS);
  for (  LayoutTreeNode layoutTreeNode : layoutTreeNodes) {
    JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
    String childrenJSON=_toJSON(request,groupId,layoutTreeNode.getChildLayoutTreeNodes());
    jsonObject.put("children",JSONFactoryUtil.createJSONObject(childrenJSON));
    Layout layout=layoutTreeNode.getLayout();
    jsonObject.put("contentDisplayPage",layout.isContentDisplayPage());
    jsonObject.put("friendlyURL",layout.getFriendlyURL());
    if (layout instanceof VirtualLayout) {
      VirtualLayout virtualLayout=(VirtualLayout)layout;
      jsonObject.put("groupId",virtualLayout.getSourceGroupId());
    }
 else {
      jsonObject.put("groupId",layout.getGroupId());
    }
    jsonObject.put("hasChildren",layout.hasChildren());
    jsonObject.put("layoutId",layout.getLayoutId());
    jsonObject.put("name",layout.getName(themeDisplay.getLocale()));
    LayoutType layoutType=layout.getLayoutType();
    jsonObject.put("parentable",layoutType.isParentable());
    jsonObject.put("parentLayoutId",layout.getParentLayoutId());
    jsonObject.put("plid",layout.getPlid());
    jsonObject.put("priority",layout.getPriority());
    jsonObject.put("privateLayout",layout.isPrivateLayout());
    jsonObject.put("regularURL",layout.getRegularURL(request));
    jsonObject.put("sortable",hasManageLayoutsPermission && SitesUtil.isLayoutSortable(layout));
    jsonObject.put("type",layout.getType());
    jsonObject.put("updateable",LayoutPermissionUtil.contains(themeDisplay.getPermissionChecker(),layout,ActionKeys.UPDATE));
    jsonObject.put("uuid",layout.getUuid());
    LayoutRevision layoutRevision=LayoutStagingUtil.getLayoutRevision(layout);
    if (layoutRevision != null) {
      long layoutSetBranchId=layoutRevision.getLayoutSetBranchId();
      if (StagingUtil.isIncomplete(layout,layoutSetBranchId)) {
        jsonObject.put("incomplete",true);
      }
      LayoutSetBranch layoutSetBranch=LayoutSetBranchLocalServiceUtil.getLayoutSetBranch(layoutSetBranchId);
      LayoutBranch layoutBranch=layoutRevision.getLayoutBranch();
      if (!layoutBranch.isMaster()) {
        jsonObject.put("layoutBranchId",layoutBranch.getLayoutBranchId());
        jsonObject.put("layoutBranchName",layoutBranch.getName());
      }
      if (layoutRevision.isHead()) {
        jsonObject.put("layoutRevisionHead",true);
      }
      jsonObject.put("layoutRevisionId",layoutRevision.getLayoutRevisionId());
      jsonObject.put("layoutSetBranchId",layoutSetBranchId);
      jsonObject.put("layoutSetBranchName",layoutSetBranch.getName());
    }
    jsonArray.put(jsonObject);
  }
  JSONObject responseJSONObject=JSONFactoryUtil.createJSONObject();
  responseJSONObject.put("layouts",jsonArray);
  responseJSONObject.put("total",layoutTreeNodes.getTotal());
  return responseJSONObject.toString();
}

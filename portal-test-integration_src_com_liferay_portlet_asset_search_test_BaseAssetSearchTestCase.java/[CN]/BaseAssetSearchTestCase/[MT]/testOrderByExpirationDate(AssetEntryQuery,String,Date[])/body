{
  ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group1.getGroupId());
  BaseModel<?> parentBaseModel=getParentBaseModel(_group1,serviceContext);
  final SearchContext searchContext=SearchContextTestUtil.getSearchContext();
  searchContext.setGroupIds(assetEntryQuery.getGroupIds());
  for (  Date expirationDate : expirationDates) {
    addBaseModel(parentBaseModel,RandomTestUtil.randomString(),expirationDate,serviceContext);
  }
  assetEntryQuery.setOrderByCol1("expirationDate");
  assetEntryQuery.setOrderByType1(orderByType);
  Arrays.sort(expirationDates);
  final DateFormat dateFormat=DateFormatFactoryUtil.getSimpleDateFormat(PropsValues.INDEX_DATE_FORMAT_PATTERN);
  IdempotentRetryAssert.retryAssert(10,TimeUnit.SECONDS,new Callable<Void>(){
    @Override public Void call() throws Exception {
      List<AssetEntry> assetEntries=search(assetEntryQuery,searchContext);
      Assert.assertEquals(ArrayUtils.toString(format(expirationDates,dateFormat)),ArrayUtils.toString(format(getExpirationDates(assetEntries,orderByType),dateFormat)));
      return null;
    }
  }
);
}

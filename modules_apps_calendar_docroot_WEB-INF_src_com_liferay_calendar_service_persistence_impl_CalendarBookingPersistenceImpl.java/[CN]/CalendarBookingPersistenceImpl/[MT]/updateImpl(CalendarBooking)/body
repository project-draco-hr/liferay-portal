{
  calendarBooking=toUnwrappedModel(calendarBooking);
  boolean isNew=calendarBooking.isNew();
  CalendarBookingModelImpl calendarBookingModelImpl=(CalendarBookingModelImpl)calendarBooking;
  if (Validator.isNull(calendarBooking.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    calendarBooking.setUuid(uuid);
  }
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  Date now=new Date();
  if (isNew && (calendarBooking.getCreateDate() == null)) {
    if (serviceContext == null) {
      calendarBooking.setCreateDate(now);
    }
 else {
      calendarBooking.setCreateDate(serviceContext.getCreateDate(now));
    }
  }
  if (!calendarBookingModelImpl.hasSetModifiedDate()) {
    if (serviceContext == null) {
      calendarBooking.setModifiedDate(now);
    }
 else {
      calendarBooking.setModifiedDate(serviceContext.getModifiedDate(now));
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (calendarBooking.isNew()) {
      session.save(calendarBooking);
      calendarBooking.setNew(false);
    }
 else {
      session.merge(calendarBooking);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !CalendarBookingModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEBLOCKID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalResourceBlockId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_RESOURCEBLOCKID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEBLOCKID,args);
      args=new Object[]{calendarBookingModelImpl.getResourceBlockId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_RESOURCEBLOCKID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_RESOURCEBLOCKID,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{calendarBookingModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalUuid(),calendarBookingModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{calendarBookingModelImpl.getUuid(),calendarBookingModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalCalendarId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_CALENDARID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARID,args);
      args=new Object[]{calendarBookingModelImpl.getCalendarId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_CALENDARID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARID,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARRESOURCEID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalCalendarResourceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_CALENDARRESOURCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARRESOURCEID,args);
      args=new Object[]{calendarBookingModelImpl.getCalendarResourceId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_CALENDARRESOURCEID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_CALENDARRESOURCEID,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PARENTCALENDARBOOKINGID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalParentCalendarBookingId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_PARENTCALENDARBOOKINGID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PARENTCALENDARBOOKINGID,args);
      args=new Object[]{calendarBookingModelImpl.getParentCalendarBookingId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_PARENTCALENDARBOOKINGID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_PARENTCALENDARBOOKINGID,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalCalendarId(),calendarBookingModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S,args);
      args=new Object[]{calendarBookingModelImpl.getCalendarId(),calendarBookingModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_C_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_C_S,args);
    }
    if ((calendarBookingModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_S.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{calendarBookingModelImpl.getOriginalParentCalendarBookingId(),calendarBookingModelImpl.getOriginalStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_S,args);
      args=new Object[]{calendarBookingModelImpl.getParentCalendarBookingId(),calendarBookingModelImpl.getStatus()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_P_S,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_P_S,args);
    }
  }
  EntityCacheUtil.putResult(CalendarBookingModelImpl.ENTITY_CACHE_ENABLED,CalendarBookingImpl.class,calendarBooking.getPrimaryKey(),calendarBooking,false);
  clearUniqueFindersCache(calendarBooking);
  cacheUniqueFindersCache(calendarBooking);
  calendarBooking.resetOriginalValues();
  return calendarBooking;
}

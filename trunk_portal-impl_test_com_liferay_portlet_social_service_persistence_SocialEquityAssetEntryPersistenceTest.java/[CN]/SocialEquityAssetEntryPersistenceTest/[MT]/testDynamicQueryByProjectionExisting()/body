{
  SocialEquityAssetEntry newSocialEquityAssetEntry=addSocialEquityAssetEntry();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialEquityAssetEntry.class,SocialEquityAssetEntry.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("equityAssetEntryId"));
  Object newEquityAssetEntryId=newSocialEquityAssetEntry.getEquityAssetEntryId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("equityAssetEntryId",new Object[]{newEquityAssetEntryId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  assertEquals(1,result.size());
  Object existingEquityAssetEntryId=result.get(0);
  assertEquals(existingEquityAssetEntryId,newEquityAssetEntryId);
}

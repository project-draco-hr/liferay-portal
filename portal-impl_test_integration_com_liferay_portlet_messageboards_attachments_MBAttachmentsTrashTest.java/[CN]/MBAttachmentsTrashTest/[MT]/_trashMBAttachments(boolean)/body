{
  int initialNotInTrashCount=_message.getAttachmentsFileEntriesCount();
  int initialTrashEntriesCount=_message.getDeletedAttachmentsFileEntriesCount();
  List<FileEntry> fileEntries=_message.getAttachmentsFileEntries();
  List<String> existingFiles=new ArrayList<String>();
  for (  FileEntry fileEntry : fileEntries) {
    existingFiles.add(fileEntry.getTitle());
  }
  ServiceContext serviceContext=new ServiceContext();
  serviceContext.setScopeGroupId(_group.getGroupId());
  String fileName="OSX_Test.docx";
  _message=MBMessageLocalServiceUtil.updateMessage(TestPropsValues.getUserId(),_message.getMessageId(),"Subject","Body",_getInputStreamOVPs(fileName),existingFiles,0,false,serviceContext);
  Assert.assertEquals(initialNotInTrashCount + 1,_message.getAttachmentsFileEntriesCount());
  Assert.assertEquals(initialTrashEntriesCount,_message.getDeletedAttachmentsFileEntriesCount());
  long fileEntryId=MBMessageLocalServiceUtil.moveMessageAttachmentToTrash(TestPropsValues.getUserId(),_message.getMessageId(),fileName);
  FileEntry fileEntry=PortletFileRepositoryUtil.getPortletFileEntry(fileEntryId);
  Assert.assertEquals(initialNotInTrashCount,_message.getAttachmentsFileEntriesCount());
  Assert.assertEquals(initialTrashEntriesCount + 1,_message.getDeletedAttachmentsFileEntriesCount());
  if (restore) {
    MBMessageLocalServiceUtil.restoreMessageAttachmentFromTrash(TestPropsValues.getUserId(),_message.getMessageId(),fileEntry.getTitle());
    Assert.assertEquals(initialNotInTrashCount + 1,_message.getAttachmentsFileEntriesCount());
    Assert.assertEquals(initialTrashEntriesCount,_message.getDeletedAttachmentsFileEntriesCount());
    MBMessageLocalServiceUtil.deleteMessageAttachment(_message.getMessageId(),fileName);
  }
 else {
    MBMessageLocalServiceUtil.deleteMessageAttachment(_message.getMessageId(),fileEntry.getTitle());
    Assert.assertEquals(initialNotInTrashCount,_message.getAttachmentsFileEntriesCount());
    Assert.assertEquals(initialTrashEntriesCount,_message.getDeletedAttachmentsFileEntriesCount());
  }
}

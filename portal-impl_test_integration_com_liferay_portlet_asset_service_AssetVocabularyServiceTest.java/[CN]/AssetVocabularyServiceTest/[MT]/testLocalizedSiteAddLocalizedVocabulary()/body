{
  Group group=GroupTestUtil.addGroup();
  Locale enLocale=Locale.US;
  Locale esLocale=new Locale("es","ES");
  Locale deLocale=new Locale("de","DE");
  LocaleThreadLocal.setSiteDefaultLocale(esLocale);
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  String title=ServiceTestUtil.randomString();
  Map<Locale,String> titleMap=new HashMap<Locale,String>();
  String englishTitle=title + "_US";
  String spanishTitle=title + "_ES";
  titleMap.put(enLocale,englishTitle);
  titleMap.put(esLocale,spanishTitle);
  String description=ServiceTestUtil.randomString();
  Map<Locale,String> descriptionMap=new HashMap<Locale,String>();
  String englishDescription=description + "_US";
  String spanishDescription=description + "_ES";
  descriptionMap.put(enLocale,englishDescription);
  descriptionMap.put(esLocale,spanishDescription);
  AssetVocabulary assetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(TestPropsValues.getUserId(),StringPool.BLANK,titleMap,descriptionMap,StringPool.BLANK,serviceContext);
  Assert.assertEquals(spanishTitle,assetVocabulary.getName());
  Assert.assertEquals(englishTitle,assetVocabulary.getTitle(enLocale,true));
  Assert.assertEquals(spanishTitle,assetVocabulary.getTitle(esLocale,true));
  Assert.assertEquals(spanishTitle,assetVocabulary.getTitle(deLocale,true));
  Assert.assertEquals(englishDescription,assetVocabulary.getDescription(enLocale,true));
  Assert.assertEquals(spanishDescription,assetVocabulary.getDescription(esLocale,true));
  Assert.assertEquals(spanishDescription,assetVocabulary.getDescription(deLocale,true));
}

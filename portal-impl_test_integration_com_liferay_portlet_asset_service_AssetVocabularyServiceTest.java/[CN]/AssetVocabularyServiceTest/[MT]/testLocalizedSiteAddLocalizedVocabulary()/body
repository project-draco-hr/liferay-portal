{
  Locale esLocale=new Locale("es","ES");
  LocaleThreadLocal.setSiteDefaultLocale(esLocale);
  String title=ServiceTestUtil.randomString();
  Map<Locale,String> titleMap=new HashMap<Locale,String>();
  Locale enLocale=Locale.US;
  titleMap.put(enLocale,title + "_US");
  titleMap.put(esLocale,title + "_ES");
  String description=ServiceTestUtil.randomString();
  Map<Locale,String> descriptionMap=new HashMap<Locale,String>();
  descriptionMap.put(enLocale,description + "_US");
  descriptionMap.put(esLocale,description + "_ES");
  Group group=GroupTestUtil.addGroup();
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  AssetVocabulary assetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(TestPropsValues.getUserId(),StringPool.BLANK,titleMap,descriptionMap,StringPool.BLANK,serviceContext);
  Assert.assertEquals(titleMap.get(esLocale),assetVocabulary.getName());
  Assert.assertEquals(titleMap.get(enLocale),assetVocabulary.getTitle(enLocale,true));
  Assert.assertEquals(titleMap.get(esLocale),assetVocabulary.getTitle(esLocale,true));
  Locale deLocale=new Locale("de","DE");
  Assert.assertEquals(titleMap.get(esLocale),assetVocabulary.getTitle(deLocale,true));
  Assert.assertEquals(descriptionMap.get(enLocale),assetVocabulary.getDescription(enLocale,true));
  Assert.assertEquals(descriptionMap.get(esLocale),assetVocabulary.getDescription(esLocale,true));
  Assert.assertEquals(descriptionMap.get(esLocale),assetVocabulary.getDescription(deLocale,true));
}

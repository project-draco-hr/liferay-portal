{
  LocaleThreadLocal.setSiteDefaultLocale(LocaleUtil.SPAIN);
  String title=ServiceTestUtil.randomString();
  Map<Locale,String> titleMap=new HashMap<Locale,String>();
  titleMap.put(Locale.US,title + "_US");
  titleMap.put(LocaleUtil.SPAIN,title + "_ES");
  String description=ServiceTestUtil.randomString();
  Map<Locale,String> descriptionMap=new HashMap<Locale,String>();
  descriptionMap.put(LocaleUtil.SPAIN,description + "_ES");
  descriptionMap.put(Locale.US,description + "_US");
  Group group=GroupTestUtil.addGroup();
  ServiceContext serviceContext=ServiceTestUtil.getServiceContext(group.getGroupId());
  AssetVocabulary assetVocabulary=AssetVocabularyLocalServiceUtil.addVocabulary(TestPropsValues.getUserId(),StringPool.BLANK,titleMap,descriptionMap,StringPool.BLANK,serviceContext);
  Assert.assertEquals(titleMap.get(LocaleUtil.SPAIN),assetVocabulary.getName());
  Assert.assertEquals(titleMap.get(LocaleUtil.SPAIN),assetVocabulary.getTitle(Locale.GERMANY,true));
  Assert.assertEquals(titleMap.get(LocaleUtil.SPAIN),assetVocabulary.getTitle(LocaleUtil.SPAIN,true));
  Assert.assertEquals(titleMap.get(Locale.US),assetVocabulary.getTitle(Locale.US,true));
  Assert.assertEquals(descriptionMap.get(LocaleUtil.SPAIN),assetVocabulary.getDescription(Locale.GERMANY,true));
  Assert.assertEquals(descriptionMap.get(LocaleUtil.SPAIN),assetVocabulary.getDescription(LocaleUtil.SPAIN,true));
  Assert.assertEquals(descriptionMap.get(Locale.US),assetVocabulary.getDescription(Locale.US,true));
}

{
  if (file.isFile()) {
    return file.lastModified();
  }
  final AtomicLong lastModified=new AtomicLong();
  Files.walkFileTree(file.toPath(),new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes basicFileAttributes) throws IOException {
      FileTime fileTime=basicFileAttributes.lastModifiedTime();
      long fileTimeMillis=fileTime.toMillis();
      if (fileTimeMillis > lastModified.longValue()) {
        lastModified.set(fileTimeMillis);
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
  return lastModified.get();
}

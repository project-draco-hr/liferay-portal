{
  MBThreadFlag newMBThreadFlag=addMBThreadFlag();
  _persistence.clearCache();
  MBThreadFlag existingMBThreadFlag=_persistence.findByPrimaryKey(newMBThreadFlag.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingMBThreadFlag.getUuid(),ReflectionTestUtil.invoke(existingMBThreadFlag,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingMBThreadFlag.getGroupId()),ReflectionTestUtil.<Long>invoke(existingMBThreadFlag,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingMBThreadFlag.getUserId()),ReflectionTestUtil.<Long>invoke(existingMBThreadFlag,"getOriginalUserId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingMBThreadFlag.getThreadId()),ReflectionTestUtil.<Long>invoke(existingMBThreadFlag,"getOriginalThreadId",new Class<?>[0]));
}

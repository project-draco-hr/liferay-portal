{
  if (primaryKey instanceof List<?>) {
    List<Serializable> cachedPrimaryKeyList=(List<Serializable>)primaryKey;
    if (cachedPrimaryKeyList.isEmpty()) {
      return (Serializable)Collections.emptyList();
    }
    Set<Serializable> cachedPrimaryKeySet=new HashSet<Serializable>(cachedPrimaryKeyList);
    Map<Serializable,Serializable> resultMap=basePersistenceImpl.fetchByPrimaryKeys(cachedPrimaryKeySet);
    if (resultMap.size() < cachedPrimaryKeySet.size()) {
      return null;
    }
    List<Serializable> resultList=new ArrayList<Serializable>(cachedPrimaryKeyList.size());
    for (    Serializable cachedPrimaryKey : cachedPrimaryKeyList) {
      resultList.add(resultMap.get(cachedPrimaryKey));
    }
    return (Serializable)Collections.unmodifiableList(resultList);
  }
 else   if (BaseModel.class.isAssignableFrom(finderPath.getResultClass())) {
    return EntityCacheUtil.loadResult(finderPath.isEntityCacheEnabled(),finderPath.getResultClass(),primaryKey,basePersistenceImpl);
  }
  return primaryKey;
}

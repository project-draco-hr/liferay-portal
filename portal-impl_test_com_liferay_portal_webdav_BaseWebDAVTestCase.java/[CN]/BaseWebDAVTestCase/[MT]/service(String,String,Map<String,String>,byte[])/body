{
  if (headers == null) {
    headers=new HashMap<String,String>();
  }
  headers.put(HttpHeaders.USER_AGENT,getUserAgent());
  try {
    throw new Exception();
  }
 catch (  Exception e) {
    StackTraceElement[] stackTraceElements=e.getStackTrace();
    for (    StackTraceElement stackTraceElement : stackTraceElements) {
      String methodName=stackTraceElement.getMethodName();
      if (methodName.equals("setUp") || methodName.equals("tearDown") || methodName.startsWith("test")) {
        String testName=StringUtil.extractLast(stackTraceElement.getClassName(),StringPool.PERIOD);
        testName=StringUtil.replace(testName,new String[]{"WebDAV","Test"},new String[]{"",""});
        headers.put("X-Litmus",testName + ": (" + stackTraceElement.getMethodName()+ ":"+ stackTraceElement.getLineNumber()+ ")");
        break;
      }
    }
  }
  String requestURI=_CONTEXT_PATH + _SERVLET_PATH + _PATH_INFO_PREFACE+ path;
  MockHttpServletRequest request=new MockHttpServletRequest(method,requestURI);
  MockHttpServletResponse response=new MockHttpServletResponse();
  request.setContextPath(_CONTEXT_PATH);
  request.setServletPath(_SERVLET_PATH);
  request.setPathInfo(_PATH_INFO_PREFACE + path);
  if (data != null) {
    request.setContent(data);
    String contentType=headers.remove(HttpHeaders.CONTENT_TYPE);
    if (contentType != null) {
      request.setContentType(contentType);
    }
 else {
      request.setContentType(ContentTypes.TEXT_PLAIN);
    }
  }
  for (  Map.Entry<String,String> entry : headers.entrySet()) {
    String key=entry.getKey();
    String value=entry.getValue();
    request.addHeader(key,value);
  }
  try {
    DLWebDAVStorageImpl storage=new DLWebDAVStorageImpl();
    storage.setToken("document_library");
    WebDAVUtil.addStorage(storage);
    WebDAVServlet servlet=new WebDAVServlet();
    servlet.service(request,response);
    int statusCode=response.getStatus();
    byte[] responseBody=response.getContentAsByteArray();
    Map<String,String> responseHeaders=new HashMap<String,String>();
    for (    String name : response.getHeaderNames()) {
      responseHeaders.put(name,(String)response.getHeader(name));
    }
    return new Tuple(statusCode,responseBody,responseHeaders);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}

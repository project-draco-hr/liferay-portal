{
  super.doVerify();
  List<Company> companies=_companyLocalService.getCompanies(false);
  for (  Company company : companies) {
    PortletPreferences portletPreferences=_prefsProps.getPreferences(company.getCompanyId(),true);
    for (    String key : LegacyOpenSSOPropsKeys.TOTAL_OPENSSO_KEYS) {
      Assert.assertTrue(Validator.isNull(portletPreferences.getValue(key,StringPool.BLANK)));
    }
    Settings settings=getSettings(company.getCompanyId());
    Assert.assertEquals("testEmailAddressAttr",settings.getValue(OpenSSOConstants.EMAIL_ADDRESS_ATTR,StringPool.BLANK));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(OpenSSOConstants.AUTH_ENABLED,StringPool.FALSE)));
    Assert.assertEquals("testFirstNameAttr",settings.getValue(OpenSSOConstants.FIRST_NAME_ATTR,StringPool.BLANK));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(OpenSSOConstants.IMPORT_FROM_LDAP,StringPool.FALSE)));
    Assert.assertEquals("testLastNameAttr",settings.getValue(OpenSSOConstants.LAST_NAME_ATTR,StringPool.BLANK));
    Assert.assertEquals("http://test.com/login/url",settings.getValue(OpenSSOConstants.LOGIN_URL,StringPool.BLANK));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(OpenSSOConstants.LOGOUT_ON_SESSION_EXPIRATION,StringPool.FALSE)));
    Assert.assertEquals("http://test.com/logout/url",settings.getValue(OpenSSOConstants.LOGOUT_URL,StringPool.BLANK));
    Assert.assertEquals("testScreenNameAttr",settings.getValue(OpenSSOConstants.SCREEN_NAME_ATTR,StringPool.BLANK));
    Assert.assertEquals("http://test.com/service/url",settings.getValue(OpenSSOConstants.SERVICE_URL,StringPool.BLANK));
  }
}

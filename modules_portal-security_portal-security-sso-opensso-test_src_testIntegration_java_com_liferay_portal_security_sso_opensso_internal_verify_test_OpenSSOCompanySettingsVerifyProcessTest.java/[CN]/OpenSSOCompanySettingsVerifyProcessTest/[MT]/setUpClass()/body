{
  Bundle bundle=FrameworkUtil.getBundle(OpenSSOCompanySettingsVerifyProcessTest.class);
  _bundleContext=bundle.getBundleContext();
  ServiceReference<CompanyLocalService> companyLocalServiceReference=_bundleContext.getServiceReference(CompanyLocalService.class);
  _companyLocalService=_bundleContext.getService(companyLocalServiceReference);
  ServiceReference<PrefsProps> prefsPropsServiceReference=_bundleContext.getServiceReference(PrefsProps.class);
  _prefsProps=_bundleContext.getService(prefsPropsServiceReference);
  ServiceReference<SettingsFactory> configurationAdminServiceReference=_bundleContext.getServiceReference(SettingsFactory.class);
  _settingsFactory=_bundleContext.getService(configurationAdminServiceReference);
  UnicodeProperties properties=new UnicodeProperties();
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_EMAIL_ADDRESS_ATTR,"testEmailAddressAttr");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_AUTH_ENABLED,StringPool.TRUE);
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_FIRST_NAME_ATTR,"testFirstNameAttr");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_IMPORT_FROM_LDAP,StringPool.TRUE);
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_LAST_NAME_ATTR,"testLastNameAttr");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_LOGIN_URL,"http://test.com/login/url");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_LOGOUT_ON_SESSION_EXPIRATION,StringPool.TRUE);
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_LOGOUT_URL,"http://test.com/logout/url");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_SCREEN_NAME_ATTR,"testScreenNameAttr");
  properties.put(LegacyOpenSSOPropsKeys.OPENSSO_SERVICE_URL,"http://test.com/service/url");
  List<Company> companies=_companyLocalService.getCompanies(false);
  for (  Company company : companies) {
    _companyLocalService.updatePreferences(company.getCompanyId(),properties);
  }
}

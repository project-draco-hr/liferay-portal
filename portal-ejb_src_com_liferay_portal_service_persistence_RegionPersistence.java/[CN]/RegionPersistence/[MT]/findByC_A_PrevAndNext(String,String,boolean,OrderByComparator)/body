{
  com.liferay.portal.model.Region region=findByPrimaryKey(regionId);
  int count=countByC_A(countryId,active);
  Session session=null;
  try {
    session=openSession();
    StringBuffer query=new StringBuffer();
    query.append("FROM Region IN CLASS com.liferay.portal.service.persistence.RegionHBM WHERE ");
    if (countryId == null) {
      query.append("countryId is null");
    }
 else {
      query.append("countryId = ?");
    }
    query.append(" AND ");
    query.append("active_ = ?");
    query.append(" ");
    if (obc != null) {
      query.append("ORDER BY " + obc.getOrderBy());
    }
 else {
      query.append("ORDER BY ");
      query.append("name ASC");
    }
    Query q=session.createQuery(query.toString());
    int queryPos=0;
    if (countryId != null) {
      q.setString(queryPos++,countryId);
    }
    q.setBoolean(queryPos++,active);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,obc,region,RegionHBMUtil.getInstance());
    com.liferay.portal.model.Region[] array=new com.liferay.portal.model.Region[3];
    array[0]=(com.liferay.portal.model.Region)objArray[0];
    array[1]=(com.liferay.portal.model.Region)objArray[1];
    array[2]=(com.liferay.portal.model.Region)objArray[2];
    return array;
  }
 catch (  HibernateException he) {
    throw new SystemException(he);
  }
 finally {
    closeSession(session);
  }
}

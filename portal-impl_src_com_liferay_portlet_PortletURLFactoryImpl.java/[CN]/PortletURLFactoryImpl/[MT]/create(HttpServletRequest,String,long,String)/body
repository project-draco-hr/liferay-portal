{
  LiferayPortletRequest liferayPortletRequest=(LiferayPortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);
  LiferayPortletResponse liferayPortletResponse=(LiferayPortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);
  if ((liferayPortletRequest == null) || (liferayPortletResponse == null)) {
    return new PortletURLImpl(request,portletName,plid,lifecycle);
  }
  try {
    Layout layout=(Layout)request.getAttribute(WebKeys.LAYOUT);
    PortletPreferences portletSetup=PortletPreferencesFactoryUtil.getLayoutPortletSetup(layout,portletName);
    long layoutId=GetterUtil.getLong(portletSetup.getValue("portlet-setup-link-to-layout-id",null));
    if (layoutId > 0) {
      try {
        Layout linkedLayout=LayoutLocalServiceUtil.getLayout(layout.getGroupId(),layout.isPrivateLayout(),layoutId);
        plid=linkedLayout.getPlid();
      }
 catch (      PortalException pe) {
      }
    }
 else {
      plid=GetterUtil.getLong(portletSetup.getValue("portlet-setup-link-to-plid",String.valueOf(plid)));
    }
  }
 catch (  SystemException se) {
    if (_log.isWarnEnabled()) {
      _log.warn(se,se);
    }
  }
  if (plid == LayoutConstants.DEFAULT_PLID) {
    plid=liferayPortletRequest.getPlid();
  }
  LiferayPortletURL liferayPortletURL=null;
  Portlet portlet=liferayPortletRequest.getPortlet();
  String portletURLClass=portlet.getPortletURLClass();
  if (portlet.getPortletId().equals(portletName) && Validator.isNotNull(portletURLClass)) {
    try {
      Class<?> portletURLClassObj=Class.forName(portletURLClass);
      Constructor<?> constructor=portletURLClassObj.getConstructor(new Class[]{com.liferay.portlet.PortletResponseImpl.class,long.class,String.class});
      liferayPortletURL=(PortletURLImpl)constructor.newInstance(new Object[]{liferayPortletResponse,plid,lifecycle});
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
  }
  if (liferayPortletURL == null) {
    liferayPortletURL=new PortletURLImpl(request,portletName,plid,lifecycle);
  }
  PortletApp portletApp=portlet.getPortletApp();
  Set<PortletURLListener> portletURLListeners=portletApp.getPortletURLListeners();
  for (  PortletURLListener portletURLListener : portletURLListeners) {
    try {
      PortletURLGenerationListener portletURLGenerationListener=PortletURLListenerFactory.create(portletURLListener);
      if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
        portletURLGenerationListener.filterActionURL(liferayPortletURL);
      }
 else       if (lifecycle.equals(PortletRequest.RENDER_PHASE)) {
        portletURLGenerationListener.filterRenderURL(liferayPortletURL);
      }
 else       if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
        portletURLGenerationListener.filterResourceURL(liferayPortletURL);
      }
    }
 catch (    PortletException pe) {
      _log.error(pe,pe);
    }
  }
  try {
    liferayPortletURL.setWindowState(liferayPortletRequest.getWindowState());
  }
 catch (  WindowStateException wse) {
    _log.error(wse,wse);
  }
  try {
    liferayPortletURL.setPortletMode(liferayPortletRequest.getPortletMode());
  }
 catch (  PortletModeException pme) {
    _log.error(pme,pme);
  }
  if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
    liferayPortletURL.setCopyCurrentPublicRenderParameters(true);
  }
  if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
    liferayPortletURL.setCopyCurrentPublicRenderParameters(true);
    liferayPortletURL.setCopyCurrentRenderParameters(true);
  }
  return liferayPortletURL;
}

{
  Set<Class<?>> interfaces=_getInterfaces(bean);
  if (interfaces.isEmpty()) {
    return;
  }
  List<String> names=new ArrayList<String>(interfaces.size());
  for (  Class<?> interfaceClass : interfaces) {
    String interfaceClassName=interfaceClass.getName();
    if (!_isIgnoredInterface(interfaceClassName)) {
      names.add(interfaceClassName);
    }
  }
  if (names.isEmpty()) {
    return;
  }
  HashMapDictionary<String,Object> properties=new HashMapDictionary<String,Object>();
  Map<String,Object> osgiBeanProperties=OSGiBeanProperties.Convert.fromObject(bean);
  if (osgiBeanProperties != null) {
    properties.putAll(osgiBeanProperties);
  }
  properties.put(ServicePropsKeys.BEAN_ID,beanName);
  properties.put(ServicePropsKeys.ORIGINAL_BEAN,Boolean.TRUE);
  properties.put(ServicePropsKeys.VENDOR,ReleaseInfo.getVendor());
  bundleContext.registerService(names.toArray(new String[names.size()]),bean,properties);
}

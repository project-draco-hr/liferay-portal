{
  FileEntry fileEntry=null;
  long size=uploadPortletRequest.getSize(fieldName);
  long groupId=PortalUtil.getScopeGroupId(uploadPortletRequest);
  InputStream inputStream=uploadPortletRequest.getFileAsStream(fieldName);
  String contentType=uploadPortletRequest.getContentType(fieldName);
  String sourceFileName=uploadPortletRequest.getFileName(fieldName);
  if (fileJSONObject != null) {
    try {
      fileEntry=DLAppServiceUtil.getFileEntryByUuidAndGroupId(fileJSONObject.getString("uuid"),fileJSONObject.getLong("groupId"));
    }
 catch (    NoSuchFileEntryException e) {
    }
  }
  if (size <= 0) {
    return fileEntry;
  }
  if (fileEntry != null) {
    fileEntry=DLAppServiceUtil.updateFileEntry(fileEntry.getFileEntryId(),sourceFileName,contentType,fileEntry.getTitle(),fileEntry.getDescription(),StringPool.BLANK,false,inputStream,size,serviceContext);
  }
 else {
    String folder=ddmStructure.getFieldProperty(fieldName,"folder");
    JSONObject folderJSONObject=JSONFactoryUtil.createJSONObject(folder);
    String fieldLabel=ddmStructure.getFieldLabel(fieldName,uploadPortletRequest.getLocale());
    String randomSuffix=PwdGenerator.getPassword(PwdGenerator.KEY3,4);
    String title=fieldLabel.concat(StringPool.SPACE).concat(randomSuffix);
    long folderId=folderJSONObject.getLong("folderId");
    fileEntry=DLAppServiceUtil.addFileEntry(groupId,folderId,sourceFileName,contentType,title,title,StringPool.BLANK,inputStream,size,serviceContext);
  }
  StreamUtil.cleanUp(inputStream);
  return fileEntry;
}

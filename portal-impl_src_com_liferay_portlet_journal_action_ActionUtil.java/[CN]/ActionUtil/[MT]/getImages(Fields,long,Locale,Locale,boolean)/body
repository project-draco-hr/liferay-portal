{
  Map<String,byte[]> images=new HashMap<String,byte[]>();
  for (  Field field : fields) {
    String dataType=field.getDataType();
    if (!dataType.equals(FieldConstants.IMAGE)) {
      continue;
    }
    List<Serializable> values=field.getValues(locale);
    for (int i=0; i < values.size(); i++) {
      String content=getContent((String)values.get(i));
      if (content.equals("update") && !inherited) {
        continue;
      }
      StringBundler sb=new StringBundler(6);
      sb.append(StringPool.UNDERLINE);
      sb.append(field.getName());
      sb.append(StringPool.UNDERLINE);
      sb.append(i);
      sb.append(StringPool.UNDERLINE);
      sb.append(LanguageUtil.getLanguageId(locale));
      if (inherited) {
        JournalArticle article=JournalArticleLocalServiceUtil.fetchJournalArticle(id);
        if (article != null) {
          String elName=field.getName() + StringPool.UNDERLINE + i;
          String elLanguageId=StringPool.UNDERLINE + LocaleUtil.toLanguageId(defaultLocale);
          long articleImageId=article.getArticleImageId(StringPool.BLANK,elName,elLanguageId);
          Image image=ImageLocalServiceUtil.fetchImage(articleImageId);
          if (image != null) {
            images.put(sb.toString(),image.getTextObj());
          }
        }
      }
 else {
        images.put(sb.toString(),UnicodeFormatter.hexToBytes(content));
      }
    }
  }
  return images;
}

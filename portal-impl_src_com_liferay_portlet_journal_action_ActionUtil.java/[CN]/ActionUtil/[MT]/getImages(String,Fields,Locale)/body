{
  Map<String,byte[]> images=new HashMap<String,byte[]>();
  for (  Field field : fields) {
    String dataType=field.getDataType();
    if (!dataType.equals(FieldConstants.IMAGE)) {
      continue;
    }
    List<Serializable> values=field.getValues(locale);
    for (int i=0; i < values.size(); i++) {
      StringBundler sb=new StringBundler(6);
      sb.append(getElementInstanceId(content,field.getName(),i));
      sb.append(StringPool.UNDERLINE);
      sb.append(field.getName());
      sb.append(StringPool.UNDERLINE);
      sb.append(i);
      sb.append(StringPool.UNDERLINE);
      sb.append(LanguageUtil.getLanguageId(locale));
      JSONObject jsonObject=JSONFactoryUtil.createJSONObject((String)values.get(i));
      String uuid=jsonObject.getString("uuid");
      long groupId=jsonObject.getLong("groupId");
      if (Validator.isNotNull(uuid) && (groupId > 0)) {
        FileEntry fileEntry=DLAppLocalServiceUtil.getFileEntryByUuidAndGroupId(uuid,groupId);
        byte[] bytes=FileUtil.getBytes(fileEntry.getContentStream());
        images.put(sb.toString(),bytes);
      }
    }
  }
  return images;
}

{
  ThreadPoolExecutor threadPoolExecutor=new ThreadPoolExecutor(1,1,TestUtil.KEEPALIVE_TIME,TimeUnit.MILLISECONDS,true,1,new DiscardOldestPolicy(),Executors.defaultThreadFactory(),new ThreadPoolHandlerAdapter());
  try {
    MarkerBlockingJob markerBlockingJob1=new MarkerBlockingJob(true);
    MarkerBlockingJob markerBlockingJob2=new MarkerBlockingJob(true);
    MarkerBlockingJob markerBlockingJob3=new MarkerBlockingJob();
    threadPoolExecutor.execute(markerBlockingJob1);
    markerBlockingJob1.waitUntilBlock();
    threadPoolExecutor.execute(markerBlockingJob2);
    Assert.assertEquals(1,threadPoolExecutor.getActiveCount());
    Assert.assertEquals(1,threadPoolExecutor.getPendingTaskCount());
    threadPoolExecutor.execute(markerBlockingJob3);
    markerBlockingJob1.unBlock();
    TestUtil.waitUntilEnded(markerBlockingJob1);
    Assert.assertEquals(0,threadPoolExecutor.getActiveCount());
    Assert.assertEquals(0,threadPoolExecutor.getPendingTaskCount());
    Assert.assertTrue(markerBlockingJob1.isEnded());
    Assert.assertFalse(markerBlockingJob2.isStarted());
    Assert.assertTrue(markerBlockingJob3.isEnded());
  }
  finally {
    TestUtil.closePool(threadPoolExecutor);
  }
}

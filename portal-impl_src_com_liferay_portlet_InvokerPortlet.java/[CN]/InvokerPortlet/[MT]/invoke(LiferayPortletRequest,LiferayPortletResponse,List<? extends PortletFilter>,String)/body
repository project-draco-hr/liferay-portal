{
  Map<String,String[]> properties=null;
  FilterChain filterChain=new FilterChainImpl(_portlet,filters);
  if (_portletConfigImpl.isWARFile()) {
    String path=StringPool.SLASH + _portletConfigImpl.getPortletName() + "/invoke";
    RequestDispatcher requestDispatcher=_portletContextImpl.getServletContext().getRequestDispatcher(path);
    HttpServletRequest request=portletRequest.getHttpServletRequest();
    HttpServletResponse response=portletResponse.getHttpServletResponse();
    request.setAttribute(JavaConstants.JAVAX_PORTLET_PORTLET,_portlet);
    request.setAttribute(PortletServlet.PORTLET_SERVLET_FILTER_CHAIN,filterChain);
    request.setAttribute(PortletRequest.LIFECYCLE_PHASE,lifecycle);
    try {
      if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
        requestDispatcher.forward(request,response);
      }
 else {
        requestDispatcher.include(request,response);
      }
    }
 catch (    ServletException se) {
      Throwable cause=se.getRootCause();
      if (cause instanceof PortletException) {
        throw (PortletException)cause;
      }
      throw new PortletException(cause);
    }
  }
 else {
    PortletFilterUtil.doFilter(portletRequest,portletResponse,lifecycle,filterChain);
  }
  properties=portletResponse.getProperties();
  if ((properties != null) && (properties.size() > 0)) {
    if (_expCache != null) {
      String[] expCache=properties.get(RenderResponse.EXPIRATION_CACHE);
      if ((expCache != null) && (expCache.length > 0) && (expCache[0] != null)) {
        _expCache=new Integer(GetterUtil.getInteger(expCache[0]));
      }
    }
  }
}

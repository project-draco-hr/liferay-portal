{
  PortletException portletException=(PortletException)renderRequest.getAttribute(_portletId + PortletException.class.getName());
  if (portletException != null) {
    throw portletException;
  }
  StopWatch stopWatch=null;
  if (_log.isDebugEnabled()) {
    stopWatch=new StopWatch();
    stopWatch.start();
  }
  String remoteUser=renderRequest.getRemoteUser();
  if ((remoteUser == null) || (_expCache == null) || (_expCache.intValue() == 0)) {
    invokeRender(renderRequest,renderResponse);
  }
 else {
    RenderResponseImpl renderResponseImpl=(RenderResponseImpl)renderResponse;
    StringServletResponse stringResponse=(StringServletResponse)renderResponseImpl.getHttpServletResponse();
    PortletSession ses=renderRequest.getPortletSession();
    long now=System.currentTimeMillis();
    Layout layout=(Layout)renderRequest.getAttribute(WebKeys.LAYOUT);
    Map<String,InvokerPortletResponse> sesResponses=getResponses(ses);
    String sesResponseId=encodeResponseKey(layout.getPlid(),_portletId,LanguageUtil.getLanguageId(renderRequest));
    InvokerPortletResponse response=sesResponses.get(sesResponseId);
    if (response == null) {
      String title=invokeRender(renderRequest,renderResponse);
      response=new InvokerPortletResponse(title,stringResponse.getString(),now + Time.SECOND * _expCache.intValue());
      sesResponses.put(sesResponseId,response);
    }
 else     if ((response.getTime() < now) && (_expCache.intValue() > 0)) {
      String title=invokeRender(renderRequest,renderResponse);
      response.setTitle(title);
      response.setContent(stringResponse.getString());
      response.setTime(now + Time.SECOND * _expCache.intValue());
    }
 else {
      renderResponseImpl.setTitle(response.getTitle());
      stringResponse.getWriter().print(response.getContent());
    }
  }
  if (_log.isDebugEnabled()) {
    _log.debug("render for " + _portletId + " takes "+ stopWatch.getTime()+ " ms");
  }
}

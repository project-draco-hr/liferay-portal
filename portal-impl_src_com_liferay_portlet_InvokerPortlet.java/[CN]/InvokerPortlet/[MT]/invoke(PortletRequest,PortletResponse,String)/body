{
  FilterChain filterChain=null;
  Map<String,String[]> properties=null;
  if (_portletConfigImpl.isWARFile()) {
    String path=StringPool.SLASH + _portletConfigImpl.getPortletName() + "/invoke";
    RequestDispatcher requestDispatcher=_portletContextImpl.getServletContext().getRequestDispatcher(path);
    HttpServletRequest request=null;
    HttpServletResponse response=null;
    ActionRequestImpl actionRequestImpl=null;
    ActionResponseImpl actionResponseImpl=null;
    EventRequestImpl eventRequestImpl=null;
    EventResponseImpl eventResponseImpl=null;
    RenderRequestImpl renderRequestImpl=null;
    RenderResponseImpl renderResponseImpl=null;
    ResourceRequestImpl resourceRequestImpl=null;
    ResourceResponseImpl resourceResponseImpl=null;
    if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
      actionRequestImpl=(ActionRequestImpl)portletRequest;
      actionResponseImpl=(ActionResponseImpl)portletResponse;
      request=actionRequestImpl.getHttpServletRequest();
      response=actionResponseImpl.getHttpServletResponse();
      filterChain=new FilterChainImpl(_portlet,_actionFilters);
    }
 else     if (lifecycle.equals(PortletRequest.EVENT_PHASE)) {
      eventRequestImpl=(EventRequestImpl)portletRequest;
      eventResponseImpl=(EventResponseImpl)portletResponse;
      request=eventRequestImpl.getHttpServletRequest();
      response=eventResponseImpl.getHttpServletResponse();
      filterChain=new FilterChainImpl(_portlet,_eventFilters);
    }
 else     if (lifecycle.equals(PortletRequest.RENDER_PHASE)) {
      renderRequestImpl=(RenderRequestImpl)portletRequest;
      renderResponseImpl=(RenderResponseImpl)portletResponse;
      request=renderRequestImpl.getHttpServletRequest();
      response=renderResponseImpl.getHttpServletResponse();
      filterChain=new FilterChainImpl(_portlet,_renderFilters);
    }
 else     if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
      resourceRequestImpl=(ResourceRequestImpl)portletRequest;
      resourceResponseImpl=(ResourceResponseImpl)portletResponse;
      request=resourceRequestImpl.getHttpServletRequest();
      response=resourceResponseImpl.getHttpServletResponse();
      filterChain=new FilterChainImpl(_portlet,_resourceFilters);
    }
    request.setAttribute(JavaConstants.JAVAX_PORTLET_PORTLET,_portlet);
    request.setAttribute(PortletServlet.PORTLET_SERVLET_FILTER_CHAIN,filterChain);
    try {
      requestDispatcher.include(request,response);
    }
 catch (    ServletException se) {
      Throwable cause=se.getRootCause();
      if (cause instanceof PortletException) {
        throw (PortletException)cause;
      }
      throw new PortletException(cause);
    }
    if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
      properties=actionResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.EVENT_PHASE)) {
      properties=eventResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.RENDER_PHASE)) {
      properties=renderResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
      properties=resourceResponseImpl.getProperties();
    }
  }
 else {
    if (lifecycle.equals(PortletRequest.ACTION_PHASE)) {
      ActionRequestImpl actionRequestImpl=(ActionRequestImpl)portletRequest;
      ActionResponseImpl actionResponseImpl=(ActionResponseImpl)portletResponse;
      filterChain=new FilterChainImpl(_portlet,_actionFilters);
      filterChain.doFilter(actionRequestImpl,actionResponseImpl);
      properties=actionResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.EVENT_PHASE)) {
      EventRequestImpl eventRequestImpl=(EventRequestImpl)portletRequest;
      EventResponseImpl eventResponseImpl=(EventResponseImpl)portletResponse;
      filterChain=new FilterChainImpl(_portlet,_eventFilters);
      filterChain.doFilter(eventRequestImpl,eventResponseImpl);
      properties=eventResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.RENDER_PHASE)) {
      RenderRequestImpl renderRequestImpl=(RenderRequestImpl)portletRequest;
      RenderResponseImpl renderResponseImpl=(RenderResponseImpl)portletResponse;
      filterChain=new FilterChainImpl(_portlet,_renderFilters);
      filterChain.doFilter(renderRequestImpl,renderResponseImpl);
      properties=renderResponseImpl.getProperties();
    }
 else     if (lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {
      ResourceRequestImpl resourceRequestImpl=(ResourceRequestImpl)portletRequest;
      ResourceResponseImpl resourceResponseImpl=(ResourceResponseImpl)portletResponse;
      filterChain=new FilterChainImpl(_portlet,_resourceFilters);
      filterChain.doFilter(resourceRequestImpl,resourceResponseImpl);
      properties=resourceResponseImpl.getProperties();
    }
  }
  if ((properties != null) && (properties.size() > 0)) {
    if (_expCache != null) {
      String[] expCache=properties.get(RenderResponse.EXPIRATION_CACHE);
      if ((expCache != null) && (expCache.length > 0) && (expCache[0] != null)) {
        _expCache=new Integer(GetterUtil.getInteger(expCache[0]));
      }
    }
  }
}

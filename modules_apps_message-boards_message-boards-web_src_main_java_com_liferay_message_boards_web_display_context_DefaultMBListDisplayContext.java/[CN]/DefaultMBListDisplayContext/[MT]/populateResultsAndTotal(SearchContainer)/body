{
  ThemeDisplay themeDisplay=(ThemeDisplay)_request.getAttribute(WebKeys.THEME_DISPLAY);
  String entriesNavigation=ParamUtil.getString(_request,"entriesNavigation","all");
  String keywords=ParamUtil.getString(_request,"keywords");
  if (Validator.isNotNull(keywords)) {
    long searchCategoryId=ParamUtil.getLong(_request,"searchCategoryId");
    long[] categoryIdsArray=null;
    List categoryIds=new ArrayList();
    categoryIds.add(Long.valueOf(searchCategoryId));
    MBCategoryServiceUtil.getSubcategoryIds(categoryIds,themeDisplay.getScopeGroupId(),searchCategoryId);
    categoryIdsArray=StringUtil.split(StringUtil.merge(categoryIds),0L);
    Indexer indexer=IndexerRegistryUtil.getIndexer(MBMessage.class);
    SearchContext searchContext=SearchContextFactory.getInstance(_request);
    searchContext.setAttribute("paginationType","more");
    searchContext.setCategoryIds(categoryIdsArray);
    searchContext.setEnd(searchContainer.getEnd());
    searchContext.setIncludeAttachments(true);
    searchContext.setKeywords(keywords);
    searchContext.setStart(searchContainer.getStart());
    Hits hits=indexer.search(searchContext);
    searchContainer.setTotal(hits.getLength());
    searchContainer.setResults(SearchResultUtil.getSearchResults(hits,_request.getLocale()));
  }
 else   if (entriesNavigation.equals("all")) {
    int status=WorkflowConstants.STATUS_APPROVED;
    PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
    if (permissionChecker.isContentReviewer(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId())) {
      status=WorkflowConstants.STATUS_ANY;
    }
    searchContainer.setTotal(MBCategoryLocalServiceUtil.getCategoriesAndThreadsCount(themeDisplay.getScopeGroupId(),_categoryId,status));
    searchContainer.setResults(MBCategoryServiceUtil.getCategoriesAndThreads(themeDisplay.getScopeGroupId(),_categoryId,status,searchContainer.getStart(),searchContainer.getEnd()));
  }
 else   if (entriesNavigation.equals("recent")) {
    long groupThreadsUserId=ParamUtil.getLong(_request,"groupThreadsUserId");
    Calendar calendar=Calendar.getInstance();
    MBGroupServiceSettings mbGroupServiceSettings=MBGroupServiceSettings.getInstance(themeDisplay.getSiteGroupId());
    int offset=GetterUtil.getInteger(mbGroupServiceSettings.getRecentPostsDateOffset());
    calendar.add(Calendar.DATE,-offset);
    searchContainer.setTotal(MBThreadServiceUtil.getGroupThreadsCount(themeDisplay.getScopeGroupId(),groupThreadsUserId,calendar.getTime(),WorkflowConstants.STATUS_APPROVED));
    searchContainer.setResults(MBThreadServiceUtil.getGroupThreads(themeDisplay.getScopeGroupId(),groupThreadsUserId,calendar.getTime(),WorkflowConstants.STATUS_APPROVED,searchContainer.getStart(),searchContainer.getEnd()));
  }
}

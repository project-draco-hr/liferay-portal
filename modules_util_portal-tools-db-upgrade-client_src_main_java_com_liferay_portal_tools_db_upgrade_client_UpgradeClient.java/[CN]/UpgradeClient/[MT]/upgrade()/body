{
  verifyProperties();
  System.setOut(new TeePrintStream(new FileOutputStream(_logFile),System.out));
  ProcessBuilder processBuilder=new ProcessBuilder();
  List<String> commands=new ArrayList<>();
  if (_JAVA_HOME != null) {
    commands.add(_JAVA_HOME + "/bin/java");
  }
 else {
    commands.add("java");
  }
  commands.add("-cp");
  commands.add(_getClassPath());
  commands.addAll(Arrays.asList(_jvmOpts.split(" ")));
  commands.add("-Dexternal-properties=portal-upgrade.properties");
  commands.add("com.liferay.portal.tools.DBUpgrader");
  processBuilder.command(commands);
  processBuilder.redirectErrorStream(true);
  Process process=processBuilder.start();
  try (InputStreamReader inputStreamReader=new InputStreamReader(process.getInputStream());BufferedReader bufferedReader=new BufferedReader(inputStreamReader)){
    String line;
    while ((line=bufferedReader.readLine()) != null) {
      if (line.equals("Running modules upgrades. Connect to your Gogo " + "shell to check the status.")) {
        break;
      }
 else {
        System.out.println(line);
      }
    }
    System.out.flush();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
  boolean upgrading=true;
  while (upgrading) {
    try (GogoTelnetClient gogoTelnetClient=new GogoTelnetClient()){
      System.out.println("You are connected to Gogo shell.");
      _printHelp();
      _consoleReader.setPrompt("g! ");
      String line;
      while ((line=_consoleReader.readLine()) != null) {
        if (line.equals("exit") || line.equals("quit")) {
          break;
        }
 else         if (line.equals("upgrade:help")) {
          _printHelp();
        }
 else {
          System.out.println(gogoTelnetClient.send(line));
        }
      }
      System.out.print("Making sure all upgrades steps have been completed.");
      String upgradeSteps=gogoTelnetClient.send("upgrade:list | grep Registered | grep step");
      upgrading=upgradeSteps.contains("true");
      if (upgrading) {
        System.out.println("...one of your upgrades is still running or failed.");
        System.out.println("Are you sure you want to exit (y/N)?");
        _consoleReader.setPrompt("");
        String response=_consoleReader.readLine();
        if (response.equals("y")) {
          upgrading=false;
        }
      }
 else {
        System.out.println("... done.");
      }
    }
 catch (    Exception e) {
      upgrading=false;
    }
  }
  System.out.println("Exiting Gogo shell.");
  _close(process.getErrorStream());
  _close(process.getInputStream());
  _close(process.getOutputStream());
  process.destroy();
}

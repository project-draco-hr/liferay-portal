{
  Map<String,Set<String>> propertiesMap=new HashMap<>();
  for (  String testCaseClassName : _testCaseClassNames) {
    Element rootElement=getTestCaseRootElement(testCaseClassName);
    List<Element> rootPropertyElements=rootElement.elements("property");
    Set<String> rootProperties=new TreeSet<>();
    for (    Element rootPropertyElement : rootPropertyElements) {
      StringBuilder sb=new StringBuilder();
      sb.append(".all.");
      sb.append(rootPropertyElement.attributeValue("name"));
      sb.append("=");
      sb.append(rootPropertyElement.attributeValue("value"));
      rootProperties.add(sb.toString());
    }
    List<Element> commandElements=rootElement.elements("command");
    Set<String> allCommandProperties=new TreeSet<>();
    for (    Element commandElement : commandElements) {
      List<Element> commandPropertyElements=commandElement.elements("property");
      Set<String> commandProperties=new TreeSet<>();
      for (      Element commandPropertyElement : commandPropertyElements) {
        StringBuilder sb=new StringBuilder();
        sb.append(".");
        sb.append(commandPropertyElement.attributeValue("name"));
        sb.append("=");
        sb.append(commandPropertyElement.attributeValue("value"));
        commandProperties.add(sb.toString());
      }
      allCommandProperties.addAll(commandProperties);
      commandProperties.addAll(rootProperties);
      propertiesMap.put(testCaseClassName + "#" + commandElement.attributeValue("name"),commandProperties);
    }
    allCommandProperties.addAll(rootProperties);
    propertiesMap.put(testCaseClassName,allCommandProperties);
  }
  return propertiesMap;
}

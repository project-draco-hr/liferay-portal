{
  Set<String> testCaseCommandNames=new TreeSet<>();
  if (!Validator.equals("true",rootElement.attributeValue("ignore"))) {
    String extendedTestCaseName=rootElement.attributeValue("extends");
    if (Validator.isNotNull(extendedTestCaseName)) {
      Element extendedTestCaseElement=getTestCaseRootElement(extendedTestCaseName);
      List<String> ignoreCommandNamesList=new ArrayList<>();
      if (Validator.isNotNull(rootElement.attributeValue("ignore-command-names"))) {
        String ignoreCommandNames=rootElement.attributeValue("ignore-command-names");
        ignoreCommandNamesList=Arrays.asList(ignoreCommandNames.split(","));
      }
      List<Element> extendedCommandElements=extendedTestCaseElement.elements("command");
      for (      Element extendedCommandElement : extendedCommandElements) {
        String extendedCommandName=extendedCommandElement.attributeValue("name");
        if (ignoreCommandNamesList.contains(extendedCommandName)) {
          continue;
        }
        testCaseCommandNames.add(className + "TestCase#test" + extendedCommandName);
      }
    }
    List<Element> testCaseCommandElements=rootElement.elements("command");
    for (    Element testCaseCommandElement : testCaseCommandElements) {
      String classCommandName=testCaseCommandElement.attributeValue("name");
      if (Validator.isNotNull(testCaseCommandElement.attributeValue("known-issues"))) {
        String knownIssuesComponent="portal-known-issues";
        if (componentName.startsWith("marketplace")) {
          knownIssuesComponent="marketplace-known-issues";
        }
 else         if (componentName.startsWith("social-office")) {
          knownIssuesComponent="social-office-known-issues";
        }
        Set<String> knownIssuesTestCaseMethodNames=new TreeSet<>();
        if (_testCaseMethodNames.containsKey(knownIssuesComponent)) {
          knownIssuesTestCaseMethodNames=_testCaseMethodNames.get(knownIssuesComponent);
        }
        knownIssuesTestCaseMethodNames.add(className + "TestCase#test" + classCommandName);
        _testCaseMethodNames.put(knownIssuesComponent,knownIssuesTestCaseMethodNames);
      }
 else {
        testCaseCommandNames.add(className + "TestCase#test" + classCommandName);
      }
    }
  }
  return testCaseCommandNames;
}

{
  StringBuilder sb=new StringBuilder();
  for (  String componentName : _componentNames) {
    String componentNameKey=componentName + "_TEST_CASE_METHOD_NAMES";
    componentNameKey=StringUtil.upperCase(componentNameKey.replace("-","_"));
    sb.append(componentNameKey);
    sb.append("=");
    Set<String> classCommandNames=_componentClassCommandNames.get(componentName);
    if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) {
      Iterator<String> iterator=classCommandNames.iterator();
      while (iterator.hasNext()) {
        sb.append(iterator.next());
        if (iterator.hasNext()) {
          sb.append(" ");
        }
      }
    }
 else {
      sb.append(PropsValues.TEST_NAME);
    }
    sb.append("\n");
  }
  if ((PropsValues.TEST_BATCH_MAX_GROUP_SIZE > 0) && (PropsValues.TEST_BATCH_PROPERTY_NAME != null) && (PropsValues.TEST_BATCH_PROPERTY_VALUE != null)) {
    Set<String> classCommandNames=_getRunTestCaseCommandNames(PropsValues.TEST_BATCH_PROPERTY_NAME,PropsValues.TEST_BATCH_PROPERTY_VALUE);
    int totalGroupCount=classCommandNames.size() / PropsValues.TEST_BATCH_MAX_GROUP_SIZE;
    int uncompleteGroupCount=classCommandNames.size() % PropsValues.TEST_BATCH_MAX_GROUP_SIZE;
    if (uncompleteGroupCount > 0) {
      totalGroupCount++;
    }
    Map<Integer,List<String>> classCommandNameGroups=new HashMap<>();
    int classCommandNameIndex=0;
    for (    String classCommandName : classCommandNames) {
      List<String> classCommandNameGroup=new ArrayList<>();
      int classCommandNameGroupIndex=classCommandNameIndex % totalGroupCount;
      if (classCommandNameGroups.containsKey(classCommandNameGroupIndex)) {
        classCommandNameGroup.addAll(classCommandNameGroups.get(classCommandNameGroupIndex));
      }
      classCommandNameGroup.add(classCommandName);
      classCommandNameGroups.put(classCommandNameGroupIndex,classCommandNameGroup);
      classCommandNameIndex++;
    }
    for (int i=0; i < classCommandNameGroups.size(); i++) {
      sb.append("RUN_TEST_CASE_METHOD_GROUP_");
      sb.append(i);
      sb.append("=");
      List<String> classCommandNameGroup=classCommandNameGroups.get(i);
      for (int j=0; j < classCommandNameGroup.size(); j++) {
        String testCaseClassCommandName=classCommandNameGroup.get(j);
        sb.append(testCaseClassCommandName);
        if (j < (classCommandNameGroup.size() - 1)) {
          sb.append(" ");
        }
      }
      sb.append("\n");
    }
    sb.append("RUN_TEST_CASE_METHOD_GROUPS=");
    for (int i=0; i < classCommandNameGroups.size(); i++) {
      sb.append(i);
      if (i < (classCommandNameGroups.size() - 1)) {
        sb.append(" ");
      }
    }
  }
  FileUtil.write("test.case.method.names.properties",sb.toString());
}

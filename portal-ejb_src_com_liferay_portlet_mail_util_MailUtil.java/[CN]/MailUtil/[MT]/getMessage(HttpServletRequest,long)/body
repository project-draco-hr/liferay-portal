{
  HttpSession ses=req.getSession();
  MailMessage mailMessage=new MailMessage();
  try {
    MailSessionLock.lock(req);
    IMAPFolder folder=_getFolder(req);
    Message message=folder.getMessageByUID(messageId);
    mailMessage.setMessageId(messageId);
    if (Validator.isNotNull(message.getFrom())) {
      mailMessage.setFrom(message.getFrom()[0]);
    }
    mailMessage.setTo(message.getRecipients(RecipientType.TO));
    mailMessage.setCc(message.getRecipients(RecipientType.CC));
    mailMessage.setBcc(message.getRecipients(RecipientType.BCC));
    mailMessage.setReplyTo(message.getReplyTo());
    String[] messageIdHeader=message.getHeader("Message-ID");
    String[] referencesHeader=message.getHeader("References");
    if (Validator.isNotNull(messageIdHeader)) {
      mailMessage.setInReplyTo(messageIdHeader[0]);
      if (Validator.isNull(referencesHeader)) {
        mailMessage.setReferences(messageIdHeader[0]);
      }
 else {
        mailMessage.setReferences(referencesHeader[0] + StringPool.SPACE + messageIdHeader[0]);
      }
    }
 else {
      if (Validator.isNotNull(referencesHeader[0])) {
        mailMessage.setReferences(referencesHeader[0]);
      }
    }
    mailMessage.setSubject(message.getSubject());
    mailMessage.setSentDate(message.getSentDate());
    String contentPath=RemoteMailAttachment.buildContentPath(folder.getName(),messageId);
    MailContent content=new MailContent();
    mailMessage=_getContent(message,mailMessage,content,contentPath);
    mailMessage.setMailContent(content);
    if (_log.isDebugEnabled()) {
      _log.debug("Body before replacing content ids\n" + content);
    }
    _replaceContentIds(content,mailMessage.getRemoteAttachments(),_getAttachmentURL(req));
    if (_log.isDebugEnabled()) {
      _log.debug("Body after replacing content ids\n" + content);
    }
    mailMessage.purgeDirtyRemoteAttachments();
    ses.setAttribute(WebKeys.MAIL_MESSAGE_ID,new Long(messageId));
    return mailMessage;
  }
 catch (  MessagingException me) {
    throw new FolderException(me);
  }
 finally {
    MailSessionLock.unlock(req);
  }
}

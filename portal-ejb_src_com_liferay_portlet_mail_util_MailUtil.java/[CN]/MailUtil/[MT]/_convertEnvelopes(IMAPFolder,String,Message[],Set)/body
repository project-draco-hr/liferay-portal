{
  for (int i=0; i < messages.length; i++) {
    Message message=messages[i];
    if (message.isExpunged()) {
      continue;
    }
    MailEnvelope mailEnvelope=new MailEnvelope();
    mailEnvelope.setMessageId(folder.getUID(message));
    mailEnvelope.setFolderName(folder.getName());
    if (MAIL_SENT_NAME.equals(folderName) || MAIL_DRAFTS_NAME.equals(folderName)) {
      Address[] recipients=message.getAllRecipients();
      StringBuffer sb=new StringBuffer();
      if (!Validator.isNull(recipients)) {
        for (int j=0; j < recipients.length; j++) {
          InternetAddress address=(InternetAddress)recipients[j];
          String recipient=GetterUtil.getString(address.getPersonal(),address.getAddress());
          sb.append(recipient);
          if (j < (recipients.length - 1)) {
            sb.append(", ");
          }
        }
      }
      if (sb.length() > 0) {
        mailEnvelope.setRecipient(sb.toString());
      }
    }
 else {
      Address[] from=message.getFrom();
      if (from.length > 0) {
        InternetAddress address=(InternetAddress)from[0];
        String recipient=GetterUtil.getString(address.getPersonal(),address.getAddress());
        mailEnvelope.setRecipient(recipient);
      }
    }
    mailEnvelope.setSubject(message.getSubject());
    mailEnvelope.setDate(message.getSentDate());
    mailEnvelope.setSize((int)(message.getSize() * _ENCODING_FACTOR));
    mailEnvelope.setRead(message.isSet(Flag.SEEN));
    mailEnvelope.setFlagged(message.isSet(Flag.FLAGGED));
    mailEnvelope.setAnswered(message.isSet(Flag.ANSWERED));
    envelopes.add(mailEnvelope);
  }
}

{
  try {
    oldFolderName=_getResolvedFolderName(oldFolderName);
    newFolderName=_getResolvedFolderName(newFolderName);
    for (int i=0; i < DEFAULT_FOLDERS.length; i++) {
      if (DEFAULT_FOLDERS[i].equals(oldFolderName)) {
        if (_log.isErrorEnabled()) {
          _log.error("Folder " + oldFolderName + " is a system folder and cannot be changed");
        }
        throw new FolderException();
      }
 else       if (DEFAULT_FOLDERS[i].equals(newFolderName)) {
        if (_log.isErrorEnabled()) {
          _log.error("Folder " + newFolderName + " is a system folder and cannot be changed");
        }
        throw new FolderException();
      }
    }
    Store store=_getStore(ses);
    Folder oldFolder=store.getFolder(oldFolderName);
    Folder newFolder=store.getFolder(newFolderName);
    if (!oldFolder.exists()) {
      if (_log.isErrorEnabled()) {
        _log.error("Folder " + oldFolderName + " does not exist");
      }
      throw new FolderException();
    }
 else     if (newFolder.exists()) {
      if (_log.isErrorEnabled()) {
        _log.error("Folder " + newFolderName + " already exists");
      }
      throw new FolderException();
    }
    if (!oldFolder.isOpen()) {
      oldFolder.open(Folder.READ_WRITE);
    }
    oldFolder.renameTo(newFolder);
    try {
      MailSessionLock.lock(ses.getId());
      Folder curFolder=_getFolder(ses);
      String folderName=_getResolvedFolderName(curFolder.getName());
      if (folderName.equals(oldFolderName)) {
        setFolder(ses,newFolderName);
      }
    }
  finally {
      MailSessionLock.unlock(ses.getId());
    }
  }
 catch (  MessagingException me) {
    throw new FolderException(me);
  }
}

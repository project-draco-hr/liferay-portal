{
  long pk=RandomTestUtil.nextLong();
  CalendarNotificationTemplate newCalendarNotificationTemplate=_persistence.create(pk);
  newCalendarNotificationTemplate.setUuid(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setGroupId(RandomTestUtil.nextLong());
  newCalendarNotificationTemplate.setCompanyId(RandomTestUtil.nextLong());
  newCalendarNotificationTemplate.setUserId(RandomTestUtil.nextLong());
  newCalendarNotificationTemplate.setUserName(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setCreateDate(RandomTestUtil.nextDate());
  newCalendarNotificationTemplate.setModifiedDate(RandomTestUtil.nextDate());
  newCalendarNotificationTemplate.setCalendarId(RandomTestUtil.nextLong());
  newCalendarNotificationTemplate.setNotificationType(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setNotificationTypeSettings(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setNotificationTemplateType(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setSubject(RandomTestUtil.randomString());
  newCalendarNotificationTemplate.setBody(RandomTestUtil.randomString());
  _calendarNotificationTemplates.add(_persistence.update(newCalendarNotificationTemplate));
  CalendarNotificationTemplate existingCalendarNotificationTemplate=_persistence.findByPrimaryKey(newCalendarNotificationTemplate.getPrimaryKey());
  Assert.assertEquals(existingCalendarNotificationTemplate.getUuid(),newCalendarNotificationTemplate.getUuid());
  Assert.assertEquals(existingCalendarNotificationTemplate.getCalendarNotificationTemplateId(),newCalendarNotificationTemplate.getCalendarNotificationTemplateId());
  Assert.assertEquals(existingCalendarNotificationTemplate.getGroupId(),newCalendarNotificationTemplate.getGroupId());
  Assert.assertEquals(existingCalendarNotificationTemplate.getCompanyId(),newCalendarNotificationTemplate.getCompanyId());
  Assert.assertEquals(existingCalendarNotificationTemplate.getUserId(),newCalendarNotificationTemplate.getUserId());
  Assert.assertEquals(existingCalendarNotificationTemplate.getUserName(),newCalendarNotificationTemplate.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingCalendarNotificationTemplate.getCreateDate()),Time.getShortTimestamp(newCalendarNotificationTemplate.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingCalendarNotificationTemplate.getModifiedDate()),Time.getShortTimestamp(newCalendarNotificationTemplate.getModifiedDate()));
  Assert.assertEquals(existingCalendarNotificationTemplate.getCalendarId(),newCalendarNotificationTemplate.getCalendarId());
  Assert.assertEquals(existingCalendarNotificationTemplate.getNotificationType(),newCalendarNotificationTemplate.getNotificationType());
  Assert.assertEquals(existingCalendarNotificationTemplate.getNotificationTypeSettings(),newCalendarNotificationTemplate.getNotificationTypeSettings());
  Assert.assertEquals(existingCalendarNotificationTemplate.getNotificationTemplateType(),newCalendarNotificationTemplate.getNotificationTemplateType());
  Assert.assertEquals(existingCalendarNotificationTemplate.getSubject(),newCalendarNotificationTemplate.getSubject());
  Assert.assertEquals(existingCalendarNotificationTemplate.getBody(),newCalendarNotificationTemplate.getBody());
}

{
  String oldTitle=page.getTitle();
  String trashTitle=oldTitle;
  if (createTrashVersion) {
    UnicodeProperties typeSettingsProperties=new UnicodeProperties();
    typeSettingsProperties.put("title",oldTitle);
    TrashVersion trashVersion=trashVersionLocalService.addTrashVersion(trashEntryId,WikiPage.class.getName(),page.getPageId(),page.getStatus(),typeSettingsProperties);
    trashTitle=TrashUtil.getTrashTitle(trashVersion.getVersionId());
    WikiPageResource pageResource=wikiPageResourcePersistence.findByPrimaryKey(page.getResourcePrimKey());
    pageResource.setTitle(trashTitle);
    wikiPageResourcePersistence.update(pageResource);
    page.setTitle(trashTitle);
    wikiPagePersistence.update(page);
  }
  int oldStatus=page.getStatus();
  if (oldStatus == WorkflowConstants.STATUS_IN_TRASH) {
    return;
  }
  List<WikiPage> versionPages=wikiPagePersistence.findByR_N(page.getResourcePrimKey(),page.getNodeId());
  for (  WikiPage versionPage : versionPages) {
    versionPage.setTitle(page.getTitle());
    int versionPageOldStatus=versionPage.getStatus();
    versionPage.setStatus(WorkflowConstants.STATUS_IN_TRASH);
    wikiPagePersistence.update(versionPage);
    int status=versionPageOldStatus;
    if (versionPageOldStatus == WorkflowConstants.STATUS_PENDING) {
      status=WorkflowConstants.STATUS_DRAFT;
    }
    if (versionPageOldStatus != WorkflowConstants.STATUS_APPROVED) {
      trashVersionLocalService.addTrashVersion(trashEntryId,WikiPage.class.getName(),versionPage.getPageId(),status,null);
    }
  }
  if (oldStatus == WorkflowConstants.STATUS_APPROVED) {
    assetEntryLocalService.updateVisible(WikiPage.class.getName(),page.getResourcePrimKey(),false);
  }
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(WikiPage.class);
  indexer.reindex(page);
  if (WikiCacheThreadLocal.isClearCache()) {
    WikiCacheUtil.clearCache(page.getNodeId());
  }
  if (oldStatus == WorkflowConstants.STATUS_PENDING) {
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(page.getCompanyId(),page.getGroupId(),WikiPage.class.getName(),page.getResourcePrimKey());
  }
  moveDependentChildPagesToTrash(page.getNodeId(),oldTitle,trashTitle,trashEntryId,createTrashVersion);
  moveDependentRedirectorPagesToTrash(page.getNodeId(),oldTitle,trashTitle,trashEntryId,createTrashVersion);
}

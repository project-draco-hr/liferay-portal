{
  if (!page.isApproved() || Validator.isNull(pageURL)) {
    return;
  }
  WikiGroupServiceSettings wikiGroupServiceSettings=_settingsFactory.getSettings(WikiGroupServiceSettings.class,new GroupServiceSettingsLocator(page.getGroupId(),WikiConstants.SERVICE_NAME));
  boolean update=false;
  if (page.getVersion() > WikiPageConstants.VERSION_DEFAULT) {
    update=true;
  }
  if (!update && wikiGroupServiceSettings.emailPageAddedEnabled()) {
  }
 else   if (update && wikiGroupServiceSettings.emailPageUpdatedEnabled()) {
  }
 else {
    return;
  }
  String portalURL=serviceContext.getPortalURL();
  WikiPage previousVersionPage=getPreviousVersionPage(page);
  String attachmentURLPrefix=WikiUtil.getAttachmentURLPrefix(serviceContext.getPathMain(),serviceContext.getPlid(),page.getNodeId(),page.getTitle());
  attachmentURLPrefix=portalURL + attachmentURLPrefix;
  String pageDiffs=StringPool.BLANK;
  try {
    pageDiffs=WikiUtil.diffHtml(previousVersionPage,page,null,null,attachmentURLPrefix);
  }
 catch (  Exception e) {
  }
  String pageContent=null;
  if (Validator.equals(page.getFormat(),"creole")) {
    pageContent=WikiUtil.convert(page,null,null,attachmentURLPrefix);
  }
 else {
    pageContent=page.getContent();
    pageContent=WikiUtil.processContent(pageContent);
  }
  String pageTitle=page.getTitle();
  String fromName=wikiGroupServiceSettings.emailFromName();
  String fromAddress=wikiGroupServiceSettings.emailFromAddress();
  LocalizedValuesMap subjectLocalizedValuesMap=null;
  LocalizedValuesMap bodyLocalizedValuesMap=null;
  if (update) {
    subjectLocalizedValuesMap=wikiGroupServiceSettings.emailPageUpdatedSubject();
    bodyLocalizedValuesMap=wikiGroupServiceSettings.emailPageUpdatedBody();
  }
 else {
    subjectLocalizedValuesMap=wikiGroupServiceSettings.emailPageAddedSubject();
    bodyLocalizedValuesMap=wikiGroupServiceSettings.emailPageAddedBody();
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setClassName(page.getModelClassName());
  subscriptionSender.setClassPK(page.getPageId());
  subscriptionSender.setCompanyId(page.getCompanyId());
  subscriptionSender.setContextAttribute("[$PAGE_CONTENT$]",pageContent,false);
  subscriptionSender.setContextAttribute("[$PAGE_DIFFS$]",DiffHtmlUtil.replaceStyles(pageDiffs),false);
  WikiNode node=page.getNode();
  subscriptionSender.setContextAttributes("[$DIFFS_URL$]",getDiffsURL(page,previousVersionPage,serviceContext),"[$NODE_NAME$]",node.getName(),"[$PAGE_DATE_UPDATE$]",page.getModifiedDate(),"[$PAGE_ID$]",page.getPageId(),"[$PAGE_SUMMARY$]",page.getSummary(),"[$PAGE_TITLE$]",pageTitle,"[$PAGE_URL$]",pageURL);
  subscriptionSender.setContextCreatorUserPrefix("PAGE");
  subscriptionSender.setCreatorUserId(page.getUserId());
  subscriptionSender.setCurrentUserId(userId);
  subscriptionSender.setEntryTitle(pageTitle);
  subscriptionSender.setEntryURL(pageURL);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  if (bodyLocalizedValuesMap != null) {
    subscriptionSender.setLocalizedBodyMap(LocalizationUtil.getMap(bodyLocalizedValuesMap));
  }
  if (subjectLocalizedValuesMap != null) {
    subscriptionSender.setLocalizedSubjectMap(LocalizationUtil.getMap(subjectLocalizedValuesMap));
  }
  subscriptionSender.setMailId("wiki_page",page.getNodeId(),page.getPageId());
  int notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY;
  if (serviceContext.isCommandUpdate()) {
    notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY;
  }
  subscriptionSender.setNotificationType(notificationType);
  subscriptionSender.setPortletId(WikiPortletKeys.WIKI);
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setScopeGroupId(page.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.addPersistedSubscribers(WikiNode.class.getName(),page.getNodeId());
  subscriptionSender.addPersistedSubscribers(WikiPage.class.getName(),page.getResourcePrimKey());
  subscriptionSender.flushNotificationsAsync();
}

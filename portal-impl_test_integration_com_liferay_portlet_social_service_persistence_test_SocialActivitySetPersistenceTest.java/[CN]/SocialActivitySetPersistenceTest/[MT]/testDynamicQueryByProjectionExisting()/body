{
  SocialActivitySet newSocialActivitySet=addSocialActivitySet();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(SocialActivitySet.class,SocialActivitySet.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("activitySetId"));
  Object newActivitySetId=newSocialActivitySet.getActivitySetId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("activitySetId",new Object[]{newActivitySetId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingActivitySetId=result.get(0);
  Assert.assertEquals(existingActivitySetId,newActivitySetId);
}

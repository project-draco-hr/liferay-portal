{
  long userId=portletDataContext.getUserId(fileEntryType.getUserUuid());
  List<Element> ddmStructureElements=portletDataContext.getReferenceDataElements(fileEntryType,DDMStructure.class);
  for (  Element ddmStructureElement : ddmStructureElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmStructureElement);
  }
  Map<Long,Long> ddmStructureIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class);
  List<DDMStructure> ddmStructures=fileEntryType.getDDMStructures();
  long[] ddmStructureIdsArray=new long[ddmStructures.size()];
  for (int i=0; i < ddmStructures.size(); i++) {
    DDMStructure ddmStructure=ddmStructures.get(i);
    ddmStructureIdsArray[i]=MapUtil.getLong(ddmStructureIds,ddmStructure.getStructureId());
  }
  ServiceContext serviceContext=portletDataContext.createServiceContext(fileEntryType,DLPortletDataHandler.NAMESPACE);
  DLFileEntryType importedDLFileEntryType=null;
  if (portletDataContext.isDataStrategyMirror()) {
    DLFileEntryType existingDLFileEntryType=DLFileEntryTypeLocalServiceUtil.fetchDLFileEntryTypeByUuidAndGroupId(fileEntryType.getUuid(),portletDataContext.getScopeGroupId());
    if (existingDLFileEntryType == null) {
      existingDLFileEntryType=DLFileEntryTypeLocalServiceUtil.fetchDLFileEntryTypeByUuidAndGroupId(fileEntryType.getUuid(),portletDataContext.getCompanyGroupId());
    }
    if (existingDLFileEntryType == null) {
      serviceContext.setUuid(fileEntryType.getUuid());
      importedDLFileEntryType=DLFileEntryTypeLocalServiceUtil.addFileEntryType(userId,portletDataContext.getScopeGroupId(),fileEntryType.getFileEntryTypeKey(),fileEntryType.getNameMap(),fileEntryType.getDescriptionMap(),ddmStructureIdsArray,serviceContext);
    }
 else {
      if (portletDataContext.isCompanyStagedGroupedModel(existingDLFileEntryType)) {
        return;
      }
      DLFileEntryTypeLocalServiceUtil.updateFileEntryType(userId,existingDLFileEntryType.getFileEntryTypeId(),fileEntryType.getNameMap(),fileEntryType.getDescriptionMap(),ddmStructureIdsArray,serviceContext);
    }
  }
 else {
    importedDLFileEntryType=DLFileEntryTypeLocalServiceUtil.addFileEntryType(userId,portletDataContext.getScopeGroupId(),fileEntryType.getFileEntryTypeKey(),fileEntryType.getNameMap(),fileEntryType.getDescriptionMap(),ddmStructureIdsArray,serviceContext);
  }
  portletDataContext.importClassedModel(fileEntryType,importedDLFileEntryType,DLPortletDataHandler.NAMESPACE);
  String importedDLFileEntryDDMStructureKey=DLUtil.getDDMStructureKey(importedDLFileEntryType);
  List<DDMStructure> importedDDMStructures=importedDLFileEntryType.getDDMStructures();
  for (  DDMStructure importedDDMStructure : importedDDMStructures) {
    String ddmStructureKey=importedDDMStructure.getStructureKey();
    if (!DLUtil.isAutoGeneratedDLFileEntryTypeDDMStructureKey(ddmStructureKey)) {
      continue;
    }
    if (ddmStructureKey.equals(importedDLFileEntryDDMStructureKey)) {
      continue;
    }
    importedDDMStructure.setStructureKey(importedDLFileEntryDDMStructureKey);
    DDMStructureLocalServiceUtil.updateDDMStructure(importedDDMStructure);
  }
}

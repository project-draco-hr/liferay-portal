{
  long userId=portletDataContext.getUserId(fileEntryType.getUserUuid());
  String name=getFileEntryTypeName(fileEntryType.getUuid(),portletDataContext.getScopeGroupId(),fileEntryType.getName(),2);
  List<Element> ddmStructureElements=portletDataContext.getReferenceDataElements(fileEntryType,DDMStructure.class);
  for (  Element ddmStructureElement : ddmStructureElements) {
    StagedModelDataHandlerUtil.importStagedModel(portletDataContext,ddmStructureElement);
  }
  Map<Long,Long> ddmStructureIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(DDMStructure.class);
  Collection<Long> ddmStructureIdsCollection=ddmStructureIds.values();
  long[] ddmStructureIdsArray=ArrayUtil.toArray(ddmStructureIdsCollection.toArray(new Long[ddmStructureIds.size()]));
  ServiceContext serviceContext=portletDataContext.createServiceContext(fileEntryType,DLPortletDataHandler.NAMESPACE);
  DLFileEntryType importedDLFileEntryType=null;
  if (portletDataContext.isDataStrategyMirror()) {
    DLFileEntryType existingDLFileEntryType=DLFileEntryTypeUtil.fetchByUUID_G(fileEntryType.getUuid(),portletDataContext.getScopeGroupId());
    if (existingDLFileEntryType == null) {
      Group companyGroup=GroupLocalServiceUtil.getCompanyGroup(portletDataContext.getCompanyId());
      existingDLFileEntryType=DLFileEntryTypeUtil.fetchByUUID_G(fileEntryType.getUuid(),companyGroup.getGroupId());
    }
    if (existingDLFileEntryType == null) {
      serviceContext.setUuid(fileEntryType.getUuid());
      importedDLFileEntryType=DLFileEntryTypeLocalServiceUtil.addFileEntryType(userId,portletDataContext.getScopeGroupId(),name,fileEntryType.getDescription(),ddmStructureIdsArray,serviceContext);
    }
 else {
      if (!isFileEntryTypeGlobal(portletDataContext.getCompanyId(),existingDLFileEntryType)) {
        DLFileEntryTypeLocalServiceUtil.updateFileEntryType(userId,existingDLFileEntryType.getFileEntryTypeId(),name,fileEntryType.getDescription(),ddmStructureIdsArray,serviceContext);
      }
      importedDLFileEntryType=existingDLFileEntryType;
    }
  }
 else {
    importedDLFileEntryType=DLFileEntryTypeLocalServiceUtil.addFileEntryType(userId,portletDataContext.getScopeGroupId(),name,fileEntryType.getDescription(),ddmStructureIdsArray,serviceContext);
  }
  if (!isFileEntryTypeGlobal(portletDataContext.getCompanyId(),importedDLFileEntryType)) {
    portletDataContext.importClassedModel(fileEntryType,importedDLFileEntryType,DLPortletDataHandler.NAMESPACE);
    String importedDLFileEntryDDMStructureKey=DLUtil.getDDMStructureKey(importedDLFileEntryType);
    List<DDMStructure> ddmStructures=importedDLFileEntryType.getDDMStructures();
    for (    DDMStructure ddmStructure : ddmStructures) {
      String ddmStructureKey=ddmStructure.getStructureKey();
      if (!DLUtil.isAutoGeneratedDLFileEntryTypeDDMStructureKey(ddmStructureKey)) {
        continue;
      }
      if (ddmStructureKey.equals(importedDLFileEntryDDMStructureKey)) {
        continue;
      }
      ddmStructure.setStructureKey(importedDLFileEntryDDMStructureKey);
      DDMStructureLocalServiceUtil.updateDDMStructure(ddmStructure);
    }
  }
}

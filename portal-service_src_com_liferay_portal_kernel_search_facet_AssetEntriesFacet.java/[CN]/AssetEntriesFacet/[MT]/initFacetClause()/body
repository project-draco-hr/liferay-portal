{
  SearchContext searchContext=getSearchContext();
  FacetConfiguration facetConfiguration=getFacetConfiguration();
  JSONObject dataJSONObject=facetConfiguration.getData();
  String[] entryClassNames=null;
  if (dataJSONObject.has("values")) {
    JSONArray valuesJSONArray=dataJSONObject.getJSONArray("values");
    entryClassNames=new String[valuesJSONArray.length()];
    for (int i=0; i < valuesJSONArray.length(); i++) {
      entryClassNames[i]=valuesJSONArray.getString(i);
    }
  }
  if ((entryClassNames == null) || (entryClassNames.length == 0)) {
    entryClassNames=searchContext.getEntryClassNames();
  }
  if (!isStatic()) {
    String[] entryClassNameParam=StringUtil.split(GetterUtil.getString(searchContext.getAttribute(getFieldName())));
    if ((entryClassNameParam != null) && (entryClassNameParam.length > 0)) {
      entryClassNames=entryClassNameParam;
    }
  }
  if ((entryClassNames == null) || (entryClassNames.length == 0)) {
    List<String> entryClassNamesList=new ArrayList<String>();
    for (    Indexer indexer : IndexerRegistryUtil.getIndexers()) {
      for (      String className : indexer.getClassNames()) {
        if (!entryClassNamesList.contains(className) && !className.equals(AssetEntry.class.getName()) && !className.equals(DLFileEntry.class.getName())&& !className.equals(PluginPackage.class.getName())) {
          entryClassNamesList.add(className);
        }
      }
    }
    entryClassNames=entryClassNamesList.toArray(new String[entryClassNamesList.size()]);
    if (!dataJSONObject.has("values")) {
      JSONArray entriesJSONArray=JSONFactoryUtil.createJSONArray();
      for (      String entryClassName : entryClassNames) {
        entriesJSONArray.put(entryClassName);
      }
      dataJSONObject.put("values",entriesJSONArray);
    }
  }
  searchContext.setEntryClassNames(entryClassNames);
}

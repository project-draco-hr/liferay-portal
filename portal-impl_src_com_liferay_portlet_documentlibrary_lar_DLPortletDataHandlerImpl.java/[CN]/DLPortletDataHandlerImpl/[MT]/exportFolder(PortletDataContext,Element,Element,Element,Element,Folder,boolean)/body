{
  if (portletDataContext.isWithinDateRange(folder.getModifiedDate())) {
    exportParentFolder(portletDataContext,foldersElement,folder.getParentFolderId());
    String path=getFolderPath(portletDataContext,folder);
    if (portletDataContext.isPathNotProcessed(path)) {
      Element folderElement=foldersElement.addElement("folder");
      folderElement.addAttribute("path",path);
      folder.prepare();
      portletDataContext.addPermissions(Folder.class,folder.getFolderId());
      portletDataContext.addZipEntry(path,folder);
    }
  }
  if (recurse) {
    List<Folder> folders=FolderUtil.findByR_P(folder.getRepositoryId(),folder.getFolderId());
    for (    Folder curFolder : folders) {
      exportFolder(portletDataContext,foldersElement,fileEntriesElement,fileShortcutsElement,fileRanksElement,curFolder,recurse);
    }
  }
  List<FileEntry> fileEntries=FileEntryUtil.findByR_F(folder.getRepositoryId(),folder.getFolderId());
  for (  FileEntry fileEntry : fileEntries) {
    exportFileEntry(portletDataContext,foldersElement,fileEntriesElement,fileRanksElement,fileEntry,true);
  }
  if (portletDataContext.getBooleanParameter(_NAMESPACE,"shortcuts")) {
    List<DLFileShortcut> fileShortcuts=DLFileShortcutUtil.findByG_F(folder.getRepositoryId(),folder.getFolderId());
    for (    DLFileShortcut fileShortcut : fileShortcuts) {
      exportFileShortcut(portletDataContext,foldersElement,fileShortcutsElement,fileShortcut);
    }
  }
}

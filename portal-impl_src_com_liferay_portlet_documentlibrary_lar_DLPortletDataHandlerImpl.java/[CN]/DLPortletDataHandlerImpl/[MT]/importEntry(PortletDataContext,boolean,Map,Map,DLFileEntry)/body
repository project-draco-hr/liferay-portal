{
  Long folderId=(Long)folderPKs.get(new Long(entry.getFolderId()));
  if (folderId == null) {
    folderId=new Long(entry.getFolderId());
  }
  String[] tagsEntries=context.getTagsEntries(DLFileEntry.class,entry.getPrimaryKeyObj());
  boolean addCommunityPermissions=true;
  boolean addGuestPermissions=true;
  byte[] byteArray=context.getZipReader().getEntryAsByteArray(_ZIP_FOLDER + entry.getName());
  DLFileEntry existingEntry=null;
  try {
    DLFolderUtil.findByPrimaryKey(folderId.longValue());
    if (mergeData) {
      existingEntry=DLFileEntryFinderUtil.findByUuid_G(entry.getUuid(),context.getGroupId());
      if (existingEntry == null) {
        existingEntry=DLFileEntryLocalServiceUtil.addFileEntry(entry.getUuid(),entry.getUserId(),folderId.longValue(),entry.getName(),entry.getTitle(),entry.getDescription(),tagsEntries,entry.getExtraSettings(),byteArray,addCommunityPermissions,addGuestPermissions);
      }
 else {
        existingEntry=DLFileEntryLocalServiceUtil.updateFileEntry(entry.getUserId(),existingEntry.getFolderId(),folderId.longValue(),existingEntry.getName(),entry.getName(),entry.getTitle(),entry.getDescription(),tagsEntries,entry.getExtraSettings(),byteArray);
      }
    }
 else {
      existingEntry=DLFileEntryLocalServiceUtil.addFileEntry(entry.getUserId(),folderId.longValue(),entry.getName(),entry.getTitle(),entry.getDescription(),tagsEntries,entry.getExtraSettings(),byteArray,addCommunityPermissions,addGuestPermissions);
    }
    entryNames.put(entry.getName(),existingEntry.getName());
  }
 catch (  NoSuchFolderException nsfe) {
    _log.error("Could not find the parent folder for entry " + entry.getFileEntryId());
  }
}

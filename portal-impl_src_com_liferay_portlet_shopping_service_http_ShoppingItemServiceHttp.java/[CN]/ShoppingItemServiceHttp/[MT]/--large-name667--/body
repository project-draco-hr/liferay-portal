{
  try {
    Object paramObj0=new LongWrapper(itemId);
    Object paramObj1=new LongWrapper(groupId);
    Object paramObj2=new LongWrapper(categoryId);
    Object paramObj3=sku;
    if (sku == null) {
      paramObj3=new NullWrapper("java.lang.String");
    }
    Object paramObj4=name;
    if (name == null) {
      paramObj4=new NullWrapper("java.lang.String");
    }
    Object paramObj5=description;
    if (description == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=properties;
    if (properties == null) {
      paramObj6=new NullWrapper("java.lang.String");
    }
    Object paramObj7=fieldsQuantities;
    if (fieldsQuantities == null) {
      paramObj7=new NullWrapper("java.lang.String");
    }
    Object paramObj8=new BooleanWrapper(requiresShipping);
    Object paramObj9=new IntegerWrapper(stockQuantity);
    Object paramObj10=new BooleanWrapper(featured);
    Object paramObj11=sale;
    if (sale == null) {
      paramObj11=new NullWrapper("java.lang.Boolean");
    }
    Object paramObj12=new BooleanWrapper(smallImage);
    Object paramObj13=smallImageURL;
    if (smallImageURL == null) {
      paramObj13=new NullWrapper("java.lang.String");
    }
    Object paramObj14=smallFile;
    if (smallFile == null) {
      paramObj14=new NullWrapper("java.io.File");
    }
    Object paramObj15=new BooleanWrapper(mediumImage);
    Object paramObj16=mediumImageURL;
    if (mediumImageURL == null) {
      paramObj16=new NullWrapper("java.lang.String");
    }
    Object paramObj17=mediumFile;
    if (mediumFile == null) {
      paramObj17=new NullWrapper("java.io.File");
    }
    Object paramObj18=new BooleanWrapper(largeImage);
    Object paramObj19=largeImageURL;
    if (largeImageURL == null) {
      paramObj19=new NullWrapper("java.lang.String");
    }
    Object paramObj20=largeFile;
    if (largeFile == null) {
      paramObj20=new NullWrapper("java.io.File");
    }
    Object paramObj21=itemFields;
    if (itemFields == null) {
      paramObj21=new NullWrapper("java.util.List");
    }
    Object paramObj22=itemPrices;
    if (itemPrices == null) {
      paramObj22=new NullWrapper("java.util.List");
    }
    Object paramObj23=serviceContext;
    if (serviceContext == null) {
      paramObj23=new NullWrapper("com.liferay.portal.service.ServiceContext");
    }
    MethodWrapper methodWrapper=new MethodWrapper(ShoppingItemServiceUtil.class.getName(),"updateItem",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19,paramObj20,paramObj21,paramObj22,paramObj23});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.kernel.exception.PortalException) {
        throw (com.liferay.portal.kernel.exception.PortalException)e;
      }
      if (e instanceof com.liferay.portal.kernel.exception.SystemException) {
        throw (com.liferay.portal.kernel.exception.SystemException)e;
      }
      throw new com.liferay.portal.kernel.exception.SystemException(e);
    }
    return (com.liferay.portlet.shopping.model.ShoppingItem)returnObj;
  }
 catch (  com.liferay.portal.kernel.exception.SystemException se) {
    _log.error(se,se);
    throw se;
  }
}

{
  Object[] finderArgs=new Object[]{new Long(groupId),new Long(toFolderId),toName};
  List<DLFileShortcut> list=(List<DLFileShortcut>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_G_TF_TN,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(4);
      query.append(_SQL_SELECT_DLFILESHORTCUT_WHERE);
      query.append(_FINDER_COLUMN_G_TF_TN_GROUPID_2);
      query.append(_FINDER_COLUMN_G_TF_TN_TOFOLDERID_2);
      if (toName == null) {
        query.append(_FINDER_COLUMN_G_TF_TN_TONAME_1);
      }
 else {
        if (toName.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_G_TF_TN_TONAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_G_TF_TN_TONAME_2);
        }
      }
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(toFolderId);
      if (toName != null) {
        qPos.add(toName);
      }
      list=q.list();
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<DLFileShortcut>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_G_TF_TN,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return countByG_TF_TN(groupId,toFolderId,toName);
  }
  Session session=null;
  try {
    session=openSession();
    StringBundler query=new StringBundler(4);
    query.append(_FILTER_SQL_COUNT_DLFILESHORTCUT_WHERE);
    query.append(_FINDER_COLUMN_G_TF_TN_GROUPID_2);
    query.append(_FINDER_COLUMN_G_TF_TN_TOFOLDERID_2);
    if (toName == null) {
      query.append(_FINDER_COLUMN_G_TF_TN_TONAME_1);
    }
 else {
      if (toName.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_TF_TN_TONAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_TF_TN_TONAME_2);
      }
    }
    String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),DLFileShortcut.class.getName(),_FILTER_COLUMN_FILESHORTCUTID,_FILTER_COLUMN_USERID,groupId);
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar(COUNT_COLUMN_NAME,com.liferay.portal.kernel.dao.orm.Type.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(toFolderId);
    if (toName != null) {
      qPos.add(toName);
    }
    Long count=(Long)q.uniqueResult();
    return count.intValue();
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

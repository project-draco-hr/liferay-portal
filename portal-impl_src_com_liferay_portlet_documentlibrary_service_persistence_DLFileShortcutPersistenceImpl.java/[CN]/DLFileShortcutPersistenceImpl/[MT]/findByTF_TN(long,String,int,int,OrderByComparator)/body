{
  boolean finderClassNameCacheEnabled=DLFileShortcutModelImpl.CACHE_ENABLED;
  String finderClassName=DLFileShortcut.class.getName();
  String finderMethodName="findByTF_TN";
  String[] finderParams=new String[]{Long.class.getName(),String.class.getName(),"java.lang.Integer","java.lang.Integer","com.liferay.portal.kernel.util.OrderByComparator"};
  Object[] finderArgs=new Object[]{new Long(toFolderId),toName,String.valueOf(begin),String.valueOf(end),String.valueOf(obc)};
  Object result=null;
  if (finderClassNameCacheEnabled) {
    result=FinderCache.getResult(finderClassName,finderMethodName,finderParams,finderArgs,getSessionFactory());
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringMaker query=new StringMaker();
      query.append("FROM com.liferay.portlet.documentlibrary.model.DLFileShortcut WHERE ");
      query.append("toFolderId = ?");
      query.append(" AND ");
      if (toName == null) {
        query.append("toName IS NULL");
      }
 else {
        query.append("toName = ?");
      }
      query.append(" ");
      if (obc != null) {
        query.append("ORDER BY ");
        query.append(obc.getOrderBy());
      }
      Query q=session.createQuery(query.toString());
      int queryPos=0;
      q.setLong(queryPos++,toFolderId);
      if (toName != null) {
        q.setString(queryPos++,toName);
      }
      List list=QueryUtil.list(q,getDialect(),begin,end);
      FinderCache.putResult(finderClassNameCacheEnabled,finderClassName,finderMethodName,finderParams,finderArgs,list);
      return list;
    }
 catch (    Exception e) {
      throw HibernateUtil.processException(e);
    }
 finally {
      closeSession(session);
    }
  }
 else {
    return (List)result;
  }
}

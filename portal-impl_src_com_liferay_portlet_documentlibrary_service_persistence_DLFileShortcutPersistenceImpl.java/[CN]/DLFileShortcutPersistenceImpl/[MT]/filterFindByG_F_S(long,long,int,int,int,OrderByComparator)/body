{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return findByG_F_S(groupId,folderId,status,start,end,orderByComparator);
  }
  StringBundler query=null;
  if (orderByComparator != null) {
    query=new StringBundler(5 + (orderByComparator.getOrderByFields().length * 3));
  }
 else {
    query=new StringBundler(4);
  }
  if (getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_DLFILESHORTCUT_WHERE);
  }
 else {
    query.append(_FILTER_SQL_SELECT_DLFILESHORTCUT_NO_INLINE_DISTINCT_WHERE_1);
  }
  query.append(_FINDER_COLUMN_G_F_S_GROUPID_2);
  query.append(_FINDER_COLUMN_G_F_S_FOLDERID_2);
  query.append(_FINDER_COLUMN_G_F_S_STATUS_2);
  if (!getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_DLFILESHORTCUT_NO_INLINE_DISTINCT_WHERE_2);
  }
  if (orderByComparator != null) {
    if (getDB().isSupportsInlineDistinct()) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
 else {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_TABLE,orderByComparator);
    }
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),DLFileShortcut.class.getName(),_FILTER_COLUMN_PK,_FILTER_COLUMN_USERID,groupId);
  sql=StringUtil.replace(sql,"[$ENTITY_TABLE$]","DLFileShortcut");
  Session session=null;
  try {
    session=openSession();
    SQLQuery q=session.createSQLQuery(sql);
    if (getDB().isSupportsInlineDistinct()) {
      q.addEntity(_FILTER_ENTITY_ALIAS,DLFileShortcutImpl.class);
    }
 else {
      q.addEntity(_FILTER_ENTITY_TABLE,DLFileShortcutImpl.class);
    }
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(folderId);
    qPos.add(status);
    return (List<DLFileShortcut>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

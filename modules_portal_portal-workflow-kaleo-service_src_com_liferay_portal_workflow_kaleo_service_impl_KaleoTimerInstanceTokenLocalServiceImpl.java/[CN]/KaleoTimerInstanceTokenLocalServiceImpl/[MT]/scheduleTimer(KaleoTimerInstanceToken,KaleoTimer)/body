{
  deleteScheduledTimer(kaleoTimerInstanceToken);
  String groupName=getSchedulerGroupName(kaleoTimerInstanceToken);
  DelayDuration delayDuration=new DelayDuration(kaleoTimer.getDuration(),DurationScale.valueOf(StringUtil.toUpperCase(kaleoTimer.getScale())));
  DueDateCalculator dueDateCalculator=new DefaultDueDateCalculator();
  Date dueDate=dueDateCalculator.getDueDate(new Date(),delayDuration);
  int interval=0;
  TimeUnit timeUnit=TimeUnit.SECOND;
  if (kaleoTimer.isRecurring()) {
    DelayDuration recurrenceDelayDuration=new DelayDuration(kaleoTimer.getRecurrenceDuration(),DurationScale.valueOf(StringUtil.toUpperCase(kaleoTimer.getRecurrenceScale())));
    interval=(int)recurrenceDelayDuration.getDuration();
    DurationScale durationScale=recurrenceDelayDuration.getDurationScale();
    timeUnit=TimeUnit.valueOf(StringUtil.toLowerCase(durationScale.getValue()));
  }
  Trigger trigger=triggerFactory.createTrigger(groupName,groupName,dueDate,interval,timeUnit);
  Message message=new Message();
  message.put("kaleoTimerInstanceTokenId",kaleoTimerInstanceToken.getKaleoTimerInstanceTokenId());
  SchedulerEngineHelperUtil.schedule(trigger,StorageType.PERSISTED,null,SchedulerUtil.WORKFLOW_TIMER_DESTINATION_NAME,message,0);
}

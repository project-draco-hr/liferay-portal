{
  super.doVerify();
  List<Company> companies=_companyLocalService.getCompanies(false);
  for (  Company company : companies) {
    PortletPreferences portletPreferences=_prefsProps.getPreferences(company.getCompanyId(),true);
    for (    String key : LegacyNtlmPropsKeys.NTLM_KEYS) {
      Assert.assertTrue(Validator.isNull(portletPreferences.getValue(key,StringPool.BLANK)));
    }
    Settings settings=getSettings(company.getCompanyId());
    Assert.assertEquals("testDomain",settings.getValue(NtlmConstants.AUTH_DOMAIN,StringPool.BLANK));
    Assert.assertEquals("testDomainController",settings.getValue(NtlmConstants.AUTH_DOMAIN_CONTROLLER,StringPool.BLANK));
    Assert.assertEquals("testDomainControllerName",settings.getValue(NtlmConstants.AUTH_DOMAIN_CONTROLLER_NAME,StringPool.BLANK));
    Assert.assertTrue(GetterUtil.getBoolean(settings.getValue(NtlmConstants.AUTH_ENABLED,StringPool.FALSE)));
    Assert.assertEquals("testNegotiateFlags",settings.getValue(NtlmConstants.AUTH_NEGOTIATE_FLAGS,StringPool.BLANK));
    Assert.assertEquals("test@serviceAccount.com",settings.getValue(NtlmConstants.AUTH_SERVICE_ACCOUNT,StringPool.BLANK));
    Assert.assertEquals("testServicePassword",settings.getValue(NtlmConstants.AUTH_SERVICE_PASSWORD,StringPool.BLANK));
  }
}

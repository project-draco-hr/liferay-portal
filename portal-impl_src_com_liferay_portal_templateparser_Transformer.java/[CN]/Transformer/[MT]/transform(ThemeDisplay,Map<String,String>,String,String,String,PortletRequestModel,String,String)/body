{
  if (_log.isDebugEnabled()) {
    _log.debug("Language " + languageId);
  }
  if (Validator.isNull(viewMode)) {
    viewMode=Constants.VIEW;
  }
  if (_logTokens.isDebugEnabled()) {
    String tokensString=PropertiesUtil.list(tokens);
    _logTokens.debug(tokensString);
  }
  if (_logTransformBefore.isDebugEnabled()) {
    _logTransformBefore.debug(xml);
  }
  List<TransformerListener> transformerListeners=new ArrayList<TransformerListener>();
  for (  String transformerListenersClassName : _transformerListenerClassNames) {
    TransformerListener transformerListener=null;
    try {
      if (_log.isDebugEnabled()) {
        _log.debug("Instantiate listener " + transformerListenersClassName);
      }
      ClassLoader classLoader=PortalClassLoaderUtil.getClassLoader();
      transformerListener=(TransformerListener)InstanceFactory.newInstance(classLoader,transformerListenersClassName);
      transformerListeners.add(transformerListener);
    }
 catch (    Exception e) {
      _log.error(e,e);
    }
    if (_logXmlBeforeListener.isDebugEnabled()) {
      _logXmlBeforeListener.debug(xml);
    }
    if (transformerListener != null) {
      xml=transformerListener.onXml(xml,languageId,tokens);
      if (_logXmlAfterListener.isDebugEnabled()) {
        _logXmlAfterListener.debug(xml);
      }
    }
    if (_logScriptBeforeListener.isDebugEnabled()) {
      _logScriptBeforeListener.debug(script);
    }
    if (transformerListener != null) {
      script=transformerListener.onScript(script,xml,languageId,tokens);
      if (_logScriptAfterListener.isDebugEnabled()) {
        _logScriptAfterListener.debug(script);
      }
    }
  }
  String output=null;
  if (Validator.isNull(langType)) {
    output=LocalizationUtil.getLocalization(xml,languageId);
  }
 else {
    long companyId=0;
    long companyGroupId=0;
    long articleGroupId=0;
    if (tokens != null) {
      companyId=GetterUtil.getLong(tokens.get("company_id"));
      companyGroupId=GetterUtil.getLong(tokens.get("company_group_id"));
      articleGroupId=GetterUtil.getLong(tokens.get("article_group_id"));
    }
    long scopeGroupId=0;
    long siteGroupId=0;
    if (themeDisplay != null) {
      companyId=themeDisplay.getCompanyId();
      companyGroupId=themeDisplay.getCompanyGroupId();
      scopeGroupId=themeDisplay.getScopeGroupId();
      siteGroupId=themeDisplay.getSiteGroupId();
    }
    String templateId=tokens.get("template_id");
    templateId=getTemplateId(templateId,companyId,companyGroupId,articleGroupId);
    Template template=getTemplate(templateId,tokens,languageId,xml,script,langType);
    UnsyncStringWriter unsyncStringWriter=new UnsyncStringWriter();
    try {
      if (Validator.isNotNull(xml)) {
        Document document=SAXReaderUtil.read(xml);
        Element rootElement=document.getRootElement();
        List<TemplateNode> templateNodes=getTemplateNodes(themeDisplay,rootElement);
        if (templateNodes != null) {
          for (          TemplateNode templateNode : templateNodes) {
            template.put(templateNode.getName(),templateNode);
          }
        }
        if (TemplateConstants.LANG_TYPE_XSL.equals(langType)) {
          Element requestElement=null;
          if (portletRequestModel != null) {
            Document requestDocument=SAXReaderUtil.read(portletRequestModel.toXML());
            requestElement=requestDocument.getRootElement();
          }
 else {
            requestElement=rootElement.element("request");
          }
          template.put("request",insertRequestVariables(requestElement));
          template.put("xmlRequest",requestElement.asXML());
        }
      }
      template.put("articleGroupId",articleGroupId);
      template.put("company",getCompany(themeDisplay,companyId));
      template.put("companyId",companyId);
      template.put("device",getDevice(themeDisplay));
      String templatesPath=getTemplatesPath(companyId,articleGroupId);
      template.put("journalTemplatesPath",templatesPath);
      Locale locale=LocaleUtil.fromLanguageId(languageId);
      template.put("locale",locale);
      template.put("permissionChecker",PermissionThreadLocal.getPermissionChecker());
      template.put("randomNamespace",StringUtil.randomId() + StringPool.UNDERLINE);
      template.put("scopeGroupId",scopeGroupId);
      template.put("siteGroupId",siteGroupId);
      template.put("templatesPath",templatesPath);
      template.put("viewMode",viewMode);
      template.put("groupId",articleGroupId);
      mergeTemplate(template,unsyncStringWriter);
    }
 catch (    Exception e) {
      if (e instanceof DocumentException) {
        throw new TransformException("Unable to read XML document",e);
      }
 else       if (e instanceof IOException) {
        throw new TransformException("Error reading template",e);
      }
 else       if (e instanceof TransformException) {
        throw (TransformException)e;
      }
 else {
        throw new TransformException("Unhandled exception",e);
      }
    }
    output=unsyncStringWriter.toString();
  }
  for (  TransformerListener transformerListener : transformerListeners) {
    if (_logOutputBeforeListener.isDebugEnabled()) {
      _logOutputBeforeListener.debug(output);
    }
    output=transformerListener.onOutput(output,languageId,tokens);
    if (_logOutputAfterListener.isDebugEnabled()) {
      _logOutputAfterListener.debug(output);
    }
  }
  if (_logTransfromAfter.isDebugEnabled()) {
    _logTransfromAfter.debug(output);
  }
  return output;
}

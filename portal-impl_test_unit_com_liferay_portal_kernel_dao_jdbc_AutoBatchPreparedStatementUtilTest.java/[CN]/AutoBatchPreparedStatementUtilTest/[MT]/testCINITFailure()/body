{
  PropsUtilAdvice.setProps(PropsKeys.HIBERNATE_JDBC_BATCH_SIZE,"0");
  final NoSuchMethodException nsme=new NoSuchMethodException();
  final AtomicInteger counter=new AtomicInteger();
  try (SwappableSecurityManager swappableSecurityManager=new SwappableSecurityManager(){
    @Override public void checkPackageAccess(    String pkg){
      if (pkg.equals("java.sql") && (counter.getAndIncrement() == 1)) {
        ReflectionUtil.throwException(nsme);
      }
    }
  }
){
    swappableSecurityManager.install();
    Class.forName(AutoBatchPreparedStatementUtil.class.getName());
  }
 catch (  ExceptionInInitializerError eiie) {
    Assert.assertSame(nsme,eiie.getCause());
  }
}

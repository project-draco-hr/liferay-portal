{
  try (LoggingTimer loggingTimer=new LoggingTimer()){
    long classNameId=PortalUtil.getClassNameId(MBDiscussion.class.getName());
    StringBundler sb=new StringBundler(8);
    sb.append("delete from AssetEntry where classPK in (");
    sb.append("select messageId from MBMessage where threadId in (");
    sb.append("select threadId from MBThread where categoryId = ");
    sb.append(MBCategoryConstants.DISCUSSION_CATEGORY_ID);
    sb.append(" and messageCount = 1) and status = ");
    sb.append(WorkflowConstants.STATUS_APPROVED);
    sb.append(") and classNameId = ");
    sb.append(classNameId);
    runSQL(sb.toString());
    sb=new StringBundler(5);
    sb.append("delete from MBDiscussion where threadId in (select ");
    sb.append("threadId from MBThread where categoryId = ");
    sb.append(MBCategoryConstants.DISCUSSION_CATEGORY_ID);
    sb.append(" and messageCount = 1 and threadId not in (");
    sb.append("select threadId from MBMessage))");
    runSQL(sb.toString());
    sb=new StringBundler(8);
    sb.append("delete from MBMessage where threadId in (select");
    sb.append("threadId from MBThread where categoryId = ");
    sb.append(MBCategoryConstants.DISCUSSION_CATEGORY_ID);
    sb.append(" and messageCount = 1) and status = ");
    sb.append(WorkflowConstants.STATUS_APPROVED);
    sb.append(" and rootMessageId not in (select parentMessageId ");
    sb.append("FROM (select parentMessageId from MBMessage) as ");
    sb.append("parentMessageId)");
    runSQL(sb.toString());
    sb=new StringBundler(4);
    sb.append("delete from MBThread where categoryId = ");
    sb.append(MBCategoryConstants.DISCUSSION_CATEGORY_ID);
    sb.append(" and messageCount = 1 and threadId not in ( ");
    sb.append("select threadId from MBMessage)");
    runSQL(sb.toString());
  }
 catch (  Exception e) {
    throw new UpgradeException(e);
  }
}

{
  Task task=project.task(SETUP_ARQUILLIAN_TASK_NAME);
  task.doLast(new Action<Task>(){
    @Override public void execute(    Task task){
      Project project=task.getProject();
      try {
        String xml=FileUtil.read("com/liferay/gradle/plugins/dependencies/" + "arquillian.xml");
        LiferayExtension liferayExtension=GradleUtil.getExtension(project,LiferayExtension.class);
        TomcatAppServer tomcatAppServer=(TomcatAppServer)liferayExtension.getAppServer("tomcat");
        xml=xml.replace("${app.server.tomcat.manager.password}",tomcatAppServer.getManagerPassword());
        xml=xml.replace("${app.server.tomcat.manager.user}",tomcatAppServer.getManagerUserName());
        xml=xml.replace("${jmx.remote.port}",String.valueOf(liferayExtension.getJmxRemotePort()));
        SourceSet sourceSet=GradleUtil.getSourceSet(project,TEST_INTEGRATION_SOURCE_SET_NAME);
        File testIntegrationDir=getSrcDir(sourceSet.getResources());
        File arquillianXmlFile=new File(testIntegrationDir,"arquillian.xml");
        Files.write(arquillianXmlFile.toPath(),xml.getBytes(StandardCharsets.UTF_8));
      }
 catch (      Exception e) {
        throw new GradleException(e.getMessage(),e);
      }
    }
  }
);
  task.onlyIf(new Spec<Task>(){
    @Override public boolean isSatisfiedBy(    Task task){
      SourceSet sourceSet=GradleUtil.getSourceSet(task.getProject(),TEST_INTEGRATION_SOURCE_SET_NAME);
      File testIntegrationDir=getSrcDir(sourceSet.getResources());
      File arquillianXmlFile=new File(testIntegrationDir,"arquillian.xml");
      if (arquillianXmlFile.exists()) {
        return false;
      }
      SourceDirectorySet sourceDirectorySet=sourceSet.getAllJava();
      if (sourceDirectorySet.isEmpty()) {
        return false;
      }
      return true;
    }
  }
);
  return task;
}

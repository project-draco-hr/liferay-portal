{
  SourceSet testIntegrationSourceSet=GradleUtil.addSourceSet(project,TEST_INTEGRATION_SOURCE_SET_NAME);
  Configuration testIntegrationCompileConfiguration=GradleUtil.getConfiguration(project,testIntegrationSourceSet.getCompileConfigurationName());
  Configuration testCompileConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.TEST_COMPILE_CONFIGURATION_NAME);
  testIntegrationCompileConfiguration.extendsFrom(testCompileConfiguration);
  Configuration testIntegrationRuntimeConfiguration=GradleUtil.getConfiguration(project,testIntegrationSourceSet.getRuntimeConfigurationName());
  Configuration testRuntimeConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.TEST_RUNTIME_CONFIGURATION_NAME);
  testIntegrationRuntimeConfiguration.extendsFrom(testRuntimeConfiguration,testIntegrationCompileConfiguration);
  SourceSet mainSourceSet=GradleUtil.getSourceSet(project,SourceSet.MAIN_SOURCE_SET_NAME);
  FileCollection compileClasspath=testIntegrationSourceSet.getCompileClasspath();
  testIntegrationSourceSet.setCompileClasspath(compileClasspath.plus(mainSourceSet.getOutput()));
  FileCollection runtimeClasspath=testIntegrationSourceSet.getRuntimeClasspath();
  testIntegrationSourceSet.setRuntimeClasspath(runtimeClasspath.plus(mainSourceSet.getOutput()));
  return testIntegrationSourceSet;
}

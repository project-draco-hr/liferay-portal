{
  SourceSet testIntegrationSourceSet=GradleUtil.addSourceSet(project,TEST_INTEGRATION_SOURCE_SET_NAME);
  Configuration testIntegrationCompileConfiguration=GradleUtil.getConfiguration(project,testIntegrationSourceSet.getCompileConfigurationName());
  Configuration compileConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.COMPILE_CONFIGURATION_NAME);
  Configuration testCompileConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.TEST_COMPILE_CONFIGURATION_NAME);
  testIntegrationCompileConfiguration.extendsFrom(compileConfiguration,testCompileConfiguration);
  Configuration testIntegrationRuntimeConfiguration=GradleUtil.getConfiguration(project,testIntegrationSourceSet.getRuntimeConfigurationName());
  Configuration runtimeConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.RUNTIME_CONFIGURATION_NAME);
  Configuration testRuntimeConfiguration=GradleUtil.getConfiguration(project,JavaPlugin.TEST_RUNTIME_CONFIGURATION_NAME);
  testIntegrationRuntimeConfiguration.extendsFrom(runtimeConfiguration,testRuntimeConfiguration,testIntegrationCompileConfiguration);
  SourceSet mainSourceSet=GradleUtil.getSourceSet(project,SourceSet.MAIN_SOURCE_SET_NAME);
  testIntegrationSourceSet.setCompileClasspath(project.files(mainSourceSet.getOutput(),testIntegrationCompileConfiguration));
  testIntegrationSourceSet.setRuntimeClasspath(project.files(testIntegrationSourceSet.getOutput(),mainSourceSet.getOutput(),testIntegrationRuntimeConfiguration));
  return testIntegrationSourceSet;
}

{
  return new SingleThreadEventLoop(this,threadFactory,true){
    @Override protected void run(){
      while (!confirmShutdown()) {
        Runnable task=takeTask();
        if (task != null) {
          task.run();
          updateLastExecutionTime();
        }
      }
    }
    @Override public ScheduledFuture<?> schedule(    Runnable command,    long delay,    TimeUnit unit){
      ScheduledFuture<?> scheduledFuture=super.schedule(command,delay,unit);
      _reference.set(scheduledFuture);
      return scheduledFuture;
    }
  }
;
}

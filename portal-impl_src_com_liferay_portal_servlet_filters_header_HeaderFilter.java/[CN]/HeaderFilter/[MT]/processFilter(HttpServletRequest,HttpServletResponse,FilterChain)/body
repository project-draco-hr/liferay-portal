{
  Enumeration<String> enu=_filterConfig.getInitParameterNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    String value=_filterConfig.getInitParameter(name);
    if (name.equals(_EXPIRES) && Validator.isNumber(value)) {
      int seconds=GetterUtil.getInteger(value);
      Calendar cal=new GregorianCalendar();
      cal.add(Calendar.SECOND,seconds);
      Format dateFormat=FastDateFormatFactoryUtil.getSimpleDateFormat(_DATE_FORMAT,Locale.US,_timeZone);
      value=dateFormat.format(cal.getTime());
    }
    boolean addHeader=true;
    if (name.equalsIgnoreCase(HttpHeaders.CACHE_CONTROL)) {
      HttpSession session=request.getSession(false);
      if ((session == null) || session.isNew()) {
        addHeader=false;
      }
    }
    if (addHeader) {
      response.addHeader(name,value);
    }
  }
  long lastModified=getLastModified(request);
  long ifModifiedSince=request.getDateHeader(HttpHeaders.IF_MODIFIED_SINCE);
  if (lastModified > 0) {
    response.setDateHeader(HttpHeaders.LAST_MODIFIED,lastModified);
    if (lastModified <= ifModifiedSince) {
      response.setDateHeader(HttpHeaders.LAST_MODIFIED,ifModifiedSince);
      response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
      return;
    }
  }
  processFilter(HeaderFilter.class,request,response,filterChain);
}

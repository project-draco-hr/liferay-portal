{
  String[] devices=StringUtil.split(ParamUtil.getString(actionRequest,"devices"));
  for (  String device : devices) {
    String themeId=ParamUtil.getString(actionRequest,device + "ThemeId");
    String colorSchemeId=ParamUtil.getString(actionRequest,device + "ColorSchemeId");
    String css=ParamUtil.getString(actionRequest,device + "Css");
    boolean wapTheme=device.equals("wap");
    if (Validator.isNotNull(themeId)) {
      Theme theme=ThemeLocalServiceUtil.getTheme(companyId,themeId,wapTheme);
      if (!theme.hasColorSchemes()) {
        colorSchemeId=StringPool.BLANK;
      }
      if (Validator.isNull(colorSchemeId)) {
        ColorScheme colorScheme=ThemeLocalServiceUtil.getColorScheme(companyId,themeId,colorSchemeId,wapTheme);
        colorSchemeId=colorScheme.getColorSchemeId();
      }
      deleteThemeSettings(typeSettingsProperties,device);
      if (Validator.equals(themeId,oldThemeId)) {
        UnicodeProperties themeSettingsProperties=PropertiesParamUtil.getProperties(actionRequest,device + "ThemeSettingsProperties--");
        for (        String key : themeSettingsProperties.keySet()) {
          String defaultValue=theme.getSetting(key);
          String newValue=themeSettingsProperties.get(key);
          if (!newValue.equals(defaultValue)) {
            typeSettingsProperties.setProperty(ThemeSettingImpl.namespaceProperty(device,key),newValue);
          }
 else {
            typeSettingsProperties.remove(ThemeSettingImpl.namespaceProperty(device,key));
          }
        }
      }
    }
    long groupId=liveGroupId;
    if (stagingGroupId > 0) {
      groupId=stagingGroupId;
    }
    LayoutSetServiceUtil.updateLookAndFeel(groupId,privateLayout,themeId,colorSchemeId,css,wapTheme);
  }
}

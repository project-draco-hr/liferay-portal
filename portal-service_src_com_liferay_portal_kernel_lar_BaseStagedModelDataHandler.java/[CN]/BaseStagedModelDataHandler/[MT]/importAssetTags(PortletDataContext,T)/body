{
  List<Element> referenceElements=portletDataContext.getReferenceElements(stagedModel,StagedAssetTag.class);
  List<Long> stagedAssetTagIds=new ArrayList<>(referenceElements.size());
  for (  Element referenceElement : referenceElements) {
    long classPK=GetterUtil.getLong(referenceElement.attributeValue("class-pk"));
    StagedModelDataHandlerUtil.importReferenceStagedModel(portletDataContext,stagedModel,StagedAssetTag.class,classPK);
    stagedAssetTagIds.add(classPK);
  }
  Map<Long,Long> stagedAssetTagIdsMap=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(StagedAssetTag.class);
  Set<String> assetTagNames=new HashSet<>();
  for (  long stagedAssetTagId : stagedAssetTagIds) {
    long importedStagedAssetTagId=MapUtil.getLong(stagedAssetTagIdsMap,stagedAssetTagId,stagedAssetTagId);
    AssetTag assetTag=AssetTagLocalServiceUtil.fetchAssetTag(importedStagedAssetTagId);
    if (assetTag != null) {
      assetTagNames.add(assetTag.getName());
    }
  }
  portletDataContext.addAssetTags(ExportImportClassedModelUtil.getClassName(stagedModel),ExportImportClassedModelUtil.getClassPK(stagedModel),assetTagNames.toArray(new String[assetTagNames.size()]));
}

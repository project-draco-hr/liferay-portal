{
  String creatorUserName=null;
  if (isDefaultUser(equityLog.getUserId())) {
    creatorUserName=themeDisplay.translate("anonymous");
  }
 else {
    creatorUserName=getUserName(equityLog.getUserId(),themeDisplay);
  }
  AssetEntry entry=AssetEntryLocalServiceUtil.getEntry(equityLog.getAssetEntryId());
  String titlePattern=null;
  if (equityLog.getActionId().equals(ActionKeys.VIEW)) {
    titlePattern="activity-social-equity-action-view";
  }
 else   if (equityLog.getActionId().equals(ActionKeys.ADD_DISCUSSION)) {
    titlePattern="activity-social-equity-action-comment";
  }
 else   if (equityLog.getActionId().equals(ActionKeys.ADD_VOTE)) {
    titlePattern="activity-social-equity-action-vote";
  }
 else {
    titlePattern="activity-social-equity-action-default";
  }
  String entryTitle=HtmlUtil.escape(cleanContent(entry.getTitle()));
  String action=ResourceActionsUtil.getAction(themeDisplay.getLocale(),equityLog.getActionId());
  String className=ResourceActionsUtil.getModelResource(themeDisplay.getLocale(),entry.getClassName());
  Object[] titleArguments=new Object[]{creatorUserName,className.toLowerCase(),entryTitle,action};
  String title=themeDisplay.translate(titlePattern,titleArguments);
  String body=StringPool.BLANK;
  return new SocialActivityFeedEntry(null,title,body);
}

{
  Set<Class<? extends Capability>> exportedCapabilities=repositoryInstanceDefinition.getExportedCapabilities();
  Map<Class<? extends Capability>,Capability> supportedCapabilities=repositoryInstanceDefinition.getSupportedCapabilities();
  for (  Class<? extends Capability> exportedCapability : exportedCapabilities) {
    Capability exportedCapabilityImpl=supportedCapabilities.remove(exportedCapability);
    baseCapabilityRepository.addExportedCapability(exportedCapability,exportedCapabilityImpl);
  }
  for (  Class<? extends Capability> supportedCapability : supportedCapabilities.keySet()) {
    Capability supportedCapabilityImpl=supportedCapabilities.get(supportedCapability);
    baseCapabilityRepository.addSupportedCapability(supportedCapability,supportedCapabilityImpl);
  }
  if (!baseCapabilityRepository.isCapabilityProvided(ConfigurationCapability.class)) {
    baseCapabilityRepository.addExportedCapability(ConfigurationCapability.class,new ConfigurationCapabilityImpl(baseCapabilityRepository));
  }
  if (!baseCapabilityRepository.isCapabilityProvided(RepositoryEventTriggerCapability.class)) {
    baseCapabilityRepository.addExportedCapability(RepositoryEventTriggerCapability.class,new LiferayRepositoryEventTriggerCapability(repositoryClassDefinition.getRepositoryEventTrigger()));
  }
}

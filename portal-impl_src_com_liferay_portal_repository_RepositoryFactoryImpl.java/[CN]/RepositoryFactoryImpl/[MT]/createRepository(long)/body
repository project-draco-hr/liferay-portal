{
  long classNameId=getRepositoryClassNameId(repositoryId);
  RepositoryClassDefinition repositoryClassDefinition=getRepositoryClassDefinition(classNameId);
  RepositoryFactory repositoryFactory=repositoryClassDefinition.getRepositoryFactory();
  Repository repository=repositoryFactory.createRepository(repositoryId);
  RepositoryInstanceDefinition repositoryInstanceDefinition=getRepositoryInstanceDefinition(repository);
  Map<Class<? extends Capability>,Capability> externalSupportedCapabilities=repositoryInstanceDefinition.getSupportedCapabilities();
  Set<Class<? extends Capability>> externalExportedCapabilityClasses=repositoryInstanceDefinition.getExportedCapabilities();
  CMISRepositoryHandler cmisRepositoryHandler=getCMISRepositoryHandler(repository);
  if (cmisRepositoryHandler != null) {
    externalSupportedCapabilities=new HashMap<Class<? extends Capability>,Capability>(externalSupportedCapabilities);
    externalSupportedCapabilities.put(CMISRepositoryHandler.class,cmisRepositoryHandler);
    externalExportedCapabilityClasses=new HashSet<Class<? extends Capability>>(externalExportedCapabilityClasses);
    externalExportedCapabilityClasses.add(CMISRepositoryHandler.class);
  }
  return new CapabilityRepository(repository,externalSupportedCapabilities,externalExportedCapabilityClasses,repositoryClassDefinition.getRepositoryEventTrigger());
}

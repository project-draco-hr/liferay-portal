{
  long classNameId=getRepositoryClassNameId(repositoryId);
  RepositoryClassDefinition repositoryClassDefinition=getRepositoryClassDefinition(classNameId);
  RepositoryFactory repositoryFactory=repositoryClassDefinition.getRepositoryFactory();
  Repository repository=repositoryFactory.createRepository(repositoryId);
  RepositoryInstanceDefinition repositoryInstanceDefinition=repositoryClassDefinition.createRepositoryInstanceDefinition(repository);
  Map<Class<? extends Capability>,Capability> supportedCapabilities=repositoryInstanceDefinition.getSupportedCapabilities();
  Set<Class<? extends Capability>> exportedCapabilityClasses=repositoryInstanceDefinition.getExportedCapabilities();
  CMISRepositoryHandler cmisRepositoryHandler=getCMISRepositoryHandler(repository);
  if (cmisRepositoryHandler != null) {
    supportedCapabilities.put(CMISRepositoryHandler.class,cmisRepositoryHandler);
    exportedCapabilityClasses.add(CMISRepositoryHandler.class);
  }
  setupCommonCapabilities(repositoryClassDefinition,supportedCapabilities,exportedCapabilityClasses);
  return new CapabilityRepository(repository,supportedCapabilities,exportedCapabilityClasses,repositoryClassDefinition.getRepositoryEventTrigger());
}

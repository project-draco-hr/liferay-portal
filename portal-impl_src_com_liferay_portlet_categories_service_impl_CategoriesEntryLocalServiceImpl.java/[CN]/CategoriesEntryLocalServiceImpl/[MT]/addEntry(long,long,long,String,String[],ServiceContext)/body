{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=serviceContext.getScopeGroupId();
  if (properties == null) {
    properties=new String[0];
  }
  name=name.trim();
  validate(parentEntryId,0,name);
  Date now=new Date();
  long entryId=counterLocalService.increment();
  CategoriesEntry entry=categoriesEntryPersistence.create(entryId);
  entry.setGroupId(groupId);
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setUserName(user.getFullName());
  entry.setCreateDate(now);
  entry.setModifiedDate(now);
  entry.setName(name);
  categoriesVocabularyPersistence.findByPrimaryKey(vocabularyId);
  entry.setVocabularyId(vocabularyId);
  categoriesEntryPersistence.findByPrimaryKey(parentEntryId);
  entry.setParentEntryId(parentEntryId);
  categoriesEntryPersistence.update(entry,false);
  if (serviceContext.getAddCommunityPermissions() || serviceContext.getAddGuestPermissions()) {
    addEntryResources(entry,serviceContext.getAddCommunityPermissions(),serviceContext.getAddGuestPermissions());
  }
 else {
    addEntryResources(entry,serviceContext.getCommunityPermissions(),serviceContext.getGuestPermissions());
  }
  for (int i=0; i < properties.length; i++) {
    String[] property=StringUtil.split(properties[i],StringPool.COLON);
    String key=StringPool.BLANK;
    if (property.length > 1) {
      key=GetterUtil.getString(property[1]);
    }
    String value=StringPool.BLANK;
    if (property.length > 2) {
      value=GetterUtil.getString(property[2]);
    }
    if (Validator.isNotNull(key)) {
      categoriesPropertyLocalService.addProperty(userId,entryId,key,value);
    }
  }
  return entry;
}

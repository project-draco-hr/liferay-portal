{
  long pk=RandomTestUtil.nextLong();
  RatingsStats newRatingsStats=_persistence.create(pk);
  newRatingsStats.setCompanyId(RandomTestUtil.nextLong());
  newRatingsStats.setClassNameId(RandomTestUtil.nextLong());
  newRatingsStats.setClassPK(RandomTestUtil.nextLong());
  newRatingsStats.setTotalEntries(RandomTestUtil.nextInt());
  newRatingsStats.setTotalScore(RandomTestUtil.nextDouble());
  newRatingsStats.setAverageScore(RandomTestUtil.nextDouble());
  _ratingsStatses.add(_persistence.update(newRatingsStats));
  RatingsStats existingRatingsStats=_persistence.findByPrimaryKey(newRatingsStats.getPrimaryKey());
  Assert.assertEquals(existingRatingsStats.getStatsId(),newRatingsStats.getStatsId());
  Assert.assertEquals(existingRatingsStats.getCompanyId(),newRatingsStats.getCompanyId());
  Assert.assertEquals(existingRatingsStats.getClassNameId(),newRatingsStats.getClassNameId());
  Assert.assertEquals(existingRatingsStats.getClassPK(),newRatingsStats.getClassPK());
  Assert.assertEquals(existingRatingsStats.getTotalEntries(),newRatingsStats.getTotalEntries());
  AssertUtils.assertEquals(existingRatingsStats.getTotalScore(),newRatingsStats.getTotalScore());
  AssertUtils.assertEquals(existingRatingsStats.getAverageScore(),newRatingsStats.getAverageScore());
}

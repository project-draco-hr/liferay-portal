{
  DynamicQuery dynamicQuery=LayoutLocalServiceUtil.dynamicQuery();
  Property groupIdProperty=PropertyFactoryUtil.forName("groupId");
  Group group=layoutSetPrototype.getGroup();
  dynamicQuery.add(groupIdProperty.eq(group.getGroupId()));
  Conjunction conjunction=RestrictionsFactoryUtil.conjunction();
  dynamicQuery.add(conjunction);
  Property layoutPrototypeUuidProperty=PropertyFactoryUtil.forName("layoutPrototypeUuid");
  conjunction.add(layoutPrototypeUuidProperty.isNotNull());
  conjunction.add(layoutPrototypeUuidProperty.ne(StringPool.BLANK));
  List<Layout> layouts=LayoutLocalServiceUtil.dynamicQuery(dynamicQuery);
  boolean exportLayoutPrototypes=portletDataContext.getBooleanParameter(LayoutSetPrototypePortletDataHandler.NAMESPACE,LayoutSetPrototypePortletDataHandler.LAYOUT_PROTOTYPE_EXPORT_CONTROL);
  boolean missingReference=!exportLayoutPrototypes;
  for (  Layout layout : layouts) {
    String layoutPrototypeUuid=layout.getLayoutPrototypeUuid();
    LayoutPrototype layoutPrototype=LayoutPrototypeLocalServiceUtil.getLayoutPrototypeByUuidAndCompanyId(layoutPrototypeUuid,portletDataContext.getCompanyId());
    portletDataContext.addReferenceElement(layout,layoutSetPrototypeElement,layoutPrototype,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,missingReference);
    if (exportLayoutPrototypes) {
      StagedModelDataHandlerUtil.exportStagedModel(portletDataContext,layoutPrototype);
    }
  }
}

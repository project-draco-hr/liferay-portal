{
  User user=_userLocalService.getUser(userId);
  long companyId=user.getCompanyId();
  StopWatch stopWatch=new StopWatch();
  if (_log.isDebugEnabled()) {
    stopWatch.start();
    _log.debug("exportUser(userId, userGroupId, UserOperation): " + "userId = " + userId + "userGroupId = "+ userGroupId+ ", companyId = "+ companyId+ ".");
  }
  LDAPAuthConfiguration ldapAuthConfiguration=_ldapAuthConfigurationProvider.getConfiguration(companyId);
  if (!ldapAuthConfiguration.enabled() || !_ldapSettings.isExportEnabled(companyId) || !_ldapSettings.isExportGroupEnabled(companyId)) {
    return;
  }
  long ldapServerId=_portalLDAP.getLdapServerId(companyId,user.getScreenName(),user.getEmailAddress());
  LdapContext ldapContext=_portalLDAP.getContext(ldapServerId,companyId);
  if (ldapContext == null) {
    return;
  }
  UserGroup userGroup=_userGroupLocalService.getUserGroup(userGroupId);
  Properties groupMappings=_ldapSettings.getGroupMappings(ldapServerId,companyId);
  Properties userMappings=_ldapSettings.getUserMappings(ldapServerId,companyId);
  Binding binding=_portalLDAP.getGroup(ldapServerId,companyId,userGroup.getName());
  try {
    if (binding == null) {
      if (userOperation == UserOperation.ADD) {
        addGroup(ldapServerId,ldapContext,userGroup,user,groupMappings,userMappings);
      }
      return;
    }
    Name name=new CompositeName();
    name.add(_portalLDAP.getNameInNamespace(ldapServerId,companyId,binding));
    Modifications modifications=_portalToLDAPConverter.getLDAPGroupModifications(ldapServerId,userGroup,user,groupMappings,userMappings,userOperation);
    ModificationItem[] modificationItems=modifications.getItems();
    ldapContext.modifyAttributes(name,modificationItems);
  }
 catch (  SchemaViolationException sve) {
    String fullGroupDN=_portalLDAP.getNameInNamespace(ldapServerId,companyId,binding);
    Attributes attributes=_portalLDAP.getGroupAttributes(ldapServerId,companyId,ldapContext,fullGroupDN,true);
    Attribute groupMembers=attributes.get(groupMappings.getProperty(GroupConverterKeys.USER));
    if ((groupMembers != null) && (groupMembers.size() == 1)) {
      ldapContext.unbind(fullGroupDN);
    }
  }
 finally {
    if (ldapContext != null) {
      ldapContext.close();
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Completed export for userId " + userId + " in "+ (stopWatch.getTime())+ "ms.");
    }
  }
}

{
  ExtendedObjectClassDefinition extendedObjectClassDefinition=mock(ExtendedObjectClassDefinition.class);
  ExtendedAttributeDefinition extendedAttributeDefinition=mock(ExtendedAttributeDefinition.class);
  whenGetAttributeDefinitions(extendedObjectClassDefinition,new ExtendedAttributeDefinition[]{extendedAttributeDefinition});
  whenGetCardinality(extendedAttributeDefinition,-2);
  whenGetDefaultValue(extendedAttributeDefinition,null);
  whenGetID(extendedAttributeDefinition,"Text");
  Configuration configuration=mock(Configuration.class);
  Dictionary<String,Object> properties=new Hashtable<>();
  Vector<String> vector=new Vector<>();
  vector.add("Joe Bloggs");
  vector.add("Ella Fitzgerald");
  properties.put("Text",vector);
  whenGetProperties(configuration,properties);
  ConfigurationModel configurationModel=new ConfigurationModel(extendedObjectClassDefinition,configuration,null,false);
  DDMFormValues ddmFormValues=getDDMFormValues(configurationModel,getDDMForm(configurationModel));
  List<DDMFormFieldValue> ddmFormFieldValues=ddmFormValues.getDDMFormFieldValues();
  Assert.assertEquals(2,ddmFormFieldValues.size());
  Assert.assertEquals("Joe Bloggs",getValueString(ddmFormFieldValues.get(0)));
  Assert.assertEquals("Ella Fitzgerald",getValueString(ddmFormFieldValues.get(1)));
}

{
  Matcher matcher=_incorrectAssignTagPattern.matcher(content);
  content=matcher.replaceAll("$1 />\n");
  matcher=_assignTagsBlockPattern.matcher(content);
  while (matcher.find()) {
    String match=matcher.group();
    String tabs=matcher.group(2);
    String replacement=StringUtil.removeSubstrings(match,"<#assign ","<#assign\n"," />","\n/>","\t/>");
    replacement=StringUtil.removeChar(replacement,CharPool.TAB);
    String[] lines=StringUtil.splitLines(replacement);
    StringBundler sb=new StringBundler((3 * lines.length) + 5);
    sb.append(tabs);
    sb.append("<#assign");
    for (    String line : lines) {
      sb.append("\n\t");
      sb.append(tabs);
      sb.append(line);
    }
    sb.append(StringPool.NEW_LINE);
    sb.append(tabs);
    sb.append("/>\n\n");
    content=StringUtil.replace(content,match,sb.toString());
  }
  return content;
}

{
  try {
    Object paramObj0=name;
    if (name == null) {
      paramObj0=new NullWrapper("java.lang.String");
    }
    Object paramObj1=description;
    if (description == null) {
      paramObj1=new NullWrapper("java.lang.String");
    }
    Object paramObj2=new BooleanWrapper(changeable);
    Object paramObj3=new BooleanWrapper(changeRequired);
    Object paramObj4=new IntegerWrapper(minAge);
    Object paramObj5=storageScheme;
    if (storageScheme == null) {
      paramObj5=new NullWrapper("java.lang.String");
    }
    Object paramObj6=new BooleanWrapper(checkSyntax);
    Object paramObj7=new BooleanWrapper(allowDictionaryWords);
    Object paramObj8=new IntegerWrapper(minLength);
    Object paramObj9=new BooleanWrapper(history);
    Object paramObj10=new IntegerWrapper(historyCount);
    Object paramObj11=new BooleanWrapper(expireable);
    Object paramObj12=new IntegerWrapper(maxAge);
    Object paramObj13=new IntegerWrapper(warningTime);
    Object paramObj14=new IntegerWrapper(graceLimit);
    Object paramObj15=new BooleanWrapper(lockout);
    Object paramObj16=new IntegerWrapper(maxFailure);
    Object paramObj17=new BooleanWrapper(requireUnlock);
    Object paramObj18=new IntegerWrapper(lockoutDuration);
    Object paramObj19=new IntegerWrapper(resetFailureCount);
    MethodWrapper methodWrapper=new MethodWrapper(PasswordPolicyServiceUtil.class.getName(),"addPolicy",new Object[]{paramObj0,paramObj1,paramObj2,paramObj3,paramObj4,paramObj5,paramObj6,paramObj7,paramObj8,paramObj9,paramObj10,paramObj11,paramObj12,paramObj13,paramObj14,paramObj15,paramObj16,paramObj17,paramObj18,paramObj19});
    Object returnObj=null;
    try {
      returnObj=TunnelUtil.invoke(httpPrincipal,methodWrapper);
    }
 catch (    Exception e) {
      if (e instanceof com.liferay.portal.SystemException) {
        throw (com.liferay.portal.SystemException)e;
      }
      if (e instanceof com.liferay.portal.PortalException) {
        throw (com.liferay.portal.PortalException)e;
      }
      throw new com.liferay.portal.SystemException(e);
    }
    return (com.liferay.portal.model.PasswordPolicy)returnObj;
  }
 catch (  com.liferay.portal.SystemException se) {
    _log.error(se,se);
    throw se;
  }
}

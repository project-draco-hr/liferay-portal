{
  if (!propertiesFile.exists()) {
    return null;
  }
  String content=FileUtil.read(propertiesFile);
  UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new UnsyncStringReader(content));
  UnsyncBufferedWriter unsyncBufferedWriter=new UnsyncBufferedWriter(new FileWriter(propertiesFile));
  Set<String> messages=new TreeSet<String>();
  boolean begin=false;
  String line=null;
  while ((line=unsyncBufferedReader.readLine()) != null) {
    int pos=line.indexOf("=");
    if (pos != -1) {
      String key=line.substring(0,pos);
      String value=_fixText(line.substring(pos + 1,line.length()));
      if (_portalLanguageProperties != null) {
        String portalValue=String.valueOf(_portalLanguageProperties.get(key));
        if (value.equals(portalValue)) {
          System.out.println("Duplicate key " + key);
        }
      }
      messages.add(key + "=" + value);
    }
 else {
      if (begin == true && line.equals("")) {
        _sortAndWrite(unsyncBufferedWriter,messages);
      }
      if (line.equals("")) {
        begin=!begin;
      }
      unsyncBufferedWriter.write(line);
      unsyncBufferedWriter.newLine();
    }
    unsyncBufferedWriter.flush();
  }
  if (messages.size() > 0) {
    _sortAndWrite(unsyncBufferedWriter,messages);
  }
  unsyncBufferedReader.close();
  unsyncBufferedWriter.close();
  return FileUtil.read(propertiesFile);
}

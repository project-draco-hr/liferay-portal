{
  long backgroundTaskId=(Long)message.get("backgroundTaskId");
  BackgroundTaskThreadLocal.setBackgroundTaskId(backgroundTaskId);
  ServiceContext serviceContext=new ServiceContext();
  BackgroundTask backgroundTask=_backgroundTaskManager.amendBackgroundTask(backgroundTaskId,null,BackgroundTaskConstants.STATUS_IN_PROGRESS,serviceContext);
  if (backgroundTask == null) {
    return;
  }
  BackgroundTaskExecutor backgroundTaskExecutor=null;
  BackgroundTaskStatusMessageListener backgroundTaskStatusMessageListener=null;
  int status=backgroundTask.getStatus();
  String statusMessage=null;
  try {
    ClassLoader classLoader=getBackgroundTaskExecutorClassLoader(backgroundTask);
    backgroundTaskExecutor=wrapBackgroundTaskExecutor(backgroundTask,classLoader);
    _backgroundTaskStatusRegistry.registerBackgroundTaskStatus(backgroundTaskId);
    BackgroundTaskStatusMessageTranslator backgroundTaskStatusMessageTranslator=backgroundTaskExecutor.getBackgroundTaskStatusMessageTranslator();
    if (backgroundTaskStatusMessageTranslator != null) {
      backgroundTaskStatusMessageListener=new BackgroundTaskStatusMessageListener(backgroundTaskId,backgroundTaskStatusMessageTranslator,_backgroundTaskStatusRegistry);
      _messageBus.registerMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,backgroundTaskStatusMessageListener);
    }
    backgroundTask=_backgroundTaskManager.fetchBackgroundTask(backgroundTask.getBackgroundTaskId());
    BackgroundTaskResult backgroundTaskResult=backgroundTaskExecutor.execute(backgroundTask);
    status=backgroundTaskResult.getStatus();
    statusMessage=backgroundTaskResult.getStatusMessage();
  }
 catch (  DuplicateLockException dle) {
    status=BackgroundTaskConstants.STATUS_QUEUED;
  }
catch (  Exception e) {
    status=BackgroundTaskConstants.STATUS_FAILED;
    if (e instanceof SystemException) {
      Throwable cause=e.getCause();
      if (cause instanceof Exception) {
        e=(Exception)cause;
      }
    }
    if (backgroundTaskExecutor != null) {
      statusMessage=backgroundTaskExecutor.handleException(backgroundTask,e);
    }
    if (_log.isInfoEnabled()) {
      if (statusMessage != null) {
        statusMessage=statusMessage.concat(StackTraceUtil.getStackTrace(e));
      }
 else {
        statusMessage=StackTraceUtil.getStackTrace(e);
      }
    }
    _log.error("Unable to execute background task",e);
  }
 finally {
    _backgroundTaskManager.amendBackgroundTask(backgroundTaskId,null,status,statusMessage,serviceContext);
    _backgroundTaskStatusRegistry.unregisterBackgroundTaskStatus(backgroundTaskId);
    if (backgroundTaskStatusMessageListener != null) {
      _messageBus.unregisterMessageListener(DestinationNames.BACKGROUND_TASK_STATUS,backgroundTaskStatusMessageListener);
    }
    Message responseMessage=new Message();
    responseMessage.put("backgroundTaskId",backgroundTask.getBackgroundTaskId());
    responseMessage.put("name",backgroundTask.getName());
    responseMessage.put("status",status);
    responseMessage.put("taskExecutorClassName",backgroundTask.getTaskExecutorClassName());
    _messageBus.sendMessage(DestinationNames.BACKGROUND_TASK_STATUS,responseMessage);
  }
}

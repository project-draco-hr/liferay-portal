{
  JSONFactoryUtil jsonFactoryUtil=new JSONFactoryUtil();
  jsonFactoryUtil.setJSONFactory(new JSONFactoryImpl());
  Thread currentThread=Thread.currentThread();
  ClassLoader currentClassLoader=currentThread.getContextClassLoader();
  PortalClassLoaderUtil.setClassLoader(currentClassLoader);
  PortalUUIDUtil portalUUIDUtil=new PortalUUIDUtil();
  portalUUIDUtil.setPortalUUID(new PortalUUIDImpl());
  PropsUtil.setProps(new PropsImpl());
  ClassLoaderPool.register(_TEST_PORTLET_ID,currentClassLoader);
  MessageBusUtil.init(new DefaultMessageBus(),null,null);
  _testDestination=new SynchronousDestination();
  _testDestination.setName(_TEST_DESTINATION_NAME);
  MessageBusUtil.addDestination(_testDestination);
  _quartzSchedulerEngine=new QuartzSchedulerEngine();
  _memorySchedulerField=ReflectionUtil.getDeclaredField(QuartzSchedulerEngine.class,"_memoryScheduler");
  _memorySchedulerField.set(_quartzSchedulerEngine,new MockScheduler(StorageType.MEMORY));
  _persistedSchedulerField=ReflectionUtil.getDeclaredField(QuartzSchedulerEngine.class,"_persistedScheduler");
  _persistedSchedulerField.set(_quartzSchedulerEngine,new MockScheduler(StorageType.PERSISTED));
  _quartzSchedulerEngine.start();
}

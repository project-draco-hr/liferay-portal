{
  List<SchedulerResponse> schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  Assert.assertEquals(_DEFAULT_JOB_NUMBER,schedulerResponses.size());
  _quartzSchedulerEngine.unschedule(_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  Assert.assertTrue(schedulerResponses.isEmpty());
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  for (  SchedulerResponse schedulerResponse : schedulerResponses) {
    _assertTriggerState(schedulerResponse,TriggerState.NORMAL);
  }
  _quartzSchedulerEngine.unschedule(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs(_PERSISTED_TEST_GROUP_NAME,StorageType.PERSISTED);
  for (  SchedulerResponse schedulerResponse : schedulerResponses) {
    _assertTriggerState(schedulerResponse,TriggerState.UNSCHEDULED);
  }
}

{
  List<SchedulerResponse> schedulerResponses=_quartzSchedulerEngine.getScheduledJobs();
  String testJobName=_TEST_JOB_NAME_PREFIX + "memory";
  Assert.assertEquals(2 * _DEFAULT_JOB_NUMBER,schedulerResponses.size());
  Assert.assertEquals(0,_testDestination.getMessageListenerCount());
  Trigger trigger=new IntervalTrigger(testJobName,_MEMORY_TEST_GROUP_NAME,_DEFAULT_INTERVAL);
  Message message=new Message();
  message.put(SchedulerEngine.MESSAGE_LISTENER_CLASS_NAME,TestMessageListener.class.getName());
  _quartzSchedulerEngine.schedule(trigger,StringPool.BLANK,_TEST_DESTINATION_NAME,message,StorageType.MEMORY);
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs();
  Assert.assertEquals(2 * _DEFAULT_JOB_NUMBER + 1,schedulerResponses.size());
  Assert.assertEquals(1,_testDestination.getMessageListenerCount());
  _quartzSchedulerEngine.delete(testJobName,_MEMORY_TEST_GROUP_NAME,StorageType.MEMORY);
  schedulerResponses=_quartzSchedulerEngine.getScheduledJobs();
  Assert.assertEquals(2 * _DEFAULT_JOB_NUMBER,schedulerResponses.size());
  Assert.assertEquals(0,_testDestination.getMessageListenerCount());
}

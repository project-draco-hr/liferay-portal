{
  assertCode(HttpServletResponse.SC_CREATED,service(Method.MKCOL,"ccsrc",null,null));
  for (int i=0; i < 10; i++) {
    assertCode(HttpServletResponse.SC_CREATED,servicePut("ccsrc/foo." + i,_TEST_CONTENT.getBytes()));
  }
  assertCode(HttpServletResponse.SC_CREATED,service(Method.MKCOL,"ccsrc/subcoll",null,null));
  assertCode(HttpServletResponse.SC_CREATED,serviceCopyOrMove(Method.COPY,"ccsrc",null,"ccdest",-1,false));
  assertCode(HttpServletResponse.SC_CREATED,serviceCopyOrMove(Method.COPY,"ccsrc",null,"ccdest2",-1,false));
  assertCode(HttpServletResponse.SC_PRECONDITION_FAILED,serviceCopyOrMove(Method.COPY,"ccsrc",null,"ccdest2",-1,false));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceCopyOrMove(Method.COPY,"ccsrc",null,"ccdest",-1,true));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("ccsrc"));
  for (int i=0; i < 10; i++) {
    assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("ccdest/foo." + i));
  }
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("ccdest/subcoll"));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("ccdest"));
  assertCode(HttpServletResponse.SC_NO_CONTENT,serviceDelete("ccdest2"));
}

{
  User user=userPersistence.findByPrimaryKey(userId);
  long groupId=PortalUtil.getPortletGroupId(plid);
  categoryId=getCategoryId(user.getCompanyId(),categoryId);
  Date now=new Date();
  Date displayDate=PortalUtil.getDate(displayDateMonth,displayDateDay,displayDateYear,displayDateHour,displayDateMinute,user.getTimeZone(),new EntryDisplayDateException());
  validate(title,content);
  long entryId=counterLocalService.increment();
  BlogsEntry entry=blogsEntryPersistence.create(entryId);
  entry.setUuid(uuid);
  entry.setGroupId(groupId);
  entry.setCompanyId(user.getCompanyId());
  entry.setUserId(user.getUserId());
  entry.setUserName(user.getFullName());
  entry.setCreateDate(now);
  entry.setModifiedDate(now);
  entry.setCategoryId(categoryId);
  entry.setTitle(title);
  entry.setUrlTitle(getUniqueUrlTitle(entryId,groupId,title));
  entry.setContent(content);
  entry.setDisplayDate(displayDate);
  blogsEntryPersistence.update(entry);
  if ((addCommunityPermissions != null) && (addGuestPermissions != null)) {
    addEntryResources(entry,addCommunityPermissions.booleanValue(),addGuestPermissions.booleanValue());
  }
 else {
    addEntryResources(entry,communityPermissions,guestPermissions);
  }
  blogsStatsUserLocalService.updateStatsUser(entry.getGroupId(),userId,now);
  updateTagsAsset(userId,entry,tagsEntries);
  try {
    Indexer.addEntry(entry.getCompanyId(),entry.getGroupId(),userId,categoryId,entryId,title,content,tagsEntries);
  }
 catch (  IOException ioe) {
    _log.error("Indexing " + entryId,ioe);
  }
  pingGoogle(entry,themeDisplay);
  return entry;
}

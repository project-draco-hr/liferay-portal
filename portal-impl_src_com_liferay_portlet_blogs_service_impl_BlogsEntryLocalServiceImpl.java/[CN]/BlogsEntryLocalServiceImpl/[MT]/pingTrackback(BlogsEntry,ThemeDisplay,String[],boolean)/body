{
  Map<String,String> parts=new HashMap();
  String excerpt=StringUtil.shorten(HtmlUtil.extractText(entry.getContent()),_TRACKBACK_EXCERPT_LENGTH);
  String url=themeDisplay.getPortalURL() + PortalUtil.getLayoutURL(themeDisplay) + "/-/blogs/"+ entry.getUrlTitle();
  parts.put("title",entry.getTitle());
  parts.put("excerpt",excerpt);
  parts.put("url",url);
  parts.put("blog_name",entry.getUserName());
  List<String> trackbackUrlsList=null;
  if (Validator.isNotNull(trackbackUrls)) {
    trackbackUrlsList=ListUtil.fromArray(trackbackUrls);
  }
 else {
    trackbackUrlsList=new ArrayList();
  }
  if (pingOldTrackbacks) {
    trackbackUrlsList.addAll(ListUtil.fromArray(StringUtil.split(entry.getTrackbackUrls())));
    entry.setTrackbackUrls(StringPool.BLANK);
  }
  ListUtil.distinct(trackbackUrlsList);
  List oldTrackbackUrls=ListUtil.fromArray(StringUtil.split(entry.getTrackbackUrls()));
  List validTrackbackUrls=new ArrayList();
  XMLInputFactory inputFactory=XMLInputFactory.newInstance();
  for (  String trackbackUrl : trackbackUrlsList) {
    if (oldTrackbackUrls.contains(trackbackUrl)) {
      continue;
    }
    try {
      String xml=HttpUtil.URLtoString(trackbackUrl,null,parts,true);
      if (_log.isDebugEnabled()) {
        _log.debug("XML for " + trackbackUrl + " is \n"+ xml);
      }
      XMLStreamReader reader=inputFactory.createXMLStreamReader(new StringReader(xml));
      String errorStr=xml;
      try {
        reader.nextTag();
        reader.nextTag();
        String name=reader.getLocalName();
        if (name.equals("error")) {
          int status=GetterUtil.getInteger(reader.getElementText(),1);
          if (status == 0) {
            validTrackbackUrls.add(trackbackUrl);
            continue;
          }
          reader.nextTag();
          name=reader.getLocalName();
          if (name.equals("message")) {
            errorStr=reader.getElementText();
          }
        }
      }
  finally {
        if (reader != null) {
          try {
            reader.close();
          }
 catch (          Exception e) {
          }
        }
      }
      _log.error("Error while pinging trackback at " + trackbackUrl + "\n"+ errorStr);
    }
 catch (    Exception e) {
      _log.error("Error while pinging trackback at " + trackbackUrl,e);
    }
  }
  if (!validTrackbackUrls.isEmpty()) {
    String newTrackbackUrls=StringUtil.merge(validTrackbackUrls);
    if (Validator.isNotNull(entry.getTrackbackUrls())) {
      newTrackbackUrls+=StringPool.COMMA + entry.getTrackbackUrls();
    }
    entry.setTrackbackUrls(newTrackbackUrls);
    blogsEntryPersistence.update(entry,false);
  }
}

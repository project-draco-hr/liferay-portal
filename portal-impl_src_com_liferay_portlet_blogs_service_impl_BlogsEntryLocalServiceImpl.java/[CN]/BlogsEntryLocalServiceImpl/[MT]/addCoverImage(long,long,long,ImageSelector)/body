{
  FileEntry fileEntry=PortletFileRepositoryUtil.getPortletFileEntry(coverImageImageSelector.getImageId());
  BlogsEntryAttachmentFileEntryHelper blogsEntryAttachmentFileEntryHelper=new BlogsEntryAttachmentFileEntryHelper();
  if (fileEntry.isRepositoryCapabilityProvided(TemporaryFileEntriesCapability.class)) {
    Folder folder=addAttachmentsFolder(userId,groupId);
    blogsEntryAttachmentFileEntryHelper.addBlogsEntryAttachmentFileEntry(groupId,userId,entryId,folder.getFolderId(),fileEntry.getTitle(),fileEntry.getMimeType(),fileEntry.getContentStream());
  }
  File file=null;
  try {
    byte[] bytes=coverImageImageSelector.getCroppedImageBytes();
    if (bytes == null) {
      return 0;
    }
    file=FileUtil.createTempFile(bytes);
    String title=coverImageImageSelector.getTitle();
    if (Validator.isNull(title)) {
      title=StringUtil.randomString() + "_tempCroppedImage_" + entryId;
    }
    Folder folder=addCoverImageFolder(userId,groupId);
    FileEntry coverImageFileEntry=blogsEntryAttachmentFileEntryHelper.addBlogsEntryAttachmentFileEntry(groupId,userId,entryId,folder.getFolderId(),title,coverImageImageSelector.getMimeType(),file);
    return coverImageFileEntry.getFileEntryId();
  }
 catch (  IOException ioe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to get cropped image from image selector image " + coverImageImageSelector.getImageId());
    }
  }
 finally {
    FileUtil.delete(file);
  }
  return 0;
}

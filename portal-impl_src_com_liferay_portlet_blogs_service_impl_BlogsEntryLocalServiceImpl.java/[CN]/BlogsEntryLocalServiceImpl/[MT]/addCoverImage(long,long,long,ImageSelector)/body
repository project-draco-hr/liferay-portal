{
  long coverImageId=0;
  byte[] bytes=null;
  try {
    bytes=coverImageImageSelector.getCroppedImageBytes();
  }
 catch (  IOException ioe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to get cropped image from image selector image " + coverImageImageSelector.getImageId());
    }
  }
  if (bytes == null) {
    return coverImageId;
  }
  File file=null;
  try {
    file=FileUtil.createTempFile(bytes);
    String title=coverImageImageSelector.getTitle();
    String mimeType=coverImageImageSelector.getMimeType();
    if (Validator.isNull(title)) {
      title=StringUtil.randomString() + "_tempCroppedImage_" + entryId;
    }
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddGroupPermissions(true);
    serviceContext.setAddGuestPermissions(true);
    Folder folder=addAttachmentsFolder(userId,groupId);
    FileEntry fileEntry=PortletFileRepositoryUtil.addPortletFileEntry(groupId,userId,BlogsEntry.class.getName(),entryId,PortletKeys.BLOGS,folder.getFolderId(),file,title,mimeType,false);
    coverImageId=fileEntry.getFileEntryId();
    PortletFileRepositoryUtil.deletePortletFileEntry(coverImageImageSelector.getImageId());
  }
 catch (  IOException ioe) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to get cropped image from image selector image " + coverImageImageSelector.getImageId());
    }
  }
 finally {
    FileUtil.delete(file);
  }
  return coverImageId;
}

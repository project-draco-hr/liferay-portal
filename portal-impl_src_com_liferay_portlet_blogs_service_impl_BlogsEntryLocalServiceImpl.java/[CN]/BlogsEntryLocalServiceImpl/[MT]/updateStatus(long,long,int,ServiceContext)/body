{
  User user=userPersistence.findByPrimaryKey(userId);
  Date now=new Date();
  BlogsEntry entry=blogsEntryPersistence.findByPrimaryKey(entryId);
  int oldStatus=entry.getStatus();
  entry.setModifiedDate(serviceContext.getModifiedDate(now));
  entry.setStatus(status);
  entry.setStatusByUserId(user.getUserId());
  entry.setStatusByUserName(user.getFullName());
  entry.setStatusDate(serviceContext.getModifiedDate(now));
  blogsEntryPersistence.update(entry,false);
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(BlogsEntry.class);
  if (status == WorkflowConstants.STATUS_APPROVED) {
    blogsStatsUserLocalService.updateStatsUser(entry.getGroupId(),user.getUserId(),entry.getDisplayDate());
    if (oldStatus != WorkflowConstants.STATUS_APPROVED) {
      assetEntryLocalService.updateVisible(BlogsEntry.class.getName(),entryId,true);
      if (oldStatus != WorkflowConstants.STATUS_IN_TRASH) {
        boolean update=ParamUtil.getBoolean(serviceContext,"update");
        if (update) {
          socialActivityLocalService.addActivity(user.getUserId(),entry.getGroupId(),BlogsEntry.class.getName(),entryId,BlogsActivityKeys.UPDATE_ENTRY,StringPool.BLANK,0);
        }
 else {
          socialActivityLocalService.addUniqueActivity(user.getUserId(),entry.getGroupId(),BlogsEntry.class.getName(),entryId,BlogsActivityKeys.ADD_ENTRY,StringPool.BLANK,0);
        }
      }
    }
    indexer.reindex(entry);
    if (oldStatus != WorkflowConstants.STATUS_IN_TRASH) {
      notifySubscribers(entry,serviceContext);
      String[] trackbacks=(String[])serviceContext.getAttribute("trackbacks");
      Boolean pingOldTrackbacks=ParamUtil.getBoolean(serviceContext,"pingOldTrackbacks");
      pingGoogle(entry,serviceContext);
      pingPingback(entry,serviceContext);
      pingTrackbacks(entry,trackbacks,pingOldTrackbacks,serviceContext);
    }
  }
 else {
    if (status == WorkflowConstants.STATUS_IN_TRASH) {
      assetEntryLocalService.moveEntryToTrash(BlogsEntry.class.getName(),entryId);
    }
 else {
      assetEntryLocalService.updateVisible(BlogsEntry.class.getName(),entryId,false);
    }
    indexer.delete(entry);
  }
  return entry;
}

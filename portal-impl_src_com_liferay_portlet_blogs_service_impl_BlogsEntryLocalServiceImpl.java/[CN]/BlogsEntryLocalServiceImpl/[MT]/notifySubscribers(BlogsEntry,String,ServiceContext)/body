{
  if (!entry.isApproved() || Validator.isNull(entryURL)) {
    return;
  }
  BlogsSettings blogsSettings=BlogsSettings.getInstance(entry.getGroupId());
  if (serviceContext.isCommandAdd() && blogsSettings.isEmailEntryAddedEnabled()) {
  }
 else   if (serviceContext.isCommandUpdate() && blogsSettings.isEmailEntryUpdatedEnabled()) {
  }
 else {
    return;
  }
  String entryTitle=entry.getTitle();
  String fromName=blogsSettings.getEmailFromName();
  String fromAddress=blogsSettings.getEmailFromAddress();
  LocalizedValuesMap subjectLocalizedValuesMap=null;
  LocalizedValuesMap bodyLocalizedValuesMap=null;
  if (serviceContext.isCommandUpdate()) {
    subjectLocalizedValuesMap=blogsSettings.getEmailEntryUpdatedSubject();
    bodyLocalizedValuesMap=blogsSettings.getEmailEntryUpdatedBody();
  }
 else {
    subjectLocalizedValuesMap=blogsSettings.getEmailEntryAddedSubject();
    bodyLocalizedValuesMap=blogsSettings.getEmailEntryAddedBody();
  }
  SubscriptionSender subscriptionSender=new SubscriptionSender();
  subscriptionSender.setClassPK(entry.getEntryId());
  subscriptionSender.setClassName(entry.getModelClassName());
  subscriptionSender.setCompanyId(entry.getCompanyId());
  subscriptionSender.setContextAttribute("[$BLOGS_ENTRY_CONTENT$]",StringUtil.shorten(HtmlUtil.stripHtml(entry.getContent()),500),false);
  User user=userPersistence.findByPrimaryKey(entry.getUserId());
  subscriptionSender.setContextAttributes("[$BLOGS_ENTRY_CREATE_DATE$]",Time.getSimpleDate(entry.getCreateDate(),"yyyy/MM/dd"),"[$BLOGS_ENTRY_DESCRIPTION$]",entry.getDescription(),"[$BLOGS_ENTRY_SITE_NAME$]",groupLocalService.getGroupDescriptiveName(entry.getGroupId(),serviceContext.getLocale()),"[$BLOGS_ENTRY_STATUS_BY_USER_NAME$]",entry.getStatusByUserName(),"[$BLOGS_ENTRY_TITLE$]",entryTitle,"[$BLOGS_ENTRY_URL$]",entryURL,"[$BLOGS_ENTRY_USER_PORTRAIT_URL$]",user.getPortraitURL(serviceContext.getThemeDisplay()),"[$BLOGS_ENTRY_USER_URL$]",user.getDisplayURL(serviceContext.getThemeDisplay()));
  subscriptionSender.setContextUserPrefix("BLOGS_ENTRY");
  subscriptionSender.setEntryTitle(entryTitle);
  subscriptionSender.setEntryURL(entryURL);
  subscriptionSender.setFrom(fromAddress,fromName);
  subscriptionSender.setHtmlFormat(true);
  subscriptionSender.setLocalizedBodyMap(bodyLocalizedValuesMap);
  subscriptionSender.setLocalizedSubjectMap(subjectLocalizedValuesMap);
  subscriptionSender.setMailId("blogs_entry",entry.getEntryId());
  int notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_ADD_ENTRY;
  if (serviceContext.isCommandUpdate()) {
    notificationType=UserNotificationDefinition.NOTIFICATION_TYPE_UPDATE_ENTRY;
  }
  subscriptionSender.setNotificationType(notificationType);
  subscriptionSender.setPortletId(PortletKeys.BLOGS);
  subscriptionSender.setReplyToAddress(fromAddress);
  subscriptionSender.setScopeGroupId(entry.getGroupId());
  subscriptionSender.setServiceContext(serviceContext);
  subscriptionSender.setUserId(entry.getUserId());
  subscriptionSender.addPersistedSubscribers(BlogsEntry.class.getName(),entry.getGroupId());
  subscriptionSender.addPersistedSubscribers(BlogsEntry.class.getName(),entry.getEntryId());
  subscriptionSender.flushNotificationsAsync();
}

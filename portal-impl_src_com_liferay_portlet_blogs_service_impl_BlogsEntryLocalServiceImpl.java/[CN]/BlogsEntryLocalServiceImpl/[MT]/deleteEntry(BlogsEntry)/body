{
  blogsEntryPersistence.remove(entry);
  resourceLocalService.deleteResource(entry.getCompanyId(),BlogsEntry.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,entry.getEntryId());
  imageLocalService.deleteImage(entry.getSmallImageId());
  long folderId=entry.getAttachmentsFolderId();
  if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
    PortletFileRepositoryUtil.deletePortletFolder(folderId);
  }
  subscriptionLocalService.deleteSubscriptions(entry.getCompanyId(),BlogsEntry.class.getName(),entry.getEntryId());
  blogsStatsUserLocalService.updateStatsUser(entry.getGroupId(),entry.getUserId(),entry.getDisplayDate());
  assetEntryLocalService.deleteEntry(BlogsEntry.class.getName(),entry.getEntryId());
  deleteDiscussion(entry);
  expandoRowLocalService.deleteRows(entry.getEntryId());
  ratingsStatsLocalService.deleteStats(BlogsEntry.class.getName(),entry.getEntryId());
  trashEntryLocalService.deleteEntry(BlogsEntry.class.getName(),entry.getEntryId());
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(BlogsEntry.class);
  indexer.delete(entry);
  workflowInstanceLinkLocalService.deleteWorkflowInstanceLinks(entry.getCompanyId(),entry.getGroupId(),BlogsEntry.class.getName(),entry.getEntryId());
  return entry;
}

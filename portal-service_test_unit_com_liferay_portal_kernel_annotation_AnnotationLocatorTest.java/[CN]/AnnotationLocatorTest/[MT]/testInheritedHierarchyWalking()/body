{
  List<Class<?>> expectedClassHierarchy=Arrays.asList(TestClass.class,SuperClass.class,TestInterface2.class,TestInterface1.class,OriginClass.class,SuperInterface2.class,SuperInterface1.class,OriginInterface2.class,OriginInterface1.class);
  List<Class<?>> actualClassHierarchy=new ArrayList<Class<?>>();
  Queue<Class<?>> queue=new LinkedList<Class<?>>();
  queue.offer(TestClass.class);
  Class<?> clazz=null;
  while ((clazz=queue.poll()) != null) {
    actualClassHierarchy.add(clazz);
    _queueSuperTypesMethod.invoke(null,queue,clazz);
  }
  Assert.assertEquals(expectedClassHierarchy,actualClassHierarchy);
}

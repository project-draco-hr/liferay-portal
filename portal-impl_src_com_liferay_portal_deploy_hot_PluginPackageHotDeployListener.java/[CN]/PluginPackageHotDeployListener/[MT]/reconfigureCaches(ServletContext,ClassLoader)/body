{
  Configuration portletPropertiesConfiguration=null;
  try {
    portletPropertiesConfiguration=ConfigurationFactoryUtil.getConfiguration(classLoader,"portlet");
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug("Unable to read portlet.properties");
    }
    return;
  }
  Registry registry=RegistryUtil.getRegistry();
  ServiceRegistrar<PortalCacheConfiguratorSettings> serviceRegistrar=registry.getServiceRegistrar(PortalCacheConfiguratorSettings.class);
  Map<String,Object> properties=new HashMap<>();
  properties.put("portal.cache.manager.name",PortalCacheManagerNames.SINGLE_VM);
  PortalCacheConfiguratorSettings singleVMPortalCacheConfigurationSettings=new PortalCacheConfiguratorSettings(classLoader,portletPropertiesConfiguration.get(PropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION));
  serviceRegistrar.registerService(PortalCacheConfiguratorSettings.class,singleVMPortalCacheConfigurationSettings,properties);
  properties=new HashMap<>();
  properties.put("portal.cache.manager.name",PortalCacheManagerNames.MULTI_VM);
  PortalCacheConfiguratorSettings multiVMPortalCacheConfiguratorSettings=new PortalCacheConfiguratorSettings(classLoader,portletPropertiesConfiguration.get(PropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION));
  serviceRegistrar.registerService(PortalCacheConfiguratorSettings.class,multiVMPortalCacheConfiguratorSettings,properties);
  servletContext.setAttribute(_PORTAL_CACHE_CONFIGURATOR_SETTINGS_SERVICE_REGISTAR,serviceRegistrar);
}

{
  PluginPackage pluginPackage=null;
  String servletContextName=servletContext.getServletContextName();
  String xml=HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-plugin-package.xml"));
  if (_log.isInfoEnabled()) {
    if (servletContextName == null) {
      _log.info("Reading plugin package for the root context");
    }
 else {
      _log.info("Reading plugin package for " + servletContextName);
    }
  }
  if (xml == null) {
    String propertiesString=HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-plugin-package.properties"));
    if (propertiesString == null) {
      if (_log.isDebugEnabled()) {
        _log.debug("Reading plugin package from MANIFEST.MF");
      }
      Attributes attributes=null;
      InputStream is=servletContext.getResourceAsStream("/META-INF/MANIFEST.MF");
      if (is != null) {
        Manifest manifest=new Manifest(is);
        attributes=manifest.getMainAttributes();
      }
 else {
        attributes=new Attributes();
      }
      String artifactGroupId=attributes.getValue("Implementation-Vendor-Id");
      if (Validator.isNull(artifactGroupId)) {
        artifactGroupId=attributes.getValue("Implementation-Vendor");
      }
      if (Validator.isNull(artifactGroupId)) {
        artifactGroupId=GetterUtil.getString(attributes.getValue("Bundle-Vendor"),servletContextName);
      }
      String artifactId=attributes.getValue("Implementation-Title");
      if (Validator.isNull(artifactId)) {
        artifactId=GetterUtil.getString(attributes.getValue("Bundle-Name"),servletContextName);
      }
      String version=attributes.getValue("Implementation-Version");
      if (Validator.isNull(version)) {
        version=GetterUtil.getString(attributes.getValue("Bundle-Version"),Version.UNKNOWN);
      }
      if (version.equals(Version.UNKNOWN) && _log.isWarnEnabled()) {
        _log.warn("Plugin package on context " + servletContextName + " cannot be tracked because this WAR does not "+ "contain a liferay-plugin-package.xml file");
      }
      pluginPackage=new PluginPackageImpl(artifactGroupId + StringPool.SLASH + artifactId+ StringPool.SLASH+ version+ StringPool.SLASH+ "war");
      pluginPackage.setName(artifactId);
      String shortDescription=attributes.getValue("Bundle-Description");
      if (Validator.isNotNull(shortDescription)) {
        pluginPackage.setShortDescription(shortDescription);
      }
      String pageURL=attributes.getValue("Bundle-DocURL");
      if (Validator.isNotNull(pageURL)) {
        pluginPackage.setPageURL(pageURL);
      }
    }
 else {
      if (_log.isDebugEnabled()) {
        _log.debug("Reading plugin package from " + "liferay-plugin-package.properties");
      }
      Properties properties=PropertiesUtil.load(propertiesString);
      String displayName=servletContextName.substring(1);
      pluginPackage=PluginPackageUtil.readPluginPackageProperties(displayName,properties);
    }
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Reading plugin package from liferay-plugin-package.xml");
    }
    pluginPackage=PluginPackageUtil.readPluginPackageXml(xml);
  }
  pluginPackage.setContext(servletContextName);
  return pluginPackage;
}

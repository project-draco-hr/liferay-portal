{
  DDMForm ddmForm=new DDMForm();
  ddmForm.addDDMFormField(createDDMFormField("field0","text",FieldConstants.DOUBLE));
  DDMFormValues ddmFormValues=new DDMFormValues(ddmForm);
  ddmFormValues.addDDMFormFieldValue(DDMFormValuesTestUtil.createDDMFormFieldValue("field0_instanceId","field0",new UnlocalizedValue("5")));
  String condition="getValue(\"field0\") <= 10";
  String action="setInvalid(\"field0\", \"The value should be greater than 10.\")";
  DDMFormRule ddmFormRule=new DDMFormRule(condition,Arrays.asList(action));
  ddmForm.addDDMFormRule(ddmFormRule);
  DDMFormEvaluatorHelper ddmFormEvaluatorHelper=new DDMFormEvaluatorHelper(null,null,_ddmExpressionFactory,ddmForm,ddmFormValues,null,_jsonFactory,LocaleUtil.US);
  DDMFormEvaluationResult ddmFormEvaluationResult=ddmFormEvaluatorHelper.evaluate();
  Map<String,DDMFormFieldEvaluationResult> ddmFormFieldEvaluationResultMap=ddmFormEvaluationResult.getDDMFormFieldEvaluationResultsMap();
  Assert.assertEquals(1,ddmFormFieldEvaluationResultMap.size());
  DDMFormFieldEvaluationResult actualDDMFormFieldEvaluationResult=ddmFormEvaluationResult.geDDMFormFieldEvaluationResult("field0","field0_instanceId");
  Assert.assertEquals("The value should be greater than 10.",actualDDMFormFieldEvaluationResult.getErrorMessage());
  Assert.assertEquals(false,actualDDMFormFieldEvaluationResult.isValid());
}

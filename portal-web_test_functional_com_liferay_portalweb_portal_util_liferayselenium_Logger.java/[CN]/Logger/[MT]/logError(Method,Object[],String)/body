{
  send("","fail");
  StringBundler sb=new StringBundler();
  sb.append("<font color=\"red\">");
  sb.append("Command failure <b>");
  sb.append(method.getName());
  sb.append("</b>");
  if (arguments != null) {
    if (arguments.length == 1) {
      sb.append(" with parameter ");
    }
 else     if (arguments.length > 1) {
      sb.append(" with parameters ");
    }
    for (    Object argument : arguments) {
      sb.append("<b>");
      sb.append(String.valueOf(argument));
      sb.append("</b> ");
    }
  }
  sb.append("- ");
  Pattern pattern=Pattern.compile("Pattern (.*) does not match (.*) at (//.*)");
  Matcher matcher=pattern.matcher(message);
  if (matcher.find()) {
    System.out.println(matcher.group(1));
    System.out.println(matcher.group(2));
    System.out.println(matcher.group(3));
    sb.append("Expected string '<b>");
    sb.append(matcher.group(1));
    sb.append("</b>' did not match actual string '<b>");
    sb.append(matcher.group(2));
    sb.append("</b>' at xpath '<b>");
    sb.append(matcher.group(3));
    sb.append("</b>'.");
  }
 else {
    sb.append(message);
  }
  log(sb.toString());
  sb=new StringBundler();
  sb.append("Command failure ");
  sb.append(method.getName());
  if (arguments != null) {
    if (arguments.length == 1) {
      sb.append(" with parameter ");
    }
 else     if (arguments.length > 1) {
      sb.append(" with parameters ");
    }
    for (    Object argument : arguments) {
      sb.append(String.valueOf(argument));
      sb.append(" ");
    }
  }
  sb.append("- " + message);
  BaseTestCase.fail(sb.toString());
}

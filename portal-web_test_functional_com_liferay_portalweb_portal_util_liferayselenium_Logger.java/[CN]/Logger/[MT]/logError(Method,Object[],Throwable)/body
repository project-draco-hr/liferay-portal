{
  send("","fail");
  _errorCount++;
  String thowableMessage=throwable.getMessage();
  StringBundler sb=new StringBundler();
  sb.append("errorCount = window.document.getElementById('errorCount');");
  sb.append("errorCount.innerHTML = '");
  sb.append(_errorCount);
  sb.append("';");
  sb.append("errorList = window.document.getElementById('errorList');");
  sb.append("var newLine = window.document.createElement('div');");
  sb.append("newLine.innerHTML = '");
  String stackTrace=generateStackTrace(throwable);
  stackTrace=StringEscapeUtils.escapeEcmaScript(stackTrace);
  stackTrace=StringUtil.replace(stackTrace,"\\\\n","\\n");
  stackTrace=StringUtil.replace(stackTrace,"\\\\t","\\t");
  sb.append(stackTrace);
  sb.append("';");
  sb.append("errorList.appendChild(newLine);");
  _javascriptExecutor.executeScript(sb.toString());
  sb=new StringBundler();
  sb.append("<font color=\"red\">");
  sb.append("Command failure <b>");
  sb.append(method.getName());
  sb.append("</b>");
  if (arguments != null) {
    if (arguments.length == 1) {
      sb.append(" with parameter ");
    }
 else     if (arguments.length > 1) {
      sb.append(" with parameters ");
    }
    for (    Object argument : arguments) {
      sb.append("<b>");
      sb.append(String.valueOf(argument));
      sb.append("</b> ");
    }
  }
  sb.append(": ");
  sb.append(thowableMessage);
  log("actionCommandLog",sb.toString(),"selenium");
  _screenshotErrorCount++;
  sb=new StringBundler();
  sb.append("<h3>Screenshot of action before failure</h3>");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("<img alt=\"");
  sb.append(_screenshotCount);
  sb.append("\" height=\"450\" src=\"screenshots/");
  sb.append("actionBeforeFailure");
  sb.append(_screenshotErrorCount - 1);
  sb.append(".jpg\" width=\"630\" />");
  sb.append("<br />");
  log("errorLog",sb.toString(),"errorLog");
  _liferaySelenium.saveScreenshot();
  _screenshotCount++;
  sb=new StringBundler();
  sb.append("<h3>Screenshot of action after failure</h3>");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
  sb.append("<img alt=\"");
  sb.append(_screenshotCount);
  sb.append("\" height=\"450\" src=\"screenshots/");
  sb.append(_screenshotCount);
  sb.append(".jpg\" width=\"630\" />");
  sb.append("<br />");
  log("descriptionLog",sb.toString(),"descriptionLog");
  log("errorLog",sb.toString(),"errorLog");
  WebElement webElement=_webDriver.findElement(By.id("pauseError"));
  String webElementText=webElement.getText();
  while (webElementText.equals("Disable Pause After Error")) {
    webElement=_webDriver.findElement(By.id("pauseError"));
    webElementText=webElement.getText();
    Thread.sleep(1000);
  }
  sb=new StringBundler();
  sb.append("Command failure \"");
  sb.append(method.getName());
  sb.append("\"");
  if (arguments != null) {
    if (arguments.length == 1) {
      sb.append(" with parameter ");
    }
 else     if (arguments.length > 1) {
      sb.append(" with parameters ");
    }
    for (    Object argument : arguments) {
      sb.append("\"");
      sb.append(String.valueOf(argument));
      sb.append("\" ");
    }
  }
  sb.append(": ");
  sb.append(thowableMessage);
  BaseTestCase.fail(sb.toString());
}

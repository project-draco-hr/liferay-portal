{
  SocialActivityCounterLocalServiceUtil.addActivityCounters(SocialActivityTestUtil.addActivity(_creatorUser,_group,_assetEntry,1));
  SocialActivityCounterLocalServiceUtil.addActivityCounters(SocialActivityTestUtil.addActivity(_actorUser,_group,_assetEntry,2));
  SocialActivityCounter contribution=SocialActivityTestUtil.getActivityCounter(_group.getGroupId(),SocialActivityCounterConstants.NAME_CONTRIBUTION,_creatorUser);
  Assert.assertNotNull(contribution);
  Assert.assertEquals(1,contribution.getCurrentValue());
  List<SocialActivityCounter> counters=SocialActivityCounterLocalServiceUtil.getPeriodActivityCounters(_group.getGroupId(),"asset.test.2",SocialCounterPeriodUtil.getStartPeriod(),-1);
  Assert.assertEquals(1,counters.size());
  SocialActivityCounterLocalServiceUtil.disableActivityCounters(_assetEntry.getClassName(),_assetEntry.getClassPK());
  contribution=SocialActivityTestUtil.getActivityCounter(_group.getGroupId(),SocialActivityCounterConstants.NAME_CONTRIBUTION,_creatorUser);
  Assert.assertNotNull(contribution);
  Assert.assertEquals(0,contribution.getCurrentValue());
  SocialActivityCounter counter=SocialActivityTestUtil.getActivityCounter(_group.getGroupId(),"asset.test.2",_assetEntry);
  Assert.assertNotNull(counter);
  Assert.assertEquals(false,counter.isActive());
  counters=SocialActivityCounterLocalServiceUtil.getPeriodActivityCounters(_group.getGroupId(),"asset.test.2",SocialCounterPeriodUtil.getStartPeriod(),-1);
  Assert.assertEquals(0,counters.size());
  SocialActivityCounterLocalServiceUtil.enableActivityCounters(_assetEntry.getClassName(),_assetEntry.getClassPK());
  contribution=SocialActivityTestUtil.getActivityCounter(_group.getGroupId(),SocialActivityCounterConstants.NAME_CONTRIBUTION,_creatorUser);
  Assert.assertNotNull(contribution);
  Assert.assertEquals(1,contribution.getCurrentValue());
  counter=SocialActivityTestUtil.getActivityCounter(_group.getGroupId(),"asset.test.2",_assetEntry);
  Assert.assertNotNull(counter);
  Assert.assertEquals(true,counter.isActive());
  counters=SocialActivityCounterLocalServiceUtil.getPeriodActivityCounters(_group.getGroupId(),"asset.test.2",SocialCounterPeriodUtil.getStartPeriod(),-1);
  Assert.assertEquals(1,counters.size());
}

{
  SocialActivityCounterLocalServiceUtil.addActivityCounters(createActivity(_userCreator,1));
  SocialActivityCounter contribution=getActivityCounter(SocialActivityCounterConstants.NAME_CONTRIBUTION,_userCreator);
  Assert.assertNull(contribution);
  SocialActivityCounter participation=getActivityCounter(SocialActivityCounterConstants.NAME_PARTICIPATION,_userCreator);
  Assert.assertEquals(2,participation.getCurrentValue());
  SocialActivityCounterLocalServiceUtil.addActivityCounters(createActivity(_userActor,2));
  contribution=getActivityCounter(SocialActivityCounterConstants.NAME_CONTRIBUTION,_userCreator);
  Assert.assertNotNull(contribution);
  Assert.assertEquals(1,contribution.getCurrentValue());
  participation=getActivityCounter(SocialActivityCounterConstants.NAME_PARTICIPATION,_userActor);
  Assert.assertNotNull(participation);
  Assert.assertEquals(1,participation.getCurrentValue());
  SocialActivityLimit activityLimit=getActivityLimit(_userActor,_assetEntry,2,SocialActivityCounterConstants.NAME_PARTICIPATION);
  Assert.assertNotNull(activityLimit);
  Assert.assertEquals(1,activityLimit.getCount());
  SocialActivityCounterLocalServiceUtil.addActivityCounters(createActivity(_userActor,2));
  activityLimit=getActivityLimit(_userActor,_assetEntry,2,SocialActivityCounterConstants.NAME_PARTICIPATION);
  Assert.assertNotNull(activityLimit);
  Assert.assertEquals(2,activityLimit.getCount());
}

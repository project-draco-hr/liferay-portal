{
  long groupId=group.getGroupId();
  JournalArticle mainJournalEntry=JournalTestUtil.addArticle(group.getGroupId(),"mainJournalEntryTest" + ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  String mainJournalEntryUuid=mainJournalEntry.getArticleResourceUuid();
  AssetEntry mainAssetEntry=AssetEntryLocalServiceUtil.getEntry(group.getGroupId(),mainJournalEntryUuid);
  JournalArticle relatedArticleEntry1=JournalTestUtil.addArticle(group.getGroupId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  JournalArticle relatedArticleEntry2=JournalTestUtil.addArticle(group.getGroupId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString());
  List<AssetLink> assetLinks=new ArrayList<AssetLink>();
  AssetLink assetLink1=createAssetLink(groupId,mainJournalEntryUuid,relatedArticleEntry1.getArticleResourceUuid(),1);
  assetLinks.add(assetLink1);
  AssetLink assetLink2=createAssetLink(groupId,mainJournalEntryUuid,relatedArticleEntry2.getArticleResourceUuid(),2);
  assetLinks.add(assetLink2);
  List<AssetLink> exportAssetLinks=AssetLinkLocalServiceUtil.getLinks(mainAssetEntry.getEntryId());
  doExport(PortletKeys.JOURNAL);
  doImport(PortletKeys.JOURNAL);
  AssetEntry mainAssetEntryImported=AssetEntryLocalServiceUtil.getEntry(importedGroup.getGroupId(),mainJournalEntryUuid);
  List<AssetLink> importAssetLinks=AssetLinkLocalServiceUtil.getLinks(mainAssetEntryImported.getEntryId());
  Assert.assertEquals(exportAssetLinks.size(),importAssetLinks.size());
  _checkImportedLinks(assetLinks,importedGroup.getGroupId());
}

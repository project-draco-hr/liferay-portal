{
  ASTNode items=null;
  CollectionNode tf=null;
  try {
    int alt29=2;
    int LA29_0=input.LA(1);
    if (((LA29_0 >= FORCED_END_OF_LINE && LA29_0 <= 75))) {
      alt29=1;
    }
 else     if ((LA29_0 == EOF)) {
      alt29=1;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return items;
      }
      NoViableAltException nvae=new NoViableAltException("175:1: text_bolditalcontent returns [ASTNode items = null] : ( ( NEWLINE )? (tf= text_formattedcontent )? | EOF );",29,0,input);
      throw nvae;
    }
switch (alt29) {
case 1:
{
        int alt27=2;
        int LA27_0=input.LA(1);
        if ((LA27_0 == NEWLINE)) {
          alt27=1;
        }
switch (alt27) {
case 1:
{
            match(input,NEWLINE,FOLLOW_NEWLINE_in_text_bolditalcontent733);
            if (failed)             return items;
          }
        break;
    }
    int alt28=2;
switch (input.LA(1)) {
case STAR:
{
        int LA28_1=input.LA(2);
        if ((input.LA(2) != STAR)) {
          alt28=1;
        }
      }
    break;
case FORCED_END_OF_LINE:
case HEADING_SECTION:
case HORIZONTAL_SECTION:
case LIST_ITEM:
case LIST_ITEM_PART:
case NOWIKI_SECTION:
case SCAPE_NODE:
case TEXT_NODE:
case UNORDERED_LIST:
case UNFORMATTED_TEXT:
case WIKI:
case POUND:
case EQUAL:
case PIPE:
case NOWIKI_BLOCK_CLOSE:
case NOWIKI_CLOSE:
case LINK_CLOSE:
case IMAGE_CLOSE:
case BLANKS:
case DASH:
case CR:
case LF:
case SPACE:
case TABULATOR:
case COLON_SLASH:
case SLASH:
case INSIGNIFICANT_CHAR:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 63:
case 64:
case 65:
case 66:
case 67:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
{
    alt28=1;
  }
break;
case FORCED_LINEBREAK:
{
alt28=1;
}
break;
case ESCAPE:
{
alt28=1;
}
break;
case LINK_OPEN:
{
alt28=1;
}
break;
case IMAGE_OPEN:
{
alt28=1;
}
break;
case EXTENSION:
{
alt28=1;
}
break;
case NOWIKI_OPEN:
{
alt28=1;
}
break;
}
switch (alt28) {
case 1:
{
pushFollow(FOLLOW_text_formattedcontent_in_text_bolditalcontent744);
tf=text_formattedcontent();
_fsp--;
if (failed) return items;
if (backtracking == 0) {
items=tf;
}
}
break;
}
}
break;
case 2:
{
match(input,EOF,FOLLOW_EOF_in_text_bolditalcontent754);
if (failed) return items;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return items;
}

{
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=CustomSQLUtil.get(FIND_BY_FOLDER_IDS);
    sql=StringUtil.replace(sql,"[$FILE_ENTRY_FOLDER_ID$]",getFolderIds(folderIds,"DLFileEntry"));
    sql=StringUtil.replace(sql,"[$FILE_SHORTCUT_FOLDER_ID$]",getFolderIds(folderIds,"DLFileShortcut"));
    SQLQuery q=session.createSQLQuery(sql);
    q.addScalar("folderId",Hibernate.LONG);
    q.addScalar("name",Hibernate.STRING);
    q.addScalar("title",Hibernate.STRING);
    q.addScalar("fileShortcutId",Hibernate.LONG);
    QueryPos qPos=QueryPos.getInstance(q);
    for (int i=0; i < folderIds.size(); i++) {
      Long folderId=folderIds.get(i);
      qPos.add(folderId);
    }
    for (int i=0; i < folderIds.size(); i++) {
      Long folderId=folderIds.get(i);
      qPos.add(folderId);
    }
    List<Object> fileEntriesAndShortcuts=new ArrayList<Object>();
    Iterator<Object[]> itr=(Iterator<Object[]>)QueryUtil.iterate(q,HibernateUtil.getDialect(),start,end);
    while (itr.hasNext()) {
      Object[] array=itr.next();
      Long folderId=(Long)array[0];
      String name=(String)array[1];
      long fileShortcutId=((Long)array[3]).longValue();
      Object obj=null;
      if (fileShortcutId > 0) {
        obj=DLFileShortcutUtil.findByPrimaryKey(fileShortcutId);
      }
 else {
        obj=DLFileEntryUtil.findByF_N(folderId.longValue(),name);
      }
      fileEntriesAndShortcuts.add(obj);
    }
    return fileEntriesAndShortcuts;
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

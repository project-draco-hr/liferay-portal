{
  ThemeDisplay themeDisplay=(ThemeDisplay)req.getAttribute(WebKeys.THEME_DISPLAY);
  Layout layout=themeDisplay.getLayout();
  PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
  String portletId=ParamUtil.getString(req,"portletId");
  if (!PortletPermission.contains(permissionChecker,themeDisplay.getPlid(),portletId,ActionKeys.CONFIGURATION)) {
    return null;
  }
  PortletPreferences portletSetup=PortletPreferencesFactory.getPortletSetup(layout,portletId);
  String css=portletSetup.getValue("portlet-setup-css",StringPool.BLANK);
  try {
    if (Validator.isNotNull(css)) {
      if (_log.isDebugEnabled()) {
        _log.debug("Getting css " + css);
      }
      JSONObject jsonObj=new JSONObject(css);
      JSONObject portletData=new JSONObject();
      jsonObj.put("portletData",portletData);
      JSONObject titles=new JSONObject();
      portletData.put("titles",titles);
      Locale[] locales=LanguageUtil.getAvailableLocales();
      for (int i=0; i < locales.length; i++) {
        String languageId=LocaleUtil.toLanguageId(locales[i]);
        String title=portletSetup.getValue("portlet-setup-title-" + languageId,null);
        if (Validator.isNotNull(languageId)) {
          titles.put(languageId,title);
        }
      }
      boolean useCustomTitle=GetterUtil.getBoolean(portletSetup.getValue("portlet-setup-use-custom-title",null));
      boolean showBorders=GetterUtil.getBoolean(portletSetup.getValue("portlet-setup-show-borders",null),true);
      long linkToPlid=GetterUtil.getLong(portletSetup.getValue("portlet-setup-link-to-plid",null));
      portletData.put("useCustomTitle",useCustomTitle);
      portletData.put("showBorders",showBorders);
      portletData.put("portletLinksTarget",linkToPlid);
      return jsonObj.toString();
    }
  }
 catch (  ParseException pe) {
    if (_log.isWarnEnabled()) {
      _log.warn(pe);
    }
  }
  return null;
}

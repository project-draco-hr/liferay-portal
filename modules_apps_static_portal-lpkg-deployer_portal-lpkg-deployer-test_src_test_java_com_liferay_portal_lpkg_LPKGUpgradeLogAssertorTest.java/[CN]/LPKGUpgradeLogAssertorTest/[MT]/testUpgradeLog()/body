{
  final Set<String> symbolicNames=new HashSet<>();
  try (DirectoryStream<Path> directoryStream=Files.newDirectoryStream(Paths.get(PropsValues.LIFERAY_HOME,"/osgi/marketplace"))){
    for (    Path lpkgPath : directoryStream) {
      try (ZipFile zipFile=new ZipFile(lpkgPath.toFile());InputStream inputStream=zipFile.getInputStream(new ZipEntry("liferay-marketplace.properties"))){
        Properties properties=new Properties();
        properties.load(inputStream);
        symbolicNames.add(properties.getProperty("title"));
      }
     }
  }
   Files.walkFileTree(Paths.get(System.getProperty("liferay.log.dir",PropsValues.LIFERAY_HOME.concat("/logs"))),new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes basicFileAttributes) throws IOException {
      String pathString=StringUtil.toLowerCase(path.toString());
      if (pathString.endsWith(".log")) {
        assertUpgrade(path,symbolicNames);
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
}

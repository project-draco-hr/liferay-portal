{
  ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType>[] dlFileEntryTypeListeners=dlFileEntryTypePersistence.getListeners();
  List<com.liferay.portlet.documentlibrary.model.DLFileEntryType> dlFileEntryTypes=null;
  if ((listeners.length > 0) || (dlFileEntryTypeListeners.length > 0)) {
    dlFileEntryTypes=getDLFileEntryTypes(folderId);
    for (    com.liferay.portlet.documentlibrary.model.DLFileEntryType dlFileEntryType : dlFileEntryTypes) {
      for (      ModelListener<DLFolder> listener : listeners) {
        listener.onBeforeRemoveAssociation(folderId,com.liferay.portlet.documentlibrary.model.DLFileEntryType.class.getName(),dlFileEntryType.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType> listener : dlFileEntryTypeListeners) {
        listener.onBeforeRemoveAssociation(dlFileEntryType.getPrimaryKey(),DLFolder.class.getName(),folderId);
      }
    }
  }
  _sqlUpdate.update(new Object[]{new Long(folderId)});
  if ((listeners.length > 0) || (dlFileEntryTypeListeners.length > 0)) {
    for (    com.liferay.portlet.documentlibrary.model.DLFileEntryType dlFileEntryType : dlFileEntryTypes) {
      for (      ModelListener<DLFolder> listener : listeners) {
        listener.onAfterRemoveAssociation(folderId,com.liferay.portlet.documentlibrary.model.DLFileEntryType.class.getName(),dlFileEntryType.getPrimaryKey());
      }
      for (      ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType> listener : dlFileEntryTypeListeners) {
        listener.onAfterRemoveAssociation(dlFileEntryType.getPrimaryKey(),DLFolder.class.getName(),folderId);
      }
    }
  }
}

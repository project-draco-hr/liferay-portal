{
  if (containsDLFileEntryType.contains(folderId,fileEntryTypeId)) {
    ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType>[] dlFileEntryTypeListeners=dlFileEntryTypePersistence.getListeners();
    for (    ModelListener<DLFolder> listener : listeners) {
      listener.onBeforeRemoveAssociation(folderId,com.liferay.portlet.documentlibrary.model.DLFileEntryType.class.getName(),fileEntryTypeId);
    }
    for (    ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType> listener : dlFileEntryTypeListeners) {
      listener.onBeforeRemoveAssociation(fileEntryTypeId,DLFolder.class.getName(),folderId);
    }
    _sqlUpdate.update(new Object[]{new Long(folderId),new Long(fileEntryTypeId)});
    for (    ModelListener<DLFolder> listener : listeners) {
      listener.onAfterRemoveAssociation(folderId,com.liferay.portlet.documentlibrary.model.DLFileEntryType.class.getName(),fileEntryTypeId);
    }
    for (    ModelListener<com.liferay.portlet.documentlibrary.model.DLFileEntryType> listener : dlFileEntryTypeListeners) {
      listener.onAfterRemoveAssociation(fileEntryTypeId,DLFolder.class.getName(),folderId);
    }
  }
}

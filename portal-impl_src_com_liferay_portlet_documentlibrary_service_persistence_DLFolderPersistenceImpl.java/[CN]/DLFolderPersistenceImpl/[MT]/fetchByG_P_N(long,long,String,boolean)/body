{
  Object[] finderArgs=new Object[]{groupId,parentFolderId,name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,this);
  }
  if (result instanceof DLFolder) {
    DLFolder dlFolder=(DLFolder)result;
    if ((groupId != dlFolder.getGroupId()) || (parentFolderId != dlFolder.getParentFolderId()) || !Validator.equals(name,dlFolder.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(5);
    query.append(_SQL_SELECT_DLFOLDER_WHERE);
    query.append(_FINDER_COLUMN_G_P_N_GROUPID_2);
    query.append(_FINDER_COLUMN_G_P_N_PARENTFOLDERID_2);
    if (name == null) {
      query.append(_FINDER_COLUMN_G_P_N_NAME_1);
    }
 else {
      if (name.equals(StringPool.BLANK)) {
        query.append(_FINDER_COLUMN_G_P_N_NAME_3);
      }
 else {
        query.append(_FINDER_COLUMN_G_P_N_NAME_2);
      }
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(parentFolderId);
      if (name != null) {
        qPos.add(name);
      }
      List<DLFolder> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,list);
      }
 else {
        DLFolder dlFolder=list.get(0);
        result=dlFolder;
        cacheResult(dlFolder);
        if ((dlFolder.getGroupId() != groupId) || (dlFolder.getParentFolderId() != parentFolderId) || (dlFolder.getName() == null)|| !dlFolder.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,dlFolder);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (DLFolder)result;
  }
}

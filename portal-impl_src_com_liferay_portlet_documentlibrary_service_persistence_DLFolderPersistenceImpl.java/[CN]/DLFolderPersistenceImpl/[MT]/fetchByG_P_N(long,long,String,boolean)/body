{
  Object[] finderArgs=new Object[]{groupId,parentFolderId,name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=new StringBundler(5);
      query.append(_SQL_SELECT_DLFOLDER_WHERE);
      query.append(_FINDER_COLUMN_G_P_N_GROUPID_2);
      query.append(_FINDER_COLUMN_G_P_N_PARENTFOLDERID_2);
      if (name == null) {
        query.append(_FINDER_COLUMN_G_P_N_NAME_1);
      }
 else {
        if (name.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_G_P_N_NAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_G_P_N_NAME_2);
        }
      }
      query.append(DLFolderModelImpl.ORDER_BY_JPQL);
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      qPos.add(parentFolderId);
      if (name != null) {
        qPos.add(name);
      }
      List<DLFolder> list=q.list();
      result=list;
      DLFolder dlFolder=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,list);
      }
 else {
        dlFolder=list.get(0);
        cacheResult(dlFolder);
        if ((dlFolder.getGroupId() != groupId) || (dlFolder.getParentFolderId() != parentFolderId) || (dlFolder.getName() == null)|| !dlFolder.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,dlFolder);
        }
      }
      return dlFolder;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_G_P_N,finderArgs,new ArrayList<DLFolder>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List<?>) {
      return null;
    }
 else {
      return (DLFolder)result;
    }
  }
}

{
  SPIAgentResponse spiAgentResponse=new SPIAgentResponse(_SERVLET_CONTEXT_NAME);
  spiAgentResponse.captureResponse(new MockHttpServletRequest(),new BufferCacheServletResponse(new MockHttpServletResponse()));
  Assert.assertFalse(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  MockHttpServletRequest mockHttpServletRequest=new MockHttpServletRequest();
  mockHttpServletRequest.setAttribute(WebKeys.PORTAL_RESILIENCY_ACTION,true);
  BufferCacheServletResponse bufferCacheServletResponse=new BufferCacheServletResponse(new MockHttpServletResponse());
  bufferCacheServletResponse.setByteBuffer(ByteBuffer.allocate(0));
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  byte[] byteArray=new byte[]{(byte)0,(byte)1,(byte)2,(byte)3,(byte)4,(byte)5};
  ByteBuffer byteBuffer=ByteBuffer.allocateDirect(byteArray.length);
  byteBuffer.put(byteArray);
  byteBuffer.clear();
  bufferCacheServletResponse.setByteBuffer(byteBuffer);
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertArrayEquals(byteArray,spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  bufferCacheServletResponse.setByteBuffer(ByteBuffer.wrap(byteArray));
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertSame(byteArray,spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  bufferCacheServletResponse.setByteBuffer(ByteBuffer.wrap(byteArray,2,2));
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertArrayEquals(new byte[]{(byte)2,(byte)3},spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  bufferCacheServletResponse.setString(StringPool.BLANK);
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertNull(spiAgentResponse.stringData);
  String content="content";
  bufferCacheServletResponse.setString(content);
  mockHttpServletRequest.setParameter("portalResiliencyPortletShowFooter",StringPool.FALSE);
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertSame(content,spiAgentResponse.stringData);
  bufferCacheServletResponse.setString(content);
  mockHttpServletRequest.setParameter("portalResiliencyPortletShowFooter",StringPool.TRUE);
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertSame(content,spiAgentResponse.stringData);
  content="<div>content</div>";
  bufferCacheServletResponse.setString(content);
  mockHttpServletRequest.setServerPort(1234);
  PortalUtil.setPortalPort(mockHttpServletRequest);
  mockHttpServletRequest.setParameter("portalResiliencyPortletShowFooter",StringPool.TRUE);
  spiAgentResponse.captureResponse(mockHttpServletRequest,bufferCacheServletResponse);
  Assert.assertTrue(spiAgentResponse.portalResiliencyResponse);
  Assert.assertNotNull(spiAgentResponse.metaData);
  Assert.assertNull(spiAgentResponse.byteData);
  Assert.assertEquals("<div>content<div class=\"alert alert-info\"><strong>This " + "portlet is from SPI 1234</strong></div></div>",spiAgentResponse.stringData);
}

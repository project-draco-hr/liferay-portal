{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  List<String> nodeResourceActions=ResourceActionsUtil.getModelResourceActions(WikiNode.class.getName());
  List<String> pageResourceActions=ResourceActionsUtil.getModelResourceActions(WikiPage.class.getName());
  List<String> sharedResourceActions=new ArrayList<String>();
  for (  String resourceAction : pageResourceActions) {
    if (!nodeResourceActions.contains(resourceAction)) {
      continue;
    }
    sharedResourceActions.add(resourceAction);
  }
  long nodeId=ParamUtil.getLong(actionRequest,"resourcePrimKey");
  List<WikiPage> wikiPages=WikiPageLocalServiceUtil.getPages(nodeId,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
  for (  WikiPage wikiPage : wikiPages) {
    String resourcePrimKey=String.valueOf(wikiPage.getResourcePrimKey());
    String rolesSearchContainerPrimaryKeys=ParamUtil.getString(actionRequest,"rolesSearchContainerPrimaryKeys");
    long[] roleIds=StringUtil.split(rolesSearchContainerPrimaryKeys,0L);
    for (    long roleId : roleIds) {
      List<String> nodeActionIds=ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(themeDisplay.getCompanyId(),WikiNode.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,String.valueOf(nodeId),roleId,nodeResourceActions);
      List<String> pageActionIds=ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(themeDisplay.getCompanyId(),WikiPage.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,resourcePrimKey,roleId,pageResourceActions);
      for (      String actionId : nodeActionIds) {
        if (!sharedResourceActions.contains(actionId)) {
          continue;
        }
        pageActionIds.add(actionId);
      }
      ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(),themeDisplay.getCompanyId(),WikiPage.class.getName(),resourcePrimKey,roleId,pageActionIds.toArray(new String[pageActionIds.size()]));
    }
  }
}

{
  long pk=ServiceTestUtil.nextLong();
  UserTrackerPath newUserTrackerPath=_persistence.create(pk);
  newUserTrackerPath.setMvccVersion(ServiceTestUtil.nextLong());
  newUserTrackerPath.setUserTrackerId(ServiceTestUtil.nextLong());
  newUserTrackerPath.setPath(ServiceTestUtil.randomString());
  newUserTrackerPath.setPathDate(ServiceTestUtil.nextDate());
  _persistence.update(newUserTrackerPath);
  UserTrackerPath existingUserTrackerPath=_persistence.findByPrimaryKey(newUserTrackerPath.getPrimaryKey());
  Assert.assertEquals(existingUserTrackerPath.getMvccVersion(),newUserTrackerPath.getMvccVersion());
  Assert.assertEquals(existingUserTrackerPath.getUserTrackerPathId(),newUserTrackerPath.getUserTrackerPathId());
  Assert.assertEquals(existingUserTrackerPath.getUserTrackerId(),newUserTrackerPath.getUserTrackerId());
  Assert.assertEquals(existingUserTrackerPath.getPath(),newUserTrackerPath.getPath());
  Assert.assertEquals(Time.getShortTimestamp(existingUserTrackerPath.getPathDate()),Time.getShortTimestamp(newUserTrackerPath.getPathDate()));
}

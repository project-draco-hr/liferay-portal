{
  BufferCacheServletResponse bufferCacheServletResponse=new BufferCacheServletResponse(new MockHttpServletResponse());
  byte[] data=new byte[10];
  Random random=new Random();
  random.nextBytes(data);
  ByteBuffer byteBuffer=ByteBuffer.wrap(data,2,5);
  bufferCacheServletResponse.setByteBuffer(byteBuffer);
  CacheResponseData cacheResponseData=new CacheResponseData(bufferCacheServletResponse);
  cacheResponseData.setAttribute("a1","v1");
  cacheResponseData.setAttribute("b1","v2");
  CacheResponseData deserializedCacheResponseData=(CacheResponseData)SerializableUtil.deserialize(SerializableUtil.serialize(cacheResponseData));
  Assert.assertEquals("ContentType not correctly recreated",cacheResponseData.getContentType(),deserializedCacheResponseData.getContentType());
  Assert.assertEquals("Headers not correctly recreated",cacheResponseData.getHeaders(),deserializedCacheResponseData.getHeaders());
  Assert.assertEquals("Attribute a1 not correctly recreated",cacheResponseData.getAttribute("a1"),deserializedCacheResponseData.getAttribute("a1"));
  Assert.assertEquals("Attribute a2 not correctly recreated",cacheResponseData.getAttribute("a2"),deserializedCacheResponseData.getAttribute("a2"));
  ByteBuffer deserializedByteBuffer=deserializedCacheResponseData.getByteBuffer();
  Assert.assertArrayEquals("ByteBuffer data not correctly recreated",Arrays.copyOfRange(byteBuffer.array(),byteBuffer.arrayOffset() + byteBuffer.position(),byteBuffer.arrayOffset() + byteBuffer.limit()),Arrays.copyOfRange(deserializedByteBuffer.array(),deserializedByteBuffer.arrayOffset() + deserializedByteBuffer.position(),deserializedByteBuffer.arrayOffset() + deserializedByteBuffer.limit()));
}

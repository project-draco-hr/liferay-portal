{
  if (className.startsWith("java/")) {
    return Collections.emptySet();
  }
  InputStream inputStream=source.getResourceAsStream(className);
  if (inputStream == null) {
    return Collections.emptySet();
  }
  Set<String> packageNames=new HashSet<String>();
  try {
    ClassReader classReader=new ClassReader(inputStream);
    classReader.accept(dependencyVisitor,0);
    for (    String packageName : dependencyVisitor.getPackages()) {
      packageName=packageName.replaceAll(StringPool.SLASH,StringPool.PERIOD);
      if (packageName.startsWith("com.sun.") || packageName.startsWith("sun.")) {
        continue;
      }
      packageNames.add(packageName);
    }
    String superName=classReader.getSuperName();
    if (superName != null) {
      packageNames.addAll(processReferencedDependencies(source,getFileName(superName)));
    }
    String[] interfaceNames=classReader.getInterfaces();
    if ((interfaceNames != null) && (interfaceNames.length > 0)) {
      packageNames.addAll(processInterfaces(source,interfaceNames));
    }
  }
 catch (  Exception e) {
    _log.error("Unable to process class " + className,e);
  }
  return packageNames;
}

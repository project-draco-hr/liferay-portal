{
  File file=new File(_file,"WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD);
  if (!file.exists()) {
    return;
  }
  String content=FileUtil.read(file);
  Document document=null;
  try {
    document=SAXReaderUtil.read(content);
  }
 catch (  DocumentException de) {
    throw new IOException(de);
  }
  Element rootElement=document.getRootElement();
  List<Element> elements=rootElement.elements("portlet");
  for (  Element element : elements) {
    String portletName=PortalUtil.getJsSafePortletId(element.elementText("portlet-name"));
    String invokerPortletName=Portal.PATH_MODULE.substring(1) + _context + StringPool.SLASH+ portletName;
    XPath xPath=SAXReaderUtil.createXPath("x:init-param[x:name/text()='com.liferay.portal." + "invokerPortletName']","x","http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd");
    Element invokerPortletNameEl=(Element)xPath.selectSingleNode(element);
    if (invokerPortletNameEl == null) {
      Element portletClassElement=element.element("portlet-class");
      List<Node> children=element.content();
      int pos=children.indexOf(portletClassElement);
      QName qName=rootElement.getQName();
      Element initParamElement=SAXReaderUtil.createElement(SAXReaderUtil.createQName("init-param",qName.getNamespace()));
      initParamElement.addElement("name").setText("com.liferay.portal.invokerPortletName");
      initParamElement.addElement("value").setText(invokerPortletName);
      children.add(pos + 1,initParamElement);
    }
 else {
      Element valueElement=invokerPortletNameEl.element("value");
      invokerPortletName=valueElement.getTextTrim();
      if (!invokerPortletName.startsWith(StringPool.SLASH)) {
        invokerPortletName=StringPool.SLASH + invokerPortletName;
      }
      invokerPortletName=Portal.PATH_MODULE.substring(1) + _context + invokerPortletName;
      valueElement.setText(invokerPortletName);
    }
  }
  try {
    content=DDMXMLUtil.formatXML(document);
    FileUtil.write(file,content);
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}

{
  UserGroupGroupRole userGroupGroupRole=findByPrimaryKey(userGroupGroupRolePK);
  int count=countByU_G(userGroupId,groupId);
  Session session=null;
  try {
    session=openSession();
    StringBundler query=null;
    if (orderByComparator != null) {
      query=new StringBundler(4 + (orderByComparator.getOrderByFields().length * 3));
    }
 else {
      query=new StringBundler(3);
    }
    query.append(_SQL_SELECT_USERGROUPGROUPROLE_WHERE);
    query.append(_FINDER_COLUMN_U_G_USERGROUPID_2);
    query.append(_FINDER_COLUMN_U_G_GROUPID_2);
    if (orderByComparator != null) {
      appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
    }
    String sql=query.toString();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(userGroupId);
    qPos.add(groupId);
    Object[] objArray=QueryUtil.getPrevAndNext(q,count,orderByComparator,userGroupGroupRole);
    UserGroupGroupRole[] array=new UserGroupGroupRoleImpl[3];
    array[0]=(UserGroupGroupRole)objArray[0];
    array[1]=(UserGroupGroupRole)objArray[1];
    array[2]=(UserGroupGroupRole)objArray[2];
    return array;
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

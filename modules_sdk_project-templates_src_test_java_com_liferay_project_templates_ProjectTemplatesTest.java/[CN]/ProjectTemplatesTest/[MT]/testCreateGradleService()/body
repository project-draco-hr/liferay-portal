{
  String[] args={"--destination",_testDir.getPath(),"--template","service","--service","com.liferay.portal.kernel.events.LifecycleAction","--class-name","FooAction","--name","servicepreaction"};
  ProjectTemplates.main(args);
  File projectDir=new File(_testDir,"servicepreaction");
  Assert.assertTrue(projectDir.exists());
  _testTemplateFiles(projectDir.toPath());
  _checkFileExists(projectDir + "/build.gradle");
  File file=new File(projectDir + "/src/main/java/servicepreaction/FooAction.java");
  _contains(file,new String[]{"^package servicepreaction;.*",".*^import .*kernel.events.LifecycleAction;$.*",".*service = LifecycleAction.class.*",".*^public class FooAction implements LifecycleAction \\{.*"});
  List<String> lines=new ArrayList<>();
  String line=null;
  BufferedReader reader=new BufferedReader(new FileReader(file));
  while ((line=reader.readLine()) != null) {
    lines.add(line);
    if (line.startsWith("import")) {
      lines.add("import com.liferay.portal.kernel.events.LifecycleEvent;");
      lines.add("import com.liferay.portal.kernel.events.ActionException;");
    }
    if (line.startsWith("public class FooAction")) {
      lines.add(_EVENT_METHOD);
    }
  }
  reader.close();
  try (Writer writer=new FileWriter(file)){
    for (    String string : lines) {
      writer.write(string + "\n");
    }
  }
   BuildTask buildtask=_executeGradleRunner(projectDir,"build");
  _verifyGradleRunnerOutput(buildtask);
  _verifyBuildOutput(projectDir,"servicepreaction-1.0.0.jar");
}

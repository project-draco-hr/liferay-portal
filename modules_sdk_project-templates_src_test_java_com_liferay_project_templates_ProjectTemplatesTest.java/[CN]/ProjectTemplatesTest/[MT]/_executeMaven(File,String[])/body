{
  try (URLClassLoader classLoader=new URLClassLoader(_mavenEmbedderDependencyURLs,null)){
    Class<?> mavenCliClass=classLoader.loadClass("org.apache.maven.cli.MavenCli");
    Object mavenCli=mavenCliClass.newInstance();
    ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
    ByteArrayOutputStream errorStream=new ByteArrayOutputStream();
    Method doMainMethod=mavenCliClass.getMethod("doMain",String[].class,String.class,PrintStream.class,PrintStream.class);
    Thread currentThread=Thread.currentThread();
    ClassLoader contextClassLoader=currentThread.getContextClassLoader();
    currentThread.setContextClassLoader(classLoader);
    try {
      PrintStream outputPrintStream=new PrintStream(outputStream);
      PrintStream errorPrintStream=new PrintStream(errorStream);
      String[] arguments=null;
      if (Validator.isNotNull(_httpProxyHost) && Validator.isNotNull(_httpProxyPort)) {
        arguments=new String[args.length + 2];
        arguments[0]="-Dhttp.proxyHost=" + _httpProxyHost;
        arguments[1]="-Dhttp.proxyPort=" + _httpProxyPort;
        System.arraycopy(args,0,arguments,2,args.length);
      }
 else {
        arguments=args;
      }
      Integer exitCode=(Integer)doMainMethod.invoke(mavenCli,arguments,projectDir.getAbsolutePath(),outputPrintStream,errorPrintStream);
      Assert.assertEquals(new String(errorStream.toByteArray()),0,exitCode.intValue());
    }
  finally {
      currentThread.setContextClassLoader(contextClassLoader);
    }
  }
 }

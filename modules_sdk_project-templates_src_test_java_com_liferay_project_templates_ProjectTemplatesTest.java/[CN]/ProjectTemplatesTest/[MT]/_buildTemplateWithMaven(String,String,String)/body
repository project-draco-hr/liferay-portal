{
  File destinationDir=temporaryFolder.newFolder("maven");
  List<String> completeArgs=new ArrayList<>();
  completeArgs.add("archetype:generate");
  completeArgs.add("--batch-mode");
  if (Validator.isNotNull(template)) {
    completeArgs.add("-DarchetypeArtifactId=com.liferay.project.templates." + template.replace('-','.'));
  }
  String projectTemplateVersion=_projectTemplateVersions.getProperty(template);
  Assert.assertTrue("Unable to get project template version",Validator.isNotNull(projectTemplateVersion));
  completeArgs.add("-DarchetypeGroupId=com.liferay");
  completeArgs.add("-DarchetypeVersion=" + projectTemplateVersion);
  completeArgs.add("-DgroupId=com.test");
  completeArgs.add("-DartifactId=" + name);
  completeArgs.add("-Dversion=1.0.0");
  completeArgs.add("-DprojectType=standalone");
  for (  String arg : args) {
    completeArgs.add(arg);
  }
  _executeMaven(destinationDir,completeArgs.toArray(new String[0]));
  File projectDir=new File(destinationDir,name);
  _testExists(projectDir,"pom.xml");
  _testNotExists(projectDir,"gradlew");
  _testNotExists(projectDir,"gradlew.bat");
  _testNotExists(projectDir,"gradle/wrapper/gradle-wrapper.jar");
  _testNotExists(projectDir,"gradle/wrapper/gradle-wrapper.properties");
  return projectDir;
}

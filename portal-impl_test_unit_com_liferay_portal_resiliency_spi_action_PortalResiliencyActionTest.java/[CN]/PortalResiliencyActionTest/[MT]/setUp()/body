{
  PropsUtil.setProps(new PropsImpl());
  PortletContainerUtil portletContainerUtil=new PortletContainerUtil();
  _mockPortletContainer=new MockPortletContainer();
  portletContainerUtil.setPortletContainer(_mockPortletContainer);
  _mockHttpServletRequest=new MockHttpServletRequest();
  _layout=new LayoutImpl();
  _layout.setTypeSettings(_DEFAULT_LAYOUT_TYPE_SETTINGS);
  _mockHttpServletRequest.setAttribute(WebKeys.LAYOUT,_layout);
  _portlet=new PortletImpl(){
    @Override public String getContextName(){
      return _SERVLET_CONTEXT_NAME;
    }
  }
;
  _portlet.setPortletId(_PORTLET_ID);
  _mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_PORTLET,_portlet);
  MockHttpServletRequest originalMockHttpServletRequest=new MockHttpServletRequest();
  originalMockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_PORTLET,_portlet);
  _mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_REQUEST,new SPIAgentRequest(originalMockHttpServletRequest));
  _mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_RESPONSE,new SPIAgentResponse(_SERVLET_CONTEXT_NAME));
  _response=new MockHttpServletResponse();
  HttpSession session=_mockHttpServletRequest.getSession();
  session.setAttribute(WebKeys.USER_PASSWORD,"password");
}

{
  Runnable runnable=new Runnable(){
    @Override public void run(){
      Iterator<PathCallable> iterator=_pathCallables.iterator();
      while (iterator.hasNext()) {
        PathCallable pathCallable=iterator.next();
        FileChannel fileChannel=null;
        FileLock fileLock=null;
        try {
          Path filePath=pathCallable.getPath();
          if (Files.notExists(filePath)) {
            iterator.remove();
            continue;
          }
          if (Files.isDirectory(filePath)) {
            pathCallable.call();
            iterator.remove();
          }
 else {
            fileChannel=FileChannel.open(filePath,StandardOpenOption.READ,StandardOpenOption.WRITE);
            fileLock=FileUtil.getFileLock(fileChannel);
          }
          if (fileLock != null) {
            pathCallable.call();
            iterator.remove();
          }
        }
 catch (        Exception e) {
        }
 finally {
          FileUtil.releaseFileLock(fileLock);
          StreamUtil.cleanUp(fileChannel);
        }
      }
    }
  }
;
  _scheduledExecutorService.scheduleAtFixedRate(runnable,0,5,TimeUnit.SECONDS);
}

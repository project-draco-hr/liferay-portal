{
  ThemeDisplay themeDisplay=(ThemeDisplay)resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
  int end=ParamUtil.getInteger(resourceRequest,"end");
  String keywords=ParamUtil.getString(resourceRequest,"keywords");
  int start=ParamUtil.getInteger(resourceRequest,"start");
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  jsonObject.put("count",InviteMembersUtil.getAvailableUsersCount(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId(),keywords));
  JSONObject optionsJSONObject=JSONFactoryUtil.createJSONObject();
  optionsJSONObject.put("end",end);
  optionsJSONObject.put("keywords",keywords);
  optionsJSONObject.put("start",start);
  jsonObject.put("options",optionsJSONObject);
  List<User> users=InviteMembersUtil.getAvailableUsers(themeDisplay.getCompanyId(),themeDisplay.getScopeGroupId(),keywords,start,end);
  JSONArray jsonArray=JSONFactoryUtil.createJSONArray();
  for (  User user : users) {
    JSONObject userJSONObject=JSONFactoryUtil.createJSONObject();
    userJSONObject.put("hasPendingMemberRequest",MemberRequestLocalServiceUtil.hasPendingMemberRequest(themeDisplay.getScopeGroupId(),user.getUserId()));
    userJSONObject.put("userEmailAddress",user.getEmailAddress());
    userJSONObject.put("userFullName",user.getFullName());
    userJSONObject.put("userId",user.getUserId());
    jsonArray.put(userJSONObject);
  }
  jsonObject.put("users",jsonArray);
  writeJSON(resourceRequest,resourceResponse,jsonObject);
}

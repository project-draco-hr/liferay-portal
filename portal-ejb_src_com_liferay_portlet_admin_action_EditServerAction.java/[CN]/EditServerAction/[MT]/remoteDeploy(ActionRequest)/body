{
  String url=ParamUtil.getString(req,"url");
  try {
    URL urlObj=new URL(url);
    HttpClient client=new HttpClient();
    GetMethod getFile=new GetMethod(urlObj.toString());
    int responseCode=client.executeMethod(getFile);
    if (responseCode != 200) {
      SessionErrors.add(req,"errorResponseFromServer",new Object[]{Integer.toString(responseCode)});
      return;
    }
    byte[] bytes=getFile.getResponseBody();
    getFile.releaseConnection();
    String fileName=url.substring(url.lastIndexOf(StringPool.SLASH) + 1);
    if ((bytes != null) && (bytes.length > 0)) {
      String destination=PrefsPropsUtil.getString(PropsUtil.AUTO_DEPLOY_DEPLOY_DIR) + StringPool.SLASH + fileName;
      FileUtil.write(destination,bytes);
    }
 else {
      SessionErrors.add(req,UploadException.class.getName());
    }
  }
 catch (  MalformedURLException mue) {
    SessionErrors.add(req,"invalidUrl",url);
  }
catch (  IOException ioe) {
    SessionErrors.add(req,"errorConnectingToServer",ioe);
  }
}

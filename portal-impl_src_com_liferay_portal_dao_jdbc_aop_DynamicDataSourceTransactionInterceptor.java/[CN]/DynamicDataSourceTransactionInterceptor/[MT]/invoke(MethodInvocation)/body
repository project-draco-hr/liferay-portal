{
  Class<?> targetClass=null;
  if (methodInvocation.getThis() != null) {
    targetClass=methodInvocation.getThis().getClass();
  }
  Method targetMethod=methodInvocation.getMethod();
  TransactionAttributeSource transactionAttributeSource=getTransactionAttributeSource();
  TransactionAttribute transactionAttribute=transactionAttributeSource.getTransactionAttribute(targetMethod,targetClass);
  if ((transactionAttribute != null) && transactionAttribute.isReadOnly()) {
    _dynamicDataSourceTargetSource.setOperation(Operation.READ);
  }
 else {
    _dynamicDataSourceTargetSource.setOperation(Operation.WRITE);
  }
  StringBuilder sb=new StringBuilder();
  sb.append(targetClass.getName());
  sb.append(StringPool.PERIOD);
  sb.append(targetMethod.getName());
  _dynamicDataSourceTargetSource.pushMethod(sb.toString());
  Object returnValue=null;
  try {
    returnValue=super.invoke(methodInvocation);
  }
  finally {
    _dynamicDataSourceTargetSource.popMethod();
  }
  return returnValue;
}

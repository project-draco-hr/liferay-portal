{
  TestItemSelectorView testItemSelectorView=new TestItemSelectorView();
  ServiceRegistration<ItemSelectorView> itemSelectorViewServiceRegistration=registerItemSelectorView(testItemSelectorView,"test-view");
  try {
    ItemSelectorCriterion itemSelectorCriterion=new TestItemSelectorCriterion();
    itemSelectorCriterion.setDesiredItemSelectorReturnTypes(Arrays.asList(new TestItemSelectorReturnType()));
    String serializedItemSelectorCriterionJSON=_itemSelectorCriterionSerializer.serialize(itemSelectorCriterion);
    ItemSelectorCriterion deserializedItemSelectorCriterion=_itemSelectorCriterionSerializer.deserialize(itemSelectorCriterion.getClass(),serializedItemSelectorCriterionJSON);
    List<ItemSelectorReturnType> deserializedDesiredItemSelectorReturnTypes=deserializedItemSelectorCriterion.getDesiredItemSelectorReturnTypes();
    Assert.assertEquals(1,deserializedDesiredItemSelectorReturnTypes.size());
    ItemSelectorReturnType deserializedItemSelectorReturnType=deserializedDesiredItemSelectorReturnTypes.get(0);
    Class<? extends ItemSelectorReturnType> deserializedItemSelectorReturnTypeClass=deserializedItemSelectorReturnType.getClass();
    Class<TestItemSelectorReturnType> expectedItemSelectorReturnTypeClass=TestItemSelectorReturnType.class;
    Assert.assertEquals(expectedItemSelectorReturnTypeClass.getName(),deserializedItemSelectorReturnTypeClass.getName());
  }
  finally {
    itemSelectorViewServiceRegistration.unregister();
  }
}

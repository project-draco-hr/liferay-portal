{
  int initialMountFolders=DLFolderServiceUtil.getMountFoldersCount(TestPropsValues.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  long classNameId=PortalUtil.getClassNameId(LiferayRepository.class);
  long repositoryId=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),TestPropsValues.getGroupId(),classNameId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,ServiceTestUtil.randomString(),ServiceTestUtil.randomString(),PortletKeys.DOCUMENT_LIBRARY,new UnicodeProperties(),hidden,new ServiceContext());
  if (hidden) {
    Assert.assertEquals(initialMountFolders,DLFolderServiceUtil.getMountFoldersCount(TestPropsValues.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
  }
 else {
    Assert.assertEquals(initialMountFolders + 1,DLFolderServiceUtil.getMountFoldersCount(TestPropsValues.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
  }
  LocalRepository localRepository=RepositoryServiceUtil.getLocalRepositoryImpl(repositoryId);
  Folder folder=localRepository.addFolder(TestPropsValues.getUserId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,String.valueOf(repositoryId),String.valueOf(repositoryId),new ServiceContext());
  InputStream inputStream=new UnsyncByteArrayInputStream(_TEST_CONTENT.getBytes());
  String name=ServiceTestUtil.randomString() + ".txt";
  localRepository.addFileEntry(TestPropsValues.getUserId(),folder.getFolderId(),name,ContentTypes.TEXT_PLAIN,name,StringPool.BLANK,StringPool.BLANK,inputStream,_TEST_CONTENT.length(),new ServiceContext());
  Assert.assertEquals(1,DLAppServiceUtil.getFoldersCount(repositoryId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
  Assert.assertEquals(1,DLAppServiceUtil.getFileEntriesAndFileShortcutsCount(repositoryId,folder.getFolderId(),WorkflowConstants.STATUS_ANY));
  RepositoryLocalServiceUtil.deleteRepositories(TestPropsValues.getGroupId());
  Assert.assertEquals(initialMountFolders,DLFolderServiceUtil.getMountFoldersCount(TestPropsValues.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
}

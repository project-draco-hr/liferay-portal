{
  long classNameId=PortalUtil.getClassNameId(LiferayRepository.class);
  Repository repository1=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,RandomTestUtil.randomString(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),new UnicodeProperties(),true,new ServiceContext());
  long[] fileEntryIds=new long[4];
  long[] primaryKeys=populateRepository(repository1.getRepositoryId());
  fileEntryIds[0]=primaryKeys[0];
  fileEntryIds[1]=primaryKeys[2];
  Repository repository2=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,RandomTestUtil.randomString(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),new UnicodeProperties(),true,new ServiceContext());
  primaryKeys=populateRepository(repository2.getRepositoryId());
  fileEntryIds[2]=primaryKeys[0];
  fileEntryIds[3]=primaryKeys[2];
  DLAppLocalServiceUtil.deleteAll(repository1.getRepositoryId());
  try {
    LocalRepository localRepository=RepositoryProviderUtil.getLocalRepository(repository2.getRepositoryId());
    localRepository.getFileEntry(fileEntryIds[0]);
    localRepository.getFileEntry(fileEntryIds[1]);
    Assert.fail("Should be able to get file entry from repository " + repository2.getRepositoryId());
  }
 catch (  Exception e) {
  }
  LocalRepository localRepository=RepositoryProviderUtil.getLocalRepository(repository2.getRepositoryId());
  localRepository.getFileEntry(fileEntryIds[2]);
  localRepository.getFileEntry(fileEntryIds[3]);
}

{
  long[] repositoryIds=new long[2];
  long classNameId=PortalUtil.getClassNameId(LiferayRepository.class);
  Repository repository=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,RandomTestUtil.randomString(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),new UnicodeProperties(),true,new ServiceContext());
  repositoryIds[0]=repository.getRepositoryId();
  DLFolder dlFolder=DLFolderServiceUtil.addFolder(_group.getGroupId(),_group.getGroupId(),false,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,RandomTestUtil.randomString(),RandomTestUtil.randomString(),new ServiceContext());
  repository=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,dlFolder.getFolderId(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),RandomTestUtil.randomString(),new UnicodeProperties(),true,new ServiceContext());
  repositoryIds[1]=repository.getRepositoryId();
  DLAppLocalServiceUtil.deleteAllRepositories(_group.getGroupId());
  for (  long repositoryId : repositoryIds) {
    try {
      RepositoryProviderUtil.getLocalRepository(repositoryId);
      Assert.fail("Should not be able to access repository " + repositoryId);
    }
 catch (    Exception e) {
    }
  }
}

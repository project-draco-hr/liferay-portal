{
  int initialMountFolders=DLFolderServiceUtil.getMountFoldersCount(_group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID);
  Repository[] repositories=new Repository[2];
  long[] repositoryIds=new long[2];
  long classNameId=PortalUtil.getClassNameId(LiferayRepository.class);
  repositories[0]=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,"Test 1","Test 1",PortletKeys.DOCUMENT_LIBRARY,new UnicodeProperties(),hidden,new ServiceContext());
  repositoryIds[0]=repositories[0].getRepositoryId();
  DLFolder dlFolder=DLFolderServiceUtil.addFolder(_group.getGroupId(),_group.getGroupId(),false,DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,"Folder","Folder",new ServiceContext());
  repositories[1]=RepositoryLocalServiceUtil.addRepository(TestPropsValues.getUserId(),_group.getGroupId(),classNameId,dlFolder.getFolderId(),"Test 2","Test 2",PortletKeys.DOCUMENT_LIBRARY,new UnicodeProperties(),hidden,new ServiceContext());
  repositoryIds[1]=repositories[1].getRepositoryId();
  if (hidden) {
    Assert.assertEquals(initialMountFolders,DLFolderServiceUtil.getMountFoldersCount(_group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
  }
 else {
    Assert.assertEquals(initialMountFolders + 1,DLFolderServiceUtil.getMountFoldersCount(_group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
  }
  RepositoryLocalServiceUtil.deleteRepositories(_group.getGroupId());
  for (  long repositoryId : repositoryIds) {
    try {
      RepositoryServiceUtil.getLocalRepositoryImpl(repositoryId);
      Assert.fail("Should not be able to access repository " + repositoryId);
    }
 catch (    Exception e) {
    }
  }
  Assert.assertEquals(initialMountFolders,DLFolderServiceUtil.getMountFoldersCount(_group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID));
}

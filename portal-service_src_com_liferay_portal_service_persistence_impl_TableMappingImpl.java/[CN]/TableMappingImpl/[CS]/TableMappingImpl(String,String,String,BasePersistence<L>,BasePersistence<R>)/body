{
  this.leftColumnName=leftColumnName;
  this.rightColumnName=rightColumnName;
  this.leftBasePersistence=leftBasePersistence;
  this.rightBasePersistence=rightBasePersistence;
  DataSource dataSource=leftBasePersistence.getDataSource();
  addMappingSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"INSERT INTO " + mappingTableName + " ("+ leftColumnName+ ", "+ rightColumnName+ ") VALUES (?, ?)",new int[]{java.sql.Types.BIGINT,java.sql.Types.BIGINT});
  deleteMappingSqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + mappingTableName + " WHERE "+ leftColumnName+ " = ? AND "+ rightColumnName+ " = ?",new int[]{java.sql.Types.BIGINT,java.sql.Types.BIGINT});
  deleteMappingsByLeftPrimaryKeySqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + mappingTableName + " WHERE "+ leftColumnName+ " = ?",new int[]{java.sql.Types.BIGINT});
  deleteMappingsByRightPrimaryKeySqlUpdate=SqlUpdateFactoryUtil.getSqlUpdate(dataSource,"DELETE FROM " + mappingTableName + " WHERE "+ rightColumnName+ " = ?",new int[]{java.sql.Types.BIGINT});
  getRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery=MappingSqlQueryFactoryUtil.getMappingSqlQuery(dataSource,"SELECT " + rightColumnName + " FROM "+ mappingTableName+ " WHERE "+ leftColumnName+ "=?",new int[]{java.sql.Types.BIGINT},RowMapper.ID);
  getLeftPrimaryKeysByRightPrimaryKeyMappingSqlQuery=MappingSqlQueryFactoryUtil.getMappingSqlQuery(dataSource,"SELECT " + leftColumnName + " FROM "+ mappingTableName+ " WHERE "+ rightColumnName+ "=?",new int[]{java.sql.Types.BIGINT},RowMapper.ID);
  leftToRightPortalCache=MultiVMPoolUtil.getCache(mappingTableName + "-Left->Right");
  rightToLeftPortalCache=MultiVMPoolUtil.getCache(mappingTableName + "-Right->Left");
}

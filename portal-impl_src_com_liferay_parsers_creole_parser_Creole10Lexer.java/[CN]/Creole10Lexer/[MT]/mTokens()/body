{
  int alt4=57;
  int LA4_0=input.LA(1);
  if ((LA4_0 == ':')) {
    int LA4_1=input.LA(2);
    if ((LA4_1 == '/')) {
      alt4=41;
    }
 else {
      alt4=1;
    }
  }
 else   if ((LA4_0 == 'C')) {
    alt4=2;
  }
 else   if ((LA4_0 == '2')) {
    alt4=3;
  }
 else   if ((LA4_0 == 'D')) {
    alt4=4;
  }
 else   if ((LA4_0 == 'o')) {
    alt4=5;
  }
 else   if ((LA4_0 == 'k')) {
    alt4=6;
  }
 else   if ((LA4_0 == 'u')) {
    alt4=7;
  }
 else   if ((LA4_0 == 'W')) {
    alt4=8;
  }
 else   if ((LA4_0 == 'i')) {
    alt4=9;
  }
 else   if ((LA4_0 == 'F')) {
    alt4=10;
  }
 else   if ((LA4_0 == 'l')) {
    alt4=11;
  }
 else   if ((LA4_0 == 'c')) {
    alt4=12;
  }
 else   if ((LA4_0 == 'r')) {
    alt4=13;
  }
 else   if ((LA4_0 == 'G')) {
    alt4=14;
  }
 else   if ((LA4_0 == 'g')) {
    alt4=15;
  }
 else   if ((LA4_0 == 'e')) {
    alt4=16;
  }
 else   if ((LA4_0 == 'J')) {
    alt4=17;
  }
 else   if ((LA4_0 == 'S')) {
    alt4=18;
  }
 else   if ((LA4_0 == 'P')) {
    alt4=19;
  }
 else   if ((LA4_0 == 'M')) {
    alt4=20;
  }
 else   if ((LA4_0 == 'a')) {
    alt4=21;
  }
 else   if ((LA4_0 == 't')) {
    alt4=22;
  }
 else   if ((LA4_0 == 'b')) {
    alt4=23;
  }
 else   if ((LA4_0 == 'd')) {
    alt4=24;
  }
 else   if ((LA4_0 == 'n')) {
    alt4=25;
  }
 else   if ((LA4_0 == 'O')) {
    alt4=26;
  }
 else   if ((LA4_0 == 'm')) {
    alt4=27;
  }
 else   if ((LA4_0 == 's')) {
    alt4=28;
  }
 else   if ((LA4_0 == 'h')) {
    alt4=29;
  }
 else   if ((LA4_0 == 'p')) {
    alt4=30;
  }
 else   if ((LA4_0 == 'R')) {
    alt4=31;
  }
 else   if ((LA4_0 == 'x')) {
    alt4=32;
  }
 else   if ((LA4_0 == 'T')) {
    alt4=33;
  }
 else   if ((LA4_0 == 'y')) {
    alt4=34;
  }
 else   if ((LA4_0 == 'U')) {
    alt4=35;
  }
 else   if ((LA4_0 == 'X')) {
    alt4=36;
  }
 else   if ((LA4_0 == '~')) {
    alt4=37;
  }
 else   if ((LA4_0 == '\r')) {
switch (input.LA(2)) {
case '}':
{
        alt4=38;
      }
    break;
case '\n':
{
    int LA4_94=input.LA(3);
    if ((LA4_94 == '}')) {
      alt4=38;
    }
 else {
      alt4=39;
    }
  }
break;
default :
alt4=39;
}
}
 else if ((LA4_0 == '\n')) {
int LA4_39=input.LA(2);
if ((LA4_39 == '}')) {
alt4=38;
}
 else {
alt4=39;
}
}
 else if ((LA4_0 == '\t' || LA4_0 == ' ')) {
alt4=40;
}
 else if ((LA4_0 == '/')) {
int LA4_41=input.LA(2);
if ((LA4_41 == '/')) {
alt4=42;
}
 else {
alt4=55;
}
}
 else if ((LA4_0 == '{')) {
int LA4_42=input.LA(2);
if ((LA4_42 == '{')) {
int LA4_98=input.LA(3);
if ((LA4_98 == '{')) {
alt4=43;
}
 else {
alt4=47;
}
}
 else {
alt4=57;
}
}
 else if ((LA4_0 == '}')) {
int LA4_43=input.LA(2);
if ((LA4_43 == '}')) {
int LA4_99=input.LA(3);
if ((LA4_99 == '}')) {
alt4=44;
}
 else {
alt4=48;
}
}
 else {
alt4=57;
}
}
 else if ((LA4_0 == '[')) {
int LA4_44=input.LA(2);
if ((LA4_44 == '[')) {
alt4=45;
}
 else {
alt4=57;
}
}
 else if ((LA4_0 == ']')) {
int LA4_45=input.LA(2);
if ((LA4_45 == ']')) {
alt4=46;
}
 else {
alt4=57;
}
}
 else if ((LA4_0 == '\\')) {
int LA4_46=input.LA(2);
if ((LA4_46 == '\\')) {
alt4=49;
}
 else {
alt4=57;
}
}
 else if ((LA4_0 == '=')) {
alt4=50;
}
 else if ((LA4_0 == '|')) {
alt4=51;
}
 else if ((LA4_0 == '#')) {
alt4=52;
}
 else if ((LA4_0 == '-')) {
alt4=53;
}
 else if ((LA4_0 == '*')) {
alt4=54;
}
 else if ((LA4_0 == '@')) {
int LA4_52=input.LA(2);
if ((LA4_52 == '@')) {
alt4=56;
}
 else {
alt4=57;
}
}
 else if (((LA4_0 >= '\u0000' && LA4_0 <= '\b') || (LA4_0 >= '\u000B' && LA4_0 <= '\f') || (LA4_0 >= '\u000E' && LA4_0 <= '\u001F')|| (LA4_0 >= '!' && LA4_0 <= '\"')|| (LA4_0 >= '$' && LA4_0 <= ')')|| (LA4_0 >= '+' && LA4_0 <= ',')|| LA4_0 == '.' || (LA4_0 >= '0' && LA4_0 <= '1') || (LA4_0 >= '3' && LA4_0 <= '9') || (LA4_0 >= ';' && LA4_0 <= '<') || (LA4_0 >= '>' && LA4_0 <= '?') || (LA4_0 >= 'A' && LA4_0 <= 'B') || LA4_0 == 'E' || (LA4_0 >= 'H' && LA4_0 <= 'I') || (LA4_0 >= 'K' && LA4_0 <= 'L') || LA4_0 == 'N' || LA4_0 == 'Q' || LA4_0 == 'V' || (LA4_0 >= 'Y' && LA4_0 <= 'Z') || (LA4_0 >= '^' && LA4_0 <= '`') || LA4_0 == 'f' || LA4_0 == 'j' || LA4_0 == 'q' || (LA4_0 >= 'v' && LA4_0 <= 'w') || LA4_0 == 'z' || (LA4_0 >= '\u007F' && LA4_0 <= '\uFFFE'))) {
alt4=57;
}
 else {
NoViableAltException nvae=new NoViableAltException("1:1: Tokens : ( T40 | T41 | T42 | T43 | T44 | T45 | T46 | T47 | T48 | T49 | T50 | T51 | T52 | T53 | T54 | T55 | T56 | T57 | T58 | T59 | T60 | T61 | T62 | T63 | T64 | T65 | T66 | T67 | T68 | T69 | T70 | T71 | T72 | T73 | T74 | T75 | ESCAPE | NOWIKI_BLOCK_CLOSE | NEWLINE | BLANKS | COLON_SLASH | ITAL | NOWIKI_OPEN | NOWIKI_CLOSE | LINK_OPEN | LINK_CLOSE | IMAGE_OPEN | IMAGE_CLOSE | FORCED_LINEBREAK | EQUAL | PIPE | POUND | DASH | STAR | SLASH | EXTENSION | INSIGNIFICANT_CHAR );",4,0,input);
throw nvae;
}
switch (alt4) {
case 1:
{
mT40();
}
break;
case 2:
{
mT41();
}
break;
case 3:
{
mT42();
}
break;
case 4:
{
mT43();
}
break;
case 5:
{
mT44();
}
break;
case 6:
{
mT45();
}
break;
case 7:
{
mT46();
}
break;
case 8:
{
mT47();
}
break;
case 9:
{
mT48();
}
break;
case 10:
{
mT49();
}
break;
case 11:
{
mT50();
}
break;
case 12:
{
mT51();
}
break;
case 13:
{
mT52();
}
break;
case 14:
{
mT53();
}
break;
case 15:
{
mT54();
}
break;
case 16:
{
mT55();
}
break;
case 17:
{
mT56();
}
break;
case 18:
{
mT57();
}
break;
case 19:
{
mT58();
}
break;
case 20:
{
mT59();
}
break;
case 21:
{
mT60();
}
break;
case 22:
{
mT61();
}
break;
case 23:
{
mT62();
}
break;
case 24:
{
mT63();
}
break;
case 25:
{
mT64();
}
break;
case 26:
{
mT65();
}
break;
case 27:
{
mT66();
}
break;
case 28:
{
mT67();
}
break;
case 29:
{
mT68();
}
break;
case 30:
{
mT69();
}
break;
case 31:
{
mT70();
}
break;
case 32:
{
mT71();
}
break;
case 33:
{
mT72();
}
break;
case 34:
{
mT73();
}
break;
case 35:
{
mT74();
}
break;
case 36:
{
mT75();
}
break;
case 37:
{
mESCAPE();
}
break;
case 38:
{
mNOWIKI_BLOCK_CLOSE();
}
break;
case 39:
{
mNEWLINE();
}
break;
case 40:
{
mBLANKS();
}
break;
case 41:
{
mCOLON_SLASH();
}
break;
case 42:
{
mITAL();
}
break;
case 43:
{
mNOWIKI_OPEN();
}
break;
case 44:
{
mNOWIKI_CLOSE();
}
break;
case 45:
{
mLINK_OPEN();
}
break;
case 46:
{
mLINK_CLOSE();
}
break;
case 47:
{
mIMAGE_OPEN();
}
break;
case 48:
{
mIMAGE_CLOSE();
}
break;
case 49:
{
mFORCED_LINEBREAK();
}
break;
case 50:
{
mEQUAL();
}
break;
case 51:
{
mPIPE();
}
break;
case 52:
{
mPOUND();
}
break;
case 53:
{
mDASH();
}
break;
case 54:
{
mSTAR();
}
break;
case 55:
{
mSLASH();
}
break;
case 56:
{
mEXTENSION();
}
break;
case 57:
{
mINSIGNIFICANT_CHAR();
}
break;
}
}

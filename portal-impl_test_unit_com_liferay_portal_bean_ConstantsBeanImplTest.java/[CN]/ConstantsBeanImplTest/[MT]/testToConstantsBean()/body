{
  String jvmClassPath=ClassPathUtil.getJVMClassPath(true);
  URL[] urls=null;
  try {
    urls=ClassPathUtil.getClassPathURLs(jvmClassPath);
  }
 catch (  MalformedURLException murle) {
    throw new RuntimeException(murle);
  }
  ClassLoader classLoader1=new URLClassLoader(urls,null);
  Class<?> constantsClass1=classLoader1.loadClass(Constants.class.getName());
  ConstantsBeanImpl constantsBeanImpl=new ConstantsBeanImpl();
  Object constantsBean1=constantsBeanImpl.toConstantsBean(constantsClass1);
  Class<?> constantsBeanClass1=constantsBean1.getClass();
  Assert.assertSame(classLoader1,constantsBeanClass1.getClassLoader());
  Map<EqualityWeakReference<Class<?>>,Reference<?>> constantsBeans=ConstantsBeanImpl.constantsBeans;
  Assert.assertEquals(1,constantsBeans.size());
  Assert.assertSame(constantsBean1,constantsBeanImpl.toConstantsBean(constantsClass1));
  Assert.assertEquals(1,constantsBeans.size());
  ClassLoader classLoader2=new URLClassLoader(urls,null);
  Class<?> constantsClass2=classLoader2.loadClass(Constants.class.getName());
  Object constantsBean2=constantsBeanImpl.toConstantsBean(constantsClass2);
  Assert.assertNotSame(constantsBean1,constantsBean2);
  Assert.assertNotSame(constantsBeanClass1,constantsBean2.getClass());
  Assert.assertEquals(2,constantsBeans.size());
  Assert.assertSame(constantsBean2,constantsBeanImpl.toConstantsBean(constantsClass2));
  Assert.assertEquals(2,constantsBeans.size());
  classLoader1=null;
  constantsClass1=null;
  constantsBean1=null;
  constantsBeanClass1=null;
  long startTime=System.currentTimeMillis();
  while ((System.currentTimeMillis() - startTime) < 100) {
    System.gc();
    Thread.sleep(1);
    Assert.assertSame(constantsBean2,constantsBeanImpl.toConstantsBean(constantsClass2));
    if (constantsBeans.size() == 1) {
      break;
    }
  }
  Assert.assertEquals(1,constantsBeans.size());
}

{
  FinderPath finderPath=FINDER_PATH_COUNT_BY_G_A_V_E_E_L;
  Object[] finderArgs=new Object[]{groupId,articleId,version,elInstanceId,elName,languageId};
  Long count=(Long)finderCache.getResult(finderPath,finderArgs,this);
  if (count == null) {
    StringBundler query=new StringBundler(7);
    query.append(_SQL_COUNT_JOURNALARTICLEIMAGE_WHERE);
    query.append(_FINDER_COLUMN_G_A_V_E_E_L_GROUPID_2);
    boolean bindArticleId=false;
    if (articleId == null) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ARTICLEID_1);
    }
 else     if (articleId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ARTICLEID_3);
    }
 else {
      bindArticleId=true;
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ARTICLEID_2);
    }
    query.append(_FINDER_COLUMN_G_A_V_E_E_L_VERSION_2);
    boolean bindElInstanceId=false;
    if (elInstanceId == null) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELINSTANCEID_1);
    }
 else     if (elInstanceId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELINSTANCEID_3);
    }
 else {
      bindElInstanceId=true;
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELINSTANCEID_2);
    }
    boolean bindElName=false;
    if (elName == null) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELNAME_1);
    }
 else     if (elName.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELNAME_3);
    }
 else {
      bindElName=true;
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_ELNAME_2);
    }
    boolean bindLanguageId=false;
    if (languageId == null) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_LANGUAGEID_1);
    }
 else     if (languageId.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_LANGUAGEID_3);
    }
 else {
      bindLanguageId=true;
      query.append(_FINDER_COLUMN_G_A_V_E_E_L_LANGUAGEID_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(groupId);
      if (bindArticleId) {
        qPos.add(articleId);
      }
      qPos.add(version);
      if (bindElInstanceId) {
        qPos.add(elInstanceId);
      }
      if (bindElName) {
        qPos.add(elName);
      }
      if (bindLanguageId) {
        qPos.add(languageId);
      }
      count=(Long)q.uniqueResult();
      finderCache.putResult(finderPath,finderArgs,count);
    }
 catch (    Exception e) {
      finderCache.removeResult(finderPath,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  return count.intValue();
}

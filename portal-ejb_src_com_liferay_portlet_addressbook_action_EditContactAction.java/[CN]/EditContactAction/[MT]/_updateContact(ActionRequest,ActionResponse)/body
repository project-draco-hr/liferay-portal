{
  String contactId=ParamUtil.getString(req,"contact_id");
  String firstName=ParamUtil.getString(req,"contact_first_name");
  String middleName=ParamUtil.getString(req,"contact_middle_name");
  String lastName=ParamUtil.getString(req,"contact_last_name");
  String nickName=ParamUtil.getString(req,"contact_nick_name");
  String emailAddress=ParamUtil.getString(req,"contact_email_address");
  String hStreet=ParamUtil.getString(req,"contact_home_street");
  String hCity=ParamUtil.getString(req,"contact_home_city");
  String hState=ParamUtil.getString(req,"contact_home_state");
  String hZip=ParamUtil.getString(req,"contact_home_zip");
  String hCountry=ParamUtil.getString(req,"contact_home_country");
  String hPhone=ParamUtil.getString(req,"contact_home_phone");
  String hFax=ParamUtil.getString(req,"contact_home_fax");
  String hCell=ParamUtil.getString(req,"contact_home_cell");
  String hPager=ParamUtil.getString(req,"contact_home_pager");
  String hTollFree=ParamUtil.getString(req,"contact_home_toll_free");
  String hEmailAddress=ParamUtil.getString(req,"contact_home_email_address");
  String bCompany=ParamUtil.getString(req,"contact_biz_company");
  String bStreet=ParamUtil.getString(req,"contact_biz_street");
  String bCity=ParamUtil.getString(req,"contact_biz_city");
  String bState=ParamUtil.getString(req,"contact_biz_state");
  String bZip=ParamUtil.getString(req,"contact_biz_zip");
  String bCountry=ParamUtil.getString(req,"contact_biz_country");
  String bPhone=ParamUtil.getString(req,"contact_biz_phone");
  String bFax=ParamUtil.getString(req,"contact_biz_fax");
  String bCell=ParamUtil.getString(req,"contact_biz_cell");
  String bPager=ParamUtil.getString(req,"contact_biz_pager");
  String bTollFree=ParamUtil.getString(req,"contact_biz_toll_free");
  String bEmailAddress=ParamUtil.getString(req,"contact_biz_email_address");
  String employeeNumber=ParamUtil.getString(req,"contact_employee_number");
  String jobTitle=ParamUtil.getString(req,"contact_job_title");
  String jobClass=ParamUtil.getString(req,"contact_job_class");
  String hoursOfOperation=ParamUtil.getString(req,"contact_hop");
  String bdMonth=req.getParameter("contact_birthday_month");
  String bdDay=req.getParameter("contact_birthday_day");
  String bdYear=req.getParameter("contact_birthday_year");
  Date bdDate=null;
  if ((Validator.isNumber(bdMonth)) && (Validator.isNumber(bdDay)) && (Validator.isNumber(bdYear))) {
    Calendar birthday=new GregorianCalendar();
    birthday.set(Calendar.MONTH,Integer.parseInt(bdMonth));
    birthday.set(Calendar.DATE,Integer.parseInt(bdDay));
    birthday.set(Calendar.YEAR,Integer.parseInt(bdYear));
    bdDate=birthday.getTime();
  }
  String timeZoneId=ParamUtil.getString(req,"contact_time_zone_id");
  String instantMessenger=ParamUtil.getString(req,"contact_im");
  String website=ParamUtil.getString(req,"contact_website");
  String comments=ParamUtil.getString(req,"contact_comments");
  if (Validator.isNull(contactId)) {
    ABContactServiceUtil.addContact(firstName,middleName,lastName,nickName,emailAddress,hStreet,hCity,hState,hZip,hCountry,hPhone,hFax,hCell,hPager,hTollFree,hEmailAddress,bCompany,bStreet,bCity,bState,bZip,bCountry,bPhone,bFax,bCell,bPager,bTollFree,bEmailAddress,employeeNumber,jobTitle,jobClass,hoursOfOperation,bdDate,timeZoneId,instantMessenger,website,comments);
  }
 else {
    ABContactServiceUtil.updateContact(contactId,firstName,middleName,lastName,nickName,emailAddress,hStreet,hCity,hState,hZip,hCountry,hPhone,hFax,hCell,hPager,hTollFree,hEmailAddress,bCompany,bStreet,bCity,bState,bZip,bCountry,bPhone,bFax,bCell,bPager,bTollFree,bEmailAddress,employeeNumber,jobTitle,jobClass,hoursOfOperation,bdDate,timeZoneId,instantMessenger,website,comments);
  }
  res.sendRedirect(ParamUtil.getString(req,"redirect"));
}

{
  GenericEntry entry=new GenericEntry();
  entry.addProperty("user",destinationUser);
  entry.addProperty("key",domain);
  entry.addProperty("from",from);
  entry.addProperty("to",to);
  entry.addProperty("subject",subject);
  entry.addProperty("hasTheWord",hasTheWord);
  entry.addProperty("doesNotHaveTheWord",doesNotHaveTheWord);
  entry.addProperty("hasAttachment",hasAttachment);
  entry.addProperty("shouldMarkAsRead",shouldMarkAsRead);
  entry.addProperty("shouldArchive",shouldArchive);
  entry.addProperty("label",label);
  entry.addProperty("forwardTo",forwardTo);
  entry.addProperty("neverSpam",neverSpam);
  entry.addProperty("shouldStar",shouldStar);
  entry.addProperty("shouldTrash",shouldTrash);
  LOGGER.log(Level.INFO,"Inserting 1 gmail filter.");
  GenericEntry[] entries=new GenericEntry[ITEMS_TO_BATCH];
  for (int i=0; i < ITEMS_TO_BATCH; i++) {
    GenericEntry newEntry=new GenericEntry();
    newEntry.addProperty("user",destinationUser);
    newEntry.addProperty("key",domain);
    newEntry.addProperty("from",from);
    newEntry.addProperty("to",to);
    newEntry.addProperty("subject",subject);
    newEntry.addProperty("hasTheWord",hasTheWord);
    newEntry.addProperty("doesNotHaveTheWord",doesNotHaveTheWord);
    newEntry.addProperty("hasAttachment",hasAttachment);
    newEntry.addProperty("shouldMarkAsRead",shouldMarkAsRead);
    newEntry.addProperty("shouldArchive",shouldArchive);
    newEntry.addProperty("label",String.valueOf(i));
    entries[i]=newEntry;
  }
  try {
    LOGGER.log(Level.INFO,"Inserting 1 Gmail filter.");
    GenericEntry resultEntry=insertGmailFilter(entry);
    LOGGER.log(Level.INFO,"Insert 1 filter succeeded.");
    LOGGER.log(Level.INFO,"Batch inserting " + ITEMS_TO_BATCH + " Gmail filters");
    GenericFeed resultFeed=batchInsertGmailFilters(entries);
    int failedInsertions=0, successfulInsertions=0;
    for (    GenericEntry returnedEntry : resultFeed.getEntries()) {
      if (BatchUtils.isFailure(returnedEntry)) {
        BatchStatus status=BatchUtils.getBatchStatus(returnedEntry);
        LOGGER.log(Level.SEVERE,"Entry " + BatchUtils.getBatchId(returnedEntry) + " failed insertion: "+ status.getCode()+ " "+ status.getReason());
        failedInsertions++;
      }
 else {
        successfulInsertions++;
      }
    }
    LOGGER.log(Level.INFO,"Batch insertion: " + Integer.toString(successfulInsertions) + " succeeded, "+ Integer.toString(failedInsertions)+ " failed.");
  }
 catch (  IOException e) {
    LOGGER.log(Level.SEVERE,"Caught IOException: " + e.toString());
    e.printStackTrace();
  }
catch (  ServiceException e) {
    LOGGER.log(Level.SEVERE,"Caught ServiceException: " + e.toString());
    e.printStackTrace();
  }
}

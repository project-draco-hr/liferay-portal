{
  StringBundler sb=new StringBundler(13);
  if (throwable instanceof InvocationTargetException) {
    throwable=throwable.getCause();
  }
  String throwableMessage=throwable.getMessage();
  if (Validator.isNull(throwableMessage)) {
    throwableMessage=throwable.toString();
  }
  sb.append(StringPool.QUOTE);
  sb.append(throwableMessage);
  sb.append(StringPool.QUOTE);
  sb.append(StringPool.COMMA_AND_SPACE);
  sb.append("\"error\": ");
  JSONObject errorJSONObject=JSONFactoryUtil.createJSONObject();
  errorJSONObject.put("message",throwableMessage);
  errorJSONObject.put("type",ClassUtil.getClassName(throwable));
  sb.append(errorJSONObject.toString());
  sb.append(StringPool.COMMA_AND_SPACE);
  sb.append("\"throwable\": \"");
  sb.append(throwable.toString());
  sb.append(StringPool.QUOTE);
  if (throwable.getCause() == null) {
    return StringUtil.unquote(sb.toString());
  }
  sb.append(StringPool.COMMA_AND_SPACE);
  sb.append("\"rootCause\": ");
  Throwable rootCauseThrowable=throwable;
  while (rootCauseThrowable.getCause() != null) {
    rootCauseThrowable=rootCauseThrowable.getCause();
  }
  JSONObject rootCauseJSONObject=JSONFactoryUtil.createJSONObject();
  throwableMessage=rootCauseThrowable.getMessage();
  if (Validator.isNull(throwableMessage)) {
    throwableMessage=rootCauseThrowable.toString();
  }
  rootCauseJSONObject.put("message",throwableMessage);
  rootCauseJSONObject.put("type",ClassUtil.getClassName(rootCauseThrowable));
  sb.append(rootCauseJSONObject);
  return StringUtil.unquote(sb.toString());
}

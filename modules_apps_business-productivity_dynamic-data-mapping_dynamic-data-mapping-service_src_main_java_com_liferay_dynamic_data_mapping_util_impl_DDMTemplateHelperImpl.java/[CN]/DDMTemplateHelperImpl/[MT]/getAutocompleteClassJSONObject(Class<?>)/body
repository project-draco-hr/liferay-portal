{
  JSONObject typeJSONObject=JSONFactoryUtil.createJSONObject();
  for (  Field field : clazz.getFields()) {
    JSONObject fieldJSONObject=getAutocompleteVariableJSONObject(field.getType());
    typeJSONObject.put(field.getName(),fieldJSONObject);
  }
  for (  Method method : clazz.getMethods()) {
    JSONObject methodJSONObject=JSONFactoryUtil.createJSONObject();
    JSONArray parametersTypesArray=JSONFactoryUtil.createJSONArray();
    Class<?>[] parameterTypes=method.getParameterTypes();
    for (    Class<?> parameterType : parameterTypes) {
      parametersTypesArray.put(parameterType.getCanonicalName());
    }
    methodJSONObject.put("argumentTypes",parametersTypesArray);
    Class<?> returnTypeClass=method.getReturnType();
    methodJSONObject.put("returnType",returnTypeClass.getName());
    methodJSONObject.put("type","Method");
    typeJSONObject.put(method.getName(),methodJSONObject);
  }
  return typeJSONObject;
}

{
  context.importPermissions("com.liferay.portlet.wiki",context.getSourceGroupId(),context.getScopeGroupId());
  if (Validator.isNull(data)) {
    return null;
  }
  Document document=SAXReaderUtil.read(data);
  Element rootElement=document.getRootElement();
  Element nodesElement=rootElement.element("nodes");
  for (  Element nodeElement : nodesElement.elements("node")) {
    String path=nodeElement.attributeValue("path");
    if (!context.isPathNotProcessed(path)) {
      continue;
    }
    WikiNode node=(WikiNode)context.getZipEntryAsObject(path);
    WikiPortletDataHandlerImpl.importNode(context,node);
  }
  Element pagesElement=rootElement.element("pages");
  for (  Element pageElement : pagesElement.elements("page")) {
    String path=pageElement.attributeValue("path");
    if (!context.isPathNotProcessed(path)) {
      continue;
    }
    WikiPage page=(WikiPage)context.getZipEntryAsObject(path);
    WikiPortletDataHandlerImpl.importPage(context,pageElement,page);
  }
  Map<Long,Long> nodePKs=(Map<Long,Long>)context.getNewPrimaryKeysMap(WikiNode.class);
  for (  long nodeId : nodePKs.values()) {
    WikiCacheUtil.clearCache(nodeId);
  }
  long nodeId=GetterUtil.getLong(preferences.getValue("node-id",StringPool.BLANK));
  if (nodeId > 0) {
    nodeId=MapUtil.getLong(nodePKs,nodeId,nodeId);
    preferences.setValue("node-id",String.valueOf(nodeId));
  }
  return preferences;
}

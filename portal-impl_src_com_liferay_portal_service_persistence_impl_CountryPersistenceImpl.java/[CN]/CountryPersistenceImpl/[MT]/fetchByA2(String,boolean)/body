{
  Object[] finderArgs=new Object[]{a2};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_A2,finderArgs,this);
  }
  if (result instanceof Country) {
    Country country=(Country)result;
    if (!Objects.equals(a2,country.getA2())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(3);
    query.append(_SQL_SELECT_COUNTRY_WHERE);
    boolean bindA2=false;
    if (a2 == null) {
      query.append(_FINDER_COLUMN_A2_A2_1);
    }
 else     if (a2.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_A2_A2_3);
    }
 else {
      bindA2=true;
      query.append(_FINDER_COLUMN_A2_A2_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (bindA2) {
        qPos.add(a2);
      }
      List<Country> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_A2,finderArgs,list);
      }
 else {
        Country country=list.get(0);
        result=country;
        cacheResult(country);
        if ((country.getA2() == null) || !country.getA2().equals(a2)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_A2,finderArgs,country);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_A2,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (Country)result;
  }
}

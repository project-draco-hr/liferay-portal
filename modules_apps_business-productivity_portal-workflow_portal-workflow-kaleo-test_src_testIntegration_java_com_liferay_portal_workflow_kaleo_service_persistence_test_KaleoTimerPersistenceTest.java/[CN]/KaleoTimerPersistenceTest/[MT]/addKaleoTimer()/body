{
  long pk=RandomTestUtil.nextLong();
  KaleoTimer kaleoTimer=_persistence.create(pk);
  kaleoTimer.setGroupId(RandomTestUtil.nextLong());
  kaleoTimer.setCompanyId(RandomTestUtil.nextLong());
  kaleoTimer.setUserId(RandomTestUtil.nextLong());
  kaleoTimer.setUserName(RandomTestUtil.randomString());
  kaleoTimer.setCreateDate(RandomTestUtil.nextDate());
  kaleoTimer.setModifiedDate(RandomTestUtil.nextDate());
  kaleoTimer.setKaleoClassName(RandomTestUtil.randomString());
  kaleoTimer.setKaleoClassPK(RandomTestUtil.nextLong());
  kaleoTimer.setKaleoDefinitionId(RandomTestUtil.nextLong());
  kaleoTimer.setName(RandomTestUtil.randomString());
  kaleoTimer.setBlocking(RandomTestUtil.randomBoolean());
  kaleoTimer.setDescription(RandomTestUtil.randomString());
  kaleoTimer.setDuration(RandomTestUtil.nextDouble());
  kaleoTimer.setScale(RandomTestUtil.randomString());
  kaleoTimer.setRecurrenceDuration(RandomTestUtil.nextDouble());
  kaleoTimer.setRecurrenceScale(RandomTestUtil.randomString());
  _kaleoTimers.add(_persistence.update(kaleoTimer));
  return kaleoTimer;
}

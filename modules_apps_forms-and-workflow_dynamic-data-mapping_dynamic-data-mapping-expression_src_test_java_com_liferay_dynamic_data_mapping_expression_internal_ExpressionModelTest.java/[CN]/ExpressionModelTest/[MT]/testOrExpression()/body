{
  DDMExpressionImpl<Boolean> expression=new DDMExpressionImpl<>("(-3 < Var1) || (not equals(Var2,sum(Var3,Var4)))",Boolean.class);
  Expression expressionModel=expression.getModel();
  Assert.assertEquals(OrExpression.class,expressionModel.getClass());
  OrExpression orExpression=(OrExpression)expressionModel;
  Expression leftOperandExpression=orExpression.getLeftOperandExpression();
  Expression rightOperandExpression=orExpression.getRightOperandExpression();
  Assert.assertEquals(ComparisonExpression.class,leftOperandExpression.getClass());
  Assert.assertEquals(NotExpression.class,rightOperandExpression.getClass());
  ComparisonExpression comparisonExpression=(ComparisonExpression)leftOperandExpression;
  Expression leftOperandExpression2=comparisonExpression.getLeftOperandExpression();
  Expression rightOperandExpression2=comparisonExpression.getRightOperandExpression();
  Assert.assertEquals("<",comparisonExpression.getOperator());
  Assert.assertEquals(MinusExpression.class,leftOperandExpression2.getClass());
  Assert.assertEquals(Term.class,rightOperandExpression2.getClass());
  MinusExpression minusExpression=(MinusExpression)leftOperandExpression2;
  Expression minusOperandExpression=minusExpression.getOperandExpression();
  Assert.assertEquals(Term.class,minusOperandExpression.getClass());
  Term term=(Term)minusOperandExpression;
  Assert.assertEquals("3",term.getValue());
  term=(Term)rightOperandExpression2;
  Assert.assertEquals("Var1",term.getValue());
  NotExpression notExpression=(NotExpression)rightOperandExpression;
  Expression notOperandExpression=notExpression.getOperandExpression();
  Assert.assertEquals(FunctionCallExpression.class,notOperandExpression.getClass());
  FunctionCallExpression functionCallExpression=(FunctionCallExpression)notOperandExpression;
  Assert.assertEquals("equals",functionCallExpression.getFunctionName());
  Assert.assertEquals(2,functionCallExpression.getArity());
  List<Expression> parameterExpressions=functionCallExpression.getParameterExpressions();
  Assert.assertEquals(2,parameterExpressions.size());
  Expression parameterExpression1=parameterExpressions.get(0);
  Assert.assertEquals(Term.class,parameterExpression1.getClass());
  term=(Term)parameterExpression1;
  Assert.assertEquals("Var2",term.getValue());
  Expression parameterExpression2=parameterExpressions.get(1);
  Assert.assertEquals(FunctionCallExpression.class,parameterExpression2.getClass());
  FunctionCallExpression functionCallExpression2=(FunctionCallExpression)parameterExpression2;
  Assert.assertEquals("sum",functionCallExpression2.getFunctionName());
  Assert.assertEquals(2,functionCallExpression2.getArity());
  List<Expression> parameterExpressions2=functionCallExpression2.getParameterExpressions();
  Assert.assertEquals(2,parameterExpressions2.size());
  Expression parameterExpression3=parameterExpressions2.get(0);
  Assert.assertEquals(Term.class,parameterExpression3.getClass());
  term=(Term)parameterExpression3;
  Assert.assertEquals("Var3",term.getValue());
  Expression parameterExpression4=parameterExpressions2.get(1);
  Assert.assertEquals(Term.class,parameterExpression4.getClass());
  term=(Term)parameterExpression4;
  Assert.assertEquals("Var4",term.getValue());
}

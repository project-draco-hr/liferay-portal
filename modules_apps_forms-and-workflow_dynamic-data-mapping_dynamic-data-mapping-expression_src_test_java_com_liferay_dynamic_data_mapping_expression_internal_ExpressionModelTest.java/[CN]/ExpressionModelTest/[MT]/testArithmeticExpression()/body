{
  DDMExpressionImpl<Double> expression=new DDMExpressionImpl<>("a + b * c - d",Double.class);
  Expression expressionModel=expression.getModel();
  Assert.assertEquals(ArithmeticExpression.class,expressionModel.getClass());
  ArithmeticExpression arithmeticExpression=(ArithmeticExpression)expressionModel;
  Expression leftOperandExpression=arithmeticExpression.getLeftOperandExpression();
  Expression rightOperandExpression=arithmeticExpression.getRightOperandExpression();
  Assert.assertEquals(ArithmeticExpression.class,leftOperandExpression.getClass());
  Assert.assertEquals(Term.class,rightOperandExpression.getClass());
  Assert.assertEquals("-",arithmeticExpression.getOperator());
  Term term=(Term)rightOperandExpression;
  Assert.assertEquals("d",term.getValue());
  ArithmeticExpression arithmeticExpression2=(ArithmeticExpression)leftOperandExpression;
  Expression leftOperandExpression2=arithmeticExpression2.getLeftOperandExpression();
  Expression rightOperandExpression2=arithmeticExpression2.getRightOperandExpression();
  Assert.assertEquals(Term.class,leftOperandExpression2.getClass());
  Assert.assertEquals(ArithmeticExpression.class,rightOperandExpression2.getClass());
  Assert.assertEquals("+",arithmeticExpression2.getOperator());
  term=(Term)leftOperandExpression2;
  Assert.assertEquals("a",term.getValue());
  ArithmeticExpression arithmeticExpression3=(ArithmeticExpression)rightOperandExpression2;
  Expression leftOperandExpression3=arithmeticExpression3.getLeftOperandExpression();
  Expression rightOperandExpression3=arithmeticExpression3.getRightOperandExpression();
  Assert.assertEquals(Term.class,leftOperandExpression3.getClass());
  Assert.assertEquals(Term.class,rightOperandExpression3.getClass());
  Assert.assertEquals("*",arithmeticExpression3.getOperator());
  term=(Term)leftOperandExpression3;
  Assert.assertEquals("b",term.getValue());
  term=(Term)rightOperandExpression3;
  Assert.assertEquals("c",term.getValue());
}

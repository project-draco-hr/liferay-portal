{
  long companyId=ServiceTestUtil.nextLong();
  long repositoryId=ServiceTestUtil.nextLong();
  String fileName=ServiceTestUtil.randomString();
  File file=createFile(_DATA_VERSION_1);
  _store.addFile(companyId,repositoryId,fileName,new FileInputStream(file));
  Assert.assertTrue(_store.hasFile(companyId,repositoryId,fileName,Store.VERSION_DEFAULT));
  companyId=ServiceTestUtil.nextLong();
  repositoryId=ServiceTestUtil.nextLong();
  fileName=ServiceTestUtil.randomString();
  _store.addFile(companyId,repositoryId,fileName,new UnsyncByteArrayInputStream(_DATA_VERSION_1));
  Assert.assertTrue(_store.hasFile(companyId,repositoryId,fileName,Store.VERSION_DEFAULT));
  companyId=ServiceTestUtil.nextLong();
  repositoryId=ServiceTestUtil.nextLong();
  fileName=ServiceTestUtil.randomString();
  _store.addFile(companyId,repositoryId,fileName,new ByteArrayInputStream(_DATA_VERSION_1));
  Assert.assertTrue(_store.hasFile(companyId,repositoryId,fileName,Store.VERSION_DEFAULT));
  companyId=ServiceTestUtil.nextLong();
  repositoryId=ServiceTestUtil.nextLong();
  fileName=ServiceTestUtil.randomString();
  _store.addFile(companyId,repositoryId,fileName,new BufferedInputStream(new ByteArrayInputStream(_DATA_VERSION_1)));
  Assert.assertTrue(_store.hasFile(companyId,repositoryId,fileName,Store.VERSION_DEFAULT));
}

{
  List<Group> myPlaces=new UniqueList<Group>();
  try {
    if (isDefaultUser()) {
      return myPlaces;
    }
    LinkedHashMap<String,Object> groupParams=new LinkedHashMap<String,Object>();
    groupParams.put("usersGroups",new Long(getUserId()));
    myPlaces=GroupLocalServiceUtil.search(getCompanyId(),null,null,groupParams,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    List<Organization> userOrgs=getOrganizations();
    for (    Organization organization : userOrgs) {
      myPlaces.add(0,organization.getGroup());
      if (!PropsValues.ORGANIZATIONS_MEMBERSHIP_STRICT) {
        for (        Organization ancestor : organization.getAncestors()) {
          myPlaces.add(0,ancestor.getGroup());
        }
      }
    }
    if (PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED || PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED) {
      Group userGroup=getGroup();
      myPlaces.add(0,userGroup);
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
  return myPlaces;
}

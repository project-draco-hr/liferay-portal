{
  List<JournalArticle> journalArticles=new ArrayList<JournalArticle>();
  long companyId=CompanyThreadLocal.getCompanyId();
  long groupId=atomRequestContext.getLongParameter("groupId");
  if ((companyId <= 0) || (groupId <= 0)) {
    return journalArticles;
  }
  List<Long> folderIds=Collections.emptyList();
  long classNameId=0;
  String keywords=null;
  Double version=null;
  String ddmStructureKey=null;
  String ddmTemplateKey=null;
  Date displayDateGT=null;
  Date displayDateLT=new Date();
  int status=WorkflowConstants.STATUS_APPROVED;
  Date reviewDate=null;
  OrderByComparator<JournalArticle> obc=new ArticleVersionComparator();
  int count=JournalArticleServiceUtil.searchCount(companyId,groupId,folderIds,classNameId,keywords,version,ddmStructureKey,ddmTemplateKey,displayDateGT,displayDateLT,status,reviewDate);
  AtomPager atomPager=new AtomPager(atomRequestContext,count);
  AtomUtil.saveAtomPagerInRequest(atomRequestContext,atomPager);
  journalArticles=JournalArticleServiceUtil.search(companyId,groupId,folderIds,classNameId,keywords,version,ddmStructureKey,ddmTemplateKey,displayDateGT,displayDateLT,status,reviewDate,atomPager.getStart(),atomPager.getEnd() + 1,obc);
  return journalArticles;
}

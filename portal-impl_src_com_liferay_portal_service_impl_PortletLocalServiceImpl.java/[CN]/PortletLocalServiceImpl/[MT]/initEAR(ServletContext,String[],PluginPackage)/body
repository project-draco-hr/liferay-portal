{
  portletLocalService.clearPortletsMap();
  _portletApps.clear();
  _portletsMap.clear();
  _portletIdsByStrutsPath.clear();
  try {
    PortletApp portletApp=getPortletApp(StringPool.BLANK);
    portletApp.setServletContext(servletContext);
    Set<String> servletURLPatterns=_readWebXML(xmls[4]);
    Map<String,Portlet> portletsMap=_readPortletXML(StringPool.BLANK,servletContext,xmls[0],servletURLPatterns,pluginPackage);
    portletsMap.putAll(_readPortletXML(StringPool.BLANK,servletContext,xmls[1],servletURLPatterns,pluginPackage));
    for (    Map.Entry<String,Portlet> entry : portletsMap.entrySet()) {
      _portletsMap.put(entry.getKey(),entry.getValue());
    }
    Set<String> liferayPortletIds=_readLiferayPortletXML(StringPool.BLANK,servletContext,xmls[2],portletsMap);
    liferayPortletIds.addAll(_readLiferayPortletXML(StringPool.BLANK,servletContext,xmls[3],portletsMap));
    for (    String portletId : portletsMap.keySet()) {
      if (_log.isWarnEnabled() && !liferayPortletIds.contains(portletId)) {
        _log.warn("Portlet with the name " + portletId + " is described in portlet.xml but does not "+ "have a matching entry in liferay-portlet.xml");
      }
    }
    for (    String portletId : liferayPortletIds) {
      if (_log.isWarnEnabled() && !portletsMap.containsKey(portletId)) {
        _log.warn("Portlet with the name " + portletId + " is described in liferay-portlet.xml but does "+ "not have a matching entry in portlet.xml");
      }
    }
    Iterator<Map.Entry<String,Portlet>> portletPoolsItr=_portletsMap.entrySet().iterator();
    while (portletPoolsItr.hasNext()) {
      Map.Entry<String,Portlet> entry=portletPoolsItr.next();
      Portlet portletModel=entry.getValue();
      String portletId=PortletProviderUtil.getPortletId(PortalMyAccountApplicationType.MyAccount.CLASS_NAME,PortletProvider.Action.VIEW);
      if (!portletModel.getPortletId().equals(PortletKeys.ADMIN) && !portletModel.getPortletId().equals(portletId) && !portletModel.isInclude()) {
        portletPoolsItr.remove();
      }
    }
    _setSpriteImages(servletContext,portletApp,"/html/icons/");
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

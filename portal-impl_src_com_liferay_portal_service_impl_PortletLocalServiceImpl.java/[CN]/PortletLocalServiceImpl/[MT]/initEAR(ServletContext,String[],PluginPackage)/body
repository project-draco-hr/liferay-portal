{
  _portletAppsPool.clear();
  _portletsPool.clear();
  _companyPortletsPool.clear();
  _portletIdsByStrutsPath.clear();
  _friendlyURLMapperPortlets.clear();
  Map<String,Portlet> portletsPool=_getPortletsPool();
  try {
    List<String> servletURLPatterns=_readWebXML(xmls[4]);
    Set<String> portletIds=_readPortletXML(xmls[0],portletsPool,servletURLPatterns,pluginPackage);
    portletIds.addAll(_readPortletXML(xmls[1],portletsPool,servletURLPatterns,pluginPackage));
    Set<String> liferayPortletIds=_readLiferayPortletXML(xmls[2],portletsPool);
    liferayPortletIds.addAll(_readLiferayPortletXML(xmls[3],portletsPool));
    Iterator<String> portletIdsItr=portletIds.iterator();
    while (portletIdsItr.hasNext()) {
      String portletId=portletIdsItr.next();
      if (_log.isWarnEnabled() && !liferayPortletIds.contains(portletId)) {
        _log.warn("Portlet with the name " + portletId + " is described in portlet.xml but does not "+ "have a matching entry in liferay-portlet.xml");
      }
    }
    Iterator<String> liferayPortletIdsItr=liferayPortletIds.iterator();
    while (liferayPortletIdsItr.hasNext()) {
      String portletId=liferayPortletIdsItr.next();
      if (_log.isWarnEnabled() && !portletIds.contains(portletId)) {
        _log.warn("Portlet with the name " + portletId + " is described in liferay-portlet.xml but does "+ "not have a matching entry in portlet.xml");
      }
    }
    Iterator<Map.Entry<String,Portlet>> portletPoolsItr=portletsPool.entrySet().iterator();
    while (portletPoolsItr.hasNext()) {
      Map.Entry<String,Portlet> entry=portletPoolsItr.next();
      Portlet portletModel=entry.getValue();
      if (!portletModel.getPortletId().equals(PortletKeys.ADMIN) && !portletModel.getPortletId().equals(PortletKeys.MY_ACCOUNT) && !portletModel.isInclude()) {
        portletPoolsItr.remove();
      }
    }
    _initRemotePortlets();
    PortletApp portletApp=_getPortletApp(StringPool.BLANK);
    _setSpriteImages(servletContext,portletApp,StringPool.SLASH);
  }
 catch (  Exception e) {
    _log.error(e,e);
  }
}

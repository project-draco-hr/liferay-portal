{
  boolean allowBrowseDocuments=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:allowBrowseDocuments"));
  if (!allowBrowseDocuments) {
    return;
  }
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  long resourcePrimKey=0;
  if (fileBrowserParamsMap != null) {
    resourcePrimKey=GetterUtil.getLong(fileBrowserParamsMap.get("resourcePrimKey"));
  }
  List<ItemSelectorCriterion> itemSelectorCriteria=new ArrayList<>();
  List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(new UploadableFileReturnType());
  desiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  if (resourcePrimKey != 0) {
    itemSelectorCriteria.add(getKBAttachmentItemSelectorCriterion(resourcePrimKey,desiredItemSelectorReturnTypes));
  }
  itemSelectorCriteria.add(getImageItemSelectorCriterion(desiredItemSelectorReturnTypes));
  itemSelectorCriteria.add(getURLItemSelectorCriterion());
  if (resourcePrimKey != 0) {
    itemSelectorCriteria.add(getUploadItemSelectorCriterion(themeDisplay,requestBackedPortletURLFactory,resourcePrimKey));
  }
  String namespace=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:namespace"));
  String name=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  PortletURL itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,namespace + name + "selectItem",itemSelectorCriteria.toArray(new ItemSelectorCriterion[itemSelectorCriteria.size()]));
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL.toString());
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL.toString());
}

{
  boolean allowBrowseDocuments=GetterUtil.getBoolean(inputEditorTaglibAttributes.get("liferay-ui:input-editor:allowBrowseDocuments"));
  if (!allowBrowseDocuments) {
    return;
  }
  Map<String,String> fileBrowserParamsMap=(Map<String,String>)inputEditorTaglibAttributes.get("liferay-ui:input-editor:fileBrowserParams");
  long resourcePrimKey=0;
  if (fileBrowserParamsMap != null) {
    resourcePrimKey=GetterUtil.getLong(fileBrowserParamsMap.get("resourcePrimKey"));
  }
  ItemSelectorCriterion[] itemSelectorCriteria=new ItemSelectorCriterion[0];
  List<ItemSelectorReturnType> desiredItemSelectorReturnTypes=new ArrayList<>();
  desiredItemSelectorReturnTypes.add(new UploadableFileReturnType());
  desiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  if (resourcePrimKey != 0) {
    ItemSelectorCriterion attachmentItemSelectorCriterion=new KBAttachmentItemSelectorCriterion(resourcePrimKey);
    attachmentItemSelectorCriterion.setDesiredItemSelectorReturnTypes(desiredItemSelectorReturnTypes);
    itemSelectorCriteria=ArrayUtil.append(itemSelectorCriteria,attachmentItemSelectorCriterion);
  }
  ItemSelectorCriterion imageItemSelectorCriterion=new ImageItemSelectorCriterion();
  imageItemSelectorCriterion.setDesiredItemSelectorReturnTypes(desiredItemSelectorReturnTypes);
  itemSelectorCriteria=ArrayUtil.append(itemSelectorCriteria,imageItemSelectorCriterion);
  ItemSelectorCriterion urlItemSelectorCriterion=new URLItemSelectorCriterion();
  List<ItemSelectorReturnType> urlDesiredItemSelectorReturnTypes=new ArrayList<>();
  urlDesiredItemSelectorReturnTypes.add(new URLItemSelectorReturnType());
  urlItemSelectorCriterion.setDesiredItemSelectorReturnTypes(urlDesiredItemSelectorReturnTypes);
  itemSelectorCriteria=ArrayUtil.append(itemSelectorCriteria,urlItemSelectorCriterion);
  if (resourcePrimKey != 0) {
    PortletURL portletURL=requestBackedPortletURLFactory.createActionURL(KBPortletKeys.KNOWLEDGE_BASE_ADMIN);
    portletURL.setParameter(ActionRequest.ACTION_NAME,"uploadKBArticleAttachments");
    portletURL.setParameter("resourcePrimKey",String.valueOf(resourcePrimKey));
    ResourceBundle resourceBundle=_resourceBundleLoader.loadResourceBundle(LocaleUtil.toLanguageId(themeDisplay.getLocale()));
    ItemSelectorCriterion uploadItemSelectorCriterion=new UploadItemSelectorCriterion(portletURL.toString(),ResourceBundleUtil.getString(resourceBundle,"article-attachments"));
    List<ItemSelectorReturnType> uploadDesiredItemSelectorReturnTypes=new ArrayList<>();
    uploadDesiredItemSelectorReturnTypes.add(new UploadableFileReturnType());
    uploadItemSelectorCriterion.setDesiredItemSelectorReturnTypes(uploadDesiredItemSelectorReturnTypes);
    itemSelectorCriteria=ArrayUtil.append(itemSelectorCriteria,uploadItemSelectorCriterion);
  }
  String namespace=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:namespace"));
  String name=GetterUtil.getString(inputEditorTaglibAttributes.get("liferay-ui:input-editor:name"));
  PortletURL itemSelectorURL=_itemSelector.getItemSelectorURL(requestBackedPortletURLFactory,namespace + name + "selectItem",itemSelectorCriteria);
  jsonObject.put("filebrowserImageBrowseLinkUrl",itemSelectorURL.toString());
  jsonObject.put("filebrowserImageBrowseUrl",itemSelectorURL.toString());
}

{
  long userId=portletDataContext.getUserId(category.getUserUuid());
  String emailAddress=null;
  String inProtocol=null;
  String inServerName=null;
  int inServerPort=0;
  boolean inUseSSL=false;
  String inUserName=null;
  String inPassword=null;
  int inReadInterval=0;
  String outEmailAddress=null;
  boolean outCustom=false;
  String outServerName=null;
  int outServerPort=0;
  boolean outUseSSL=false;
  String outUserName=null;
  String outPassword=null;
  boolean allowAnonymous=false;
  boolean mailingListActive=false;
  Map<Long,Long> categoryIds=(Map<Long,Long>)portletDataContext.getNewPrimaryKeysMap(MBCategory.class);
  long parentCategoryId=MapUtil.getLong(categoryIds,category.getParentCategoryId(),category.getParentCategoryId());
  ServiceContext serviceContext=portletDataContext.createServiceContext(category);
  MBCategory importedCategory=null;
  if (portletDataContext.isDataStrategyMirror()) {
    MBCategory existingCategory=fetchStagedModelByUuidAndGroupId(category.getUuid(),portletDataContext.getScopeGroupId());
    if (existingCategory == null) {
      serviceContext.setUuid(category.getUuid());
      importedCategory=MBCategoryLocalServiceUtil.addCategory(userId,parentCategoryId,category.getName(),category.getDescription(),category.getDisplayStyle(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,allowAnonymous,mailingListActive,serviceContext);
    }
 else {
      importedCategory=MBCategoryLocalServiceUtil.updateCategory(existingCategory.getCategoryId(),parentCategoryId,category.getName(),category.getDescription(),category.getDisplayStyle(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,allowAnonymous,mailingListActive,false,serviceContext);
    }
  }
 else {
    importedCategory=MBCategoryLocalServiceUtil.addCategory(userId,parentCategoryId,category.getName(),category.getDescription(),category.getDisplayStyle(),emailAddress,inProtocol,inServerName,inServerPort,inUseSSL,inUserName,inPassword,inReadInterval,outEmailAddress,outCustom,outServerName,outServerPort,outUseSSL,outUserName,outPassword,allowAnonymous,mailingListActive,serviceContext);
  }
  portletDataContext.importClassedModel(category,importedCategory);
}

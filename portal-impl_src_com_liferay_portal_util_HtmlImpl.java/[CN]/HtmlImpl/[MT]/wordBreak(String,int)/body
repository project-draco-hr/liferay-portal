{
  StringBundler sb=new StringBundler();
  int length=0;
  int lastWrite=0;
  int pos=0;
  Matcher matcher=_pattern.matcher(text);
  while (matcher.find()) {
    if (matcher.start() < pos) {
      continue;
    }
    while ((length + matcher.start() - pos) >= columns) {
      pos+=columns - length;
      sb.append(text.substring(lastWrite,pos));
      sb.append("<wbr/>&shy;");
      length=0;
      lastWrite=pos;
    }
    length+=matcher.start() - pos;
    String group=matcher.group();
    if (group.equals(StringPool.AMPERSAND)) {
      int x=text.indexOf(StringPool.SEMICOLON,matcher.start());
      if (x != -1) {
        length++;
        pos=x + 1;
      }
      continue;
    }
    if (group.equals(StringPool.LESS_THAN)) {
      int x=text.indexOf(StringPool.GREATER_THAN,matcher.start());
      if (x != -1) {
        pos=x + 1;
      }
      continue;
    }
    if (group.equals(StringPool.SPACE) || group.equals(StringPool.NEW_LINE)) {
      length=0;
      pos=matcher.start() + 1;
    }
  }
  sb.append(text.substring(lastWrite));
  return sb.toString();
}

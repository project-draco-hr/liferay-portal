{
  String tempFileId=DLUtil.getTempFileId(fileVersion.getFileEntryId(),fileVersion.getVersion());
  File thumbnailFile=getThumbnailTempFile(tempFileId);
  int previewFilesCount=0;
  PDDocument pdDocument=null;
  try {
    pdDocument=PDDocument.load(file);
    previewFilesCount=pdDocument.getNumberOfPages();
  }
  finally {
    if (pdDocument != null) {
      pdDocument.close();
    }
  }
  File[] previewFiles=new File[previewFilesCount];
  for (int i=0; i < previewFilesCount; i++) {
    previewFiles[i]=getPreviewTempFile(tempFileId,i);
  }
  boolean generatePreview=_isGeneratePreview(fileVersion);
  boolean generateThumbnail=_isGenerateThumbnail(fileVersion);
  if (PropsValues.DL_FILE_ENTRY_PREVIEW_FORK_PROCESS_ENABLED) {
    ProcessCallable<String> processCallable=new LiferayPDFBoxProcessCallable(ServerDetector.getServerId(),PropsUtil.get(PropsKeys.LIFERAY_HOME),Log4JUtil.getCustomLogSettings(),file,thumbnailFile,previewFiles,getThumbnailType(fileVersion),getPreviewType(fileVersion),PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_DPI,PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_HEIGHT,PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_WIDTH,generatePreview,generateThumbnail);
    Future<String> future=ProcessExecutor.execute(ClassPathUtil.getPortalProcessConfig(),processCallable);
    String processIdentity=String.valueOf(fileVersion.getFileVersionId());
    futures.put(processIdentity,future);
    future.get();
  }
 else {
    LiferayPDFBoxConverter liferayConverter=new LiferayPDFBoxConverter(file,thumbnailFile,previewFiles,getPreviewType(fileVersion),getThumbnailType(fileVersion),PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_DPI,PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_HEIGHT,PropsValues.DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_WIDTH,generatePreview,generateThumbnail);
    liferayConverter.generateImagesPB();
  }
  if (generateThumbnail) {
    try {
      storeThumbnailImages(fileVersion,thumbnailFile);
    }
  finally {
      FileUtil.delete(thumbnailFile);
    }
    if (_log.isInfoEnabled()) {
      _log.info("PDFBox generated a thumbnail for " + fileVersion.getFileVersionId());
    }
  }
  if (generatePreview) {
    int index=0;
    for (    File previewFile : previewFiles) {
      try {
        addFileToStore(fileVersion.getCompanyId(),PREVIEW_PATH,getPreviewFilePath(fileVersion,index + 1),previewFile);
      }
  finally {
        FileUtil.delete(previewFile);
      }
      index++;
    }
    if (_log.isInfoEnabled()) {
      _log.info("PDFBox generated " + getPreviewFileCount(fileVersion) + " preview pages for "+ fileVersion.getFileVersionId());
    }
  }
}

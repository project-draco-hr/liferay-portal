{
  if (!PropsValues.SCHEDULER_ENABLED) {
    return;
  }
  try {
    if (isMemorySchedulerSlave(groupName)) {
      removeMemoryClusteredJobs(groupName);
      return;
    }
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to delete jobs in group " + groupName,e);
  }
  _readLock.lock();
  try {
    _schedulerEngine.delete(groupName);
  }
  finally {
    _readLock.unlock();
  }
  skipClusterInvoking(groupName);
}

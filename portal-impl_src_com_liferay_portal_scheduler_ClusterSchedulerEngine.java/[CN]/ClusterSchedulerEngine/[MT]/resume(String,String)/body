{
  if (!PropsValues.SCHEDULER_ENABLED) {
    return;
  }
  try {
    if (isMemorySchedulerSlave(groupName)) {
      updateMemoryClusteredJob(jobName,groupName,TriggerState.NORMAL);
      return;
    }
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to resume job {jobName=" + jobName + ", groupName="+ groupName+ "}",e);
  }
  _readLock.lock();
  try {
    _schedulerEngine.resume(jobName,groupName);
  }
  finally {
    _readLock.unlock();
  }
  skipClusterInvoking(groupName);
}

{
  try {
    ReadWriteLock readWriteLock=new ReentrantReadWriteLock();
    _readLock=readWriteLock.readLock();
    _writeLock=readWriteLock.writeLock();
    _localClusterNodeAddress=getSerializedString(ClusterExecutorUtil.getLocalClusterNodeAddress());
    _memorySchedulerClusterEventListener=new MemorySchedulerClusterEventListener();
    ClusterExecutorUtil.addClusterEventListener(_memorySchedulerClusterEventListener);
    if (!isMemorySchedulerClusterLockOwner(lockMemorySchedulerCluster(null))) {
      initMemorySingleInstanceJobs();
    }
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to start scheduler",e);
  }
  _schedulerEngine.start();
}

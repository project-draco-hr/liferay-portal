{
  try {
    if (!ClusterMasterExecutorUtil.isMaster()) {
      initMemoryClusteredJobs();
    }
    _schedulerClusterMasterTokenTransitionListener=new SchedulerClusterMasterTokenTransitionListener();
    ClusterMasterExecutorUtil.registerClusterMasterTokenTransitionListener(_schedulerClusterMasterTokenTransitionListener);
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to initialize scheduler",e);
  }
  _schedulerEngine.start();
  _portalReady=true;
}

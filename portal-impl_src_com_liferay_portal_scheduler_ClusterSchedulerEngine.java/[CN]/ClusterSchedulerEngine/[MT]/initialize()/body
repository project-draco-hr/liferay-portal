{
  if (!PropsValues.SCHEDULER_ENABLED) {
    return;
  }
  try {
    ReadWriteLock readWriteLock=new ReentrantReadWriteLock();
    _readLock=readWriteLock.readLock();
    _writeLock=readWriteLock.writeLock();
    _localClusterNodeAddress=getSerializedString(ClusterExecutorUtil.getLocalClusterNodeAddress());
    _clusterEventListener=new MemorySchedulerClusterEventListener();
    ClusterExecutorUtil.addClusterEventListener(_clusterEventListener);
    if (!isMemorySchedulerClusterLockOwner(lockMemorySchedulerCluster(null))) {
      initMemoryClusteredJobs();
    }
  }
 catch (  Exception e) {
    throw new SchedulerException("Unable to initialize scheduler",e);
  }
}

{
  if (asynchronous) {
    MethodHandler methodHandler=new MethodHandler(_getScheduledJobsMethodKey3,StorageType.MEMORY_CLUSTERED);
    Address address=AddressSerializerUtil.deserialize(masterAddressString);
    ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(methodHandler,address);
    try {
      ClusterExecutorUtil.execute(clusterRequest,new MemorySchedulerClusterResponseCallback(address),20,TimeUnit.SECONDS);
      return;
    }
 catch (    Exception e) {
      throw new SchedulerException("Unable to load scheduled jobs from cluster node " + address.getDescription(),e);
    }
  }
  List<SchedulerResponse> schedulerResponses=callMaster(masterAddressString,_getScheduledJobsMethodKey3,StorageType.MEMORY_CLUSTERED);
  _doMasterToSlave(schedulerResponses);
}

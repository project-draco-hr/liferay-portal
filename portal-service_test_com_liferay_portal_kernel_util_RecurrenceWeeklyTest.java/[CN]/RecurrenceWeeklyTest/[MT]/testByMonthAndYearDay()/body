{
  Recurrence recurrence=new Recurrence(getCalendar(2009,MARCH,23,HOUR_DURING,MINUTE_DURING),getDefaultDuration(),Recurrence.WEEKLY);
  int[] months={MARCH,MAY};
  int[] yearDays={82,85,86,89,90,93,113,144};
  recurrence.setByMonth(months);
  recurrence.setByYearDay(yearDays);
  assertIsInRecurrence(true,recurrence,2009,MARCH,23);
  assertIsInRecurrence(true,recurrence,2009,MARCH,26);
  assertIsInRecurrence(false,recurrence,2009,MARCH,28);
  assertIsInRecurrence(false,recurrence,2009,MARCH,29);
  assertIsInRecurrence(true,recurrence,2009,MARCH,30);
  assertIsInRecurrence(true,recurrence,2009,MARCH,31);
  assertIsInRecurrence(false,recurrence,2009,APRIL,4);
  assertIsInRecurrence(false,recurrence,2009,APRIL,25);
  assertIsInRecurrence(false,recurrence,2009,MAY,18);
  assertIsInRecurrence(true,recurrence,2009,MAY,24);
  assertIsInRecurrence(false,recurrence,2009,MAY,30);
  assertIsInRecurrence(false,recurrence,2010,MARCH,22);
  assertIsInRecurrence(true,recurrence,2010,MARCH,23);
  assertIsInRecurrence(false,recurrence,2010,MARCH,28);
  assertIsInRecurrence(true,recurrence,2011,MARCH,23);
  assertIsInRecurrence(true,recurrence,2011,MARCH,26);
  assertIsInRecurrence(true,recurrence,2012,MARCH,26);
  recurrence.setInterval(2);
  assertIsInRecurrence(true,recurrence,2009,MARCH,23);
  assertIsInRecurrence(true,recurrence,2009,MARCH,26);
  assertIsInRecurrence(false,recurrence,2009,MARCH,28);
  assertIsInRecurrence(false,recurrence,2009,MARCH,29);
  assertIsInRecurrence(false,recurrence,2009,MARCH,30);
  assertIsInRecurrence(false,recurrence,2009,MARCH,31);
  assertIsInRecurrence(false,recurrence,2009,APRIL,4);
  assertIsInRecurrence(false,recurrence,2009,APRIL,25);
  assertIsInRecurrence(false,recurrence,2009,MAY,18);
  assertIsInRecurrence(false,recurrence,2009,MAY,30);
  assertIsInRecurrence(false,recurrence,2010,MARCH,22);
  assertIsInRecurrence(true,recurrence,2010,MARCH,23);
  assertIsInRecurrence(false,recurrence,2010,MARCH,28);
  assertIsInRecurrence(true,recurrence,2011,MARCH,23);
  assertIsInRecurrence(true,recurrence,2011,MARCH,26);
  assertIsInRecurrence(false,recurrence,2012,MARCH,26);
  recurrence.setUntil(getCalendar(2011,MARCH,26,0,0));
  assertIsInRecurrence(true,recurrence,2009,MARCH,23);
  assertIsInRecurrence(false,recurrence,2011,MARCH,26);
  recurrence.setOccurrence(2);
  assertIsInRecurrence(true,recurrence,2009,MARCH,26);
}

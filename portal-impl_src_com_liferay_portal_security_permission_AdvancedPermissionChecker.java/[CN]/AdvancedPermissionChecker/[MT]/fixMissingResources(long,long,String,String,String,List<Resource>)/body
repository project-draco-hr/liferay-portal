{
  int count=ResourcePermissionLocalServiceUtil.getResourcePermissionsCount(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
  if (count > 0) {
    return resources;
  }
  String newIndividualResourcePrimKey=null;
  if (primKey.contains(PortletConstants.LAYOUT_SEPARATOR)) {
    newIndividualResourcePrimKey=name;
    if (_log.isDebugEnabled()) {
      String message="Using defaults because custom permissions for " + "portlet resource " + name + " are not defined";
      _log.debug(message,new IllegalArgumentException(message));
    }
  }
 else   if ((groupId > 0) && ResourceActionsUtil.isRootModelResource(name)) {
    newIndividualResourcePrimKey=name;
    if (_log.isDebugEnabled()) {
      String message="Using defaults because custom permissions for " + "root model resource " + name + " are not defined";
      _log.debug(message,new IllegalArgumentException(message));
    }
  }
 else   if (primKey.equals("0") || primKey.equals(String.valueOf(ResourceConstants.PRIMKEY_DNE)) || (primKey.equals(String.valueOf(companyId)) && !name.equals(Company.class.getName()))) {
    newIndividualResourcePrimKey=name;
    if (_log.isWarnEnabled()) {
      StringBundler sb=new StringBundler(9);
      sb.append("Using ");
      sb.append(name);
      sb.append(" as the primary key instead of the legacy primary ");
      sb.append("key ");
      sb.append(primKey);
      sb.append(" that was used for permission checking of ");
      sb.append(name);
      sb.append(" in company ");
      sb.append(companyId);
      _log.warn(sb.toString(),new IllegalArgumentException(sb.toString()));
    }
  }
  if (newIndividualResourcePrimKey != null) {
    Resource individualResource=resources.get(0);
    if (individualResource.getScope() != ResourceConstants.SCOPE_INDIVIDUAL) {
      throw new IllegalArgumentException("The first resource must be an individual scope");
    }
    individualResource.setPrimKey(name);
  }
  return resources;
}

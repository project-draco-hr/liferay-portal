{
  long[] roleIds=PermissionCacheUtil.getUserGroupRoleIds(userId,groupId);
  if (roleIds != null) {
    return roleIds;
  }
  try {
    Group group=null;
    long parentGroupId=0;
    if (groupId > 0) {
      group=GroupLocalServiceUtil.getGroup(groupId);
      if (group.isLayout()) {
        parentGroupId=group.getParentGroupId();
        if (parentGroupId > 0) {
          group=GroupLocalServiceUtil.getGroup(parentGroupId);
        }
      }
    }
    UserBag userBag=getUserBag();
    Set<Long> roleIdsSet=SetUtil.fromArray(userBag.getRoleIds());
    List<Role> userGroupRoles=RoleLocalServiceUtil.getUserGroupRoles(userId,groupId);
    for (    Role userGroupRole : userGroupRoles) {
      roleIdsSet.add(userGroupRole.getRoleId());
    }
    if (parentGroupId > 0) {
      userGroupRoles=RoleLocalServiceUtil.getUserGroupRoles(userId,parentGroupId);
      for (      Role userGroupRole : userGroupRoles) {
        roleIdsSet.add(userGroupRole.getRoleId());
      }
    }
    List<Role> userGroupGroupRoles=RoleLocalServiceUtil.getUserGroupGroupRoles(userId,groupId);
    for (    Role userGroupGroupRole : userGroupGroupRoles) {
      roleIdsSet.add(userGroupGroupRole.getRoleId());
    }
    if (parentGroupId > 0) {
      userGroupGroupRoles=RoleLocalServiceUtil.getUserGroupGroupRoles(userId,parentGroupId);
      for (      Role userGroupGroupRole : userGroupGroupRoles) {
        roleIdsSet.add(userGroupGroupRole.getRoleId());
      }
    }
    if (group != null) {
      if (group.isOrganization() && userBag.hasUserOrgGroup(group)) {
        Role organizationUserRole=RoleLocalServiceUtil.getRole(group.getCompanyId(),RoleConstants.ORGANIZATION_USER);
        roleIdsSet.add(organizationUserRole.getRoleId());
      }
      if ((group.isSite() && (userBag.hasUserGroup(group) || userBag.hasUserOrgGroup(group))) || group.isUserPersonalSite()) {
        Role siteMemberRole=RoleLocalServiceUtil.getRole(group.getCompanyId(),RoleConstants.SITE_MEMBER);
        roleIdsSet.add(siteMemberRole.getRoleId());
      }
      if ((group.isOrganization() && userBag.hasUserOrgGroup(group)) || (group.isSite() && userBag.hasUserGroup(group))) {
        addTeamRoles(userId,group,roleIdsSet);
      }
    }
    roleIds=ArrayUtil.toLongArray(roleIdsSet);
    Arrays.sort(roleIds);
    PermissionCacheUtil.putUserGroupRoleIds(userId,groupId,roleIds);
    return roleIds;
  }
 catch (  Exception e) {
    PermissionCacheUtil.removeUserGroupRoleIds(userId,groupId);
    throw e;
  }
}

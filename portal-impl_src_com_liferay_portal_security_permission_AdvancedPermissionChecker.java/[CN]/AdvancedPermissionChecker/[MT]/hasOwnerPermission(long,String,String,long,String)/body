{
  if (ownerId != getUserId()) {
    return false;
  }
  if (ownerId == defaultUserId) {
    if (actionId.equals(ActionKeys.VIEW)) {
      return true;
    }
 else {
      return false;
    }
  }
  try {
    if (PropsValues.PERMISSIONS_USER_CHECK_ALGORITHM == 6) {
      if (ResourceBlockLocalServiceUtil.isSupported(name)) {
        PermissionedModel model=ResourceBlockLocalServiceUtil.getPermissionedModel(name,Long.valueOf(primKey));
        long groupId=0;
        if (model instanceof GroupedModel) {
          groupId=((GroupedModel)model).getGroupId();
        }
        ResourceBlockIdsBag resourceBlockIdsBag=getOwnerResourceBlockIdsBag(companyId,groupId,name);
        return ResourceBlockLocalServiceUtil.hasPermission(name,model,actionId,resourceBlockIdsBag);
      }
 else {
        return ResourcePermissionLocalServiceUtil.hasResourcePermission(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey,getOwnerRoleId(),actionId);
      }
    }
 else {
      ResourceActionsUtil.checkAction(name,actionId);
      Resource resource=ResourceLocalServiceUtil.getResource(companyId,name,ResourceConstants.SCOPE_INDIVIDUAL,primKey);
      List<Permission> permissions=PermissionLocalServiceUtil.getRolePermissions(getOwnerRoleId(),resource.getResourceId());
      int pos=Collections.binarySearch(permissions,actionId,new PermissionActionIdComparator());
      if (pos >= 0) {
        return true;
      }
    }
  }
 catch (  Exception e) {
    if (_log.isDebugEnabled()) {
      _log.debug(e,e);
    }
  }
  return false;
}

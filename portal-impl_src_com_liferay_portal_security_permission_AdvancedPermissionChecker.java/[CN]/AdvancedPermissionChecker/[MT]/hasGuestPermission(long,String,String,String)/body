{
  List<String> resourceActions=ResourceActionsUtil.getResourceActions(name);
  if (!resourceActions.contains(actionId)) {
    return false;
  }
  if (name.indexOf(CharPool.PERIOD) != -1) {
    List<String> actions=ResourceActionsUtil.getModelResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
 else {
    List<String> actions=ResourceActionsUtil.getPortletResourceGuestUnsupportedActions(name);
    if (actions.contains(actionId)) {
      return false;
    }
  }
  long companyId=user.getCompanyId();
  if (groupId > 0) {
    Group group=GroupLocalServiceUtil.getGroup(groupId);
    companyId=group.getCompanyId();
  }
  try {
    if (ResourceBlockLocalServiceUtil.isSupported(name)) {
      ResourceBlockIdsBag resourceBlockIdsBag=getGuestResourceBlockIdsBag(companyId,groupId,name);
      return ResourceBlockLocalServiceUtil.hasPermission(name,GetterUtil.getLong(primKey),actionId,resourceBlockIdsBag);
    }
    primKey=fixLegacyPrimaryKey(companyId,name,primKey);
    List<Resource> resources=getResources(companyId,groupId,name,primKey,actionId);
    return ResourceLocalServiceUtil.hasUserPermissions(defaultUserId,groupId,resources,actionId,getGuestUserRoleIds());
  }
 catch (  MissingIndividualScopeResourcePermissionException misrpe) {
    throw new IllegalArgumentException("Somebody is trying to circumvent permission framework " + "or there is a bug in permission framework caller: " + misrpe.getMessage(),misrpe);
  }
catch (  Exception e) {
    _log.error(e,e);
    return false;
  }
}

{
  PermissionCheckerBag bag=PermissionCacheUtil.getBag(userId,groupId);
  if (bag != null) {
    return bag;
  }
  try {
    Group group=null;
    if (groupId > 0) {
      group=GroupLocalServiceUtil.getGroup(groupId);
      if (group.isLayout()) {
        long parentGroupId=group.getParentGroupId();
        if (parentGroupId > 0) {
          group=GroupLocalServiceUtil.getGroup(parentGroupId);
        }
      }
    }
    List<Group> userGroups=GroupLocalServiceUtil.getUserGroups(userId,true);
    List<Organization> userOrgs=getUserOrgs(userId);
    List<Group> userOrgGroups=GroupLocalServiceUtil.getOrganizationsGroups(userOrgs);
    List<UserGroup> userUserGroups=UserGroupLocalServiceUtil.getUserUserGroups(userId);
    List<Group> userUserGroupGroups=GroupLocalServiceUtil.getUserGroupsGroups(userUserGroups);
    List<Group> groups=new ArrayList<Group>(userGroups.size() + userOrgGroups.size() + userUserGroupGroups.size());
    groups.addAll(userGroups);
    groups.addAll(userOrgGroups);
    groups.addAll(userUserGroupGroups);
    List<Role> roles=new UniqueList<Role>();
    if (groups.size() > 0) {
      List<Role> userRelatedRoles=RoleLocalServiceUtil.getUserRelatedRoles(userId,groups);
      roles.addAll(userRelatedRoles);
    }
 else {
      roles.addAll(RoleLocalServiceUtil.getUserRoles(userId));
    }
    List<Role> userGroupRoles=RoleLocalServiceUtil.getUserGroupRoles(userId,groupId);
    roles.addAll(userGroupRoles);
    List<Role> userGroupGroupRoles=RoleLocalServiceUtil.getUserGroupGroupRoles(userId,groupId);
    roles.addAll(userGroupGroupRoles);
    if (group != null) {
      if (group.isOrganization() && userOrgGroups.contains(group)) {
        Role organizationUserRole=RoleLocalServiceUtil.getRole(group.getCompanyId(),RoleConstants.ORGANIZATION_USER);
        roles.add(organizationUserRole);
      }
      if (group.isSite() && (userGroups.contains(group) || userOrgGroups.contains(group))) {
        Role siteMemberRole=RoleLocalServiceUtil.getRole(group.getCompanyId(),RoleConstants.SITE_MEMBER);
        roles.add(siteMemberRole);
      }
      if ((group.isOrganization() && userOrgGroups.contains(group)) || (group.isSite() && userGroups.contains(group))) {
        addTeamRoles(userId,group,roles);
      }
    }
    bag=new PermissionCheckerBagImpl(userId,userGroups,userOrgs,userOrgGroups,userUserGroupGroups,groups,roles);
    return bag;
  }
  finally {
    if (bag == null) {
      bag=new PermissionCheckerBagImpl(userId,new ArrayList<Group>(),new ArrayList<Organization>(),new ArrayList<Group>(),new ArrayList<Group>(),new ArrayList<Group>(),new ArrayList<Role>());
    }
    PermissionCacheUtil.putBag(userId,groupId,bag);
  }
}

{
  List<ContentFeed> contentFeeds=new ArrayList<ContentFeed>();
  try {
    List<JournalFeed> feeds=null;
    String finder=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.FINDER);
    if (OptionalJournalFeedCriteria.FIND_ALL.equals(finder)) {
      feeds=_getJournalFeeds();
    }
 else     if (OptionalJournalFeedCriteria.FIND_BY_GROUP.equals(finder)) {
      String groupIdStr=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.GROUP_ID);
      long groupId=Long.parseLong(groupIdStr);
      feeds=_getJournalFeedsByGroupId(groupId);
    }
 else     if (OptionalJournalFeedCriteria.FIND_BY_GROUP_WITH_LIMIT.equals(finder)) {
      long groupId=Long.parseLong(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.GROUP_ID));
      int start=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_START));
      int end=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_END));
      feeds=_getJournalFeedsByGroupIdWithinRange(groupId,start,end);
    }
 else     if (OptionalJournalFeedCriteria.SEARCH_BY_GROUP_WITH_LIMIT.equals(finder)) {
      long companyId=Long.parseLong(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.COMPANY_ID));
      long groupId=Long.parseLong(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.GROUP_ID));
      String keywords=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.KEYWORDS);
      int start=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_START));
      int end=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_END));
      OrderByComparator obc=(OrderByComparator)searchCriteria.getOrderByComparator();
      feeds=_searchJournalFeedsByGroupIdWithinRange(companyId,groupId,keywords,start,end,obc);
    }
 else     if (OptionalJournalFeedCriteria.SEARCH_BY_GROUP_WITH_LIMIT.equals(finder)) {
      long companyId=Long.parseLong(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.COMPANY_ID));
      long groupId=Long.parseLong(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.GROUP_ID));
      String feedId=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.FEED_ID);
      String name=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.NAME);
      String description=_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.DESCRIPTION);
      int start=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_START));
      int end=Integer.parseInt(_findFieldValue(searchCriteria.getSearchFieldValues(),OptionalJournalFeedCriteria.RANGE_END));
      OrderByComparator obc=(OrderByComparator)searchCriteria.getOrderByComparator();
      boolean andOperator=searchCriteria.isMatchAnyOneField();
      feeds=_searchJournalFeedsByGroupIdAndFeedIdWithinRange(companyId,groupId,feedId,name,description,andOperator,start,end,obc);
    }
    _populateContentFeeds(contentFeeds,feeds);
  }
 catch (  SystemException ex) {
    throw new CMSException(ex.getMessage(),ex);
  }
  return contentFeeds;
}

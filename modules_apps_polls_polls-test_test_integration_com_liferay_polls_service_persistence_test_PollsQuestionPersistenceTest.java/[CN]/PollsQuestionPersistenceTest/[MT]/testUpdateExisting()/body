{
  long pk=RandomTestUtil.nextLong();
  PollsQuestion newPollsQuestion=_persistence.create(pk);
  newPollsQuestion.setUuid(RandomTestUtil.randomString());
  newPollsQuestion.setGroupId(RandomTestUtil.nextLong());
  newPollsQuestion.setCompanyId(RandomTestUtil.nextLong());
  newPollsQuestion.setUserId(RandomTestUtil.nextLong());
  newPollsQuestion.setUserName(RandomTestUtil.randomString());
  newPollsQuestion.setCreateDate(RandomTestUtil.nextDate());
  newPollsQuestion.setModifiedDate(RandomTestUtil.nextDate());
  newPollsQuestion.setTitle(RandomTestUtil.randomString());
  newPollsQuestion.setDescription(RandomTestUtil.randomString());
  newPollsQuestion.setExpirationDate(RandomTestUtil.nextDate());
  newPollsQuestion.setLastVoteDate(RandomTestUtil.nextDate());
  newPollsQuestion.setLastPublishDate(RandomTestUtil.nextDate());
  _pollsQuestions.add(_persistence.update(newPollsQuestion));
  PollsQuestion existingPollsQuestion=_persistence.findByPrimaryKey(newPollsQuestion.getPrimaryKey());
  Assert.assertEquals(existingPollsQuestion.getUuid(),newPollsQuestion.getUuid());
  Assert.assertEquals(existingPollsQuestion.getQuestionId(),newPollsQuestion.getQuestionId());
  Assert.assertEquals(existingPollsQuestion.getGroupId(),newPollsQuestion.getGroupId());
  Assert.assertEquals(existingPollsQuestion.getCompanyId(),newPollsQuestion.getCompanyId());
  Assert.assertEquals(existingPollsQuestion.getUserId(),newPollsQuestion.getUserId());
  Assert.assertEquals(existingPollsQuestion.getUserName(),newPollsQuestion.getUserName());
  Assert.assertEquals(Time.getShortTimestamp(existingPollsQuestion.getCreateDate()),Time.getShortTimestamp(newPollsQuestion.getCreateDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingPollsQuestion.getModifiedDate()),Time.getShortTimestamp(newPollsQuestion.getModifiedDate()));
  Assert.assertEquals(existingPollsQuestion.getTitle(),newPollsQuestion.getTitle());
  Assert.assertEquals(existingPollsQuestion.getDescription(),newPollsQuestion.getDescription());
  Assert.assertEquals(Time.getShortTimestamp(existingPollsQuestion.getExpirationDate()),Time.getShortTimestamp(newPollsQuestion.getExpirationDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingPollsQuestion.getLastVoteDate()),Time.getShortTimestamp(newPollsQuestion.getLastVoteDate()));
  Assert.assertEquals(Time.getShortTimestamp(existingPollsQuestion.getLastPublishDate()),Time.getShortTimestamp(newPollsQuestion.getLastPublishDate()));
}

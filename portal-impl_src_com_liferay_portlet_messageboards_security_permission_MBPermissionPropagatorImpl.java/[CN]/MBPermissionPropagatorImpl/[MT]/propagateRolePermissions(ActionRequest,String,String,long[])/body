{
  if (!className.equals(MBCategory.class.getName()) && !className.equals(_mbModelResource)) {
    return;
  }
  long parentPrimKey=GetterUtil.getLong(primKey);
  List<MBCategory> categories=null;
  List<MBMessage> messages=null;
  String parentClassName=null;
  if (className.equals(_mbModelResource)) {
    categories=MBCategoryLocalServiceUtil.getMBCategories(QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    messages=MBMessageLocalServiceUtil.getGroupMessages(parentPrimKey,WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS);
    parentClassName=_mbModelResource;
  }
 else {
    MBCategory category=MBCategoryLocalServiceUtil.getCategory(parentPrimKey);
    long groupId=category.getGroupId();
    List<Object> categoriesAndThreads=MBCategoryLocalServiceUtil.getCategoriesAndThreads(groupId,parentPrimKey);
    categories=new ArrayList<MBCategory>();
    messages=new ArrayList<MBMessage>();
    for (    Object categoryOrThread : categoriesAndThreads) {
      if (categoryOrThread instanceof MBThread) {
        long threadId=((MBThread)categoryOrThread).getThreadId();
        List<MBMessage> threadMessages=MBMessageLocalServiceUtil.getThreadMessages(threadId,WorkflowConstants.STATUS_ANY);
        messages.addAll(threadMessages);
      }
 else {
        long categoryId=((MBCategory)categoryOrThread).getCategoryId();
        List<Long> categoryIds=ListUtil.toList(new long[]{categoryId});
        List<Long> addCategoryIds=MBCategoryLocalServiceUtil.getSubcategoryIds(categoryIds,groupId,categoryId);
        for (        Long addCategoryId : addCategoryIds) {
          categories.add(MBCategoryLocalServiceUtil.getCategory(addCategoryId));
          messages.addAll(MBMessageLocalServiceUtil.getCategoryMessages(groupId,addCategoryId,WorkflowConstants.STATUS_ANY,QueryUtil.ALL_POS,QueryUtil.ALL_POS));
        }
      }
    }
    parentClassName=MBCategory.class.getName();
  }
  for (  long roleId : roleIds) {
    for (    MBCategory category : categories) {
      propagateRolePermissions(actionRequest,roleId,parentClassName,parentPrimKey,MBCategory.class.getName(),category.getPrimaryKey());
    }
    for (    MBMessage message : messages) {
      propagateRolePermissions(actionRequest,roleId,parentClassName,parentPrimKey,MBMessage.class.getName(),message.getPrimaryKey());
    }
  }
}

{
  try {
    PropertiesConfiguration propertiesConfiguration=new PropertiesConfiguration(url);
    PropertiesConfigurationLayout propertiesConfigurationLayout=propertiesConfiguration.getLayout();
    try {
      Map<String,Object> layoutData=(Map<String,Object>)_layoutDataField.get(propertiesConfigurationLayout);
      for (      Object propertyLayoutData : layoutData.values()) {
        _commentField.set(propertyLayoutData,null);
      }
    }
 catch (    ReflectiveOperationException roe) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to clear out comments from " + propertiesConfiguration,roe);
      }
    }
    if (_log.isDebugEnabled()) {
      _log.debug("Adding resource " + url);
    }
    Long delay=_getReloadDelay(loadedCompositeConfiguration,propertiesConfiguration);
    if (delay != null) {
      FileChangedReloadingStrategy fileChangedReloadingStrategy=new FileConfigurationChangedReloadingStrategy();
      if (_log.isDebugEnabled()) {
        _log.debug("Resource " + url + " will be reloaded every "+ delay+ " seconds");
      }
      long milliseconds=delay.longValue() * 1000;
      fileChangedReloadingStrategy.setRefreshDelay(milliseconds);
      propertiesConfiguration.setReloadingStrategy(fileChangedReloadingStrategy);
    }
    _addIncludedPropertiesSources(propertiesConfiguration,loadedCompositeConfiguration);
    return propertiesConfiguration;
  }
 catch (  org.apache.commons.configuration.ConfigurationException ce) {
    if (_log.isDebugEnabled()) {
      _log.debug("Configuration source " + url + " ignored");
    }
    return null;
  }
}

{
  if (!InlineSQLHelperUtil.isEnabled(groupId)) {
    return findByG_U_F_S(groupId,userId,folderIds,status,start,end,orderByComparator);
  }
  StringBundler query=new StringBundler();
  query.append(_SQL_SELECT_BOOKMARKSENTRY_WHERE);
  boolean conjunctionable=false;
  if (conjunctionable) {
    query.append(WHERE_AND);
  }
  query.append(_FINDER_COLUMN_G_U_F_S_GROUPID_5);
  conjunctionable=true;
  if (conjunctionable) {
    query.append(WHERE_AND);
  }
  query.append(_FINDER_COLUMN_G_U_F_S_USERID_5);
  conjunctionable=true;
  if ((folderIds == null) || (folderIds.length > 0)) {
    if (conjunctionable) {
      query.append(WHERE_AND);
    }
    query.append(StringPool.OPEN_PARENTHESIS);
    for (int i=0; i < folderIds.length; i++) {
      query.append(_FINDER_COLUMN_G_U_F_S_FOLDERID_5);
      if ((i + 1) < folderIds.length) {
        query.append(WHERE_OR);
      }
    }
    query.append(StringPool.CLOSE_PARENTHESIS);
    conjunctionable=true;
  }
  if (conjunctionable) {
    query.append(WHERE_AND);
  }
  query.append(_FINDER_COLUMN_G_U_F_S_STATUS_5);
  conjunctionable=true;
  if (orderByComparator != null) {
    appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,orderByComparator);
  }
 else {
    query.append(BookmarksEntryModelImpl.ORDER_BY_JPQL);
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),BookmarksEntry.class.getName(),_FILTER_ENTITY_TABLE_FILTER_PK_COLUMN,_FILTER_ENTITY_TABLE_FILTER_USERID_COLUMN,groupId);
  Session session=null;
  try {
    session=openSession();
    Query q=session.createQuery(sql);
    QueryPos qPos=QueryPos.getInstance(q);
    qPos.add(groupId);
    qPos.add(userId);
    if (folderIds != null) {
      for (int i=0; i < folderIds.length; i++) {
        if (Validator.isNotNull(folderIds[i])) {
          qPos.add(folderIds[i]);
        }
      }
    }
    qPos.add(status);
    return (List<BookmarksEntry>)QueryUtil.list(q,getDialect(),start,end);
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
}

{
  List<DetailAST> methodCallASTList=DetailASTUtil.getMethodCalls(detailAST,className,methodName);
  for (  DetailAST methodCallAST : methodCallASTList) {
    DetailAST elistAST=methodCallAST.findFirstToken(TokenTypes.ELIST);
    DetailAST expressionAST=elistAST.findFirstToken(TokenTypes.EXPR);
    DetailAST child=expressionAST.getFirstChild();
    if (child.getType() == TokenTypes.NUM_INT) {
      log(methodCallAST.getLineNo(),MSG_METHOD_INVALID_NAME,className + "." + methodName+ "(long)");
      continue;
    }
    if (child.getType() != TokenTypes.IDENT) {
      continue;
    }
    DetailAST typeAST=DetailASTUtil.findTypeAST(detailAST,child.getText());
    if (typeAST == null) {
      continue;
    }
    child=typeAST.getFirstChild();
    if ((child.getType() == TokenTypes.LITERAL_INT) || (child.getType() == TokenTypes.LITERAL_LONG)) {
      log(methodCallAST.getLineNo(),MSG_METHOD_INVALID_NAME,className + "." + methodName+ "(long)");
    }
  }
}

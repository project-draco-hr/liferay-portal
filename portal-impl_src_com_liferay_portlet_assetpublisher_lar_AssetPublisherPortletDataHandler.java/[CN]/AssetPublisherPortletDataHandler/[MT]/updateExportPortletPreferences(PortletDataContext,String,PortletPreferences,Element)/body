{
  String anyAssetTypeClassName=StringPool.BLANK;
  long anyAssetType=GetterUtil.getLong(portletPreferences.getValue("anyAssetType",null));
  if (anyAssetType > 0) {
    anyAssetTypeClassName=PortalUtil.getClassName(anyAssetType);
  }
  Portlet portlet=PortletLocalServiceUtil.getPortletById(portletDataContext.getCompanyId(),portletId);
  Enumeration<String> enu=portletPreferences.getNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    String value=GetterUtil.getString(portletPreferences.getValue(name,null));
    if (name.equals("anyAssetType") || name.equals("classNameIds")) {
      updateExportClassNameIds(portletPreferences,name);
    }
 else     if (name.equals("anyClassTypeDLFileEntryAssetRendererFactory") || (name.equals("classTypeIds") && anyAssetTypeClassName.equals(DLFileEntry.class.getName())) || name.equals("classTypeIdsDLFileEntryAssetRendererFactory")) {
      ExportImportHelperUtil.updateExportPortletPreferencesClassPKs(portletDataContext,portlet,portletPreferences,name,DLFileEntryType.class.getName(),rootElement);
    }
 else     if (name.equals("anyClassTypeJournalArticleAssetRendererFactory") || (name.equals("classTypeIds") && anyAssetTypeClassName.equals(JournalArticle.class.getName())) || name.equals("classTypeIdsJournalArticleAssetRendererFactory")) {
      ExportImportHelperUtil.updateExportPortletPreferencesClassPKs(portletDataContext,portlet,portletPreferences,name,DDMStructure.class.getName(),rootElement);
    }
 else     if (name.equals("assetVocabularyId")) {
      ExportImportHelperUtil.updateExportPortletPreferencesClassPKs(portletDataContext,portlet,portletPreferences,name,AssetVocabulary.class.getName(),rootElement);
    }
 else     if (name.startsWith("queryName") && StringUtil.equalsIgnoreCase(value,"assetCategories")) {
      String index=name.substring(9);
      ExportImportHelperUtil.updateExportPortletPreferencesClassPKs(portletDataContext,portlet,portletPreferences,"queryValues" + index,AssetCategory.class.getName(),rootElement);
    }
 else     if (name.equals("scopeIds")) {
      updateExportScopeIds(portletDataContext,portletPreferences,name,portletDataContext.getPlid());
    }
  }
  return portletPreferences;
}

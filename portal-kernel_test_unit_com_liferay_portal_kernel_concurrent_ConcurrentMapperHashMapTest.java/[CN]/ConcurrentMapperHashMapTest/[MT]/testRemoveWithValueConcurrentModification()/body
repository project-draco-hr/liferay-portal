{
  ConcurrentMap<Key,Value> concurrentMap=new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference,ValueReference>(){
    @Override public ValueReference get(    Object key){
      KeyReference keyReference=(KeyReference)key;
      ValueReference valueReference=super.get(keyReference);
      if (_testKey.equals(keyReference._key)) {
        put(new KeyReference(_testKey),new ValueReference(_testValue2));
      }
      return valueReference;
    }
  }
);
  Assert.assertNull(concurrentMap.put(_testKey,_testValue));
  _assertEventQueue(Event.MAP_KEY,Event.MAP_VALUE);
  Assert.assertFalse(concurrentMap.remove(_testKey,_testValue));
  _assertEventQueue(Event.MAP_KEY_FOR_QUERY,Event.MAP_VALUE_FOR_QUERY);
}

{
  User user=UserUtil.findByPrimaryKey(userId);
  String groupId=PortalUtil.getPortletGroupId(plid);
  Date now=new Date();
  long productEntryId=CounterLocalServiceUtil.increment(SRProductEntry.class.getName());
  SRProductEntry productEntry=SRProductEntryUtil.create(productEntryId);
  productEntry.setGroupId(groupId);
  productEntry.setCompanyId(user.getCompanyId());
  productEntry.setUserId(user.getUserId());
  productEntry.setUserName(user.getFullName());
  productEntry.setCreateDate(now);
  productEntry.setModifiedDate(now);
  productEntry.setRepoArtifactId(repoArtifactId);
  productEntry.setRepoGroupId(repoGroupId);
  productEntry.setName(name);
  productEntry.setType(type);
  productEntry.setShortDescription(shortDescription);
  productEntry.setLongDescription(longDescription);
  productEntry.setPageURL(pageURL);
  SRProductEntryUtil.update(productEntry);
  SRProductEntryUtil.setSRLicenses(productEntryId,licenseIds);
  try {
    Indexer.addProductEntry(productEntry.getCompanyId(),productEntryId,user.getFullName(),groupId,repoArtifactId,repoGroupId,name,type,shortDescription,longDescription,pageURL);
  }
 catch (  IOException ioe) {
    _log.warn("Error indexing product entry " + productEntryId,ioe);
  }
  return productEntry;
}

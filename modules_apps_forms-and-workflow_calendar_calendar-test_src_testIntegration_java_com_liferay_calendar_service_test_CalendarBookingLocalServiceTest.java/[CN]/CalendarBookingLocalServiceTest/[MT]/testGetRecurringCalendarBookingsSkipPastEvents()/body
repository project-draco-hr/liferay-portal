{
  ServiceContext serviceContext=createServiceContext();
  CalendarResource calendarResource=CalendarResourceUtil.getUserCalendarResource(_user.getUserId(),serviceContext);
  Calendar calendar=calendarResource.getDefaultCalendar();
  long startTime=System.currentTimeMillis();
  Recurrence recurrence=new Recurrence();
  recurrence.setFrequency(Frequency.DAILY);
  recurrence.setPositionalWeekdays(new ArrayList<PositionalWeekday>());
  CalendarBooking calendarBooking=CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(),calendar.getCalendarId(),new long[0],CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,CalendarBookingConstants.RECURRING_CALENDAR_BOOKING_ID_DEFAULT,RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomString(),startTime,startTime + 36000000,false,RecurrenceSerializer.serialize(recurrence),0,null,0,null,serviceContext);
  Map<Locale,String> instanceTitleMap=RandomTestUtil.randomLocaleStringMap();
  int instanceIndex=2;
  long firstInstancStartTime=startTime + Time.DAY * instanceIndex;
  CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(_user.getUserId(),calendarBooking.getCalendarBookingId(),instanceIndex,calendar.getCalendarId(),instanceTitleMap,calendarBooking.getDescriptionMap(),calendarBooking.getLocation(),firstInstancStartTime,firstInstancStartTime + 36000000,false,null,false,0,null,0,null,serviceContext);
  instanceIndex=4;
  long secondInstancStartTime=firstInstancStartTime + Time.DAY * instanceIndex;
  CalendarBookingLocalServiceUtil.updateCalendarBookingInstance(_user.getUserId(),calendarBooking.getCalendarBookingId(),instanceIndex,calendar.getCalendarId(),instanceTitleMap,calendarBooking.getDescriptionMap(),calendarBooking.getLocation(),secondInstancStartTime,secondInstancStartTime + 36000000,false,null,false,0,null,0,null,serviceContext);
  List<CalendarBooking> instances=CalendarBookingLocalServiceUtil.getRecurringCalendarBookings(calendarBooking,firstInstancStartTime + 1);
  Assert.assertEquals(1,instances.size());
  CalendarBooking instance=instances.get(0);
  Assert.assertEquals(secondInstancStartTime,instance.getStartTime());
}

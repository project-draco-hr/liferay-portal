{
  ServiceContext serviceContext=createServiceContext();
  User calendarBookingCreatorUser=UserTestUtil.addUser();
  CalendarResource calendarResource=CalendarResourceUtil.getUserCalendarResource(calendarBookingCreatorUser.getUserId(),serviceContext);
  Calendar calendar=calendarResource.getDefaultCalendar();
  CalendarResource invitedCalendarResource=CalendarResourceUtil.getUserCalendarResource(_user.getUserId(),serviceContext);
  Calendar invitedCalendar=invitedCalendarResource.getDefaultCalendar();
  long startTime=System.currentTimeMillis() + Time.MINUTE;
  long endTime=startTime + Time.HOUR;
  long firstReminder=Time.MINUTE;
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_PUBLISH);
  CalendarBooking calendarBooking=CalendarBookingLocalServiceUtil.addCalendarBooking(calendarBookingCreatorUser.getUserId(),calendar.getCalendarId(),new long[]{invitedCalendar.getCalendarId()},CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomLocaleStringMap(),RandomTestUtil.randomString(),startTime,endTime,false,null,firstReminder,NotificationType.EMAIL.getValue(),0,NotificationType.EMAIL.getValue(),serviceContext);
  CalendarBooking childCalendarBooking=getChildCalendarBooking(calendarBooking);
  childCalendarBooking=CalendarBookingLocalServiceUtil.updateStatus(_user.getUserId(),childCalendarBooking,CalendarBookingWorkflowConstants.STATUS_APPROVED,serviceContext);
  Thread.sleep(Time.MINUTE);
  String mailMessageSubject="Calendar: Event Reminder for " + StringPool.QUOTE + calendarBooking.getTitle(LocaleUtil.getDefault())+ StringPool.QUOTE;
  List<com.dumbster.smtp.MailMessage> mailMessages=MailServiceTestUtil.getMailMessages("Subject",mailMessageSubject);
  Assert.assertEquals(2,mailMessages.size());
}

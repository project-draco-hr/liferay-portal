{
  long pk=nextLong();
  PollsVote newPollsVote=_persistence.create(pk);
  newPollsVote.setUserId(nextLong());
  newPollsVote.setQuestionId(nextLong());
  newPollsVote.setChoiceId(nextLong());
  newPollsVote.setVoteDate(nextDate());
  _persistence.update(newPollsVote);
  PollsVote existingPollsVote=_persistence.findByPrimaryKey(newPollsVote.getPrimaryKey());
  assertEquals(existingPollsVote.getVoteId(),newPollsVote.getVoteId());
  assertEquals(existingPollsVote.getUserId(),newPollsVote.getUserId());
  assertEquals(existingPollsVote.getQuestionId(),newPollsVote.getQuestionId());
  assertEquals(existingPollsVote.getChoiceId(),newPollsVote.getChoiceId());
  assertEquals(existingPollsVote.getVoteDate(),newPollsVote.getVoteDate());
}

{
  Method method=methodInvocation.getMethod();
  Object[] arguments=methodInvocation.getArguments();
  long plid=0;
  if (arguments.length == 1) {
    PortletPreferencesIds portletPreferencesIds=(PortletPreferencesIds)arguments[0];
    plid=portletPreferencesIds.getPlid();
  }
 else {
    plid=(Long)arguments[3];
  }
  if (plid <= 0) {
    return methodInvocation.proceed();
  }
  Layout layout=LayoutLocalServiceUtil.getLayout(plid);
  if (!LayoutStagingUtil.isBranchingLayout(layout)) {
    return methodInvocation.proceed();
  }
  LayoutRevision layoutRevision=LayoutStagingUtil.getLayoutRevision(layout);
  if (layoutRevision == null) {
    return methodInvocation.proceed();
  }
  long userId=PrincipalThreadLocal.getUserId();
  if (userId == UserConstants.USER_ID_DEFAULT) {
    plid=layoutRevision.getLayoutRevisionId();
  }
 else {
    User user=UserLocalServiceUtil.getUserById(userId);
    plid=StagingUtil.getRecentLayoutRevisionId(user,layoutRevision.getLayoutSetBranchId(),layout.getPlid());
  }
  if (arguments.length == 1) {
    PortletPreferencesIds portletPreferencesIds=(PortletPreferencesIds)arguments[0];
    arguments[0]=new PortletPreferencesIds(portletPreferencesIds.getCompanyId(),portletPreferencesIds.getOwnerId(),portletPreferencesIds.getOwnerType(),plid,portletPreferencesIds.getPortletId());
  }
 else {
    arguments[3]=plid;
  }
  return method.invoke(methodInvocation.getThis(),arguments);
}

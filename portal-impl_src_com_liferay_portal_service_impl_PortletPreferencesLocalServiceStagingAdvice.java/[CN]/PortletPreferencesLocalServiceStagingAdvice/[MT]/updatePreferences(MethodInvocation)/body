{
  Method method=methodInvocation.getMethod();
  Object[] arguments=methodInvocation.getArguments();
  long plid=(Long)arguments[2];
  String portletId=(String)arguments[3];
  if (portletId.equals(PortletKeys.LIFERAY_PORTAL) || (plid <= 0)) {
    return methodInvocation.proceed();
  }
  LayoutRevision layoutRevision=LayoutRevisionUtil.fetchByPrimaryKey(plid);
  ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
  if (serviceContext == null) {
    return methodInvocation.proceed();
  }
  boolean exporting=ParamUtil.getBoolean(serviceContext,"exporting");
  if ((layoutRevision == null) || exporting) {
    return methodInvocation.proceed();
  }
  serviceContext.setWorkflowAction(WorkflowConstants.ACTION_SAVE_DRAFT);
  layoutRevision=LayoutRevisionLocalServiceUtil.updateLayoutRevision(serviceContext.getUserId(),layoutRevision.getLayoutRevisionId(),layoutRevision.getName(),layoutRevision.getTitle(),layoutRevision.getDescription(),layoutRevision.getKeywords(),layoutRevision.getRobots(),layoutRevision.getTypeSettings(),layoutRevision.getIconImage(),layoutRevision.getIconImageId(),layoutRevision.getThemeId(),layoutRevision.getColorSchemeId(),layoutRevision.getWapThemeId(),layoutRevision.getWapColorSchemeId(),layoutRevision.getCss(),serviceContext);
  arguments[2]=layoutRevision.getLayoutRevisionId();
  return method.invoke(methodInvocation.getThis(),arguments);
}

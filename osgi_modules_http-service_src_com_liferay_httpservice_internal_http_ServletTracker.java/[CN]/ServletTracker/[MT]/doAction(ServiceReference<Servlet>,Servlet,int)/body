{
  String alias=GetterUtil.getString(serviceReference.getProperty("alias"));
  if (Validator.isNull(alias)) {
    return servlet;
  }
  Map<String,String> initParameters=new Hashtable<String,String>();
  if (action != ACTION_REMOVED) {
    for (    String key : serviceReference.getPropertyKeys()) {
      if (key.startsWith("init.")) {
        String value=GetterUtil.getString(serviceReference.getProperty(key));
        initParameters.put(key.substring(5),value);
      }
    }
  }
  Bundle bundle=serviceReference.getBundle();
  try {
    BundleServletContext bundleServletContext=_httpSupport.getBundleServletContext(bundle);
    if (action != ACTION_ADDING) {
      bundleServletContext.unregisterServlet(alias);
    }
    if (action != ACTION_REMOVED) {
      String contextId=GetterUtil.getString(serviceReference.getProperty("contextId"));
      HttpContext httpContext=_httpSupport.getHttpContext(contextId);
      if (httpContext == null) {
        httpContext=bundleServletContext.getHttpContext();
      }
      bundleServletContext.registerServlet(alias,servlet,initParameters,httpContext);
    }
  }
 catch (  Exception e) {
    _log.error(e);
  }
  return servlet;
}

{
  FileEntry fileEntry=null;
  String queryString=HttpUtil.getQueryString(url);
  Map<String,String[]> parameters=HttpUtil.parameterMapFromString(queryString);
  if (url.startsWith("/documents/")) {
    String[] pathArray=StringUtil.split(url,CharPool.SLASH);
    String uuid=null;
    long groupId=GetterUtil.getLong(pathArray[2]);
    long folderId=DLFolderConstants.DEFAULT_PARENT_FOLDER_ID;
    String title=null;
    if (pathArray.length == 4) {
      uuid=pathArray[3];
    }
 else     if (pathArray.length == 5) {
      folderId=GetterUtil.getLong(pathArray[3]);
      title=HttpUtil.decodeURL(pathArray[4]);
    }
 else     if (pathArray.length > 5) {
      uuid=pathArray[5];
    }
    try {
      if (Validator.isNotNull(uuid)) {
        fileEntry=DLAppLocalServiceUtil.getFileEntryByUuidAndGroupId(uuid,groupId);
      }
 else {
        fileEntry=DLAppLocalServiceUtil.getFileEntry(groupId,folderId,title);
      }
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
 else   if (parameters.containsKey("folderId") && parameters.containsKey("name")) {
    try {
      long fileEntryId=GetterUtil.getLong(parameters.get("fileEntryId")[0]);
      fileEntry=DLAppLocalServiceUtil.getFileEntry(fileEntryId);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
 else   if (parameters.containsKey("uuid") && parameters.containsKey("groupId")) {
    try {
      String uuid=parameters.get("uuid")[0];
      long groupId=GetterUtil.getLong(parameters.get("groupId")[0]);
      fileEntry=DLAppLocalServiceUtil.getFileEntryByUuidAndGroupId(uuid,groupId);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
  return fileEntry;
}

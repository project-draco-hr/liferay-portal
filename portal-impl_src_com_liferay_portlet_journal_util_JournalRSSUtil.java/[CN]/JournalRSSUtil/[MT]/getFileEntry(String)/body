{
  FileEntry fileEntry=null;
  String queryString=HttpUtil.getQueryString(url);
  Map<String,String[]> parameters=HttpUtil.parameterMapFromString(queryString);
  if (url.startsWith("/documents/")) {
    String[] pathArray=StringUtil.split(url,StringPool.SLASH);
    long groupId=GetterUtil.getLong(pathArray[2]);
    long folderId=GetterUtil.getLong(pathArray[3]);
    String title=HttpUtil.decodeURL(pathArray[4],true);
    try {
      fileEntry=DLAppLocalServiceUtil.getFileEntry(groupId,folderId,title);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
 else   if (parameters.containsKey("folderId") && parameters.containsKey("name")) {
    try {
      long fileEntryId=GetterUtil.getLong(parameters.get("fileEntryId")[0]);
      fileEntry=DLAppLocalServiceUtil.getFileEntry(fileEntryId);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
 else   if (parameters.containsKey("uuid") && parameters.containsKey("groupId")) {
    try {
      String uuid=parameters.get("uuid")[0];
      long groupId=GetterUtil.getLong(parameters.get("groupId")[0]);
      fileEntry=DLAppLocalServiceUtil.getFileEntryByUuidAndGroupId(uuid,groupId);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn(e,e);
      }
    }
  }
  return fileEntry;
}

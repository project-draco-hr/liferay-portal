{
  long defaultFolderId=_getDefaultFolderId(request);
  List<Folder> ancestorFolders=Collections.emptyList();
  if ((folder != null) && (folder.getFolderId() != defaultFolderId)) {
    ancestorFolders=folder.getAncestors();
    int indexOfRootFolder=-1;
    for (int i=0; i < ancestorFolders.size(); i++) {
      Folder ancestorFolder=ancestorFolders.get(i);
      if (defaultFolderId == ancestorFolder.getFolderId()) {
        indexOfRootFolder=i;
      }
    }
    if (indexOfRootFolder > -1) {
      ancestorFolders=ancestorFolders.subList(0,indexOfRootFolder);
    }
  }
  Collections.reverse(ancestorFolders);
  for (  Folder ancestorFolder : ancestorFolders) {
    portletURL.setParameter("folderId",String.valueOf(ancestorFolder.getFolderId()));
    Map<String,Object> data=new HashMap<String,Object>();
    data.put("folder-id",ancestorFolder.getFolderId());
    data.put("refresh-folders",Boolean.TRUE.toString());
    PortalUtil.addPortletBreadcrumbEntry(request,ancestorFolder.getName(),portletURL.toString(),data);
  }
  long folderId=DLFolderConstants.DEFAULT_PARENT_FOLDER_ID;
  if (folder != null) {
    folderId=folder.getFolderId();
  }
  portletURL.setParameter("folderId",String.valueOf(folderId));
  if ((folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) && (folderId != defaultFolderId)) {
    Map<String,Object> data=new HashMap<String,Object>();
    data.put("folder-id",folderId);
    data.put("refresh-folders",Boolean.TRUE.toString());
    PortalUtil.addPortletBreadcrumbEntry(request,folder.getName(),portletURL.toString(),data);
  }
}

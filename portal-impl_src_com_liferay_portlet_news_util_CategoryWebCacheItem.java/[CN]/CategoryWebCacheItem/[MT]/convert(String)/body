{
  try {
    Map categoryMap=CollectionFactory.getHashMap();
    Set categorySet=new TreeSet();
    Map feedMap=CollectionFactory.getHashMap();
    Set feedSet=new TreeSet();
    String xml=null;
    try {
      xml=Http.URLtoString(url);
    }
 catch (    IOException ioe) {
      xml=ContentUtil.get("com/liferay/portlet/news/dependencies/categories.tsv");
    }
    BufferedReader br=new BufferedReader(new StringReader(xml));
    String s=null;
    while ((s=br.readLine()) != null) {
      String feedURL;
      String fullName;
      String shortName;
      String categoryName;
      int pos;
      pos=s.indexOf("\t");
      feedURL=s.substring(0,pos);
      s=s.substring(pos + 1,s.length());
      pos=s.indexOf("\t");
      fullName=s.substring(0,pos);
      s=s.substring(pos + 1,s.length());
      pos=s.indexOf("\t");
      shortName=s.substring(0,pos);
      categoryName=s.substring(pos + 1,s.length());
      Feed feed=new Feed(feedURL,fullName,shortName,categoryName);
      categorySet.add(feed.getCategoryName());
      feedMap.put(feedURL,feed);
      feedSet.add(feed);
    }
    categoryMap=CollectionFactory.getHashMap();
    String temp="";
    Set tempSet=null;
    Iterator i=feedSet.iterator();
    while (i.hasNext()) {
      Feed feed=(Feed)i.next();
      if (temp.equals(feed.getCategoryName())) {
        tempSet.add(feed);
      }
 else {
        tempSet=new TreeSet();
        categoryMap.put(feed.getCategoryName(),tempSet);
        tempSet.add(feed);
      }
      temp=feed.getCategoryName();
    }
    categoryMap=Collections.unmodifiableMap(categoryMap);
    categorySet=Collections.unmodifiableSet(categorySet);
    feedMap=Collections.unmodifiableMap(feedMap);
    feedSet=Collections.unmodifiableSet(feedSet);
    List list=new ArrayList();
    list.add(categoryMap);
    list.add(categorySet);
    list.add(feedMap);
    list.add(feedSet);
    return list;
  }
 catch (  Exception e) {
    throw new WebCacheException(e);
  }
}

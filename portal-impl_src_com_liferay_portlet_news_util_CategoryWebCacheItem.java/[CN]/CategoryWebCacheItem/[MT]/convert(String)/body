{
  try {
    Map<String,Set<Feed>> categoryMap=new HashMap<String,Set<Feed>>();
    Set<String> categorySet=new TreeSet<String>();
    Map<String,Feed> feedMap=new HashMap<String,Feed>();
    Set<Feed> feedSet=new TreeSet<Feed>();
    String xml=null;
    try {
      xml=HttpUtil.URLtoString(url);
    }
 catch (    IOException ioe) {
      xml=ContentUtil.get("com/liferay/portlet/news/dependencies/categories.tsv");
    }
    BufferedReader br=new BufferedReader(new StringReader(xml));
    String s=null;
    while ((s=br.readLine()) != null) {
      String feedURL;
      String fullName;
      String shortName;
      String categoryName;
      int pos;
      pos=s.indexOf("\t");
      feedURL=s.substring(0,pos);
      s=s.substring(pos + 1,s.length());
      pos=s.indexOf("\t");
      fullName=s.substring(0,pos);
      s=s.substring(pos + 1,s.length());
      pos=s.indexOf("\t");
      shortName=s.substring(0,pos);
      categoryName=s.substring(pos + 1,s.length());
      Feed feed=new Feed(feedURL,fullName,shortName,categoryName);
      categorySet.add(feed.getCategoryName());
      feedMap.put(feedURL,feed);
      feedSet.add(feed);
    }
    categoryMap=new HashMap<String,Set<Feed>>();
    String temp="";
    Set<Feed> tempSet=null;
    for (    Feed feed : feedSet) {
      if (Validator.isNull(feed.getCategoryName())) {
        continue;
      }
      if (temp.equals(feed.getCategoryName())) {
        tempSet.add(feed);
      }
 else {
        tempSet=new TreeSet<Feed>();
        categoryMap.put(feed.getCategoryName(),tempSet);
        tempSet.add(feed);
      }
      temp=feed.getCategoryName();
    }
    categoryMap=Collections.unmodifiableMap(categoryMap);
    categorySet=Collections.unmodifiableSet(categorySet);
    feedMap=Collections.unmodifiableMap(feedMap);
    feedSet=Collections.unmodifiableSet(feedSet);
    Object[] objArray=new Object[4];
    objArray[0]=categoryMap;
    objArray[1]=categorySet;
    objArray[2]=feedMap;
    objArray[3]=feedSet;
    return objArray;
  }
 catch (  Exception e) {
    throw new WebCacheException(e);
  }
}

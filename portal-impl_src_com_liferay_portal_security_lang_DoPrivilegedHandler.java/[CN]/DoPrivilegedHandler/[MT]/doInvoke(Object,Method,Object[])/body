{
  Class<?> methodDeclaringClass=method.getDeclaringClass();
  String methodName=method.getName();
  if (methodDeclaringClass.equals(DoPrivilegedBean.class) && methodName.equals("getActualBean")) {
    return _bean;
  }
 else   if (methodDeclaringClass.equals(Object.class) && methodName.equals("equals")) {
    Object object=arguments[0];
    if (object instanceof DoPrivilegedBean) {
      DoPrivilegedBean doPrivilegedBean=(DoPrivilegedBean)object;
      object=doPrivilegedBean.getActualBean();
    }
    return _bean.equals(object);
  }
 else   if (_isNotPrivileged(method)) {
    return method.invoke(_bean,arguments);
  }
  String declaringClassName=methodDeclaringClass.getName();
  if (declaringClassName.endsWith(_BEAN_NAME_SUFFIX_FINDER) || declaringClassName.endsWith(_BEAN_NAME_SUFFIX_PERSISTENCE)) {
    PortalServicePermission.checkService(_bean,method,arguments);
  }
  try {
    return AccessController.doPrivileged(new InvokePrivilegedExceptionAction(_bean,method,arguments));
  }
 catch (  PrivilegedActionException pae) {
    Exception e=pae.getException();
    throw e.getCause();
  }
}

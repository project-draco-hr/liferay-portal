{
  JSONObject jsonObject=JSONFactoryUtil.createJSONObject();
  try {
    String fieldGroup=ParamUtil.getString(actionRequest,"fieldGroup");
    if (fieldGroup.equals("additionalEmailAddresses")) {
      updateAdditionalEmailAddresses(actionRequest);
    }
 else     if (fieldGroup.equals("addresses")) {
      updateAddresses(actionRequest);
    }
 else     if (fieldGroup.equals("categorization")) {
      updateAsset(actionRequest);
    }
 else     if (fieldGroup.equals("comments") || fieldGroup.equals("details") || fieldGroup.equals("instantMessenger")|| fieldGroup.equals("sms")|| fieldGroup.equals("socialNetwork")) {
      updateProfile(actionRequest);
    }
 else     if (fieldGroup.equals("phoneNumbers")) {
      updatePhoneNumbers(actionRequest);
    }
 else     if (fieldGroup.equals("websites")) {
      updateWebsites(actionRequest);
    }
    String redirect=ParamUtil.getString(actionRequest,"redirect");
    jsonObject.put("redirect",redirect);
    jsonObject.put("success",Boolean.TRUE);
  }
 catch (  Exception e) {
    ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
    String message="your-request-failed-to-complete";
    if (e instanceof AddressCityException) {
      message="please-enter-a-valid-city";
    }
 else     if (e instanceof AddressStreetException) {
      message="please-enter-a-valid-street";
    }
 else     if (e instanceof AddressZipException) {
      message="please-enter-a-valid-postal-code";
    }
 else     if (e instanceof ContactFirstNameException) {
      message="please-enter-a-valid-first-name";
    }
 else     if (e instanceof ContactFullNameException) {
      message="please-enter-a-valid-first-middle-and-last-name";
    }
 else     if (e instanceof ContactLastNameException) {
      message="please-enter-a-valid-last-name";
    }
 else     if (e instanceof DuplicateUserEmailAddressException) {
      message="the-email-address-you-requested-is-already-taken";
    }
 else     if (e instanceof EmailAddressException) {
      message="please-enter-a-valid-email-address";
    }
 else     if (e instanceof NoSuchCountryException) {
      message="please-select-a-country";
    }
 else     if (e instanceof NoSuchListTypeException) {
      message="please-select-a-type";
    }
 else     if (e instanceof NoSuchRegionException) {
      message="please-select-a-region";
    }
 else     if (e instanceof PhoneNumberException) {
      message="please-enter-a-valid-phone-number";
    }
 else     if (e instanceof PhoneNumberExtensionException) {
      message="please-enter-a-valid-phone-number-extension";
    }
 else     if (e instanceof ReservedUserEmailAddressException) {
      message="the-email-address-you-requested-is-reserveds";
    }
 else     if (e instanceof ReservedUserScreenNameException) {
      message="the-screen-name-you-requested-is-reserved";
    }
 else     if (e instanceof UserEmailAddressException) {
      message="please-enter-a-valid-email-address";
    }
 else     if (e instanceof UserScreenNameException) {
      message="please-enter-a-valid-screen-name";
    }
 else     if (e instanceof UserSmsException) {
      message="please-enter-a-sms-id-that-is-a-valid-email-address";
    }
 else     if (e instanceof WebsiteURLException) {
      message="please-enter-a-valid-url";
    }
    jsonObject.put("message",translate(actionRequest,message));
    jsonObject.put("success",Boolean.FALSE);
  }
  writeJSON(actionRequest,actionResponse,jsonObject);
}

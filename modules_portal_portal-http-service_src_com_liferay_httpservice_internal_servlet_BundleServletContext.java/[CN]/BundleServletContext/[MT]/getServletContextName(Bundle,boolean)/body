{
  Dictionary<String,String> headers=bundle.getHeaders();
  String webContextPath=headers.get("Web-ContextPath");
  if (Validator.isNotNull(webContextPath)) {
    return webContextPath.substring(1);
  }
  String deploymentContext=null;
  try {
    String pluginPackageXml=HttpUtil.URLtoString(bundle.getResource("/WEB-INF/liferay-plugin-package.xml"));
    if (pluginPackageXml != null) {
      Document document=SAXReaderUtil.read(pluginPackageXml);
      Element rootElement=document.getRootElement();
      deploymentContext=GetterUtil.getString(rootElement.elementText("recommended-deployment-context"));
    }
 else {
      String pluginPackageProperties=HttpUtil.URLtoString(bundle.getResource("/WEB-INF/liferay-plugin-package.properties"));
      if (pluginPackageProperties != null) {
        if (_log.isDebugEnabled()) {
          _log.debug("Reading plugin package from " + "liferay-plugin-package.properties");
        }
        Properties properties=PropertiesUtil.load(pluginPackageProperties);
        deploymentContext=GetterUtil.getString(properties.getProperty("recommended-deployment-context"),deploymentContext);
      }
    }
  }
 catch (  Exception e) {
    if (_log.isWarnEnabled()) {
      _log.warn(e,e);
    }
  }
  if (Validator.isNull(deploymentContext) && generate) {
    deploymentContext=PortalUtil.getJsSafePortletId(bundle.getSymbolicName());
  }
  if (Validator.isNotNull(deploymentContext) && deploymentContext.startsWith(StringPool.SLASH)) {
    deploymentContext=deploymentContext.substring(1);
  }
  return deploymentContext;
}

{
  try {
    String[] destinationArray=WebDAVUtil.getPathArray(destination,true);
    long companyId=webDavRequest.getCompanyId();
    long parentFolderId=IGFolderConstants.DEFAULT_PARENT_FOLDER_ID;
    try {
      parentFolderId=getParentFolderId(companyId,destinationArray);
    }
 catch (    NoSuchFolderException nsfe) {
      return HttpServletResponse.SC_CONFLICT;
    }
    IGFolder folder=(IGFolder)resource.getModel();
    long groupId=WebDAVUtil.getGroupId(companyId,destination);
    String name=WebDAVUtil.getResourceName(destinationArray);
    String description=folder.getDescription();
    int status=HttpServletResponse.SC_CREATED;
    if (overwrite) {
      if (deleteResource(groupId,parentFolderId,name)) {
        status=HttpServletResponse.SC_NO_CONTENT;
      }
    }
    ServiceContext serviceContext=new ServiceContext();
    serviceContext.setAddGroupPermissions(isAddGroupPermissions(groupId));
    serviceContext.setAddGuestPermissions(true);
    serviceContext.setScopeGroupId(groupId);
    if (depth == 0) {
      IGFolderServiceUtil.addFolder(parentFolderId,name,description,serviceContext);
    }
 else {
      IGFolderServiceUtil.copyFolder(folder.getFolderId(),parentFolderId,name,description,serviceContext);
    }
    return status;
  }
 catch (  DuplicateFolderNameException dfne) {
    return HttpServletResponse.SC_PRECONDITION_FAILED;
  }
catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
}

{
  String[] lines=StringUtil.split(javadocLessContent,"\n");
  JavaClass javaClass=_getJavaClass(fileName,new UnsyncStringReader(javadocLessContent));
  Element rootElement=document.getRootElement();
  Map<Integer,String> commentsMap=new TreeMap<Integer,String>();
  commentsMap.put(javaClass.getLineNumber(),_getJavaClassComment(rootElement,javaClass));
  Map<String,Element> methodElementsMap=new HashMap<String,Element>();
  List<Element> methodElements=rootElement.elements("method");
  for (  Element methodElement : methodElements) {
    String methodKey=_getMethodKey(methodElement);
    methodElementsMap.put(methodKey,methodElement);
  }
  JavaMethod[] javaMethods=javaClass.getMethods();
  for (  JavaMethod javaMethod : javaMethods) {
    if (commentsMap.containsKey(javaMethod.getLineNumber())) {
      continue;
    }
    commentsMap.put(javaMethod.getLineNumber(),_getJavaMethodComment(lines,methodElementsMap,javaMethod));
  }
  Map<String,Element> fieldElementsMap=new HashMap<String,Element>();
  List<Element> fieldElements=rootElement.elements("field");
  for (  Element fieldElement : fieldElements) {
    String fieldKey=_getFieldKey(fieldElement);
    fieldElementsMap.put(fieldKey,fieldElement);
  }
  JavaField[] javaFields=javaClass.getFields();
  for (  JavaField javaField : javaFields) {
    if (commentsMap.containsKey(javaField.getLineNumber())) {
      continue;
    }
    commentsMap.put(javaField.getLineNumber(),_getJavaFieldComment(lines,fieldElementsMap,javaField));
  }
  String formattedContent;
  if (lines.length == 0) {
    formattedContent=StringPool.BLANK;
  }
 else {
    StringBundler sb=new StringBundler(lines.length * 3);
    for (int lineNumber=1; lineNumber <= lines.length; lineNumber++) {
      String line=lines[lineNumber - 1];
      String comments=commentsMap.get(lineNumber);
      if (comments != null) {
        sb.append(comments);
      }
      sb.append(line);
      sb.append("\n");
    }
    formattedContent=sb.toString().trim();
  }
  if (!originalContent.equals(formattedContent)) {
    File file=new File(_basedir + fileName);
    _fileUtil.write(file,formattedContent.getBytes());
    System.out.println("Writing " + file);
  }
}

{
  StringBuilder sb=new StringBuilder();
  int maxNameLength=0;
  for (  String name : names) {
    if (name.length() < maxNameLength) {
      continue;
    }
    List<Element> elements=parentElement.elements(name);
    for (    Element element : elements) {
      Element commentElement=element.element("comment");
      String comment=null;
      if (commentElement != null) {
        comment=commentElement.getText();
      }
 else {
        comment=element.getText();
      }
      if (!_initializeMissingJavadocs && Validator.isNull(comment)) {
        continue;
      }
      maxNameLength=name.length();
      break;
    }
  }
  int indentLength=_getIndentLength(indent) + maxNameLength;
  String maxNameIndent="\t ";
  for (int i=0; i < maxNameLength; i++) {
    maxNameIndent+=" ";
  }
  maxNameIndent=StringUtil.replace(maxNameIndent,"    ","\t");
  for (  String name : names) {
    List<Element> elements=parentElement.elements(name);
    for (    Element element : elements) {
      Element commentElement=element.element("comment");
      String comment=null;
      if (commentElement != null) {
        comment=commentElement.getText();
      }
 else {
        comment=element.getText();
      }
      if (!_initializeMissingJavadocs && Validator.isNull(comment)) {
        continue;
      }
      sb.append(indent);
      sb.append(" * @");
      sb.append(name);
      sb.append(" ");
      for (int i=0; i < maxNameLength - name.length(); i++) {
        sb.append(" ");
      }
      if (commentElement != null) {
        comment=element.elementText("name") + " " + comment;
      }
      comment=StringUtil.wrap(comment,80 - indentLength - 5,"\n");
      comment=comment.trim();
      comment=StringUtil.replace(comment,"\n","\n" + indent + " *"+ maxNameIndent);
      while (comment.contains(" \n")) {
        comment=StringUtil.replace(comment," \n","\n");
      }
      while (comment.startsWith("\n")) {
        comment=comment.substring(1,comment.length());
      }
      sb.append(comment);
      sb.append("\n");
    }
  }
  return sb.toString();
}

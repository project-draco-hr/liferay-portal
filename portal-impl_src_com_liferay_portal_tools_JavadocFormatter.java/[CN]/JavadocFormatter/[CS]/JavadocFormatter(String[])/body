{
  CmdLineParser cmdLineParser=new CmdLineParser();
  CmdLineParser.Option limitOption=cmdLineParser.addStringOption("limit");
  CmdLineParser.Option initOption=cmdLineParser.addStringOption("init");
  cmdLineParser.parse(args);
  String limit=(String)cmdLineParser.getOptionValue(limitOption);
  String init=(String)cmdLineParser.getOptionValue(initOption);
  if (Validator.isNotNull(init) && !init.startsWith("$")) {
    _initializeMissingJavadocs=GetterUtil.getBoolean(init);
  }
  DirectoryScanner ds=new DirectoryScanner();
  ds.setBasedir(_basedir);
  ds.setExcludes(new String[]{"**\\classes\\**","**\\portal-client\\**"});
  List<String> includes=new ArrayList<String>();
  if (Validator.isNotNull(limit) && !limit.startsWith("$")) {
    System.out.println("Limit on " + limit);
    String[] limitArray=StringUtil.split(limit,'/');
    for (    String curLimit : limitArray) {
      includes.add("**\\" + StringUtil.replace(curLimit,".","\\") + "\\**\\*.java");
      includes.add("**\\" + curLimit + ".java");
    }
  }
 else {
    includes.add("**\\*.java");
  }
  ds.setIncludes(includes.toArray(new String[includes.size()]));
  ds.scan();
  String[] fileNames=ds.getIncludedFiles();
  if ((fileNames.length == 0) && Validator.isNotNull(limit) && !limit.startsWith("$")) {
    StringBuilder sb=new StringBuilder("Limit file not found: ");
    sb.append(limit);
    if (limit.contains(".")) {
      sb.append(" Specify limit filename without package path or ");
      sb.append("file type suffix.");
    }
    System.out.println(sb.toString());
  }
  for (  String fileName : fileNames) {
    fileName=StringUtil.replace(fileName,"\\","/");
    _format(fileName);
  }
}

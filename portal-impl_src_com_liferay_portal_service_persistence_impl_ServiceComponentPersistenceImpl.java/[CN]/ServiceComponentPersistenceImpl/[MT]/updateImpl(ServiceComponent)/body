{
  serviceComponent=toUnwrappedModel(serviceComponent);
  boolean isNew=serviceComponent.isNew();
  ServiceComponentModelImpl serviceComponentModelImpl=(ServiceComponentModelImpl)serviceComponent;
  Session session=null;
  try {
    session=openSession();
    if (serviceComponent.isNew()) {
      session.save(serviceComponent);
      serviceComponent.setNew(false);
    }
 else {
      serviceComponent=(ServiceComponent)session.merge(serviceComponent);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !ServiceComponentModelImpl.COLUMN_BITMASK_ENABLED) {
    finderCache.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((serviceComponentModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUILDNAMESPACE.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{serviceComponentModelImpl.getOriginalBuildNamespace()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_BUILDNAMESPACE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUILDNAMESPACE,args);
      args=new Object[]{serviceComponentModelImpl.getBuildNamespace()};
      finderCache.removeResult(FINDER_PATH_COUNT_BY_BUILDNAMESPACE,args);
      finderCache.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_BUILDNAMESPACE,args);
    }
  }
  entityCache.putResult(ServiceComponentModelImpl.ENTITY_CACHE_ENABLED,ServiceComponentImpl.class,serviceComponent.getPrimaryKey(),serviceComponent,false);
  clearUniqueFindersCache(serviceComponentModelImpl);
  cacheUniqueFindersCache(serviceComponentModelImpl,isNew);
  serviceComponent.resetOriginalValues();
  return serviceComponent;
}

{
  try {
    String filePathName=filePath.toString();
    if (isDuplicateEvent(eventType,filePathName,getSyncAccountId())) {
      return;
    }
    SyncAccount syncAccount=SyncAccountService.fetchSyncAccount(getSyncAccountId());
    if (filePathName.equals(syncAccount.getFilePathName())) {
      return;
    }
    Path parentFilePath=filePath.getParent();
    String parentFilePathName=parentFilePath.toString();
    if (parentFilePathName.equals(syncAccount.getFilePathName())) {
      SyncSite syncSite=SyncSiteService.fetchSyncSite(filePathName,getSyncAccountId());
      if ((syncSite == null) || syncSite.isActive()) {
        return;
      }
      SyncFile syncFile=SyncFileService.fetchSyncFile(filePathName);
      if (FileKeyUtil.hasFileKey(filePath,syncFile.getSyncFileId())) {
        if (_logger.isDebugEnabled()) {
          _logger.debug("Sync site {} reactivated.",syncSite.getName());
        }
        SyncSiteService.activateSyncSite(syncSite.getSyncSiteId(),false);
      }
      return;
    }
    long repositoryId=getRepositoryId(filePath);
    if (repositoryId <= 0) {
      return;
    }
    SyncSite syncSite=SyncSiteService.fetchSyncSite(repositoryId,getSyncAccountId());
    if (!syncSite.isActive()) {
      return;
    }
    if (!eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) {
      SyncWatchEventService.addSyncWatchEvent(eventType,filePathName,getFileType(eventType,filePath),null,getSyncAccountId());
      return;
    }
    String previousEventType=null;
    Path previousFilePath=null;
    long previousRepositoryId=0;
    SyncWatchEvent lastSyncWatchEvent=SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId());
    if (lastSyncWatchEvent != null) {
      previousEventType=lastSyncWatchEvent.getEventType();
      previousFilePath=Paths.get(lastSyncWatchEvent.getFilePathName());
      previousRepositoryId=getRepositoryId(previousFilePath);
    }
    String fileType=getFileType(eventType,filePath);
    if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) {
      eventType=SyncWatchEvent.EVENT_TYPE_CREATE;
      SyncWatchEventService.addSyncWatchEvent(eventType,filePathName,getFileType(eventType,filePath),null,getSyncAccountId());
      if (fileType.equals(SyncFile.TYPE_FOLDER)) {
        SyncFile syncFile=SyncFileService.fetchSyncFile(filePathName);
        if (syncFile != null) {
          FileUtil.fireDeleteEvents(Paths.get(filePathName));
        }
        Watcher watcher=WatcherManager.getWatcher(getSyncAccountId());
        watcher.walkFileTree(Paths.get(filePathName));
      }
    }
 else     if (filePath.equals(previousFilePath)) {
      lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_MODIFY);
      SyncWatchEventService.update(lastSyncWatchEvent);
    }
 else     if (parentFilePath.equals(previousFilePath.getParent())) {
      if (MSOfficeFileUtil.isTempRenamedFile(previousFilePath,filePath)) {
        SyncWatchEventService.deleteSyncWatchEvent(lastSyncWatchEvent.getSyncWatchEventId());
        return;
      }
      lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_RENAME);
      lastSyncWatchEvent.setFilePathName(filePathName);
      lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString());
      SyncWatchEventService.update(lastSyncWatchEvent);
      if (fileType.equals(SyncFile.TYPE_FOLDER)) {
        Watcher watcher=WatcherManager.getWatcher(getSyncAccountId());
        watcher.walkFileTree(Paths.get(filePathName));
      }
    }
 else {
      SyncFile syncFile=SyncFileService.fetchSyncFile(filePathName);
      if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) {
        FileUtil.fireDeleteEvents(Paths.get(filePathName));
        Watcher watcher=WatcherManager.getWatcher(getSyncAccountId());
        watcher.walkFileTree(Paths.get(filePathName));
        watchEvent(SyncWatchEvent.EVENT_TYPE_DELETE,filePath);
      }
 else {
        lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_MOVE);
        lastSyncWatchEvent.setFilePathName(filePathName);
        lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString());
        SyncWatchEventService.update(lastSyncWatchEvent);
        if (fileType.equals(SyncFile.TYPE_FOLDER)) {
          Watcher watcher=WatcherManager.getWatcher(getSyncAccountId());
          watcher.walkFileTree(Paths.get(filePathName));
        }
      }
    }
  }
 catch (  Exception e) {
    _logger.error(e.getMessage(),e);
  }
}

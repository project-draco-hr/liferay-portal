{
  KBFolder newKBFolder=addKBFolder();
  _persistence.clearCache();
  KBFolder existingKBFolder=_persistence.findByPrimaryKey(newKBFolder.getPrimaryKey());
  Assert.assertTrue(Objects.equals(existingKBFolder.getUuid(),ReflectionTestUtil.invoke(existingKBFolder,"getOriginalUuid",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingKBFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingKBFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingKBFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBFolder.getParentKBFolderId()),ReflectionTestUtil.<Long>invoke(existingKBFolder,"getOriginalParentKBFolderId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingKBFolder.getName(),ReflectionTestUtil.invoke(existingKBFolder,"getOriginalName",new Class<?>[0])));
  Assert.assertEquals(Long.valueOf(existingKBFolder.getGroupId()),ReflectionTestUtil.<Long>invoke(existingKBFolder,"getOriginalGroupId",new Class<?>[0]));
  Assert.assertEquals(Long.valueOf(existingKBFolder.getParentKBFolderId()),ReflectionTestUtil.<Long>invoke(existingKBFolder,"getOriginalParentKBFolderId",new Class<?>[0]));
  Assert.assertTrue(Objects.equals(existingKBFolder.getUrlTitle(),ReflectionTestUtil.invoke(existingKBFolder,"getOriginalUrlTitle",new Class<?>[0])));
}

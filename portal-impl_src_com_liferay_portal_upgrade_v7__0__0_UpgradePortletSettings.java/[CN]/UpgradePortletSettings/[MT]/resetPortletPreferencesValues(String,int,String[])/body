{
  try {
    visitPortletPreferences(portletId,ownerType,new Visitor<PortletPreferencesRow>(){
      @Override public void visit(      PortletPreferencesRow portletPreferencesRow) throws ReadOnlyException, SQLException {
        javax.portlet.PortletPreferences javaxPortletPreferences=PortletPreferencesFactoryUtil.fromDefaultXML(portletPreferencesRow._preferences);
        Enumeration<String> names=javaxPortletPreferences.getNames();
        List<String> keysToReset=new ArrayList<String>();
        while (names.hasMoreElements()) {
          String name=names.nextElement();
          for (          String key : keys) {
            if (name.startsWith(key)) {
              keysToReset.add(name);
              break;
            }
          }
        }
        for (        String keyToReset : keysToReset) {
          javaxPortletPreferences.reset(keyToReset);
        }
        portletPreferencesRow._preferences=PortletPreferencesFactoryUtil.toXML(javaxPortletPreferences);
        updatePortletPreferences(portletPreferencesRow);
      }
    }
);
  }
 catch (  SQLException sqle) {
    throw new PortalException("Unable to clean keys with ownerType " + ownerType + " for "+ "portlet "+ portletId,sqle);
  }
catch (  RuntimeException re) {
    throw new SystemException("Unable to clean keys with ownerType " + ownerType + " for "+ "portlet "+ portletId,re);
  }
}

{
  ResultSet rs=null;
  try {
    rs=getPortletPreferences(portletId,ownerType);
    while (rs.next()) {
      PortletPreferencesRow portletPreferencesRow=getPortletPreferencesRow(rs);
      javax.portlet.PortletPreferences javaxPortletPreferences=PortletPreferencesFactoryUtil.fromDefaultXML(portletPreferencesRow.getPreferences());
      Enumeration<String> names=javaxPortletPreferences.getNames();
      List<String> keysToReset=new ArrayList<String>();
      while (names.hasMoreElements()) {
        String name=names.nextElement();
        for (        String key : keys) {
          if (name.startsWith(key)) {
            keysToReset.add(name);
            break;
          }
        }
      }
      for (      String keyToReset : keysToReset) {
        javaxPortletPreferences.reset(keyToReset);
      }
      portletPreferencesRow.setPreferences(PortletPreferencesFactoryUtil.toXML(javaxPortletPreferences));
      updatePortletPreferences(portletPreferencesRow);
    }
  }
 catch (  SQLException sqle) {
    throw new PortalException("Unable to clean keys with ownerType " + ownerType + " for "+ "portlet "+ portletId,sqle);
  }
catch (  ReadOnlyException roe) {
    throw new PortalException("Unable to clean keys with ownerType " + ownerType + " for "+ "portlet "+ portletId,roe);
  }
 finally {
    DataAccess.deepCleanUp(rs);
  }
}

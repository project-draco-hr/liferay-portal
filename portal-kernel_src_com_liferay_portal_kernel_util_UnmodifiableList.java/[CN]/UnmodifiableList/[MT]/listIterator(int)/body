{
  return new ListIterator<E>(){
    ListIterator<? extends E> itr=_list.listIterator(index);
    @Override public void add(    E element){
      throw new UnsupportedOperationException(_MESSAGE);
    }
    @Override public boolean hasNext(){
      return itr.hasNext();
    }
    @Override public E next(){
      return itr.next();
    }
    @Override public boolean hasPrevious(){
      return itr.hasPrevious();
    }
    @Override public E previous(){
      return itr.previous();
    }
    @Override public int nextIndex(){
      return itr.nextIndex();
    }
    @Override public int previousIndex(){
      return itr.previousIndex();
    }
    @Override public void remove(){
      throw new UnsupportedOperationException(_MESSAGE);
    }
    @Override public void set(    E element){
      throw new UnsupportedOperationException(_MESSAGE);
    }
  }
;
}

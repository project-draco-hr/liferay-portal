{
  javax.portlet.PortletPreferences jxPreferences=PortletPreferencesFactoryUtil.fromDefaultXML(xml);
  Enumeration<String> enu=jxPreferences.getNames();
  while (enu.hasMoreElements()) {
    String name=enu.nextElement();
    String value=GetterUtil.getString(jxPreferences.getValue(name,null));
    if (name.equals("anyAssetType") || name.equals("classNameIds")) {
      updateAssetPublisherClassNameIds(jxPreferences,name);
    }
 else     if (name.equals("anyClassTypeDLFileEntryAssetRendererFactory") || name.equals("classTypeIdsDLFileEntryAssetRendererFactory") || (name.equals("classTypeIds") && anyAssetTypeClassName.equals(DLFileEntry.class.getName()))) {
      updatePreferencesClassPKs(jxPreferences,name,DLFileEntryType.class.getName());
    }
 else     if (name.equals("anyClassTypeJournalArticleAssetRendererFactory") || name.equals("classTypeIdsJournalArticleAssetRendererFactory") || (name.equals("classTypeIds") && anyAssetTypeClassName.equals(JournalArticle.class.getName()))) {
      updatePreferencesClassPKs(jxPreferences,name,DDMStructure.class.getName());
    }
 else     if (name.equals("assetVocabularyId")) {
      updatePreferencesClassPKs(jxPreferences,name,AssetVocabulary.class.getName());
    }
 else     if (name.startsWith("queryName") && value.equalsIgnoreCase("assetCategories")) {
      String index=name.substring(9);
      updatePreferencesClassPKs(jxPreferences,"queryValues" + index,AssetCategory.class.getName());
    }
 else     if (name.equals("scopeIds")) {
      updateAssetPublisherScopeIds(portletDataContext,jxPreferences,name,plid);
    }
  }
  return PortletPreferencesFactoryUtil.toXML(jxPreferences);
}

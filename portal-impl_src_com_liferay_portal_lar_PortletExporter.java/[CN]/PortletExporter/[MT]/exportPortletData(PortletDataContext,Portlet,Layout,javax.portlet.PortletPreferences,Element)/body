{
  String portletDataHandlerClass=portlet.getPortletDataHandlerClass();
  if (Validator.isNull(portletDataHandlerClass)) {
    return;
  }
  String portletId=portlet.getPortletId();
  if (_log.isDebugEnabled()) {
    _log.debug("Exporting data for " + portletId);
  }
  Map<String,String[]> parameterMap=context.getParameterMap();
  boolean exportData=false;
  if (MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PORTLET_DATA + "_" + portlet.getRootPortletId()) || MapUtil.getBoolean(parameterMap,PortletDataHandlerKeys.PORTLET_DATA_ALL)) {
    exportData=true;
  }
  if (!exportData) {
    if (_log.isDebugEnabled()) {
      _log.debug("Not exporting data for " + portletId + " because it was not selected by the user");
    }
    return;
  }
  String data=null;
  try {
    data=(String)PortletClassInvoker.invoke(portletId,portletDataHandlerClass,"exportData",context,portletId,portletPreferences);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
  if (data == null) {
    if (_log.isDebugEnabled()) {
      _log.debug("Not exporting data for " + portletId + " because null data was returned");
    }
    return;
  }
  StringBuilder sb=new StringBuilder();
  sb.append(context.getPortletPath(portletId));
  if (portlet.isPreferencesUniquePerLayout()) {
    sb.append(StringPool.SLASH);
    sb.append(layout.getPlid());
  }
  sb.append("/portlet-data.xml");
  Element portletDataEl=parentEl.addElement("portlet-data");
  portletDataEl.addAttribute("path",sb.toString());
  context.addZipEntry(sb.toString(),data);
}

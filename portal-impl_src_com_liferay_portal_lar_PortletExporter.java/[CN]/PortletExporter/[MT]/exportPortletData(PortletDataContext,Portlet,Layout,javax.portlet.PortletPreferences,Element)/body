{
  if (portlet == null) {
    return;
  }
  PortletDataHandler portletDataHandler=portlet.getPortletDataHandlerInstance();
  if ((portletDataHandler == null) || portletDataHandler.isDataPortletInstanceLevel()) {
    return;
  }
  Group group=layout.getGroup();
  if (group.isStagingGroup()) {
    group=group.getLiveGroup();
  }
  String portletId=portlet.getPortletId();
  if (ExportImportThreadLocal.isStagingInProcess() && !group.isStagedPortlet(portletId)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Not exporting data for " + portletId + " because it is configured not to be staged");
    }
    return;
  }
  if (_log.isDebugEnabled()) {
    _log.debug("Exporting data for " + portletId);
  }
  StringBundler sb=new StringBundler(4);
  sb.append(ExportImportPathUtil.getPortletPath(portletDataContext,portletId));
  sb.append(StringPool.SLASH);
  if (portlet.isPreferencesUniquePerLayout()) {
    sb.append(layout.getPlid());
  }
 else {
    sb.append(portletDataContext.getScopeGroupId());
  }
  sb.append("/portlet-data.xml");
  String path=sb.toString();
  if (portletDataContext.hasPrimaryKey(String.class,path)) {
    return;
  }
  Date originalStartDate=portletDataContext.getStartDate();
  Date portletLastPublishDate=ExportImportDateUtil.getLastPublishDate(portletDataContext,jxPortletPreferences);
  portletDataContext.setStartDate(portletLastPublishDate);
  long groupId=portletDataContext.getGroupId();
  portletDataContext.setGroupId(portletDataContext.getScopeGroupId());
  portletDataContext.clearScopedPrimaryKeys();
  String data=null;
  try {
    data=portletDataHandler.exportData(portletDataContext,portletId,jxPortletPreferences);
  }
 catch (  PortletDataException pde) {
    throw pde;
  }
catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    portletDataContext.setGroupId(groupId);
    portletDataContext.setStartDate(originalStartDate);
  }
  if (Validator.isNull(data)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Not exporting data for " + portletId + " because null data was returned");
    }
    return;
  }
  Element portletDataElement=parentElement.addElement("portlet-data");
  portletDataElement.addAttribute("path",path);
  portletDataContext.addZipEntry(path,data);
  boolean updateLastPublishDate=MapUtil.getBoolean(portletDataContext.getParameterMap(),PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE);
  if (updateLastPublishDate) {
    DateRange adjustedDateRange=new DateRange(portletLastPublishDate,portletDataContext.getEndDate());
    TransactionCommitCallbackRegistryUtil.registerCallback(new UpdatePortletLastPublishDateCallable(adjustedDateRange,portletDataContext.getEndDate(),portletDataContext.getGroupId(),layout.getPlid(),portletId));
  }
}

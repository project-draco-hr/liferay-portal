{
  Map<String,String> nameValues=new HashMap<String,String>();
  String url=serviceUrl + _GET_ATTRIBUTES;
  try {
    String formData="dummy";
    URL urlObj=new URL(url);
    HttpURLConnection conn=(HttpURLConnection)urlObj.openConnection();
    List<String> cookieNames=getCookieForwardList(serviceUrl);
    forwardCookies(req,cookieNames,conn);
    conn.setRequestMethod("POST");
    conn.setRequestProperty("Content-type","application/x-www-form-urlencoded");
    conn.setDoOutput(true);
    OutputStreamWriter osw=new OutputStreamWriter(conn.getOutputStream());
    osw.write(formData);
    osw.flush();
    int ret=conn.getResponseCode();
    if (ret == HttpURLConnection.HTTP_OK) {
      BufferedReader reader=new BufferedReader(new InputStreamReader((InputStream)conn.getContent()));
      String line=null;
      while ((line=reader.readLine()) != null) {
        if (line.startsWith("userdetails.attribute.name=")) {
          String aname=line.replaceFirst("userdetails.attribute.name=","");
          line=reader.readLine();
          if (line.startsWith("userdetails.attribute.value=")) {
            String avalue=line.replaceFirst("userdetails.attribute.value=","");
            nameValues.put(aname,avalue);
          }
 else {
            throw new AutoLoginException("Error reading user attributes");
          }
        }
      }
    }
 else     if (_log.isDebugEnabled()) {
      _log.debug("OpenSSO getAttributes returned " + ret);
    }
  }
 catch (  MalformedURLException mfue) {
    _log.error(mfue.getMessage());
    if (_log.isDebugEnabled()) {
      _log.debug(mfue);
    }
  }
catch (  IOException ioe) {
    _log.error(ioe.getMessage());
    if (_log.isDebugEnabled()) {
      _log.debug(ioe);
    }
  }
  return nameValues;
}

{
  String[] cookieNames=_cookieNamesMap.get(serviceUrl);
  if (cookieNames != null) {
    return cookieNames;
  }
  List<String> cookieNamesList=new ArrayList<String>();
  try {
    String cookieName=null;
    String url=serviceUrl.concat(_GET_COOKIE_NAME);
    URL urlObj=new URL(url);
    HttpURLConnection httpURLConnection=(HttpURLConnection)urlObj.openConnection();
    InputStream inputStream=(InputStream)httpURLConnection.getContent();
    UnsyncBufferedReader unsyncBufferedReader=new UnsyncBufferedReader(new InputStreamReader(inputStream));
    int responseCode=httpURLConnection.getResponseCode();
    if (responseCode != HttpURLConnection.HTTP_OK) {
      if (_log.isDebugEnabled()) {
        _log.debug(url + " has response code " + responseCode);
      }
    }
 else {
      String line=null;
      while ((line=unsyncBufferedReader.readLine()) != null) {
        if (line.startsWith("string=")) {
          line=line.replaceFirst("string=","");
          cookieName=line;
        }
      }
    }
    url=serviceUrl.concat(_GET_COOKIE_NAMES);
    urlObj=new URL(url);
    httpURLConnection=(HttpURLConnection)urlObj.openConnection();
    inputStream=(InputStream)httpURLConnection.getContent();
    unsyncBufferedReader=new UnsyncBufferedReader(new InputStreamReader(inputStream));
    if (httpURLConnection.getResponseCode() != HttpURLConnection.HTTP_OK) {
      if (_log.isDebugEnabled()) {
        _log.debug(url + " has response code " + responseCode);
      }
    }
 else {
      String line=null;
      while ((line=unsyncBufferedReader.readLine()) != null) {
        if (line.startsWith("string=")) {
          line=line.replaceFirst("string=","");
          if (cookieName.equals(line)) {
            cookieNamesList.add(0,cookieName);
          }
 else {
            cookieNamesList.add(line);
          }
        }
      }
    }
  }
 catch (  IOException ioe) {
    if (_log.isWarnEnabled()) {
      _log.warn(ioe,ioe);
    }
  }
  cookieNames=cookieNamesList.toArray(new String[cookieNamesList.size()]);
  if (cookieNames.length > 0) {
    _cookieNamesMap.put(serviceUrl,cookieNames);
  }
  return cookieNames;
}

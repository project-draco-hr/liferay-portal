{
  boolean authenticated=false;
  boolean hasCookieNames=false;
  String[] cookieNames=_getCookieNames(serviceUrl);
  for (  String cookieName : cookieNames) {
    if (CookieKeys.getCookie(request,cookieName) != null) {
      hasCookieNames=true;
      break;
    }
  }
  if (!hasCookieNames) {
    if (_log.isWarnEnabled()) {
      _log.warn("User is not logged in because he has no OpenSSO cookies");
    }
    return false;
  }
  String url=serviceUrl.concat(_VALIDATE_TOKEN);
  URL urlObj=new URL(url);
  HttpURLConnection httpURLConnection=(HttpURLConnection)urlObj.openConnection();
  httpURLConnection.setDoOutput(true);
  httpURLConnection.setRequestMethod("POST");
  httpURLConnection.setRequestProperty("Content-type","application/x-www-form-urlencoded");
  _setCookieProperty(request,httpURLConnection,cookieNames);
  OutputStreamWriter outputStreamWriter=new OutputStreamWriter(httpURLConnection.getOutputStream());
  outputStreamWriter.write("dummy");
  outputStreamWriter.flush();
  int responseCode=httpURLConnection.getResponseCode();
  if (responseCode == HttpURLConnection.HTTP_OK) {
    String data=StringUtil.read(httpURLConnection.getInputStream());
    if (StringUtil.toLowerCase(data).contains("boolean=true")) {
      authenticated=true;
    }
  }
 else   if (_log.isDebugEnabled()) {
    _log.debug("Authentication response code " + responseCode);
  }
  return authenticated;
}

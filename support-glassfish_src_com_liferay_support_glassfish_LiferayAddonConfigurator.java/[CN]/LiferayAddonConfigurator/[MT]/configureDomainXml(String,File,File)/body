{
  DocumentBuilderFactory documentBuilderFactory=DocumentBuilderFactory.newInstance();
  documentBuilderFactory.setValidating(false);
  DocumentBuilder documentBuilder=documentBuilderFactory.newDocumentBuilder();
  DTDResolver dtdResolver=new DTDResolver(dtdDir);
  documentBuilder.setEntityResolver(dtdResolver);
  documentBuilder.setErrorHandler(dtdResolver);
  Document curDomainXmlDoc=documentBuilder.parse(curDomainXmlFile);
  Node curResourcesNode=XPathAPI.selectSingleNode(curDomainXmlDoc,"/domain/resources");
  Node curJdbcResourceNode=XPathAPI.selectSingleNode(curDomainXmlDoc,"/domain/resources/jdbc-resource");
  Node curJdbcConnectionPoolNode=XPathAPI.selectSingleNode(curDomainXmlDoc,"/domain/resources/jdbc-connection-pool");
  Node curServerNode=XPathAPI.selectSingleNode(curDomainXmlDoc,"/domain/servers/server[@name='server']");
  Node curResourceRefNode=XPathAPI.selectSingleNode(curDomainXmlDoc,"/domain/servers/*/resource-ref[last()]");
  Document newDomainXmlDoc=documentBuilder.parse(newDomainXmlFile);
  Node newJdbcResourceNode=XPathAPI.selectSingleNode(newDomainXmlDoc,"/domain/resources/jdbc-resource");
  Node newMailResourceNode=XPathAPI.selectSingleNode(newDomainXmlDoc,"/domain/resources/mail-resource");
  Node newJdbcConnectionPoolNode=XPathAPI.selectSingleNode(newDomainXmlDoc,"/domain/resources/jdbc-connection-pool");
  Node newLiferayPoolResourceRefNode=XPathAPI.selectSingleNode(newDomainXmlDoc,"/domain/servers/*/resource-ref[@ref='jdbc/LiferayPool']");
  curResourcesNode.insertBefore(curDomainXmlDoc.importNode(newJdbcResourceNode,true),curJdbcResourceNode);
  curResourcesNode.insertBefore(curDomainXmlDoc.importNode(newMailResourceNode,true),curJdbcConnectionPoolNode);
  curResourcesNode.insertBefore(curDomainXmlDoc.importNode(newJdbcConnectionPoolNode,true),curJdbcConnectionPoolNode);
  curServerNode.insertBefore(curDomainXmlDoc.importNode(newLiferayPoolResourceRefNode,true),curResourceRefNode);
  LiferayAddonUtil.copyFile(curDomainXmlFile,new File(curDomainXmlFile + ".bak." + LiferayAddonUtil.getTimestamp()));
  Document curDoc=curResourcesNode.getOwnerDocument();
  Source input=new DOMSource(curDoc);
  Result output=new StreamResult(new FileOutputStream(curDomainXmlFile));
  TransformerFactory transformerFactory=TransformerFactory.newInstance();
  Transformer transformer=transformerFactory.newTransformer();
  transformer.setOutputProperty(OutputKeys.DOCTYPE_PUBLIC,curDoc.getDoctype().getPublicId());
  transformer.setOutputProperty(OutputKeys.DOCTYPE_SYSTEM,curDoc.getDoctype().getSystemId());
  transformer.setOutputProperty(OutputKeys.INDENT,"yes");
  transformer.setOutputProperty(OutputKeys.METHOD,"xml");
  transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"no");
  transformer.transform(input,output);
}

{
  CaptureAppender captureAppender=Log4JLoggerTestUtil.configureLog4JLogger(DefaultTransactionExecutor.class.getName(),Level.ERROR);
  long classNameId=CounterLocalServiceUtil.increment();
  ClassName className=ClassNameUtil.create(classNameId);
  PlatformTransactionManager platformTransactionManager=(PlatformTransactionManager)InfrastructureUtil.getTransactionManager();
  MockPlatformTransactionManager platformTransactionManagerWrapper=new MockPlatformTransactionManager(platformTransactionManager);
  TransactionInterceptor transactionInterceptor=(TransactionInterceptor)PortalBeanLocatorUtil.locate("transactionAdvice");
  transactionInterceptor.setPlatformTransactionManager(platformTransactionManagerWrapper);
  try {
    ClassNameLocalServiceUtil.addClassName(className);
    Assert.fail();
  }
 catch (  RuntimeException re) {
    Assert.assertEquals("MockPlatformTransactionManager",re.getMessage());
  }
 finally {
    transactionInterceptor.setPlatformTransactionManager(platformTransactionManager);
    captureAppender.close();
  }
  List<LoggingEvent> loggingEvents=captureAppender.getLoggingEvents();
  Assert.assertEquals(1,loggingEvents.size());
  LoggingEvent loggingEvent=loggingEvents.get(0);
  Assert.assertEquals("Application exception overridden by commit exception",loggingEvent.getMessage());
  ClassName cachedClassName=(ClassName)EntityCacheUtil.getResult(true,ClassNameImpl.class,classNameId);
  Assert.assertNull(cachedClassName);
}

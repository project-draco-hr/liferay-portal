{
  StringBundler query=null;
  if (orderByComparator != null) {
    query=new StringBundler(6 + (orderByComparator.getOrderByFields().length * 6));
  }
 else {
    query=new StringBundler(3);
  }
  if (getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_ORGANIZATION_WHERE);
  }
 else {
    query.append(_FILTER_SQL_SELECT_ORGANIZATION_NO_INLINE_DISTINCT_WHERE_1);
  }
  query.append(_FINDER_COLUMN_C_P_COMPANYID_2);
  query.append(_FINDER_COLUMN_C_P_PARENTORGANIZATIONID_2);
  if (!getDB().isSupportsInlineDistinct()) {
    query.append(_FILTER_SQL_SELECT_ORGANIZATION_NO_INLINE_DISTINCT_WHERE_2);
  }
  if (orderByComparator != null) {
    String[] orderByFields=orderByComparator.getOrderByFields();
    if (orderByFields.length > 0) {
      query.append(WHERE_AND);
    }
    for (int i=0; i < orderByFields.length; i++) {
      if (getDB().isSupportsInlineDistinct()) {
        query.append(_ORDER_BY_ENTITY_ALIAS);
      }
 else {
        query.append(_ORDER_BY_ENTITY_TABLE);
      }
      query.append(orderByFields[i]);
      if ((i + 1) < orderByFields.length) {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(WHERE_GREATER_THAN_HAS_NEXT);
        }
 else {
          query.append(WHERE_LESSER_THAN_HAS_NEXT);
        }
      }
 else {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(WHERE_GREATER_THAN);
        }
 else {
          query.append(WHERE_LESSER_THAN);
        }
      }
    }
    query.append(ORDER_BY_CLAUSE);
    for (int i=0; i < orderByFields.length; i++) {
      if (getDB().isSupportsInlineDistinct()) {
        query.append(_ORDER_BY_ENTITY_ALIAS);
      }
 else {
        query.append(_ORDER_BY_ENTITY_TABLE);
      }
      query.append(orderByFields[i]);
      if ((i + 1) < orderByFields.length) {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(ORDER_BY_ASC_HAS_NEXT);
        }
 else {
          query.append(ORDER_BY_DESC_HAS_NEXT);
        }
      }
 else {
        if (orderByComparator.isAscending() ^ previous) {
          query.append(ORDER_BY_ASC);
        }
 else {
          query.append(ORDER_BY_DESC);
        }
      }
    }
  }
 else {
    if (getDB().isSupportsInlineDistinct()) {
      query.append(OrganizationModelImpl.ORDER_BY_JPQL);
    }
 else {
      query.append(OrganizationModelImpl.ORDER_BY_SQL);
    }
  }
  String sql=InlineSQLHelperUtil.replacePermissionCheck(query.toString(),Organization.class.getName(),_FILTER_COLUMN_PK);
  SQLQuery q=session.createSQLQuery(sql);
  q.setFirstResult(0);
  q.setMaxResults(2);
  if (getDB().isSupportsInlineDistinct()) {
    q.addEntity(_FILTER_ENTITY_ALIAS,OrganizationImpl.class);
  }
 else {
    q.addEntity(_FILTER_ENTITY_TABLE,OrganizationImpl.class);
  }
  QueryPos qPos=QueryPos.getInstance(q);
  qPos.add(companyId);
  qPos.add(parentOrganizationId);
  if (orderByComparator != null) {
    Object[] values=orderByComparator.getOrderByValues(organization);
    for (    Object value : values) {
      qPos.add(value);
    }
  }
  List<Organization> list=q.list();
  if (list.size() == 2) {
    return list.get(1);
  }
 else {
    return null;
  }
}

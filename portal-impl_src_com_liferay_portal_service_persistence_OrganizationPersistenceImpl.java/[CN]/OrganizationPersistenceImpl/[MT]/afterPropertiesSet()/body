{
  String[] listenerClassNames=StringUtil.split(GetterUtil.getString(com.liferay.portal.util.PropsUtil.get("value.object.listener.com.liferay.portal.model.Organization")));
  if (listenerClassNames.length > 0) {
    try {
      List<ModelListener<Organization>> listenersList=new ArrayList<ModelListener<Organization>>();
      for (      String listenerClassName : listenerClassNames) {
        listenersList.add((ModelListener<Organization>)Class.forName(listenerClassName).newInstance());
      }
      listeners=listenersList.toArray(new ModelListener[listenersList.size()]);
    }
 catch (    Exception e) {
      _log.error(e);
    }
  }
  containsGroup=new ContainsGroup(this);
  addGroup=new AddGroup(this);
  clearGroups=new ClearGroups(this);
  removeGroup=new RemoveGroup(this);
  containsUser=new ContainsUser(this);
  addUser=new AddUser(this);
  clearUsers=new ClearUsers(this);
  removeUser=new RemoveUser(this);
}

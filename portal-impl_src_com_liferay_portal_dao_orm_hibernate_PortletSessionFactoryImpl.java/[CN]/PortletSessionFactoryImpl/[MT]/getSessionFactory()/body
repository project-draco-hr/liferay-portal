{
  ShardDataSourceTargetSource shardDataSourceTargetSource=(ShardDataSourceTargetSource)InfrastructureUtil.getShardDataSourceTargetSource();
  if (shardDataSourceTargetSource == null) {
    return getSessionFactoryImplementor();
  }
  DataSource dataSource=shardDataSourceTargetSource.getDataSource();
  SessionFactory sessionFactory=_sessionFactories.get(dataSource);
  if (sessionFactory != null) {
    return sessionFactory;
  }
  String servletContextName=PortletClassLoaderUtil.getServletContextName();
  ClassLoader classLoader=getSessionFactoryClassLoader();
  PortletClassLoaderUtil.setServletContextName(ClassLoaderPool.getContextName(classLoader));
  try {
    PortletHibernateConfiguration portletHibernateConfiguration=new PortletHibernateConfiguration();
    portletHibernateConfiguration.setDataSource(dataSource);
    try {
      sessionFactory=portletHibernateConfiguration.buildSessionFactory();
    }
 catch (    Exception e) {
      _log.error(e,e);
      return null;
    }
    _sessionFactories.put(dataSource,sessionFactory);
    return sessionFactory;
  }
  finally {
    PortletClassLoaderUtil.setServletContextName(servletContextName);
  }
}

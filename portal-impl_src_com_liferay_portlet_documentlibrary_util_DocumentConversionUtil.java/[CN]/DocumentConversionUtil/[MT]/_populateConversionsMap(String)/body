{
  Filter filter=new Filter(documentFamily);
  DocumentFormatRegistry documentFormatRegistry=new DefaultDocumentFormatRegistry();
  String[] sourceExtensions=PropsUtil.getArray(PropsKeys.OPENOFFICE_CONVERSION_SOURCE_EXTENSIONS,filter);
  String[] targetExtensions=PropsUtil.getArray(PropsKeys.OPENOFFICE_CONVERSION_TARGET_EXTENSIONS,filter);
  for (  String sourceExtension : sourceExtensions) {
    Set<String> conversions=new HashSet<String>();
    DocumentFormat sourceDocumentFormat=documentFormatRegistry.getFormatByFileExtension(sourceExtension);
    if (sourceDocumentFormat == null) {
      if (_log.isWarnEnabled()) {
        _log.warn("Invalid source extension " + sourceExtension);
      }
      continue;
    }
    for (    String targetExtension : targetExtensions) {
      DocumentFormat targetDocumentFormat=documentFormatRegistry.getFormatByFileExtension(targetExtension);
      if (targetDocumentFormat == null) {
        if (_log.isWarnEnabled()) {
          _log.warn("Invalid target extension " + targetDocumentFormat);
        }
        continue;
      }
      if (sourceDocumentFormat.isExportableTo(targetDocumentFormat)) {
        conversions.add(targetExtension);
      }
    }
    if (conversions.isEmpty()) {
      if (_log.isInfoEnabled()) {
        _log.info("There are no conversions supported from " + sourceExtension);
      }
    }
 else {
      if (_log.isInfoEnabled()) {
        _log.info("Conversions supported from " + sourceExtension + " to "+ conversions);
      }
      _conversionsMap.put(sourceExtension,conversions);
    }
  }
}

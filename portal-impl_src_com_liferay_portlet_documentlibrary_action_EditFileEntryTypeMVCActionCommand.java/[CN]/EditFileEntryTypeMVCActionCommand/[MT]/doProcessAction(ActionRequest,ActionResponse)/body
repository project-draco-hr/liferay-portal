{
  String cmd=ParamUtil.getString(actionRequest,Constants.CMD);
  try {
    if (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {
      updateFileEntryType(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.DELETE)) {
      deleteFileEntryType(actionRequest,actionResponse);
    }
 else     if (cmd.equals(Constants.SUBSCRIBE)) {
      subscribeFileEntryType(actionRequest);
    }
 else     if (cmd.equals(Constants.UNSUBSCRIBE)) {
      unsubscribeFileEntryType(actionRequest);
    }
    if (SessionErrors.isEmpty(actionRequest)) {
      SessionMessages.add(actionRequest,PortalUtil.getPortletId(actionRequest) + SessionMessages.KEY_SUFFIX_REFRESH_PORTLET,PortletKeys.DOCUMENT_LIBRARY);
      forceSendRedirect(actionRequest);
    }
  }
 catch (  Exception e) {
    if (e instanceof DuplicateFileEntryTypeException || e instanceof NoSuchMetadataSetException || e instanceof StructureDefinitionException|| e instanceof StructureDuplicateElementException|| e instanceof StructureNameException) {
      SessionErrors.add(actionRequest,e.getClass());
    }
 else     if (e instanceof NoSuchFileEntryTypeException || e instanceof NoSuchStructureException || e instanceof PrincipalException) {
      SessionErrors.add(actionRequest,e.getClass());
      actionResponse.setRenderParameter("mvcPath","/html/portlet/document_library/error.jsp");
    }
 else     if (e instanceof RequiredStructureException) {
      SessionErrors.add(actionRequest,e.getClass());
    }
 else {
      throw e;
    }
  }
}

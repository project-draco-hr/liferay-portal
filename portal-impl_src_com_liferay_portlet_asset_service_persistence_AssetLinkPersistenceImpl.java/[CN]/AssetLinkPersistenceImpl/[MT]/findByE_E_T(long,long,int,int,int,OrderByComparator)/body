{
  Object[] finderArgs=new Object[]{new Long(entryId1),new Long(entryId2),new Integer(typeId),String.valueOf(start),String.valueOf(end),String.valueOf(obc)};
  List<AssetLink> list=(List<AssetLink>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_OBC_E_E_T,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=null;
      if (obc != null) {
        query=new StringBundler(5 + (obc.getOrderByFields().length * 3));
      }
 else {
        query=new StringBundler(5);
      }
      query.append(_SQL_SELECT_ASSETLINK_WHERE);
      query.append(_FINDER_COLUMN_E_E_T_ENTRYID1_2);
      query.append(_FINDER_COLUMN_E_E_T_ENTRYID2_2);
      query.append(_FINDER_COLUMN_E_E_T_TYPEID_2);
      if (obc != null) {
        appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,obc);
      }
 else {
        query.append(AssetLinkModelImpl.ORDER_BY_JPQL);
      }
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(entryId1);
      qPos.add(entryId2);
      qPos.add(typeId);
      list=(List<AssetLink>)QueryUtil.list(q,getDialect(),start,end);
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<AssetLink>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_OBC_E_E_T,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

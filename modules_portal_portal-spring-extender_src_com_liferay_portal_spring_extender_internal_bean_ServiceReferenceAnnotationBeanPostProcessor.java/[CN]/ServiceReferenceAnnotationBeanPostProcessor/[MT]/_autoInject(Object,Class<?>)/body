{
  if ((beanClass == null) || beanClass.isInterface()) {
    return;
  }
  Field[] fields=beanClass.getDeclaredFields();
  for (  Field field : fields) {
    ServiceReference serviceReference=field.getAnnotation(ServiceReference.class);
    if (serviceReference == null) {
      continue;
    }
    Class<?> type=serviceReference.type();
    org.osgi.framework.ServiceReference<?> sr=_bundleContext.getServiceReference(type.getName());
    _serviceReferences.add(sr);
    ReflectionUtils.makeAccessible(field);
    try {
      field.set(targetBean,_bundleContext.getService(sr));
    }
 catch (    Throwable t) {
      throw new BeanCreationException(beanClass.getName(),"Could not inject BeanReference fields",t);
    }
  }
  _autoInject(targetBean,beanClass.getSuperclass());
}

{
  ClusterNode bootupClusterNode=null;
  do {
    _clusterNodeAddressesCount--;
    ClusterNodeResponse clusterNodeResponse=null;
    try {
      clusterNodeResponse=blockingQueue.poll(_CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT,TimeUnit.MILLISECONDS);
    }
 catch (    Exception e) {
      _log.error("Unable to get cluster node response",e);
    }
    if (clusterNodeResponse == null) {
      if (_log.isDebugEnabled()) {
        _log.debug("Unable to get cluster node response in " + _CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT + TimeUnit.MILLISECONDS);
      }
      continue;
    }
    ClusterNode clusterNode=clusterNodeResponse.getClusterNode();
    if (clusterNode.getPortalInetSocketAddress() != null) {
      try {
        long remoteLastGeneration=(Long)clusterNodeResponse.getResult();
        if (remoteLastGeneration > _localLastGeneration) {
          bootupClusterNode=clusterNodeResponse.getClusterNode();
          break;
        }
      }
 catch (      Exception e) {
        if (_log.isDebugEnabled()) {
          _log.debug("Suppress exception caused by remote method " + "invocation",e);
        }
        continue;
      }
    }
 else     if (_log.isDebugEnabled()) {
      _log.debug("Cluster node " + clusterNode + " has invalid InetSocketAddress");
    }
  }
 while ((bootupClusterNode == null) && (_clusterNodeAddressesCount > 1));
  if (bootupClusterNode == null) {
    return;
  }
  if (_log.isInfoEnabled()) {
    _log.info("Start loading lucene index files from cluster node " + bootupClusterNode);
  }
  InputStream inputStream=null;
  try {
    inputStream=getLoadIndexesInputStreamFromCluster(_companyId,bootupClusterNode.getClusterNodeId());
    _indexAccessor.loadIndex(inputStream);
    if (_log.isInfoEnabled()) {
      _log.info("Lucene index files loaded successfully");
    }
  }
 catch (  Exception e) {
    _log.error("Unable to load index for company " + _companyId,e);
  }
 finally {
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      IOException ioe) {
        _log.error("Unable to close input stream for company " + _companyId,ioe);
      }
    }
  }
}

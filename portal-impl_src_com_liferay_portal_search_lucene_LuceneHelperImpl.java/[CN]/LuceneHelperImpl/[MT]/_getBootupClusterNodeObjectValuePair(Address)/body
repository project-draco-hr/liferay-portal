{
  ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(_createTokenMethodKey,_TRANSIENT_TOKEN_KEEP_ALIVE_TIME),bootupAddress);
  FutureClusterResponses futureClusterResponses=ClusterExecutorUtil.execute(clusterRequest);
  BlockingQueue<ClusterNodeResponse> clusterNodeResponses=futureClusterResponses.getPartialResults();
  try {
    ClusterNodeResponse clusterNodeResponse=clusterNodeResponses.poll(_BOOTUP_CLUSTER_NODE_RESPONSE_TIMEOUT,TimeUnit.MILLISECONDS);
    String transientToken=(String)clusterNodeResponse.getResult();
    ClusterNode clusterNode=clusterNodeResponse.getClusterNode();
    InetAddress inetAddress=clusterNode.getInetAddress();
    String luceneDumpURI=PortalUtil.getPathContext();
    if (!luceneDumpURI.endsWith(StringPool.SLASH)) {
      luceneDumpURI=luceneDumpURI.concat(StringPool.SLASH);
    }
    luceneDumpURI=luceneDumpURI.concat("lucene/dump");
    URL url=new URL("http",inetAddress.getHostAddress(),clusterNode.getPort(),luceneDumpURI);
    return new ObjectValuePair<String,URL>(transientToken,url);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
}

{
  ClusterRequest clusterRequest=ClusterRequest.createUnicastRequest(new MethodHandler(_createTokenMethodKey,_TRANSIENT_TOKEN_KEEP_ALIVE_TIME),bootupAddress);
  FutureClusterResponses futureClusterResponses=ClusterExecutorUtil.execute(clusterRequest);
  BlockingQueue<ClusterNodeResponse> clusterNodeResponses=futureClusterResponses.getPartialResults();
  try {
    ClusterNodeResponse clusterNodeResponse=clusterNodeResponses.poll(_CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT,TimeUnit.MILLISECONDS);
    ClusterNode clusterNode=clusterNodeResponse.getClusterNode();
    int port=clusterNode.getPort();
    if (port <= 0) {
      throw new Exception("Invalid port " + port + " of ClusterNode, port is "+ "detected by the first request arrived, or configured"+ " by \"portal.instance.http.port\" and "+ "\"portal.instance.https.port\"");
    }
    InetAddress inetAddress=clusterNode.getInetAddress();
    String fileName=PortalUtil.getPathContext();
    if (!fileName.endsWith(StringPool.SLASH)) {
      fileName=fileName.concat(StringPool.SLASH);
    }
    fileName=fileName.concat("lucene/dump");
    URL url=new URL(_protocol,inetAddress.getHostAddress(),port,fileName);
    String transientToken=(String)clusterNodeResponse.getResult();
    return new ObjectValuePair<String,URL>(transientToken,url);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
}

{
  ResourcePermissionView resourcePermissionView=new ResourcePermissionView(name);
  UnsyncBufferedReader resourcePermReader=null;
  String resourcePermissionFile=resourcePermissionView.generateTempFile();
  if (resourcePermissionFile == null) {
    return;
  }
  MultiValueMap mvp=new MultiValueMap();
  try {
    resourcePermReader=new UnsyncBufferedReader(new FileReader(resourcePermissionFile));
    String line=null;
    while (Validator.isNotNull(line=resourcePermReader.readLine())) {
      String[] values=StringUtil.split(line);
      String actionId=ResourcePermissionView.getActionId(values);
      long companyId=ResourcePermissionView.getCompanyId(values);
      int scope=ResourcePermissionView.getScope(values);
      String primKey=ResourcePermissionView.getPrimaryKey(values);
      long roleId=ResourcePermissionView.getRoleId(values);
      mvp.put(new Tuple(companyId,scope,primKey,roleId),actionId);
    }
  }
  finally {
    if (resourcePermReader != null) {
      resourcePermReader.close();
    }
    FileUtil.delete(resourcePermissionFile);
  }
  for (  Tuple key : (Set<Tuple>)mvp.keySet()) {
    long resourcePermissionId=CounterLocalServiceUtil.increment(ResourcePermission.class.getName());
    long companyId=(Long)key.getObject(0);
    int scope=(Integer)key.getObject(1);
    String primKey=(String)key.getObject(2);
    long roleId=(Long)key.getObject(3);
    String[] actionIdArray=(String[])mvp.getCollection(key).toArray(new String[0]);
    long actionIds=0;
    for (    String actionId : actionIdArray) {
      try {
        ResourceAction resourceAction=ResourceActionLocalServiceUtil.getResourceAction(name,actionId);
        actionIds|=resourceAction.getBitwiseValue();
      }
 catch (      NoSuchResourceActionException nsrae) {
        if (_log.isWarnEnabled()) {
          String msg=nsrae.getMessage();
          _log.warn("Could not find resource action " + msg);
        }
      }
    }
    writer.append(resourcePermissionId + StringPool.COMMA);
    writer.append(companyId + StringPool.COMMA);
    writer.append(name + StringPool.COMMA);
    writer.append(scope + StringPool.COMMA);
    writer.append(primKey + StringPool.COMMA);
    writer.append(roleId + StringPool.COMMA);
    writer.append(actionIds + StringPool.COMMA + StringPool.NEW_LINE);
  }
}

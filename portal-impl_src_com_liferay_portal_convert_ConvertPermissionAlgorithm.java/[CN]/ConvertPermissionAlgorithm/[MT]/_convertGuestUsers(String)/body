{
  BufferedReader br=new BufferedReader(new FileReader(legacyFile));
  BufferedWriter bw1=new BufferedWriter(new FileWriter(legacyFile + _UPDATED));
  BufferedWriter bw2=new BufferedWriter(new FileWriter(legacyFile + _ROLE_PERM_MAP_EXT));
  try {
    String line=null;
    while (Validator.isNotNull(line=br.readLine())) {
      String[] values=StringUtil.split(line);
      long userId=PermissionView.getPrimaryKey(values);
      long permissionId=PermissionView.getPermissionId(values);
      long companyId=PermissionView.getCompanyId(values);
      int scope=PermissionView.getScopeId(values);
      if (scope == ResourceConstants.SCOPE_INDIVIDUAL && _guestUsersSet.contains(userId)) {
        long roleId=_guestRolesMap.get(companyId).getRoleId();
        String key=roleId + "_" + permissionId;
        if (_rolesPermissions.contains(key)) {
          continue;
        }
 else {
          _rolesPermissions.add(key);
        }
        bw2.write(roleId + "," + permissionId+ "\n");
      }
 else {
        bw1.write(line + "\n");
      }
    }
  }
  finally {
    br.close();
    bw1.close();
    bw2.close();
  }
  Table table=new Table("Roles_Permissions",new Object[][]{{"roleId",Types.BIGINT},{"permissionId",Types.BIGINT}});
  table.populateTable(legacyFile + _ROLE_PERM_MAP_EXT);
  FileUtil.delete(legacyFile);
  FileUtil.delete(legacyFile + _ROLE_PERM_MAP_EXT);
  return legacyFile + _UPDATED;
}

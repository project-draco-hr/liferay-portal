{
  Set<Long> userIds=new HashSet<>();
  List<MBMessage> messages=mbMessageLocalService.getThreadMessages(threadId,WorkflowConstants.STATUS_ANY);
  for (  MBMessage message : messages) {
    if (message.isDiscussion()) {
      continue;
    }
    TrashVersion trashVersion=trashVersionLocalService.fetchVersion(MBMessage.class.getName(),message.getMessageId());
    int oldStatus=WorkflowConstants.STATUS_APPROVED;
    if (trashVersion != null) {
      oldStatus=trashVersion.getStatus();
    }
    message.setStatus(oldStatus);
    mbMessagePersistence.update(message);
    userIds.add(message.getUserId());
    if (trashVersion != null) {
      trashVersionLocalService.deleteTrashVersion(trashVersion);
    }
    if (oldStatus == WorkflowConstants.STATUS_APPROVED) {
      assetEntryLocalService.updateVisible(MBMessage.class.getName(),message.getMessageId(),true);
    }
    Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(MBMessage.class);
    indexer.reindex(message);
  }
  for (  long userId : userIds) {
    mbStatsUserLocalService.updateStatsUser(groupId,userId);
  }
}

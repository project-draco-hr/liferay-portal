{
  MBMessage message=mbMessagePersistence.findByPrimaryKey(messageId);
  if (message.isRoot()) {
    throw new SplitThreadException();
  }
  MBCategory category=message.getCategory();
  long oldThreadId=message.getThreadId();
  String oldAttachmentsDir=message.getAttachmentsDir();
  long userId=mbMessagePersistence.findByPrimaryKey(message.getThread().getRootMessageId()).getUserId();
  mbMessageFlagLocalService.deleteAnswerFlags(oldThreadId,message.getMessageId());
  int count=mbMessageFlagPersistence.countByT_F(oldThreadId,MBMessageFlagConstants.ANSWER_FLAG);
  if (count == 1) {
    MBMessageFlag messageFlag=mbMessageFlagPersistence.fetchByU_M_F(userId,message.getThread().getRootMessageId(),MBMessageFlagConstants.ANSWER_FLAG);
    messageFlag.setFlag(MBMessageFlagConstants.QUESTION_FLAG);
    mbMessageFlagPersistence.update(messageFlag,false);
  }
  MBThread thread=addThread(message.getCategoryId(),message);
  message.setThreadId(thread.getThreadId());
  message.setParentMessageId(0);
  message.setAttachmentsDir(null);
  mbMessagePersistence.update(message,false);
  moveAttachmentsFromOldThread(message,oldAttachmentsDir);
  if (!message.isDiscussion()) {
    Indexer indexer=IndexerRegistryUtil.getIndexer(MBMessage.class);
    indexer.reindex(message);
  }
  int messagesMoved=1;
  messagesMoved+=moveChildrenMessages(message,category,oldThreadId);
  thread.setMessageCount(messagesMoved);
  mbThreadPersistence.update(thread,false);
  MBThread oldThread=mbThreadPersistence.findByPrimaryKey(oldThreadId);
  oldThread.setMessageCount(oldThread.getMessageCount() - messagesMoved);
  mbThreadPersistence.update(oldThread,false);
  category.setThreadCount(category.getThreadCount() + 1);
  mbCategoryPersistence.update(category,false);
  return thread;
}

{
  MBThread thread=mbThreadPersistence.findByPrimaryKey(threadId);
  if (categoryStatus != WorkflowConstants.STATUS_IN_TRASH) {
    User user=userPersistence.findByPrimaryKey(userId);
    Date now=new Date();
    int oldStatus=thread.getStatus();
    thread.setModifiedDate(now);
    thread.setStatus(status);
    thread.setStatusByUserId(user.getUserId());
    thread.setStatusByUserName(user.getFullName());
    thread.setStatusDate(now);
    mbThreadPersistence.update(thread);
    updateDependentStatus(thread.getGroupId(),threadId,status);
    if (thread.getCategoryId() != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {
      MBCategory category=mbCategoryPersistence.fetchByPrimaryKey(thread.getCategoryId());
      if (category != null) {
        MBUtil.updateCategoryStatistics(category.getCompanyId(),category.getCategoryId());
      }
    }
    MBMessage message=mbMessageLocalService.getMBMessage(thread.getRootMessageId());
    JSONObject extraDataJSONObject=JSONFactoryUtil.createJSONObject();
    extraDataJSONObject.put("rootMessageId",thread.getRootMessageId());
    extraDataJSONObject.put("title",message.getSubject());
    if (status == WorkflowConstants.STATUS_IN_TRASH) {
      socialActivityLocalService.addActivity(userId,thread.getGroupId(),MBThread.class.getName(),thread.getThreadId(),SocialActivityConstants.TYPE_MOVE_TO_TRASH,extraDataJSONObject.toString(),0);
      trashEntryLocalService.addTrashEntry(userId,thread.getGroupId(),MBThread.class.getName(),thread.getThreadId(),oldStatus,null,null);
    }
 else {
      socialActivityLocalService.addActivity(userId,thread.getGroupId(),MBThread.class.getName(),thread.getThreadId(),SocialActivityConstants.TYPE_RESTORE_FROM_TRASH,extraDataJSONObject.toString(),0);
      trashEntryLocalService.deleteEntry(MBThread.class.getName(),thread.getThreadId());
    }
  }
 else {
    updateDependentStatus(thread.getGroupId(),threadId,status);
  }
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(MBThread.class);
  indexer.reindex(thread);
  return thread;
}

{
  MBMessage rootMessage=mbMessagePersistence.findByPrimaryKey(thread.getRootMessageId());
  try {
    Indexer.deleteMessages(rootMessage.getCompanyId(),thread.getThreadId());
  }
 catch (  SearchException se) {
    _log.error("Deleting index " + thread.getThreadId(),se);
  }
  long companyId=rootMessage.getCompanyId();
  String portletId=CompanyConstants.SYSTEM_STRING;
  long repositoryId=CompanyConstants.SYSTEM;
  String dirName=thread.getAttachmentsDir();
  try {
    dlService.deleteDirectory(companyId,portletId,repositoryId,dirName);
  }
 catch (  NoSuchDirectoryException nsde) {
  }
catch (  RemoteException re) {
    throw new SystemException(re);
  }
  List<MBMessage> messages=mbMessagePersistence.findByThreadId(thread.getThreadId());
  for (  MBMessage message : messages) {
    tagsAssetLocalService.deleteAsset(MBMessage.class.getName(),message.getMessageId());
    socialActivityLocalService.deleteActivities(MBMessage.class.getName(),message.getMessageId());
    ratingsStatsLocalService.deleteStats(MBMessage.class.getName(),message.getMessageId());
    mbMessageFlagPersistence.removeByMessageId(message.getMessageId());
    if (!message.isDiscussion()) {
      resourceLocalService.deleteResource(message.getCompanyId(),MBMessage.class.getName(),ResourceConstants.SCOPE_INDIVIDUAL,message.getMessageId());
    }
    mbMessagePersistence.remove(message);
  }
  mbThreadPersistence.remove(thread);
}

{
  MBMessage rootMessage=mbMessagePersistence.findByPrimaryKey(thread.getRootMessageId());
  Indexer indexer=IndexerRegistryUtil.nullSafeGetIndexer(MBMessage.class);
  indexer.delete(thread);
  PortletFileRepositoryUtil.deleteFolder(thread.getAttachmentsFolderId());
  subscriptionLocalService.deleteSubscriptions(thread.getCompanyId(),MBThread.class.getName(),thread.getThreadId());
  mbThreadFlagPersistence.removeByThreadId(thread.getThreadId());
  List<MBMessage> messages=mbMessagePersistence.findByThreadId(thread.getThreadId());
  for (  MBMessage message : messages) {
    ratingsStatsLocalService.deleteStats(message.getWorkflowClassName(),message.getMessageId());
    assetEntryLocalService.deleteEntry(message.getWorkflowClassName(),message.getMessageId());
    if (!message.isDiscussion()) {
      resourceLocalService.deleteResource(message.getCompanyId(),message.getWorkflowClassName(),ResourceConstants.SCOPE_INDIVIDUAL,message.getMessageId());
    }
    mbMessagePersistence.remove(message);
    if (!message.isDiscussion()) {
      mbStatsUserLocalService.updateStatsUser(message.getGroupId(),message.getUserId());
    }
    workflowInstanceLinkLocalService.deleteWorkflowInstanceLink(message.getCompanyId(),message.getGroupId(),message.getWorkflowClassName(),message.getMessageId());
  }
  if ((rootMessage.getCategoryId() != MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) && (rootMessage.getCategoryId() != MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {
    try {
      MBCategory category=mbCategoryPersistence.findByPrimaryKey(thread.getCategoryId());
      MBUtil.updateCategoryStatistics(category);
    }
 catch (    NoSuchCategoryException nsce) {
      if (!thread.isInTrash()) {
        throw nsce;
      }
    }
  }
  assetEntryLocalService.deleteEntry(MBThread.class.getName(),thread.getThreadId());
  trashEntryLocalService.deleteEntry(MBThread.class.getName(),thread.getThreadId());
  mbThreadPersistence.remove(thread);
}

{
  MBThread thread=mbThreadPersistence.findByPrimaryKey(threadId);
  if (!thread.isInTrash()) {
    throw new RestoreEntryException(RestoreEntryException.INVALID_STATUS);
  }
  if (thread.isInTrashExplicitly()) {
    restoreThreadFromTrash(userId,threadId);
  }
 else {
    TrashVersion trashVersion=trashVersionLocalService.fetchVersion(MBThread.class.getName(),thread.getThreadId());
    int status=WorkflowConstants.STATUS_APPROVED;
    if (trashVersion != null) {
      status=trashVersion.getStatus();
    }
    updateStatus(userId,threadId,status);
    if (trashVersion != null) {
      trashVersionLocalService.deleteTrashVersion(trashVersion);
    }
    restoreDependentsFromTrash(thread.getGroupId(),threadId);
  }
  return moveThread(thread.getGroupId(),categoryId,threadId);
}

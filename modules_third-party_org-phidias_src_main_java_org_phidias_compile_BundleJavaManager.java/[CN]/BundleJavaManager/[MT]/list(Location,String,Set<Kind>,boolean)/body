{
  List<JavaFileObject> javaFileObjects=new ArrayList<JavaFileObject>();
  if (location == StandardLocation.CLASS_PATH) {
    _log.log("List available sources for {location=" + location + ", packageName="+ packageName+ ", kinds="+ kinds+ ", recurse="+ recurse+ "}");
  }
  String packagePath=packageName.replace('.','/');
  if (!packageName.startsWith(JAVA_PACKAGE) && (location == StandardLocation.CLASS_PATH)) {
    listFromDependencies(kinds,recurse,packagePath,javaFileObjects);
  }
  if (packageName.startsWith(JAVA_PACKAGE) || (location != StandardLocation.CLASS_PATH) || (javaFileObjects.isEmpty() && hasPackageCapability(packageName))) {
    Iterable<JavaFileObject> localJavaFileObjects=_javaFileManager.list(location,packagePath,kinds,recurse);
    for (    JavaFileObject javaFileObject : localJavaFileObjects) {
      if (location == StandardLocation.CLASS_PATH) {
        _log.log("\t" + javaFileObject);
      }
      javaFileObjects.add(javaFileObject);
    }
  }
  return javaFileObjects;
}

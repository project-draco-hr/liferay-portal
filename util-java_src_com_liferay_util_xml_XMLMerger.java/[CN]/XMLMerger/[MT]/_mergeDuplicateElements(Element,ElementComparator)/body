{
  if (el.elements().size() > 0) {
    List children=el.elements();
    List originals=new ArrayList();
    List duplicates=new ArrayList();
    for (int i=0; i < children.size(); i++) {
      Element child=(Element)children.get(i);
      if (_containsObjectEqualTo(child,originals,comparator)) {
        if (comparator.shouldJoinChildren(child)) {
          Element first=_findObjectEqualTo(child,originals,comparator);
          Collection childrenToJoin=child.elements();
          _addChildren(first,childrenToJoin);
        }
        duplicates.add(child);
      }
 else {
        originals.add(child);
      }
    }
    for (int i=0; i < duplicates.size(); i++) {
      Element duplicate=(Element)duplicates.get(i);
      duplicate.detach();
    }
    Iterator itr=originals.iterator();
    while (itr.hasNext()) {
      Element child=(Element)itr.next();
      _mergeDuplicateElements(child,comparator);
    }
  }
}

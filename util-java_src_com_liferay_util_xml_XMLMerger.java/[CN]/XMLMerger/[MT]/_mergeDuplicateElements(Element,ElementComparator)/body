{
  List<Element> childElements=element.elements();
  if (childElements.isEmpty()) {
    return;
  }
  List<Element> originalElements=new ArrayList<Element>();
  List<Element> duplicateElements=new ArrayList<Element>();
  for (int i=0; i < childElements.size(); i++) {
    Element childElement=childElements.get(i);
    if (_containsObjectEqualTo(childElement,originalElements,elementComparator)) {
      if (_descriptor.canJoinChildren(childElement)) {
        Element firstElement=_findObjectEqualTo(childElement,originalElements,elementComparator);
        _addChildren(firstElement,childElement.elements());
      }
      duplicateElements.add(childElement);
    }
 else {
      originalElements.add(childElement);
    }
    _orderChildren(childElement,_descriptor.getChildrenOrder(childElement));
  }
  for (  Element duplicateElement : duplicateElements) {
    duplicateElement.detach();
  }
  for (  Element childElement : originalElements) {
    _mergeDuplicateElements(childElement,elementComparator);
  }
}

{
  ThemeDisplay themeDisplay=(ThemeDisplay)actionRequest.getAttribute(WebKeys.THEME_DISPLAY);
  long categoryId=ParamUtil.getLong(actionRequest,"mbCategoryId");
  long threadId=ParamUtil.getLong(actionRequest,"threadId");
  MBThread thread=_mbThreadLocalService.getThread(threadId);
  _mbThreadService.moveThread(categoryId,threadId);
  boolean addExplanationPost=ParamUtil.getBoolean(actionRequest,"addExplanationPost");
  if (addExplanationPost) {
    String subject=ParamUtil.getString(actionRequest,"subject");
    String body=ParamUtil.getString(actionRequest,"body");
    MBGroupServiceSettings mbGroupServiceSettings=MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId());
    ServiceContext serviceContext=ServiceContextFactory.getInstance(MBMessage.class.getName(),actionRequest);
    _mbMessageService.addMessage(thread.getRootMessageId(),subject,body,mbGroupServiceSettings.getMessageFormat(),Collections.<ObjectValuePair<String,InputStream>>emptyList(),false,MBThreadConstants.PRIORITY_NOT_GIVEN,false,serviceContext);
  }
  PortletURL portletURL=((ActionResponseImpl)actionResponse).createRenderURL();
  portletURL.setParameter("mvcRenderCommandName","/message_boards/view_message");
  portletURL.setParameter("messageId",String.valueOf(thread.getRootMessageId()));
  actionResponse.sendRedirect(portletURL.toString());
}

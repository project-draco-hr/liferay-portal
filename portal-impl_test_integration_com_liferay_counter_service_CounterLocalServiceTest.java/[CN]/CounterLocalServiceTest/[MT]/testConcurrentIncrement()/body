{
  String classPath=ClassPathUtil.getJVMClassPath(true);
  Builder builder=new Builder();
  builder.setArguments(Arrays.asList("-Xmx1024m","-XX:MaxPermSize=200m"));
  builder.setBootstrapClassPath(classPath);
  builder.setRuntimeClassPath(classPath);
  ProcessConfig processConfig=builder.build();
  List<Future<Long[]>> futuresList=new ArrayList<Future<Long[]>>();
  for (int i=0; i < _PROCESS_COUNT; i++) {
    ProcessCallable<Long[]> processCallable=new IncrementProcessCallable("Increment Process-" + i,_COUNTER_NAME,_INCREMENT_COUNT);
    Future<Long[]> futures=ProcessExecutorUtil.execute(processConfig,processCallable);
    futuresList.add(futures);
  }
  int total=_PROCESS_COUNT * _INCREMENT_COUNT;
  List<Long> ids=new ArrayList<Long>(total);
  for (  Future<Long[]> futures : futuresList) {
    ids.addAll(Arrays.asList(futures.get()));
  }
  Assert.assertEquals(total,ids.size());
  Collections.sort(ids);
  for (int i=0; i < total; i++) {
    Long id=ids.get(i);
    Assert.assertEquals(i + 1,id.intValue());
  }
}

{
  if (line.contains("[antelope:post]")) {
    return true;
  }
  if (line.contains("[junit]")) {
    return true;
  }
  if (line.contains("BasicResourcePool")) {
    return true;
  }
  if (line.contains("Caused by:")) {
    return true;
  }
  if (line.contains("INFO:")) {
    return true;
  }
  if (line.matches(".*The web application \\[.*\\] appears to have started a " + "thread.*")) {
    if (line.contains("[AWT-Windows]")) {
      return true;
    }
    if (line.contains("[com.google.inject.internal.Finalizer]")) {
      return true;
    }
    if (line.contains("[MultiThreadedHttpConnectionManager cleanup]")) {
      return true;
    }
    if (line.contains("[org.python.google.common.base.internal.Finalizer]")) {
      return true;
    }
    if (line.matches(".*\\[Thread-[0-9]+\\].*")) {
      return true;
    }
    if (line.matches(".*[TrueZIP InputStream Reader].*")) {
      return true;
    }
  }
  if (line.contains("Table 'lportal.lock_' doesn't exist")) {
    return true;
  }
  if (line.contains("Exception sending context destroyed event to listener " + "instance of class com.liferay.portal.spring.context." + "PortalContextLoaderListener")) {
    return true;
  }
  if (line.contains("user lacks privilege or object not found: LOCK_")) {
    return true;
  }
  if (line.contains("JBREM00200: ")) {
    return true;
  }
  if (line.contains("java.nio.channels.ClosedChannelException")) {
    return true;
  }
  if (line.matches(".*The web application \\[/wsrp-portlet\\] created a " + "ThreadLocal with key of type.*")) {
    if (line.contains("[org.apache.axis.utils.XMLUtils." + "ThreadLocalDocumentBuilder]")) {
      return true;
    }
    if (line.contains("[org.apache.xml.security.utils." + "UnsyncByteArrayOutputStream$1]")) {
      return true;
    }
  }
  if (line.contains("java.util.zip.ZipException: ZipFile closed")) {
    return true;
  }
  if (line.contains("java.lang.IllegalStateException")) {
    return true;
  }
  if (line.matches(".*The web application \\[\\] created a ThreadLocal with key " + "of type.*")) {
    if (line.contains("[de.schlichtherle")) {
      return true;
    }
  }
  if (line.contains("Disabling contextual LOB") && line.contains("MSC service thread") && line.contains("[org.hibernate.engine.jdbc.JdbcSupportLoader]")) {
    return true;
  }
  return false;
}

{
  if (entryIds.length == 0) {
    return new ArrayList();
  }
  orderByCol1=_checkOrderByCol(orderByCol1);
  orderByCol2=_checkOrderByCol(orderByCol2);
  orderByType1=_checkOrderByType(orderByType1);
  orderByType2=_checkOrderByType(orderByType2);
  Session session=null;
  try {
    session=HibernateUtil.openSession();
    String sql=CustomSQLUtil.get(FIND_BY_OR_ENTRY_IDS);
    sql=StringUtil.replace(sql,"[$ENTRY_ID$]",_getEntryIds(entryIds,StringPool.EQUAL));
    if (notEntryIds.length > 0) {
      StringMaker sm=new StringMaker();
      sm.append(" AND (");
      for (int i=0; i < notEntryIds.length; i++) {
        sm.append("TagsAsset.assetId NOT IN (");
        sm.append(CustomSQLUtil.get(FIND_BY_AND_ENTRY_IDS));
        sm.append(StringPool.CLOSE_PARENTHESIS);
        if ((i + 1) < notEntryIds.length) {
          sm.append(" AND ");
        }
      }
      sm.append(StringPool.CLOSE_PARENTHESIS);
      sql=StringUtil.replace(sql,"[$NOT_ENTRY_ID$]",sm.toString());
    }
 else {
      sql=StringUtil.replace(sql,"[$NOT_ENTRY_ID$]",StringPool.BLANK);
    }
    sql=_getDates(sql,publishDate,expirationDate);
    if (excludeZeroViewCount) {
      sql+=" AND (TagsAsset.viewCount > 0)";
    }
    StringMaker sm=new StringMaker();
    sm.append(" ORDER BY TagsAsset.");
    sm.append(orderByCol1);
    sm.append(StringPool.SPACE);
    sm.append(orderByType1);
    if (Validator.isNotNull(orderByCol2) && !orderByCol1.equals(orderByCol2)) {
      sm.append(", TagsAsset.");
      sm.append(orderByCol2);
      sm.append(StringPool.SPACE);
      sm.append(orderByType2);
    }
    sql+=sm.toString();
    SQLQuery q=session.createSQLQuery(sql);
    q.addEntity("TagsAsset",TagsAssetImpl.class);
    QueryPos qPos=QueryPos.getInstance(q);
    _setEntryIds(qPos,entryIds);
    _setEntryIds(qPos,notEntryIds);
    _setDates(qPos,publishDate,expirationDate);
    return QueryUtil.list(q,HibernateUtil.getDialect(),begin,end);
  }
 catch (  Exception e) {
    throw new SystemException(e);
  }
 finally {
    HibernateUtil.closeSession(session);
  }
}

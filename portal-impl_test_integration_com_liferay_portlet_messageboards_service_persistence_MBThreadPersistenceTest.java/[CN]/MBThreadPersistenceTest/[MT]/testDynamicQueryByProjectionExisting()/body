{
  MBThread newMBThread=addMBThread();
  DynamicQuery dynamicQuery=DynamicQueryFactoryUtil.forClass(MBThread.class,MBThread.class.getClassLoader());
  dynamicQuery.setProjection(ProjectionFactoryUtil.property("threadId"));
  Object newThreadId=newMBThread.getThreadId();
  dynamicQuery.add(RestrictionsFactoryUtil.in("threadId",new Object[]{newThreadId}));
  List<Object> result=_persistence.findWithDynamicQuery(dynamicQuery);
  Assert.assertEquals(1,result.size());
  Object existingThreadId=result.get(0);
  Assert.assertEquals(existingThreadId,newThreadId);
}

{
  Object[] finderArgs=new Object[]{companyId,name};
  Object result=null;
  if (retrieveFromCache) {
    result=finderCache.getResult(FINDER_PATH_FETCH_BY_C_N,finderArgs,this);
  }
  if (result instanceof SAPEntry) {
    SAPEntry sapEntry=(SAPEntry)result;
    if ((companyId != sapEntry.getCompanyId()) || !Objects.equals(name,sapEntry.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(4);
    query.append(_SQL_SELECT_SAPENTRY_WHERE);
    query.append(_FINDER_COLUMN_C_N_COMPANYID_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_C_N_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_C_N_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_C_N_NAME_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      if (bindName) {
        qPos.add(StringUtil.toLowerCase(name));
      }
      List<SAPEntry> list=q.list();
      if (list.isEmpty()) {
        finderCache.putResult(FINDER_PATH_FETCH_BY_C_N,finderArgs,list);
      }
 else {
        if ((list.size() > 1) && _log.isWarnEnabled()) {
          _log.warn("SAPEntryPersistenceImpl.fetchByC_N(long, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.");
        }
        SAPEntry sapEntry=list.get(0);
        result=sapEntry;
        cacheResult(sapEntry);
        if ((sapEntry.getCompanyId() != companyId) || (sapEntry.getName() == null) || !sapEntry.getName().equals(name)) {
          finderCache.putResult(FINDER_PATH_FETCH_BY_C_N,finderArgs,sapEntry);
        }
      }
    }
 catch (    Exception e) {
      finderCache.removeResult(FINDER_PATH_FETCH_BY_C_N,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (SAPEntry)result;
  }
}

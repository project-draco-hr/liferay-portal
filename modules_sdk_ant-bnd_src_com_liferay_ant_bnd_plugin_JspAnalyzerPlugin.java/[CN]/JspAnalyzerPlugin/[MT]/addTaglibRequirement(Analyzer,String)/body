{
  Set<String> taglibURIs=analyzeTagLibURIs(content);
  TreeSet<String> requirements=new TreeSet<String>();
  for (  String uri : taglibURIs) {
    if (Arrays.binarySearch(_JSTL_CORE_URIS,uri) < 0) {
      addTaglibRequirement(requirements,uri);
    }
  }
  if (requirements.isEmpty()) {
    return;
  }
  String propertyValue=analyzer.getProperty(Constants.REQUIRE_CAPABILITY);
  if (propertyValue != null) {
    Parameters parameters=OSGiHeader.parseHeader(propertyValue);
    for (    Entry<String,Attrs> entry : parameters.entrySet()) {
      Attrs value=entry.getValue();
      StringBuilder sb=new StringBuilder(entry.getKey());
      if (value != null) {
        sb.append(";");
        value.append(sb);
      }
      requirements.add(sb.toString());
    }
  }
  String header=Strings.join(requirements);
  analyzer.setProperty(Constants.REQUIRE_CAPABILITY,header);
}

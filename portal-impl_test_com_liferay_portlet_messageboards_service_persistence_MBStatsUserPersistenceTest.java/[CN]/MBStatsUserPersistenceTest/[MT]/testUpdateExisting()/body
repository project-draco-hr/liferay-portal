{
  long pk=nextLong();
  MBStatsUser newMBStatsUser=_persistence.create(pk);
  newMBStatsUser.setGroupId(nextLong());
  newMBStatsUser.setUserId(nextLong());
  newMBStatsUser.setMessageCount(nextInt());
  newMBStatsUser.setLastPostDate(nextDate());
  _persistence.update(newMBStatsUser,false);
  MBStatsUser existingMBStatsUser=_persistence.findByPrimaryKey(newMBStatsUser.getPrimaryKey());
  assertEquals(existingMBStatsUser.getStatsUserId(),newMBStatsUser.getStatsUserId());
  assertEquals(existingMBStatsUser.getGroupId(),newMBStatsUser.getGroupId());
  assertEquals(existingMBStatsUser.getUserId(),newMBStatsUser.getUserId());
  assertEquals(existingMBStatsUser.getMessageCount(),newMBStatsUser.getMessageCount());
  assertEquals(Time.getShortTimestamp(existingMBStatsUser.getLastPostDate()),Time.getShortTimestamp(newMBStatsUser.getLastPostDate()));
}

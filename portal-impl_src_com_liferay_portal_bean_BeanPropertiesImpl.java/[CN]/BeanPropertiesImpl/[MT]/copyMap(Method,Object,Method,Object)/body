{
  Object value=sourceReadMethod.invoke(source);
  if (value == null) {
    return;
  }
  Class<?> keyClazz=getMapKeyClass(targetWriteMethod);
  Class<?> valueClazz=getMapValueClass(targetWriteMethod);
  Map<?,?> sourceMap=(Map<?,?>)value;
  Class<?> sourceClazz=sourceMap.getClass();
  Map<Object,Object> targetMap=(Map<Object,Object>)sourceClazz.newInstance();
  for (  Object key : sourceMap.keySet()) {
    Object targetKey=null;
    Object targetValue=null;
    Object sourceValue=sourceMap.get(key);
    if (isSimpleCopy(keyClazz,key.getClass())) {
      targetKey=key;
    }
 else {
      targetKey=deepCopyProperties(key,keyClazz);
    }
    if (isSimpleCopy(valueClazz,sourceValue.getClass())) {
      targetValue=sourceValue;
    }
 else {
      targetValue=deepCopyProperties(sourceValue,valueClazz);
    }
    targetMap.put(targetKey,targetValue);
  }
  targetWriteMethod.invoke(target,targetMap);
}

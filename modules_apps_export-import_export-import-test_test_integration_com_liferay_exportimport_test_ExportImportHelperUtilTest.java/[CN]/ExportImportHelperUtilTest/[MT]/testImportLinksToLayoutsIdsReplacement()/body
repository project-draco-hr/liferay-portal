{
  LayoutTestUtil.addLayout(_liveGroup,true);
  LayoutTestUtil.addLayout(_liveGroup,false);
  exportImportLayouts(true);
  exportImportLayouts(false);
  Layout importedPrivateLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(_stagingPrivateLayout.getUuid(),_liveGroup.getGroupId(),true);
  Layout importedPublicLayout=LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(_stagingPublicLayout.getUuid(),_liveGroup.getGroupId(),false);
  Map<Long,Long> layoutPlids=(Map<Long,Long>)_portletDataContextImport.getNewPrimaryKeysMap(Layout.class);
  layoutPlids.put(_stagingPrivateLayout.getPlid(),importedPrivateLayout.getPlid());
  layoutPlids.put(_stagingPublicLayout.getPlid(),importedPublicLayout.getPlid());
  String content=getContent("layout_links_ids_replacement.txt");
  String expectedContent=replaceLinksToLayoutsParameters(content,importedPrivateLayout,importedPublicLayout);
  content=replaceLinksToLayoutsParameters(content,_stagingPrivateLayout,_stagingPublicLayout);
  content=ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport,_referrerStagedModel,content,true);
  String importedContent=ExportImportHelperUtil.replaceImportContentReferences(_portletDataContextImport,_referrerStagedModel,content);
  Assert.assertEquals(expectedContent,importedContent);
}

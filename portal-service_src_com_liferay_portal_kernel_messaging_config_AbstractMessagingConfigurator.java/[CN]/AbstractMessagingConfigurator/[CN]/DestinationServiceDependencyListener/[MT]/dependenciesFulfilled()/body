{
  ClassLoader operatingClassLoader=getOperatingClassloader();
  if (SPIUtil.isSPI()) {
    SPI spi=SPIUtil.getSPI();
    try {
      RegistrationReference registrationReference=spi.getRegistrationReference();
      IntrabandRPCUtil.execute(registrationReference,new DestinationConfigurationProcessCallable(_destinationName));
    }
 catch (    Exception e) {
      StringBundler sb=new StringBundler(4);
      sb.append("Unable to install ");
      sb.append(DestinationConfigurationProcessCallable.class.getName());
      sb.append(" on MPI for ");
      sb.append(_destinationName);
      _log.error(sb.toString(),e);
    }
  }
  Map<String,Object> properties=new HashMap<>();
  properties.put("destination.name",_destinationName);
  properties.put(MessageListener.MESSAGE_LISTENER_OPERATING_CLASS_LOADER,operatingClassLoader);
  for (  MessageListener messageListener : _messageListeners) {
    _messageListenerServiceRegistrar.registerService(MessageListener.class,messageListener,properties);
  }
}

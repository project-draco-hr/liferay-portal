{
  if (_destinationEventListeners.isEmpty()) {
    return;
  }
  Registry registry=RegistryUtil.getRegistry();
  _destinationEventListenerServiceRegistrar=registry.getServiceRegistrar(DestinationEventListener.class);
  for (  final Map.Entry<String,List<DestinationEventListener>> destinationEventListeners : _destinationEventListeners.entrySet()) {
    final String destinationName=destinationEventListeners.getKey();
    ServiceDependencyManager serviceDependencyManager=new ServiceDependencyManager();
    serviceDependencyManager.addServiceDependencyListener(new ServiceDependencyListener(){
      @Override public void dependenciesFulfilled(){
        Map<String,Object> properties=new HashMap<>();
        properties.put("destination.name",destinationName);
        for (        DestinationEventListener destinationEventListener : destinationEventListeners.getValue()) {
          _destinationEventListenerServiceRegistrar.registerService(DestinationEventListener.class,destinationEventListener,properties);
        }
      }
      @Override public void destroy(){
      }
    }
);
    Filter destinationFilter=registry.getFilter("(&(destination.name=" + destinationName + ")(objectClass="+ Destination.class.getName()+ "))");
    serviceDependencyManager.registerDependencies(destinationFilter);
  }
}

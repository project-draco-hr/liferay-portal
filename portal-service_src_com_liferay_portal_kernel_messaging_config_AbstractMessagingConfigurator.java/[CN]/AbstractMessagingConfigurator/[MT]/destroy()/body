{
  disconnect();
  _messageBusEventListeners.clear();
  _messageBusEventListenerServiceRegistrar.destroy();
  _destinationConfigurations.clear();
  _destinationConfigServiceRegistrar.destroy();
  _destinations.clear();
  _destinationServiceRegistrar.destroy(new ServiceFinalizer<Destination>(){
    @Override public void finalize(    ServiceReference<Destination> serviceReference,    Destination destination){
      destination.close();
      destination.removeDestinationEventListeners();
      destination.unregisterMessageListeners();
    }
  }
);
  _messageListeners.clear();
  _messageListenerServiceRegistrar.destroy();
  for (  Map.Entry<String,List<DestinationEventListener>> destinationEventListeners : _destinationEventListeners.entrySet()) {
    String destinationName=destinationEventListeners.getKey();
    for (    DestinationEventListener destinationEventListener : destinationEventListeners.getValue()) {
      Destination destination=_messageBus.getDestination(destinationName);
      if (destination != null) {
        destination.removeDestinationEventListener(destinationEventListener);
      }
    }
  }
  ClassLoader operatingClassLoader=getOperatingClassloader();
  String servletContextName=ClassLoaderPool.getContextName(operatingClassLoader);
  MessagingConfiguratorRegistry.unregisterMessagingConfigurator(servletContextName,this);
}

{
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  ClassLoader operatingClassLoader=getOperatingClassloader();
  if (contextClassLoader == operatingClassLoader) {
    _portalMessagingConfigurator=true;
  }
  MessageBus messageBus=getMessageBus();
  for (  MessageBusEventListener messageBusEventListener : _messageBusEventListeners) {
    messageBus.addMessageBusEventListener(messageBusEventListener);
  }
  for (  Destination destination : _destinations) {
    if (SPIUtil.isSPI()) {
      destination=new IntrabandBridgeDestination(destination);
    }
    messageBus.addDestination(destination);
  }
  for (  Map.Entry<String,List<DestinationEventListener>> destinationEventListeners : _destinationEventListeners.entrySet()) {
    String destinationName=destinationEventListeners.getKey();
    for (    DestinationEventListener destinationEventListener : destinationEventListeners.getValue()) {
      Destination destination=messageBus.getDestination(destinationName);
      if (destination != null) {
        destination.addDestinationEventListener(destinationEventListener);
      }
    }
  }
  for (  Destination destination : _replacementDestinations) {
    messageBus.replace(destination);
  }
  connect();
  String servletContextName=ClassLoaderPool.getContextName(operatingClassLoader);
  MessagingConfiguratorRegistry.registerMessagingConfigurator(servletContextName,this);
}

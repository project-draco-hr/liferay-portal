{
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  ClassLoader operatingClassLoader=getOperatingClassloader();
  if (contextClassLoader == operatingClassLoader) {
    _portalMessagingConfigurator=true;
  }
  MessageBus messageBus=getMessageBus();
  for (  DestinationEventListener destinationEventListener : _globalDestinationEventListeners) {
    messageBus.addDestinationEventListener(destinationEventListener);
  }
  for (  Destination destination : _destinations) {
    messageBus.addDestination(destination);
  }
  for (  Map.Entry<String,List<DestinationEventListener>> destinationEventListeners : _specificDestinationEventListeners.entrySet()) {
    String destinationName=destinationEventListeners.getKey();
    for (    DestinationEventListener destinationEventListener : destinationEventListeners.getValue()) {
      messageBus.addDestinationEventListener(destinationName,destinationEventListener);
    }
  }
  for (  Destination destination : _replacementDestinations) {
    messageBus.replace(destination);
  }
  connect();
  String servletContextName=ClassLoaderPool.getContextName(operatingClassLoader);
  MessagingConfiguratorRegistry.registerMessagingConfigurator(servletContextName,this);
}

{
  if (SPIUtil.isSPI() && _portalMessagingConfigurator) {
    return;
  }
  MessageBus messageBus=getMessageBus();
  Thread currentThread=Thread.currentThread();
  ClassLoader contextClassLoader=currentThread.getContextClassLoader();
  try {
    ClassLoader operatingClassLoader=getOperatingClassloader();
    currentThread.setContextClassLoader(operatingClassLoader);
    for (    Map.Entry<String,List<MessageListener>> messageListeners : _messageListeners.entrySet()) {
      String destinationName=messageListeners.getKey();
      if (SPIUtil.isSPI()) {
        SPI spi=SPIUtil.getSPI();
        try {
          RegistrationReference registrationReference=spi.getRegistrationReference();
          IntrabandRPCUtil.execute(registrationReference,new DestinationConfigurationProcessCallable(destinationName));
        }
 catch (        Exception e) {
          StringBundler sb=new StringBundler(4);
          sb.append("Unable to install ");
          sb.append(DestinationConfigurationProcessCallable.class.getName());
          sb.append(" on MPI for ");
          sb.append(destinationName);
          _log.error(sb.toString(),e);
        }
      }
      for (      MessageListener messageListener : messageListeners.getValue()) {
        messageBus.registerMessageListener(destinationName,messageListener);
      }
    }
  }
  finally {
    currentThread.setContextClassLoader(contextClassLoader);
  }
}

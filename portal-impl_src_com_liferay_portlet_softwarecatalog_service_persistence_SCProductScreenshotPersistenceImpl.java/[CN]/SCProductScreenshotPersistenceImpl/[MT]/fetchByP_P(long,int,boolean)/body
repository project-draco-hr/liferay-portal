{
  Object[] finderArgs=new Object[]{new Long(productEntryId),new Integer(priority)};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_P_P,finderArgs,this);
  }
  if (result == null) {
    Session session=null;
    try {
      session=openSession();
      StringBuilder query=new StringBuilder();
      query.append("FROM com.liferay.portlet.softwarecatalog.model.SCProductScreenshot WHERE ");
      query.append("productEntryId = ?");
      query.append(" AND ");
      query.append("priority = ?");
      query.append(" ");
      query.append("ORDER BY ");
      query.append("productEntryId ASC, ");
      query.append("priority ASC");
      Query q=session.createQuery(query.toString());
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(productEntryId);
      qPos.add(priority);
      List<SCProductScreenshot> list=q.list();
      result=list;
      SCProductScreenshot scProductScreenshot=null;
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_P_P,finderArgs,list);
      }
 else {
        scProductScreenshot=list.get(0);
        cacheResult(scProductScreenshot);
      }
      return scProductScreenshot;
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (result == null) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_P_P,finderArgs,new ArrayList<SCProductScreenshot>());
      }
      closeSession(session);
    }
  }
 else {
    if (result instanceof List) {
      return null;
    }
 else {
      return (SCProductScreenshot)result;
    }
  }
}

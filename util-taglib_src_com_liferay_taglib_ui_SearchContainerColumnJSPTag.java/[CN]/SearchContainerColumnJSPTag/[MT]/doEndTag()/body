{
  try {
    SearchContainerRowTag<R> searchContainerRowTag=(SearchContainerRowTag<R>)findAncestorWithClass(this,SearchContainerRowTag.class);
    ResultRow resultRow=searchContainerRowTag.getRow();
    if (index <= -1) {
      List<SearchEntry> searchEntries=resultRow.getEntries();
      index=searchEntries.size();
    }
    JSPSearchEntry jspSearchEntry=new JSPSearchEntry();
    jspSearchEntry.setAlign(getAlign());
    jspSearchEntry.setColspan(getColspan());
    jspSearchEntry.setCssClass(getCssClass());
    jspSearchEntry.setPath(getPath());
    jspSearchEntry.setRequest((HttpServletRequest)pageContext.getRequest());
    jspSearchEntry.setResponse((HttpServletResponse)pageContext.getResponse());
    jspSearchEntry.setServletContext(pageContext.getServletContext());
    jspSearchEntry.setTruncate(getTruncate());
    jspSearchEntry.setValign(getValign());
    resultRow.addSearchEntry(index,jspSearchEntry);
    return EVAL_PAGE;
  }
  finally {
    index=-1;
    if (!ServerDetector.isResin()) {
      align=SearchEntry.DEFAULT_ALIGN;
      colspan=SearchEntry.DEFAULT_COLSPAN;
      cssClass=SearchEntry.DEFAULT_CSS_CLASS;
      name=StringPool.BLANK;
      _path=null;
      valign=SearchEntry.DEFAULT_VALIGN;
    }
  }
}

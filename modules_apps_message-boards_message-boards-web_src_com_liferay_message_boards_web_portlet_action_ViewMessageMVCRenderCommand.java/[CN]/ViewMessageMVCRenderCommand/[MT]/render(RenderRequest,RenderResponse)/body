{
  try {
    long messageId=ParamUtil.getLong(renderRequest,"messageId");
    ThemeDisplay themeDisplay=(ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);
    PermissionChecker permissionChecker=themeDisplay.getPermissionChecker();
    int status=WorkflowConstants.STATUS_APPROVED;
    if (permissionChecker.isContentReviewer(themeDisplay.getUserId(),themeDisplay.getScopeGroupId())) {
      status=WorkflowConstants.STATUS_ANY;
    }
    PortalPreferences preferences=PortletPreferencesFactoryUtil.getPortalPreferences(renderRequest);
    String threadView=ParamUtil.getString(renderRequest,"threadView");
    if (Validator.isNotNull(threadView)) {
      preferences.setValue(PortletKeys.MESSAGE_BOARDS,"thread-view",threadView);
    }
 else {
      threadView=preferences.getValue(PortletKeys.MESSAGE_BOARDS,"thread-view",PropsValues.MESSAGE_BOARDS_THREAD_VIEWS_DEFAULT);
    }
    if (!ArrayUtil.contains(PropsValues.MESSAGE_BOARDS_THREAD_VIEWS,threadView)) {
      threadView=PropsValues.MESSAGE_BOARDS_THREAD_VIEWS_DEFAULT;
      preferences.setValue(PortletKeys.MESSAGE_BOARDS,"thread-view",threadView);
    }
    boolean includePrevAndNext=PropsValues.MESSAGE_BOARDS_THREAD_PREVIOUS_AND_NEXT_NAVIGATION_ENABLED;
    MBMessageDisplay messageDisplay=_mbMessageService.getMessageDisplay(messageId,status,threadView,includePrevAndNext);
    if (messageDisplay != null) {
      MBMessage message=messageDisplay.getMessage();
      if ((message != null) && message.isInTrash()) {
        throw new NoSuchMessageException("{messageId=" + messageId + "}");
      }
    }
    renderRequest.setAttribute(WebKeys.MESSAGE_BOARDS_MESSAGE,messageDisplay);
    return "/html/portlet/message_boards/view_message.jsp";
  }
 catch (  NoSuchMessageException|PrincipalException e) {
    SessionErrors.add(renderRequest,e.getClass());
    return "/html/portlet/message_board/error.jsp";
  }
catch (  RuntimeException re) {
    throw re;
  }
catch (  Exception e) {
    throw new PortletException(e);
  }
}

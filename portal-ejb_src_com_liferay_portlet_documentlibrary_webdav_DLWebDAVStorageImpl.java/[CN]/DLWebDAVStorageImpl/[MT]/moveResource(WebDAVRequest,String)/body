{
  try {
    Resource resource=getResource(webDavReq);
    if (resource == null) {
      return HttpServletResponse.SC_NOT_FOUND;
    }
    Object model=resource.getModel();
    String[] destinationArray=WebDAVUtil.getPathArray(destination);
    if (model instanceof DLFolder) {
      DLFolder folder=(DLFolder)model;
      String folderId=folder.getFolderId();
      String parentFolderId=destinationArray[destinationArray.length - 2];
      String name=destinationArray[destinationArray.length - 1];
      String description=folder.getDescription();
      if (!parentFolderId.equals(folder.getParentFolderId())) {
        name=folder.getName();
      }
      DLFolderServiceUtil.updateFolder(folderId,parentFolderId,name,description);
    }
 else {
      DLFileEntry fileEntry=(DLFileEntry)model;
      String folderId=fileEntry.getFolderId();
      String newFolderId=destinationArray[destinationArray.length - 2];
      String name=fileEntry.getName();
      String sourceFileName=null;
      String title=destinationArray[destinationArray.length - 1];
      String description=fileEntry.getDescription();
      String[] tagsEntries=new String[0];
      String extraSettings=fileEntry.getExtraSettings();
      byte[] byteArray=null;
      if (!newFolderId.equals(folderId)) {
        title=fileEntry.getTitle();
      }
      DLFileEntryServiceUtil.updateFileEntry(folderId,newFolderId,name,sourceFileName,title,description,tagsEntries,extraSettings,byteArray);
    }
    return HttpServletResponse.SC_CREATED;
  }
 catch (  PrincipalException pe) {
    return HttpServletResponse.SC_FORBIDDEN;
  }
catch (  Exception e) {
    throw new WebDAVException(e);
  }
}

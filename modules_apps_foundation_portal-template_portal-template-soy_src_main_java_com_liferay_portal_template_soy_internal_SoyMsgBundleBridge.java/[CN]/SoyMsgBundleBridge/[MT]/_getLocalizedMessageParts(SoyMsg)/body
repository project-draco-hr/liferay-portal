{
  List<SoyMsgPart> soyMsgParts=soyMsg.getParts();
  StringBundler sb=new StringBundler(soyMsgParts.size());
  LinkedList<SoyMsgPart> placeholderParts=new LinkedList<>();
  List<String> placeholderStrings=new ArrayList<>();
  Iterator<SoyMsgPart> iterator=soyMsgParts.iterator();
  while (iterator.hasNext()) {
    SoyMsgPart soyMsgPart=iterator.next();
    if (soyMsgPart instanceof SoyMsgPlaceholderPart) {
      placeholderParts.add(soyMsgPart);
      placeholderStrings.add(_PLACEHOLDER);
      sb.append(CharPool.LOWER_CASE_X);
    }
 else {
      SoyMsgRawTextPart soyMsgRawTextPart=(SoyMsgRawTextPart)soyMsgPart;
      sb.append(soyMsgRawTextPart.getRawText());
    }
  }
  String localizedText=LanguageUtil.format(_resourceBundle,sb.toString(),placeholderStrings.toArray());
  List<SoyMsgPart> localizedSoyMsgParts=new ArrayList<>();
  String[] localizedTextParts=StringUtil.split(localizedText,_PLACEHOLDER);
  for (  String localizedTextPart : localizedTextParts) {
    localizedSoyMsgParts.add(SoyMsgRawTextPart.of(localizedTextPart));
    if (placeholderParts.size() > 0) {
      localizedSoyMsgParts.add(placeholderParts.poll());
    }
  }
  return localizedSoyMsgParts;
}

{
  InputStream inputStream=null;
  try {
    inputStream=getInputStream();
    byte[] bytes=FileUtil.getBytes(inputStream);
    ServiceContext serviceContext=ServiceContextTestUtil.getServiceContext(_group.getGroupId());
    FileEntry fileEntry=DLAppLocalServiceUtil.addFileEntry(TestPropsValues.getUserId(),_group.getGroupId(),DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,_IMAGE_TITLE,MimeTypesUtil.getContentType(_IMAGE_TITLE),"image",StringPool.BLANK,StringPool.BLANK,bytes,serviceContext);
    BlogsEntryImageSelectorHelper blogsEntryImageSelectorHelper=new BlogsEntryImageSelectorHelper(fileEntry.getFileEntryId(),fileEntry.getFileEntryId() + 1,_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK);
    ImageSelector imageSelector=blogsEntryImageSelectorHelper.getImageSelector();
    Assert.assertArrayEquals(bytes,imageSelector.getImageBytes());
    Assert.assertEquals(_IMAGE_TITLE,imageSelector.getImageTitle());
    Assert.assertEquals(MimeTypesUtil.getContentType(_IMAGE_TITLE),imageSelector.getImageMimeType());
    Assert.assertEquals(_IMAGE_CROP_REGION,imageSelector.getImageCropRegion());
    Assert.assertEquals(StringPool.BLANK,imageSelector.getImageURL());
    Assert.assertFalse(blogsEntryImageSelectorHelper.isFileEntryTempFile());
  }
  finally {
    StreamUtil.cleanUp(inputStream);
  }
}

{
  Object[] finderArgs=new Object[]{companyId,classNameId,liveGroupId,name};
  Object result=null;
  if (retrieveFromCache) {
    result=FinderCacheUtil.getResult(FINDER_PATH_FETCH_BY_C_C_L_N,finderArgs,this);
  }
  if (result instanceof Group) {
    Group group=(Group)result;
    if ((companyId != group.getCompanyId()) || (classNameId != group.getClassNameId()) || (liveGroupId != group.getLiveGroupId())|| !Validator.equals(name,group.getName())) {
      result=null;
    }
  }
  if (result == null) {
    StringBundler query=new StringBundler(6);
    query.append(_SQL_SELECT_GROUP__WHERE);
    query.append(_FINDER_COLUMN_C_C_L_N_COMPANYID_2);
    query.append(_FINDER_COLUMN_C_C_L_N_CLASSNAMEID_2);
    query.append(_FINDER_COLUMN_C_C_L_N_LIVEGROUPID_2);
    boolean bindName=false;
    if (name == null) {
      query.append(_FINDER_COLUMN_C_C_L_N_NAME_1);
    }
 else     if (name.equals(StringPool.BLANK)) {
      query.append(_FINDER_COLUMN_C_C_L_N_NAME_3);
    }
 else {
      bindName=true;
      query.append(_FINDER_COLUMN_C_C_L_N_NAME_2);
    }
    String sql=query.toString();
    Session session=null;
    try {
      session=openSession();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      qPos.add(companyId);
      qPos.add(classNameId);
      qPos.add(liveGroupId);
      if (bindName) {
        qPos.add(name);
      }
      List<Group> list=q.list();
      if (list.isEmpty()) {
        FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C_L_N,finderArgs,list);
      }
 else {
        Group group=list.get(0);
        result=group;
        cacheResult(group);
        if ((group.getCompanyId() != companyId) || (group.getClassNameId() != classNameId) || (group.getLiveGroupId() != liveGroupId)|| (group.getName() == null)|| !group.getName().equals(name)) {
          FinderCacheUtil.putResult(FINDER_PATH_FETCH_BY_C_C_L_N,finderArgs,group);
        }
      }
    }
 catch (    Exception e) {
      FinderCacheUtil.removeResult(FINDER_PATH_FETCH_BY_C_C_L_N,finderArgs);
      throw processException(e);
    }
 finally {
      closeSession(session);
    }
  }
  if (result instanceof List<?>) {
    return null;
  }
 else {
    return (Group)result;
  }
}

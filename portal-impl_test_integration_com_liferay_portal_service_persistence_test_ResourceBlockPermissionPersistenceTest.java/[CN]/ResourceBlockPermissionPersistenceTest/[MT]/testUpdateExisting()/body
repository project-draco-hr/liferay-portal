{
  long pk=RandomTestUtil.nextLong();
  ResourceBlockPermission newResourceBlockPermission=_persistence.create(pk);
  newResourceBlockPermission.setMvccVersion(RandomTestUtil.nextLong());
  newResourceBlockPermission.setCompanyId(RandomTestUtil.nextLong());
  newResourceBlockPermission.setResourceBlockId(RandomTestUtil.nextLong());
  newResourceBlockPermission.setRoleId(RandomTestUtil.nextLong());
  newResourceBlockPermission.setActionIds(RandomTestUtil.nextLong());
  _resourceBlockPermissions.add(_persistence.update(newResourceBlockPermission));
  ResourceBlockPermission existingResourceBlockPermission=_persistence.findByPrimaryKey(newResourceBlockPermission.getPrimaryKey());
  Assert.assertEquals(existingResourceBlockPermission.getMvccVersion(),newResourceBlockPermission.getMvccVersion());
  Assert.assertEquals(existingResourceBlockPermission.getResourceBlockPermissionId(),newResourceBlockPermission.getResourceBlockPermissionId());
  Assert.assertEquals(existingResourceBlockPermission.getCompanyId(),newResourceBlockPermission.getCompanyId());
  Assert.assertEquals(existingResourceBlockPermission.getResourceBlockId(),newResourceBlockPermission.getResourceBlockId());
  Assert.assertEquals(existingResourceBlockPermission.getRoleId(),newResourceBlockPermission.getRoleId());
  Assert.assertEquals(existingResourceBlockPermission.getActionIds(),newResourceBlockPermission.getActionIds());
}

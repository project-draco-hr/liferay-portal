{
  int startPos=openTag.length;
  StringBundler bundler=new StringBundler(openTag.length);
  bundler.append(openTag);
  for (int i=startPos; i < charBuffer.length(); i++) {
    char c=charBuffer.charAt(i);
    bundler.append(c);
    if (c == CharPool.GREATER_THAN) {
      openTag=bundler.toString().toCharArray();
      break;
    }
 else     if (c == CharPool.LESS_THAN) {
      return;
    }
  }
  outputOpenTag(charBuffer,writer,openTag);
  int length=KMPSearch.search(charBuffer,_MARKER_SCRIPT_CLOSE,_MARKER_SCRIPT_CLOSE_NEXTS);
  if (length == -1) {
    if (_log.isWarnEnabled()) {
      _log.warn("Missing </script>");
    }
    return;
  }
  if (length == 0) {
    outputCloseTag(charBuffer,writer,_MARKER_SCRIPT_CLOSE);
    return;
  }
  String content=extractContent(charBuffer,length);
  String minifiedContent=content;
  if (PropsValues.MINIFIER_INLINE_CONTENT_CACHE_SIZE > 0) {
    String key=String.valueOf(content.hashCode());
    minifiedContent=_minifierCache.get(key);
    if (minifiedContent == null) {
      minifiedContent=MinifierUtil.minifyJavaScript(content);
      boolean skipCache=false;
      for (      String skipJavaScript : PropsValues.MINIFIER_INLINE_CONTENT_CACHE_SKIP_JAVASCRIPT) {
        if (minifiedContent.contains(skipJavaScript)) {
          skipCache=true;
          break;
        }
      }
      if (!skipCache) {
        _minifierCache.put(key,minifiedContent);
      }
    }
  }
  if (!Validator.isNull(minifiedContent)) {
    writer.write(_CDATA_OPEN);
    writer.write(minifiedContent);
    writer.write(_CDATA_CLOSE);
  }
  outputCloseTag(charBuffer,writer,_MARKER_SCRIPT_CLOSE);
}

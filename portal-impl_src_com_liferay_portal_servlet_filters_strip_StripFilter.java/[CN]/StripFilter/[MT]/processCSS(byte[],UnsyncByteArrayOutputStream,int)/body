{
  int beginIndex=currentIndex + _MARKER_STYLE_OPEN.length + 1;
  int endIndex=KMPSearch.search(oldByteArray,beginIndex,_MARKER_STYLE_CLOSE,_MARKER_STYLE_CLOSE_NEXTS);
  if (endIndex == -1) {
    _log.error("Missing </style>");
    return currentIndex + 1;
  }
  int newBeginIndex=endIndex + _MARKER_STYLE_CLOSE.length;
  newBeginIndex+=countContinuousWhiteSpace(oldByteArray,newBeginIndex);
  String content=new String(oldByteArray,beginIndex,endIndex - beginIndex);
  if (Validator.isNull(content)) {
    return newBeginIndex;
  }
  String key;
  MessageDigest messageDigest=_THREAD_LOCAL_MESSAGE_DIGEST.get();
  if (messageDigest == null) {
    key=Integer.toString(content.hashCode());
  }
 else {
    key=new String(messageDigest.digest(content.getBytes()));
  }
  String cachedContent=_concurrentLRUCache.get(key);
  if (cachedContent == null) {
    cachedContent=MinifierUtil.minifyCss(content);
    _concurrentLRUCache.put(key,cachedContent);
  }
  if (Validator.isNull(cachedContent)) {
    return newBeginIndex;
  }
  newBytes.write(_STYLE_TYPE_CSS);
  newBytes.write(cachedContent.getBytes());
  newBytes.write(_MARKER_STYLE_CLOSE);
  return newBeginIndex;
}

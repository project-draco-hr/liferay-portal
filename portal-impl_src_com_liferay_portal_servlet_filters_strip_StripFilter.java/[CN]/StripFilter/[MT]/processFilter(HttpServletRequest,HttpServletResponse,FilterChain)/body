{
  String completeURL=HttpUtil.getCompleteURL(request);
  if (isStrip(request) && !isInclude(request) && !isAlreadyFiltered(request)) {
    if (_log.isDebugEnabled()) {
      _log.debug("Stripping " + completeURL);
    }
    request.setAttribute(SKIP_FILTER,Boolean.TRUE);
    StripResponse stripResponse=new StripResponse(response);
    processFilter(StripFilter.class,request,stripResponse,filterChain);
    String contentType=GetterUtil.getString(stripResponse.getContentType()).toLowerCase();
    byte[] oldByteArray=stripResponse.getData();
    if ((oldByteArray != null) && (oldByteArray.length > 0)) {
      byte[] newByteArray=new byte[oldByteArray.length];
      int newByteArrayPos=0;
      if (_log.isDebugEnabled()) {
        _log.debug("Stripping content of type " + contentType);
      }
      if (contentType.indexOf("text/") != -1) {
        int state=0;
        char prevChar=CharPool.LESS_THAN;
        for (int i=0; i < oldByteArray.length; i++) {
          byte b=oldByteArray[i];
          char c=(char)b;
          if (c == CharPool.LESS_THAN) {
            if (state == 0) {
              if ((i + 4) < oldByteArray.length) {
                char c1=(char)oldByteArray[i + 1];
                char c2=(char)oldByteArray[i + 2];
                char c3=(char)oldByteArray[i + 3];
                char c4=(char)oldByteArray[i + 4];
                if (((c1 == CharPool.LOWER_CASE_P) || (c1 == CharPool.UPPER_CASE_P)) && ((c2 == CharPool.LOWER_CASE_R) || (c2 == CharPool.UPPER_CASE_R)) && ((c3 == CharPool.LOWER_CASE_E) || (c3 == CharPool.UPPER_CASE_E))&& ((c4 == CharPool.GREATER_THAN))) {
                  state=1;
                }
              }
              if ((state == 0) && ((i + 9) < oldByteArray.length)) {
                char c1=(char)oldByteArray[i + 1];
                char c2=(char)oldByteArray[i + 2];
                char c3=(char)oldByteArray[i + 3];
                char c4=(char)oldByteArray[i + 4];
                char c5=(char)oldByteArray[i + 5];
                char c6=(char)oldByteArray[i + 6];
                char c7=(char)oldByteArray[i + 7];
                char c8=(char)oldByteArray[i + 8];
                char c9=(char)oldByteArray[i + 9];
                if (((c1 == CharPool.LOWER_CASE_T) || (c1 == CharPool.UPPER_CASE_T)) && ((c2 == CharPool.LOWER_CASE_E) || (c2 == CharPool.UPPER_CASE_E)) && ((c3 == CharPool.LOWER_CASE_X) || (c3 == CharPool.UPPER_CASE_X))&& ((c4 == CharPool.LOWER_CASE_T) || (c4 == CharPool.UPPER_CASE_T))&& ((c5 == CharPool.LOWER_CASE_A) || (c5 == CharPool.UPPER_CASE_A))&& ((c6 == CharPool.LOWER_CASE_R) || (c6 == CharPool.UPPER_CASE_R))&& ((c7 == CharPool.LOWER_CASE_E) || (c7 == CharPool.UPPER_CASE_E))&& ((c8 == CharPool.LOWER_CASE_A) || (c8 == CharPool.UPPER_CASE_A))&& ((c9 == CharPool.SPACE))) {
                  state=1;
                }
              }
            }
 else             if (state == 1) {
              if ((i + 5) < oldByteArray.length) {
                char c1=(char)oldByteArray[i + 1];
                char c2=(char)oldByteArray[i + 2];
                char c3=(char)oldByteArray[i + 3];
                char c4=(char)oldByteArray[i + 4];
                char c5=(char)oldByteArray[i + 5];
                if (((c1 == CharPool.SLASH)) && ((c2 == CharPool.LOWER_CASE_P) || (c2 == CharPool.UPPER_CASE_P)) && ((c3 == CharPool.LOWER_CASE_R) || (c3 == CharPool.UPPER_CASE_R))&& ((c4 == CharPool.LOWER_CASE_E) || (c4 == CharPool.UPPER_CASE_E))&& ((c5 == CharPool.GREATER_THAN))) {
                  state=0;
                }
              }
              if ((state == 1) && ((i + 10) < oldByteArray.length)) {
                char c1=(char)oldByteArray[i + 1];
                char c2=(char)oldByteArray[i + 2];
                char c3=(char)oldByteArray[i + 3];
                char c4=(char)oldByteArray[i + 4];
                char c5=(char)oldByteArray[i + 5];
                char c6=(char)oldByteArray[i + 6];
                char c7=(char)oldByteArray[i + 7];
                char c8=(char)oldByteArray[i + 8];
                char c9=(char)oldByteArray[i + 9];
                char c10=(char)oldByteArray[i + 10];
                if (((c1 == CharPool.SLASH)) && ((c2 == CharPool.LOWER_CASE_T) || (c2 == CharPool.UPPER_CASE_T)) && ((c3 == CharPool.LOWER_CASE_E) || (c3 == CharPool.UPPER_CASE_E))&& ((c4 == CharPool.LOWER_CASE_X) || (c4 == CharPool.UPPER_CASE_X))&& ((c5 == CharPool.LOWER_CASE_T) || (c5 == CharPool.UPPER_CASE_T))&& ((c6 == CharPool.LOWER_CASE_A) || (c6 == CharPool.UPPER_CASE_A))&& ((c7 == CharPool.LOWER_CASE_R) || (c7 == CharPool.UPPER_CASE_R))&& ((c8 == CharPool.LOWER_CASE_E) || (c8 == CharPool.UPPER_CASE_E))&& ((c9 == CharPool.LOWER_CASE_A) || (c9 == CharPool.UPPER_CASE_A))&& ((c10 == CharPool.GREATER_THAN))) {
                  state=0;
                }
              }
            }
          }
          if ((state == 0) && ((c == CharPool.NEW_LINE) || (c == CharPool.RETURN) || (c == CharPool.TAB))) {
            if ((i + 1) == oldByteArray.length) {
            }
            if ((prevChar == CharPool.NEW_LINE) || (prevChar == CharPool.RETURN)) {
            }
 else {
              if (c != CharPool.TAB) {
                prevChar=c;
              }
              newByteArray[newByteArrayPos++]=b;
            }
          }
 else {
            prevChar=c;
            newByteArray[newByteArrayPos++]=b;
          }
        }
      }
 else {
        newByteArray=oldByteArray;
        newByteArrayPos=oldByteArray.length;
      }
      ServletResponseUtil.write(response,newByteArray,newByteArrayPos);
    }
  }
 else {
    if (_log.isDebugEnabled()) {
      _log.debug("Not stripping " + completeURL);
    }
    processFilter(StripFilter.class,request,response,filterChain);
  }
}

{
  ByteArrayOutputStream newBytes=new ByteArrayOutputStream((int)(oldByteArray.length * TARGET_COMPRESS_RATE));
  int count=countContinuousWhiteSpace(oldByteArray,0);
  for (int i=count; i < oldByteArray.length; i++) {
    byte b=oldByteArray[i];
    char c=(char)b;
    if (c == CharPool.LESS_THAN) {
      if (hasMarker(oldByteArray,i,_MARKER_PRE_OPEN)) {
        i=processPre(oldByteArray,newBytes,i) - 1;
        continue;
      }
 else       if (hasMarker(oldByteArray,i,_MARKER_TEXTAREA_OPEN)) {
        i=processTextArea(oldByteArray,newBytes,i) - 1;
        continue;
      }
 else       if (hasMarker(oldByteArray,i,_MARKER_JAVASCRIPT_OPEN)) {
        i=processJavaScript(oldByteArray,newBytes,i,_MARKER_JAVASCRIPT_OPEN) - 1;
        continue;
      }
 else       if (hasMarker(oldByteArray,i,_MARKER_SCRIPT_OPEN)) {
        i=processJavaScript(oldByteArray,newBytes,i,_MARKER_SCRIPT_OPEN) - 1;
        continue;
      }
 else       if (hasMarker(oldByteArray,i,_MARKER_STYLE_OPEN)) {
        i=processCSS(oldByteArray,newBytes,i) - 1;
        continue;
      }
    }
 else     if (c == CharPool.GREATER_THAN) {
      newBytes.write(c);
      i=i + countContinuousWhiteSpace(oldByteArray,i + 1);
      continue;
    }
    if ((i + 1) < oldByteArray.length) {
      if ((c == CharPool.NEW_LINE) || (c == CharPool.RETURN) || (c == CharPool.TAB)) {
        char nextChar=(char)oldByteArray[i + 1];
        if ((nextChar == CharPool.NEW_LINE) || (nextChar == CharPool.RETURN) || (nextChar == CharPool.TAB)|| (nextChar == CharPool.LESS_THAN)) {
          continue;
        }
      }
    }
    newBytes.write(b);
  }
  return newBytes.toByteArray();
}

{
  Object[] finderArgs=new Object[]{name,String.valueOf(start),String.valueOf(end),String.valueOf(obc)};
  List<ResourceCode> list=(List<ResourceCode>)FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_OBC_NAME,finderArgs,this);
  if (list == null) {
    Session session=null;
    try {
      session=openSession();
      StringBundler query=null;
      if (obc != null) {
        query=new StringBundler(3 + (obc.getOrderByFields().length * 3));
      }
 else {
        query=new StringBundler(2);
      }
      query.append(_SQL_SELECT_RESOURCECODE_WHERE);
      if (name == null) {
        query.append(_FINDER_COLUMN_NAME_NAME_1);
      }
 else {
        if (name.equals(StringPool.BLANK)) {
          query.append(_FINDER_COLUMN_NAME_NAME_3);
        }
 else {
          query.append(_FINDER_COLUMN_NAME_NAME_2);
        }
      }
      if (obc != null) {
        appendOrderByComparator(query,_ORDER_BY_ENTITY_ALIAS,obc);
      }
      String sql=query.toString();
      Query q=session.createQuery(sql);
      QueryPos qPos=QueryPos.getInstance(q);
      if (name != null) {
        qPos.add(name);
      }
      list=(List<ResourceCode>)QueryUtil.list(q,getDialect(),start,end);
    }
 catch (    Exception e) {
      throw processException(e);
    }
 finally {
      if (list == null) {
        list=new ArrayList<ResourceCode>();
      }
      cacheResult(list);
      FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_OBC_NAME,finderArgs,list);
      closeSession(session);
    }
  }
  return list;
}

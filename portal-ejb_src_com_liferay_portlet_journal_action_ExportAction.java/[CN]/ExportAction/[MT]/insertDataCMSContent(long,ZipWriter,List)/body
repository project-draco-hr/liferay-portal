{
  StringMaker sm=new StringMaker();
  List igImages=new ArrayList();
  Iterator itr=IGFolderLocalServiceUtil.getFolders(cmsGroupId).iterator();
  while (itr.hasNext()) {
    IGFolder folder=(IGFolder)itr.next();
    sm.append("insert into IGFolder (");
    sm.append("folderId, groupId, companyId, userId, createDate, ");
    sm.append("modifiedDate, parentFolderId, name");
    sm.append(") values (");
    addColumn(sm,folder.getFolderId());
    addColumn(sm,folder.getGroupId());
    addColumn(sm,folder.getCompanyId());
    addColumn(sm,folder.getUserId());
    addColumn(sm,folder.getCreateDate());
    addColumn(sm,folder.getModifiedDate());
    addColumn(sm,folder.getParentFolderId());
    addColumn(sm,folder.getName());
    removeTrailingComma(sm);
    sm.append(");\n");
    igImages.addAll(IGImageLocalServiceUtil.getImages(folder.getFolderId()));
  }
  Collections.sort(igImages);
  itr=igImages.iterator();
  while (itr.hasNext()) {
    IGImage image=(IGImage)itr.next();
    sm.append("insert into IGImage (");
    sm.append("imageId, companyId, userId, createDate, modifiedDate, ");
    sm.append("folderId, description, height, width, size_");
    sm.append(") values (");
    addColumn(sm,image.getImageId());
    addColumn(sm,image.getCompanyId());
    addColumn(sm,image.getUserId());
    addColumn(sm,image.getCreateDate());
    addColumn(sm,image.getModifiedDate());
    addColumn(sm,image.getFolderId());
    addColumn(sm,image.getDescription());
    addColumn(sm,image.getHeight());
    addColumn(sm,image.getWidth());
    addColumn(sm,image.getSize());
    removeTrailingComma(sm);
    sm.append(");\n");
  }
  itr=JournalArticleLocalServiceUtil.getArticles(cmsGroupId).iterator();
  while (itr.hasNext()) {
    JournalArticle article=(JournalArticle)itr.next();
    if (article.isApproved() && JournalArticleLocalServiceUtil.isLatestVersion(article.getCompanyId(),article.getGroupId(),article.getArticleId(),article.getVersion())) {
      sm.append("insert into JournalArticle (");
      sm.append("companyId, groupId, articleId, version, userId, ");
      sm.append("userName, createDate, modifiedDate, title, ");
      sm.append("description, content, type_, structureId, ");
      sm.append("templateId, displayDate, approved, ");
      sm.append("approvedByUserId, approvedByUserName, expired");
      sm.append(") values (");
      addColumn(sm,article.getCompanyId());
      addColumn(sm,article.getGroupId());
      addColumn(sm,article.getArticleId());
      addColumn(sm,JournalArticleImpl.DEFAULT_VERSION);
      addColumn(sm,"liferay.com.1");
      addColumn(sm,"Joe Bloggs");
      addColumn(sm,article.getCreateDate());
      addColumn(sm,article.getModifiedDate());
      addColumn(sm,article.getTitle());
      addColumn(sm,article.getDescription());
      addColumn(sm,article.getContent());
      addColumn(sm,article.getType());
      addColumn(sm,article.getStructureId());
      addColumn(sm,article.getTemplateId());
      addColumn(sm,article.getDisplayDate(),false);
      addColumn(sm,article.getApproved());
      addColumn(sm,"liferay.com.1");
      addColumn(sm,"Joe Bloggs");
      addColumn(sm,article.getExpired());
      removeTrailingComma(sm);
      sm.append(");\n");
    }
  }
  sm.append("\n");
  itr=journalContentSearches.iterator();
  while (itr.hasNext()) {
    JournalContentSearch contentSearch=(JournalContentSearch)itr.next();
    sm.append("insert into JournalContentSearch (");
    sm.append("portletId, layoutId, ownerId, articleId, companyId, ");
    sm.append("groupId");
    sm.append(") values (");
    addColumn(sm,contentSearch.getPortletId());
    addColumn(sm,contentSearch.getLayoutId());
    addColumn(sm,contentSearch.getOwnerId());
    addColumn(sm,contentSearch.getArticleId());
    addColumn(sm,contentSearch.getCompanyId());
    addColumn(sm,contentSearch.getGroupId());
    removeTrailingComma(sm);
    sm.append(");\n");
  }
  sm.append("\n");
  itr=JournalStructureLocalServiceUtil.getStructures(cmsGroupId).iterator();
  while (itr.hasNext()) {
    JournalStructure structure=(JournalStructure)itr.next();
    sm.append("insert into JournalStructure (");
    sm.append("companyId, structureId, groupId, userId, userName, ");
    sm.append("createDate, modifiedDate, name, description, xsd");
    sm.append(") values (");
    addColumn(sm,structure.getCompanyId());
    addColumn(sm,structure.getStructureId());
    addColumn(sm,structure.getGroupId());
    addColumn(sm,structure.getUserId());
    addColumn(sm,structure.getUserName());
    addColumn(sm,structure.getCreateDate());
    addColumn(sm,structure.getModifiedDate());
    addColumn(sm,structure.getName());
    addColumn(sm,structure.getDescription());
    addColumn(sm,structure.getXsd());
    removeTrailingComma(sm);
    sm.append(");\n");
  }
  sm.append("\n");
  itr=JournalTemplateLocalServiceUtil.getTemplates(cmsGroupId).iterator();
  while (itr.hasNext()) {
    JournalTemplate template=(JournalTemplate)itr.next();
    sm.append("insert into JournalTemplate (");
    sm.append("companyId, templateId, groupId, userId, userName, ");
    sm.append("createDate, modifiedDate, structureId, name, ");
    sm.append("description, xsl, langType, smallImage, smallImageURL");
    sm.append(") values (");
    addColumn(sm,template.getCompanyId());
    addColumn(sm,template.getTemplateId());
    addColumn(sm,template.getGroupId());
    addColumn(sm,template.getUserId());
    addColumn(sm,template.getUserName());
    addColumn(sm,template.getCreateDate());
    addColumn(sm,template.getModifiedDate());
    addColumn(sm,template.getStructureId());
    addColumn(sm,template.getName());
    addColumn(sm,template.getDescription());
    addColumn(sm,template.getXsl());
    addColumn(sm,template.getLangType());
    addColumn(sm,template.getSmallImage());
    addColumn(sm,template.getSmallImageURL());
    removeTrailingComma(sm);
    sm.append(");\n");
  }
  removeTrailingNewLine(sm);
  zipWriter.addEntry("portal-data-cms-content.sql",sm);
}

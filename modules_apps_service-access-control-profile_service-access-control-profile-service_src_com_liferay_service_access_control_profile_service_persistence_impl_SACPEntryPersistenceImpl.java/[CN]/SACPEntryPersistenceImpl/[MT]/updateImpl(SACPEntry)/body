{
  sacpEntry=toUnwrappedModel(sacpEntry);
  boolean isNew=sacpEntry.isNew();
  SACPEntryModelImpl sacpEntryModelImpl=(SACPEntryModelImpl)sacpEntry;
  if (Validator.isNull(sacpEntry.getUuid())) {
    String uuid=PortalUUIDUtil.generate();
    sacpEntry.setUuid(uuid);
  }
  if (!ExportImportThreadLocal.isImportInProcess()) {
    ServiceContext serviceContext=ServiceContextThreadLocal.getServiceContext();
    Date now=new Date();
    if (isNew && (sacpEntry.getCreateDate() == null)) {
      if (serviceContext == null) {
        sacpEntry.setCreateDate(now);
      }
 else {
        sacpEntry.setCreateDate(serviceContext.getCreateDate(now));
      }
    }
    if (!sacpEntryModelImpl.hasSetModifiedDate()) {
      if (serviceContext == null) {
        sacpEntry.setModifiedDate(now);
      }
 else {
        sacpEntry.setModifiedDate(serviceContext.getModifiedDate(now));
      }
    }
  }
  Session session=null;
  try {
    session=openSession();
    if (sacpEntry.isNew()) {
      session.save(sacpEntry);
      sacpEntry.setNew(false);
    }
 else {
      session.merge(sacpEntry);
    }
  }
 catch (  Exception e) {
    throw processException(e);
  }
 finally {
    closeSession(session);
  }
  FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITH_PAGINATION);
  if (isNew || !SACPEntryModelImpl.COLUMN_BITMASK_ENABLED) {
    FinderCacheUtil.clearCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION);
  }
 else {
    if ((sacpEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sacpEntryModelImpl.getOriginalUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
      args=new Object[]{sacpEntryModelImpl.getUuid()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID,args);
    }
    if ((sacpEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sacpEntryModelImpl.getOriginalUuid(),sacpEntryModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
      args=new Object[]{sacpEntryModelImpl.getUuid(),sacpEntryModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_UUID_C,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_UUID_C,args);
    }
    if ((sacpEntryModelImpl.getColumnBitmask() & FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID.getColumnBitmask()) != 0) {
      Object[] args=new Object[]{sacpEntryModelImpl.getOriginalCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
      args=new Object[]{sacpEntryModelImpl.getCompanyId()};
      FinderCacheUtil.removeResult(FINDER_PATH_COUNT_BY_COMPANYID,args);
      FinderCacheUtil.removeResult(FINDER_PATH_WITHOUT_PAGINATION_FIND_BY_COMPANYID,args);
    }
  }
  EntityCacheUtil.putResult(SACPEntryModelImpl.ENTITY_CACHE_ENABLED,SACPEntryImpl.class,sacpEntry.getPrimaryKey(),sacpEntry,false);
  clearUniqueFindersCache(sacpEntry);
  cacheUniqueFindersCache(sacpEntry);
  sacpEntry.resetOriginalValues();
  return sacpEntry;
}

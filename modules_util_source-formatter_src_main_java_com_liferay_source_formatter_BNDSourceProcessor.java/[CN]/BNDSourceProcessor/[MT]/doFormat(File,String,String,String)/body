{
  content=trimContent(content,false);
  content=StringUtil.replace(content,new String[]{"/\n","/,\\\n"},new String[]{"\n",",\\\n"});
  if (fileName.endsWith("-web/bnd.bnd") && content.contains("Liferay-Require-SchemaVersion: 1.0.0")) {
    processMessage(fileName,"Do not include the header Liferay-Require-SchemaVersion in " + "web modules");
  }
  content=StringUtil.replace(content," \\\n","\\\n");
  Matcher matcher=_incorrectTabPattern.matcher(content);
  if (matcher.find()) {
    content=StringUtil.replaceFirst(content,matcher.group(1),StringPool.TAB,matcher.start());
  }
  matcher=_singleValueOnMultipleLinesPattern.matcher(content);
  if (matcher.find()) {
    content=StringUtil.replaceFirst(content,matcher.group(1),StringPool.SPACE,matcher.start());
  }
  checkWildcardImports(fileName,absolutePath,content,_exportsPattern);
  ImportsFormatter importsFormatter=new BNDImportsFormatter();
  content=importsFormatter.format(content,_exportsPattern);
  content=importsFormatter.format(content,_importsPattern);
  checkDirectoryAndBundleName(fileName,absolutePath,content);
  content=formatBundleClassPath(content);
  if (portalSource && isModulesFile(absolutePath) && !fileName.endsWith("test-bnd.bnd")) {
    content=formatIncludeResource(content);
  }
  return sortDefinitions(fileName,content,new DefinitionComparator());
}

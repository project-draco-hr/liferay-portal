{
  JoddIntrospector.introspector=new CachingIntrospector(true,true,true,"_");
  JoddJson.jsonAnnotation=JSON.class;
  JoddJson.excludedTypes=new Class[]{ExpandoBridge.class,InputStream.class,LiferayPortletRequest.class,LiferayPortletResponse.class,OutputStream.class,PortletDisplayModel.class,PortletURL.class};
  JoddJson.excludedTypeNames=new String[]{"javax.*"};
  TypeJsonSerializerMap typeSerializerMap=JoddJson.defaultSerializers;
  Class<?>[][] classesArray=new Class<?>[][]{new Class[]{File.class,FileJSONTransformer.class},new Class[]{JSONArray.class,JSONArrayJSONTransformer.class},new Class[]{JSONObject.class,JSONObjectJSONTransformer.class},new Class[]{JSONSerializable.class,JSONSerializableJSONTransformer.class},new Class[]{RepositoryModel.class,RepositoryModelJSONTransformer.class},new Class[]{User.class,UserJSONTransformer.class}};
  for (  Class<?>[] classes : classesArray) {
    typeSerializerMap.register(classes[0],new JoddJsonTransformer((JSONTransformer)classes[1].newInstance()));
  }
}

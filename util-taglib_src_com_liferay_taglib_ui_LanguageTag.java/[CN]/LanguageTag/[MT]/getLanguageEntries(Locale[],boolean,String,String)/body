{
  List<LanguageEntry> languageEntries=new ArrayList<>();
  Map<String,Integer> counts=new HashMap<>();
  for (  Locale locale : locales) {
    Integer count=counts.get(locale.getLanguage());
    if (count == null) {
      count=new Integer(1);
    }
 else {
      count=new Integer(count.intValue() + 1);
    }
    counts.put(locale.getLanguage(),count);
  }
  Set<String> duplicateLanguages=new HashSet<>();
  for (  Locale locale : locales) {
    Integer count=counts.get(locale.getLanguage());
    if (count.intValue() != 1) {
      duplicateLanguages.add(locale.getLanguage());
    }
  }
  for (  Locale locale : locales) {
    String url=null;
    ThemeDisplay themeDisplay=(ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);
    if (!LocaleUtil.equals(locale,themeDisplay.getLocale())) {
      url=HttpUtil.addParameter(formAction,parameterName,LocaleUtil.toLanguageId(locale));
    }
 else     if (!displayCurrentLocale) {
      continue;
    }
    languageEntries.add(new LanguageEntry(duplicateLanguages,themeDisplay.getLocale(),locale,url));
  }
  return languageEntries;
}

{
  List<TrashEntry> entries=new ArrayList<>();
  for (  Document document : hits.getDocs()) {
    String entryClassName=GetterUtil.getString(document.get(Field.ENTRY_CLASS_NAME));
    long classPK=GetterUtil.getLong(document.get(Field.ENTRY_CLASS_PK));
    try {
      TrashEntry entry=TrashEntryLocalServiceUtil.fetchEntry(entryClassName,classPK);
      if (entry == null) {
        String userName=GetterUtil.getString(document.get(Field.REMOVED_BY_USER_NAME));
        Date removedDate=document.getDate(Field.REMOVED_DATE);
        entry=new TrashEntryImpl();
        entry.setUserName(userName);
        entry.setCreateDate(removedDate);
        TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(entryClassName);
        TrashRenderer trashRenderer=trashHandler.getTrashRenderer(classPK);
        entry.setClassName(trashRenderer.getClassName());
        entry.setClassPK(trashRenderer.getClassPK());
        String rootEntryClassName=GetterUtil.getString(document.get(Field.ROOT_ENTRY_CLASS_NAME));
        long rootEntryClassPK=GetterUtil.getLong(document.get(Field.ROOT_ENTRY_CLASS_PK));
        TrashEntry rootTrashEntry=TrashEntryLocalServiceUtil.fetchEntry(rootEntryClassName,rootEntryClassPK);
        if (rootTrashEntry != null) {
          entry.setRootEntry(rootTrashEntry);
        }
      }
      entries.add(entry);
    }
 catch (    Exception e) {
      if (_log.isWarnEnabled()) {
        _log.warn("Unable to find trash entry for " + entryClassName + " with primary key "+ classPK);
      }
    }
  }
  return entries;
}

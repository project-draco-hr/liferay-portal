{
  if (!themeDisplay.isSignedIn() || !isTrashEnabled(themeDisplay.getScopeGroupId()) || !PortletPermissionUtil.hasControlPanelAccessPermission(themeDisplay.getPermissionChecker(),themeDisplay.getScopeGroupId(),PortletKeys.TRASH)) {
    return null;
  }
  TrashHandler trashHandler=TrashHandlerRegistryUtil.getTrashHandler(className);
  if (trashHandler.isInTrashContainer(classPK)) {
    ContainerModel containerModel=trashHandler.getTrashContainer(classPK);
    className=containerModel.getModelClassName();
    classPK=containerModel.getContainerModelId();
    trashHandler=TrashHandlerRegistryUtil.getTrashHandler(className);
  }
  TrashRenderer trashRenderer=trashHandler.getTrashRenderer(classPK);
  if (trashRenderer == null) {
    return null;
  }
  TrashEntry trashEntry=TrashEntryLocalServiceUtil.getEntry(className,classPK);
  String namespace=PortalUtil.getPortletNamespace(PortletKeys.TRASH);
  Map<String,String[]> params=new HashMap<String,String[]>();
  params.put(namespace + "struts_action",new String[]{"/trash/view_content"});
  params.put(namespace + "redirect",new String[]{themeDisplay.getURLCurrent()});
  if (trashEntry.getRootEntry() != null) {
    params.put(namespace + "className",new String[]{className});
    params.put(namespace + "classPK",new String[]{String.valueOf(classPK)});
  }
 else {
    params.put(namespace + "trashEntryId",new String[]{String.valueOf(trashEntry.getEntryId())});
  }
  params.put(namespace + "type",new String[]{trashRenderer.getType()});
  params.put(namespace + "showActions",new String[]{Boolean.FALSE.toString()});
  params.put(namespace + "showAssetMetadata",new String[]{Boolean.TRUE.toString()});
  params.put(namespace + "showEditURL",new String[]{Boolean.FALSE.toString()});
  return PortalUtil.getControlPanelFullURL(themeDisplay.getScopeGroupId(),PortletKeys.TRASH,params);
}

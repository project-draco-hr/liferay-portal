{
  boolean reCaptchaEnabled=ParamUtil.getBoolean(actionRequest,"reCaptchaEnabled");
  String reCaptchaPrivateKey=ParamUtil.getString(actionRequest,"reCaptchaPrivateKey");
  String reCaptchaPublicKey=ParamUtil.getString(actionRequest,"reCaptchaPublicKey");
  Captcha captcha=null;
  if (reCaptchaEnabled) {
    captcha=new ReCaptchaImpl();
  }
 else {
    captcha=new SimpleCaptchaImpl();
  }
  validateCaptcha(actionRequest);
  if (SessionErrors.isEmpty(actionRequest)) {
    preferences.setValue(PropsKeys.CAPTCHA_ENGINE_IMPL,captcha.getClass().getName());
    preferences.setValue(PropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PRIVATE,reCaptchaPrivateKey);
    preferences.setValue(PropsKeys.CAPTCHA_ENGINE_RECAPTCHA_KEY_PUBLIC,reCaptchaPublicKey);
    preferences.store();
    CaptchaImpl captchaImpl=(CaptchaImpl)CaptchaUtil.getCaptcha();
    captchaImpl.setCaptcha(captcha);
  }
}

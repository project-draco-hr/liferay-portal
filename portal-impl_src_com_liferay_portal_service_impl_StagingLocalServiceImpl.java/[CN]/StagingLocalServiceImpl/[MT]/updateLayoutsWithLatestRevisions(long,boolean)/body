{
  List<LayoutSetBranch> layoutSetBranches=layoutSetBranchLocalService.getLayoutSetBranches(groupId,privateLayout);
  List<Long> lastPublishDates=new ArrayList<Long>();
  Map<Long,Long> publishedLayoutSetBranches=new HashMap<Long,Long>();
  for (  LayoutSetBranch layoutSetBranch : layoutSetBranches) {
    String lastPublishDate=layoutSetBranch.getSettingsProperty("last-publish-date");
    if (Validator.isNotNull(lastPublishDate)) {
      Long lastPublishTime=new Long(lastPublishDate);
      lastPublishDates.add(lastPublishTime);
      publishedLayoutSetBranches.put(lastPublishTime,layoutSetBranch.getLayoutSetBranchId());
    }
  }
  Collections.sort(lastPublishDates);
  Map<Long,Long> publishedLayoutRevisions=getPublishedLayoutRevisions(lastPublishDates,publishedLayoutSetBranches);
  Set<Long> publishedLayoutPlids=publishedLayoutRevisions.keySet();
  for (  Long plid : publishedLayoutPlids) {
    long layoutRevisionId=publishedLayoutRevisions.get(plid);
    LayoutRevision layoutRevision=layoutRevisionLocalService.fetchLayoutRevision(layoutRevisionId);
    Layout layout=layoutLocalService.fetchLayout(plid);
    layout=updateLayoutWithLayoutRevision(layout,layoutRevision);
    layoutLocalService.updateLayout(layout);
  }
}

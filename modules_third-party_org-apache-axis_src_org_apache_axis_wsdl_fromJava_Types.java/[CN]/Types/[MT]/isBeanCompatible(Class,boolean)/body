{
  if (javaType.isArray() || javaType.isPrimitive()) {
    if (issueErrors && !beanCompatErrs.contains(javaType)) {
      log.warn(Messages.getMessage("beanCompatType00",javaType.getName()));
      beanCompatErrs.add(javaType);
    }
    return false;
  }
  if (javaType.getName().startsWith("java.") || javaType.getName().startsWith("javax.")) {
    if (issueErrors && !beanCompatErrs.contains(javaType)) {
      log.warn(Messages.getMessage("beanCompatPkg00",javaType.getName()));
      beanCompatErrs.add(javaType);
    }
    return false;
  }
  if (JavaUtils.isEnumClass(javaType)) {
    return true;
  }
  if (!java.lang.Throwable.class.isAssignableFrom(javaType)) {
    try {
      javaType.getConstructor(new Class[]{});
    }
 catch (    java.lang.NoSuchMethodException e) {
      if (issueErrors && !beanCompatErrs.contains(javaType)) {
        log.warn(Messages.getMessage("beanCompatConstructor00",javaType.getName()));
        beanCompatErrs.add(javaType);
      }
      return false;
    }
  }
  Class superClass=javaType.getSuperclass();
  if ((superClass != null) && (superClass != java.lang.Object.class) && (superClass != java.lang.Exception.class)&& (superClass != java.lang.Throwable.class)&& (superClass != java.rmi.RemoteException.class)&& (superClass != org.apache.axis.AxisFault.class)&& ((stopClasses == null) || !(stopClasses.contains(superClass.getName())))) {
    if (!isBeanCompatible(superClass,false)) {
      if (issueErrors && !beanCompatErrs.contains(javaType)) {
        log.warn(Messages.getMessage("beanCompatExtends00",javaType.getName(),superClass.getName(),javaType.getName()));
        beanCompatErrs.add(javaType);
      }
      return false;
    }
  }
  return true;
}

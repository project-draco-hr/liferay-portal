{
  if (!PropsValues.AUTH_TOKEN_CHECK_ENABLED) {
    return;
  }
  String sharedSecret=ParamUtil.getString(request,"p_auth_secret");
  if (AuthTokenWhitelistUtil.isValidSharedSecret(sharedSecret)) {
    return;
  }
  long companyId=PortalUtil.getCompanyId(request);
  if (AuthTokenWhitelistUtil.isCSRFOrigintWhitelisted(companyId,origin)) {
    return;
  }
  if (origin.equals(SecurityPortletContainerWrapper.class.getName())) {
    String ppid=ParamUtil.getString(request,"p_p_id");
    String portletNamespace=PortalUtil.getPortletNamespace(ppid);
    String strutsAction=ParamUtil.getString(request,portletNamespace + "struts_action");
    if (AuthTokenWhitelistUtil.isPortletCSRFWhitelisted(companyId,ppid,strutsAction)) {
      return;
    }
  }
  String csrfToken=ParamUtil.getString(request,"p_auth");
  if (Validator.isNull(csrfToken)) {
    csrfToken=GetterUtil.getString(request.getHeader("X-CSRF-Token"));
  }
  String sessionToken=getSessionAuthenticationToken(request,_CSRF,false);
  if (!csrfToken.equals(sessionToken)) {
    throw new PrincipalException.MustBeAuthenticated(String.valueOf(PortalUtil.getUserId(request)));
  }
}

{
  long pk=nextLong();
  TasksReview newTasksReview=_persistence.create(pk);
  newTasksReview.setGroupId(nextLong());
  newTasksReview.setCompanyId(nextLong());
  newTasksReview.setUserId(nextLong());
  newTasksReview.setUserName(randomString());
  newTasksReview.setCreateDate(nextDate());
  newTasksReview.setModifiedDate(nextDate());
  newTasksReview.setProposalId(nextLong());
  newTasksReview.setAssignedByUserId(nextLong());
  newTasksReview.setAssignedByUserName(randomString());
  newTasksReview.setStage(nextInt());
  newTasksReview.setCompleted(randomBoolean());
  newTasksReview.setRejected(randomBoolean());
  _persistence.update(newTasksReview);
  TasksReview existingTasksReview=_persistence.findByPrimaryKey(newTasksReview.getPrimaryKey());
  assertEquals(existingTasksReview.getReviewId(),newTasksReview.getReviewId());
  assertEquals(existingTasksReview.getGroupId(),newTasksReview.getGroupId());
  assertEquals(existingTasksReview.getCompanyId(),newTasksReview.getCompanyId());
  assertEquals(existingTasksReview.getUserId(),newTasksReview.getUserId());
  assertEquals(existingTasksReview.getUserName(),newTasksReview.getUserName());
  assertEquals(existingTasksReview.getCreateDate(),newTasksReview.getCreateDate());
  assertEquals(existingTasksReview.getModifiedDate(),newTasksReview.getModifiedDate());
  assertEquals(existingTasksReview.getProposalId(),newTasksReview.getProposalId());
  assertEquals(existingTasksReview.getAssignedByUserId(),newTasksReview.getAssignedByUserId());
  assertEquals(existingTasksReview.getAssignedByUserName(),newTasksReview.getAssignedByUserName());
  assertEquals(existingTasksReview.getStage(),newTasksReview.getStage());
  assertEquals(existingTasksReview.getCompleted(),newTasksReview.getCompleted());
  assertEquals(existingTasksReview.getRejected(),newTasksReview.getRejected());
}

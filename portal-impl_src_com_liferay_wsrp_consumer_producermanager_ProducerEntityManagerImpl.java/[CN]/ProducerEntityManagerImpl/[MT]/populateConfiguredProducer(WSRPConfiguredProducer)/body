{
  long id=producer.getConfiguredProducerId();
  String name=producer.getName();
  String urlString=producer.getProducerURL();
  String markupURL=producer.getProducerMarkupURL();
  String version=producer.getProducerVersion();
  String identityPropagationType=producer.getIdentityPropagationType();
  int status=producer.getStatus();
  ProducerEntityStatus entityStatus=ProducerEntityStatus.getProducerEntityStatus((short)status);
  String registrationDataXML=producer.getRegistrationData();
  String registrationContextXML=producer.getRegistrationContext();
  String serviceDescriptionXML=producer.getServiceDescription();
  String userCategoryXML=producer.getUserCategoryMapping();
  long sdLastModified=-1;
  String lastModified=null;
  sdLastModified=producer.getSdLastModified();
  lastModified=Long.toString(sdLastModified);
  URL url=null;
  try {
    url=new URL(urlString);
  }
 catch (  MalformedURLException mfue) {
    throw new WSRPConsumerException("ProducerEntityManagerImpl failed to create URL urlString=" + urlString,mfue);
  }
  RegistrationData registrationData=getRegistrationDataFromXML(registrationDataXML);
  RegistrationContext registrationContext=getRegistrationContextFromXML(registrationContextXML);
  ServiceDescription serviceDescription=getServiceDesctionFromXML(serviceDescriptionXML);
  Map userCategoryMap=getConsumerObjectFactory().getMap(userCategoryXML);
  ProducerEntity pe=new ProducerEntityImpl(Long.toString(id),name,url,WSRPVersion.fromValue(version),markupURL,entityStatus,registrationData,registrationContext,serviceDescription,userCategoryMap,null,null,sdLastModified,lastModified,producer.getEntityVersion(),identityPropagationType,null);
  return pe;
}

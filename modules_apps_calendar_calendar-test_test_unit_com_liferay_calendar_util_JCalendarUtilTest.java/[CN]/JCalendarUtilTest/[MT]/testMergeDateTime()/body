{
  Calendar dateJCalendar=CalendarFactoryUtil.getCalendar(RandomTestUtil.randomInt(2000,2100),RandomTestUtil.randomInt(0,12),RandomTestUtil.randomInt(1,29),RandomTestUtil.randomInt(0,24),RandomTestUtil.randomInt(0,60),RandomTestUtil.randomInt(0,60),RandomTestUtil.randomInt(0,60),_losAngelesTimeZone);
  Calendar timeJCalendar=CalendarFactoryUtil.getCalendar(RandomTestUtil.randomInt(2000,2100),RandomTestUtil.randomInt(0,12),RandomTestUtil.randomInt(1,29),RandomTestUtil.randomInt(0,24),RandomTestUtil.randomInt(0,60),RandomTestUtil.randomInt(0,60),RandomTestUtil.randomInt(0,60),_madridTimeZone);
  Calendar jCalendar=JCalendarUtil.mergeDateTime(dateJCalendar,timeJCalendar,_calcuttaTimeZone);
  Assert.assertEquals(dateJCalendar.get(Calendar.YEAR),jCalendar.get(Calendar.YEAR));
  Assert.assertEquals(dateJCalendar.get(Calendar.MONTH),jCalendar.get(Calendar.MONTH));
  Assert.assertEquals(dateJCalendar.get(Calendar.DAY_OF_MONTH),jCalendar.get(Calendar.DAY_OF_MONTH));
  Assert.assertEquals(timeJCalendar.get(Calendar.HOUR),jCalendar.get(Calendar.HOUR));
  Assert.assertEquals(timeJCalendar.get(Calendar.MINUTE),jCalendar.get(Calendar.MINUTE));
  Assert.assertEquals(timeJCalendar.get(Calendar.SECOND),jCalendar.get(Calendar.SECOND));
  Assert.assertEquals(timeJCalendar.get(Calendar.MILLISECOND),jCalendar.get(Calendar.MILLISECOND));
  Assert.assertEquals(timeJCalendar.get(Calendar.AM_PM),jCalendar.get(Calendar.AM_PM));
  Assert.assertEquals(_calcuttaTimeZone,jCalendar.getTimeZone());
}

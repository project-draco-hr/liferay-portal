{
  Calendar dateJCalendar=CalendarFactoryUtil.getCalendar(randomYear(),randomMonth(),randomDayOfMonth(),randomHour(),randomMinute(),randomSecond(),randomMillisecond(),_losAngelesTimeZone);
  Calendar timeJCalendar=CalendarFactoryUtil.getCalendar(randomYear(),randomMonth(),randomDayOfMonth(),randomHour(),randomMinute(),randomSecond(),randomMillisecond(),_madridTimeZone);
  Calendar jCalendar=JCalendarUtil.mergeJCalendar(dateJCalendar,timeJCalendar,_calcuttaTimeZone);
  Assert.assertEquals(dateJCalendar.get(Calendar.YEAR),jCalendar.get(Calendar.YEAR));
  Assert.assertEquals(dateJCalendar.get(Calendar.MONTH),jCalendar.get(Calendar.MONTH));
  Assert.assertEquals(dateJCalendar.get(Calendar.DAY_OF_MONTH),jCalendar.get(Calendar.DAY_OF_MONTH));
  Assert.assertEquals(timeJCalendar.get(Calendar.HOUR),jCalendar.get(Calendar.HOUR));
  Assert.assertEquals(timeJCalendar.get(Calendar.MINUTE),jCalendar.get(Calendar.MINUTE));
  Assert.assertEquals(timeJCalendar.get(Calendar.SECOND),jCalendar.get(Calendar.SECOND));
  Assert.assertEquals(timeJCalendar.get(Calendar.MILLISECOND),jCalendar.get(Calendar.MILLISECOND));
  Assert.assertEquals(timeJCalendar.get(Calendar.AM_PM),jCalendar.get(Calendar.AM_PM));
  Assert.assertEquals(_calcuttaTimeZone,jCalendar.getTimeZone());
}
